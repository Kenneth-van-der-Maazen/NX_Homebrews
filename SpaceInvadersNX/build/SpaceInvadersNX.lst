0000000000000000 a __start__
0000000000000000 0000000000000008 D _glapi_tls_Dispatch
0000000000000000 T _start
0000000000000000 d _TLS_MODULE_BASE_
0000000000000008 0000000000000008 b _egl_TLS
0000000000000010 0000000000000008 B _glapi_tls_Context
0000000000000018 0000000000000004 B g_bsdErrno
000000000000001c 0000000000000004 B g_bsdResult
0000000000000020 0000000000000004 b g_fsPriority
0000000000000024 0000000000000004 b fsdev_last_result
0000000000000028 0000000000000401 B __nx_dev_path_buf
00000000000000e0 T __nx_exit
00000000000000f0 T __nx_mod0
0000000000000124 0000000000000034 W __gnu_cxx::__throw_concurrence_lock_error()
0000000000000158 0000000000000034 W __gnu_cxx::__throw_concurrence_unlock_error()
000000000000018c 0000000000000034 W __gnu_cxx::__throw_concurrence_broadcast_error()
00000000000001c0 0000000000000050 t std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::~basic_string() [clone .isra.0]
0000000000000210 0000000000000050 t std::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string() [clone .isra.0]
0000000000000260 0000000000000014 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, unsigned long, std::allocator<char> const&) [clone .part.0]
0000000000000260 0000000000000014 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .part.0]
0000000000000260 0000000000000014 t std::__cxx11::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::basic_string(wchar_t const*, unsigned long, std::allocator<wchar_t> const&) [clone .part.0]
0000000000000274 0000000000000034 T std::__throw_bad_alloc()
00000000000002a8 0000000000000034 T std::__throw_bad_array_new_length()
00000000000002dc 0000000000000034 T std::__throw_bad_cast()
0000000000000310 0000000000000054 T std::__throw_logic_error(char const*)
0000000000000364 0000000000000054 T std::__throw_length_error(char const*)
00000000000003b8 0000000000000054 T std::__throw_out_of_range(char const*)
000000000000040c 000000000000000c T std::__throw_out_of_range_fmt(char const*, ...)
0000000000000418 0000000000000054 T std::__throw_runtime_error(char const*)
000000000000046c 0000000000000180 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_replace_cold(char*, unsigned long, char const*, unsigned long, unsigned long)
00000000000005ec 0000000000000050 t std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::~basic_string() [clone .isra.0]
000000000000063c 0000000000000050 t std::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string() [clone .isra.0]
000000000000068c 0000000000000194 W std::__cxx11::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_M_replace_cold(wchar_t*, unsigned long, wchar_t const*, unsigned long, unsigned long)
0000000000000820 0000000000000034 T __cxa_throw_bad_array_new_length
0000000000000854 0000000000000010 T std::terminate()
0000000000000864 0000000000000010 T std::unexpected()
0000000000000874 00000000000000a0 T std::__throw_ios_failure(char const*)
0000000000000914 0000000000000044 T __cxa_call_terminate
0000000000000960 0000000000000074 t _GLOBAL__sub_D_spaceshipX
00000000000009e0 000000000000000c t _GLOBAL__sub_D_builtin_functions.cpp
00000000000009f0 00000000000008a0 t _GLOBAL__sub_D_glsl_types.cpp
0000000000001290 000000000000006c t _GLOBAL__sub_D_builtin_types.cpp
0000000000001300 000000000000000c t _GLOBAL__sub_D.00090_globals_io.cc
0000000000001320 0000000000000034 t _GLOBAL__sub_D_eh_globals.cc
0000000000001360 0000000000000034 T exit
00000000000013a0 00000000000009c8 T main
0000000000001d70 0000000000000114 t _GLOBAL__sub_I_spaceshipX
0000000000001e90 0000000000000014 t _GLOBAL__sub_I_builtin_functions.cpp
0000000000001eb0 0000000000001f80 t _GLOBAL__sub_I_glsl_types.cpp
0000000000003e30 0000000000000044 t _GLOBAL__sub_I_ir_to_mesa.cpp
0000000000003e80 0000000000000090 t _GLOBAL__sub_I_st_glsl_to_tgsi.cpp
0000000000003f10 0000000000000f08 t _GLOBAL__sub_I_builtin_types.cpp
0000000000004e20 0000000000000048 t _GLOBAL__sub_I_nv50_ir_ra.cpp
0000000000004e80 000000000000000c t _GLOBAL__sub_I.00090_globals_io.cc
0000000000004ea0 00000000000000a4 t _GLOBAL__sub_I_cxx11_wlocale_inst.cc
0000000000004f60 0000000000000108 t _GLOBAL__sub_I_locale_inst.cc
0000000000005080 0000000000000108 t _GLOBAL__sub_I_wlocale_inst.cc
00000000000051a0 000000000000020c t _GLOBAL__sub_I_eh_alloc.cc
00000000000053c0 0000000000000038 t _GLOBAL__sub_I_eh_globals.cc
0000000000005400 00000000000000a4 t _GLOBAL__sub_I_cxx11_locale_inst.cc
00000000000054b0 0000000000000024 t _GLOBAL__sub_I_fastmix.cpp
00000000000054e0 t __do_global_dtors_aux
0000000000005540 t frame_dummy
0000000000005570 0000000000000008 W std::ctype<char>::do_widen(char) const
0000000000005580 00000000000000d8 T initStars()
0000000000005660 000000000000008c T updateStars()
00000000000056f0 0000000000000064 T renderStars(SDL_Renderer*)
0000000000005760 0000000000000084 T renderText(SDL_Renderer*, char const*, _TTF_Font*, int, int)
00000000000057f0 0000000000000064 T fireBullet()
0000000000005860 000000000000003c T updateBullets()
00000000000058a0 000000000000009c T renderBullets(SDL_Renderer*)
0000000000005940 0000000000000130 T loadEnemies(SDL_Renderer*)
0000000000005a70 0000000000000098 T respawnEnemy(Enemy&)
0000000000005b10 00000000000000fc T resetGame()
0000000000005c10 0000000000000168 T handleEvents(PadState*)
0000000000005d80 0000000000000064 t RWread
0000000000005df0 00000000000001dc t TTF_initFontMetrics
0000000000005fd0 0000000000000b88 t Load_Glyph
0000000000006b60 0000000000000084 t UCS2_to_UTF8_len
0000000000006bf0 00000000000000c8 t UCS2_to_UTF8
0000000000006cc0 0000000000000168 t AllocateAlignedPixels
0000000000006e30 00000000000000ac t Create_Surface_Solid
0000000000006ee0 0000000000000184 t Create_Surface_Shaded
0000000000007070 0000000000000098 t Create_Surface_Blended
0000000000007110 00000000000000ac t Create_Surface_LCD.isra.0
00000000000071c0 00000000000000b4 t clip_glyph.isra.0
0000000000007280 0000000000000160 t Draw_Line.isra.0
00000000000073e0 000000000000006c t Flush_Cache
0000000000007450 00000000000006e0 t TTF_Size_Internal
0000000000007b30 0000000000000698 t Render_Line_64_Blended
00000000000081d0 00000000000006a4 t Render_Line_64_Blended_SP
0000000000008880 00000000000033fc t Render_Line
000000000000bc80 000000000000039c t TTF_Render_Internal
000000000000c020 000000000000005c T TTF_Init
000000000000c080 00000000000000e0 T TTF_SetFontSizeDPI
000000000000c160 000000000000007c T TTF_CloseFont
000000000000c1e0 000000000000001c T TTF_SetFontKerning
000000000000c200 00000000000002cc T TTF_OpenFontIndexDPIRW
000000000000c4d0 0000000000000064 T TTF_OpenFontIndexDPI
000000000000c540 000000000000000c T TTF_OpenFontIndex
000000000000c550 0000000000000008 T TTF_OpenFont
000000000000c560 0000000000000014 T TTF_RenderText_Solid
000000000000c580 0000000000000044 T TTF_Quit
000000000000c5d0 00000000000000cc T IMG_Init
000000000000c6a0 00000000000001b4 T IMG_LoadTyped_RW
000000000000c860 0000000000000060 T IMG_Load
000000000000c8c0 000000000000005c T IMG_LoadTexture
000000000000c920 00000000000000b4 t IMG_isICOCUR
000000000000c9e0 00000000000006d8 t LoadICOCUR_RW.constprop.0
000000000000d0c0 00000000000000ac T IMG_isBMP
000000000000d170 0000000000000008 T IMG_isICO
000000000000d180 0000000000000008 T IMG_isCUR
000000000000d190 0000000000000be8 T IMG_LoadBMP_RW
000000000000dd80 0000000000000008 T IMG_LoadICO_RW
000000000000dd90 0000000000000008 T IMG_LoadCUR_RW
000000000000dda0 0000000000000078 t GetDataBlock
000000000000de20 00000000000000b0 t ReadColorMap
000000000000ded0 0000000000000150 t GetCode.part.0
000000000000e020 00000000000003d8 t LWZReadByte.part.1
000000000000e400 00000000000006a0 t ReadImage.isra.2
000000000000eaa0 00000000000000e4 T IMG_isGIF
000000000000eb90 00000000000004d4 T IMG_LoadGIF_RW
000000000000f070 0000000000000004 t init_source
000000000000f080 000000000000005c t fill_input_buffer
000000000000f0e0 000000000000007c t skip_input_data
000000000000f160 0000000000000018 t my_error_exit
000000000000f180 0000000000000004 t output_no_message
000000000000f190 0000000000000004 t term_source
000000000000f1a0 00000000000000c4 T IMG_InitJPG
000000000000f270 00000000000001ac T IMG_isJPG
000000000000f420 00000000000002e0 T IMG_LoadJPG_RW
000000000000f700 00000000000000e4 T IMG_isLBM
000000000000f7f0 0000000000000ad4 T IMG_LoadLBM_RW
00000000000102d0 00000000000000a8 T IMG_isPCX
0000000000010380 0000000000000544 T IMG_LoadPCX_RW
00000000000108d0 000000000000002c t png_read_data
0000000000010900 0000000000000160 T IMG_InitPNG
0000000000010a60 00000000000000c0 T IMG_isPNG
0000000000010b20 0000000000000568 T IMG_LoadPNG_RW
0000000000011090 00000000000000e8 t ReadNumber
0000000000011180 00000000000000ac T IMG_isPNM
0000000000011230 0000000000000424 T IMG_LoadPNM_RW
0000000000011660 000000000000007c t nsvg__xformMultiply
00000000000116e0 0000000000000108 t nsvg__xformInverse
00000000000117f0 0000000000000128 t nsvg__convertToPixels
0000000000011920 00000000000000d8 t nsvg__parseUnits
0000000000011a00 0000000000000048 t nsvg__scaleGradient
0000000000011a50 0000000000000020 t nsvg__cmpEdge
0000000000011a70 0000000000000058 t nsvg__applyOpacity
0000000000011ad0 00000000000002f4 t nsvg__parseElement
0000000000011dd0 0000000000000050 t nsvg__strndup
0000000000011e20 0000000000000108 t nsvg__content
0000000000011f30 0000000000000048 t nsvg__xformPremultiply
0000000000011f80 000000000000026c t nsvg__parseColor
00000000000121f0 0000000000000048 t nsvg__parseOpacity
0000000000012240 000000000000004c t nsvg__parseCoordinateRaw
0000000000012290 0000000000000040 t nsvg__actualLength
00000000000122d0 00000000000002b8 t nsvg__createGradient
0000000000012590 0000000000000068 t nsvg__normalize
0000000000012600 00000000000001d8 t nsvg__atof
00000000000127e0 0000000000000084 t nsvg__addPoint
0000000000012870 00000000000000a0 t nsvg__lineTo
0000000000012910 000000000000005c t nsvg__cubicBezTo
0000000000012970 0000000000000034 t nsvg__moveTo
00000000000129b0 00000000000000e8 t nsvg__addPathPoint
0000000000012aa0 00000000000001a0 t nsvg__flattenCubicBez
0000000000012c40 0000000000000080 t nsvg__appendPathPoint
0000000000012cc0 00000000000000a4 t nsvg__vecang
0000000000012d70 0000000000000048 t nsvg__deletePaths
0000000000012dc0 00000000000002f4 t nsvg__curveBounds
00000000000130c0 00000000000001fc t nsvg__addPath
00000000000132c0 00000000000003bc t nsvg__initPaint.part.9
0000000000013680 00000000000000b4 t nsvg__endElement
0000000000013740 00000000000001a0 t nsvg__prepareStroke.isra.12
00000000000138e0 00000000000000e4 t nsvg__addEdge
00000000000139d0 00000000000001bc t nsvg__roundCap.isra.23
0000000000013b90 00000000000001b4 t nsvg__getLocalBounds.isra.26
0000000000013d50 000000000000033c t nsvg__addShape
0000000000014090 00000000000000d8 t nsvg__fillScanline.constprop.30
0000000000014170 00000000000008d0 t nsvg__rasterizeSortedEdges
0000000000014a40 000000000000020c t nsvg__parseNumber.constprop.34
0000000000014c50 0000000000000168 t nsvg__parseTransformArgs.constprop.33
0000000000014dc0 0000000000000408 t nsvg__parseTransform
00000000000151d0 0000000000000988 t nsvg__parseAttr
0000000000015b60 00000000000001a4 t nsvg__parseNameValue
0000000000015d10 0000000000000114 t nsvg__parseStyle
0000000000015e30 0000000000000070 t nsvg__parseAttribs
0000000000015ea0 000000000000015c t nsvg__parseGradientStop
0000000000016000 0000000000000314 t nsvg__parseGradient
0000000000016320 00000000000000b4 t nsvg__getNextPathItem
00000000000163e0 0000000000000134 t nsvg__parsePoly
0000000000016520 0000000000001c40 t nsvg__startElement
0000000000018160 00000000000007d8 t nsvg__expandStroke
0000000000018940 0000000000000164 T nsvg__parseXML
0000000000018ab0 00000000000000b0 T nsvgDelete
0000000000018b60 00000000000005c0 T nsvgParse
0000000000019120 0000000000000074 T nsvgDeleteRasterizer
00000000000191a0 0000000000000050 T nsvgCreateRasterizer
00000000000191f0 0000000000000aec T nsvgRasterize
0000000000019ce0 00000000000000b8 T IMG_isSVG
0000000000019da0 0000000000000100 T IMG_LoadSVG_RW
0000000000019ea0 00000000000006dc T IMG_LoadTGA_RW
000000000001a580 0000000000000020 T IMG_InitTIF
000000000001a5a0 0000000000000008 T IMG_isTIF
000000000001a5b0 0000000000000008 T IMG_LoadTIF_RW
000000000001a5c0 0000000000000040 t free_xcf_header
000000000001a600 0000000000000050 t load_xcf_tile_none
000000000001a650 0000000000000128 t xcf_read_property
000000000001a780 00000000000000b4 t read_string
000000000001a840 0000000000000204 t load_xcf_tile_rle
000000000001aa50 00000000000000ac T IMG_isXCF
000000000001ab00 0000000000000d2c T IMG_LoadXCF_RW
000000000001b830 00000000000000a8 t get_colorhash.isra.0
000000000001b8e0 00000000000001a4 t get_next_line.part.1
000000000001ba90 0000000000000788 t load_xpm
000000000001c220 00000000000000ac T IMG_isXPM
000000000001c2d0 0000000000000014 T IMG_LoadXPM_RW
000000000001c2f0 0000000000000088 t get_line.constprop.0
000000000001c380 000000000000010c t get_header
000000000001c490 0000000000000078 T IMG_isXV
000000000001c510 0000000000000148 T IMG_LoadXV_RW
000000000001c660 0000000000000170 t webp_getinfo
000000000001c7d0 0000000000000040 T IMG_InitWEBP
000000000001c810 0000000000000008 T IMG_isWEBP
000000000001c820 0000000000000234 T IMG_LoadWEBP_RW
000000000001ca60 000000000000007c t _Mix_remove_all_effects
000000000001cae0 0000000000000044 t _Mix_channel_done_playing
000000000001cb30 00000000000000d4 t Mix_DoEffects
000000000001cc10 00000000000000b0 t add_chunk_decoder
000000000001ccc0 000000000000061c T Mix_LoadWAV_RW
000000000001d2e0 00000000000000bc T Mix_FreeChunk
000000000001d3a0 00000000000000b4 T Mix_Volume
000000000001d3a0 00000000000000b4 t Mix_Volume.localalias.9
000000000001d460 00000000000003ec t mix_channels
000000000001d850 00000000000000ec T Mix_HaltChannel
000000000001d850 00000000000000ec t Mix_HaltChannel.localalias.8
000000000001d940 00000000000000bc T Mix_Playing
000000000001da00 0000000000000200 T Mix_PlayChannelTimed
000000000001dc00 0000000000000060 t _Mix_UnregisterAllEffects_locked
000000000001dc60 0000000000000040 T Mix_UnregisterAllEffects
000000000001dca0 00000000000000d4 T Mix_CloseAudio
000000000001dd80 00000000000001cc T Mix_OpenAudioDevice
000000000001df50 000000000000000c T Mix_OpenAudio
000000000001df60 000000000000000c t Mix_LockAudio
000000000001df70 000000000000000c t Mix_UnlockAudio
000000000001df80 0000000000000058 t music_internal_halt
000000000001dfe0 000000000000006c t music_internal_playing
000000000001e050 00000000000000b0 t add_music_decoder
000000000001e100 0000000000000308 t open_music_type.part.0
000000000001e410 0000000000000008 t get_num_music_interfaces
000000000001e420 0000000000000010 t get_music_interface
000000000001e430 0000000000000100 t music_pcm_getaudio
000000000001e530 00000000000001b4 T music_mixer
000000000001e6f0 0000000000000108 t load_music_type
000000000001e800 000000000000001c t open_music_type
000000000001e820 00000000000000b4 t detect_music_type_from_magic
000000000001e8e0 0000000000000350 T Mix_LoadMUSType_RW
000000000001ec30 00000000000003e0 T Mix_LoadMUS
000000000001f010 000000000000007c T Mix_FreeMusic
000000000001f090 0000000000000220 T Mix_FadeInMusicPos
000000000001f2b0 000000000000000c T Mix_PlayMusic
000000000001f2c0 0000000000000078 T Mix_VolumeMusic
000000000001f340 000000000000008c t open_music
000000000001f3d0 000000000000003c T Mix_HaltMusic
000000000001f410 0000000000000108 T Mix_FadeOutMusic
000000000001f520 0000000000000080 T Mix_SetMusicCMD
000000000001f5a0 00000000000000a0 t close_music
000000000001f640 0000000000000068 t MODPLUG_Load
000000000001f6b0 0000000000000018 t MODPLUG_Unload
000000000001f6d0 00000000000000dc t MODPLUG_Open
000000000001f7b0 0000000000000014 t MODPLUG_SetVolume
000000000001f7d0 0000000000000030 t MODPLUG_Play
000000000001f800 0000000000000038 t MODPLUG_Seek
000000000001f840 000000000000004c t MODPLUG_Delete
000000000001f890 0000000000000168 T MODPLUG_CreateFromRW
000000000001fa00 0000000000000010 t MODPLUG_GetAudio
000000000001fa10 00000000000000e4 t MODPLUG_GetSome
000000000001fb00 00000000000000b8 t MPG123_Load
000000000001fbc0 0000000000000018 t MPG123_Unload
000000000001fbe0 0000000000000010 t rwops_read
000000000001fbf0 0000000000000008 t rwops_seek
000000000001fc00 0000000000000004 t rwops_cleanup
000000000001fc10 0000000000000008 t MPG123_SetVolume
000000000001fc20 000000000000000c t MPG123_Close
000000000001fc30 0000000000000074 t MPG123_Delete
000000000001fcb0 0000000000000034 t MPG123_Open
000000000001fcf0 0000000000000010 t MPG123_GetAudio
000000000001fd00 0000000000000028 t mpg_err
000000000001fd30 0000000000000074 t MPG123_Seek
000000000001fdb0 000000000000000c t MPG123_Play
000000000001fdc0 000000000000020c t MPG123_CreateFromRW
000000000001ffd0 00000000000001e4 t MPG123_GetSome
00000000000201c0 000000000000007c t OGG_Load
0000000000020240 0000000000000018 t OGG_Unload
0000000000020260 000000000000001c t sdl_read_func
0000000000020280 0000000000000018 t sdl_seek_func
00000000000202a0 0000000000000010 t sdl_tell_func
00000000000202b0 0000000000000008 t OGG_SetVolume
00000000000202c0 0000000000000060 t OGG_Delete
0000000000020320 00000000000001dc t set_ov_error
0000000000020500 0000000000000050 t OGG_Seek
0000000000020550 000000000000000c t OGG_Play
0000000000020560 0000000000000010 t OGG_GetAudio
0000000000020570 000000000000010c t OGG_UpdateSection
0000000000020680 0000000000000304 t OGG_CreateFromRW
0000000000020990 00000000000001d0 t OGG_GetSome
0000000000020b60 000000000000005c t OPUS_Load
0000000000020bc0 0000000000000018 t OPUS_Unload
0000000000020be0 0000000000000020 t sdl_read_func
0000000000020c00 000000000000001c t sdl_seek_func
0000000000020c20 0000000000000010 t sdl_tell_func
0000000000020c30 0000000000000008 t OPUS_SetVolume
0000000000020c40 0000000000000060 t OPUS_Delete
0000000000020ca0 00000000000001f8 t set_op_error
0000000000020ea0 0000000000000050 t OPUS_Seek
0000000000020ef0 000000000000000c t OPUS_Play
0000000000020f00 0000000000000010 t OPUS_GetAudio
0000000000020f10 0000000000000108 t OPUS_UpdateSection
0000000000021020 0000000000000144 t OPUS_CreateFromRW
0000000000021170 0000000000000140 t OPUS_GetSome
00000000000212b0 0000000000000044 t TIMIDITY_Delete
0000000000021300 0000000000000124 T TIMIDITY_CreateFromRW
0000000000021430 0000000000000004 t TIMIDITY_Close
0000000000021440 0000000000000030 t TIMIDITY_Seek
0000000000021470 0000000000000010 t TIMIDITY_GetAudio
0000000000021480 0000000000000038 t TIMIDITY_Play
00000000000214c0 0000000000000008 t TIMIDITY_SetVolume
00000000000214d0 0000000000000004 t TIMIDITY_Open
00000000000214e0 000000000000011c t TIMIDITY_GetSome
0000000000021600 0000000000000008 t WAV_SetVolume
0000000000021610 0000000000000074 t WAV_Play
0000000000021690 000000000000005c t WAV_Delete
00000000000216f0 0000000000000010 t WAV_GetAudio
0000000000021700 000000000000022c t WAV_GetSome
0000000000021930 0000000000000738 t WAV_CreateFromRW
0000000000022070 0000000000000164 t recompute_freq
00000000000221e0 0000000000000114 t recompute_amp
0000000000022300 00000000000000a0 t adjust_volume
00000000000223a0 00000000000000c0 t do_compute_data
0000000000022460 0000000000000140 t compute_data
00000000000225a0 0000000000000324 t start_note
00000000000228d0 0000000000000048 t finish_note.part.2
0000000000022920 00000000000000b4 t note_off
00000000000229e0 00000000000000a4 t Timidity_Start
0000000000022a90 0000000000000280 t Timidity_Seek
0000000000022d10 0000000000000630 t Timidity_PlaySome
0000000000023340 00000000000000c4 t Timidity_SetVolume
0000000000023410 0000000000000810 t read_config_file
0000000000023c20 00000000000000b4 t Timidity_Init_NoConfig
0000000000023ce0 00000000000000a4 t Timidity_Init
0000000000023d90 0000000000000390 t Timidity_LoadSong
0000000000024120 0000000000000074 t Timidity_FreeSong
00000000000241a0 00000000000000e4 t Timidity_Exit
0000000000024290 000000000000002c t _Mix_InitEffects
00000000000242c0 0000000000000004 t _Mix_DeinitEffects
00000000000242d0 000000000000059c t Mix_LoadAIFF_RW
0000000000024870 0000000000000538 t voc_get_block.isra.0
0000000000024db0 0000000000000334 t Mix_LoadVOC_RW
00000000000250f0 0000000000000184 t open_file
0000000000025280 0000000000000004 t safe_malloc
0000000000025290 0000000000000080 t add_to_pathlist
0000000000025310 000000000000004c t free_pathlist
0000000000025360 0000000000000074 t free_instrument
00000000000253e0 000000000000099c t load_instrument.isra.5
0000000000025d80 0000000000000198 t fill_bank
0000000000025f20 0000000000000088 t load_missing_instruments
0000000000025fb0 00000000000000a4 t free_instruments
0000000000026060 0000000000000058 t set_default_instrument
00000000000260c0 00000000000000dc t recompute_envelope
00000000000261a0 0000000000000108 t apply_envelope_to_amp
00000000000262b0 0000000000000168 t update_signal
0000000000026420 0000000000000780 t mix_voice
0000000000026ba0 0000000000000048 T s32tos8
0000000000026bf0 000000000000004c T s32tou8
0000000000026c40 0000000000000048 T s32tos16
0000000000026c90 000000000000004c T s32tou16
0000000000026ce0 000000000000004c T s32tos16x
0000000000026d30 0000000000000050 T s32tou16x
0000000000026d80 0000000000000038 T s32tof32
0000000000026dc0 0000000000000030 T s32tos32
0000000000026df0 0000000000000034 T s32tos32x
0000000000026e30 00000000000008e8 t read_track
0000000000027720 0000000000000754 t read_midi_file
0000000000027e80 00000000000001b8 t update_vibrato.isra.2
0000000000028040 0000000000000874 t resample_voice
00000000000288c0 00000000000002f0 t pre_resample
0000000000028bb0 000000000000007c t _Eff_PositionDeinit
0000000000028c30 000000000000000c T SDL_ExitProcess
0000000000028c40 0000000000000274 T SDL_QuitSubSystem
0000000000028ec0 0000000000000218 T SDL_InitSubSystem
00000000000290e0 0000000000000004 T SDL_Init
00000000000290f0 0000000000000090 T SDL_WasInit
0000000000029180 0000000000000058 T SDL_Quit
00000000000291e0 000000000000000c T SDL_GetPlatform
00000000000291f0 0000000000000080 t debug_print
0000000000029270 00000000000003a4 t SDL_PromptAssertion
0000000000029620 000000000000016c T SDL_ReportAssertion
0000000000029790 000000000000002c T SDL_ResetAssertionReport
00000000000297c0 00000000000000e0 T SDL_AssertionsQuit
00000000000298a0 0000000000000154 T SDL_SetError
0000000000029a00 0000000000000030 T SDL_GetError
0000000000029a30 0000000000000018 T SDL_ClearError
0000000000029a50 0000000000000068 T SDL_Error
0000000000029ac0 0000000000000170 T SDL_SetHintWithPriority
0000000000029c30 0000000000000008 T SDL_SetHint
0000000000029c40 0000000000000080 T SDL_GetHint
0000000000029cc0 0000000000000048 T SDL_GetStringBoolean
0000000000029d10 0000000000000024 T SDL_GetHintBoolean
0000000000029d40 00000000000000b0 T SDL_DelHintCallback
0000000000029df0 0000000000000180 T SDL_AddHintCallback
0000000000029f70 0000000000000070 T SDL_ClearHints
0000000000029fe0 0000000000000040 t SDL_LogOutput
000000000002a020 0000000000000038 T SDL_LogInit
000000000002a060 0000000000000070 T SDL_LogGetPriority
000000000002a0d0 0000000000000068 T SDL_LogResetPriorities
000000000002a140 0000000000000030 T SDL_LogQuit
000000000002a170 00000000000001e8 T SDL_LogMessageV
000000000002a360 0000000000000080 T SDL_Log
000000000002a3e0 0000000000000078 T SDL_LogDebug
000000000002a460 0000000000000078 T SDL_LogInfo
000000000002a4e0 0000000000000078 T SDL_LogWarn
000000000002a560 0000000000000020 T SDL_AtomicTryLock
000000000002a580 000000000000006c T SDL_AtomicLock
000000000002a5f0 0000000000000008 T SDL_AtomicUnlock
000000000002a600 0000000000000004 t SDL_AudioThreadInit_Default
000000000002a610 0000000000000008 t SDL_AudioGetDeviceBuf_Default
000000000002a620 0000000000000008 t SDL_AudioCaptureFromDevice_Default
000000000002a630 0000000000000004 t SDL_AudioDeinitialize_Default
000000000002a640 0000000000000008 t SDL_AudioOpenDevice_Default
000000000002a650 00000000000001a0 t add_audio_device
000000000002a7f0 000000000000000c t SDL_BufferQueueFillCallback
000000000002a800 0000000000000060 t SDL_BufferQueueDrainCallback
000000000002a860 0000000000000044 t SDL_AudioUnlockDevice_Default
000000000002a8b0 0000000000000044 t SDL_AudioLockDevice_Default
000000000002a900 0000000000000280 t SDL_RunAudio
000000000002ab80 00000000000000e4 t close_audio_device
000000000002ac70 0000000000000004 t SDL_AudioCloseDevice_Default
000000000002ac80 0000000000000004 t SDL_AudioFreeDeviceHandle_Default
000000000002ac90 0000000000000004 t SDL_AudioThreadDeinit_Default
000000000002aca0 0000000000000004 t SDL_AudioWaitDevice_Default
000000000002acb0 0000000000000004 t SDL_AudioPlayDevice_Default
000000000002acc0 0000000000000004 t SDL_AudioFlushCapture_Default
000000000002acd0 00000000000000bc T SDL_AddAudioDevice
000000000002ad90 0000000000000050 t SDL_AudioDetectDevices_Default
000000000002ade0 00000000000000d4 T SDL_OpenedAudioDeviceDisconnected
000000000002aec0 0000000000000244 t SDL_CaptureAudio
000000000002b110 000000000000000c T SDL_GetCurrentAudioDriver
000000000002b120 0000000000000094 T SDL_PauseAudioDevice
000000000002b1c0 0000000000000038 T SDL_LockAudioDevice
000000000002b200 0000000000000038 T SDL_UnlockAudioDevice
000000000002b240 0000000000000040 T SDL_CloseAudioDevice
000000000002b280 0000000000000160 T SDL_AudioQuit
000000000002b3e0 0000000000000390 T SDL_AudioInit
000000000002b770 000000000000004c T SDL_NextAudioFormat
000000000002b7c0 00000000000000f0 T SDL_FirstAudioFormat
000000000002b8b0 0000000000000028 T SDL_SilenceValueForFormat
000000000002b8e0 0000000000000044 T SDL_CalculateAudioSpec
000000000002b930 0000000000000ce0 t open_audio_device
000000000002c610 0000000000000008 T SDL_OpenAudioDevice
000000000002c620 000000000000007c t SDL_ConvertMonoToStereo
000000000002c6a0 0000000000000088 t SDL_ConvertMonoTo21
000000000002c730 0000000000000080 t SDL_ConvertMonoToQuad
000000000002c7b0 0000000000000084 t SDL_ConvertMonoTo41
000000000002c840 0000000000000090 t SDL_ConvertMonoTo51
000000000002c8d0 0000000000000094 t SDL_ConvertMonoTo61
000000000002c970 0000000000000088 t SDL_ConvertMonoTo71
000000000002ca00 0000000000000078 t SDL_ConvertStereoToMono
000000000002ca80 000000000000009c t SDL_ConvertStereoTo21
000000000002cb20 0000000000000094 t SDL_ConvertStereoToQuad
000000000002cbc0 0000000000000098 t SDL_ConvertStereoTo41
000000000002cc60 00000000000000a4 t SDL_ConvertStereoTo51
000000000002cd10 00000000000000a8 t SDL_ConvertStereoTo61
000000000002cdc0 000000000000009c t SDL_ConvertStereoTo71
000000000002ce60 00000000000000a4 t SDL_Convert21ToMono
000000000002cf10 00000000000000c4 t SDL_Convert21ToStereo
000000000002cfe0 00000000000000e0 t SDL_Convert21ToQuad
000000000002d0c0 00000000000000c8 t SDL_Convert21To41
000000000002d190 00000000000000d0 t SDL_Convert21To51
000000000002d260 00000000000000d4 t SDL_Convert21To61
000000000002d340 00000000000000c8 t SDL_Convert21To71
000000000002d410 000000000000008c t SDL_ConvertQuadToMono
000000000002d4a0 00000000000000c4 t SDL_ConvertQuadToStereo
000000000002d570 00000000000000c8 t SDL_ConvertQuadTo21
000000000002d640 00000000000000b4 t SDL_ConvertQuadTo41
000000000002d700 00000000000000c0 t SDL_ConvertQuadTo51
000000000002d7c0 00000000000000f4 t SDL_ConvertQuadTo61
000000000002d8c0 00000000000000b8 t SDL_ConvertQuadTo71
000000000002d980 00000000000000a8 t SDL_Convert41ToMono
000000000002da30 00000000000000f0 t SDL_Convert41ToStereo
000000000002db20 00000000000000e0 t SDL_Convert41To21
000000000002dc00 00000000000000dc t SDL_Convert41ToQuad
000000000002dce0 00000000000000dc t SDL_Convert41To51
000000000002ddc0 0000000000000110 t SDL_Convert41To61
000000000002ded0 00000000000000d4 t SDL_Convert41To71
000000000002dfb0 00000000000000ac t SDL_Convert51ToMono
000000000002e060 00000000000000f8 t SDL_Convert51ToStereo
000000000002e160 00000000000000f8 t SDL_Convert51To21
000000000002e260 00000000000000ec t SDL_Convert51ToQuad
000000000002e350 00000000000000e4 t SDL_Convert51To41
000000000002e440 0000000000000118 t SDL_Convert51To61
000000000002e560 00000000000000d8 t SDL_Convert51To71
000000000002e640 00000000000000d4 t SDL_Convert61ToMono
000000000002e720 000000000000011c t SDL_Convert61ToStereo
000000000002e840 0000000000000114 t SDL_Convert61To21
000000000002e960 0000000000000120 t SDL_Convert61ToQuad
000000000002ea80 0000000000000118 t SDL_Convert61To41
000000000002eba0 0000000000000120 t SDL_Convert61To51
000000000002ecc0 0000000000000108 t SDL_Convert61To71
000000000002edd0 00000000000000b8 t SDL_Convert71ToMono
000000000002ee90 0000000000000118 t SDL_Convert71ToStereo
000000000002efb0 0000000000000110 t SDL_Convert71To21
000000000002f0c0 000000000000010c t SDL_Convert71ToQuad
000000000002f1d0 00000000000000fc t SDL_Convert71To41
000000000002f2d0 00000000000000fc t SDL_Convert71To51
000000000002f3d0 00000000000000f8 t SDL_Convert71To61
000000000002f4d0 0000000000000014 t SDL_ResetAudioStreamResampler
000000000002f4f0 000000000000022c t SDL_Convert_Byteswap
000000000002f720 0000000000000008 t SDL_CleanupAudioStreamResampler
000000000002f730 0000000000000634 t SDL_ResampleCVT_c8
000000000002fd70 0000000000000620 t SDL_ResampleCVT_c6
0000000000030390 0000000000000638 t SDL_ResampleCVT_c4
00000000000309d0 0000000000000638 t SDL_ResampleCVT_c2
0000000000031010 0000000000000588 t SDL_ResampleCVT_c1
00000000000315a0 0000000000000698 t SDL_ResampleAudioStream
0000000000031c40 000000000000004c T SDL_ConvertAudio
0000000000031c90 0000000000000298 t SDL_AudioStreamPutInternal
0000000000031f30 00000000000007d8 T SDL_BuildAudioCVT
0000000000032710 00000000000003c0 T SDL_AudioStreamPut
0000000000032ad0 0000000000000114 T SDL_AudioStreamFlush
0000000000032bf0 0000000000000078 T SDL_AudioStreamGet
0000000000032c70 0000000000000024 T SDL_AudioStreamAvailable
0000000000032ca0 0000000000000060 T SDL_AudioStreamClear
0000000000032d00 0000000000000054 T SDL_FreeAudioStream
0000000000032d60 00000000000002a0 T SDL_NewAudioStream
0000000000033000 000000000000024c t SDL_Convert_F32_to_S32_NEON
0000000000033250 00000000000001ac t SDL_Convert_F32_to_U16_NEON
0000000000033400 0000000000000194 t SDL_Convert_F32_to_S16_NEON
00000000000335a0 00000000000001e0 t SDL_Convert_F32_to_U8_NEON
0000000000033780 00000000000001c0 t SDL_Convert_F32_to_S8_NEON
0000000000033940 00000000000001ac t SDL_Convert_S32_to_F32_NEON
0000000000033af0 0000000000000160 t SDL_Convert_U16_to_F32_NEON
0000000000033c50 0000000000000148 t SDL_Convert_S16_to_F32_NEON
0000000000033da0 000000000000017c t SDL_Convert_U8_to_F32_NEON
0000000000033f20 000000000000015c t SDL_Convert_S8_to_F32_NEON
0000000000034080 0000000000000108 T SDL_ChooseAudioConverters
0000000000034190 00000000000019ac T SDL_MixAudioFormat
0000000000035b40 0000000000000128 t MS_ADPCM_CalculateSampleFrames
0000000000035c70 0000000000000150 t IMA_ADPCM_CalculateSampleFrames
0000000000035dc0 0000000000002784 T SDL_LoadWAV_RW
0000000000038550 0000000000000064 T SDL_HasAltiVec
00000000000385c0 0000000000000064 T SDL_HasMMX
0000000000038630 0000000000000064 T SDL_Has3DNow
00000000000386a0 0000000000000064 T SDL_HasSSE
0000000000038710 0000000000000064 T SDL_HasSSE2
0000000000038780 0000000000000064 T SDL_HasARMSIMD
00000000000387f0 0000000000000064 T SDL_HasNEON
0000000000038860 000000000000006c T SDL_SIMDGetAlignment
00000000000388d0 0000000000000074 T SDL_SIMDAlloc
0000000000038950 0000000000000010 T SDL_SIMDFree
0000000000038960 0000000000000074 t SDL_EventLoggingChanged
00000000000389e0 0000000000001230 t SDL_LogEvent
0000000000039c10 0000000000000160 t SDL_AddEvent
0000000000039d70 0000000000000038 t SDL_AutoUpdateSensorsChanged
0000000000039db0 0000000000000048 t SDL_AutoUpdateJoysticksChanged
0000000000039e00 00000000000003c4 t SDL_PeepEventsInternal.constprop.0
000000000003a1d0 0000000000000194 T SDL_StopEventLoop
000000000003a370 0000000000000404 T SDL_PeepEvents
000000000003a780 0000000000000120 T SDL_FlushEvents
000000000003a8a0 0000000000000008 T SDL_FlushEvent
000000000003a8b0 00000000000001b8 T SDL_PushEvent
000000000003aa70 0000000000000088 T SDL_AddEventWatch
000000000003ab00 00000000000000d8 T SDL_DelEventWatch
000000000003abe0 0000000000000118 T SDL_FilterEvents
000000000003ad00 0000000000000190 T SDL_EventState
000000000003ae90 00000000000000a0 T SDL_StartEventLoop
000000000003af30 000000000000002c t SDL_PollSentinelChanged
000000000003af60 00000000000000f8 t SDL_PumpEventsInternal.constprop.0
000000000003b060 00000000000004e4 T SDL_WaitEventTimeout
000000000003b550 0000000000000008 T SDL_PollEvent
000000000003b560 0000000000000054 T SDL_SendAppEvent
000000000003b5c0 0000000000000008 T SDL_SendKeymapChangedEvent
000000000003b5d0 00000000000000a8 T SDL_EventsInit
000000000003b680 0000000000000074 T SDL_EventsQuit
000000000003b700 0000000000000104 t dollarDifference
000000000003b810 00000000000000bc t SDL_AddDollarGesture_one
000000000003b8d0 0000000000000364 t dollarNormalize.isra.0
000000000003bc40 0000000000000028 T SDL_GestureQuit
000000000003bc70 000000000000008c T SDL_GestureAddTouch
000000000003bd00 00000000000000e4 T SDL_GestureDelTouch
000000000003bdf0 00000000000006a0 T SDL_GestureProcessEvent
000000000003c490 00000000000001dc T SDL_SetKeymap
000000000003c670 000000000000002c T SDL_KeyboardInit
000000000003c6a0 000000000000000c T SDL_GetKeyboardFocus
000000000003c6b0 00000000000002b8 T SDL_SendKeyboardKey
000000000003c970 0000000000000058 T SDL_ResetKeyboard
000000000003c9d0 00000000000000f4 T SDL_SetKeyboardFocus
000000000003cad0 0000000000000198 T SDL_ReleaseAutoReleaseKeys
000000000003cc70 00000000000000e8 T SDL_SendKeyboardText
000000000003cd60 0000000000000004 T SDL_KeyboardQuit
000000000003cd70 000000000000002c t SDL_MouseRelativeWarpMotionChanged
000000000003cda0 000000000000002c t SDL_TouchMouseEventsChanged
000000000003cdd0 000000000000002c t SDL_MouseRelativeSystemScaleChanged
000000000003ce00 000000000000004c t SDL_MouseTouchEventsChanged
000000000003ce50 0000000000000058 t SDL_MouseRelativeSpeedScaleChanged
000000000003ceb0 0000000000000058 t SDL_MouseNormalSpeedScaleChanged
000000000003cf10 0000000000000048 t SDL_MouseDoubleClickRadiusChanged
000000000003cf60 0000000000000048 t SDL_MouseDoubleClickTimeChanged
000000000003cfb0 000000000000000c T SDL_GetMouse
000000000003cfc0 0000000000000114 T SDL_MouseInit
000000000003d0e0 0000000000000978 t SDL_PrivateSendMouseMotion
000000000003da60 0000000000000018 T SDL_GetMouseFocus
000000000003da80 0000000000000188 T SDL_GetMouseState
000000000003dc10 00000000000000d0 T SDL_PerformWarpMouseInWindow
000000000003dce0 0000000000000008 T SDL_WarpMouseInWindow
000000000003dcf0 0000000000000018 T SDL_GetRelativeMouseMode
000000000003dd10 00000000000002a0 T SDL_UpdateMouseCapture
000000000003dfb0 000000000000004c t SDL_MouseAutoCaptureChanged
000000000003e000 0000000000000064 T SDL_CaptureMouse
000000000003e070 00000000000000d8 T SDL_SetCursor
000000000003e150 0000000000000074 T SDL_SetMouseFocus
000000000003e1d0 00000000000000f4 t SDL_UpdateMouseFocus.isra.0
000000000003e2d0 000000000000043c t SDL_PrivateSendMouseButton
000000000003e710 0000000000000008 T SDL_SendMouseButton
000000000003e720 0000000000000090 T SDL_SendMouseMotion
000000000003e7b0 0000000000000190 T SDL_SetRelativeMouseMode
000000000003e940 00000000000000a0 T SDL_FreeCursor
000000000003e9e0 000000000000005c T SDL_ShowCursor
000000000003ea40 0000000000000194 T SDL_MouseQuit
000000000003ebe0 0000000000000040 t SDL_HandleSIG
000000000003ec20 0000000000000080 T SDL_QuitInit
000000000003eca0 000000000000006c T SDL_QuitQuit
000000000003ed10 0000000000000010 T SDL_SendQuit
000000000003ed20 0000000000000014 T SDL_SendPendingSignalEvents
000000000003ed40 0000000000000008 T SDL_TouchInit
000000000003ed50 00000000000000b0 T SDL_GetTouch
000000000003ee00 000000000000014c T SDL_AddTouch
000000000003ef50 0000000000000458 T SDL_SendTouch
000000000003ef50 0000000000000458 t SDL_SendTouch.localalias
000000000003f3b0 0000000000000244 T SDL_SendTouchMotion
000000000003f600 0000000000000104 T SDL_DelTouch
000000000003f710 0000000000000078 T SDL_TouchQuit
000000000003f790 0000000000000060 t RemovePendingSizeChangedAndResizedEvents
000000000003f7f0 000000000000003c t RemovePendingExposedEvents
000000000003f830 000000000000003c t RemovePendingMoveEvents
000000000003f870 00000000000003b4 T SDL_SendWindowEvent
000000000003fc30 0000000000000010 t mem_size
000000000003fc40 0000000000000020 t mem_writeconst
000000000003fc60 0000000000000088 t mem_read
000000000003fcf0 00000000000000b0 t mem_seek
000000000003fda0 0000000000000084 t stdio_seek
000000000003fe30 0000000000000060 t stdio_read
000000000003fe90 0000000000000060 t stdio_write
000000000003fef0 0000000000000048 T SDL_AllocRW
000000000003ff40 000000000000006c T SDL_RWFromFP
000000000003ffb0 0000000000000078 T SDL_RWFromFile
0000000000040030 00000000000000c8 T SDL_RWFromConstMem
0000000000040100 0000000000000004 T SDL_FreeRW
0000000000040110 0000000000000058 t stdio_close
0000000000040170 0000000000000024 t mem_close
00000000000401a0 000000000000000c T SDL_RWsize
00000000000401b0 000000000000000c T SDL_RWseek
00000000000401c0 0000000000000064 t stdio_size
0000000000040230 0000000000000014 T SDL_RWtell
0000000000040250 000000000000000c T SDL_RWread
0000000000040260 000000000000000c T SDL_RWclose
0000000000040270 000000000000011c T SDL_LoadFile_RW
0000000000040390 0000000000000030 T SDL_LoadFile
00000000000403c0 0000000000000028 T SDL_ReadLE16
00000000000403f0 000000000000002c T SDL_ReadBE16
0000000000040420 0000000000000028 T SDL_ReadLE32
0000000000040450 000000000000002c T SDL_ReadBE32
0000000000040480 000000000000001c T SDL_HapticInit
00000000000404a0 0000000000000068 T SDL_HapticDestroyEffect
0000000000040510 0000000000000160 T SDL_HapticClose
0000000000040670 0000000000000030 T SDL_HapticQuit
00000000000406a0 0000000000000238 t SDL_PrivateMatchControllerMappingForGUID
00000000000408e0 0000000000000114 t SDL_LoadVIDPIDListFromHint
0000000000040a00 0000000000000010 t SDL_GameControllerIgnoreDevicesExceptChanged
0000000000040a10 0000000000000010 t SDL_GameControllerIgnoreDevicesChanged
0000000000040a20 00000000000000e8 t SDL_PrivateAppendToMappingString.part.0.constprop.0
0000000000040b10 00000000000000f4 t SDL_PrivateGameControllerButton.isra.0
0000000000040c10 0000000000000090 T SDL_GameControllerGetAxisFromString
0000000000040ca0 0000000000000080 T SDL_GameControllerGetButtonFromString
0000000000040d20 00000000000002cc t SDL_PrivateGameControllerParseElement
0000000000040ff0 0000000000000220 t SDL_PrivateLoadButtonMapping
0000000000041210 000000000000034c t SDL_PrivateAddMappingForGUID
0000000000041560 000000000000027c t SDL_PrivateGameControllerAddMapping
00000000000417e0 00000000000003d0 t SDL_CreateMappingForHIDAPIController
0000000000041bb0 0000000000000074 t SDL_CreateMappingForRAWINPUTController
0000000000041c30 0000000000000094 t SDL_CreateMappingForWGIController
0000000000041cd0 00000000000001f4 t SDL_PrivateGetControllerMappingForGUID
0000000000041ed0 00000000000003f4 t SDL_PrivateGetControllerMapping.part.0
00000000000422d0 0000000000000038 T SDL_GameControllerAddMapping
0000000000042310 00000000000001e0 T SDL_GameControllerAddMappingsFromRW
00000000000424f0 0000000000000158 T SDL_GameControllerInitMappings
0000000000042650 0000000000000078 T SDL_IsGameController
00000000000426d0 000000000000008c T SDL_GameControllerInit
0000000000042760 00000000000001fc T SDL_GameControllerGetAxis
0000000000042960 0000000000000198 T SDL_GameControllerGetButton
0000000000042b00 00000000000008ac t SDL_GameControllerEventWatcher
00000000000433b0 00000000000000c8 T SDL_GameControllerClose
0000000000043480 000000000000003c T SDL_GameControllerQuit
00000000000434c0 00000000000000e4 T SDL_GameControllerQuitMappings
00000000000435b0 00000000000000c0 T SDL_GameControllerHandleDelayedGuideButton
0000000000043670 000000000000002c t SDL_JoystickAllowBackgroundEventsChanged
00000000000436a0 0000000000000054 T SDL_LockJoysticks
0000000000043700 0000000000000070 T SDL_UnlockJoysticks
0000000000043770 0000000000000004 T SDL_AssertJoysticksLocked
0000000000043780 000000000000004c T SDL_NumJoysticks
00000000000437d0 00000000000000b4 T SDL_JoystickNameForIndex
0000000000043890 000000000000003c T SDL_PrivateJoystickValid
00000000000438d0 00000000000000bc T SDL_PrivateJoystickGetAutoGamepadMapping
0000000000043990 00000000000000a4 T SDL_JoystickGetAxis
0000000000043a40 000000000000009c T SDL_JoystickGetHat
0000000000043ae0 000000000000009c T SDL_JoystickGetButton
0000000000043b80 0000000000000064 T SDL_JoystickInstanceID
0000000000043bf0 000000000000004c T SDL_JoystickFromInstanceID
0000000000043c40 000000000000010c T SDL_JoystickRumble
0000000000043d50 00000000000000fc T SDL_JoystickRumbleTriggers
0000000000043e50 000000000000018c T SDL_JoystickClose
0000000000043fe0 00000000000000bc T SDL_JoystickQuit
00000000000440a0 00000000000000ac T SDL_JoystickInit
0000000000044150 00000000000000d0 T SDL_PrivateJoystickHat
0000000000044220 0000000000000108 T SDL_PrivateJoystickButton
0000000000044330 0000000000000140 T SDL_JoystickUpdate
0000000000044470 00000000000000a4 T SDL_JoystickEventState
0000000000044520 0000000000000090 T SDL_GetJoystickGUIDInfo
00000000000445b0 00000000000000f4 T SDL_CreateJoystickGUID
00000000000446b0 0000000000000020 T SDL_CreateJoystickGUIDForName
00000000000446d0 0000000000000008 T SDL_SetJoystickGUIDVersion
00000000000446e0 0000000000000008 T SDL_SetJoystickGUIDCRC
00000000000446f0 0000000000000220 T SDL_GetJoystickGameControllerTypeFromVIDPID
0000000000044910 000000000000004c T SDL_IsJoystickXboxOneElite
0000000000044960 0000000000000110 T SDL_IsJoystickXboxSeriesX
0000000000044a70 000000000000001c T SDL_IsJoystickDualSenseEdge
0000000000044a90 000000000000001c T SDL_IsJoystickNintendoSwitchJoyConPair
0000000000044ab0 0000000000000028 T SDL_IsJoystickSteamController
0000000000044ae0 0000000000000010 T SDL_IsJoystickXInput
0000000000044af0 0000000000000010 T SDL_IsJoystickWGI
0000000000044b00 0000000000000010 T SDL_IsJoystickHIDAPI
0000000000044b10 0000000000000010 T SDL_IsJoystickRAWINPUT
0000000000044b20 0000000000000010 T SDL_IsJoystickVirtual
0000000000044b30 00000000000001b0 T SDL_PrivateJoystickAxis
0000000000044b30 00000000000001b0 t SDL_PrivateJoystickAxis.localalias
0000000000044ce0 0000000000000098 T SDL_GetJoystickGameControllerTypeFromGUID
0000000000044d80 00000000000000c0 T SDL_JoystickGetDeviceGUID
0000000000044e40 0000000000000004 T SDL_JoystickGetGUIDFromString
0000000000044e50 00000000000001fc T GuessControllerType
0000000000045050 0000000000000110 t QueueCmdSetClipRect
0000000000045160 0000000000000128 t QueueCmdSetViewport
0000000000045290 0000000000000204 t PrepQueueCmdDraw
00000000000454a0 000000000000023c t QueueCmdFillRects
00000000000456e0 0000000000000264 t RenderDrawPointsWithRectsF
0000000000045950 00000000000000ec T SDL_AllocateRenderVertices
0000000000045a40 0000000000000008 T SDL_GetNumRenderDrivers
0000000000045a50 0000000000000080 T SDL_GetRenderDriverInfo
0000000000045ad0 000000000000000c T SDL_GetRenderer
0000000000045ae0 000000000000006c T SDL_GetRendererInfo
0000000000045b50 0000000000000078 T SDL_QueryTexture
0000000000045bd0 000000000000009c T SDL_GetRendererOutputSize
0000000000045c70 00000000000000c8 T SDL_SetTextureColorMod
0000000000045d40 00000000000000ac T SDL_SetTextureAlphaMod
0000000000045df0 00000000000000d8 T SDL_SetTextureBlendMode
0000000000045ed0 0000000000000284 T SDL_LockTexture
0000000000046160 00000000000001d4 T SDL_UnlockTexture
0000000000046340 00000000000003e4 T SDL_UpdateTexture
0000000000046730 0000000000000020 T SDL_RenderTargetSupported
0000000000046750 00000000000002bc T SDL_SetRenderTarget
0000000000046a10 0000000000000048 T SDL_GetRenderTarget
0000000000046a60 0000000000000154 T SDL_RenderSetViewport
0000000000046bc0 0000000000000468 T SDL_CreateRenderer
0000000000047030 0000000000000054 T SDL_RenderSetScale
0000000000047090 0000000000000310 t UpdateLogicalSize.constprop.0
00000000000473a0 0000000000000638 t SDL_RendererEventWatch
00000000000479e0 0000000000000064 T SDL_SetRenderDrawColor
0000000000047a50 0000000000000140 T SDL_RenderClear
0000000000047b90 0000000000000184 T SDL_RenderDrawPointsF
0000000000047d20 0000000000000030 T SDL_RenderDrawPoint
0000000000047d50 0000000000000368 T SDL_RenderFillRectsF
00000000000480c0 00000000000000a4 T SDL_RenderFillRect
0000000000048170 0000000000000388 T SDL_RenderCopyF
0000000000048500 0000000000000028 T SDL_RenderCopy
0000000000048530 0000000000000138 T SDL_RenderPresent
0000000000048670 0000000000000158 T SDL_DestroyTexture
00000000000487d0 0000000000000858 T SDL_CreateTexture
00000000000487d0 0000000000000858 t SDL_CreateTexture.localalias
0000000000049030 0000000000000630 T SDL_CreateTextureFromSurface
0000000000049660 0000000000000100 T SDL_DestroyRenderer
0000000000049760 0000000000000040 T SDL_GetBlendModeSrcColorFactor
00000000000497a0 0000000000000040 T SDL_GetBlendModeDstColorFactor
00000000000497e0 0000000000000030 T SDL_GetBlendModeColorOperation
0000000000049810 0000000000000030 T SDL_GetBlendModeSrcAlphaFactor
0000000000049840 0000000000000034 T SDL_GetBlendModeDstAlphaFactor
0000000000049880 0000000000000030 T SDL_GetBlendModeAlphaOperation
00000000000498b0 0000000000000538 T SDL_SW_UpdateYUVTexture
0000000000049df0 00000000000000e0 T SDL_SW_LockYUVTexture
0000000000049ed0 00000000000001fc T SDL_SW_CopyYUVToRGB
000000000004a0d0 0000000000000040 T SDL_SW_DestroyYUVTexture
000000000004a110 0000000000000210 T SDL_SW_CreateYUVTexture
000000000004a320 0000000000000020 t GLES2_WindowEvent
000000000004a340 0000000000000008 t GLES2_QueueSetViewport
000000000004a350 00000000000000a0 t GLES2_LockTexture
000000000004a3f0 0000000000000110 t GLES2_SetTextureScaleMode
000000000004a500 0000000000000008 t GLES2_RenderPresent
000000000004a510 000000000000001c t GLES2_GetOutputSize
000000000004a530 0000000000000348 t GLES2_RenderReadPixels
000000000004a880 00000000000000a4 t GLES2_SetRenderTarget
000000000004a930 0000000000000d40 t GLES2_CreateTexture
000000000004b670 0000000000000158 t GLES2_SupportsBlendMode
000000000004b7d0 00000000000004dc t GLES2_QueueGeometry
000000000004bcb0 0000000000000110 t GLES2_QueueDrawPoints
000000000004bdc0 0000000000000180 t GLES2_QueueDrawLines
000000000004bf40 00000000000002ec t GLES2_CacheShader
000000000004c230 00000000000008ac t SetDrawState
000000000004cae0 0000000000000b90 t GLES2_CreateRenderer
000000000004d670 0000000000000084 t GLES2_SetVSync
000000000004d700 0000000000000184 t GLES2_TexSubImage2D.isra.0
000000000004d890 000000000000007c t GLES2_UnbindTexture
000000000004d910 00000000000000f0 t GLES2_DestroyTexture
000000000004da00 00000000000000fc t GLES2_BindTexture
000000000004db00 0000000000000214 t GLES2_UpdateTextureNV
000000000004dd20 000000000000026c t GLES2_UpdateTextureYUV
000000000004df90 00000000000001dc t GLES2_DestroyRenderer
000000000004e170 00000000000003c0 t GLES2_UpdateTexture
000000000004e530 0000000000000030 t GLES2_UnlockTexture
000000000004e560 000000000000076c t GLES2_RunCommandQueue
000000000004ecd0 000000000000001c T GLES2_GetShaderPrologue
000000000004ecf0 0000000000000064 T GLES2_GetShaderInclude
000000000004ed60 0000000000000088 T GLES2_GetTexCoordPrecisionEnumFromHint
000000000004edf0 0000000000000100 T GLES2_GetShader
000000000004eef0 000000000000001c t SW_WindowEvent
000000000004ef10 0000000000000040 t SW_LockTexture
000000000004ef50 0000000000000004 t SW_UnlockTexture
000000000004ef60 0000000000000004 t SW_SetTextureScaleMode
000000000004ef70 0000000000000028 t SW_SetRenderTarget
000000000004efa0 0000000000000008 t SW_QueueSetViewport
000000000004efb0 0000000000000008 t SW_DestroyTexture
000000000004efc0 0000000000000014 t SW_RenderPresent
000000000004efe0 0000000000000404 t SW_QueueGeometry
000000000004f3f0 000000000000021c t SW_QueueFillRects
000000000004f610 00000000000000f4 t SW_QueueDrawPoints
000000000004f710 00000000000000dc t SW_QueueCopyEx
000000000004f7f0 0000000000000094 t SW_QueueCopy
000000000004f890 00000000000000f0 t SW_UpdateTexture
000000000004f980 00000000000000c4 t SW_CreateTexture
000000000004fa50 0000000000000028 t SW_DestroyRenderer
000000000004fa80 00000000000000e4 t SetDrawState.part.0
000000000004fb70 0000000000000060 t SW_GetOutputSize
000000000004fbd0 00000000000000a0 t PrepTextureForCopy.isra.0
000000000004fc70 0000000000000110 t SW_RenderReadPixels
000000000004fd80 0000000000001260 t SW_RunCommandQueue
0000000000050fe0 00000000000001e0 T SW_CreateRendererForSurface
00000000000511c0 00000000000000ac t SW_CreateRenderer
0000000000051270 00000000000000e0 t computeSourceIncrements90
0000000000051350 0000000000000290 T SDLgfx_rotozoomSurfaceSizeTrig
00000000000515e0 0000000000000fb0 T SDLgfx_rotateSurface
0000000000052590 0000000000000010 T trianglepoint_2_fixedpoint
00000000000525a0 00000000000015cc T SDL_SW_FillTriangle
0000000000053b70 0000000000002678 T SDL_SW_BlitTriangle
00000000000561f0 000000000000000c T SDL_LockSensors
0000000000056200 000000000000000c T SDL_UnlockSensors
0000000000056210 0000000000000058 T SDL_SensorInit
0000000000056270 0000000000000038 T SDL_NumSensors
00000000000562b0 00000000000000c8 T SDL_SensorClose
0000000000056380 000000000000006c T SDL_SensorQuit
00000000000563f0 00000000000000bc T SDL_SensorUpdate
00000000000564b0 0000000000000118 T SDL_crc16
00000000000565d0 0000000000000018 T SDL_getenv
00000000000565f0 0000000000000004 t real_free
0000000000056600 0000000000000004 t real_realloc
0000000000056610 0000000000000004 t real_calloc
0000000000056620 0000000000000004 t real_malloc
0000000000056630 0000000000000044 T SDL_GetOriginalMemoryFunctions
0000000000056680 000000000000004c T SDL_malloc
00000000000566d0 000000000000005c T SDL_calloc
0000000000056730 000000000000007c T SDL_realloc
00000000000567b0 0000000000000030 T SDL_free
00000000000567e0 0000000000000004 T SDL_qsort
00000000000567f0 0000000000000004 T SDL_atan2
0000000000056800 0000000000000004 T SDL_atan2f
0000000000056810 0000000000000004 T SDL_acosf
0000000000056820 0000000000000008 T SDL_ceil
0000000000056830 0000000000000008 T SDL_ceilf
0000000000056840 0000000000000004 T SDL_cos
0000000000056850 0000000000000004 T SDL_cosf
0000000000056860 0000000000000008 T SDL_fabs
0000000000056870 0000000000000008 T SDL_fabsf
0000000000056880 0000000000000008 T SDL_floor
0000000000056890 0000000000000008 T SDL_floorf
00000000000568a0 0000000000000008 T SDL_truncf
00000000000568b0 0000000000000004 T SDL_fmodf
00000000000568c0 0000000000000004 T SDL_pow
00000000000568d0 0000000000000008 T SDL_round
00000000000568e0 0000000000000004 T SDL_sin
00000000000568f0 0000000000000004 T SDL_sinf
0000000000056900 0000000000000014 T SDL_sqrt
0000000000056920 0000000000000014 T SDL_sqrtf
0000000000056940 0000000000000004 T SDL_tanf
0000000000056950 000000000000000c T SDL_abs
0000000000056960 0000000000000018 T SDL_isdigit
0000000000056980 0000000000000018 T SDL_isspace
00000000000569a0 0000000000000024 T SDL_toupper
00000000000569d0 0000000000000004 T SDL_memcpy
00000000000569e0 0000000000000004 T SDL_memset
00000000000569f0 0000000000000004 T SDL_memmove
0000000000056a00 0000000000000004 T SDL_memcmp
0000000000056a10 0000000000000004 T SDL_strlen
0000000000056a20 0000000000000004 T SDL_strlcpy
0000000000056a30 00000000000000f8 T SDL_utf8strlcpy
0000000000056b30 0000000000000028 T SDL_utf8strlen
0000000000056b60 0000000000000004 T SDL_strlcat
0000000000056b70 000000000000004c T SDL_strdup
0000000000056bc0 0000000000000004 T SDL_strchr
0000000000056bd0 0000000000000004 T SDL_strrchr
0000000000056be0 0000000000000004 T SDL_strstr
0000000000056bf0 0000000000000004 T SDL_itoa
0000000000056c00 0000000000000004 T SDL_atoi
0000000000056c10 0000000000000004 T SDL_atof
0000000000056c20 0000000000000004 T SDL_strtol
0000000000056c30 0000000000000004 T SDL_strtoll
0000000000056c40 0000000000000004 T SDL_strtoull
0000000000056c50 0000000000000004 T SDL_strcmp
0000000000056c60 0000000000000004 T SDL_strncmp
0000000000056c70 0000000000000004 T SDL_strcasecmp
0000000000056c80 0000000000000004 T SDL_strncasecmp
0000000000056c90 0000000000000024 T SDL_vsscanf
0000000000056cc0 000000000000006c T SDL_sscanf
0000000000056d30 0000000000000034 T SDL_vsnprintf
0000000000056d70 000000000000006c T SDL_snprintf
0000000000056de0 00000000000000fc T SDL_vasprintf
0000000000056ee0 000000000000006c T SDL_asprintf
0000000000056f50 0000000000000038 t SDL_FreeErrBuf
0000000000056f90 0000000000000024 T SDL_TLSCreate
0000000000056fc0 0000000000000054 T SDL_TLSGet
0000000000057020 0000000000000114 T SDL_TLSSet
0000000000057140 0000000000000090 T SDL_TLSCleanup
00000000000571d0 00000000000000c4 T SDL_Generic_GetTLSData
00000000000572a0 00000000000000fc T SDL_Generic_SetTLSData
00000000000573a0 0000000000000130 T SDL_GetErrBuf
00000000000574d0 0000000000000098 T SDL_RunThread
0000000000057570 00000000000000c8 T SDL_CreateThreadWithStackSize
0000000000057640 0000000000000004 T SDL_CreateThreadInternal
0000000000057650 0000000000000004 T SDL_SetThreadPriority
0000000000057660 0000000000000048 T SDL_WaitThread
00000000000576b0 00000000000000d8 T SDL_TimerQuit
0000000000057790 00000000000000b8 T SDL_TimerInit
0000000000057850 0000000000000014 T SDL_GetTicks
0000000000057870 000000000000020c t SDL_TimerThread
0000000000057a80 0000000000000378 t SDL_FillRect1
0000000000057e00 0000000000000138 t SDL_FillRect2
0000000000057f40 000000000000026c t SDL_FillRect3
00000000000581b0 0000000000000070 t SDL_FillRect4
0000000000058220 00000000000001fc T SDL_FillRects
0000000000058420 0000000000000054 T SDL_FillRect
0000000000058480 00000000000004bc T SDL_GetPixelFormatName
0000000000058940 00000000000001e0 T SDL_PixelFormatEnumToMasks
0000000000058b20 0000000000000580 T SDL_MasksToPixelFormatEnum
00000000000590a0 00000000000001e8 T SDL_InitFormat
0000000000059290 0000000000000114 T SDL_AllocFormat
00000000000593b0 00000000000000b4 T SDL_AllocPalette
0000000000059470 0000000000000060 T SDL_FreePalette
00000000000594d0 00000000000000d0 T SDL_FreeFormat
00000000000595a0 00000000000000b4 T SDL_SetPixelFormatPalette
0000000000059660 0000000000000098 T SDL_DitherColors
0000000000059700 0000000000000090 T SDL_FindColor
0000000000059790 00000000000000dc t Map1to1
0000000000059870 000000000000005c t MapNto1.isra.0
00000000000598d0 000000000000008c T SDL_DetectPalette
0000000000059960 000000000000009c T SDL_MapRGB
0000000000059a00 00000000000000b0 T SDL_MapRGBA
0000000000059ab0 0000000000000104 T SDL_GetRGBA
0000000000059bc0 0000000000000044 T SDL_AllocBlitMap
0000000000059c10 000000000000004c T SDL_InvalidateMap
0000000000059c60 000000000000003c T SDL_InvalidateAllBlitMap
0000000000059ca0 0000000000000600 T SDL_MapSurface
000000000005a2a0 000000000000002c T SDL_FreeBlitMap
000000000005a2d0 0000000000000134 T SDL_GetSpanEnclosingRect
000000000005a410 00000000000000cc T SDL_HasIntersection
000000000005a4e0 000000000000010c T SDL_IntersectRect
000000000005a5f0 0000000000000204 T SDL_EnclosePoints
000000000005a800 0000000000000484 T SDL_IntersectRectAndLine
000000000005ac90 00000000000000d4 T SDL_HasIntersectionF
000000000005ad70 00000000000004c8 T SDL_SoftStretch
000000000005b240 0000000000001fe8 T SDL_SoftStretchLinear
000000000005d230 0000000000000054 T SDL_SetSurfacePalette
000000000005d290 0000000000000058 T SDL_SetSurfaceRLE
000000000005d2f0 00000000000000e4 T SDL_SetColorKey
000000000005d3e0 000000000000001c T SDL_HasColorKey
000000000005d400 0000000000000044 T SDL_GetColorKey
000000000005d450 0000000000000084 T SDL_SetSurfaceColorMod
000000000005d4e0 0000000000000044 T SDL_GetSurfaceColorMod
000000000005d530 0000000000000064 T SDL_SetSurfaceAlphaMod
000000000005d5a0 0000000000000024 T SDL_GetSurfaceAlphaMod
000000000005d5d0 00000000000000f8 T SDL_SetSurfaceBlendMode
000000000005d6d0 000000000000008c T SDL_GetSurfaceBlendMode
000000000005d760 0000000000000054 T SDL_SetClipRect
000000000005d7c0 0000000000000018 T SDL_GetClipRect
000000000005d7e0 00000000000000bc T SDL_LowerBlit
000000000005d8a0 000000000000020c T SDL_UpperBlit
000000000005dab0 0000000000000068 T SDL_LockSurface
000000000005db20 0000000000000030 T SDL_UnlockSurface
000000000005db50 000000000000039c T SDL_ConvertPixels
000000000005def0 00000000000000d8 T SDL_FreeSurface
000000000005dfd0 0000000000000294 T SDL_CreateRGBSurfaceWithFormat
000000000005e270 0000000000000084 T SDL_CreateRGBSurface
000000000005e300 00000000000001b8 T SDL_CreateRGBSurfaceFrom
000000000005e4c0 0000000000000164 T SDL_CreateRGBSurfaceWithFormatFrom
000000000005e630 00000000000003c4 T SDL_PrivateLowerBlitScaled
000000000005ea00 00000000000003c4 T SDL_PrivateUpperBlitScaled
000000000005edd0 0000000000000708 T SDL_ConvertSurface
000000000005edd0 0000000000000708 t SDL_ConvertSurface.localalias
000000000005f4e0 0000000000000084 t cmpmodes
000000000005f570 0000000000000358 t SDL_GetClosestDisplayModeForDisplay
000000000005f8d0 000000000000000c T SDL_GetVideoDevice
000000000005f8e0 0000000000000108 T SDL_AddVideoDisplay
000000000005f9f0 000000000000004c T SDL_GetIndexOfDisplay
000000000005fa40 0000000000000010 T SDL_IsVideoContextExternal
000000000005fa50 00000000000000f8 T SDL_GetDisplayBounds
000000000005fa50 00000000000000f8 t SDL_GetDisplayBounds.localalias
000000000005fb50 0000000000000140 t GetRectDisplayIndex
000000000005fc90 0000000000000170 T SDL_AddDisplayMode
000000000005fe00 000000000000000c T SDL_SetCurrentDisplayMode
000000000005fe10 0000000000000140 t SDL_SetDisplayModeForDisplay
000000000005ff50 00000000000000c0 T SDL_ResetDisplayModes
0000000000060010 000000000000007c T SDL_GetDesktopDisplayMode
0000000000060090 000000000000015c T SDL_GetWindowDisplayIndex
00000000000601f0 0000000000000038 T SDL_GetDisplayForWindow
0000000000060230 0000000000000144 T SDL_GetWindowDisplayMode
0000000000060380 0000000000000094 T SDL_ToggleDragAndDropSupport
0000000000060420 0000000000000020 T SDL_HasWindows
0000000000060440 000000000000005c T SDL_GetWindowID
00000000000604a0 0000000000000034 T SDL_GetWindowFromID
00000000000604e0 000000000000005c T SDL_GetWindowFlags
0000000000060540 00000000000000c4 T SDL_SetWindowTitle
0000000000060610 0000000000000158 T SDL_SetWindowData
0000000000060770 0000000000000060 t SDL_DestroyWindowTexture
00000000000607d0 00000000000000c4 T SDL_GetWindowData
00000000000608a0 0000000000000054 T SDL_GetWindowSize
0000000000060900 0000000000000080 T SDL_GetWindowSizeInPixels
0000000000060980 00000000000000ec t SDL_UpdateWindowTexture
0000000000060a70 0000000000000434 t SDL_CreateWindowTexture
0000000000060eb0 0000000000000094 T SDL_ShowWindow
0000000000060f50 000000000000005c T SDL_RaiseWindow
0000000000060fb0 000000000000005c T SDL_MaximizeWindow
0000000000061010 0000000000000060 T SDL_RestoreWindow
0000000000061070 0000000000000064 T SDL_HasWindowSurface
00000000000610e0 0000000000000088 T SDL_UpdateWindowSurfaceRects
0000000000061170 000000000000008c T SDL_UpdateWindowSurface
0000000000061200 0000000000000090 T SDL_DestroyWindowSurface
0000000000061290 0000000000000218 T SDL_GetWindowSurface
00000000000614b0 0000000000000134 T SDL_UpdateWindowGrab
00000000000615f0 000000000000006c T SDL_SetWindowKeyboardGrab
0000000000061660 000000000000006c T SDL_SetWindowMouseGrab
00000000000616d0 000000000000008c T SDL_SetWindowGrab
0000000000061760 0000000000000078 T SDL_GetWindowMouseRect
00000000000617e0 0000000000000070 T SDL_OnWindowResized
0000000000061850 0000000000000354 t SDL_UpdateFullscreenMode
0000000000061bb0 00000000000000b0 T SDL_HideWindow
0000000000061c60 00000000000000a8 T SDL_MinimizeWindow
0000000000061d10 00000000000000d8 T SDL_SetWindowFullscreen
0000000000061df0 00000000000000f8 t SDL_FinishWindowCreation
0000000000061ef0 0000000000000008 T SDL_OnWindowHidden
0000000000061f00 000000000000017c T SDL_SetWindowSize
0000000000062080 0000000000000058 T SDL_OnWindowMoved
00000000000620e0 000000000000001c T SDL_OnWindowMinimized
0000000000062100 0000000000000020 T SDL_OnWindowRestored
0000000000062120 0000000000000004 T SDL_OnWindowShown
0000000000062130 0000000000000024 T SDL_OnWindowEnter
0000000000062160 0000000000000004 T SDL_OnWindowLeave
0000000000062170 0000000000000088 T SDL_OnWindowFocusGained
0000000000062200 00000000000000c8 T SDL_OnWindowFocusLost
00000000000622d0 000000000000002c T SDL_GetFocusWindow
0000000000062300 000000000000002c T SDL_EnableScreenSaver
0000000000062330 0000000000000030 T SDL_DisableScreenSaver
0000000000062360 00000000000000d8 T SDL_GL_LoadLibrary
0000000000062440 0000000000000074 T SDL_GL_GetProcAddress
00000000000624c0 0000000000000044 T SDL_GL_UnloadLibrary
0000000000062510 000000000000016c T SDL_GL_ExtensionSupported
0000000000062680 0000000000000098 T SDL_GL_ResetAttributes
0000000000062720 0000000000000180 T SDL_GL_SetAttribute
0000000000062720 0000000000000180 t SDL_GL_SetAttribute.localalias
00000000000628a0 00000000000004b0 T SDL_GL_GetAttribute
00000000000628a0 00000000000004b0 t SDL_GL_GetAttribute.localalias
0000000000062d50 00000000000000e4 T SDL_GL_CreateContext
0000000000062e40 0000000000000034 T SDL_GL_GetCurrentWindow
0000000000062e80 0000000000000034 T SDL_GL_GetCurrentContext
0000000000062ec0 000000000000016c T SDL_GL_MakeCurrent
0000000000063030 000000000000005c T SDL_GL_GetDrawableSize
0000000000063090 0000000000000080 T SDL_GL_SetSwapInterval
0000000000063110 000000000000004c T SDL_GL_GetSwapInterval
0000000000063160 00000000000000b4 T SDL_GL_SwapWindowWithResult
0000000000063220 0000000000000068 T SDL_GL_DeleteContext
0000000000063290 0000000000000090 T SDL_StartTextInput
0000000000063320 0000000000000028 T SDL_IsTextInputActive
0000000000063350 0000000000000098 T SDL_StopTextInput
00000000000633f0 0000000000000024 T SDL_HasScreenKeyboardSupport
0000000000063420 000000000000000c T SDL_GetMessageBoxCount
0000000000063430 000000000000018c T SDL_ShowMessageBox
00000000000635c0 00000000000000b0 T SDL_Vulkan_LoadLibrary
0000000000063670 0000000000000044 T SDL_Vulkan_UnloadLibrary
00000000000636c0 0000000000000310 T SDL_RecreateWindow
00000000000639d0 000000000000024c T SDL_DestroyWindow
0000000000063c20 0000000000000448 T SDL_CreateWindow
0000000000064070 0000000000000144 T SDL_VideoQuit
00000000000641c0 0000000000000278 T SDL_VideoInit
0000000000064440 00000000000001ac t SDL_ConvertPixels_SwapUVPlanes
00000000000645f0 0000000000000338 t SDL_ConvertPixels_PackUVPlanes_to_NV
0000000000064930 0000000000000340 t SDL_ConvertPixels_SplitNV_to_UVPlanes
0000000000064c70 00000000000001e4 t GetYUVPlanes.isra.0
0000000000064e60 000000000000000c T SDL_GetYUVConversionMode
0000000000064e70 0000000000000034 T SDL_GetYUVConversionModeForResolution
0000000000064eb0 0000000000004250 t SDL_ConvertPixels_ARGB8888_to_YUV
0000000000069100 0000000000000178 T SDL_CalculateYUVSize
0000000000069280 00000000000008c0 T SDL_ConvertPixels_YUV_to_RGB
0000000000069280 00000000000008c0 t SDL_ConvertPixels_YUV_to_RGB.localalias
0000000000069b40 000000000000012c T SDL_ConvertPixels_RGB_to_YUV
0000000000069c70 00000000000025d4 T SDL_ConvertPixels_YUV_to_YUV
000000000006c250 0000000000000530 T yuv420_rgb565_std
000000000006c780 00000000000004b0 T yuv420_rgb24_std
000000000006cc30 0000000000000514 T yuv420_rgba_std
000000000006d150 0000000000000514 T yuv420_bgra_std
000000000006d670 00000000000004fc T yuv420_argb_std
000000000006db70 00000000000004f4 T yuv420_abgr_std
000000000006e070 000000000000024c T yuv422_rgb565_std
000000000006e2c0 000000000000021c T yuv422_rgb24_std
000000000006e4e0 0000000000000240 T yuv422_rgba_std
000000000006e720 0000000000000240 T yuv422_bgra_std
000000000006e960 0000000000000234 T yuv422_argb_std
000000000006eba0 0000000000000234 T yuv422_abgr_std
000000000006ede0 0000000000000530 T yuvnv12_rgb565_std
000000000006f310 00000000000004b0 T yuvnv12_rgb24_std
000000000006f7c0 0000000000000514 T yuvnv12_rgba_std
000000000006fce0 0000000000000514 T yuvnv12_bgra_std
0000000000070200 00000000000004fc T yuvnv12_argb_std
0000000000070700 00000000000004f4 T yuvnv12_abgr_std
0000000000070c00 0000000000000018 t RunThread
0000000000070c20 00000000000000b0 T SDL_SYS_CreateThread
0000000000070cd0 000000000000001c T SDL_SYS_SetupThread
0000000000070cf0 0000000000000004 T SDL_ThreadID
0000000000070d00 0000000000000050 T SDL_SYS_SetThreadPriority
0000000000070d50 000000000000000c T SDL_SYS_WaitThread
0000000000070d60 0000000000000078 T SDL_CreateSemaphore
0000000000070de0 000000000000002c T SDL_DestroySemaphore
0000000000070e10 0000000000000034 T SDL_SemTryWait
0000000000070e50 0000000000000068 T SDL_SemWait
0000000000070ec0 0000000000000134 T SDL_SemWaitTimeout
0000000000071000 000000000000005c T SDL_SemPost
0000000000071060 0000000000000090 T SDL_CreateMutex
00000000000710f0 000000000000002c T SDL_DestroyMutex
0000000000071120 0000000000000038 T SDL_LockMutex
0000000000071160 0000000000000038 T SDL_UnlockMutex
00000000000711a0 00000000000000b0 T SDL_SYS_GetTLSData
0000000000071250 0000000000000044 T SDL_SYS_SetTLSData
00000000000712a0 0000000000000008 T SWITCH_CreateWindowFrom
00000000000712b0 0000000000000004 T SWITCH_SetWindowTitle
00000000000712c0 0000000000000004 T SWITCH_SetWindowIcon
00000000000712d0 00000000000001a8 t SWITCH_CreateDevice
0000000000071480 0000000000000034 t SWITCH_Destroy
00000000000714c0 000000000000009c T SWITCH_VideoInit
0000000000071560 0000000000000040 T SWITCH_VideoQuit
00000000000715a0 0000000000000060 T SWITCH_GetDisplayModes
0000000000071600 0000000000000090 T SWITCH_DestroyWindow
0000000000071690 00000000000000a0 T SWITCH_SetDisplayMode
0000000000071730 00000000000000b8 T SWITCH_SetWindowSize
00000000000717f0 0000000000000128 T SWITCH_CreateWindow
0000000000071920 00000000000000c4 T SWITCH_PumpEvents
00000000000719f0 0000000000000004 T SWITCH_RestoreWindow
0000000000071a00 0000000000000004 T SWITCH_SetWindowPosition
0000000000071a10 0000000000000004 T SWITCH_ShowWindow
0000000000071a20 0000000000000004 T SWITCH_HideWindow
0000000000071a30 0000000000000004 T SWITCH_RaiseWindow
0000000000071a40 0000000000000004 T SWITCH_MaximizeWindow
0000000000071a50 0000000000000004 T SWITCH_MinimizeWindow
0000000000071a60 0000000000000004 t SWITCHAUDIO_WaitDevice
0000000000071a70 000000000000000c t SWITCHAUDIO_GetDeviceBuf
0000000000071a80 0000000000000054 t SWITCHAUDIO_Init
0000000000071ae0 0000000000000060 t SWITCHAUDIO_CloseDevice
0000000000071b40 000000000000017c t SWITCHAUDIO_PlayDevice
0000000000071cc0 00000000000002ec t SWITCHAUDIO_OpenDevice
0000000000071fb0 0000000000000004 t SWITCHAUDIO_ThreadInit
0000000000071fc0 0000000000000008 t SWITCH_JoystickGetCount
0000000000071fd0 0000000000000004 t SWITCH_JoystickDetect
0000000000071fe0 000000000000000c t SWITCH_JoystickGetDeviceName
0000000000071ff0 0000000000000008 t SWITCH_JoystickGetDevicePath
0000000000072000 0000000000000008 t SWITCH_JoystickGetDevicePlayerIndex
0000000000072010 0000000000000004 t SWITCH_JoystickSetDevicePlayerIndex
0000000000072020 0000000000000004 t SWITCH_JoystickGetDeviceInstanceID
0000000000072030 0000000000000024 t SWITCH_JoystickOpen
0000000000072060 0000000000000008 t SWITCH_JoystickGetCapabilities
0000000000072070 0000000000000008 t SWITCH_JoystickSetLED
0000000000072080 0000000000000004 t SWITCH_JoystickClose
0000000000072090 0000000000000008 t SWITCH_JoystickGetGamepadMapping
00000000000720a0 0000000000000184 t SWITCH_UpdateControllerSupport
0000000000072230 000000000000025c t SWITCH_JoystickUpdate
0000000000072490 0000000000000008 t SWITCH_JoystickSetSensorsEnabled
00000000000724a0 0000000000000008 t SWITCH_JoystickSendEffect
00000000000724b0 0000000000000008 t SWITCH_JoystickRumbleTriggers
00000000000724c0 00000000000000c0 t SWITCH_JoystickRumble
0000000000072580 000000000000000c t SWITCH_JoystickGetDeviceGUID
0000000000072590 0000000000000158 t SWITCH_JoystickInit
00000000000726f0 0000000000000004 t SWITCH_JoystickQuit
0000000000072700 000000000000000c T SDL_TicksQuit
0000000000072710 0000000000000008 T SDL_GetPerformanceCounter
0000000000072720 0000000000000038 T SDL_TicksInit
0000000000072760 0000000000000008 T SDL_GetPerformanceFrequency
0000000000072770 0000000000000054 T SDL_GetTicks64
00000000000727d0 0000000000000010 T SDL_Delay
00000000000727e0 0000000000000008 t VIRTUAL_JoystickInit
00000000000727f0 0000000000000004 t VIRTUAL_JoystickDetect
0000000000072800 0000000000000008 t VIRTUAL_JoystickGetDevicePath
0000000000072810 0000000000000008 t VIRTUAL_JoystickGetDevicePlayerIndex
0000000000072820 0000000000000ae0 t VIRTUAL_JoystickGetGamepadMapping
0000000000073300 0000000000000050 t VIRTUAL_JoystickGetDeviceInstanceID
0000000000073350 0000000000000064 t VIRTUAL_JoystickSetDevicePlayerIndex
00000000000733c0 000000000000004c t VIRTUAL_JoystickGetDeviceName
0000000000073410 0000000000000030 t VIRTUAL_JoystickClose
0000000000073440 0000000000000064 t VIRTUAL_JoystickGetCapabilities
00000000000734b0 0000000000000034 t VIRTUAL_JoystickGetCount
00000000000734f0 0000000000000008 t VIRTUAL_JoystickSetSensorsEnabled
0000000000073500 00000000000000c8 t VIRTUAL_FreeHWData
00000000000735d0 0000000000000038 t VIRTUAL_JoystickQuit
0000000000073610 00000000000000d4 t VIRTUAL_JoystickUpdate
00000000000736f0 0000000000000084 t VIRTUAL_JoystickOpen
0000000000073780 0000000000000084 t VIRTUAL_JoystickSetLED
0000000000073810 0000000000000058 t VIRTUAL_JoystickGetDeviceGUID
0000000000073870 000000000000007c t VIRTUAL_JoystickRumble
00000000000738f0 000000000000007c t VIRTUAL_JoystickRumbleTriggers
0000000000073970 000000000000007c t VIRTUAL_JoystickSendEffect
00000000000739f0 0000000000000008 T SDL_SYS_HapticInit
0000000000073a00 0000000000000004 T SDL_SYS_HapticClose
0000000000073a10 0000000000000004 T SDL_SYS_HapticQuit
0000000000073a20 000000000000000c T SDL_SYS_HapticDestroyEffect
0000000000073a30 0000000000000008 t SDL_DUMMY_SensorInit
0000000000073a40 0000000000000004 t SDL_DUMMY_SensorDetect
0000000000073a50 0000000000000008 t SDL_DUMMY_SensorGetDeviceName
0000000000073a60 0000000000000008 t SDL_DUMMY_SensorGetDeviceType
0000000000073a70 0000000000000008 t SDL_DUMMY_SensorGetDeviceNonPortableType
0000000000073a80 0000000000000004 t SDL_DUMMY_SensorUpdate
0000000000073a90 0000000000000008 t SDL_DUMMY_SensorOpen
0000000000073aa0 0000000000000004 t SDL_DUMMY_SensorClose
0000000000073ab0 0000000000000008 t SDL_DUMMY_SensorGetDeviceInstanceID
0000000000073ac0 0000000000000008 t SDL_DUMMY_SensorGetCount
0000000000073ad0 0000000000000004 t SDL_DUMMY_SensorQuit
0000000000073ae0 00000000000000bc T SDL_NewDataQueue
0000000000073ba0 0000000000000064 T SDL_FreeDataQueue
0000000000073c10 00000000000000bc T SDL_ClearDataQueue
0000000000073cd0 000000000000018c T SDL_WriteToDataQueue
0000000000073e60 00000000000000fc T SDL_ReadFromDataQueue
0000000000073f60 000000000000003c T SDL_CountDataQueue
0000000000073fa0 0000000000000130 T SDL_GUIDFromString
00000000000740d0 0000000000000054 T SDL_ListAdd
0000000000074130 0000000000000034 T SDL_ListRemove
0000000000074170 0000000000000030 T SDL_powerof2
00000000000741a0 0000000000000020 T SDL_AtomicCAS
00000000000741c0 0000000000000018 T SDL_AtomicSet
00000000000741e0 000000000000001c T SDL_AtomicAdd
0000000000074200 0000000000000008 T SDL_AtomicGet
0000000000074210 00000000000000b0 T SDL_SendDisplayEvent
00000000000742c0 0000000000001548 t SDL_BlendFillRect_RGB555
0000000000075810 0000000000001528 t SDL_BlendFillRect_RGB565
0000000000076d40 0000000000001030 t SDL_BlendFillRect_RGB888
0000000000077d70 000000000000120c t SDL_BlendFillRect_ARGB8888
0000000000078f80 0000000000003f00 t SDL_BlendFillRect_RGB
000000000007ce80 000000000000253c t SDL_BlendFillRect_RGBA
000000000007f3c0 00000000000001e8 T SDL_BlendFillRects
000000000007f5b0 0000000000002248 t SDL_BlendLine_RGB2
0000000000081800 0000000000001584 t SDL_BlendLine_RGB555
0000000000082d90 0000000000001574 t SDL_BlendLine_RGB565
0000000000084310 00000000000021a8 t SDL_BlendLine_RGB4
00000000000864c0 00000000000025bc t SDL_BlendLine_RGBA4
0000000000088a80 00000000000023d0 t SDL_BlendLine_RGB888
000000000008ae50 0000000000002b7c t SDL_BlendLine_ARGB8888
000000000008d9d0 000000000000025c T SDL_BlendLines
000000000008dc30 0000000000000294 t SDL_BlendPoint_RGB555
000000000008ded0 0000000000000290 t SDL_BlendPoint_RGB565
000000000008e160 00000000000001fc t SDL_BlendPoint_RGB888
000000000008e360 0000000000000238 t SDL_BlendPoint_ARGB8888
000000000008e5a0 0000000000000758 t SDL_BlendPoint_RGB
000000000008ed00 00000000000004a8 t SDL_BlendPoint_RGBA
000000000008f1b0 0000000000000128 T SDL_BlendPoint
000000000008f2e0 0000000000000204 T SDL_BlendPoints
000000000008f4f0 000000000000056c t SDL_DrawLine4
000000000008fa60 00000000000005ac t SDL_DrawLine2
0000000000090010 0000000000000288 t SDL_DrawLine1
00000000000902a0 00000000000001e4 T SDL_DrawLines
0000000000090490 00000000000000f0 T SDL_DrawPoint
0000000000090580 0000000000000118 T SDL_DrawPoints
00000000000906a0 00000000000000c4 t copy_opaque_16
0000000000090770 00000000000000e0 t uncopy_opaque_16
0000000000090850 00000000000005f8 t copy_transl_565
0000000000090e50 00000000000005f8 t copy_transl_555
0000000000091450 00000000000000e0 t uncopy_transl_16
0000000000091530 000000000000050c t copy_32
0000000000091a40 00000000000000d4 t uncopy_32
0000000000091b20 0000000000000008 t getpix_8
0000000000091b30 0000000000000008 t getpix_16
0000000000091b40 0000000000000010 t getpix_24
0000000000091b50 0000000000000008 t getpix_32
0000000000091b60 0000000000001720 t SDL_RLEAlphaBlit
0000000000093280 0000000000003c18 t SDL_RLEBlit
0000000000096ea0 000000000000027c T SDL_UnRLESurface
0000000000097120 0000000000000f34 T SDL_RLESurface
0000000000098060 0000000000000268 t SDL_SoftBlit
00000000000982d0 00000000000003b0 T SDL_CalculateBlit
0000000000098680 0000000000000308 t BlitBto1
0000000000098990 00000000000001ac t BlitBto2
0000000000098b40 0000000000000184 t BlitBto3
0000000000098cd0 00000000000001b4 t BlitBto4
0000000000098e90 0000000000000240 t BlitBto1Key
00000000000990d0 0000000000000164 t BlitBto2Key
0000000000099240 0000000000000160 t BlitBto4Key
00000000000993a0 0000000000000dc4 t BlitBtoNAlpha
000000000009a170 0000000000000e48 t BlitBtoNAlphaKey
000000000009afc0 00000000000000d0 t Blit4bto4
000000000009b090 00000000000000ac t Blit4bto4Key
000000000009b140 00000000000001b8 t BlitBto3Key
000000000009b300 00000000000000f4 T SDL_CalculateBlit0
000000000009b400 00000000000001dc t Blit1to1
000000000009b5e0 00000000000001f4 t Blit1to2
000000000009b7e0 00000000000003cc t Blit1to3
000000000009bbb0 0000000000000214 t Blit1to4
000000000009bdd0 00000000000004cc t Blit1to1Key
000000000009c2a0 00000000000002f8 t Blit1to2Key
000000000009c5a0 0000000000000474 t Blit1to3Key
000000000009ca20 00000000000002c4 t Blit1to4Key
000000000009ccf0 0000000000001b50 t Blit1toNAlpha
000000000009e840 0000000000003a4c t Blit1toNAlphaKey
00000000000a2290 00000000000000b8 T SDL_CalculateBlit1
00000000000a2350 0000000000000df8 t BlitNto1SurfaceAlpha
00000000000a3150 0000000000000fd0 t BlitNto1PixelAlpha
00000000000a4120 0000000000001c98 t BlitNto1SurfaceAlphaKey
00000000000a5dc0 000000000000056c t BlitRGBtoRGBSurfaceAlpha
00000000000a6330 000000000000045c t BlitRGBtoRGBPixelAlpha
00000000000a6790 00000000000004d8 t BlitRGBtoBGRPixelAlpha
00000000000a6c70 0000000000000330 t Blit16to16SurfaceAlpha128
00000000000a6fa0 00000000000002ac t Blit565to565SurfaceAlpha
00000000000a7250 00000000000002ac t Blit555to555SurfaceAlpha
00000000000a7500 000000000000050c t BlitARGBto565PixelAlpha
00000000000a7a10 000000000000050c t BlitARGBto555PixelAlpha
00000000000a7f20 00000000000021ac t BlitNtoNSurfaceAlpha
00000000000aa0d0 00000000000020ac t BlitNtoNSurfaceAlphaKey
00000000000ac180 0000000000002644 t BlitNtoNPixelAlpha
00000000000ae7d0 00000000000002f4 T SDL_CalculateBlitA
00000000000aead0 00000000000006c8 t Blit_RGB888_index8
00000000000af1a0 00000000000006c8 t Blit_RGB101010_index8
00000000000af870 000000000000034c t Blit_RGB888_RGB555
00000000000afbc0 000000000000034c t Blit_RGB888_RGB565
00000000000aff10 00000000000003c8 t Blit_RGB565_32
00000000000b02e0 000000000000000c t Blit_RGB565_ARGB8888
00000000000b02f0 000000000000000c t Blit_RGB565_ABGR8888
00000000000b0300 000000000000000c t Blit_RGB565_RGBA8888
00000000000b0310 000000000000000c t Blit_RGB565_BGRA8888
00000000000b0320 00000000000001f4 t Blit_RGB555_ARGB1555
00000000000b0520 0000000000001f10 t BlitNto1
00000000000b2430 00000000000003d8 t Blit4to4MaskAlpha
00000000000b2810 0000000000000164 t get_permutation
00000000000b2980 0000000000002c4c t BlitNtoN
00000000000b55d0 0000000000000b4c t BlitNtoNCopyAlpha
00000000000b6120 0000000000002588 t BlitNto1Key
00000000000b86b0 00000000000002c4 t Blit2to2Key
00000000000b8980 0000000000003d8c t BlitNtoNKey
00000000000bc710 0000000000003528 t BlitNtoNKeyCopyAlpha
00000000000bfc40 0000000000000f38 t Blit2101010toN
00000000000c0b80 0000000000001760 t BlitNto2101010
00000000000c22e0 000000000000073c t Blit_3or4_to_3or4__same_rgb
00000000000c2a20 0000000000000b38 t Blit_3or4_to_3or4__inversed_rgb
00000000000c3560 000000000000034c T SDL_CalculateBlitN
00000000000c38b0 00000000000000c8 t SDL_Blit_RGB888_RGB888_Scale
00000000000c3980 00000000000006a4 t SDL_Blit_RGB888_RGB888_Blend
00000000000c4030 0000000000000228 t SDL_Blit_RGB888_RGB888_Blend_Scale
00000000000c4260 000000000000042c t SDL_Blit_RGB888_RGB888_Modulate
00000000000c4690 0000000000000198 t SDL_Blit_RGB888_RGB888_Modulate_Scale
00000000000c4830 00000000000007fc t SDL_Blit_RGB888_RGB888_Modulate_Blend
00000000000c5030 0000000000000514 t SDL_Blit_RGB888_RGB888_Modulate_Blend_Scale
00000000000c5550 00000000000000dc t SDL_Blit_RGB888_BGR888_Scale
00000000000c5630 00000000000006e4 t SDL_Blit_RGB888_BGR888_Blend
00000000000c5d20 0000000000000230 t SDL_Blit_RGB888_BGR888_Blend_Scale
00000000000c5f50 0000000000000464 t SDL_Blit_RGB888_BGR888_Modulate
00000000000c63c0 00000000000001a0 t SDL_Blit_RGB888_BGR888_Modulate_Scale
00000000000c6560 00000000000007f8 t SDL_Blit_RGB888_BGR888_Modulate_Blend
00000000000c6d60 0000000000000520 t SDL_Blit_RGB888_BGR888_Modulate_Blend_Scale
00000000000c7280 00000000000000cc t SDL_Blit_RGB888_ARGB8888_Scale
00000000000c7350 00000000000006f4 t SDL_Blit_RGB888_ARGB8888_Blend
00000000000c7a50 0000000000000274 t SDL_Blit_RGB888_ARGB8888_Blend_Scale
00000000000c7cd0 0000000000000474 t SDL_Blit_RGB888_ARGB8888_Modulate
00000000000c8150 00000000000001ac t SDL_Blit_RGB888_ARGB8888_Modulate_Scale
00000000000c8300 00000000000008ac t SDL_Blit_RGB888_ARGB8888_Modulate_Blend
00000000000c8bb0 0000000000000564 t SDL_Blit_RGB888_ARGB8888_Modulate_Blend_Scale
00000000000c9120 0000000000000004 t SDL_Blit_BGR888_RGB888_Scale
00000000000c9130 00000000000006e4 t SDL_Blit_BGR888_RGB888_Blend
00000000000c9820 0000000000000230 t SDL_Blit_BGR888_RGB888_Blend_Scale
00000000000c9a50 0000000000000464 t SDL_Blit_BGR888_RGB888_Modulate
00000000000c9ec0 00000000000001a0 t SDL_Blit_BGR888_RGB888_Modulate_Scale
00000000000ca060 0000000000000804 t SDL_Blit_BGR888_RGB888_Modulate_Blend
00000000000ca870 0000000000000514 t SDL_Blit_BGR888_RGB888_Modulate_Blend_Scale
00000000000cad90 00000000000006a4 t SDL_Blit_BGR888_BGR888_Blend
00000000000cb440 0000000000000228 t SDL_Blit_BGR888_BGR888_Blend_Scale
00000000000cb670 000000000000042c t SDL_Blit_BGR888_BGR888_Modulate
00000000000cbaa0 0000000000000198 t SDL_Blit_BGR888_BGR888_Modulate_Scale
00000000000cbc40 00000000000007f0 t SDL_Blit_BGR888_BGR888_Modulate_Blend
00000000000cc430 0000000000000518 t SDL_Blit_BGR888_BGR888_Modulate_Blend_Scale
00000000000cc950 00000000000000e0 t SDL_Blit_BGR888_ARGB8888_Scale
00000000000cca30 0000000000000734 t SDL_Blit_BGR888_ARGB8888_Blend
00000000000cd170 0000000000000278 t SDL_Blit_BGR888_ARGB8888_Blend_Scale
00000000000cd3f0 00000000000004a4 t SDL_Blit_BGR888_ARGB8888_Modulate
00000000000cd8a0 00000000000001bc t SDL_Blit_BGR888_ARGB8888_Modulate_Scale
00000000000cda60 00000000000008ac t SDL_Blit_BGR888_ARGB8888_Modulate_Blend
00000000000ce310 0000000000000564 t SDL_Blit_BGR888_ARGB8888_Modulate_Blend_Scale
00000000000ce880 00000000000000cc t SDL_Blit_ARGB8888_RGB888_Scale
00000000000ce950 00000000000009e8 t SDL_Blit_ARGB8888_RGB888_Blend
00000000000cf340 0000000000000424 t SDL_Blit_ARGB8888_RGB888_Blend_Scale
00000000000cf770 0000000000000004 t SDL_Blit_ARGB8888_RGB888_Modulate
00000000000cf780 0000000000000004 t SDL_Blit_ARGB8888_RGB888_Modulate_Scale
00000000000cf790 000000000000096c t SDL_Blit_ARGB8888_RGB888_Modulate_Blend
00000000000d0100 00000000000005cc t SDL_Blit_ARGB8888_RGB888_Modulate_Blend_Scale
00000000000d06d0 0000000000000004 t SDL_Blit_ARGB8888_BGR888_Scale
00000000000d06e0 00000000000009e8 t SDL_Blit_ARGB8888_BGR888_Blend
00000000000d10d0 0000000000000430 t SDL_Blit_ARGB8888_BGR888_Blend_Scale
00000000000d1500 0000000000000004 t SDL_Blit_ARGB8888_BGR888_Modulate
00000000000d1510 0000000000000004 t SDL_Blit_ARGB8888_BGR888_Modulate_Scale
00000000000d1520 000000000000096c t SDL_Blit_ARGB8888_BGR888_Modulate_Blend
00000000000d1e90 00000000000005c8 t SDL_Blit_ARGB8888_BGR888_Modulate_Blend_Scale
00000000000d2460 0000000000000a58 t SDL_Blit_ARGB8888_ARGB8888_Blend
00000000000d2ec0 0000000000000414 t SDL_Blit_ARGB8888_ARGB8888_Blend_Scale
00000000000d32e0 00000000000006ec t SDL_Blit_ARGB8888_ARGB8888_Modulate
00000000000d39d0 00000000000002c0 t SDL_Blit_ARGB8888_ARGB8888_Modulate_Scale
00000000000d3c90 0000000000000a10 t SDL_Blit_ARGB8888_ARGB8888_Modulate_Blend
00000000000d46a0 0000000000000538 t SDL_Blit_ARGB8888_ARGB8888_Modulate_Blend_Scale
00000000000d4be0 00000000000000cc t SDL_Blit_RGBA8888_RGB888_Scale
00000000000d4cb0 00000000000009e0 t SDL_Blit_RGBA8888_RGB888_Blend
00000000000d5690 0000000000000424 t SDL_Blit_RGBA8888_RGB888_Blend_Scale
00000000000d5ac0 0000000000000424 t SDL_Blit_RGBA8888_RGB888_Modulate
00000000000d5ef0 0000000000000190 t SDL_Blit_RGBA8888_RGB888_Modulate_Scale
00000000000d6080 000000000000096c t SDL_Blit_RGBA8888_RGB888_Modulate_Blend
00000000000d69f0 00000000000005cc t SDL_Blit_RGBA8888_RGB888_Modulate_Blend_Scale
00000000000d6fc0 00000000000000dc t SDL_Blit_RGBA8888_BGR888_Scale
00000000000d70a0 00000000000009e0 t SDL_Blit_RGBA8888_BGR888_Blend
00000000000d7a80 0000000000000430 t SDL_Blit_RGBA8888_BGR888_Blend_Scale
00000000000d7eb0 000000000000046c t SDL_Blit_RGBA8888_BGR888_Modulate
00000000000d8320 00000000000001a8 t SDL_Blit_RGBA8888_BGR888_Modulate_Scale
00000000000d84d0 000000000000096c t SDL_Blit_RGBA8888_BGR888_Modulate_Blend
00000000000d8e40 00000000000005c8 t SDL_Blit_RGBA8888_BGR888_Modulate_Blend_Scale
00000000000d9410 00000000000000cc t SDL_Blit_RGBA8888_ARGB8888_Scale
00000000000d94e0 0000000000000a58 t SDL_Blit_RGBA8888_ARGB8888_Blend
00000000000d9f40 0000000000000414 t SDL_Blit_RGBA8888_ARGB8888_Blend_Scale
00000000000da360 000000000000075c t SDL_Blit_RGBA8888_ARGB8888_Modulate
00000000000daac0 00000000000002d8 t SDL_Blit_RGBA8888_ARGB8888_Modulate_Scale
00000000000dada0 0000000000000a10 t SDL_Blit_RGBA8888_ARGB8888_Modulate_Blend
00000000000db7b0 0000000000000538 t SDL_Blit_RGBA8888_ARGB8888_Modulate_Blend_Scale
00000000000dbcf0 0000000000000004 t SDL_Blit_ABGR8888_RGB888_Scale
00000000000dbd00 00000000000009e8 t SDL_Blit_ABGR8888_RGB888_Blend
00000000000dc6f0 000000000000042c t SDL_Blit_ABGR8888_RGB888_Blend_Scale
00000000000dcb20 0000000000000004 t SDL_Blit_ABGR8888_RGB888_Modulate
00000000000dcb30 0000000000000004 t SDL_Blit_ABGR8888_RGB888_Modulate_Scale
00000000000dcb40 000000000000096c t SDL_Blit_ABGR8888_RGB888_Modulate_Blend
00000000000dd4b0 00000000000005cc t SDL_Blit_ABGR8888_RGB888_Modulate_Blend_Scale
00000000000dda80 0000000000000004 t SDL_Blit_ABGR8888_BGR888_Scale
00000000000dda90 00000000000009e8 t SDL_Blit_ABGR8888_BGR888_Blend
00000000000de480 0000000000000430 t SDL_Blit_ABGR8888_BGR888_Blend_Scale
00000000000de8b0 0000000000000004 t SDL_Blit_ABGR8888_BGR888_Modulate
00000000000de8c0 0000000000000004 t SDL_Blit_ABGR8888_BGR888_Modulate_Scale
00000000000de8d0 000000000000096c t SDL_Blit_ABGR8888_BGR888_Modulate_Blend
00000000000df240 00000000000005c8 t SDL_Blit_ABGR8888_BGR888_Modulate_Blend_Scale
00000000000df810 00000000000000dc t SDL_Blit_ABGR8888_ARGB8888_Scale
00000000000df8f0 0000000000000a50 t SDL_Blit_ABGR8888_ARGB8888_Blend
00000000000e0340 0000000000000414 t SDL_Blit_ABGR8888_ARGB8888_Blend_Scale
00000000000e0760 000000000000079c t SDL_Blit_ABGR8888_ARGB8888_Modulate
00000000000e0f00 00000000000002e8 t SDL_Blit_ABGR8888_ARGB8888_Modulate_Scale
00000000000e11f0 0000000000000a10 t SDL_Blit_ABGR8888_ARGB8888_Modulate_Blend
00000000000e1c00 0000000000000538 t SDL_Blit_ABGR8888_ARGB8888_Modulate_Blend_Scale
00000000000e2140 0000000000000004 t SDL_Blit_BGRA8888_RGB888_Scale
00000000000e2150 00000000000009e0 t SDL_Blit_BGRA8888_RGB888_Blend
00000000000e2b30 000000000000042c t SDL_Blit_BGRA8888_RGB888_Blend_Scale
00000000000e2f60 000000000000046c t SDL_Blit_BGRA8888_RGB888_Modulate
00000000000e33d0 00000000000001a8 t SDL_Blit_BGRA8888_RGB888_Modulate_Scale
00000000000e3580 000000000000096c t SDL_Blit_BGRA8888_RGB888_Modulate_Blend
00000000000e3ef0 00000000000005cc t SDL_Blit_BGRA8888_RGB888_Modulate_Blend_Scale
00000000000e44c0 0000000000000004 t SDL_Blit_BGRA8888_BGR888_Scale
00000000000e44d0 00000000000009e8 t SDL_Blit_BGRA8888_BGR888_Blend
00000000000e4ec0 0000000000000430 t SDL_Blit_BGRA8888_BGR888_Blend_Scale
00000000000e52f0 0000000000000424 t SDL_Blit_BGRA8888_BGR888_Modulate
00000000000e5720 0000000000000190 t SDL_Blit_BGRA8888_BGR888_Modulate_Scale
00000000000e58b0 000000000000096c t SDL_Blit_BGRA8888_BGR888_Modulate_Blend
00000000000e6220 00000000000005c8 t SDL_Blit_BGRA8888_BGR888_Modulate_Blend_Scale
00000000000e67f0 00000000000000cc t SDL_Blit_BGRA8888_ARGB8888_Scale
00000000000e68c0 0000000000000a50 t SDL_Blit_BGRA8888_ARGB8888_Blend
00000000000e7310 0000000000000414 t SDL_Blit_BGRA8888_ARGB8888_Blend_Scale
00000000000e7730 00000000000007bc t SDL_Blit_BGRA8888_ARGB8888_Modulate
00000000000e7ef0 00000000000002ec t SDL_Blit_BGRA8888_ARGB8888_Modulate_Scale
00000000000e81e0 0000000000000a10 t SDL_Blit_BGRA8888_ARGB8888_Modulate_Blend
00000000000e8bf0 0000000000000538 t SDL_Blit_BGRA8888_ARGB8888_Modulate_Blend_Scale
00000000000e9130 00000000000000c8 t SDL_Blit_ARGB8888_ARGB8888_Scale
00000000000e9200 00000000000000c8 t SDL_Blit_BGR888_BGR888_Scale
00000000000e92d0 0000000000000160 T SDL_BlitCopy
00000000000e9430 0000000000001450 T SDL_Blit_Slow
00000000000ea880 0000000000000090 t SDL_EGL_GetVersion
00000000000ea910 0000000000000134 T SDL_EGL_SetErrorEx
00000000000eaa50 0000000000000134 T SDL_EGL_HasExtension
00000000000eab90 0000000000000548 t SDL_EGL_PrivateChooseConfig
00000000000eb0e0 00000000000000b0 T SDL_EGL_GetProcAddress
00000000000eb190 0000000000000080 T SDL_EGL_UnloadLibrary
00000000000eb210 0000000000000284 T SDL_EGL_LoadLibraryOnly
00000000000eb4a0 0000000000000168 T SDL_EGL_LoadLibrary
00000000000eb610 000000000000008c T SDL_EGL_ChooseConfig
00000000000eb6a0 0000000000000104 T SDL_EGL_MakeCurrent
00000000000eb7b0 0000000000000094 T SDL_EGL_SetSwapInterval
00000000000eb850 0000000000000030 T SDL_EGL_GetSwapInterval
00000000000eb880 0000000000000060 T SDL_EGL_SwapBuffers
00000000000eb8e0 0000000000000024 T SDL_EGL_DeleteContext
00000000000eb910 00000000000003bc T SDL_EGL_CreateContext
00000000000ebcd0 0000000000000160 T SDL_EGL_CreateSurface
00000000000ebe30 0000000000000024 T SDL_EGL_DestroySurface
00000000000ebe60 0000000000000004 T SWITCH_InitKeyboard
00000000000ebe70 00000000000000c4 T SWITCH_PollKeyboard
00000000000ebf40 0000000000000004 T SWITCH_QuitKeyboard
00000000000ebf50 0000000000000008 t SWITCH_SetRelativeMouseMode
00000000000ebf60 0000000000000020 T SWITCH_InitMouse
00000000000ebf80 0000000000000154 T SWITCH_PollMouse
00000000000ec0e0 0000000000000004 T SWITCH_QuitMouse
00000000000ec0f0 0000000000000018 T SWITCH_GLES_DefaultProfileConfig
00000000000ec110 000000000000000c T SWITCH_GLES_LoadLibrary
00000000000ec120 000000000000000c T SWITCH_GLES_CreateContext
00000000000ec130 0000000000000010 T SWITCH_GLES_MakeCurrent
00000000000ec140 000000000000000c T SWITCH_GLES_SwapWindow
00000000000ec150 0000000000000004 t SWITCH_CancelCb
00000000000ec160 0000000000000030 t SWITCH_EnterCb
00000000000ec190 0000000000000004 T SWITCH_InitSwkb
00000000000ec1a0 000000000000004c T SWITCH_PollSwkb
00000000000ec1f0 0000000000000040 T SWITCH_QuitSwkb
00000000000ec230 0000000000000008 T SWITCH_HasScreenKeyboardSupport
00000000000ec240 000000000000000c T SWITCH_IsScreenKeyboardShown
00000000000ec250 0000000000000100 T SWITCH_StartTextInput
00000000000ec350 000000000000003c T SWITCH_StopTextInput
00000000000ec390 0000000000000064 T SWITCH_InitTouch
00000000000ec400 0000000000000004 T SWITCH_QuitTouch
00000000000ec410 0000000000000524 T SWITCH_PollTouch
00000000000ec940 0000000000000028 T SDL_LoadFunction
00000000000ec970 0000000000000004 T SDL_UnloadObject
00000000000ec980 000000000000009c t op_granpos_add
00000000000eca20 0000000000000148 t op_get_next_page
00000000000ecb70 00000000000002e4 t op_fetch_headers_impl
00000000000ece60 000000000000009c t op_fetch_headers
00000000000ecf00 0000000000000054 t op_get_packet_duration
00000000000ecf60 00000000000000e8 t op_collect_audio_packets
00000000000ed050 00000000000000d8 t op_clear
00000000000ed130 0000000000000080 t op_seek_helper
00000000000ed1b0 00000000000000ac t op_decode
00000000000ed260 0000000000000078 t op_rescale64.part.0
00000000000ed2e0 0000000000000084 t op_granpos_diff
00000000000ed370 0000000000000268 t op_find_initial_pcm_offset
00000000000ed5e0 0000000000000278 t op_find_final_pcm_offset
00000000000ed860 00000000000000d8 t op_update_gain.part.7
00000000000ed940 000000000000011c t op_make_decode_ready.part.8
00000000000eda60 0000000000000660 t op_fetch_and_process_page
00000000000ee0c0 0000000000000340 t op_read_native.part.9
00000000000ee400 0000000000000a0c t op_open_seekable2
00000000000eee10 0000000000000074 t op_open2
00000000000eee90 0000000000000268 T op_test_callbacks
00000000000ef100 000000000000004c T op_open_callbacks
00000000000ef150 000000000000002c T op_free
00000000000ef180 0000000000000008 T op_seekable
00000000000ef190 0000000000000040 T op_head
00000000000ef1d0 0000000000000cf8 T op_pcm_seek
00000000000efed0 0000000000000018 T op_read
00000000000efef0 0000000000000058 t op_strdup_with_len
00000000000eff50 00000000000000d4 t op_tags_ensure_capacity
00000000000f0030 0000000000000280 t opus_tags_parse_impl
00000000000f02b0 00000000000001b0 T opus_head_parse
00000000000f0460 000000000000000c T opus_tags_init
00000000000f0470 0000000000000078 T opus_tags_clear
00000000000f04f0 000000000000009c T opus_tags_parse
00000000000f0590 000000000000003c T opus_tagncompare
00000000000f05d0 0000000000000128 t opus_tags_get_gain.isra.0.constprop.1
00000000000f0700 0000000000000018 T opus_tags_get_album_gain
00000000000f0720 0000000000000018 T opus_tags_get_track_gain
00000000000f0740 000000000000005c t op_strncasecmp
00000000000f07a0 0000000000000328 T opus_pcm_soft_clip
00000000000f0ad0 000000000000009c T opus_packet_get_samples_per_frame
00000000000f0b70 0000000000000438 t opus_packet_parse_impl
00000000000f0fb0 0000000000000084 t smooth_fade
00000000000f1040 0000000000000cd4 t opus_decode_frame
00000000000f1d20 000000000000006c T opus_decoder_get_size
00000000000f1d90 0000000000000124 T opus_decoder_init
00000000000f1ec0 000000000000020c T opus_decoder_ctl
00000000000f20d0 0000000000000044 T opus_packet_get_bandwidth
00000000000f2120 0000000000000010 T opus_packet_get_nb_channels
00000000000f2130 00000000000005e4 t opus_decode_native
00000000000f2720 000000000000004c T opus_packet_get_nb_frames
00000000000f2770 0000000000000060 T opus_packet_get_nb_samples
00000000000f27d0 00000000000000f8 t opus_copy_channel_out_short
00000000000f28d0 0000000000000074 T opus_multistream_decoder_get_size
00000000000f2950 0000000000000160 T opus_multistream_decoder_init
00000000000f2ab0 0000000000000130 T opus_multistream_decoder_create
00000000000f2be0 0000000000000394 t opus_multistream_decoder_ctl_va_list
00000000000f2f80 0000000000000078 T opus_multistream_decoder_ctl
00000000000f3000 000000000000048c t opus_multistream_decode_native
00000000000f3490 0000000000000034 T opus_multistream_decode
00000000000f34d0 0000000000000004 T opus_multistream_decoder_destroy
00000000000f34e0 0000000000000038 t celt_fatal
00000000000f3520 0000000000000088 t resampling_factor
00000000000f35b0 0000000000000234 t comb_filter
00000000000f37f0 0000000000000068 t init_caps
00000000000f3860 00000000000001c8 t deemphasis
00000000000f3a30 000000000000042c t celt_synthesis
00000000000f3e60 00000000000009a0 t celt_decode_lost
00000000000f4800 00000000000002ec t validate_celt_decoder
00000000000f4af0 0000000000000060 t celt_decoder_get_size
00000000000f4b50 0000000000001088 t celt_decode_with_ec
00000000000f5be0 00000000000002f8 t opus_custom_decoder_ctl
00000000000f5ee0 00000000000000f0 t celt_decoder_init
00000000000f5fd0 000000000000004c t ec_tell_frac
00000000000f6020 000000000000007c t ec_dec_normalize
00000000000f60a0 0000000000000060 t ec_dec_init
00000000000f6100 000000000000002c t ec_decode
00000000000f6130 0000000000000034 t ec_decode_bin
00000000000f6170 0000000000000044 t ec_dec_update
00000000000f61c0 0000000000000044 t ec_dec_bit_logp
00000000000f6210 0000000000000058 t ec_dec_icdf
00000000000f6270 0000000000000074 t ec_dec_bits
00000000000f62f0 0000000000000110 t ec_dec_uint
00000000000f6400 000000000000021c t clt_mdct_backward_c
00000000000f6620 0000000000000050 t opus_custom_mode_create
00000000000f6670 00000000000000e8 t find_best_pitch
00000000000f6760 000000000000023c t pitch_downsample
00000000000f69a0 0000000000000254 t pitch_search
00000000000f6c00 0000000000000128 t _celt_lpc
00000000000f6d30 0000000000000270 t celt_fir_c
00000000000f6fa0 0000000000000368 t celt_iir
00000000000f7310 0000000000000184 t _celt_autocorr
00000000000f74a0 0000000000000218 t unquant_coarse_energy
00000000000f76c0 0000000000000120 t unquant_fine_energy
00000000000f77e0 0000000000000168 t unquant_energy_finalise
00000000000f7950 0000000000000d04 t clt_compute_allocation
00000000000f8660 00000000000000a4 t exp_rotation1
00000000000f8710 000000000000017c t exp_rotation.part.0
00000000000f8890 000000000000023c t op_pvq_search_c
00000000000f8ad0 00000000000001e8 t alg_quant
00000000000f8cc0 0000000000000180 t alg_unquant
00000000000f8e40 000000000000009c t renormalise_vector
00000000000f8ee0 000000000000024c t stereo_itheta
00000000000f9130 0000000000000228 t celt_pitch_xcorr_float_neon
00000000000f9360 00000000000000bc t celt_inner_prod_neon
00000000000f9420 00000000000000f4 t dual_inner_prod_neon
00000000000f9520 0000000000000010 t silk_Get_Decoder_Size
00000000000f9530 0000000000000038 t silk_InitDecoder
00000000000f9570 0000000000000acc t silk_Decode
00000000000fa040 0000000000000264 t silk_stereo_MS_to_LR
00000000000fa2b0 00000000000003a0 t silk_resampler_init
00000000000fa650 00000000000001ac t silk_resampler
00000000000fa800 00000000000006b8 t silk_resampler_private_down_FIR
00000000000faec0 00000000000001b8 t silk_resampler_private_IIR_FIR
00000000000fb080 0000000000000174 t silk_resampler_private_up2_HQ
00000000000fb200 0000000000000004 t silk_resampler_private_up2_HQ_wrapper
00000000000fb210 0000000000000130 t silk_stereo_decode_pred
00000000000fb340 0000000000000030 t silk_stereo_decode_mid_only
00000000000fb370 0000000000000064 t validate_layout
00000000000fb3e0 0000000000000070 t get_left_channel
00000000000fb450 0000000000000074 t get_right_channel
00000000000fb4d0 0000000000000074 t get_mono_channel
00000000000fb550 00000000000000bc t intensity_stereo.isra.0
00000000000fb610 000000000000014c t deinterleave_hadamard
00000000000fb760 00000000000000a8 t special_hybrid_folding.isra.1
00000000000fb810 0000000000000108 t quant_band_n1.isra.2
00000000000fb920 0000000000000018 t celt_lcg_rand
00000000000fb940 000000000000006c t bitexact_log2tan
00000000000fb9b0 00000000000008f0 t compute_theta
00000000000fc2a0 00000000000005b0 t quant_partition
00000000000fc850 00000000000001e4 t denormalise_bands
00000000000fca40 000000000000033c t anti_collapse
00000000000fcd80 000000000000007c t haar1
00000000000fce00 00000000000004fc t quant_band
00000000000fd300 000000000000056c t quant_band_stereo
00000000000fd870 0000000000001024 t quant_all_bands
00000000000fe8a0 000000000000013c t encode_pulses
00000000000fe9e0 00000000000002d0 t decode_pulses
00000000000fecb0 00000000000000a0 t ec_enc_carry_out.part.0
00000000000fed50 00000000000000b0 t ec_encode
00000000000fee00 0000000000000098 t ec_enc_bit_logp
00000000000feea0 00000000000000a0 t ec_enc_bits
00000000000fef40 0000000000000090 t ec_enc_uint
00000000000fefd0 0000000000000768 t opus_fft_impl
00000000000ff740 0000000000000194 t ec_laplace_decode
00000000000ff8e0 0000000000000048 t isqrt32
00000000000ff930 000000000000004c t silk_init_decoder
00000000000ff980 0000000000000220 t silk_decode_frame
00000000000ffba0 0000000000000260 t silk_decode_parameters
00000000000ffe00 00000000000003e0 t silk_decode_indices
00000000001001e0 0000000000000284 t silk_decode_pulses
0000000000100470 0000000000000284 t silk_decoder_set_fs
0000000000100700 00000000000000f4 t silk_gains_dequant
0000000000100800 0000000000000178 t silk_NLSF_decode
0000000000100980 0000000000000028 t silk_PLC_Reset
00000000001009b0 0000000000000aa4 t silk_PLC
0000000000101460 00000000000001f0 t silk_PLC_glue_frames
0000000000101650 0000000000000420 t silk_shell_decoder
0000000000101a70 00000000000000a0 t silk_NLSF_unpack
0000000000101b10 0000000000000074 t silk_bwexpander
0000000000101b90 000000000000012c t silk_decode_pitch
0000000000101cc0 000000000000006c t silk_log2lin
0000000000101d30 0000000000000174 t silk_LPC_analysis_filter
0000000000101eb0 000000000000036c t silk_NLSF2A
0000000000102220 00000000000002e8 t silk_NLSF_stabilize
0000000000102510 0000000000000054 t silk_resampler_private_AR2
0000000000102570 0000000000000084 t silk_insertion_sort_increasing_all_values_int16
0000000000102600 0000000000000128 t silk_sum_sqr_shift
0000000000102730 0000000000000220 t silk_LPC_fit
0000000000102950 0000000000000640 t silk_LPC_inverse_pred_gain_neon
0000000000102f90 000000000000004c t silk_CNG_Reset
0000000000102fe0 00000000000006b4 t silk_CNG
00000000001036a0 0000000000000108 t silk_decode_signs
00000000001037b0 0000000000000990 t silk_decode_core
0000000000104140 0000000000000060 t silk_bwexpander_32
00000000001041a0 00000000000003b4 t silk_LPC_inverse_pred_gain_c
0000000000104560 0000000000000110 t png_colorspace_endpoints_match
0000000000104670 0000000000000010 T png_zalloc
0000000000104680 0000000000000004 T png_zfree
0000000000104690 00000000000000e0 t png_colorspace_set_xy_and_XYZ
0000000000104770 0000000000000248 t png_icc_profile_error
00000000001049c0 0000000000000070 T png_sig_cmp
0000000000104a30 0000000000000030 T png_reset_crc
0000000000104a60 00000000000000a4 T png_calculate_crc
0000000000104b10 0000000000000118 T png_user_version_check
0000000000104c30 000000000000015c T png_create_png_struct
0000000000104d90 0000000000000050 T png_create_info_struct
0000000000104de0 000000000000048c T png_free_data
0000000000105270 000000000000006c T png_destroy_info_struct
00000000001052e0 0000000000000014 T png_get_io_ptr
0000000000105300 0000000000000004 T png_save_int_32
0000000000105310 0000000000000054 T png_handle_as_unknown
0000000000105370 0000000000000028 T png_chunk_unknown_handling
00000000001053a0 0000000000000100 T png_zstream_error
00000000001054a0 000000000000005c T png_colorspace_sync_info
0000000000105500 000000000000002c T png_colorspace_sync
0000000000105530 0000000000000090 T png_icc_check_length
00000000001055c0 000000000000038c T png_icc_check_header
0000000000105950 00000000000000f0 T png_icc_check_tag_table
0000000000105a40 00000000000002cc T png_check_IHDR
0000000000105d10 0000000000000198 T png_check_fp_number
0000000000105eb0 0000000000000060 T png_check_fp_string
0000000000105f10 0000000000000084 T png_muldiv
0000000000105fa0 0000000000000180 t png_xy_from_XYZ
0000000000106120 0000000000000168 T png_colorspace_set_rgb_coefficients
0000000000106290 0000000000000058 T png_reciprocal
00000000001062f0 0000000000000338 t png_XYZ_from_xy
0000000000106630 00000000000000e4 T png_colorspace_set_chromaticities
0000000000106720 0000000000000018 T png_gamma_significant
0000000000106740 00000000000000c0 t png_colorspace_check_gamma
0000000000106800 00000000000000bc T png_colorspace_set_gamma
00000000001068c0 0000000000000150 T png_colorspace_set_sRGB
0000000000106a10 00000000000001dc T png_icc_set_sRGB
0000000000106bf0 000000000000017c t png_build_16bit_table
0000000000106d70 000000000000006c T png_reciprocal2
0000000000106de0 0000000000000064 T png_gamma_8bit_correct
0000000000106e50 00000000000000bc t png_build_8bit_table
0000000000106f10 0000000000000068 T png_gamma_16bit_correct
0000000000106f80 0000000000000030 T png_gamma_correct
0000000000106fb0 0000000000000158 T png_destroy_gamma_table
0000000000107110 0000000000000448 T png_build_gamma_table
0000000000107560 00000000000000e8 t png_format_buffer.isra.0
0000000000107650 0000000000000058 T png_safecat
00000000001076b0 0000000000000168 T png_format_number
0000000000107820 0000000000000090 T png_warning
00000000001078b0 0000000000000030 T png_warning_parameter
00000000001078e0 00000000000000ac T png_warning_parameter_signed
0000000000107990 0000000000000130 T png_formatted_warning
0000000000107ac0 0000000000000034 T png_chunk_warning
0000000000107b00 0000000000000078 T png_free_jmpbuf
0000000000107b80 0000000000000024 T png_longjmp
0000000000107bb0 0000000000000070 T png_error
0000000000107c20 0000000000000018 T png_app_warning
0000000000107c40 0000000000000018 T png_app_error
0000000000107c60 0000000000000028 T png_chunk_error
0000000000107c90 0000000000000018 T png_chunk_benign_error
0000000000107cb0 0000000000000028 T png_chunk_report
0000000000107ce0 0000000000000058 T png_benign_error
0000000000107d40 00000000000000c0 T png_set_longjmp_fn
0000000000107e00 0000000000000010 T png_set_error_fn
0000000000107e10 0000000000000014 T png_get_error_ptr
0000000000107e30 0000000000000020 T png_get_valid
0000000000107e50 000000000000001c T png_get_channels
0000000000107e70 0000000000000090 T png_get_IHDR
0000000000107f00 0000000000000040 T png_get_PLTE
0000000000107f40 0000000000000078 T png_get_tRNS
0000000000107fc0 000000000000002c T png_malloc_base
0000000000107ff0 000000000000003c T png_malloc_array
0000000000108030 00000000000000e4 T png_realloc_array
0000000000108120 0000000000000040 T png_malloc
0000000000108160 0000000000000038 T png_calloc
00000000001081a0 0000000000000048 T png_malloc_warn
00000000001081f0 0000000000000018 T png_free_default
0000000000108210 0000000000000024 T png_free
0000000000108240 0000000000000064 T png_destroy_png_struct
00000000001082b0 0000000000000014 T png_set_mem_fn
00000000001082d0 0000000000000050 T png_create_read_struct_2
0000000000108320 0000000000000010 T png_create_read_struct
0000000000108330 00000000000004a0 T png_read_info
00000000001087d0 0000000000000050 T png_read_update_info
0000000000108820 0000000000000020 T png_start_read_image
0000000000108840 000000000000042c T png_read_row
0000000000108c70 00000000000000ec T png_read_image
0000000000108d60 0000000000000588 T png_read_end
00000000001092f0 000000000000015c T png_destroy_read_struct
0000000000109450 000000000000004c T png_default_read_data
00000000001094a0 0000000000000024 T png_read_data
00000000001094d0 0000000000000058 T png_set_read_fn
0000000000109530 00000000000001e0 t png_do_gray_to_rgb
0000000000109710 0000000000000548 t png_do_expand
0000000000109c60 0000000000000034 T png_set_strip_16
0000000000109ca0 0000000000000038 T png_set_expand
0000000000109ce0 0000000000000038 T png_set_palette_to_rgb
0000000000109d20 0000000000000034 T png_set_expand_gray_1_2_4_to_8
0000000000109d60 0000000000000038 T png_set_tRNS_to_alpha
0000000000109da0 0000000000000058 T png_set_gray_to_rgb
0000000000109e00 0000000000000014 T png_set_read_user_transform_fn
0000000000109e20 0000000000000c94 T png_init_read_transformations
000000000010aac0 00000000000002bc T png_read_transform_info
000000000010ad80 0000000000002a20 T png_do_read_transformations
000000000010d7a0 0000000000000044 t png_read_filter_row_sub
000000000010d7f0 0000000000000030 t png_read_filter_row_up
000000000010d820 0000000000000078 t png_read_filter_row_avg
000000000010d8a0 000000000000007c t png_read_filter_row_paeth_1byte_pixel
000000000010d920 00000000000000b0 t png_read_filter_row_paeth_multibyte_pixel
000000000010d9d0 0000000000000148 t png_inflate_claim
000000000010db20 00000000000000b4 t png_read_buffer
000000000010dbe0 0000000000000028 T png_get_uint_31
000000000010dc10 00000000000000f0 T png_read_sig
000000000010dd00 0000000000000048 T png_crc_read
000000000010dd50 000000000000008c T png_crc_error
000000000010dde0 00000000000000a0 T png_crc_finish
000000000010de80 00000000000000d8 t png_cache_unknown_chunk
000000000010df60 0000000000000040 T png_zlib_inflate
000000000010dfa0 0000000000000164 t png_inflate.constprop.0
000000000010e110 0000000000000250 t png_decompress_chunk.constprop.0
000000000010e360 0000000000000134 t png_inflate_read.constprop.0.isra.0
000000000010e4a0 0000000000000158 T png_handle_IHDR
000000000010e600 0000000000000278 T png_handle_PLTE
000000000010e880 000000000000006c T png_handle_IEND
000000000010e8f0 00000000000000c0 T png_handle_gAMA
000000000010e9b0 00000000000001cc T png_handle_sBIT
000000000010eb80 00000000000001c0 T png_handle_cHRM
000000000010ed40 00000000000000e8 T png_handle_sRGB
000000000010ee30 000000000000058c T png_handle_iCCP
000000000010f3c0 00000000000002c8 T png_handle_sPLT
000000000010f690 00000000000001e8 T png_handle_tRNS
000000000010f880 0000000000000240 T png_handle_bKGD
000000000010fac0 00000000000001c4 T png_handle_eXIf
000000000010fc90 0000000000000148 T png_handle_hIST
000000000010fde0 00000000000000f4 T png_handle_pHYs
000000000010fee0 0000000000000110 T png_handle_oFFs
000000000010fff0 0000000000000314 T png_handle_pCAL
0000000000110310 000000000000029c T png_handle_sCAL
00000000001105b0 00000000000000e0 T png_handle_tIME
0000000000110690 000000000000019c T png_handle_tEXt
0000000000110830 000000000000023c T png_handle_zTXt
0000000000110a70 000000000000032c T png_handle_iTXt
0000000000110da0 00000000000001bc T png_handle_unknown
0000000000110f60 0000000000000058 T png_check_chunk_name
0000000000110fc0 00000000000000d8 T png_check_chunk_length
00000000001110a0 000000000000008c T png_read_chunk_header
0000000000111130 0000000000000520 T png_combine_row
0000000000111650 0000000000000428 T png_do_read_interlace
0000000000111a80 00000000000000c0 T png_read_filter_row
0000000000111b40 000000000000021c T png_read_IDAT_data
0000000000111d60 0000000000000094 T png_read_finish_IDAT
0000000000111e00 0000000000000100 T png_read_finish_row
0000000000111f00 0000000000000438 T png_read_start_row
0000000000112340 000000000000006c t check_location
00000000001123b0 0000000000000030 T png_set_bKGD
00000000001123e0 00000000000000b4 T png_set_eXIf_1
00000000001124a0 00000000000000cc T png_set_hIST
0000000000112570 0000000000000100 T png_set_IHDR
0000000000112670 0000000000000024 T png_set_oFFs
00000000001126a0 00000000000002b0 T png_set_pCAL
0000000000112950 000000000000018c T png_set_sCAL_s
0000000000112ae0 0000000000000024 T png_set_pHYs
0000000000112b10 0000000000000144 T png_set_PLTE
0000000000112c60 0000000000000030 T png_set_sBIT
0000000000112c90 0000000000000348 T png_set_text_2
0000000000112fe0 0000000000000088 T png_set_tIME
0000000000113070 00000000000001c4 T png_set_tRNS
0000000000113240 00000000000001c0 T png_set_sPLT
0000000000113400 0000000000000154 T png_set_unknown_chunks
0000000000113560 000000000000006c T png_set_rows
00000000001135d0 00000000000001d4 T png_check_keyword
00000000001137b0 0000000000000014 T png_set_bgr
00000000001137d0 0000000000000024 T png_set_swap
0000000000113800 0000000000000028 T png_set_packing
0000000000113830 0000000000000020 T png_set_packswap
0000000000113850 0000000000000028 T png_set_shift
0000000000113880 0000000000000030 T png_set_interlace_handling
00000000001138b0 0000000000000088 T png_set_filler
0000000000113940 0000000000000014 T png_set_swap_alpha
0000000000113960 0000000000000014 T png_set_invert_alpha
0000000000113980 0000000000000014 T png_set_invert_mono
00000000001139a0 00000000000000ac T png_do_invert
0000000000113a50 0000000000000048 T png_do_swap
0000000000113aa0 000000000000006c T png_do_packswap
0000000000113b10 0000000000000230 T png_do_strip_channel
0000000000113d40 0000000000000118 T png_do_bgr
0000000000113e60 000000000000018c T png_do_check_palette_indexes
0000000000113ff0 000000000000004c T png_default_write_data
0000000000114040 0000000000000010 T png_default_flush
0000000000114050 0000000000000024 T png_write_data
0000000000114080 0000000000000014 T png_flush
00000000001140a0 000000000000004c T png_set_write_fn
00000000001140f0 00000000000000e4 t write_unknown_chunks.part.0
00000000001141e0 0000000000000178 T png_write_info_before_PLTE
0000000000114360 0000000000000334 T png_write_info
00000000001146a0 00000000000001b8 T png_write_end
0000000000114860 000000000000007c T png_create_write_struct_2
00000000001148e0 0000000000000010 T png_create_write_struct
00000000001148f0 0000000000000394 T png_write_row
0000000000114c90 0000000000000080 T png_write_image
0000000000114d10 0000000000000058 T png_write_flush
0000000000114d70 00000000000000b8 T png_destroy_write_struct
0000000000114e30 0000000000000160 T png_write_png
0000000000114f90 0000000000000798 T png_do_write_transformations
0000000000115730 0000000000000174 t png_image_size
00000000001158b0 0000000000000258 t png_deflate_claim
0000000000115b10 00000000000000b8 t optimize_cmf.part.0
0000000000115bd0 0000000000000204 t png_text_compress.constprop.0
0000000000115de0 000000000000000c T png_save_uint_32
0000000000115df0 000000000000000c T png_save_uint_16
0000000000115e00 000000000000006c T png_write_sig
0000000000115e70 0000000000000060 T png_write_chunk_data
0000000000115ed0 0000000000000078 t png_write_compressed_data_out
0000000000115f50 000000000000004c T png_write_chunk_end
0000000000115fa0 00000000000000c8 t png_write_complete_chunk
0000000000116070 00000000000000d4 T png_write_chunk
0000000000116150 0000000000000040 T png_free_buffer_list
0000000000116190 00000000000002b4 T png_write_IHDR
0000000000116450 0000000000000174 T png_write_PLTE
00000000001165d0 0000000000000234 T png_compress_IDAT
0000000000116810 00000000000000b0 T png_write_IEND
00000000001168c0 00000000000000b8 T png_write_gAMA_fixed
0000000000116980 00000000000000c4 T png_write_sRGB
0000000000116a50 000000000000019c T png_write_iCCP
0000000000116bf0 00000000000001e8 T png_write_sPLT
0000000000116de0 00000000000000d0 T png_write_sBIT
0000000000116eb0 0000000000000114 T png_write_cHRM_fixed
0000000000116fd0 0000000000000174 T png_write_tRNS
0000000000117150 0000000000000174 T png_write_bKGD
00000000001172d0 00000000000000d8 T png_write_eXIf
00000000001173b0 00000000000000f4 T png_write_hIST
00000000001174b0 0000000000000170 T png_write_tEXt
0000000000117620 0000000000000168 T png_write_zTXt
0000000000117790 0000000000000398 T png_write_iTXt
0000000000117b30 00000000000000ec T png_write_oFFs
0000000000117c20 00000000000002b0 T png_write_pCAL
0000000000117ed0 00000000000000d0 T png_write_sCAL_s
0000000000117fa0 00000000000000ec T png_write_pHYs
0000000000118090 00000000000000b8 T png_write_tIME
0000000000118150 00000000000001a4 T png_write_start_row
0000000000118300 0000000000000144 T png_write_finish_row
0000000000118450 0000000000000310 T png_do_write_interlace
0000000000118760 000000000000075c T png_write_find_filter
0000000000118ec0 0000000000000070 T png_init_filter_functions_neon
0000000000118f30 0000000000000040 T png_read_filter_row_up_neon
0000000000118f70 0000000000000060 T png_read_filter_row_sub3_neon
0000000000118fd0 0000000000000050 T png_read_filter_row_sub4_neon
0000000000119020 0000000000000084 T png_read_filter_row_avg3_neon
00000000001190b0 0000000000000068 T png_read_filter_row_avg4_neon
0000000000119120 000000000000014c T png_read_filter_row_paeth3_neon
0000000000119270 0000000000000140 T png_read_filter_row_paeth4_neon
00000000001193b0 0000000000000064 T png_riffle_palette_neon
0000000000119420 00000000000000e4 T png_do_expand_palette_rgba8_neon
0000000000119510 0000000000000140 T png_do_expand_palette_rgb8_neon
0000000000119650 00000000000003a0 T adler32_z
00000000001199f0 0000000000000008 T adler32
0000000000119a00 00000000000000e4 T adler32_combine
0000000000119af0 00000000000000e4 T adler32_combine64
0000000000119be0 000000000000000c T get_crc_table
0000000000119bf0 00000000000003c4 T crc32_z
0000000000119fc0 0000000000000008 T crc32
0000000000119fd0 00000000000000cc T crc32_combine64
000000000011a0a0 0000000000000004 T crc32_combine
000000000011a0b0 0000000000000090 T crc32_combine_gen64
000000000011a140 0000000000000004 T crc32_combine_gen
000000000011a150 0000000000000044 T crc32_combine_op
000000000011a1a0 000000000000007c t slide_hash
000000000011a220 00000000000001dc t longest_match
000000000011a400 00000000000000c8 t read_buf
000000000011a4d0 0000000000000268 t fill_window
000000000011a740 00000000000000b0 t flush_pending
000000000011a7f0 0000000000000570 t deflate_slow
000000000011ad60 0000000000000400 t deflate_fast
000000000011b160 000000000000058c t deflate_stored
000000000011b6f0 000000000000007c t deflateStateCheck.part.0
000000000011b770 000000000000008c t deflateStateCheck
000000000011b800 00000000000001e0 T deflateSetDictionary
000000000011b9e0 00000000000000d8 T deflateGetDictionary
000000000011bac0 00000000000000f0 T deflateResetKeep
000000000011bbb0 00000000000000b4 T deflateReset
000000000011bc70 0000000000000058 T deflateSetHeader
000000000011bcd0 0000000000000068 T deflatePending
000000000011bd40 00000000000000f4 T deflatePrime
000000000011be40 0000000000000058 T deflateTune
000000000011bea0 0000000000000158 T deflateBound
000000000011c000 0000000000001184 T deflate
000000000011d190 0000000000000174 T deflateParams
000000000011d310 00000000000000a0 T deflateEnd
000000000011d3b0 00000000000002a4 T deflateInit2_
000000000011d660 000000000000001c T deflateInit_
000000000011d680 00000000000001cc T deflateCopy
000000000011d850 0000000000000114 t updatewindow
000000000011d970 0000000000000050 t inflateStateCheck
000000000011d9c0 0000000000000080 T inflateResetKeep
000000000011da40 0000000000000050 T inflateReset
000000000011da90 00000000000000ac T inflateReset2
000000000011db40 0000000000000118 T inflateInit2_
000000000011dc60 0000000000000010 T inflateInit_
000000000011dc70 00000000000000b0 T inflatePrime
000000000011dd20 00000000000018ec T inflate
000000000011f610 000000000000005c T inflateEnd
000000000011f670 00000000000000d4 T inflateGetDictionary
000000000011f750 00000000000000c0 T inflateSetDictionary
000000000011f810 0000000000000068 T inflateGetHeader
000000000011f880 0000000000000308 T inflateSync
000000000011fb90 0000000000000070 T inflateSyncPoint
000000000011fc00 00000000000001e0 T inflateCopy
000000000011fde0 0000000000000060 T inflateUndermine
000000000011fe40 000000000000007c T inflateValidate
000000000011fec0 0000000000000090 T inflateMark
000000000011ff50 0000000000000064 T inflateCodesUsed
000000000011ffc0 000000000000047c t inflate_table
0000000000120440 0000000000000078 t bi_windup
00000000001204c0 00000000000000f4 t pqdownheap
00000000001205c0 00000000000004e8 t build_tree
0000000000120ab0 00000000000001e0 t scan_tree
0000000000120c90 0000000000000668 t send_tree
0000000000121300 00000000000003cc t compress_block
00000000001216d0 0000000000000098 t _tr_init
0000000000121770 0000000000000148 t _tr_stored_block
00000000001218c0 0000000000000088 t _tr_flush_bits
0000000000121950 0000000000000148 t _tr_align
0000000000121aa0 0000000000000614 t _tr_flush_block
00000000001220c0 00000000000000dc T _tr_tally
00000000001221a0 000000000000000c T zlibVersion
00000000001221b0 0000000000000008 T zlibCompileFlags
00000000001221c0 0000000000000030 T zError
00000000001221f0 0000000000000008 T zcalloc
0000000000122200 0000000000000008 T zcfree
0000000000122210 00000000000004f4 t inflate_fast
0000000000122710 00000000000000d8 T jpeg_CreateCompress
00000000001227f0 0000000000000004 T jpeg_destroy_compress
0000000000122800 0000000000000094 T jpeg_suppress_tables
00000000001228a0 0000000000000180 T jpeg_finish_compress
0000000000122a20 00000000000000a4 T jpeg_start_compress
0000000000122ad0 00000000000000f0 T jpeg_write_scanlines
0000000000122bc0 00000000000000dc T jinit_compress_master
0000000000122ca0 0000000000000054 t start_pass_main
0000000000122d00 0000000000000134 t process_data_simple_main
0000000000122e40 00000000000000d0 T jinit_c_main_controller
0000000000122f10 0000000000000074 t write_marker_byte
0000000000122f90 00000000000000c8 t write_file_trailer
0000000000123060 00000000000001a4 t write_marker_header
0000000000123210 00000000000004d0 t emit_sof
00000000001236e0 00000000000003a4 t emit_dqt
0000000000123a90 0000000000000188 t write_frame_header
0000000000123c20 0000000000000324 t emit_dht
0000000000123f50 0000000000000200 t write_tables_only
0000000000124150 0000000000000bd4 t write_scan_header
0000000000124d30 0000000000000ba0 t write_file_header
00000000001258d0 0000000000000080 T jinit_marker_writer
0000000000125950 00000000000006dc t validate_script
0000000000126030 0000000000000040 t pass_startup
0000000000126070 00000000000000c4 t finish_pass_master
0000000000126140 0000000000000258 t per_scan_setup
00000000001263a0 0000000000000144 t select_scan_parameters
00000000001264f0 00000000000001f8 t prepare_for_pass
00000000001266f0 000000000000039c T jinit_c_master_control
0000000000126a90 000000000000005c T jpeg_abort
0000000000126af0 0000000000000034 T jpeg_destroy
0000000000126b30 0000000000000028 T jpeg_alloc_quant_table
0000000000126b60 0000000000000028 T jpeg_alloc_huff_table
0000000000126b90 00000000000000d0 t add_huff_table.part.0
0000000000126c60 00000000000000fc T jpeg_add_quant_table
0000000000126d60 000000000000005c T jpeg_set_linear_quality
0000000000126dc0 0000000000000040 T jpeg_quality_scaling
0000000000126e00 0000000000000034 T jpeg_set_quality
0000000000126e40 000000000000029c T jpeg_set_colorspace
00000000001270e0 0000000000000068 T jpeg_default_colorspace
0000000000127150 0000000000000198 T jpeg_set_defaults
00000000001272f0 000000000000006c t encode_mcu_AC_first_prepare
0000000000127360 000000000000009c t encode_mcu_AC_refine_prepare
0000000000127400 00000000000001fc t start_pass_phuff
0000000000127600 0000000000000144 t emit_bits.constprop.0
0000000000127750 0000000000000170 t emit_bits
00000000001278c0 0000000000000244 t emit_eobrun
0000000000127b10 0000000000000058 t finish_pass_phuff
0000000000127b70 0000000000000228 t finish_pass_gather_phuff
0000000000127da0 0000000000000134 t emit_restart
0000000000127ee0 000000000000021c t encode_mcu_DC_refine
0000000000128100 0000000000000478 t encode_mcu_AC_refine
0000000000128580 0000000000000338 t encode_mcu_AC_first
00000000001288c0 00000000000001b8 t encode_mcu_DC_first
0000000000128a80 0000000000000054 T jinit_phuff_encoder
0000000000128ae0 0000000000000050 t start_pass_prep
0000000000128b30 000000000000027c t pre_process_data
0000000000128db0 0000000000000284 t pre_process_context
0000000000129040 0000000000000338 T jinit_c_prep_controller
0000000000129380 0000000000000004 t start_pass_downsample
0000000000129390 000000000000009c t sep_downsample
0000000000129430 000000000000032c t int_downsample
0000000000129760 00000000000000f0 t h2v1_downsample
0000000000129850 0000000000000110 t h2v2_downsample
0000000000129960 00000000000005cc t h2v2_smooth_downsample
0000000000129f30 00000000000001e4 t fullsize_smooth_downsample
000000000012a120 00000000000000a4 t fullsize_downsample
000000000012a1d0 0000000000000274 T jinit_downsampler
000000000012a450 0000000000000118 T jpeg_CreateDecompress
000000000012a570 0000000000000004 T jpeg_destroy_decompress
000000000012a580 0000000000000284 T jpeg_consume_input
000000000012a810 0000000000000090 T jpeg_read_header
000000000012a8a0 00000000000000ec T jpeg_finish_decompress
000000000012a990 0000000000000158 t output_pass_setup
000000000012aaf0 000000000000010c T jpeg_start_decompress
000000000012ac00 00000000000000dc T jpeg_read_scanlines
000000000012ace0 0000000000000014 t finish_input_pass
000000000012ad00 0000000000000058 t reset_input_controller
000000000012ad60 000000000000048c t start_input_pass
000000000012b1f0 000000000000036c t consume_markers
000000000012b560 0000000000000068 T jinit_input_controller
000000000012b5d0 00000000000003cc t get_sof
000000000012b9a0 0000000000000250 t examine_app0
000000000012bbf0 0000000000000128 t skip_variable
000000000012bd20 0000000000000134 t next_marker
000000000012be60 0000000000000020 t reset_marker_reader
000000000012be80 00000000000003bc t get_dht
000000000012c240 0000000000000c50 t read_markers
000000000012ce90 00000000000000dc t examine_app14
000000000012cf70 00000000000001c8 t get_interesting_appn
000000000012d140 00000000000000bc t read_restart_marker
000000000012d200 000000000000015c T jpeg_resync_to_restart
000000000012d360 00000000000000bc T jinit_marker_reader
000000000012d420 00000000000001bc t prepare_for_output_pass
000000000012d5e0 000000000000003c t finish_output_pass
000000000012d620 00000000000000f4 t use_merged_upsample.part.0
000000000012d720 00000000000004f4 T jpeg_calc_output_dimensions
000000000012dc20 00000000000003e0 T jinit_master_decompress
000000000012e000 0000000000000014 t start_pass_merged_upsample
000000000012e020 0000000000000050 t merged_1v_upsample
000000000012e070 00000000000007bc t h2v1_merged_upsample
000000000012e830 0000000000000c58 t h2v2_merged_upsample
000000000012f490 000000000000017c t h2v1_merged_upsample_565
000000000012f610 00000000000001d8 t h2v1_merged_upsample_565D
000000000012f7f0 0000000000000254 t h2v2_merged_upsample_565
000000000012fa50 0000000000000318 t h2v2_merged_upsample_565D
000000000012fd70 000000000000011c t merged_2v_upsample
000000000012fe90 0000000000000244 T jinit_merged_upsampler
00000000001300e0 00000000000003e8 t start_pass_phuff_decoder
00000000001304d0 0000000000000534 t decode_mcu_AC_refine
0000000000130a10 0000000000000188 t decode_mcu_DC_refine
0000000000130ba0 0000000000000330 t decode_mcu_AC_first
0000000000130ed0 000000000000033c t decode_mcu_DC_first
0000000000131210 00000000000000b8 T jinit_phuff_decoder
00000000001312d0 000000000000011c t start_pass_dpost
00000000001313f0 000000000000008c t post_process_1pass
0000000000131480 00000000000000f8 t post_process_prepass
0000000000131580 00000000000000e8 t post_process_2pass
0000000000131670 00000000000000d0 T jinit_d_post_controller
0000000000131740 0000000000000014 t start_pass_upsample
0000000000131760 000000000000014c t sep_upsample
00000000001318b0 0000000000000008 t fullsize_upsample
00000000001318c0 0000000000000008 t noop_upsample
00000000001318d0 00000000000001c8 t h2v1_upsample
0000000000131aa0 00000000000003d4 t h2v1_fancy_upsample
0000000000131e80 00000000000000ac t h1v2_fancy_upsample
0000000000131f30 0000000000000144 t h2v2_fancy_upsample
0000000000132080 0000000000000118 t int_upsample
00000000001321a0 0000000000000214 t h2v2_upsample
00000000001323c0 0000000000000334 T jinit_upsampler
0000000000132700 0000000000000070 t emit_message
0000000000132770 0000000000000010 t reset_error_mgr
0000000000132780 00000000000000cc t format_message
0000000000132850 0000000000000044 t output_message
00000000001328a0 000000000000002c t error_exit
00000000001328d0 0000000000000058 T jpeg_std_error
0000000000132930 00000000000001d8 t create_colorindex
0000000000132b10 0000000000000098 t color_quantize
0000000000132bb0 0000000000000078 t color_quantize3
0000000000132c30 00000000000000e0 t quantize3_ord_dither
0000000000132d10 0000000000000004 t finish_pass_1_quant
0000000000132d20 0000000000000018 t new_color_map_1_quant
0000000000132d40 0000000000000680 t start_pass_1_quant
00000000001333c0 000000000000023c t quantize_fs_dither
0000000000133600 0000000000000180 t quantize_ord_dither
0000000000133780 0000000000000520 T jinit_1pass_quantizer
0000000000133ca0 00000000000000a4 t prescan_quantize
0000000000133d50 00000000000009a8 t fill_inverse_cmap
0000000000134700 000000000000011c t pass2_no_dither
0000000000134820 0000000000000354 t pass2_fs_dither
0000000000134b80 0000000000000114 t init_error_limit
0000000000134ca0 0000000000000004 t finish_pass2
0000000000134cb0 0000000000000010 t new_color_map_2_quant
0000000000134cc0 0000000000000160 t start_pass_2_quant
0000000000134e20 00000000000005f8 t update_box.isra.0
0000000000135420 00000000000003e0 t finish_pass1
0000000000135800 00000000000001b8 T jinit_2pass_quantizer
00000000001359c0 0000000000000010 T jdiv_round_up
00000000001359d0 0000000000000018 T jround_up
00000000001359f0 0000000000000060 T jcopy_sample_rows
0000000000135a50 0000000000000014 T jcopy_block_row
0000000000135a70 000000000000000c T jzero_far
0000000000135a80 00000000000001d0 t alloc_small
0000000000135c50 0000000000000098 t request_virt_barray
0000000000135cf0 0000000000000098 t request_virt_sarray
0000000000135d90 0000000000000158 t free_pool
0000000000135ef0 0000000000000048 t self_destruct
0000000000135f40 0000000000000158 t alloc_large
00000000001360a0 00000000000000e4 t alloc_barray
0000000000136190 000000000000011c t alloc_sarray
00000000001362b0 0000000000000274 t realize_virt_arrays
0000000000136530 00000000000003bc t access_virt_sarray
00000000001368f0 00000000000003c4 t access_virt_barray
0000000000136cc0 0000000000000170 T jinit_memory_mgr
0000000000136e30 0000000000000008 T jpeg_get_small
0000000000136e40 0000000000000008 T jpeg_free_small
0000000000136e50 0000000000000008 T jpeg_get_large
0000000000136e60 0000000000000008 T jpeg_free_large
0000000000136e70 0000000000000020 T jpeg_mem_available
0000000000136e90 0000000000000018 T jpeg_open_backing_store
0000000000136eb0 0000000000000008 T jpeg_mem_init
0000000000136ec0 0000000000000004 T jpeg_mem_term
0000000000136ed0 0000000000000228 t start_pass
0000000000137100 000000000000046c t arith_encode
0000000000137570 000000000000046c t arith_encode.constprop.0
00000000001379e0 000000000000046c t arith_encode.constprop.1
0000000000137e50 000000000000059c t finish_pass
00000000001383f0 0000000000000198 t emit_restart
0000000000138590 000000000000047c t encode_mcu
0000000000138a10 0000000000000288 t encode_mcu_AC_refine
0000000000138ca0 00000000000000b4 t encode_mcu_DC_refine
0000000000138d60 00000000000002dc t encode_mcu_AC_first
0000000000139040 000000000000025c t encode_mcu_DC_first
00000000001392a0 000000000000007c T jinit_arith_encoder
0000000000139320 00000000000003ec t start_pass
0000000000139710 0000000000000108 t process_restart
0000000000139820 0000000000000280 t arith_decode
0000000000139aa0 00000000000003c0 t decode_mcu
0000000000139e60 0000000000000214 t decode_mcu_AC_refine
000000000013a080 00000000000000d4 t decode_mcu_DC_refine
000000000013a160 0000000000000278 t decode_mcu_AC_first
000000000013a3e0 0000000000000294 t decode_mcu_DC_first
000000000013a680 00000000000000e8 T jinit_arith_decoder
000000000013a770 000000000000016c t init_simd.part.0
000000000013a8e0 0000000000000044 T jsimd_can_rgb_ycc
000000000013a930 0000000000000044 T jsimd_can_rgb_gray
000000000013a980 0000000000000044 T jsimd_can_ycc_rgb
000000000013a9d0 0000000000000044 T jsimd_can_ycc_rgb565
000000000013aa20 00000000000000f4 T jsimd_rgb_ycc_convert
000000000013ab20 00000000000000e4 T jsimd_rgb_gray_convert
000000000013ac10 00000000000000f4 T jsimd_ycc_rgb_convert
000000000013ad10 0000000000000008 T jsimd_ycc_rgb565_convert
000000000013ad20 0000000000000044 T jsimd_can_h2v2_downsample
000000000013ad70 0000000000000044 T jsimd_can_h2v1_downsample
000000000013adc0 0000000000000020 T jsimd_h2v2_downsample
000000000013ade0 0000000000000020 T jsimd_h2v1_downsample
000000000013ae00 0000000000000044 T jsimd_can_h2v2_upsample
000000000013ae50 0000000000000044 T jsimd_can_h2v1_upsample
000000000013aea0 000000000000000c T jsimd_h2v2_upsample
000000000013aeb0 000000000000000c T jsimd_h2v1_upsample
000000000013aec0 0000000000000044 T jsimd_can_h2v2_fancy_upsample
000000000013af10 0000000000000044 T jsimd_can_h2v1_fancy_upsample
000000000013af60 0000000000000044 T jsimd_can_h1v2_fancy_upsample
000000000013afb0 000000000000000c T jsimd_h2v2_fancy_upsample
000000000013afc0 000000000000000c T jsimd_h2v1_fancy_upsample
000000000013afd0 000000000000000c T jsimd_h1v2_fancy_upsample
000000000013afe0 0000000000000044 T jsimd_can_h2v2_merged_upsample
000000000013b030 0000000000000044 T jsimd_can_h2v1_merged_upsample
000000000013b080 00000000000000e4 T jsimd_h2v2_merged_upsample
000000000013b170 00000000000000e4 T jsimd_h2v1_merged_upsample
000000000013b260 0000000000000044 T jsimd_can_convsamp
000000000013b2b0 0000000000000008 T jsimd_can_convsamp_float
000000000013b2c0 0000000000000004 T jsimd_convsamp
000000000013b2d0 0000000000000004 T jsimd_convsamp_float
000000000013b2e0 0000000000000044 T jsimd_can_fdct_islow
000000000013b330 0000000000000044 T jsimd_can_fdct_ifast
000000000013b380 0000000000000008 T jsimd_can_fdct_float
000000000013b390 0000000000000004 T jsimd_fdct_islow
000000000013b3a0 0000000000000004 T jsimd_fdct_ifast
000000000013b3b0 0000000000000004 T jsimd_fdct_float
000000000013b3c0 0000000000000044 T jsimd_can_quantize
000000000013b410 0000000000000008 T jsimd_can_quantize_float
000000000013b420 0000000000000004 T jsimd_quantize
000000000013b430 0000000000000004 T jsimd_quantize_float
000000000013b440 0000000000000044 T jsimd_can_idct_2x2
000000000013b490 0000000000000044 T jsimd_can_idct_4x4
000000000013b4e0 0000000000000014 T jsimd_idct_2x2
000000000013b500 0000000000000014 T jsimd_idct_4x4
000000000013b520 0000000000000044 T jsimd_can_idct_islow
000000000013b570 0000000000000044 T jsimd_can_idct_ifast
000000000013b5c0 0000000000000008 T jsimd_can_idct_float
000000000013b5d0 0000000000000014 T jsimd_idct_islow
000000000013b5f0 0000000000000014 T jsimd_idct_ifast
000000000013b610 0000000000000004 T jsimd_idct_float
000000000013b620 000000000000004c T jsimd_can_huff_encode_one_block
000000000013b670 0000000000000014 T jsimd_huff_encode_one_block
000000000013b690 0000000000000044 T jsimd_can_encode_mcu_AC_first_prepare
000000000013b6e0 0000000000000004 T jsimd_encode_mcu_AC_first_prepare
000000000013b6f0 0000000000000044 T jsimd_can_encode_mcu_AC_refine_prepare
000000000013b740 0000000000000004 T jsimd_encode_mcu_AC_refine_prepare
000000000013b750 0000000000000130 t start_pass_coef
000000000013b880 0000000000000298 t compress_output
000000000013bb20 0000000000000294 t compress_first_pass
000000000013bdc0 0000000000000510 t compress_data
000000000013c2d0 0000000000000134 T jinit_c_coef_controller
000000000013c410 00000000000000d0 t rgb_ycc_start
000000000013c4e0 0000000000000608 t rgb_ycc_convert
000000000013caf0 00000000000003a8 t rgb_gray_convert
000000000013cea0 000000000000148c t rgb_rgb_convert
000000000013e330 0000000000000108 t cmyk_ycck_convert
000000000013e440 00000000000005c0 t grayscale_convert
000000000013ea00 0000000000000afc t null_convert
000000000013f500 0000000000000004 t null_method
000000000013f510 00000000000003ac T jinit_color_converter
000000000013f8c0 0000000000000338 t convsamp
000000000013fc00 000000000000014c t quantize
000000000013fd50 00000000000000ac t forward_DCT
000000000013fe00 0000000000000438 t convsamp_float
0000000000140240 0000000000000188 t quantize_float
00000000001403d0 00000000000000ac t forward_DCT_float
0000000000140480 0000000000000130 t compute_reciprocal
00000000001405b0 0000000000000388 t start_pass_fdctmgr
0000000000140940 0000000000000244 T jinit_forward_dct
0000000000140b90 0000000000000244 t encode_mcu_gather
0000000000140de0 00000000000001bc t flush_bits
0000000000140fa0 0000000000000088 t finish_pass_huff
0000000000141030 000000000000f1ec t encode_mcu_huff
0000000000150220 00000000000002c8 T jpeg_make_c_derived_tbl
00000000001504f0 00000000000001d0 t start_pass_huff
00000000001506c0 00000000000003c8 T jpeg_gen_optimal_table
0000000000150a90 0000000000000100 t finish_pass_gather
0000000000150b90 0000000000000058 T jinit_huff_encoder
0000000000150bf0 0000000000000054 t start_input_pass
0000000000150c50 0000000000000008 t dummy_consume_data
0000000000150c60 00000000000002b4 t consume_data
0000000000150f20 0000000000000278 t decompress_data
00000000001511a0 00000000000002f0 t start_output_pass
0000000000151490 0000000000000360 t decompress_onepass
00000000001517f0 0000000000001e74 t decompress_smooth_data
0000000000153670 0000000000000198 T jinit_d_coef_controller
0000000000153810 0000000000000118 t build_ycc_rgb_table
0000000000153930 00000000000004e0 t ycc_rgb_convert
0000000000153e10 0000000000000090 t rgb_gray_convert
0000000000153ea0 0000000000000694 t null_convert
0000000000154540 0000000000001384 t gray_rgb_convert
00000000001558d0 0000000000001744 t rgb_rgb_convert
0000000000157020 00000000000000e0 t ycck_cmyk_convert
0000000000157100 0000000000000244 t ycc_rgb565_convert
0000000000157350 00000000000002c0 t ycc_rgb565D_convert
0000000000157610 000000000000068c t rgb_rgb565_convert
0000000000157ca0 00000000000001fc t rgb_rgb565D_convert
0000000000157ea0 00000000000002d8 t gray_rgb565_convert
0000000000158180 000000000000013c t gray_rgb565D_convert
00000000001582c0 0000000000000004 t start_pass_dcolor
00000000001582d0 0000000000000018 t grayscale_convert
00000000001582f0 00000000000003f0 T jinit_color_deconverter
00000000001586e0 00000000000006a4 t start_pass
0000000000158d90 00000000000000c4 T jinit_inverse_dct
0000000000158e60 00000000000000d0 t add_huff_table.part.0
0000000000158f30 00000000000006d0 T jpeg_make_d_derived_tbl
0000000000159600 000000000000044c t start_pass_huff_decoder
0000000000159a50 0000000000000150 T jpeg_fill_bit_buffer
0000000000159ba0 000000000000016c T jpeg_huff_decode
0000000000159d10 000000000000128c t decode_mcu
000000000015afa0 0000000000000130 T jinit_huff_decoder
000000000015b0d0 00000000000000a8 t process_data_simple_main
000000000015b180 0000000000000334 t process_data_context_main
000000000015b4c0 0000000000000028 t process_data_crank_post
000000000015b4f0 000000000000030c t start_pass_main
000000000015b800 00000000000001d0 T jinit_d_main_controller
000000000015b9d0 0000000000000438 T jpeg_fdct_float
000000000015be10 00000000000002f0 T jpeg_fdct_ifast
000000000015c100 0000000000000338 T jpeg_fdct_islow
000000000015c440 000000000000033c T jpeg_idct_float
000000000015c780 0000000000000408 T jpeg_idct_ifast
000000000015cb90 0000000000000430 T jpeg_idct_islow
000000000015cfc0 0000000000000a20 T jpeg_idct_7x7
000000000015d9e0 00000000000004a0 T jpeg_idct_6x6
000000000015de80 0000000000000624 T jpeg_idct_5x5
000000000015e4b0 00000000000001f0 T jpeg_idct_3x3
000000000015e6a0 0000000000000a44 T jpeg_idct_9x9
000000000015f0f0 0000000000000aa4 T jpeg_idct_10x10
000000000015fba0 00000000000004b8 T jpeg_idct_11x11
0000000000160060 0000000000000db8 T jpeg_idct_12x12
0000000000160e20 00000000000005cc T jpeg_idct_13x13
00000000001613f0 0000000000000fdc T jpeg_idct_14x14
00000000001623d0 0000000000000558 T jpeg_idct_15x15
0000000000162930 0000000000000620 T jpeg_idct_16x16
0000000000162f50 00000000000002b0 T jpeg_idct_4x4
0000000000163200 0000000000000224 T jpeg_idct_2x2
0000000000163430 0000000000000030 T jpeg_idct_1x1
0000000000163460 00000000000001bc T jsimd_rgb_gray_convert_neon
0000000000163460 00000000000001bc t jsimd_rgb_gray_convert_neon.localalias
0000000000163620 0000000000000004 T jsimd_extrgb_gray_convert_neon
0000000000163630 00000000000001bc T jsimd_extrgbx_gray_convert_neon
00000000001637f0 00000000000001bc T jsimd_extbgr_gray_convert_neon
00000000001639b0 00000000000001bc T jsimd_extbgrx_gray_convert_neon
0000000000163b70 00000000000001bc T jsimd_extxbgr_gray_convert_neon
0000000000163d30 00000000000001bc T jsimd_extxrgb_gray_convert_neon
0000000000163ef0 000000000000052c T jsimd_encode_mcu_AC_first_prepare_neon
0000000000164420 00000000000006b4 T jsimd_encode_mcu_AC_refine_prepare_neon
0000000000164ae0 0000000000000090 T jsimd_h2v1_downsample_neon
0000000000164b70 00000000000000b4 T jsimd_h2v2_downsample_neon
0000000000164c30 0000000000000418 T jsimd_h2v1_merged_upsample_neon
0000000000164c30 0000000000000418 t jsimd_h2v1_merged_upsample_neon.localalias
0000000000165050 0000000000000678 T jsimd_h2v2_merged_upsample_neon
0000000000165050 0000000000000678 t jsimd_h2v2_merged_upsample_neon.localalias
00000000001656d0 0000000000000004 T jsimd_h2v1_extrgb_merged_upsample_neon
00000000001656e0 0000000000000004 T jsimd_h2v2_extrgb_merged_upsample_neon
00000000001656f0 00000000000004a0 T jsimd_h2v1_extrgbx_merged_upsample_neon
0000000000165b90 0000000000000730 T jsimd_h2v2_extrgbx_merged_upsample_neon
00000000001662c0 0000000000000418 T jsimd_h2v1_extbgr_merged_upsample_neon
00000000001666e0 0000000000000678 T jsimd_h2v2_extbgr_merged_upsample_neon
0000000000166d60 00000000000004a0 T jsimd_h2v1_extbgrx_merged_upsample_neon
0000000000167200 0000000000000740 T jsimd_h2v2_extbgrx_merged_upsample_neon
0000000000167940 0000000000000494 T jsimd_h2v1_extxbgr_merged_upsample_neon
0000000000167de0 0000000000000750 T jsimd_h2v2_extxbgr_merged_upsample_neon
0000000000168530 0000000000000494 T jsimd_h2v1_extxrgb_merged_upsample_neon
00000000001689d0 0000000000000750 T jsimd_h2v2_extxrgb_merged_upsample_neon
0000000000169120 0000000000000154 T jsimd_h2v1_fancy_upsample_neon
0000000000169280 00000000000002d8 T jsimd_h2v2_fancy_upsample_neon
0000000000169560 00000000000000b8 T jsimd_h1v2_fancy_upsample_neon
0000000000169620 000000000000005c T jsimd_h2v1_upsample_neon
0000000000169680 0000000000000078 T jsimd_h2v2_upsample_neon
0000000000169700 00000000000001c8 T jsimd_fdct_ifast_neon
00000000001698d0 0000000000000110 T jsimd_idct_2x2_neon
00000000001699e0 00000000000003bc T jsimd_idct_4x4_neon
0000000000169da0 0000000000000068 T jsimd_convsamp_neon
0000000000169e10 00000000000001e4 T jsimd_quantize_neon
000000000016a000 0000000000000578 T jsimd_idct_ifast_neon
000000000016a580 t jsimd_idct_islow_neon
000000000016ac5c T jsimd_ycc_extrgb_convert_neon
000000000016aec4 T jsimd_ycc_extbgr_convert_neon
000000000016b12c T jsimd_ycc_extrgbx_convert_neon
000000000016b394 T jsimd_ycc_extbgrx_convert_neon
000000000016b5fc T jsimd_ycc_extxbgr_convert_neon
000000000016b864 T jsimd_ycc_extxrgb_convert_neon
000000000016bacc t jsimd_ycc_rgb565_convert_neon
000000000016bd40 T jsimd_ycc_extrgb_convert_neon_slowst3
000000000016c060 T jsimd_ycc_extbgr_convert_neon_slowst3
000000000016c380 T jsimd_extrgb_ycc_convert_neon
000000000016c644 T jsimd_extbgr_ycc_convert_neon
000000000016c908 T jsimd_extrgbx_ycc_convert_neon
000000000016cbcc T jsimd_extbgrx_ycc_convert_neon
000000000016ce90 T jsimd_extxbgr_ycc_convert_neon
000000000016d154 T jsimd_extxrgb_ycc_convert_neon
000000000016d418 T jsimd_extrgb_ycc_convert_neon_slowld3
000000000016d794 T jsimd_extbgr_ycc_convert_neon_slowld3
000000000016db10 t jsimd_fdct_islow_neon
000000000016de94 t jsimd_huff_encode_one_block_neon
000000000016e66c t jsimd_huff_encode_one_block_neon_slowtbl
000000000016f000 000000000000003c T FT_Add_Default_Modules
000000000016f040 0000000000000184 T FT_Set_Default_Properties
000000000016f1d0 0000000000000074 T FT_Init_FreeType
000000000016f250 0000000000000038 T FT_Done_FreeType
000000000016f290 0000000000000068 t FT_GlyphLoader_Adjust_Points
000000000016f300 0000000000000028 t hash_str_lookup
000000000016f330 0000000000000038 t hash_num_lookup
000000000016f370 0000000000000014 t hash_num_compare
000000000016f390 0000000000000090 t hash_bucket
000000000016f420 0000000000000078 t destroy_size
000000000016f4a0 00000000000000ac t find_unicode_charmap
000000000016f550 000000000000004c t memory_stream_close
000000000016f5a0 0000000000000010 t ft_raccess_sort_ref_by_id
000000000016f5b0 00000000000000dc t ft_trig_pseudo_rotate
000000000016f690 00000000000000f8 t ft_trig_pseudo_polarize
000000000016f790 000000000000003c t hash_str_compare
000000000016f7d0 0000000000000154 t ft_property_do
000000000016f930 00000000000000a8 t destroy_charmaps.part.0
000000000016f9e0 00000000000000c0 t raccess_guess_darwin_hfsplus
000000000016faa0 00000000000000c0 t raccess_guess_darwin_newvfs
000000000016fb60 00000000000000dc t raccess_make_file_name
000000000016fc40 0000000000000054 t raccess_guess_linux_cap
000000000016fca0 0000000000000054 t raccess_guess_vfat
000000000016fd00 0000000000000018 T FT_RoundFix
000000000016fd20 0000000000000064 T FT_MulDiv
000000000016fd90 0000000000000060 t FT_MulDiv_No_Round
000000000016fdf0 0000000000000014 T FT_MulFix
000000000016fe10 000000000000007c t ft_recompute_scaled_metrics
000000000016fe90 0000000000000070 T FT_DivFix
000000000016ff00 00000000000000d8 T FT_Matrix_Multiply
000000000016ffe0 00000000000000ac T FT_Matrix_Invert
0000000000170090 00000000000000fc t FT_Matrix_Multiply_Scaled
0000000000170190 00000000000000ac t FT_Matrix_Check
0000000000170240 0000000000000098 t FT_Vector_Transform_Scaled
00000000001702e0 00000000000001a0 t FT_Vector_NormLen
0000000000170480 000000000000001c t ft_corner_orientation
00000000001704a0 00000000000000d8 t ft_corner_is_flat
0000000000170580 000000000000003c t FT_MulAddFix
00000000001705c0 0000000000000078 T FT_Palette_Select
0000000000170640 000000000000002c T FT_Get_Font_Format
0000000000170670 000000000000002c t FT_GlyphLoader_Rewind
00000000001706a0 00000000000000cc t FT_GlyphLoader_Reset
0000000000170770 000000000000003c t FT_GlyphLoader_Done
00000000001707b0 0000000000000088 t FT_GlyphLoader_Prepare
0000000000170840 00000000000000ac t FT_GlyphLoader_Add
00000000001708f0 0000000000000080 t ft_hash_str_init
0000000000170970 0000000000000080 t ft_hash_num_init
00000000001709f0 0000000000000080 t ft_hash_str_free
0000000000170a70 0000000000000024 t ft_hash_str_lookup
0000000000170aa0 0000000000000028 t ft_hash_num_lookup
0000000000170ad0 00000000000000e0 t ft_lcd_padding
0000000000170bb0 0000000000000058 t ft_service_list_lookup
0000000000170c10 0000000000000014 t ft_validator_init
0000000000170c30 0000000000000018 t ft_validator_error
0000000000170c50 0000000000000064 t FT_Stream_Free
0000000000170cc0 0000000000000068 t ft_glyphslot_free_bitmap
0000000000170d30 0000000000000114 t ft_glyphslot_done
0000000000170e50 000000000000005c t ft_glyphslot_set_bitmap
0000000000170eb0 00000000000000a0 t FT_Done_GlyphSlot
0000000000170f50 0000000000000024 T FT_Get_Transform
0000000000170f80 0000000000000138 t FT_Match_Size
00000000001710c0 0000000000000064 t ft_synthesize_vertical_metrics
0000000000171130 00000000000000b4 t FT_Select_Metrics
00000000001711f0 00000000000002c8 t FT_Request_Metrics
00000000001714c0 0000000000000064 T FT_Select_Size
0000000000171530 00000000000000b0 T FT_Request_Size
00000000001715e0 0000000000000094 T FT_Set_Char_Size
0000000000171680 0000000000000120 T FT_Get_Kerning
00000000001717a0 0000000000000088 T FT_Select_Charmap
0000000000171830 000000000000004c T FT_Get_Char_Index
0000000000171880 000000000000009c T FT_Get_Next_Char
0000000000171920 00000000000000bc T FT_Get_Name_Index
00000000001719e0 00000000000000f4 T FT_Get_Glyph_Name
0000000000171ae0 00000000000000b4 T FT_Load_Sfnt_Table
0000000000171ba0 0000000000000070 T FT_Get_CMap_Format
0000000000171c10 00000000000000a4 T FT_Set_Charmap
0000000000171cc0 0000000000000088 t find_variant_selector_charmap.isra.0
0000000000171d50 0000000000000088 T FT_Face_GetCharVariantIndex
0000000000171de0 0000000000000034 T FT_Activate_Size
0000000000171e20 000000000000004c t FT_Lookup_Renderer
0000000000171e70 000000000000009c T FT_Get_Module
0000000000171f10 0000000000000020 t FT_Get_Module_Interface
0000000000171f30 00000000000000bc t ft_module_get_service
0000000000171ff0 000000000000000c t ft_property_string_set
0000000000172000 0000000000000088 T FT_New_Library
0000000000172090 0000000000000048 T FT_Get_Color_Glyph_Layer
00000000001720e0 0000000000000034 T FT_Get_Color_Glyph_Paint
0000000000172120 0000000000000030 T FT_Get_Color_Glyph_ClipBox
0000000000172150 0000000000000034 T FT_Get_Paint_Layers
0000000000172190 0000000000000030 T FT_Get_Paint
00000000001721c0 0000000000000034 T FT_Get_Colorline_Stops
0000000000172200 00000000000003b0 T FT_Outline_Decompose
00000000001725b0 0000000000000084 T FT_Outline_Check
0000000000172640 00000000000000c4 T FT_Outline_Copy
0000000000172710 00000000000000a0 T FT_Outline_Done
00000000001727b0 0000000000000084 T FT_Outline_Get_CBox
0000000000172840 00000000000002a0 t ft_glyphslot_preset_bitmap
0000000000172ae0 0000000000000048 T FT_Outline_Translate
0000000000172b30 000000000000007c T FT_Vector_Transform
0000000000172bb0 0000000000000064 T FT_Outline_Transform
0000000000172c20 00000000000001bc T FT_Outline_Get_Orientation
0000000000172de0 00000000000003ac T FT_Outline_EmboldenXY
0000000000173190 000000000000022c T ps_property_set
00000000001733c0 00000000000000cc T ps_property_get
0000000000173490 00000000000000f0 t FT_Raccess_Guess
0000000000173580 0000000000000014 t FT_Stream_OpenMemory
00000000001735a0 0000000000000018 t FT_Stream_Close
00000000001735c0 000000000000005c t FT_Stream_Seek
0000000000173620 0000000000000070 t FT_Stream_Skip
0000000000173690 0000000000000008 t FT_Stream_Pos
00000000001736a0 00000000000000a0 t FT_Stream_Read
0000000000173740 000000000000009c t FT_Stream_ReadAt
00000000001737e0 0000000000000090 t FT_Stream_TryRead
0000000000173870 0000000000000040 t FT_Stream_ReleaseFrame
00000000001738b0 0000000000000170 t FT_Stream_EnterFrame
0000000000173a20 0000000000000034 t FT_Stream_ExtractFrame
0000000000173a60 0000000000000040 t FT_Stream_ExitFrame
0000000000173aa0 0000000000000024 t FT_Stream_GetByte
0000000000173ad0 0000000000000034 t FT_Stream_GetUShort
0000000000173b10 000000000000002c t FT_Stream_GetUShortLE
0000000000173b40 0000000000000030 t FT_Stream_GetULong
0000000000173b70 000000000000002c t FT_Stream_GetULongLE
0000000000173ba0 0000000000000094 t FT_Stream_ReadByte
0000000000173c40 00000000000000a8 t FT_Stream_ReadUShort
0000000000173cf0 000000000000031c t FT_Raccess_Get_HeaderInfo
0000000000174010 00000000000000a0 t FT_Stream_ReadUShortLE
00000000001740b0 00000000000000b8 t FT_Stream_ReadUOffset
0000000000174170 00000000000000a4 t FT_Stream_ReadULong
0000000000174220 0000000000000448 t FT_Raccess_Get_DataOffsets
0000000000174670 0000000000000198 t raccess_guess_apple_generic.isra.0
0000000000174810 0000000000000024 t raccess_guess_apple_double
0000000000174840 0000000000000024 t raccess_guess_apple_single
0000000000174870 00000000000000a0 t FT_Stream_ReadULongLE
0000000000174910 0000000000000284 t FT_Stream_ReadFields
0000000000174ba0 0000000000000028 T FT_Tan
0000000000174bd0 000000000000008c T FT_Atan2
0000000000174c60 0000000000000044 T FT_Vector_Unit
0000000000174cb0 0000000000000020 T FT_Cos
0000000000174cd0 0000000000000020 T FT_Sin
0000000000174cf0 0000000000000164 T FT_Vector_Rotate
0000000000174e60 0000000000000118 T FT_Vector_Length
0000000000174f80 0000000000000020 t FT_Hypot
0000000000174fa0 0000000000000018 T FT_Vector_From_Polar
0000000000174fc0 0000000000000048 T FT_Angle_Diff
0000000000175010 0000000000000088 t ft_mem_alloc
00000000001750a0 0000000000000160 t FT_Stream_New
0000000000175200 000000000000007c t ft_glyphslot_alloc_bitmap
0000000000175280 0000000000000220 t open_face
00000000001754a0 0000000000000200 t FT_New_GlyphSlot
00000000001756a0 0000000000000254 t FT_Render_Glyph_Internal
0000000000175900 0000000000000028 T FT_Render_Glyph
0000000000175930 0000000000000604 T FT_Load_Glyph
0000000000175f40 00000000000001ec T FT_Get_Advances
0000000000176130 000000000000011c T FT_Get_Advance
0000000000176250 00000000000000e8 t raccess_guess_linux_double_from_file_name
0000000000176340 00000000000000b8 t raccess_guess_linux_netatalk
0000000000176400 00000000000000b8 t raccess_guess_linux_double
00000000001764c0 00000000000000b8 t raccess_guess_darwin_ufs_export
0000000000176580 000000000000005c t ft_mem_qalloc
00000000001765e0 00000000000000dc t ft_mem_qrealloc
00000000001766c0 000000000000016c t FT_CMap_New
0000000000176830 0000000000000090 t ft_mem_realloc
00000000001768c0 000000000000008c t FT_GlyphLoader_CreateExtra
0000000000176950 000000000000025c t FT_GlyphLoader_CheckPoints
0000000000176bb0 000000000000009c t FT_GlyphLoader_CheckSubGlyphs
0000000000176c50 0000000000000184 T FT_Outline_New
0000000000176de0 0000000000000134 t hash_insert
0000000000176f20 0000000000000004 t ft_hash_str_insert
0000000000176f30 0000000000000008 t ft_hash_num_insert
0000000000176f40 0000000000000014 t ft_mem_free
0000000000176f60 00000000000000ac t ft_mem_strdup
0000000000177010 0000000000000040 t ft_mem_strcpyn
0000000000177050 0000000000000030 T FT_List_Find
0000000000177080 0000000000000030 T FT_List_Add
00000000001770b0 0000000000000180 T FT_New_Size
0000000000177230 0000000000000034 T FT_List_Remove
0000000000177270 00000000000000ec T FT_Done_Size
0000000000177360 0000000000000060 T FT_List_Iterate
00000000001773c0 0000000000000084 T FT_List_Finalize
0000000000177450 0000000000000108 t destroy_face
0000000000177560 00000000000000c0 T FT_Done_Face
0000000000177620 0000000000000940 t ft_open_face_internal
0000000000177f60 0000000000000118 t open_face_from_buffer
0000000000178080 000000000000038c t open_face_PS_from_sfnt_stream.isra.0
0000000000178410 00000000000007a8 t IsMacResource
0000000000178bc0 0000000000000008 T FT_Open_Face
0000000000178bd0 00000000000001dc T FT_Remove_Module
0000000000178db0 00000000000002e0 T FT_Add_Module
0000000000179090 000000000000013c T FT_Done_Library
00000000001791d0 0000000000000038 t ft_bitmap_glyph_bbox
0000000000179210 0000000000000034 t ft_outline_glyph_prepare
0000000000179250 0000000000000020 t ft_bitmap_glyph_copy
0000000000179270 000000000000000c t ft_bitmap_glyph_done
0000000000179280 00000000000000ac t ft_bitmap_glyph_init
0000000000179330 0000000000000008 t ft_outline_glyph_bbox
0000000000179340 0000000000000068 t ft_outline_glyph_copy
00000000001793b0 0000000000000090 t ft_outline_glyph_init
0000000000179440 000000000000000c t ft_outline_glyph_done
0000000000179450 00000000000000ac t ft_svg_glyph_prepare
0000000000179500 00000000000000e0 t ft_svg_glyph_transform
00000000001795e0 00000000000000e4 t ft_svg_glyph_copy
00000000001796d0 00000000000000fc t ft_svg_glyph_init
00000000001797d0 0000000000000030 t ft_svg_glyph_done
0000000000179800 0000000000000044 t ft_outline_glyph_transform
0000000000179850 00000000000000e4 T FT_New_Glyph
0000000000179940 0000000000000074 T FT_Glyph_Transform
00000000001799c0 0000000000000040 T FT_Done_Glyph
0000000000179a00 0000000000000108 T FT_Glyph_Copy
0000000000179b10 0000000000000114 T FT_Get_Glyph
0000000000179c30 0000000000000278 T FT_Glyph_To_Bitmap
0000000000179eb0 00000000000000fc t ft_stroke_border_close
0000000000179fb0 0000000000000094 t ft_stroke_border_get_counts
000000000017a050 00000000000000e0 t ft_stroke_border_grow
000000000017a130 0000000000000084 t ft_stroke_border_cubicto
000000000017a1c0 0000000000000198 t ft_stroke_border_arcto
000000000017a360 00000000000000e4 t ft_stroke_border_lineto
000000000017a450 00000000000003fc t ft_stroker_process_corner
000000000017a850 00000000000000a4 t ft_stroker_cap.part.0.constprop.0
000000000017a900 00000000000000d8 t ft_stroker_subpath_start
000000000017a9e0 00000000000007d0 t FT_Stroker_CubicTo.part.0
000000000017b1b0 00000000000005b0 t FT_Stroker_ConicTo.part.0
000000000017b760 00000000000000a0 T FT_Stroker_New
000000000017b800 0000000000000024 T FT_Stroker_Rewind
000000000017b830 0000000000000024 T FT_Stroker_Set
000000000017b860 00000000000000ac T FT_Stroker_Done
000000000017b910 0000000000000144 T FT_Stroker_LineTo
000000000017ba60 000000000000001c T FT_Stroker_ConicTo
000000000017ba80 0000000000000024 T FT_Stroker_CubicTo
000000000017bab0 0000000000000064 T FT_Stroker_BeginSubPath
000000000017bb20 0000000000000278 T FT_Stroker_EndSubPath
000000000017bda0 0000000000000098 T FT_Stroker_GetCounts
000000000017be40 000000000000013c T FT_Stroker_ExportBorder
000000000017bf80 0000000000000038 T FT_Stroker_Export
000000000017bfc0 0000000000000314 T FT_Stroker_ParseOutline
000000000017c2e0 0000000000000148 T FT_Glyph_Stroke
000000000017c430 000000000000003c t tt_get_kerning
000000000017c470 000000000000007c t tt_get_metrics_incremental
000000000017c4f0 0000000000000074 t TT_Load_Glyph_Header
000000000017c570 0000000000000084 t tt_loader_set_pp
000000000017c600 0000000000000408 t ft_var_get_value_pointer
000000000017ca10 0000000000000020 t ft_size_reset_iterator
000000000017ca30 0000000000000014 t tt_cvt_ready_iterator
000000000017ca50 0000000000000060 t tt_get_var_blend
000000000017cab0 000000000000004c t TT_MulFix14
000000000017cb00 000000000000006c t TT_DotFix14
000000000017cb70 0000000000000008 t Current_Ppem
000000000017cb80 000000000000000c t Read_CVT
000000000017cb90 0000000000000068 t Direct_Move_X
000000000017cc00 000000000000005c t Direct_Move_Y
000000000017cc60 0000000000000018 t Direct_Move_Orig_X
000000000017cc80 0000000000000018 t Direct_Move_Orig_Y
000000000017cca0 0000000000000028 t Round_None
000000000017ccd0 000000000000003c t Round_To_Grid
000000000017cd10 0000000000000040 t Round_To_Half_Grid
000000000017cd50 0000000000000034 t Round_Down_To_Grid
000000000017cd90 000000000000003c t Round_Up_To_Grid
000000000017cdd0 000000000000003c t Round_To_Double_Grid
000000000017ce10 0000000000000058 t Round_Super
000000000017ce70 0000000000000058 t Round_Super_45
000000000017ced0 000000000000002c t Project
000000000017cf00 000000000000002c t Dual_Project
000000000017cf30 0000000000000008 t Project_x
000000000017cf40 0000000000000008 t Project_y
000000000017cf50 000000000000012c t Compute_Funcs
000000000017d080 0000000000000090 t SkipCode
000000000017d110 00000000000000bc t Move_Zp2_Point
000000000017d1d0 0000000000000020 t tt_size_init
000000000017d1f0 0000000000000014 t tt_driver_init
000000000017d210 0000000000000004 t tt_driver_done
000000000017d220 00000000000000f8 t tt_face_get_location
000000000017d320 0000000000000018 t compare_ppem
000000000017d340 00000000000000c4 t tt_size_reset_height
000000000017d410 0000000000000110 t ft_var_apply_tuple
000000000017d520 00000000000000b4 t Direct_Move_Orig
000000000017d5e0 000000000000011c t Direct_Move
000000000017d700 0000000000000090 t TT_Done_Context
000000000017d790 0000000000000078 t tt_glyphzone_done
000000000017d810 0000000000000090 t tt_size_done_bytecode
000000000017d8a0 0000000000000024 t tt_size_done
000000000017d8d0 0000000000000040 t tt_var_done_delta_set_index_map
000000000017d910 00000000000000d8 t tt_var_done_item_variation_store
000000000017d9f0 000000000000002c t tt_construct_ps_name
000000000017da20 00000000000001f0 t TT_Load_Context
000000000017dc10 0000000000000170 t tt_size_run_prep
000000000017dd80 0000000000000258 t TT_Hint_Glyph
000000000017dfe0 0000000000000068 t TT_Access_Glyph_Frame
000000000017e050 0000000000000008 t TT_Forget_Glyph_Frame
000000000017e060 00000000000001ec t ft_var_readpackedpoints
000000000017e250 00000000000001a8 t ft_var_readpackeddeltas
000000000017e400 0000000000000094 t Current_Ratio
000000000017e4a0 00000000000003dc t TT_Load_Simple_Glyph
000000000017e880 000000000000000c t tt_slot_init
000000000017e890 000000000000067c t tt_face_vary_cvt
000000000017ef10 0000000000000104 t tt_face_load_cvt
000000000017f020 0000000000000988 t tt_face_init
000000000017f9b0 0000000000000284 t TT_Load_Composite_Glyph
000000000017fc40 000000000000004c t tt_property_get
000000000017fc90 00000000000003fc t tt_var_get_item_delta
0000000000180090 00000000000001b0 t tt_apply_mvar
0000000000180240 00000000000002c8 t ft_var_to_normalized
0000000000180510 00000000000004e0 t tt_var_load_item_variation_store
00000000001809f0 0000000000000254 t tt_var_load_delta_set_index_mapping
0000000000180c50 0000000000000234 t ft_var_load_hvvar
0000000000180e90 00000000000000f4 t tt_hvadvance_adjust
0000000000180f90 0000000000000008 t tt_vadvance_adjust
0000000000180fa0 0000000000000008 t tt_hadvance_adjust
0000000000180fb0 00000000000002bc t ft_var_load_avar
0000000000181270 00000000000009bc t TT_Get_MM_Var
0000000000181c30 0000000000000044 t TT_Get_Default_Named_Instance
0000000000181c80 000000000000009c t TT_Get_VMetrics
0000000000181d20 0000000000000134 t tt_get_advances
0000000000181e60 0000000000000188 t tt_delta_interpolate.part.0
0000000000181ff0 0000000000000d74 t TT_Vary_Apply_Glyph_Deltas
0000000000182d70 000000000000019c t iup_worker_interpolate_
0000000000182f10 000000000000007c t Modify_CVT_Check.part.0
0000000000182f90 000000000000004c t Write_CVT
0000000000182fe0 000000000000006c t Move_CVT_Stretched
0000000000183050 0000000000000060 t Write_CVT_Stretched
00000000001830b0 0000000000000088 t tt_get_interface
0000000000183140 00000000000000b0 t tt_property_set
00000000001831f0 00000000000001c0 t Ins_DELTAP.constprop.0
00000000001833b0 00000000000003cc t Ins_IP.constprop.0
0000000000183780 0000000000000264 t Ins_ISECT.constprop.0
00000000001839f0 0000000000000280 t Ins_MIRP.constprop.0
0000000000183c70 0000000000000138 t Compute_Point_Displacement.constprop.0
0000000000183db0 000000000000008c t Ins_JMPR.constprop.0
0000000000183e40 00000000000000fc t SetSuperRound.constprop.0
0000000000183f40 0000000000000160 t tt_size_reset
00000000001840a0 0000000000000064 t tt_size_select
0000000000184110 0000000000000110 t tt_size_request
0000000000184220 0000000000000054 t Move_CVT
0000000000184280 00000000000002b0 t Ins_IUP.constprop.0
0000000000184530 0000000000000790 t tt_set_mm_blend
0000000000184cc0 0000000000000008 t TT_Set_MM_Blend
0000000000184cd0 00000000000000f4 t TT_Get_Var_Design
0000000000184dd0 000000000000024c t TT_Set_Var_Design
0000000000185020 0000000000000120 t TT_Set_Named_Instance
0000000000185140 00000000000000f4 t TT_Get_MM_Blend
0000000000185240 0000000000001084 t load_truetype_glyph
00000000001862d0 0000000000000100 t Ins_SxVTL.constprop.0
00000000001863d0 000000000000021c t tt_done_blend
00000000001865f0 00000000000000c4 t tt_face_done
00000000001866c0 0000000000000098 t Current_Ppem_Stretched
0000000000186760 000000000000009c t Read_CVT_Stretched
0000000000186800 000000000000010c t Ins_UNKNOWN.constprop.0
0000000000186910 0000000000002ab8 T TT_RunIns
00000000001893d0 0000000000000098 T TT_New_Context
0000000000189470 0000000000000f04 t TT_Load_Glyph
000000000018a380 00000000000000c8 t tt_glyph_load
000000000018a450 0000000000000020 t compare_kern_pairs
000000000018a470 0000000000000008 t t1_get_ps_name
000000000018a480 0000000000000024 t t1_ps_get_font_info
000000000018a4b0 0000000000000010 t t1_ps_get_font_extra
000000000018a4c0 0000000000000008 t t1_ps_has_glyph_names
000000000018a4d0 0000000000000044 t t1_ps_get_font_private
000000000018a520 0000000000000068 t T1_Get_Multi_Master
000000000018a590 00000000000000c4 t T1_Set_MM_WeightVector
000000000018a660 00000000000000ac t T1_Get_MM_WeightVector
000000000018a710 0000000000000038 t parse_buildchar
000000000018a750 0000000000000010 t parse_private
000000000018a760 00000000000000d0 t read_binary_data
000000000018a830 0000000000000010 t T1_GlyphSlot_Done
000000000018a840 0000000000000078 t T1_Driver_Init
000000000018a8c0 0000000000000004 t T1_Driver_Done
000000000018a8d0 0000000000000050 t T1_GlyphSlot_Init
000000000018a920 00000000000001d0 t T1_Parse_Glyph_And_Get_Char_String
000000000018aaf0 0000000000000060 t T1_Parse_Glyph
000000000018ab50 0000000000000144 t T1_Compute_Max_Advance
000000000018aca0 000000000000012c t T1_Get_Advances
000000000018add0 0000000000000174 t T1_Done_Blend
000000000018af50 00000000000004b4 t parse_encoding
000000000018b410 00000000000004b4 t T1_Load_Glyph
000000000018b8d0 000000000000007c t t1_get_name_index
000000000018b950 00000000000001ec t t1_allocate_blend
000000000018bb40 0000000000000164 t parse_weight_vector
000000000018bcb0 00000000000002b0 t parse_blend_design_positions
000000000018bf60 0000000000000590 t parse_dict
000000000018c4f0 0000000000000090 t read_pfb_tag
000000000018c580 0000000000000644 t parse_charstrings
000000000018cbd0 00000000000003d8 t parse_subrs
000000000018cfb0 0000000000000130 t t1_parse_font_matrix
000000000018d0e0 000000000000000c t Get_Interface
000000000018d0f0 00000000000000a0 t mm_axis_unmap
000000000018d190 00000000000000ec t T1_Get_Track_Kerning
000000000018d280 00000000000006d8 t t1_ps_get_font_value
000000000018d960 0000000000000028 t t1_get_glyph_name
000000000018d990 000000000000015c t mm_weights_unmap
000000000018daf0 0000000000000098 t T1_Get_MM_Blend
000000000018db90 00000000000000d0 t T1_Get_Var_Design
000000000018dc60 000000000000025c t T1_Get_MM_Var
000000000018dec0 00000000000000c4 t t1_get_index
000000000018df90 00000000000000a4 t check_type1_format.part.0
000000000018e040 0000000000000090 t Get_Kerning
000000000018e0d0 0000000000000058 t T1_Size_Get_Globals_Funcs.isra.0
000000000018e130 0000000000000060 t T1_Size_Init
000000000018e190 000000000000004c t T1_Size_Done
000000000018e1e0 0000000000000070 t T1_Size_Request
000000000018e250 000000000000011c t t1_set_mm_blend.isra.0
000000000018e370 0000000000000154 t T1_Set_MM_Design
000000000018e4d0 000000000000007c t T1_Set_Var_Design
000000000018e550 0000000000000010 t T1_Reset_MM_Blend
000000000018e560 0000000000000008 t T1_Set_MM_Blend
000000000018e570 0000000000000a88 t T1_Open_Face
000000000018f000 0000000000000428 t T1_Face_Init
000000000018f430 00000000000001b4 t T1_Face_Done
000000000018f5f0 00000000000003e8 t T1_Read_Metrics
000000000018f9e0 00000000000001ac t parse_blend_axis_types
000000000018fb90 00000000000002a0 t parse_blend_design_map
000000000018fe30 000000000000001c t cff_cmap_encoding_init
000000000018fe50 0000000000000008 t cff_cmap_encoding_done
000000000018fe60 000000000000001c t cff_cmap_encoding_char_index
000000000018fe80 0000000000000040 t cff_cmap_encoding_char_next
000000000018fec0 000000000000004c t cff_cmap_unicode_init
000000000018ff10 0000000000000018 t cff_cmap_unicode_char_index
000000000018ff30 0000000000000018 t cff_cmap_unicode_char_next
000000000018ff50 000000000000003c t cff_get_kerning
000000000018ff90 000000000000000c t cff_ps_has_glyph_names
000000000018ffa0 000000000000002c t cff_get_is_cid
000000000018ffd0 0000000000000048 t cff_get_cid_from_glyph_index
0000000000190020 0000000000000010 t cff_set_mm_blend
0000000000190030 0000000000000010 t cff_get_mm_blend
0000000000190040 0000000000000010 t cff_set_mm_weightvector
0000000000190050 0000000000000010 t cff_get_mm_weightvector
0000000000190060 0000000000000010 t cff_construct_ps_name
0000000000190070 0000000000000010 t cff_get_mm_var
0000000000190080 0000000000000010 t cff_set_var_design
0000000000190090 0000000000000010 t cff_get_var_design
00000000001900a0 0000000000000010 t cff_set_named_instance
00000000001900b0 0000000000000010 t cff_get_default_named_instance
00000000001900c0 0000000000000010 t cff_load_item_variation_store
00000000001900d0 0000000000000010 t cff_load_delta_set_index_mapping
00000000001900e0 0000000000000010 t cff_get_item_delta
00000000001900f0 0000000000000010 t cff_done_item_variation_store
0000000000190100 0000000000000010 t cff_done_delta_set_index_map
0000000000190110 0000000000000010 t cff_hadvance_adjust
0000000000190120 0000000000000010 t cff_metrics_adjust
0000000000190130 00000000000000d0 t cff_parse_integer
0000000000190200 0000000000000020 t cff_get_standard_encoding
0000000000190220 00000000000000ac t cff_fd_select_get
00000000001902d0 0000000000000010 t cff_get_var_blend
00000000001902e0 0000000000000018 t cff_done_blend
0000000000190300 0000000000000010 t cff_slot_done
0000000000190310 0000000000000078 t cff_driver_init
0000000000190390 0000000000000004 t cff_driver_done
00000000001903a0 0000000000000034 t cff_cmap_unicode_done
00000000001903e0 00000000000000c4 t cff_vstore_done
00000000001904b0 0000000000000054 t cff_slot_init
0000000000190510 0000000000000178 t cff_make_private_dict
0000000000190690 0000000000000050 t cff_index_done
00000000001906e0 00000000000000a0 t cff_get_cmap_info
0000000000190780 0000000000000084 t cff_get_ps_name
0000000000190810 0000000000000420 t cff_parse_real
0000000000190c30 0000000000000128 t cff_get_name_index
0000000000190d60 00000000000000f0 t cff_charset_compute_cids
0000000000190e50 0000000000000064 t cff_blend_check_vector
0000000000190ec0 0000000000000290 t cff_blend_build_vector
0000000000191150 0000000000000408 t cff_index_get_pointers
0000000000191560 0000000000000058 t cff_index_get_sid_string
00000000001915c0 00000000000000c4 t cff_get_ros
0000000000191690 0000000000000118 t cff_ps_get_font_info
00000000001917b0 00000000000000d4 t cff_get_glyph_name
0000000000191890 0000000000000144 t cff_ps_get_font_extra
00000000001919e0 0000000000000068 t cff_subfont_done.part.0
0000000000191a50 000000000000007c t cff_get_interface
0000000000191ad0 0000000000000058 t cff_size_get_globals_funcs.isra.0
0000000000191b30 0000000000000170 t cff_size_init
0000000000191ca0 000000000000008c t cff_size_done
0000000000191d30 0000000000000108 t cff_size_select
0000000000191e40 00000000000001a0 t cff_size_request
0000000000191fe0 00000000000001e8 t cff_face_done
00000000001921d0 0000000000000308 t cff_parse_font_matrix
00000000001924e0 00000000000000f8 t do_fixed.isra.0
00000000001925e0 00000000000000b8 t cff_parse_font_bbox
00000000001926a0 0000000000000074 t cff_parse_num.isra.0
0000000000192720 000000000000008c t cff_parse_private_dict
00000000001927b0 0000000000000080 t cff_parse_multiple_master
0000000000192830 0000000000000084 t cff_parse_cid_ros
00000000001928c0 0000000000000060 t cff_parse_vsindex
0000000000192920 0000000000000354 t cff_parser_run
0000000000192c80 000000000000021c t cff_load_private_dict
0000000000192ea0 0000000000000058 t cff_free_glyph_data
0000000000192f00 0000000000000310 t cff_parse_blend
0000000000193210 0000000000000260 t cff_index_access_element
0000000000193470 0000000000000058 t cff_get_glyph_data
00000000001934d0 0000000000000898 t cff_slot_load
0000000000193d70 0000000000000038 t cff_glyph_load
0000000000193db0 0000000000000220 t cff_get_advances
0000000000193fd0 00000000000000d8 t cff_index_get_name
00000000001940b0 00000000000001c4 t cff_index_init
0000000000194280 0000000000000354 t cff_subfont_load
00000000001945e0 0000000000001da4 t cff_face_init
0000000000196390 0000000000000060 t cff_sid_to_glyph_name
00000000001963f0 00000000000000b0 t cff_parse_maxstack
00000000001964a0 0000000000000054 t parse_expansion_factor
0000000000196500 0000000000000004 t parse_font_name
0000000000196510 0000000000000010 t cid_slot_done
0000000000196520 0000000000000078 t cid_driver_init
00000000001965a0 0000000000000004 t cid_driver_done
00000000001965b0 0000000000000018 t cid_get_postscript_name
00000000001965d0 0000000000000024 t cid_ps_get_font_info
0000000000196600 0000000000000010 t cid_ps_get_font_extra
0000000000196610 000000000000002c t cid_get_ros
0000000000196640 0000000000000014 t cid_get_is_cid
0000000000196660 0000000000000050 t cid_slot_init
00000000001966b0 0000000000000154 t cid_face_done
0000000000196810 000000000000016c t cid_compute_fd_and_offsets
0000000000196980 00000000000003a0 t cid_load_glyph
0000000000196d20 00000000000003e0 t cid_slot_load_glyph
0000000000197100 000000000000003c t cid_get_cid_from_glyph_index
0000000000197140 0000000000000164 t cid_parse_font_matrix
00000000001972b0 0000000000000100 t parse_fd_array
00000000001973b0 000000000000000c t cid_get_interface
00000000001973c0 0000000000000058 t cid_size_get_globals_funcs.isra.0
0000000000197420 0000000000000070 t cid_size_init
0000000000197490 000000000000004c t cid_size_done
00000000001974e0 000000000000006c t cid_size_request
0000000000197550 0000000000000d40 t cid_face_open
0000000000198290 0000000000000298 t cid_face_init
0000000000198530 0000000000000060 t pfr_cmap_init
0000000000198590 000000000000000c t pfr_cmap_done
00000000001985a0 0000000000000070 t pfr_cmap_char_index
0000000000198610 00000000000000c0 t pfr_cmap_char_next
00000000001986d0 0000000000000044 t pfr_get_advance
0000000000198720 00000000000000a8 t pfr_glyph_close_contour
00000000001987d0 00000000000001ec t pfr_face_get_kerning
00000000001989c0 0000000000000228 t pfr_extra_item_load_bitmap_info
0000000000198bf0 0000000000000058 t pfr_slot_done
0000000000198c50 0000000000000034 t pfr_slot_init
0000000000198c90 0000000000000114 t pfr_extra_item_load_stem_snaps
0000000000198db0 000000000000014c t pfr_extra_item_load_kerning_pairs
0000000000198f00 000000000000009c t pfr_extra_item_load_font_id
0000000000198fa0 00000000000000e8 t pfr_aux_name_load
0000000000199090 000000000000000c t pfr_get_service
00000000001990a0 0000000000000090 t pfr_get_metrics
0000000000199130 0000000000000080 t pfr_get_kerning
00000000001991b0 00000000000000f8 t pfr_face_done
00000000001992b0 000000000000008c t pfr_glyph_line_to.isra.0
0000000000199340 0000000000000a6c t pfr_glyph_load_rec
0000000000199db0 0000000000000a20 t pfr_slot_load
000000000019a7d0 0000000000000cb0 t pfr_face_init
000000000019b480 0000000000000008 t t42_get_ps_font_name
000000000019b490 0000000000000024 t t42_ps_get_font_info
000000000019b4c0 0000000000000010 t t42_ps_get_font_extra
000000000019b4d0 0000000000000008 t t42_ps_has_glyph_names
000000000019b4e0 0000000000000004 t T42_Driver_Done
000000000019b4f0 000000000000006c t T42_Size_Select
000000000019b560 000000000000006c t T42_Size_Request
000000000019b5d0 0000000000000148 t T42_GlyphSlot_Load
000000000019b720 000000000000000c t T42_GlyphSlot_Done
000000000019b730 0000000000000098 t T42_GlyphSlot_Init
000000000019b7d0 000000000000005c t T42_Size_Init
000000000019b830 0000000000000138 t T42_Face_Done
000000000019b970 000000000000004c t T42_Driver_Init
000000000019b9c0 0000000000000510 t t42_parse_charstrings
000000000019bed0 00000000000000ac t t42_get_name_index
000000000019bf80 00000000000004ec t t42_parse_sfnts
000000000019c470 0000000000000120 t t42_parse_font_matrix
000000000019c590 000000000000000c t T42_Get_Interface
000000000019c5a0 0000000000000028 t t42_get_glyph_name
000000000019c5d0 0000000000000040 t T42_Size_Done
000000000019c610 0000000000000a3c t T42_Face_Init
000000000019d050 0000000000000478 t t42_parse_encoding
000000000019d4d0 000000000000002c t fnt_cmap_init
000000000019d500 0000000000000014 t fnt_cmap_char_index
000000000019d520 0000000000000050 t fnt_cmap_char_next
000000000019d570 0000000000000048 t winfnt_get_header
000000000019d5c0 0000000000000058 t FNT_Size_Select
000000000019d620 0000000000000250 t FNT_Load_Glyph
000000000019d870 0000000000000064 t fnt_font_done
000000000019d8e0 00000000000000d4 t fnt_font_load
000000000019d9c0 000000000000000c t winfnt_get_service
000000000019d9d0 0000000000000aa0 t FNT_Face_Init
000000000019e470 0000000000000040 t FNT_Face_Done
000000000019e4b0 0000000000000100 t FNT_Size_Request
000000000019e5b0 0000000000000018 t pcf_cmap_init
000000000019e5d0 0000000000000008 t pcf_cmap_done
000000000019e5e0 0000000000000058 t pcf_cmap_char_index
000000000019e640 00000000000000c0 t pcf_cmap_char_next
000000000019e700 000000000000001c t pcf_get_charset_id
000000000019e720 0000000000000008 t pcf_property_set
000000000019e730 0000000000000008 t pcf_property_get
000000000019e740 0000000000000008 t pcf_driver_init
000000000019e750 0000000000000004 t pcf_driver_done
000000000019e760 000000000000004c t PCF_Size_Select
000000000019e7b0 00000000000002a8 t PCF_Glyph_Load
000000000019ea60 000000000000000c t pcf_driver_requester
000000000019ea70 0000000000000168 t PCF_Face_Done.part.0
000000000019ebe0 000000000000000c t PCF_Face_Done
000000000019ebf0 0000000000000090 t pcf_find_property.isra.0
000000000019ec80 0000000000000070 t pcf_get_bdf_property
000000000019ecf0 00000000000000f0 t PCF_Size_Request
000000000019ede0 0000000000000230 t pcf_get_accel
000000000019f010 0000000000001494 t pcf_load_font
00000000001a04b0 0000000000000270 t PCF_Face_Init
00000000001a0720 00000000000000b8 t bdf_atol_
00000000001a07e0 00000000000000c0 t bdf_atos_
00000000001a08a0 0000000000000018 t by_encoding
00000000001a08c0 0000000000000008 t bdf_parse_end_
00000000001a08d0 000000000000001c t bdf_cmap_init
00000000001a08f0 0000000000000008 t bdf_cmap_done
00000000001a0900 0000000000000078 t bdf_cmap_char_index
00000000001a0980 00000000000000c8 t bdf_cmap_char_next
00000000001a0a50 000000000000001c t bdf_get_charset_id
00000000001a0a70 0000000000000048 t BDF_Size_Select
00000000001a0ac0 0000000000000148 t BDF_Glyph_Load
00000000001a0c10 000000000000009c t bdf_list_ensure_
00000000001a0cb0 0000000000000088 t bdf_add_comment_
00000000001a0d40 000000000000000c t bdf_driver_requester
00000000001a0d50 0000000000000088 t bdf_atoul_
00000000001a0de0 0000000000000088 t bdf_atous_
00000000001a0e70 00000000000001cc t bdf_free_font.part.0
00000000001a1040 00000000000000a4 t BDF_Face_Done
00000000001a10f0 0000000000000258 t bdf_list_split_.part.0
00000000001a1350 00000000000000a4 t bdf_list_join_.constprop.0
00000000001a1400 0000000000000058 t bdf_list_shift_.constprop.0
00000000001a1460 000000000000053c t bdf_add_property_.isra.0
00000000001a19a0 00000000000000f0 t BDF_Size_Request
00000000001a1a90 00000000000000b0 t bdf_get_bdf_property
00000000001a1b40 00000000000003c4 t bdf_parse_properties_
00000000001a1f10 0000000000001010 t BDF_Face_Init
00000000001a2f20 00000000000008a0 t bdf_parse_start_
00000000001a37c0 0000000000000c64 t bdf_parse_glyphs_
00000000001a4430 0000000000000098 t premultiply_data
00000000001a44d0 0000000000000048 t convert_bytes_to_data
00000000001a4520 0000000000000004 t warning_callback
00000000001a4530 0000000000000094 t get_sfnt_table
00000000001a45d0 0000000000000060 t sfnt_table_info
00000000001a4630 0000000000000034 t sfnt_is_postscript
00000000001a4670 0000000000000028 t sfnt_is_alphanumeric
00000000001a46a0 00000000000000d4 t sfnt_get_name_id
00000000001a4780 0000000000000020 t compare_offsets
00000000001a47a0 0000000000000010 t tt_cmap_init
00000000001a47b0 0000000000000020 t tt_cmap0_char_index
00000000001a47d0 0000000000000044 t tt_cmap0_char_next
00000000001a4820 0000000000000020 t tt_cmap0_get_info
00000000001a4840 0000000000000058 t tt_cmap2_get_subheader
00000000001a48a0 000000000000008c t tt_cmap2_char_index
00000000001a4930 00000000000001ac t tt_cmap2_char_next
00000000001a4ae0 0000000000000024 t tt_cmap2_get_info
00000000001a4b10 0000000000000028 t tt_cmap4_init
00000000001a4b40 0000000000000114 t tt_cmap4_set_range
00000000001a4c60 0000000000000154 t tt_cmap4_next
00000000001a4dc0 0000000000000234 t tt_cmap4_char_map_linear
00000000001a5000 00000000000005a4 t tt_cmap4_char_map_binary
00000000001a55b0 0000000000000050 t tt_cmap4_char_index
00000000001a5600 0000000000000080 t tt_cmap4_char_next
00000000001a5680 0000000000000024 t tt_cmap4_get_info
00000000001a56b0 0000000000000040 t tt_cmap6_char_index
00000000001a56f0 00000000000000a4 t tt_cmap6_char_next
00000000001a57a0 0000000000000024 t tt_cmap6_get_info
00000000001a57d0 000000000000008c t tt_cmap8_char_index
00000000001a5860 0000000000000128 t tt_cmap8_char_next
00000000001a5990 0000000000000020 t tt_cmap8_get_info
00000000001a59b0 000000000000004c t tt_cmap10_char_index
00000000001a5a00 000000000000008c t tt_cmap10_char_next
00000000001a5a90 0000000000000020 t tt_cmap10_get_info
00000000001a5ab0 0000000000000020 t tt_cmap12_init
00000000001a5ad0 00000000000000e8 t tt_cmap12_next
00000000001a5bc0 0000000000000140 t tt_cmap12_char_map_binary
00000000001a5d00 0000000000000020 t tt_cmap12_char_index
00000000001a5d20 0000000000000020 t tt_cmap12_get_info
00000000001a5d40 0000000000000020 t tt_cmap13_init
00000000001a5d60 0000000000000084 t tt_cmap13_next
00000000001a5df0 0000000000000124 t tt_cmap13_char_map_binary
00000000001a5f20 0000000000000020 t tt_cmap13_char_index
00000000001a5f40 0000000000000020 t tt_cmap13_get_info
00000000001a5f60 0000000000000024 t tt_cmap14_init
00000000001a5f90 0000000000000008 t tt_cmap14_char_index
00000000001a5fa0 000000000000000c t tt_cmap14_char_next
00000000001a5fb0 0000000000000014 t tt_cmap14_get_info
00000000001a5fd0 0000000000000074 t tt_cmap14_char_map_def_binary
00000000001a6050 0000000000000074 t tt_cmap14_char_map_nondef_binary
00000000001a60d0 0000000000000070 t tt_cmap14_find_variant
00000000001a6140 000000000000007c t tt_cmap14_char_var_index
00000000001a61c0 0000000000000084 t tt_cmap14_char_var_isdefault
00000000001a6250 0000000000000038 t tt_cmap_unicode_init
00000000001a6290 0000000000000014 t tt_cmap_unicode_char_index
00000000001a62b0 0000000000000014 t tt_cmap_unicode_char_next
00000000001a62d0 000000000000001c t tt_get_cmap_info
00000000001a62f0 0000000000000144 t tt_face_get_colr_layer
00000000001a6440 000000000000007c t get_child_table_pointer
00000000001a64c0 00000000000000ec t get_deltas_for_var_index_base
00000000001a65b0 00000000000000d4 t tt_face_get_colr_glyph_paint
00000000001a6690 00000000000000a8 t tt_face_get_paint_layers
00000000001a6740 00000000000000a0 t tt_face_palette_set
00000000001a67e0 000000000000002c t extract_svg_doc
00000000001a6810 0000000000000188 t tt_face_get_kerning
00000000001a69a0 00000000000000a8 t tt_sbit_decoder_load_metrics
00000000001a6a50 00000000000001ec t tt_sbit_decoder_load_byte_aligned
00000000001a6c40 000000000000022c t tt_sbit_decoder_load_bit_aligned
00000000001a6e70 000000000000000c t sfnt_get_interface
00000000001a6e80 00000000000001b0 t tt_face_load_kern
00000000001a7030 0000000000000030 t tt_face_free_sbit
00000000001a7060 00000000000001fc t tt_face_get_metrics
00000000001a7260 00000000000000a0 t tt_name_ascii_from_other
00000000001a7300 00000000000000b8 t tt_name_ascii_from_utf16
00000000001a73c0 0000000000000040 t tt_face_free_svg
00000000001a7400 0000000000000288 t tt_face_get_name
00000000001a7690 000000000000007c t tt_face_free_colr
00000000001a7710 0000000000000040 t tt_face_free_cpal
00000000001a7750 0000000000000084 t tt_face_free_ps_names
00000000001a77e0 00000000000000e4 t tt_face_free_name
00000000001a78d0 000000000000020c t sfnt_done_face
00000000001a7ae0 0000000000000030 t sfnt_stream_close
00000000001a7b10 0000000000000038 t tt_cmap14_done
00000000001a7b50 0000000000000034 t tt_cmap_unicode_done
00000000001a7b90 00000000000002b0 t tt_face_load_svg_doc
00000000001a7e40 0000000000000154 t tt_face_load_svg
00000000001a7fa0 00000000000003bc t tt_face_colr_blend_layer
00000000001a8360 00000000000003b8 t tt_face_load_colr
00000000001a8720 0000000000000080 t tt_face_load_hmtx
00000000001a87a0 00000000000003c4 t tt_face_load_cpal
00000000001a8b70 00000000000002a4 t tt_face_load_strike_metrics
00000000001a8e20 0000000000000164 t tt_face_load_gasp
00000000001a8f90 000000000000000c t tt_face_set_sbit_strike
00000000001a8fa0 00000000000003f4 t tt_face_load_sbit
00000000001a93a0 0000000000000058 t tt_face_load_pclt
00000000001a9400 0000000000000398 t tt_face_load_name
00000000001a97a0 00000000000000e0 t tt_face_load_maxp
00000000001a9880 0000000000000098 t tt_face_load_hhea
00000000001a9920 0000000000000430 t Load_SBit_Png
00000000001a9d50 000000000000007c t tt_sbit_decoder_load_png
00000000001a9dd0 000000000000003c t error_callback
00000000001a9e10 00000000000000b8 t tt_cmap0_validate
00000000001a9ed0 000000000000024c t tt_cmap2_validate
00000000001aa120 00000000000004fc t tt_cmap4_validate
00000000001aa620 00000000000000e4 t tt_cmap6_validate
00000000001aa710 0000000000000298 t tt_cmap8_validate
00000000001aa9b0 00000000000000e8 t tt_cmap10_validate
00000000001aaaa0 0000000000000168 t tt_cmap12_validate
00000000001aac10 0000000000000158 t tt_cmap13_validate
00000000001aad70 000000000000036c t tt_cmap14_validate
00000000001ab0e0 0000000000000070 t tt_cmap12_char_next
00000000001ab150 0000000000000070 t tt_cmap13_char_next
00000000001ab1c0 0000000000000060 t tt_face_load_cmap
00000000001ab220 0000000000000470 t tt_face_get_ps_name.part.0
00000000001ab690 0000000000000024 t tt_face_get_ps_name
00000000001ab6c0 0000000000000058 t tt_face_load_bhed
00000000001ab720 0000000000000084 t tt_face_load_post
00000000001ab7b0 00000000000000fc t tt_face_load_os2
00000000001ab8b0 0000000000000074 t read_data_from_FT_Stream
00000000001ab930 00000000000003f0 t tt_face_load_font_dir
00000000001abd20 000000000000027c t tt_face_build_cmaps.isra.0
00000000001abfa0 0000000000000ef0 t sfnt_init_face
00000000001ace90 000000000000012c t get_apple_string.isra.0
00000000001acfc0 0000000000000144 t get_win_string.isra.0
00000000001ad110 0000000000000a60 t sfnt_get_ps_name
00000000001adb70 0000000000000058 t tt_face_load_head
00000000001adbd0 00000000000000cc t sfnt_get_name_index
00000000001adca0 0000000000000048 t tt_get_glyph_name
00000000001adcf0 0000000000000088 t sfnt_get_glyph_name
00000000001add80 0000000000000058 t tt_face_goto_table
00000000001adde0 0000000000000090 t sfnt_load_table
00000000001ade70 0000000000000090 t tt_face_load_any
00000000001adf00 000000000000032c t tt_face_find_bdf_prop
00000000001ae230 0000000000000098 t sfnt_get_charset_id
00000000001ae2d0 00000000000000e4 t tt_cmap14_variants
00000000001ae3c0 00000000000000f4 t tt_cmap14_get_nondef_chars
00000000001ae4c0 0000000000000158 t tt_cmap14_get_def_chars
00000000001ae620 00000000000003b0 t tt_cmap14_variant_chars
00000000001ae9d0 0000000000000140 t tt_cmap14_char_variants
00000000001aeb10 0000000000000688 t tt_sbit_decoder_load_image
00000000001af1a0 0000000000000160 t tt_sbit_decoder_load_compound
00000000001af300 0000000000000544 t tt_face_load_sbit_image
00000000001af850 0000000000000c58 t sfnt_load_face
00000000001b04b0 00000000000001cc t tt_face_get_colorline_stops
00000000001b0680 0000000000000364 t tt_face_get_color_glyph_clipbox
00000000001b09f0 0000000000000f70 t tt_face_get_paint
00000000001b1960 000000000000001c t af_cjk_get_standard_widths
00000000001b1980 000000000000007c t af_cjk_hints_init
00000000001b1a00 0000000000000078 t af_cjk_snap_width
00000000001b1a00 0000000000000078 t af_latin_snap_width
00000000001b1a80 000000000000002c t af_dummy_hints_init
00000000001b1ab0 0000000000000300 t af_sort_and_quantize_widths
00000000001b1db0 000000000000001c t af_latin_get_standard_widths
00000000001b1dd0 00000000000001a4 t af_latin_hints_link_segments
00000000001b1f80 0000000000000080 t af_latin_hints_init
00000000001b2000 0000000000000044 t af_autofitter_init
00000000001b2050 0000000000000004 t af_autofitter_done
00000000001b2060 000000000000019c t af_cjk_hints_compute_blue_edges
00000000001b2200 0000000000000780 t af_glyph_hints_reload
00000000001b2980 00000000000007a8 t af_latin_hints_compute_segments
00000000001b3130 00000000000001d0 t af_axis_hints_new_edge
00000000001b3300 0000000000000260 t af_glyph_hints_align_strong_points
00000000001b3560 00000000000001b0 t af_cjk_metrics_scale_dim
00000000001b3710 0000000000000048 t af_cjk_metrics_scale
00000000001b3760 000000000000044c t af_latin_hints_compute_edges
00000000001b3bb0 00000000000003d8 t af_latin_metrics_scale_dim
00000000001b3f90 0000000000000044 t af_latin_metrics_scale
00000000001b3fe0 00000000000000f0 t af_glyph_hints_done
00000000001b40d0 00000000000000a0 t af_face_globals_free
00000000001b4170 000000000000000c t af_get_interface
00000000001b4180 0000000000000700 t af_cjk_hints_detect_features
00000000001b4880 0000000000000110 t af_iup_interp.part.0
00000000001b4990 00000000000002a0 t af_glyph_hints_align_weak_points
00000000001b4c30 00000000000003bc t af_face_globals_new
00000000001b4ff0 00000000000002b8 t af_property_set
00000000001b52b0 0000000000000278 t af_loader_compute_darkening.isra.0
00000000001b5530 000000000000084c t af_autofitter_load_glyph
00000000001b5d80 0000000000000240 t af_latin_compute_stem_width.isra.0
00000000001b5fc0 0000000000000044 t af_glyph_hints_save.isra.0
00000000001b6010 0000000000000058 t af_dummy_hints_apply
00000000001b6070 0000000000000194 t af_cjk_compute_stem_width.isra.0
00000000001b6210 000000000000025c t af_hint_normal_stem
00000000001b6470 000000000000001c t af_indic_get_standard_widths
00000000001b6490 0000000000000048 t af_indic_metrics_scale
00000000001b64e0 00000000000007d8 t af_cjk_hints_apply
00000000001b6cc0 0000000000000004 t af_indic_hints_apply
00000000001b6cd0 0000000000000bd4 t af_latin_hints_apply
00000000001b78b0 000000000000007c t af_indic_hints_init
00000000001b7930 00000000000001b8 t af_property_get
00000000001b7af0 0000000000000154 t af_shaper_get_cluster
00000000001b7c50 00000000000002dc t af_cjk_metrics_init_widths
00000000001b7f30 00000000000004bc t af_cjk_metrics_init_blues
00000000001b83f0 00000000000002f4 t af_latin_metrics_init_widths
00000000001b86f0 0000000000000ac4 t af_latin_metrics_init_blues
00000000001b91c0 000000000000014c t af_latin_metrics_init
00000000001b9310 0000000000000104 t af_cjk_metrics_check_digits.isra.0
00000000001b9420 000000000000007c t af_indic_metrics_init
00000000001b94a0 0000000000000088 t af_cjk_metrics_init
00000000001b9530 00000000000000a8 t psh_hint_table_record
00000000001b95e0 0000000000000008 t pshinter_get_globals_funcs
00000000001b95f0 0000000000000008 t pshinter_get_t1_funcs
00000000001b9600 0000000000000008 t pshinter_get_t2_funcs
00000000001b9610 0000000000000028 t t1_hints_open
00000000001b9640 0000000000000028 t t2_hints_open
00000000001b9670 00000000000000cc t psh_globals_scale_widths
00000000001b9740 00000000000002b8 t psh_globals_set_scale
00000000001b9a00 00000000000000d0 t ps_hinter_init
00000000001b9ad0 0000000000000078 t ps_mask_table_done
00000000001b9b50 00000000000000dc t ps_mask_table_alloc
00000000001b9c30 000000000000008c t ps_mask_ensure
00000000001b9cc0 000000000000002c t psh_globals_destroy
00000000001b9cf0 0000000000000458 t psh_hint_align
00000000001ba150 00000000000001f0 t ps_mask_table_merge_all
00000000001ba340 0000000000000138 t psh_blues_set_zones_0.isra.0
00000000001ba480 00000000000001ec t psh_blues_set_zones
00000000001ba670 00000000000002c0 t psh_hint_table_find_strong_points.isra.0
00000000001ba930 000000000000021c t psh_hint_table_init.isra.0
00000000001bab50 0000000000000128 t psh_hint_table_activate_mask.isra.0
00000000001bac80 0000000000000084 t ps_hints_close.part.0
00000000001bad10 0000000000000014 t t1_hints_close
00000000001bad30 0000000000000088 t ps_hinter_done
00000000001badc0 0000000000000014 t t2_hints_close
00000000001bade0 0000000000000140 t ps_dimension_set_mask_bits
00000000001baf20 00000000000000ac t ps_hints_t2counter
00000000001bafd0 00000000000000ac t ps_hints_t2mask
00000000001bb080 00000000000000b0 t ps_hints_t1reset
00000000001bb130 000000000000120c t ps_hints_apply.part.0
00000000001bc340 000000000000001c t t1_hints_apply
00000000001bc360 000000000000001c t t2_hints_apply
00000000001bc380 0000000000000274 t psh_globals_new
00000000001bc600 00000000000001cc t ps_dimension_add_t1stem
00000000001bc7d0 000000000000007c t t1_hints_stem
00000000001bc850 0000000000000124 t t2_hints_stems
00000000001bc980 0000000000000284 t ps_hints_t1stem3
00000000001bcc10 0000000000000004 t gray_raster_reset
00000000001bcc20 0000000000000008 t gray_raster_set_mode
00000000001bcc30 0000000000000018 t ft_smooth_set_mode
00000000001bcc50 0000000000000048 t ft_smooth_init
00000000001bcca0 0000000000000070 t ft_smooth_lcd_spans
00000000001bcd10 0000000000000094 t ft_smooth_overlap_spans
00000000001bcdb0 000000000000000c t gray_raster_done
00000000001bcdc0 0000000000000084 t gray_convert_glyph_inner
00000000001bce50 00000000000000b8 t gray_set_cell
00000000001bcf10 0000000000000304 t gray_render_line
00000000001bd220 000000000000002c t gray_line_to
00000000001bd250 000000000000004c t gray_move_to
00000000001bd2a0 0000000000000650 t gray_convert_glyph
00000000001bd8f0 0000000000000144 t gray_raster_render
00000000001bda40 0000000000000040 t gray_raster_new
00000000001bda80 000000000000002c t ft_smooth_get_cbox
00000000001bdab0 0000000000000620 t ft_smooth_render
00000000001be0d0 0000000000000064 t ft_smooth_transform
00000000001be140 0000000000000210 t gray_render_cubic.isra.0
00000000001be350 000000000000002c t gray_cubic_to
00000000001be380 00000000000001a4 t gray_conic_to
00000000001be530 00000000000000b0 t New_Profile
00000000001be5e0 00000000000000a4 t End_Profile
00000000001be690 00000000000000bc t Insert_Y_Turn
00000000001be750 0000000000000030 t Split_Conic
00000000001be780 000000000000009c t Split_Cubic
00000000001be820 000000000000020c t Bezier_Up
00000000001bea30 000000000000021c t Conic_To
00000000001bec50 000000000000009c t Sort
00000000001becf0 000000000000001c t Vertical_Sweep_Init
00000000001bed10 0000000000000148 t Vertical_Sweep_Span
00000000001bee60 0000000000000248 t Vertical_Sweep_Drop
00000000001bf0b0 0000000000000014 t Vertical_Sweep_Step
00000000001bf0d0 0000000000000004 t Horizontal_Sweep_Init
00000000001bf0e0 00000000000000cc t Horizontal_Sweep_Span
00000000001bf1b0 0000000000000268 t Horizontal_Sweep_Drop
00000000001bf420 0000000000000004 t Horizontal_Sweep_Step
00000000001bf430 0000000000000004 t ft_black_reset
00000000001bf440 0000000000000008 t ft_black_set_mode
00000000001bf450 0000000000000030 t ft_raster1_init
00000000001bf480 0000000000000018 t ft_raster1_set_mode
00000000001bf4a0 000000000000000c t ft_black_done
00000000001bf4b0 0000000000000254 t Line_Up
00000000001bf710 0000000000000248 t Line_To
00000000001bf960 0000000000000040 t ft_black_new
00000000001bf9a0 000000000000002c t ft_raster1_get_cbox
00000000001bf9d0 00000000000001c4 t ft_raster1_render
00000000001bfba0 0000000000000064 t ft_raster1_transform
00000000001bfc10 0000000000000260 t Cubic_To
00000000001bfe70 0000000000000ae0 t Render_Single_Pass.constprop.0
00000000001c0950 0000000000000218 t ft_black_render
00000000001c0b70 0000000000000010 t ft_svg_init
00000000001c0b80 0000000000000038 t ft_svg_done
00000000001c0bc0 0000000000000080 t ft_svg_preset_slot
00000000001c0c40 00000000000000e8 t ft_svg_transform
00000000001c0d30 000000000000000c t ft_svg_get_interface
00000000001c0d40 0000000000000050 t ft_svg_property_get
00000000001c0d90 00000000000000a4 t ft_svg_property_set
00000000001c0e40 0000000000000128 t ft_svg_render
00000000001c0f70 000000000000001c t ft_sdf_init
00000000001c0f90 0000000000000004 t ft_sdf_done
00000000001c0fa0 0000000000000018 t ft_sdf_set_mode
00000000001c0fc0 0000000000000004 t bsdf_raster_reset
00000000001c0fd0 0000000000000008 t bsdf_raster_set_mode
00000000001c0fe0 0000000000000118 t split_cubic
00000000001c1100 000000000000002c t ft_sdf_get_cbox
00000000001c1130 000000000000000c t bsdf_raster_done
00000000001c1140 000000000000000c t sdf_raster_done
00000000001c1150 00000000000002a0 t ft_sdf_render
00000000001c13f0 000000000000000c t ft_sdf_requester
00000000001c1400 00000000000000b4 t sdf_property_get
00000000001c14c0 00000000000000e0 t sdf_property_set
00000000001c15a0 00000000000001fc t ft_bsdf_render
00000000001c17a0 0000000000000090 t compare_neighbor
00000000001c1830 0000000000000078 t map_fixed_to_sdf
00000000001c18b0 0000000000000040 t bsdf_raster_new
00000000001c18f0 0000000000000040 t sdf_raster_new
00000000001c1930 0000000000000068 t sdf_edge_new
00000000001c19a0 00000000000000ac t sdf_cubic_to
00000000001c1a50 00000000000000a4 t sdf_line_to
00000000001c1b00 00000000000000fc t sdf_conic_to
00000000001c1c00 0000000000000164 t split_sdf_conic
00000000001c1d70 0000000000000188 t split_sdf_cubic
00000000001c1f00 0000000000000064 t ft_sdf_transform
00000000001c1f70 0000000000000068 t sdf_contour_done
00000000001c1fe0 00000000000001f0 t split_sdf_shape
00000000001c21d0 0000000000000008 t sdf_raster_set_mode
00000000001c21e0 0000000000000004 t sdf_raster_reset
00000000001c21f0 0000000000000f10 t sdf_generate_bounding_box.isra.0
00000000001c3100 00000000000006f8 t sdf_raster_render
00000000001c3800 000000000000007c t sdf_move_to
00000000001c3880 0000000000000bc8 t bsdf_raster_render
00000000001c4450 0000000000000004 t ft_gzip_free
00000000001c4460 0000000000000130 t ft_gzip_check_header
00000000001c4590 0000000000000020 t ft_gzip_alloc
00000000001c45b0 000000000000012c t ft_gzip_file_fill_output
00000000001c46e0 000000000000016c t ft_gzip_file_io
00000000001c4850 0000000000000008 t ft_gzip_stream_io
00000000001c4860 0000000000000090 t ft_gzip_stream_close
00000000001c48f0 00000000000002d0 T FT_Stream_OpenGzip
00000000001c4bc0 0000000000000114 T FT_Gzip_Uncompress
00000000001c4ce0 0000000000000064 t ft_lzw_check_header
00000000001c4d50 00000000000001c8 t ft_lzwstate_get_code
00000000001c4f20 00000000000000e8 t ft_lzwstate_stack_grow
00000000001c5010 0000000000000174 T FT_Stream_OpenLZW
00000000001c5190 0000000000000088 t ft_lzwstate_done
00000000001c5220 0000000000000050 t ft_lzw_stream_close
00000000001c5270 00000000000003d8 t ft_lzwstate_io
00000000001c5650 00000000000001dc t ft_lzw_stream_io
00000000001c5830 0000000000000020 t ft_bzip2_alloc
00000000001c5850 0000000000000004 t ft_bzip2_free
00000000001c5860 0000000000000068 t ft_bzip2_stream_close
00000000001c58d0 0000000000000134 t ft_bzip2_file_fill_output
00000000001c5a10 000000000000018c t ft_bzip2_stream_io
00000000001c5ba0 0000000000000070 t ft_bzip2_check_header
00000000001c5c10 0000000000000194 T FT_Stream_OpenBzip2
00000000001c5db0 0000000000000020 t afm_compare_kern_pairs
00000000001c5dd0 0000000000000130 t PS_Conv_Strtol
00000000001c5f00 0000000000000090 t PS_Conv_ToInt
00000000001c5f90 0000000000000084 t skip_spaces
00000000001c6020 0000000000000108 t skip_literal_string
00000000001c6130 0000000000000098 t skip_string
00000000001c61d0 0000000000000008 t ps_parser_skip_spaces
00000000001c61e0 0000000000000018 t ps_parser_to_int
00000000001c6200 0000000000000160 t ps_parser_to_bytes
00000000001c6360 0000000000000040 t ps_parser_init
00000000001c63a0 0000000000000004 t ps_parser_done
00000000001c63b0 0000000000000024 t t1_builder_done
00000000001c63e0 000000000000012c t t1_builder_close_contour
00000000001c6510 0000000000000024 t cff_builder_done
00000000001c6540 0000000000000050 t cff_builder_add_point
00000000001c6590 000000000000012c t cff_builder_close_contour
00000000001c66c0 0000000000000024 t ps_builder_done
00000000001c66f0 0000000000000010 t cff_random
00000000001c6700 0000000000000010 t t1_cmap_std_done
00000000001c6710 000000000000002c t t1_cmap_standard_init
00000000001c6740 0000000000000030 t t1_cmap_expert_init
00000000001c6770 0000000000000028 t t1_cmap_custom_init
00000000001c67a0 0000000000000008 t t1_cmap_custom_done
00000000001c67b0 0000000000000034 t t1_cmap_custom_char_index
00000000001c67f0 0000000000000064 t t1_cmap_custom_char_next
00000000001c6860 000000000000000c t psaux_get_glyph_name
00000000001c6870 0000000000000038 t t1_cmap_unicode_init
00000000001c68b0 0000000000000014 t t1_cmap_unicode_char_index
00000000001c68d0 0000000000000014 t t1_cmap_unicode_char_next
00000000001c68f0 000000000000006c t cf2_stack_popInt
00000000001c6960 0000000000000064 t cf2_stack_popFixed
00000000001c69d0 000000000000006c t cf2_stack_getReal
00000000001c6a40 0000000000000074 t ps_table_release
00000000001c6ac0 0000000000000028 t afm_parser_done
00000000001c6af0 0000000000000034 t t1_cmap_unicode_done
00000000001c6b30 00000000000000a8 t ps_table_realloc
00000000001c6be0 0000000000000008 t ps_table_done
00000000001c6bf0 00000000000000e4 t ps_table_new
00000000001c6ce0 00000000000000b0 t t1_builder_add_point
00000000001c6d90 00000000000000e4 t cf2_arrstack_setNumElements
00000000001c6e80 0000000000000068 t cf2_arrstack_push
00000000001c6ef0 0000000000000114 t cf2_doStems
00000000001c7010 00000000000003b0 t PS_Conv_ToFixed
00000000001c73c0 00000000000001b8 t ps_tofixedarray
00000000001c7580 0000000000000030 t ps_parser_to_fixed_array
00000000001c75b0 000000000000013c t ps_parser_to_coord_array
00000000001c76f0 0000000000000020 t ps_parser_to_fixed
00000000001c7710 00000000000000b4 t ps_builder_init
00000000001c77d0 00000000000000e4 t cf2_getSeacComponent
00000000001c78c0 000000000000021c t t1_make_subfont
00000000001c7ae0 00000000000000b0 t t1_builder_add_contour
00000000001c7b90 00000000000000a8 t cff_builder_add_contour
00000000001c7c40 00000000000000b4 t t1_builder_init
00000000001c7d00 00000000000000c0 t cff_builder_init
00000000001c7dc0 0000000000000064 t afm_parser_init
00000000001c7e30 0000000000000110 t cf2_hintmap_map
00000000001c7f40 00000000000000e0 t cf2_glyphpath_hintPoint
00000000001c8020 000000000000032c t cf2_hintmap_insertHint
00000000001c8350 00000000000001b4 t cf2_glyphpath_computeOffset
00000000001c8510 0000000000000378 t t1_decoder_parse_metrics
00000000001c8890 00000000000000a0 t t1_lookup_glyph_by_stdcharcode_ps
00000000001c8930 0000000000000098 t t1_cmap_std_char_index
00000000001c89d0 0000000000000078 t t1_cmap_std_char_next
00000000001c8a50 00000000000000e0 t t1_decoder_init
00000000001c8b30 00000000000000cc t afm_tokenize
00000000001c8c00 00000000000000f8 t cff_decoder_prepare
00000000001c8d00 0000000000000048 t cf2_free_instance
00000000001c8d50 0000000000000110 t ps_table_add
00000000001c8e60 00000000000004d0 t cf2_glyphpath_pushPrevElem
00000000001c9330 000000000000022c t cf2_computeDarkening.part.0.constprop.0
00000000001c9560 00000000000000b0 t ps_builder_add_contour.constprop.0
00000000001c9610 0000000000000034 t cff_check_points
00000000001c9650 000000000000002c t ps_builder_check_points.part.0.isra.0
00000000001c9680 0000000000000034 t t1_builder_check_points
00000000001c96c0 0000000000000040 t cf2_stack_pushFixed
00000000001c9700 000000000000006c t afm_stream_skip_spaces.part.0.isra.0
00000000001c9770 0000000000000038 t cf2_freeT1SeacComponent.isra.0
00000000001c97b0 0000000000000074 t cf2_getT1SeacComponent.isra.0
00000000001c9830 0000000000000128 t ps_builder_close_contour.isra.0
00000000001c9960 0000000000000020 t cf2_builder_moveTo
00000000001c9980 0000000000000064 t t1_decrypt
00000000001c99f0 00000000000000b8 t afm_stream_read_one
00000000001c9ab0 00000000000000d4 t cff_decoder_init
00000000001c9b90 00000000000000e4 t afm_stream_read_string
00000000001c9c80 0000000000000188 t afm_parser_read_vals
00000000001c9e10 0000000000000064 t afm_parser_next_key.constprop.0.isra.0
00000000001c9e80 0000000000000154 t skip_procedure
00000000001c9fe0 00000000000001ec t ps_parser_skip_PS_token
00000000001ca1d0 000000000000019c t ps_parser_to_token
00000000001ca370 0000000000000120 t ps_parser_to_token_array
00000000001ca490 00000000000004c4 t ps_parser_load_field
00000000001ca960 0000000000000150 t ps_parser_load_field_table
00000000001caab0 0000000000000084 t t1_builder_add_point1
00000000001cab40 000000000000006c t t1_builder_start_point
00000000001cabb0 0000000000000044 t cf2_stack_setReal
00000000001cac00 0000000000000044 t cf2_stack_pushInt
00000000001cac50 0000000000000060 t t1_decoder_done
00000000001cacb0 00000000000000a4 t cf2_hintmask_read
00000000001cad60 00000000000000b4 t cff_builder_add_point1
00000000001cae20 0000000000000068 t cff_builder_start_point
00000000001cae90 0000000000000154 t cf2_hint_init
00000000001caff0 00000000000009d0 t cf2_hintmap_build
00000000001cb9c0 0000000000000168 t ps_decoder_init
00000000001cbb30 00000000000001d0 t cf2_builder_cubeTo
00000000001cbd00 00000000000000f4 t cf2_glyphpath_moveTo
00000000001cbe00 00000000000000a0 t cf2_glyphpath_pushMove
00000000001cbea0 0000000000000180 t cf2_glyphpath_lineTo
00000000001cc020 00000000000001dc t cf2_glyphpath_curveTo
00000000001cc200 00000000000001ac t cf2_doFlex
00000000001cc3b0 000000000000015c t cf2_builder_lineTo
00000000001cc510 0000000000000738 t afm_parser_parse
00000000001ccc50 0000000000002e58 t cf2_interpT2CharString
00000000001cfab0 0000000000000b1c t cf2_decoder_parse_charstrings
00000000001d05d0 0000000000000244 t ps_unicode_value
00000000001d0820 0000000000000034 t compare_uni_maps
00000000001d0860 00000000000000ac t ps_unicodes_char_index
00000000001d0910 00000000000000d0 t ps_unicodes_char_next
00000000001d09e0 0000000000000028 t ps_get_macintosh_name
00000000001d0a10 000000000000002c t ps_get_standard_strings
00000000001d0a40 000000000000000c t psnames_get_service
00000000001d0a50 0000000000000294 t ps_unicodes_init
00000000001d0cf0 000000000000002c t ft_ansi_stream_close
00000000001d0d20 00000000000000d0 t ft_ansi_stream_io
00000000001d0df0 0000000000000008 t ft_alloc
00000000001d0e00 0000000000000008 t ft_free
00000000001d0e10 000000000000000c t ft_realloc
00000000001d0e20 00000000000000c8 t FT_Stream_Open
00000000001d0ef0 000000000000003c t FT_New_Memory
00000000001d0f30 0000000000000004 t FT_Done_Memory
00000000001d0f40 0000000000000004 t FT_Trace_Disable
00000000001d0f50 0000000000000004 t FT_Trace_Enable
00000000001d0f60 0000000000000014 T FT_Bitmap_Init
00000000001d0f80 0000000000000014 T FT_Bitmap_New
00000000001d0fa0 00000000000001c4 T FT_Bitmap_Copy
00000000001d1170 0000000000000058 T FT_Bitmap_Done
00000000001d11d0 00000000000004b4 T FT_Bitmap_Convert
00000000001d1690 00000000000000b8 t ft_face_get_mm_service
00000000001d1750 00000000000000a0 t ft_face_get_mvar_service.constprop.0.isra.0
00000000001d17f0 00000000000000c0 T FT_Get_MM_Var
00000000001d18b0 0000000000000028 T FT_Done_MM_Var
00000000001d18e0 00000000000000c8 T FT_Get_Var_Blend_Coordinates
00000000001d19b0 0000000000000104 T FT_Set_Named_Instance
00000000001d1ac0 0000000000000038 T eglGetError
00000000001d1b00 00000000000000e4 t _eglSetFuncName
00000000001d1bf0 0000000000000038 T eglQueryAPI
00000000001d1c30 00000000000000f8 t _eglWaitClientCommon
00000000001d1d30 000000000000003c T eglGetCurrentDisplay
00000000001d1d70 0000000000000044 T eglGetCurrentContext
00000000001d1dc0 0000000000000008 t _eglFunctionCompare
00000000001d1dd0 00000000000000e4 t _eglConvertIntsToAttribs
00000000001d1ec0 0000000000000084 t _eglConvertAttribsToInt.part.0
00000000001d1f50 0000000000000068 t _eglAppendExtension.isra.0
00000000001d1fc0 00000000000000d8 t _eglGetSyncAttribCommon
00000000001d20a0 00000000000000f4 t _eglDestroySync
00000000001d21a0 0000000000000148 t _eglDestroyImageCommon
00000000001d22f0 000000000000013c t _eglClientWaitSyncCommon
00000000001d2430 0000000000000138 t _eglWaitSyncCommon
00000000001d2570 0000000000000198 t _eglCreateImageCommon
00000000001d2710 00000000000000d4 T eglDestroySync
00000000001d27f0 00000000000000d4 t eglDestroyImageKHR
00000000001d28d0 00000000000000d4 T eglDestroyImage
00000000001d29b0 00000000000000d4 t eglDestroySyncKHR
00000000001d2a90 00000000000000c8 T eglWaitSync
00000000001d2b60 00000000000000c8 t eglWaitSyncKHR
00000000001d2c30 000000000000018c t _eglSwapBuffersWithDamageCommon
00000000001d2dc0 00000000000000fc t eglSwapBuffersWithDamageKHR
00000000001d2ec0 00000000000000fc t eglSwapBuffersWithDamageEXT
00000000001d2fc0 0000000000000100 t eglClientWaitSyncKHR
00000000001d30c0 0000000000000100 T eglClientWaitSync
00000000001d31c0 00000000000001c4 t _eglCreatePixmapSurfaceCommon
00000000001d3390 000000000000012c T eglGetSyncAttrib
00000000001d34c0 00000000000001d8 t _eglCreateWindowSurfaceCommon
00000000001d36a0 0000000000000150 t eglGetSyncAttribKHR
00000000001d37f0 0000000000000218 t _eglCreateSync
00000000001d3a10 000000000000019c T eglSurfaceAttrib
00000000001d3bb0 000000000000019c T eglQueryContext
00000000001d3d50 000000000000016c T eglCopyBuffers
00000000001d3ec0 000000000000016c t eglSignalSyncKHR
00000000001d4030 000000000000016c T eglBindTexImage
00000000001d41a0 000000000000016c T eglReleaseTexImage
00000000001d4310 000000000000018c T eglDestroyContext
00000000001d44a0 000000000000018c T eglDestroySurface
00000000001d4630 00000000000001a4 t eglExportDMABUFImageQueryMESA
00000000001d47e0 00000000000001a4 t eglExportDRMImageMESA
00000000001d4990 00000000000001a4 t eglExportDMABUFImageMESA
00000000001d4b40 00000000000001cc t eglPostSubBufferNV
00000000001d4d10 00000000000001ac T eglQuerySurface
00000000001d4ec0 0000000000000194 t eglDupNativeFenceFDANDROID
00000000001d5060 00000000000001cc t eglGetSyncValuesCHROMIUM
00000000001d5230 00000000000001cc t eglSwapBuffersRegionNOK
00000000001d5400 0000000000000208 T eglSwapBuffers
00000000001d5610 000000000000020c T eglSwapInterval
00000000001d5820 00000000000002b0 t eglSetDamageRegionKHR
00000000001d5ad0 0000000000000330 T eglMakeCurrent
00000000001d5e00 00000000000000c0 t eglQueryDevicesEXT
00000000001d5ec0 0000000000000074 T eglGetDisplay
00000000001d5f40 00000000000000b0 T eglGetPlatformDisplay
00000000001d5ff0 0000000000000070 T eglWaitClient
00000000001d6060 0000000000000070 T eglWaitGL
00000000001d60d0 0000000000000114 t eglQueryDeviceAttribEXT
00000000001d61f0 00000000000000e0 T eglGetCurrentSurface
00000000001d62d0 0000000000000108 t eglGetPlatformDisplayEXT
00000000001d63e0 00000000000000e0 T eglBindAPI
00000000001d64c0 00000000000000e0 t eglQueryDeviceStringEXT
00000000001d65a0 000000000000011c t eglQueryDebugKHR
00000000001d66c0 00000000000000f8 T eglGetProcAddress
00000000001d67c0 0000000000000160 t eglQueryDisplayAttribEXT
00000000001d6920 0000000000000164 t eglQueryDmaBufFormatsEXT
00000000001d6a90 000000000000012c T eglCreatePixmapSurface
00000000001d6bc0 000000000000012c T eglCreateWindowSurface
00000000001d6cf0 000000000000012c t eglCreatePlatformPixmapSurfaceEXT
00000000001d6e20 000000000000012c t eglCreatePlatformWindowSurfaceEXT
00000000001d6f50 0000000000000144 t eglDebugMessageControlKHR
00000000001d70a0 0000000000000184 t eglQueryDmaBufModifiersEXT
00000000001d7230 0000000000000140 t eglCreateImageKHR
00000000001d7370 0000000000000128 T eglCreateSync
00000000001d74a0 0000000000000128 t eglCreateSync64KHR
00000000001d75d0 0000000000000158 T eglWaitNative
00000000001d7730 000000000000018c t eglLabelObjectKHR
00000000001d78c0 0000000000000150 T eglTerminate
00000000001d7a10 00000000000001c8 T eglCreatePlatformPixmapSurface
00000000001d7be0 00000000000001c8 T eglCreatePlatformWindowSurface
00000000001d7db0 0000000000000198 t eglCreateSyncKHR
00000000001d7f50 00000000000001d4 T eglCreateImage
00000000001d8130 0000000000000168 t eglGetDisplayDriverConfig
00000000001d82a0 0000000000000168 t eglGetDisplayDriverName
00000000001d8410 00000000000000d4 T eglReleaseThread
00000000001d84f0 0000000000000194 T eglCreatePbufferFromClientBuffer
00000000001d8690 00000000000001e0 T eglGetConfigs
00000000001d8870 00000000000001b4 t eglCreateDRMImageMESA
00000000001d8a30 00000000000001bc t eglBindWaylandDisplayWL
00000000001d8bf0 0000000000000200 T eglChooseConfig
00000000001d8df0 00000000000001bc t eglUnbindWaylandDisplayWL
00000000001d8fb0 00000000000001f8 T eglGetConfigAttrib
00000000001d91b0 00000000000001e4 t eglQueryWaylandBufferWL
00000000001d93a0 0000000000000190 t eglSetBlobCacheFuncsANDROID
00000000001d9530 00000000000001f0 t eglCreateWaylandBufferFromImageWL
00000000001d9720 0000000000000228 T eglCreatePbufferSurface
00000000001d9950 000000000000028c T eglCreateContext
00000000001d9be0 000000000000027c T eglQueryString
00000000001d9e60 0000000000000890 T eglInitialize
00000000001da6f0 0000000000000190 t _eglOffsetOfConfig
00000000001da880 0000000000000134 t _eglSortConfigs
00000000001da9c0 0000000000000010 t _eglFlattenConfig
00000000001da9d0 0000000000000048 t _eglInitConfig
00000000001daa20 0000000000000050 t _eglLinkConfig
00000000001daa70 000000000000001c t _eglLookupConfig
00000000001daa90 00000000000002fc t _eglValidateConfig
00000000001dad90 0000000000000268 t _eglMatchConfig
00000000001db000 0000000000000004 t _eglFallbackMatch
00000000001db010 00000000000001d8 t _eglParseConfigAttribList
00000000001db1f0 0000000000000174 t _eglCompareConfigs
00000000001db370 0000000000000008 t _eglFallbackCompare
00000000001db380 0000000000000130 t _eglFilterConfigArray
00000000001db4b0 0000000000000094 t _eglChooseConfig
00000000001db550 00000000000000b4 t _eglGetConfigAttrib
00000000001db610 0000000000000044 t _eglGetConfigs
00000000001db660 0000000000000728 t _eglInitContext
00000000001dbd90 00000000000000dc t _eglQueryContext
00000000001dbe70 000000000000029c t _eglBindContext
00000000001dc110 0000000000000078 t _eglGetCurrentThread
00000000001dc190 0000000000000048 t _eglDestroyCurrentThread
00000000001dc1e0 0000000000000034 t _eglIsCurrentThreadDummy
00000000001dc220 0000000000000078 t _eglGetCurrentContext
00000000001dc2a0 00000000000003cc t _eglDebugReport
00000000001dc670 00000000000000b8 t _eglError
00000000001dc730 0000000000000044 T _eglFiniDevice
00000000001dc780 0000000000000090 t _eglCheckDeviceHandle
00000000001dc810 0000000000000024 t _eglDeviceSupports
00000000001dc840 0000000000000024 t _eglQueryDeviceAttribEXT
00000000001dc870 0000000000000038 t _eglQueryDeviceStringEXT
00000000001dc8b0 00000000000000e4 t _eglQueryDevicesEXT
00000000001dc9a0 000000000000012c t _eglGetNativePlatform
00000000001dcad0 000000000000009c T _eglFiniDisplay
00000000001dcb70 00000000000001e4 t _eglFindDisplay
00000000001dcd60 00000000000001d0 t _eglReleaseDisplayResources
00000000001dcf30 0000000000000034 t _eglCleanupDisplay
00000000001dcf70 0000000000000090 t _eglCheckDisplayHandle
00000000001dd000 0000000000000040 t _eglCheckResource
00000000001dd040 0000000000000038 t _eglInitResource
00000000001dd080 0000000000000010 t _eglGetResource
00000000001dd090 0000000000000018 t _eglPutResource
00000000001dd0b0 000000000000002c t _eglLinkResource
00000000001dd0e0 0000000000000074 t _eglUnlinkResource
00000000001dd160 00000000000001a4 t _eglGetDeviceDisplay
00000000001dd310 0000000000000078 t _eglGetDriver
00000000001dd390 00000000000000c8 t _eglMatchDriver
00000000001dd460 000000000000004c t _eglGetDriverProc
00000000001dd4b0 0000000000000028 T _eglUnloadDrivers
00000000001dd4e0 000000000000000c t _eglPointerIsDereferencable
00000000001dd4f0 00000000000001f4 t _eglLog
00000000001dd6f0 00000000000005cc t _eglInitSurface
00000000001ddcc0 0000000000000424 t _eglQuerySurface
00000000001de0f0 0000000000000200 t _eglSurfaceAttrib
00000000001de2f0 0000000000000008 t _eglSwapInterval
00000000001de300 0000000000000100 t _eglGetSyncAttrib
00000000001de400 0000000000000008 t switch_st_framebuffer_flush_front
00000000001de410 0000000000000008 t switch_st_framebuffer_flush_swapbuffers
00000000001de420 0000000000000008 t switch_create_pixmap_surface
00000000001de430 0000000000000008 t switch_create_pbuffer_surface
00000000001de440 0000000000000008 t switch_st_get_param
00000000001de450 0000000000000008 t switch_get_proc_address
00000000001de460 00000000000000e4 t switch_swap_buffers
00000000001de550 0000000000000020 t switch_swap_interval
00000000001de570 000000000000018c t switch_create_context
00000000001de700 000000000000005c t switch_terminate
00000000001de760 000000000000004c t switch_destroy_context
00000000001de7b0 00000000000001c4 t switch_st_framebuffer_validate
00000000001de980 000000000000012c t switch_egl_surface_cleanup
00000000001deab0 0000000000000244 t switch_create_window_surface
00000000001ded00 0000000000000050 t switch_destroy_surface
00000000001ded50 0000000000000128 t switch_make_current
00000000001dee80 0000000000000478 t switch_initialize
00000000001df300 0000000000000084 t _eglInitDriver
00000000001df390 000000000000009c t st_framebuffer_update_attachments
00000000001df430 0000000000000004 t st_framebuffer_iface_hash
00000000001df440 000000000000000c t st_framebuffer_iface_equal
00000000001df450 000000000000002c t st_api_get_current
00000000001df480 0000000000000004 t st_api_destroy
00000000001df490 00000000000000b4 t st_context_validate
00000000001df550 0000000000000004 t st_context_destroy
00000000001df560 0000000000000024 t st_context_share
00000000001df590 0000000000000010 t st_context_copy
00000000001df5a0 0000000000000048 t st_manager_destroy
00000000001df5f0 00000000000000d4 t get_version
00000000001df6d0 000000000000009c t st_api_query_versions
00000000001df770 0000000000000078 t st_api_destroy_drawable
00000000001df7f0 00000000000000f0 t st_framebuffers_purge
00000000001df8e0 00000000000002b8 t st_context_teximage
00000000001dfba0 000000000000022c t st_framebuffer_add_renderbuffer
00000000001dfdd0 0000000000000520 t st_visual_to_context_mode
00000000001e02f0 00000000000002f0 t st_framebuffer_reuse_or_create.constprop.0
00000000001e05e0 0000000000000354 t st_api_create_context
00000000001e0940 0000000000000230 t st_set_ws_renderbuffer_surface
00000000001e0b70 00000000000002f8 t st_framebuffer_validate
00000000001e0e70 0000000000000184 t st_api_make_current
00000000001e1000 0000000000000014 t st_framebuffer_reference
00000000001e1020 00000000000000a4 t st_manager_flush_frontbuffer
00000000001e10d0 0000000000000100 t st_context_flush
00000000001e11d0 0000000000000108 t st_manager_validate_framebuffers
00000000001e12e0 0000000000000078 t st_manager_flush_swapbuffers
00000000001e1360 00000000000000cc t st_manager_add_color_renderbuffer
00000000001e1430 000000000000000c t st_gl_api_create
00000000001e1440 00000000000000cc t st_texture_release_all_sampler_views.part.0
00000000001e1510 0000000000000220 t st_texture_set_sampler_view
00000000001e1730 0000000000000058 t st_texture_get_current_sampler_view
00000000001e1790 00000000000000b8 t st_texture_release_context_sampler_view
00000000001e1850 0000000000000010 t st_texture_release_all_sampler_views
00000000001e1860 0000000000000058 t st_delete_texture_sampler_views
00000000001e18c0 0000000000000754 t st_get_texture_sampler_view_from_stobj
00000000001e2020 000000000000013c t st_get_buffer_sampler_view_from_stobj
00000000001e2160 0000000000000018 t u_surface_default_template
00000000001e2180 00000000000000e8 t util_copy_box
00000000001e2270 00000000000002f8 t util_resource_copy_region
00000000001e2570 000000000000006c t nouveau_drm_screen_unref
00000000001e25e0 0000000000000110 T nouveau_switch_screen_create
00000000001e26f0 0000000000000008 T nouveau_switch_resource_get_syncpoint
00000000001e2700 00000000000001fc T nouveau_switch_resource_get_buffer
00000000001e2900 000000000000013c t nvc0_screen_get_shader_param
00000000001e2a40 00000000000000a4 t nvc0_screen_get_paramf
00000000001e2af0 0000000000000054 t nvc0_screen_get_sample_pixel_grid
00000000001e2b50 0000000000000054 t nvc0_screen_fence_emit
00000000001e2bb0 000000000000000c t nvc0_screen_fence_update
00000000001e2bc0 0000000000000444 t nvc0_screen_get_param
00000000001e3010 00000000000001c8 t nvc0_screen_is_format_supported
00000000001e31e0 000000000000025c t nvc0_screen_get_compute_param
00000000001e3440 0000000000000028 t PUSH_SPACE.isra.0
00000000001e3470 0000000000000164 t nvc0_screen_destroy
00000000001e35e0 00000000000000f8 t nvc0_graph_set_macro.isra.0
00000000001e36e0 000000000000017c t nvc0_screen_resize_text_area
00000000001e3860 000000000000022c t nvc0_screen_bind_cb_3d
00000000001e3a90 00000000000020a8 t nvc0_screen_create
00000000001e5b40 000000000000007c t nvc0_screen_tic_alloc
00000000001e5bc0 000000000000007c t nvc0_screen_tsc_alloc
00000000001e5c40 0000000000000004 t nvc0_flush_resource
00000000001e5c50 0000000000000334 t nvc0_clear_buffer_push_nve4
00000000001e5f90 0000000000000378 t nvc0_clear_buffer_push_nvc0
00000000001e6310 0000000000000080 t nvc0_clear_buffer_push
00000000001e6390 0000000000000084 t gm200_evaluate_depth_buffer
00000000001e6420 00000000000003b0 t nvc0_2d_texture_set
00000000001e67d0 0000000000000508 t nvc0_resource_copy_region
00000000001e6ce0 0000000000000698 t nvc0_clear_buffer
00000000001e7380 00000000000004ec t nvc0_clear_depth_stencil
00000000001e7870 000000000000056c t nvc0_clear_render_target
00000000001e7de0 00000000000026ac t nvc0_blit
00000000001ea490 00000000000004d8 T nvc0_clear
00000000001ea970 0000000000000124 t nvc0_blitter_create
00000000001eaaa0 0000000000000084 t nvc0_blitter_destroy
00000000001eab30 0000000000000050 t nvc0_blitctx_create
00000000001eab80 0000000000000008 t nvc0_blitctx_destroy
00000000001eab90 0000000000000074 t nvc0_init_surface_functions
00000000001eac10 0000000000000034 t nve4_delete_image_handle
00000000001eac50 00000000000000c0 t nve4_make_texture_handle_resident
00000000001ead10 0000000000000178 t gm107_make_image_handle_resident
00000000001eae90 00000000000000e0 t nvc0_get_surface_dims
00000000001eaf70 0000000000000068 t gm107_delete_image_handle
00000000001eafe0 0000000000000124 t nve4_delete_texture_handle
00000000001eb110 00000000000005fc t gf100_create_texture_view
00000000001eb710 00000000000006e0 t gm107_create_texture_view
00000000001ebdf0 00000000000001f0 t nve4_create_texture_handle
00000000001ebfe0 0000000000000030 T nvc0_create_sampler_view
00000000001ec010 00000000000000d8 t gm107_create_texture_view_from_image
00000000001ec0f0 0000000000000144 t gm107_create_image_handle
00000000001ec240 0000000000000014 t nvc0_create_texture_view
00000000001ec260 000000000000009c t nvc0_update_tic
00000000001ec300 0000000000000414 t nvc0_validate_tic
00000000001ec720 00000000000003b8 T nvc0_validate_textures
00000000001ecae0 00000000000002e0 t nvc0_validate_tsc
00000000001ecdc0 00000000000001a0 t nve4_validate_tsc
00000000001ecf60 00000000000000ec T nvc0_validate_samplers
00000000001ed050 0000000000000094 t nvc0_upload_tsc0
00000000001ed0f0 0000000000000190 T nve4_set_tex_handles
00000000001ed280 00000000000000b4 t nvc0_mark_image_range_valid
00000000001ed340 00000000000000f0 t nve4_make_image_handle_resident
00000000001ed430 00000000000002e8 t nve4_set_surface_info
00000000001ed720 000000000000019c t nve4_create_image_handle
00000000001ed8c0 00000000000005b4 t nvc0_validate_suf
00000000001ede80 00000000000004dc T nvc0_validate_surfaces
00000000001ee360 0000000000000088 t nvc0_init_bindless_functions
00000000001ee3f0 0000000000000224 t nvc0_m2mf_copy_linear
00000000001ee620 0000000000000204 t nve4_p2mf_push_linear
00000000001ee830 0000000000000254 t nvc0_m2mf_push_linear
00000000001eea90 0000000000000190 t nve4_m2mf_copy_linear
00000000001eec20 000000000000050c t nvc0_m2mf_transfer_rect
00000000001ef130 0000000000000364 t nve4_m2mf_transfer_rect
00000000001ef4a0 00000000000005b8 T nvc0_miptree_transfer_map
00000000001efa60 0000000000000160 T nvc0_miptree_transfer_unmap
00000000001efbc0 00000000000001a4 t nvc0_cb_bo_push
00000000001efd70 00000000000000e8 t nvc0_cb_push
00000000001efe60 000000000000007c t nvc0_init_transfer_functions
00000000001efee0 000000000000016c t nve4_upload_indirect_desc
00000000001f0050 00000000000000ac t nve4_compute_validate_samplers
00000000001f0100 000000000000025c t nve4_compute_validate_buffers
00000000001f0360 0000000000000384 t nve4_compute_validate_constbufs
00000000001f06f0 00000000000001f4 t nve4_compute_set_tex_handles
00000000001f08f0 000000000000048c t nve4_compute_validate_textures
00000000001f0d80 00000000000005ec t nve4_compute_validate_surfaces
00000000001f1370 00000000000006c0 t nve4_screen_compute_setup
00000000001f1a30 0000000000000c58 T nve4_launch_grid
00000000001f2690 00000000000000f8 t env_var_as_boolean
00000000001f2790 0000000000000398 t XXH32_finalize
00000000001f2b30 00000000000000f4 t hash_table_search
00000000001f2c30 0000000000000020 T _mesa_hash_pointer
00000000001f2c50 000000000000000c T _mesa_key_pointer_equal
00000000001f2c60 000000000000016c t _mesa_hash_table_rehash
00000000001f2dd0 00000000000001b8 t hash_table_insert
00000000001f2f90 0000000000000098 t _mesa_hash_table_create
00000000001f3030 00000000000000bc t _mesa_hash_table_destroy
00000000001f30f0 0000000000000080 t _mesa_hash_table_clear
00000000001f3170 0000000000000008 t _mesa_hash_table_set_deleted_key
00000000001f3180 0000000000000038 t _mesa_hash_table_search
00000000001f31c0 0000000000000004 t _mesa_hash_table_search_pre_hashed
00000000001f31d0 0000000000000048 t _mesa_hash_table_insert
00000000001f3220 0000000000000004 t _mesa_hash_table_insert_pre_hashed
00000000001f3230 0000000000000020 t _mesa_hash_table_remove
00000000001f3250 0000000000000054 t _mesa_hash_table_next_entry
00000000001f32b0 00000000000001e8 t _mesa_hash_data
00000000001f34a0 0000000000000034 t _mesa_hash_string
00000000001f34e0 000000000000001c T _mesa_key_string_equal
00000000001f3500 0000000000000014 t _mesa_pointer_hash_table_create
00000000001f3520 000000000000005c t _mesa_hash_table_u64_create
00000000001f3580 00000000000000ac t _mesa_hash_table_u64_clear
00000000001f3630 000000000000003c t _mesa_hash_table_u64_destroy
00000000001f3670 0000000000000074 t _mesa_hash_table_u64_insert
00000000001f36f0 0000000000000058 t _mesa_hash_table_u64_search
00000000001f3750 000000000000009c t _mesa_hash_table_u64_remove
00000000001f37f0 0000000000000084 t resize
00000000001f3880 0000000000000034 t printf_length
00000000001f38c0 00000000000001ec t unsafe_free
00000000001f3ab0 0000000000000058 t ralloc_context
00000000001f3b10 0000000000000058 t ralloc_size
00000000001f3b70 0000000000000038 t rzalloc_size
00000000001f3bb0 0000000000000018 t reralloc_size
00000000001f3bd0 0000000000000080 t ralloc_array_size
00000000001f3c50 0000000000000050 t rzalloc_array_size
00000000001f3ca0 000000000000002c t reralloc_array_size
00000000001f3cd0 0000000000000098 t ralloc_free
00000000001f3d70 00000000000000a0 t ralloc_steal
00000000001f3e10 0000000000000020 t ralloc_parent
00000000001f3e30 0000000000000008 t ralloc_set_destructor
00000000001f3e40 0000000000000070 t ralloc_strdup
00000000001f3eb0 0000000000000074 t ralloc_strndup
00000000001f3f30 0000000000000098 t ralloc_strcat
00000000001f3fd0 00000000000000d8 t ralloc_asprintf
00000000001f40b0 0000000000000084 t ralloc_vasprintf
00000000001f4140 000000000000014c t ralloc_vasprintf_rewrite_tail
00000000001f4290 0000000000000060 t ralloc_vasprintf_append
00000000001f42f0 000000000000006c t ralloc_asprintf_rewrite_tail
00000000001f4360 00000000000000b8 t ralloc_asprintf_append
00000000001f4420 00000000000000b4 t linear_alloc_child
00000000001f44e0 0000000000000084 t linear_alloc_parent
00000000001f4570 0000000000000038 t linear_zalloc_child
00000000001f45b0 0000000000000080 t linear_strdup
00000000001f4630 00000000000000d8 t linear_asprintf
00000000001f4710 000000000000017c t linear_vasprintf_rewrite_tail
00000000001f4890 00000000000000c0 t linear_asprintf_append
00000000001f4950 00000000000000dc t linear_strcat
00000000001f4a30 000000000000009c t _debug_printf
00000000001f4ad0 0000000000000040 t _debug_vprintf
00000000001f4b10 0000000000000074 t _pipe_debug_message
00000000001f4b90 000000000000010c t debug_get_bool_option
00000000001f4ca0 000000000000021c t debug_get_flags_option
00000000001f4ec0 0000000000000064 t debug_dump_enum
00000000001f4f30 00000000000001a0 t util_copy_rect
00000000001f50d0 0000000000000078 t util_format_is_float
00000000001f5150 0000000000000038 t util_format_has_alpha
00000000001f5190 000000000000003c t util_format_is_luminance
00000000001f51d0 0000000000000040 t util_format_is_alpha
00000000001f5210 0000000000000070 t util_format_is_pure_integer
00000000001f5280 0000000000000080 t util_format_is_pure_sint
00000000001f5300 0000000000000080 t util_format_is_pure_uint
00000000001f5380 000000000000001c t util_format_is_snorm
00000000001f53a0 000000000000003c t util_format_is_luminance_alpha
00000000001f53e0 0000000000000038 t util_format_is_intensity
00000000001f5420 000000000000008c t util_format_read_4f
00000000001f54b0 000000000000008c t util_format_read_4ub
00000000001f5540 000000000000008c t util_format_read_4ui
00000000001f55d0 000000000000008c t util_format_read_4i
00000000001f5660 0000000000000110 t util_format_apply_color_swizzle
00000000001f5770 000000000000006c t util_format_none_unpack_rgba_float
00000000001f57e0 0000000000000088 t util_format_none_pack_rgba_float
00000000001f5870 000000000000001c t util_format_none_fetch_rgba_float
00000000001f5890 0000000000000074 t util_format_none_unpack_rgba_8unorm
00000000001f5910 000000000000006c t util_format_none_pack_rgba_8unorm
00000000001f5980 00000000000000a4 t util_format_b8g8r8a8_unorm_unpack_rgba_float
00000000001f5a30 0000000000000054 t util_format_b8g8r8a8_unorm_fetch_rgba_float
00000000001f5a90 0000000000000078 t util_format_b8g8r8a8_unorm_unpack_rgba_8unorm
00000000001f5b10 000000000000007c t util_format_b8g8r8a8_unorm_pack_rgba_8unorm
00000000001f5b90 000000000000009c t util_format_b8g8r8x8_unorm_unpack_rgba_float
00000000001f5c30 000000000000004c t util_format_b8g8r8x8_unorm_fetch_rgba_float
00000000001f5c80 0000000000000074 t util_format_b8g8r8x8_unorm_unpack_rgba_8unorm
00000000001f5d00 0000000000000074 t util_format_b8g8r8x8_unorm_pack_rgba_8unorm
00000000001f5d80 00000000000000a4 t util_format_a8r8g8b8_unorm_unpack_rgba_float
00000000001f5e30 0000000000000054 t util_format_a8r8g8b8_unorm_fetch_rgba_float
00000000001f5e90 0000000000000078 t util_format_a8r8g8b8_unorm_unpack_rgba_8unorm
00000000001f5f10 000000000000007c t util_format_a8r8g8b8_unorm_pack_rgba_8unorm
00000000001f5f90 000000000000009c t util_format_x8r8g8b8_unorm_unpack_rgba_float
00000000001f6030 000000000000004c t util_format_x8r8g8b8_unorm_fetch_rgba_float
00000000001f6080 0000000000000078 t util_format_x8r8g8b8_unorm_unpack_rgba_8unorm
00000000001f6100 0000000000000074 t util_format_x8r8g8b8_unorm_pack_rgba_8unorm
00000000001f6180 00000000000000a4 t util_format_a8b8g8r8_unorm_unpack_rgba_float
00000000001f6230 0000000000000054 t util_format_a8b8g8r8_unorm_fetch_rgba_float
00000000001f6290 0000000000000078 t util_format_a8b8g8r8_unorm_unpack_rgba_8unorm
00000000001f6310 0000000000000048 t util_format_a8b8g8r8_unorm_pack_rgba_8unorm
00000000001f6360 000000000000009c t util_format_x8b8g8r8_unorm_unpack_rgba_float
00000000001f6400 0000000000000050 t util_format_x8b8g8r8_unorm_fetch_rgba_float
00000000001f6450 0000000000000078 t util_format_x8b8g8r8_unorm_unpack_rgba_8unorm
00000000001f64d0 0000000000000070 t util_format_x8b8g8r8_unorm_pack_rgba_8unorm
00000000001f6540 000000000000009c t util_format_r8g8b8x8_unorm_unpack_rgba_float
00000000001f65e0 000000000000004c t util_format_r8g8b8x8_unorm_fetch_rgba_float
00000000001f6630 0000000000000074 t util_format_r8g8b8x8_unorm_unpack_rgba_8unorm
00000000001f66b0 0000000000000070 t util_format_r8g8b8x8_unorm_pack_rgba_8unorm
00000000001f6720 000000000000009c t util_format_r5g5b5a1_unorm_unpack_rgba_float
00000000001f67c0 000000000000017c t util_format_r5g5b5a1_unorm_pack_rgba_float
00000000001f6940 000000000000004c t util_format_r5g5b5a1_unorm_fetch_rgba_float
00000000001f6990 00000000000000d8 t util_format_r5g5b5a1_unorm_unpack_rgba_8unorm
00000000001f6a70 0000000000000090 t util_format_r5g5b5a1_unorm_pack_rgba_8unorm
00000000001f6b00 0000000000000098 t util_format_b5g5r5x1_unorm_unpack_rgba_float
00000000001f6ba0 0000000000000150 t util_format_b5g5r5x1_unorm_pack_rgba_float
00000000001f6cf0 0000000000000048 t util_format_b5g5r5x1_unorm_fetch_rgba_float
00000000001f6d40 00000000000000d4 t util_format_b5g5r5x1_unorm_unpack_rgba_8unorm
00000000001f6e20 000000000000007c t util_format_b5g5r5x1_unorm_pack_rgba_8unorm
00000000001f6ea0 000000000000009c t util_format_b5g5r5a1_unorm_unpack_rgba_float
00000000001f6f40 000000000000017c t util_format_b5g5r5a1_unorm_pack_rgba_float
00000000001f70c0 000000000000004c t util_format_b5g5r5a1_unorm_fetch_rgba_float
00000000001f7110 00000000000000d8 t util_format_b5g5r5a1_unorm_unpack_rgba_8unorm
00000000001f71f0 000000000000008c t util_format_b5g5r5a1_unorm_pack_rgba_8unorm
00000000001f7280 000000000000009c t util_format_x1b5g5r5_unorm_unpack_rgba_float
00000000001f7320 0000000000000150 t util_format_x1b5g5r5_unorm_pack_rgba_float
00000000001f7470 0000000000000050 t util_format_x1b5g5r5_unorm_fetch_rgba_float
00000000001f74c0 00000000000000d4 t util_format_x1b5g5r5_unorm_unpack_rgba_8unorm
00000000001f75a0 0000000000000084 t util_format_x1b5g5r5_unorm_pack_rgba_8unorm
00000000001f7630 000000000000009c t util_format_a1r5g5b5_unorm_unpack_rgba_float
00000000001f76d0 0000000000000180 t util_format_a1r5g5b5_unorm_pack_rgba_float
00000000001f7850 000000000000004c t util_format_a1r5g5b5_unorm_fetch_rgba_float
00000000001f78a0 00000000000000d8 t util_format_a1r5g5b5_unorm_unpack_rgba_8unorm
00000000001f7980 0000000000000090 t util_format_a1r5g5b5_unorm_pack_rgba_8unorm
00000000001f7a10 000000000000009c t util_format_a1b5g5r5_unorm_unpack_rgba_float
00000000001f7ab0 0000000000000180 t util_format_a1b5g5r5_unorm_pack_rgba_float
00000000001f7c30 000000000000004c t util_format_a1b5g5r5_unorm_fetch_rgba_float
00000000001f7c80 00000000000000d8 t util_format_a1b5g5r5_unorm_unpack_rgba_8unorm
00000000001f7d60 0000000000000090 t util_format_a1b5g5r5_unorm_pack_rgba_8unorm
00000000001f7df0 00000000000000a0 t util_format_r4g4b4a4_unorm_unpack_rgba_float
00000000001f7e90 00000000000001a0 t util_format_r4g4b4a4_unorm_pack_rgba_float
00000000001f8030 0000000000000050 t util_format_r4g4b4a4_unorm_fetch_rgba_float
00000000001f8080 00000000000000c4 t util_format_r4g4b4a4_unorm_unpack_rgba_8unorm
00000000001f8150 000000000000008c t util_format_r4g4b4a4_unorm_pack_rgba_8unorm
00000000001f81e0 00000000000000a0 t util_format_b4g4r4a4_unorm_unpack_rgba_float
00000000001f8280 00000000000001a0 t util_format_b4g4r4a4_unorm_pack_rgba_float
00000000001f8420 0000000000000050 t util_format_b4g4r4a4_unorm_fetch_rgba_float
00000000001f8470 00000000000000c4 t util_format_b4g4r4a4_unorm_unpack_rgba_8unorm
00000000001f8540 0000000000000088 t util_format_b4g4r4a4_unorm_pack_rgba_8unorm
00000000001f85d0 0000000000000098 t util_format_b4g4r4x4_unorm_unpack_rgba_float
00000000001f8670 0000000000000150 t util_format_b4g4r4x4_unorm_pack_rgba_float
00000000001f87c0 0000000000000048 t util_format_b4g4r4x4_unorm_fetch_rgba_float
00000000001f8810 00000000000000b0 t util_format_b4g4r4x4_unorm_unpack_rgba_8unorm
00000000001f88c0 0000000000000078 t util_format_b4g4r4x4_unorm_pack_rgba_8unorm
00000000001f8940 00000000000000a0 t util_format_a4r4g4b4_unorm_unpack_rgba_float
00000000001f89e0 00000000000001a0 t util_format_a4r4g4b4_unorm_pack_rgba_float
00000000001f8b80 0000000000000050 t util_format_a4r4g4b4_unorm_fetch_rgba_float
00000000001f8bd0 00000000000000c4 t util_format_a4r4g4b4_unorm_unpack_rgba_8unorm
00000000001f8ca0 000000000000008c t util_format_a4r4g4b4_unorm_pack_rgba_8unorm
00000000001f8d30 00000000000000a0 t util_format_a4b4g4r4_unorm_unpack_rgba_float
00000000001f8dd0 00000000000001a0 t util_format_a4b4g4r4_unorm_pack_rgba_float
00000000001f8f70 0000000000000050 t util_format_a4b4g4r4_unorm_fetch_rgba_float
00000000001f8fc0 00000000000000c4 t util_format_a4b4g4r4_unorm_unpack_rgba_8unorm
00000000001f9090 000000000000008c t util_format_a4b4g4r4_unorm_pack_rgba_8unorm
00000000001f9120 00000000000000a4 t util_format_r5g6b5_unorm_unpack_rgba_float
00000000001f91d0 0000000000000158 t util_format_r5g6b5_unorm_pack_rgba_float
00000000001f9330 0000000000000058 t util_format_r5g6b5_unorm_fetch_rgba_float
00000000001f9390 00000000000000dc t util_format_r5g6b5_unorm_unpack_rgba_8unorm
00000000001f9470 0000000000000080 t util_format_r5g6b5_unorm_pack_rgba_8unorm
00000000001f94f0 00000000000000a4 t util_format_b5g6r5_unorm_unpack_rgba_float
00000000001f95a0 0000000000000158 t util_format_b5g6r5_unorm_pack_rgba_float
00000000001f9700 0000000000000054 t util_format_b5g6r5_unorm_fetch_rgba_float
00000000001f9760 00000000000000dc t util_format_b5g6r5_unorm_unpack_rgba_8unorm
00000000001f9840 000000000000007c t util_format_b5g6r5_unorm_pack_rgba_8unorm
00000000001f98c0 00000000000000b0 t util_format_r10g10b10a2_unorm_unpack_rgba_float
00000000001f9970 00000000000001a8 t util_format_r10g10b10a2_unorm_pack_rgba_float
00000000001f9b20 000000000000005c t util_format_r10g10b10a2_unorm_fetch_rgba_float
00000000001f9b80 0000000000000094 t util_format_r10g10b10a2_unorm_unpack_rgba_8unorm
00000000001f9c20 00000000000000b8 t util_format_r10g10b10a2_unorm_pack_rgba_8unorm
00000000001f9ce0 0000000000000098 t util_format_r10g10b10x2_unorm_unpack_rgba_float
00000000001f9d80 0000000000000158 t util_format_r10g10b10x2_unorm_pack_rgba_float
00000000001f9ee0 0000000000000048 t util_format_r10g10b10x2_unorm_fetch_rgba_float
00000000001f9f30 0000000000000078 t util_format_r10g10b10x2_unorm_unpack_rgba_8unorm
00000000001f9fb0 00000000000000a8 t util_format_r10g10b10x2_unorm_pack_rgba_8unorm
00000000001fa060 00000000000000b0 t util_format_b10g10r10a2_unorm_unpack_rgba_float
00000000001fa110 00000000000001a8 t util_format_b10g10r10a2_unorm_pack_rgba_float
00000000001fa2c0 000000000000005c t util_format_b10g10r10a2_unorm_fetch_rgba_float
00000000001fa320 0000000000000094 t util_format_b10g10r10a2_unorm_unpack_rgba_8unorm
00000000001fa3c0 00000000000000b8 t util_format_b10g10r10a2_unorm_pack_rgba_8unorm
00000000001fa480 00000000000000b0 t util_format_a2r10g10b10_unorm_unpack_rgba_float
00000000001fa530 00000000000001a8 t util_format_a2r10g10b10_unorm_pack_rgba_float
00000000001fa6e0 000000000000005c t util_format_a2r10g10b10_unorm_fetch_rgba_float
00000000001fa740 0000000000000094 t util_format_a2r10g10b10_unorm_unpack_rgba_8unorm
00000000001fa7e0 00000000000000b8 t util_format_a2r10g10b10_unorm_pack_rgba_8unorm
00000000001fa8a0 00000000000000b0 t util_format_a2b10g10r10_unorm_unpack_rgba_float
00000000001fa950 00000000000001a8 t util_format_a2b10g10r10_unorm_pack_rgba_float
00000000001fab00 000000000000005c t util_format_a2b10g10r10_unorm_fetch_rgba_float
00000000001fab60 0000000000000094 t util_format_a2b10g10r10_unorm_unpack_rgba_8unorm
00000000001fac00 00000000000000b8 t util_format_a2b10g10r10_unorm_pack_rgba_8unorm
00000000001facc0 00000000000000a4 t util_format_r3g3b2_unorm_unpack_rgba_float
00000000001fad70 0000000000000158 t util_format_r3g3b2_unorm_pack_rgba_float
00000000001faed0 0000000000000058 t util_format_r3g3b2_unorm_fetch_rgba_float
00000000001faf30 00000000000000d0 t util_format_r3g3b2_unorm_unpack_rgba_8unorm
00000000001fb000 0000000000000078 t util_format_r3g3b2_unorm_pack_rgba_8unorm
00000000001fb080 00000000000000a4 t util_format_b2g3r3_unorm_unpack_rgba_float
00000000001fb130 0000000000000158 t util_format_b2g3r3_unorm_pack_rgba_float
00000000001fb290 000000000000005c t util_format_b2g3r3_unorm_fetch_rgba_float
00000000001fb2f0 00000000000000d0 t util_format_b2g3r3_unorm_unpack_rgba_8unorm
00000000001fb3c0 000000000000007c t util_format_b2g3r3_unorm_pack_rgba_8unorm
00000000001fb440 000000000000007c t util_format_l8_unorm_unpack_rgba_float
00000000001fb4c0 0000000000000028 t util_format_l8_unorm_fetch_rgba_float
00000000001fb4f0 000000000000006c t util_format_l8_unorm_unpack_rgba_8unorm
00000000001fb560 000000000000005c t util_format_l8_unorm_pack_rgba_8unorm
00000000001fb5c0 0000000000000078 t util_format_a8_unorm_unpack_rgba_float
00000000001fb640 0000000000000028 t util_format_a8_unorm_fetch_rgba_float
00000000001fb670 000000000000006c t util_format_a8_unorm_unpack_rgba_8unorm
00000000001fb6e0 0000000000000060 t util_format_a8_unorm_pack_rgba_8unorm
00000000001fb740 0000000000000074 t util_format_i8_unorm_unpack_rgba_float
00000000001fb7c0 0000000000000024 t util_format_i8_unorm_fetch_rgba_float
00000000001fb7f0 000000000000006c t util_format_i8_unorm_unpack_rgba_8unorm
00000000001fb860 0000000000000088 t util_format_l4a4_unorm_unpack_rgba_float
00000000001fb8f0 0000000000000100 t util_format_l4a4_unorm_pack_rgba_float
00000000001fb9f0 0000000000000038 t util_format_l4a4_unorm_fetch_rgba_float
00000000001fba30 000000000000009c t util_format_l4a4_unorm_unpack_rgba_8unorm
00000000001fbad0 000000000000006c t util_format_l4a4_unorm_pack_rgba_8unorm
00000000001fbb40 000000000000008c t util_format_l8a8_unorm_unpack_rgba_float
00000000001fbbd0 000000000000003c t util_format_l8a8_unorm_fetch_rgba_float
00000000001fbc10 0000000000000074 t util_format_l8a8_unorm_unpack_rgba_8unorm
00000000001fbc90 0000000000000068 t util_format_l8a8_unorm_pack_rgba_8unorm
00000000001fbd00 000000000000007c t util_format_l16_unorm_unpack_rgba_float
00000000001fbd80 00000000000000b8 t util_format_l16_unorm_pack_rgba_float
00000000001fbe40 0000000000000028 t util_format_l16_unorm_fetch_rgba_float
00000000001fbe70 0000000000000070 t util_format_l16_unorm_unpack_rgba_8unorm
00000000001fbee0 0000000000000074 t util_format_l16_unorm_pack_rgba_8unorm
00000000001fbf60 0000000000000078 t util_format_a16_unorm_unpack_rgba_float
00000000001fbfe0 00000000000000b8 t util_format_a16_unorm_pack_rgba_float
00000000001fc0a0 0000000000000028 t util_format_a16_unorm_fetch_rgba_float
00000000001fc0d0 0000000000000070 t util_format_a16_unorm_unpack_rgba_8unorm
00000000001fc140 0000000000000078 t util_format_a16_unorm_pack_rgba_8unorm
00000000001fc1c0 0000000000000074 t util_format_i16_unorm_unpack_rgba_float
00000000001fc240 0000000000000024 t util_format_i16_unorm_fetch_rgba_float
00000000001fc270 0000000000000070 t util_format_i16_unorm_unpack_rgba_8unorm
00000000001fc2e0 0000000000000088 t util_format_l16a16_unorm_unpack_rgba_float
00000000001fc370 0000000000000104 t util_format_l16a16_unorm_pack_rgba_float
00000000001fc480 0000000000000038 t util_format_l16a16_unorm_fetch_rgba_float
00000000001fc4c0 0000000000000074 t util_format_l16a16_unorm_unpack_rgba_8unorm
00000000001fc540 000000000000008c t util_format_l16a16_unorm_pack_rgba_8unorm
00000000001fc5d0 0000000000000078 t util_format_a8_snorm_unpack_rgba_float
00000000001fc650 00000000000000b8 t util_format_a8_snorm_pack_rgba_float
00000000001fc710 0000000000000028 t util_format_a8_snorm_fetch_rgba_float
00000000001fc740 0000000000000098 t util_format_a8_snorm_unpack_rgba_8unorm
00000000001fc7e0 0000000000000064 t util_format_a8_snorm_pack_rgba_8unorm
00000000001fc850 000000000000007c t util_format_l8_snorm_unpack_rgba_float
00000000001fc8d0 00000000000000b8 t util_format_l8_snorm_pack_rgba_float
00000000001fc990 000000000000002c t util_format_l8_snorm_fetch_rgba_float
00000000001fc9c0 000000000000009c t util_format_l8_snorm_unpack_rgba_8unorm
00000000001fca60 0000000000000060 t util_format_l8_snorm_pack_rgba_8unorm
00000000001fcac0 0000000000000084 t util_format_l8a8_snorm_unpack_rgba_float
00000000001fcb50 0000000000000108 t util_format_l8a8_snorm_pack_rgba_float
00000000001fcc60 0000000000000034 t util_format_l8a8_snorm_fetch_rgba_float
00000000001fcca0 00000000000000c4 t util_format_l8a8_snorm_unpack_rgba_8unorm
00000000001fcd70 0000000000000070 t util_format_l8a8_snorm_pack_rgba_8unorm
00000000001fcde0 0000000000000074 t util_format_i8_snorm_unpack_rgba_float
00000000001fce60 0000000000000024 t util_format_i8_snorm_fetch_rgba_float
00000000001fce90 000000000000009c t util_format_i8_snorm_unpack_rgba_8unorm
00000000001fcf30 0000000000000078 t util_format_a16_snorm_unpack_rgba_float
00000000001fcfb0 00000000000000c0 t util_format_a16_snorm_pack_rgba_float
00000000001fd070 0000000000000028 t util_format_a16_snorm_fetch_rgba_float
00000000001fd0a0 0000000000000078 t util_format_a16_snorm_unpack_rgba_8unorm
00000000001fd120 0000000000000078 t util_format_a16_snorm_pack_rgba_8unorm
00000000001fd1a0 000000000000007c t util_format_l16_snorm_unpack_rgba_float
00000000001fd220 00000000000000c0 t util_format_l16_snorm_pack_rgba_float
00000000001fd2e0 000000000000002c t util_format_l16_snorm_fetch_rgba_float
00000000001fd310 000000000000007c t util_format_l16_snorm_unpack_rgba_8unorm
00000000001fd390 0000000000000074 t util_format_l16_snorm_pack_rgba_8unorm
00000000001fd410 0000000000000088 t util_format_l16a16_snorm_unpack_rgba_float
00000000001fd4a0 0000000000000114 t util_format_l16a16_snorm_pack_rgba_float
00000000001fd5c0 0000000000000038 t util_format_l16a16_snorm_fetch_rgba_float
00000000001fd600 000000000000008c t util_format_l16a16_snorm_unpack_rgba_8unorm
00000000001fd690 000000000000008c t util_format_l16a16_snorm_pack_rgba_8unorm
00000000001fd720 0000000000000074 t util_format_i16_snorm_unpack_rgba_float
00000000001fd7a0 0000000000000024 t util_format_i16_snorm_fetch_rgba_float
00000000001fd7d0 000000000000007c t util_format_i16_snorm_unpack_rgba_8unorm
00000000001fd850 00000000000000a8 t util_format_a16_float_unpack_rgba_float
00000000001fd900 0000000000000060 t util_format_a16_float_fetch_rgba_float
00000000001fd960 00000000000000a8 t util_format_l16_float_unpack_rgba_float
00000000001fda10 0000000000000070 t util_format_l16_float_fetch_rgba_float
00000000001fda80 00000000000000dc t util_format_l16a16_float_unpack_rgba_float
00000000001fdb60 00000000000000a4 t util_format_l16a16_float_fetch_rgba_float
00000000001fdc10 00000000000000a8 t util_format_i16_float_unpack_rgba_float
00000000001fdcc0 0000000000000068 t util_format_i16_float_fetch_rgba_float
00000000001fdd30 0000000000000068 t util_format_a32_float_unpack_rgba_float
00000000001fdda0 0000000000000054 t util_format_a32_float_pack_rgba_float
00000000001fde00 0000000000000014 t util_format_a32_float_fetch_rgba_float
00000000001fde20 000000000000006c t util_format_a32_float_pack_rgba_8unorm
00000000001fde90 0000000000000068 t util_format_l32_float_unpack_rgba_float
00000000001fdf00 0000000000000054 t util_format_l32_float_pack_rgba_float
00000000001fdf60 0000000000000014 t util_format_l32_float_fetch_rgba_float
00000000001fdf80 0000000000000064 t util_format_l32_float_pack_rgba_8unorm
00000000001fdff0 0000000000000070 t util_format_l32a32_float_unpack_rgba_float
00000000001fe060 000000000000006c t util_format_l32a32_float_pack_rgba_float
00000000001fe0d0 000000000000001c t util_format_l32a32_float_fetch_rgba_float
00000000001fe0f0 000000000000008c t util_format_l32a32_float_pack_rgba_8unorm
00000000001fe180 0000000000000068 t util_format_i32_float_unpack_rgba_float
00000000001fe1f0 0000000000000010 t util_format_i32_float_fetch_rgba_float
00000000001fe200 0000000000000070 t util_format_l8_srgb_unpack_rgba_float
00000000001fe270 0000000000000024 t util_format_l8_srgb_fetch_rgba_float
00000000001fe2a0 0000000000000078 t util_format_l8_srgb_unpack_rgba_8unorm
00000000001fe320 0000000000000068 t util_format_l8_srgb_pack_rgba_8unorm
00000000001fe390 0000000000000074 t util_format_r8_srgb_unpack_rgba_float
00000000001fe410 0000000000000024 t util_format_r8_srgb_fetch_rgba_float
00000000001fe440 0000000000000078 t util_format_r8_srgb_unpack_rgba_8unorm
00000000001fe4c0 000000000000008c t util_format_l8a8_srgb_unpack_rgba_float
00000000001fe550 000000000000003c t util_format_l8a8_srgb_fetch_rgba_float
00000000001fe590 0000000000000080 t util_format_l8a8_srgb_unpack_rgba_8unorm
00000000001fe610 0000000000000078 t util_format_l8a8_srgb_pack_rgba_8unorm
00000000001fe690 0000000000000080 t util_format_r8g8_srgb_unpack_rgba_float
00000000001fe710 000000000000002c t util_format_r8g8_srgb_fetch_rgba_float
00000000001fe740 0000000000000084 t util_format_r8g8_srgb_unpack_rgba_8unorm
00000000001fe7d0 0000000000000078 t util_format_r8g8_srgb_pack_rgba_8unorm
00000000001fe850 0000000000000080 t util_format_r8g8b8_srgb_unpack_rgba_float
00000000001fe8d0 0000000000000034 t util_format_r8g8b8_srgb_fetch_rgba_float
00000000001fe910 0000000000000088 t util_format_r8g8b8_srgb_unpack_rgba_8unorm
00000000001fe9a0 0000000000000084 t util_format_r8g8b8_srgb_pack_rgba_8unorm
00000000001fea30 0000000000000084 t util_format_b8g8r8_srgb_unpack_rgba_float
00000000001feac0 0000000000000034 t util_format_b8g8r8_srgb_fetch_rgba_float
00000000001feb00 000000000000008c t util_format_b8g8r8_srgb_unpack_rgba_8unorm
00000000001feb90 0000000000000088 t util_format_b8g8r8_srgb_pack_rgba_8unorm
00000000001fec20 000000000000009c t util_format_r8g8b8a8_srgb_unpack_rgba_float
00000000001fecc0 000000000000004c t util_format_r8g8b8a8_srgb_fetch_rgba_float
00000000001fed10 0000000000000090 t util_format_r8g8b8a8_srgb_unpack_rgba_8unorm
00000000001feda0 0000000000000090 t util_format_r8g8b8a8_srgb_pack_rgba_8unorm
00000000001fee30 000000000000009c t util_format_a8b8g8r8_srgb_unpack_rgba_float
00000000001feed0 000000000000004c t util_format_a8b8g8r8_srgb_fetch_rgba_float
00000000001fef20 000000000000008c t util_format_a8b8g8r8_srgb_unpack_rgba_8unorm
00000000001fefb0 0000000000000090 t util_format_a8b8g8r8_srgb_pack_rgba_8unorm
00000000001ff040 0000000000000084 t util_format_x8b8g8r8_srgb_unpack_rgba_float
00000000001ff0d0 0000000000000038 t util_format_x8b8g8r8_srgb_fetch_rgba_float
00000000001ff110 000000000000008c t util_format_x8b8g8r8_srgb_unpack_rgba_8unorm
00000000001ff1a0 0000000000000084 t util_format_x8b8g8r8_srgb_pack_rgba_8unorm
00000000001ff230 000000000000009c t util_format_b8g8r8a8_srgb_unpack_rgba_float
00000000001ff2d0 000000000000004c t util_format_b8g8r8a8_srgb_fetch_rgba_float
00000000001ff320 0000000000000090 t util_format_b8g8r8a8_srgb_unpack_rgba_8unorm
00000000001ff3b0 0000000000000090 t util_format_b8g8r8a8_srgb_pack_rgba_8unorm
00000000001ff440 0000000000000084 t util_format_b8g8r8x8_srgb_unpack_rgba_float
00000000001ff4d0 0000000000000038 t util_format_b8g8r8x8_srgb_fetch_rgba_float
00000000001ff510 000000000000008c t util_format_b8g8r8x8_srgb_unpack_rgba_8unorm
00000000001ff5a0 0000000000000088 t util_format_b8g8r8x8_srgb_pack_rgba_8unorm
00000000001ff630 000000000000009c t util_format_a8r8g8b8_srgb_unpack_rgba_float
00000000001ff6d0 000000000000004c t util_format_a8r8g8b8_srgb_fetch_rgba_float
00000000001ff720 000000000000008c t util_format_a8r8g8b8_srgb_unpack_rgba_8unorm
00000000001ff7b0 0000000000000090 t util_format_a8r8g8b8_srgb_pack_rgba_8unorm
00000000001ff840 0000000000000084 t util_format_x8r8g8b8_srgb_unpack_rgba_float
00000000001ff8d0 0000000000000038 t util_format_x8r8g8b8_srgb_fetch_rgba_float
00000000001ff910 000000000000008c t util_format_x8r8g8b8_srgb_unpack_rgba_8unorm
00000000001ff9a0 0000000000000088 t util_format_x8r8g8b8_srgb_pack_rgba_8unorm
00000000001ffa30 00000000000000a0 t util_format_r8sg8sb8ux8u_norm_unpack_rgba_float
00000000001ffad0 0000000000000054 t util_format_r8sg8sb8ux8u_norm_fetch_rgba_float
00000000001ffb30 00000000000000c8 t util_format_r8sg8sb8ux8u_norm_unpack_rgba_8unorm
00000000001ffc00 0000000000000078 t util_format_r8sg8sb8ux8u_norm_pack_rgba_8unorm
00000000001ffc80 00000000000000b0 t util_format_r10sg10sb10sa2u_norm_unpack_rgba_float
00000000001ffd30 00000000000001b0 t util_format_r10sg10sb10sa2u_norm_pack_rgba_float
00000000001ffee0 000000000000005c t util_format_r10sg10sb10sa2u_norm_fetch_rgba_float
00000000001fff40 00000000000000b8 t util_format_r10sg10sb10sa2u_norm_unpack_rgba_8unorm
0000000000200000 00000000000000b8 t util_format_r10sg10sb10sa2u_norm_pack_rgba_8unorm
00000000002000c0 00000000000000a4 t util_format_r5sg5sb6u_norm_unpack_rgba_float
0000000000200170 0000000000000160 t util_format_r5sg5sb6u_norm_pack_rgba_float
00000000002002d0 0000000000000058 t util_format_r5sg5sb6u_norm_fetch_rgba_float
0000000000200330 00000000000000d4 t util_format_r5sg5sb6u_norm_unpack_rgba_8unorm
0000000000200410 000000000000007c t util_format_r5sg5sb6u_norm_pack_rgba_8unorm
0000000000200490 00000000000000a4 t util_format_z24_unorm_s8_uint_as_r8g8b8a8_unpack_rgba_float
0000000000200540 0000000000000054 t util_format_z24_unorm_s8_uint_as_r8g8b8a8_fetch_rgba_float
00000000002005a0 0000000000000078 t util_format_z24_unorm_s8_uint_as_r8g8b8a8_unpack_rgba_8unorm
0000000000200620 0000000000000044 t util_format_z24_unorm_s8_uint_as_r8g8b8a8_pack_rgba_8unorm
0000000000200670 000000000000006c t util_format_r64_float_unpack_rgba_float
00000000002006e0 000000000000004c t util_format_r64_float_pack_rgba_float
0000000000200730 000000000000001c t util_format_r64_float_fetch_rgba_float
0000000000200750 00000000000000d4 t util_format_r64_float_unpack_rgba_8unorm
0000000000200830 0000000000000064 t util_format_r64_float_pack_rgba_8unorm
00000000002008a0 0000000000000074 t util_format_r64g64_float_unpack_rgba_float
0000000000200920 000000000000006c t util_format_r64g64_float_pack_rgba_float
0000000000200990 000000000000001c t util_format_r64g64_float_fetch_rgba_float
00000000002009b0 0000000000000128 t util_format_r64g64_float_unpack_rgba_8unorm
0000000000200ae0 0000000000000088 t util_format_r64g64_float_pack_rgba_8unorm
0000000000200b70 0000000000000068 t util_format_r32_float_unpack_rgba_float
0000000000200be0 0000000000000018 t util_format_r32_float_fetch_rgba_float
0000000000200c00 0000000000000074 t util_format_r32g32_float_unpack_rgba_float
0000000000200c80 0000000000000068 t util_format_r32g32_float_pack_rgba_float
0000000000200cf0 000000000000001c t util_format_r32g32_float_fetch_rgba_float
0000000000200d10 000000000000008c t util_format_r32g32_float_pack_rgba_8unorm
0000000000200da0 000000000000007c t util_format_r32g32b32a32_float_unpack_rgba_float
0000000000200e20 000000000000007c t util_format_r32g32b32a32_float_pack_rgba_float
0000000000200ea0 0000000000000024 t util_format_r32g32b32a32_float_fetch_rgba_float
0000000000200ed0 00000000000000b8 t util_format_r32g32b32a32_float_pack_rgba_8unorm
0000000000200f90 0000000000000084 t util_format_r32_unorm_unpack_rgba_float
0000000000201020 000000000000008c t util_format_r32_unorm_pack_rgba_float
00000000002010b0 0000000000000030 t util_format_r32_unorm_fetch_rgba_float
00000000002010e0 0000000000000070 t util_format_r32_unorm_unpack_rgba_8unorm
0000000000201150 000000000000006c t util_format_r32_unorm_pack_rgba_8unorm
00000000002011c0 0000000000000094 t util_format_r32g32_unorm_unpack_rgba_float
0000000000201260 00000000000000cc t util_format_r32g32_unorm_pack_rgba_float
0000000000201330 000000000000003c t util_format_r32g32_unorm_fetch_rgba_float
0000000000201370 0000000000000074 t util_format_r32g32_unorm_unpack_rgba_8unorm
00000000002013f0 0000000000000094 t util_format_r32g32_unorm_pack_rgba_8unorm
0000000000201490 00000000000000a8 t util_format_r32g32b32a32_unorm_unpack_rgba_float
0000000000201540 0000000000000134 t util_format_r32g32b32a32_unorm_pack_rgba_float
0000000000201680 0000000000000054 t util_format_r32g32b32a32_unorm_fetch_rgba_float
00000000002016e0 0000000000000080 t util_format_r32g32b32a32_unorm_unpack_rgba_8unorm
0000000000201760 00000000000000c8 t util_format_r32g32b32a32_unorm_pack_rgba_8unorm
0000000000201830 000000000000006c t util_format_r32_uscaled_unpack_rgba_float
00000000002018a0 0000000000000078 t util_format_r32_uscaled_pack_rgba_float
0000000000201920 000000000000001c t util_format_r32_uscaled_fetch_rgba_float
0000000000201940 0000000000000074 t util_format_r32_uscaled_unpack_rgba_8unorm
00000000002019c0 0000000000000064 t util_format_r32_uscaled_pack_rgba_8unorm
0000000000201a30 0000000000000074 t util_format_r32g32_uscaled_unpack_rgba_float
0000000000201ab0 00000000000000ac t util_format_r32g32_uscaled_pack_rgba_float
0000000000201b60 0000000000000020 t util_format_r32g32_uscaled_fetch_rgba_float
0000000000201b80 000000000000007c t util_format_r32g32_uscaled_unpack_rgba_8unorm
0000000000201c00 0000000000000084 t util_format_r32g32_uscaled_pack_rgba_8unorm
0000000000201c90 0000000000000080 t util_format_r32g32b32a32_uscaled_unpack_rgba_float
0000000000201d10 00000000000000fc t util_format_r32g32b32a32_uscaled_pack_rgba_float
0000000000201e10 0000000000000028 t util_format_r32g32b32a32_uscaled_fetch_rgba_float
0000000000201e40 0000000000000090 t util_format_r32g32b32a32_uscaled_unpack_rgba_8unorm
0000000000201ed0 00000000000000a8 t util_format_r32g32b32a32_uscaled_pack_rgba_8unorm
0000000000201f80 0000000000000084 t util_format_r32_snorm_unpack_rgba_float
0000000000202010 000000000000008c t util_format_r32_snorm_pack_rgba_float
00000000002020a0 0000000000000030 t util_format_r32_snorm_fetch_rgba_float
00000000002020d0 0000000000000078 t util_format_r32_snorm_unpack_rgba_8unorm
0000000000202150 000000000000006c t util_format_r32_snorm_pack_rgba_8unorm
00000000002021c0 0000000000000094 t util_format_r32g32_snorm_unpack_rgba_float
0000000000202260 00000000000000cc t util_format_r32g32_snorm_pack_rgba_float
0000000000202330 000000000000003c t util_format_r32g32_snorm_fetch_rgba_float
0000000000202370 0000000000000088 t util_format_r32g32_snorm_unpack_rgba_8unorm
0000000000202400 0000000000000094 t util_format_r32g32_snorm_pack_rgba_8unorm
00000000002024a0 00000000000000a8 t util_format_r32g32b32a32_snorm_unpack_rgba_float
0000000000202550 0000000000000134 t util_format_r32g32b32a32_snorm_pack_rgba_float
0000000000202690 0000000000000054 t util_format_r32g32b32a32_snorm_fetch_rgba_float
00000000002026f0 00000000000000a8 t util_format_r32g32b32a32_snorm_unpack_rgba_8unorm
00000000002027a0 00000000000000c8 t util_format_r32g32b32a32_snorm_pack_rgba_8unorm
0000000000202870 000000000000006c t util_format_r32_sscaled_unpack_rgba_float
00000000002028e0 0000000000000078 t util_format_r32_sscaled_pack_rgba_float
0000000000202960 000000000000001c t util_format_r32_sscaled_fetch_rgba_float
0000000000202980 0000000000000074 t util_format_r32_sscaled_unpack_rgba_8unorm
0000000000202a00 0000000000000074 t util_format_r32g32_sscaled_unpack_rgba_float
0000000000202a80 00000000000000ac t util_format_r32g32_sscaled_pack_rgba_float
0000000000202b30 0000000000000020 t util_format_r32g32_sscaled_fetch_rgba_float
0000000000202b50 0000000000000080 t util_format_r32g32_sscaled_unpack_rgba_8unorm
0000000000202bd0 0000000000000084 t util_format_r32g32_sscaled_pack_rgba_8unorm
0000000000202c60 0000000000000080 t util_format_r32g32b32a32_sscaled_unpack_rgba_float
0000000000202ce0 00000000000000fc t util_format_r32g32b32a32_sscaled_pack_rgba_float
0000000000202de0 0000000000000028 t util_format_r32g32b32a32_sscaled_fetch_rgba_float
0000000000202e10 0000000000000098 t util_format_r32g32b32a32_sscaled_unpack_rgba_8unorm
0000000000202eb0 00000000000000a8 t util_format_r32g32b32a32_sscaled_pack_rgba_8unorm
0000000000202f60 00000000000000ac t util_format_r16_float_unpack_rgba_float
0000000000203010 0000000000000070 t util_format_r16_float_fetch_rgba_float
0000000000203080 00000000000000e0 t util_format_r16g16_float_unpack_rgba_float
0000000000203160 00000000000000ac t util_format_r16g16_float_fetch_rgba_float
0000000000203210 0000000000000144 t util_format_r16g16b16a16_float_unpack_rgba_float
0000000000203360 0000000000000128 t util_format_r16g16b16a16_float_fetch_rgba_float
0000000000203490 0000000000000080 t util_format_r16_unorm_unpack_rgba_float
0000000000203510 000000000000002c t util_format_r16_unorm_fetch_rgba_float
0000000000203540 0000000000000070 t util_format_r16_unorm_unpack_rgba_8unorm
00000000002035b0 0000000000000094 t util_format_r16g16_unorm_unpack_rgba_float
0000000000203650 0000000000000104 t util_format_r16g16_unorm_pack_rgba_float
0000000000203760 000000000000003c t util_format_r16g16_unorm_fetch_rgba_float
00000000002037a0 0000000000000074 t util_format_r16g16_unorm_unpack_rgba_8unorm
0000000000203820 000000000000008c t util_format_r16g16_unorm_pack_rgba_8unorm
00000000002038b0 00000000000000a8 t util_format_r16g16b16a16_unorm_unpack_rgba_float
0000000000203960 00000000000001ac t util_format_r16g16b16a16_unorm_pack_rgba_float
0000000000203b10 0000000000000058 t util_format_r16g16b16a16_unorm_fetch_rgba_float
0000000000203b70 000000000000007c t util_format_r16g16b16a16_unorm_unpack_rgba_8unorm
0000000000203bf0 00000000000000c4 t util_format_r16g16b16a16_unorm_pack_rgba_8unorm
0000000000203cc0 000000000000006c t util_format_r16_uscaled_unpack_rgba_float
0000000000203d30 0000000000000090 t util_format_r16_uscaled_pack_rgba_float
0000000000203dc0 000000000000001c t util_format_r16_uscaled_fetch_rgba_float
0000000000203de0 0000000000000074 t util_format_r16_uscaled_unpack_rgba_8unorm
0000000000203e60 000000000000006c t util_format_r16_uscaled_pack_rgba_8unorm
0000000000203ed0 000000000000007c t util_format_r16g16_uscaled_unpack_rgba_float
0000000000203f50 00000000000000b0 t util_format_r16g16_uscaled_pack_rgba_float
0000000000204000 000000000000002c t util_format_r16g16_uscaled_fetch_rgba_float
0000000000204030 000000000000007c t util_format_r16g16_uscaled_unpack_rgba_8unorm
00000000002040b0 000000000000007c t util_format_r16g16_uscaled_pack_rgba_8unorm
0000000000204130 0000000000000090 t util_format_r16g16b16a16_uscaled_unpack_rgba_float
00000000002041c0 000000000000010c t util_format_r16g16b16a16_uscaled_pack_rgba_float
00000000002042d0 000000000000003c t util_format_r16g16b16a16_uscaled_fetch_rgba_float
0000000000204310 000000000000008c t util_format_r16g16b16a16_uscaled_unpack_rgba_8unorm
00000000002043a0 00000000000000a4 t util_format_r16g16b16a16_uscaled_pack_rgba_8unorm
0000000000204450 0000000000000080 t util_format_r16_snorm_unpack_rgba_float
00000000002044d0 000000000000002c t util_format_r16_snorm_fetch_rgba_float
0000000000204500 000000000000007c t util_format_r16_snorm_unpack_rgba_8unorm
0000000000204580 0000000000000094 t util_format_r16g16_snorm_unpack_rgba_float
0000000000204620 0000000000000114 t util_format_r16g16_snorm_pack_rgba_float
0000000000204740 000000000000003c t util_format_r16g16_snorm_fetch_rgba_float
0000000000204780 000000000000008c t util_format_r16g16_snorm_unpack_rgba_8unorm
0000000000204810 000000000000008c t util_format_r16g16_snorm_pack_rgba_8unorm
00000000002048a0 00000000000000a4 t util_format_r16g16b16a16_snorm_unpack_rgba_float
0000000000204950 00000000000001b4 t util_format_r16g16b16a16_snorm_pack_rgba_float
0000000000204b10 0000000000000054 t util_format_r16g16b16a16_snorm_fetch_rgba_float
0000000000204b70 00000000000000ac t util_format_r16g16b16a16_snorm_unpack_rgba_8unorm
0000000000204c20 00000000000000c4 t util_format_r16g16b16a16_snorm_pack_rgba_8unorm
0000000000204cf0 000000000000006c t util_format_r16_sscaled_unpack_rgba_float
0000000000204d60 0000000000000090 t util_format_r16_sscaled_pack_rgba_float
0000000000204df0 000000000000001c t util_format_r16_sscaled_fetch_rgba_float
0000000000204e10 0000000000000074 t util_format_r16_sscaled_unpack_rgba_8unorm
0000000000204e90 000000000000007c t util_format_r16g16_sscaled_unpack_rgba_float
0000000000204f10 00000000000000c0 t util_format_r16g16_sscaled_pack_rgba_float
0000000000204fd0 000000000000002c t util_format_r16g16_sscaled_fetch_rgba_float
0000000000205000 0000000000000084 t util_format_r16g16_sscaled_unpack_rgba_8unorm
0000000000205090 000000000000007c t util_format_r16g16_sscaled_pack_rgba_8unorm
0000000000205110 000000000000008c t util_format_r16g16b16a16_sscaled_unpack_rgba_float
00000000002051a0 000000000000010c t util_format_r16g16b16a16_sscaled_pack_rgba_float
00000000002052b0 0000000000000038 t util_format_r16g16b16a16_sscaled_fetch_rgba_float
00000000002052f0 000000000000009c t util_format_r16g16b16a16_sscaled_unpack_rgba_8unorm
0000000000205390 00000000000000a4 t util_format_r16g16b16a16_sscaled_pack_rgba_8unorm
0000000000205440 0000000000000080 t util_format_r8_unorm_unpack_rgba_float
00000000002054c0 000000000000002c t util_format_r8_unorm_fetch_rgba_float
00000000002054f0 000000000000006c t util_format_r8_unorm_unpack_rgba_8unorm
0000000000205560 0000000000000098 t util_format_r8g8_unorm_unpack_rgba_float
0000000000205600 0000000000000040 t util_format_r8g8_unorm_fetch_rgba_float
0000000000205640 0000000000000070 t util_format_r8g8_unorm_unpack_rgba_8unorm
00000000002056b0 0000000000000054 t util_format_r8g8_unorm_pack_rgba_8unorm
0000000000205710 0000000000000094 t util_format_r8g8b8_unorm_unpack_rgba_float
00000000002057b0 0000000000000040 t util_format_r8g8b8_unorm_fetch_rgba_float
00000000002057f0 0000000000000078 t util_format_r8g8b8_unorm_unpack_rgba_8unorm
0000000000205870 0000000000000074 t util_format_r8g8b8_unorm_pack_rgba_8unorm
00000000002058f0 0000000000000098 t util_format_b8g8r8_unorm_unpack_rgba_float
0000000000205990 0000000000000040 t util_format_b8g8r8_unorm_fetch_rgba_float
00000000002059d0 0000000000000078 t util_format_b8g8r8_unorm_unpack_rgba_8unorm
0000000000205a50 0000000000000070 t util_format_b8g8r8_unorm_pack_rgba_8unorm
0000000000205ac0 0000000000000080 t util_format_r8g8_uscaled_unpack_rgba_float
0000000000205b40 00000000000000b0 t util_format_r8g8_uscaled_pack_rgba_float
0000000000205bf0 0000000000000030 t util_format_r8g8_uscaled_fetch_rgba_float
0000000000205c20 000000000000007c t util_format_r8g8_uscaled_unpack_rgba_8unorm
0000000000205ca0 000000000000007c t util_format_r8g8_uscaled_pack_rgba_8unorm
0000000000205d20 0000000000000078 t util_format_r8g8b8_uscaled_unpack_rgba_float
0000000000205da0 00000000000000dc t util_format_r8g8b8_uscaled_pack_rgba_float
0000000000205e80 0000000000000028 t util_format_r8g8b8_uscaled_fetch_rgba_float
0000000000205eb0 000000000000008c t util_format_r8g8b8_uscaled_unpack_rgba_8unorm
0000000000205f40 0000000000000090 t util_format_r8g8b8_uscaled_pack_rgba_8unorm
0000000000205fd0 000000000000007c t util_format_b8g8r8_uscaled_unpack_rgba_float
0000000000206050 00000000000000dc t util_format_b8g8r8_uscaled_pack_rgba_float
0000000000206130 0000000000000028 t util_format_b8g8r8_uscaled_fetch_rgba_float
0000000000206160 0000000000000090 t util_format_b8g8r8_uscaled_unpack_rgba_8unorm
00000000002061f0 0000000000000094 t util_format_b8g8r8_uscaled_pack_rgba_8unorm
0000000000206290 0000000000000088 t util_format_r8g8b8a8_uscaled_unpack_rgba_float
0000000000206320 00000000000000fc t util_format_r8g8b8a8_uscaled_pack_rgba_float
0000000000206420 0000000000000034 t util_format_r8g8b8a8_uscaled_fetch_rgba_float
0000000000206460 000000000000008c t util_format_r8g8b8a8_uscaled_unpack_rgba_8unorm
00000000002064f0 00000000000000a0 t util_format_r8g8b8a8_uscaled_pack_rgba_8unorm
0000000000206590 0000000000000088 t util_format_b8g8r8a8_uscaled_unpack_rgba_float
0000000000206620 00000000000000fc t util_format_b8g8r8a8_uscaled_pack_rgba_float
0000000000206720 0000000000000034 t util_format_b8g8r8a8_uscaled_fetch_rgba_float
0000000000206760 000000000000008c t util_format_b8g8r8a8_uscaled_unpack_rgba_8unorm
00000000002067f0 00000000000000a4 t util_format_b8g8r8a8_uscaled_pack_rgba_8unorm
00000000002068a0 0000000000000088 t util_format_a8b8g8r8_uscaled_unpack_rgba_float
0000000000206930 00000000000000fc t util_format_a8b8g8r8_uscaled_pack_rgba_float
0000000000206a30 0000000000000034 t util_format_a8b8g8r8_uscaled_fetch_rgba_float
0000000000206a70 000000000000008c t util_format_a8b8g8r8_uscaled_unpack_rgba_8unorm
0000000000206b00 00000000000000a4 t util_format_a8b8g8r8_uscaled_pack_rgba_8unorm
0000000000206bb0 0000000000000080 t util_format_r8_snorm_unpack_rgba_float
0000000000206c30 000000000000002c t util_format_r8_snorm_fetch_rgba_float
0000000000206c60 000000000000009c t util_format_r8_snorm_unpack_rgba_8unorm
0000000000206d00 0000000000000090 t util_format_r8g8_snorm_unpack_rgba_float
0000000000206d90 0000000000000108 t util_format_r8g8_snorm_pack_rgba_float
0000000000206ea0 0000000000000038 t util_format_r8g8_snorm_fetch_rgba_float
0000000000206ee0 00000000000000c4 t util_format_r8g8_snorm_unpack_rgba_8unorm
0000000000206fb0 0000000000000070 t util_format_r8g8_snorm_pack_rgba_8unorm
0000000000207020 0000000000000094 t util_format_r8g8b8_snorm_unpack_rgba_float
00000000002070c0 000000000000015c t util_format_r8g8b8_snorm_pack_rgba_float
0000000000207220 0000000000000044 t util_format_r8g8b8_snorm_fetch_rgba_float
0000000000207270 00000000000000ec t util_format_r8g8b8_snorm_unpack_rgba_8unorm
0000000000207360 000000000000007c t util_format_r8g8b8_snorm_pack_rgba_8unorm
00000000002073e0 0000000000000098 t util_format_b8g8r8_snorm_unpack_rgba_float
0000000000207480 000000000000015c t util_format_b8g8r8_snorm_pack_rgba_float
00000000002075e0 0000000000000044 t util_format_b8g8r8_snorm_fetch_rgba_float
0000000000207630 00000000000000f0 t util_format_b8g8r8_snorm_unpack_rgba_8unorm
0000000000207720 0000000000000080 t util_format_b8g8r8_snorm_pack_rgba_8unorm
00000000002077a0 00000000000000a0 t util_format_r8g8b8a8_snorm_unpack_rgba_float
0000000000207840 00000000000001b0 t util_format_r8g8b8a8_snorm_pack_rgba_float
00000000002079f0 0000000000000050 t util_format_r8g8b8a8_snorm_fetch_rgba_float
0000000000207a40 0000000000000114 t util_format_r8g8b8a8_snorm_unpack_rgba_8unorm
0000000000207b60 0000000000000088 t util_format_r8g8b8a8_snorm_pack_rgba_8unorm
0000000000207bf0 00000000000000a0 t util_format_b8g8r8a8_snorm_unpack_rgba_float
0000000000207c90 00000000000001b0 t util_format_b8g8r8a8_snorm_pack_rgba_float
0000000000207e40 0000000000000050 t util_format_b8g8r8a8_snorm_fetch_rgba_float
0000000000207e90 0000000000000114 t util_format_b8g8r8a8_snorm_unpack_rgba_8unorm
0000000000207fb0 000000000000008c t util_format_b8g8r8a8_snorm_pack_rgba_8unorm
0000000000208040 000000000000006c t util_format_r8_sscaled_unpack_rgba_float
00000000002080b0 0000000000000090 t util_format_r8_sscaled_pack_rgba_float
0000000000208140 000000000000001c t util_format_r8_sscaled_fetch_rgba_float
0000000000208160 0000000000000074 t util_format_r8_sscaled_unpack_rgba_8unorm
00000000002081e0 0000000000000078 t util_format_r8g8_sscaled_unpack_rgba_float
0000000000208260 00000000000000b8 t util_format_r8g8_sscaled_pack_rgba_float
0000000000208320 0000000000000024 t util_format_r8g8_sscaled_fetch_rgba_float
0000000000208350 0000000000000084 t util_format_r8g8_sscaled_unpack_rgba_8unorm
00000000002083e0 0000000000000080 t util_format_r8g8_sscaled_pack_rgba_8unorm
0000000000208460 0000000000000078 t util_format_r8g8b8_sscaled_unpack_rgba_float
00000000002084e0 00000000000000e4 t util_format_r8g8b8_sscaled_pack_rgba_float
00000000002085d0 000000000000002c t util_format_r8g8b8_sscaled_fetch_rgba_float
0000000000208600 000000000000008c t util_format_r8g8b8_sscaled_unpack_rgba_8unorm
0000000000208690 0000000000000090 t util_format_r8g8b8_sscaled_pack_rgba_8unorm
0000000000208720 000000000000007c t util_format_b8g8r8_sscaled_unpack_rgba_float
00000000002087a0 00000000000000e4 t util_format_b8g8r8_sscaled_pack_rgba_float
0000000000208890 000000000000002c t util_format_b8g8r8_sscaled_fetch_rgba_float
00000000002088c0 0000000000000090 t util_format_b8g8r8_sscaled_unpack_rgba_8unorm
0000000000208950 0000000000000094 t util_format_b8g8r8_sscaled_pack_rgba_8unorm
00000000002089f0 0000000000000088 t util_format_r8g8b8a8_sscaled_unpack_rgba_float
0000000000208a80 0000000000000114 t util_format_r8g8b8a8_sscaled_pack_rgba_float
0000000000208ba0 0000000000000034 t util_format_r8g8b8a8_sscaled_fetch_rgba_float
0000000000208be0 000000000000009c t util_format_r8g8b8a8_sscaled_unpack_rgba_8unorm
0000000000208c80 00000000000000a0 t util_format_r8g8b8a8_sscaled_pack_rgba_8unorm
0000000000208d20 0000000000000088 t util_format_b8g8r8a8_sscaled_unpack_rgba_float
0000000000208db0 0000000000000114 t util_format_b8g8r8a8_sscaled_pack_rgba_float
0000000000208ed0 0000000000000034 t util_format_b8g8r8a8_sscaled_fetch_rgba_float
0000000000208f10 000000000000009c t util_format_b8g8r8a8_sscaled_unpack_rgba_8unorm
0000000000208fb0 00000000000000a4 t util_format_b8g8r8a8_sscaled_pack_rgba_8unorm
0000000000209060 0000000000000088 t util_format_a8b8g8r8_sscaled_unpack_rgba_float
00000000002090f0 0000000000000114 t util_format_a8b8g8r8_sscaled_pack_rgba_float
0000000000209210 0000000000000034 t util_format_a8b8g8r8_sscaled_fetch_rgba_float
0000000000209250 000000000000009c t util_format_a8b8g8r8_sscaled_unpack_rgba_8unorm
00000000002092f0 00000000000000a4 t util_format_a8b8g8r8_sscaled_pack_rgba_8unorm
00000000002093a0 000000000000007c t util_format_r32_fixed_unpack_rgba_float
0000000000209420 0000000000000088 t util_format_r32_fixed_pack_rgba_float
00000000002094b0 0000000000000020 t util_format_r32_fixed_fetch_rgba_float
00000000002094d0 00000000000000d4 t util_format_r32_fixed_unpack_rgba_8unorm
00000000002095b0 000000000000006c t util_format_r32_fixed_pack_rgba_8unorm
0000000000209620 000000000000008c t util_format_r32g32_fixed_unpack_rgba_float
00000000002096b0 00000000000000c4 t util_format_r32g32_fixed_pack_rgba_float
0000000000209780 0000000000000038 t util_format_r32g32_fixed_fetch_rgba_float
00000000002097c0 0000000000000124 t util_format_r32g32_fixed_unpack_rgba_8unorm
00000000002098f0 0000000000000094 t util_format_r32g32_fixed_pack_rgba_8unorm
0000000000209990 00000000000000a8 t util_format_r32g32b32a32_fixed_unpack_rgba_float
0000000000209a40 0000000000000124 t util_format_r32g32b32a32_fixed_pack_rgba_float
0000000000209b70 0000000000000050 t util_format_r32g32b32a32_fixed_fetch_rgba_float
0000000000209bc0 00000000000001c0 t util_format_r32g32b32a32_fixed_unpack_rgba_8unorm
0000000000209d80 00000000000000c8 t util_format_r32g32b32a32_fixed_pack_rgba_8unorm
0000000000209e50 000000000000007c t util_format_r10g10b10x2_uscaled_unpack_rgba_float
0000000000209ed0 00000000000000e0 t util_format_r10g10b10x2_uscaled_pack_rgba_float
0000000000209fb0 0000000000000030 t util_format_r10g10b10x2_uscaled_fetch_rgba_float
0000000000209fe0 0000000000000084 t util_format_r10g10b10x2_uscaled_unpack_rgba_8unorm
000000000020a070 0000000000000090 t util_format_r10g10b10x2_uscaled_pack_rgba_8unorm
000000000020a100 0000000000000098 t util_format_r10g10b10x2_snorm_unpack_rgba_float
000000000020a1a0 0000000000000168 t util_format_r10g10b10x2_snorm_pack_rgba_float
000000000020a310 0000000000000048 t util_format_r10g10b10x2_snorm_fetch_rgba_float
000000000020a360 000000000000009c t util_format_r10g10b10x2_snorm_unpack_rgba_8unorm
000000000020a400 00000000000000a8 t util_format_r10g10b10x2_snorm_pack_rgba_8unorm
000000000020a4b0 000000000000008c t util_format_a4r4_unorm_unpack_rgba_float
000000000020a540 0000000000000100 t util_format_a4r4_unorm_pack_rgba_float
000000000020a640 000000000000003c t util_format_a4r4_unorm_fetch_rgba_float
000000000020a680 000000000000009c t util_format_a4r4_unorm_unpack_rgba_8unorm
000000000020a720 0000000000000070 t util_format_a4r4_unorm_pack_rgba_8unorm
000000000020a790 000000000000008c t util_format_r4a4_unorm_unpack_rgba_float
000000000020a820 000000000000003c t util_format_r4a4_unorm_fetch_rgba_float
000000000020a860 000000000000009c t util_format_r4a4_unorm_unpack_rgba_8unorm
000000000020a900 0000000000000090 t util_format_r8a8_unorm_unpack_rgba_float
000000000020a990 0000000000000040 t util_format_r8a8_unorm_fetch_rgba_float
000000000020a9d0 0000000000000070 t util_format_r8a8_unorm_unpack_rgba_8unorm
000000000020aa40 0000000000000090 t util_format_a8r8_unorm_unpack_rgba_float
000000000020aad0 0000000000000040 t util_format_a8r8_unorm_fetch_rgba_float
000000000020ab10 0000000000000070 t util_format_a8r8_unorm_unpack_rgba_8unorm
000000000020ab80 000000000000006c t util_format_a8r8_unorm_pack_rgba_8unorm
000000000020abf0 0000000000000088 t util_format_r10g10b10a2_uscaled_unpack_rgba_float
000000000020ac80 0000000000000104 t util_format_r10g10b10a2_uscaled_pack_rgba_float
000000000020ad90 0000000000000034 t util_format_r10g10b10a2_uscaled_fetch_rgba_float
000000000020add0 000000000000008c t util_format_r10g10b10a2_uscaled_unpack_rgba_8unorm
000000000020ae60 00000000000000a0 t util_format_r10g10b10a2_uscaled_pack_rgba_8unorm
000000000020af00 0000000000000088 t util_format_r10g10b10a2_sscaled_unpack_rgba_float
000000000020af90 000000000000010c t util_format_r10g10b10a2_sscaled_pack_rgba_float
000000000020b0a0 0000000000000034 t util_format_r10g10b10a2_sscaled_fetch_rgba_float
000000000020b0e0 00000000000000a0 t util_format_r10g10b10a2_sscaled_unpack_rgba_8unorm
000000000020b180 000000000000009c t util_format_r10g10b10a2_snorm_unpack_rgba_float
000000000020b220 00000000000001bc t util_format_r10g10b10a2_snorm_pack_rgba_float
000000000020b3e0 000000000000004c t util_format_r10g10b10a2_snorm_fetch_rgba_float
000000000020b430 00000000000000ac t util_format_r10g10b10a2_snorm_unpack_rgba_8unorm
000000000020b4e0 00000000000000b8 t util_format_r10g10b10a2_snorm_pack_rgba_8unorm
000000000020b5a0 0000000000000088 t util_format_b10g10r10a2_uscaled_unpack_rgba_float
000000000020b630 0000000000000104 t util_format_b10g10r10a2_uscaled_pack_rgba_float
000000000020b740 0000000000000034 t util_format_b10g10r10a2_uscaled_fetch_rgba_float
000000000020b780 000000000000008c t util_format_b10g10r10a2_uscaled_unpack_rgba_8unorm
000000000020b810 00000000000000a4 t util_format_b10g10r10a2_uscaled_pack_rgba_8unorm
000000000020b8c0 0000000000000088 t util_format_b10g10r10a2_sscaled_unpack_rgba_float
000000000020b950 000000000000010c t util_format_b10g10r10a2_sscaled_pack_rgba_float
000000000020ba60 0000000000000034 t util_format_b10g10r10a2_sscaled_fetch_rgba_float
000000000020baa0 00000000000000a0 t util_format_b10g10r10a2_sscaled_unpack_rgba_8unorm
000000000020bb40 000000000000009c t util_format_b10g10r10a2_snorm_unpack_rgba_float
000000000020bbe0 00000000000001bc t util_format_b10g10r10a2_snorm_pack_rgba_float
000000000020bda0 000000000000004c t util_format_b10g10r10a2_snorm_fetch_rgba_float
000000000020bdf0 00000000000000ac t util_format_b10g10r10a2_snorm_unpack_rgba_8unorm
000000000020bea0 00000000000000b8 t util_format_b10g10r10a2_snorm_pack_rgba_8unorm
000000000020bf60 0000000000000064 t util_format_r8_uint_unpack_unsigned
000000000020bfd0 0000000000000064 t util_format_r8_uint_pack_unsigned
000000000020c040 0000000000000018 t util_format_r8_uint_fetch_unsigned
000000000020c060 0000000000000078 t util_format_r8_uint_pack_signed
000000000020c0e0 000000000000006c t util_format_r8g8_uint_unpack_unsigned
000000000020c150 0000000000000080 t util_format_r8g8_uint_pack_unsigned
000000000020c1d0 000000000000001c t util_format_r8g8_uint_fetch_unsigned
000000000020c1f0 0000000000000098 t util_format_r8g8_uint_pack_signed
000000000020c290 000000000000006c t util_format_r8g8b8_uint_unpack_unsigned
000000000020c300 0000000000000088 t util_format_r8g8b8_uint_pack_unsigned
000000000020c390 000000000000001c t util_format_r8g8b8_uint_fetch_unsigned
000000000020c3b0 00000000000000bc t util_format_r8g8b8_uint_pack_signed
000000000020c470 0000000000000074 t util_format_r8g8b8a8_uint_unpack_unsigned
000000000020c4f0 00000000000000ac t util_format_r8g8b8a8_uint_pack_unsigned
000000000020c5a0 0000000000000020 t util_format_r8g8b8a8_uint_fetch_unsigned
000000000020c5c0 00000000000000c8 t util_format_r8g8b8a8_uint_pack_signed
000000000020c690 0000000000000064 t util_format_r8_sint_unpack_signed
000000000020c700 0000000000000078 t util_format_r8_sint_pack_signed
000000000020c780 0000000000000018 t util_format_r8_sint_fetch_signed
000000000020c7a0 0000000000000064 t util_format_r8_sint_pack_unsigned
000000000020c810 000000000000006c t util_format_r8g8_sint_unpack_signed
000000000020c880 00000000000000a0 t util_format_r8g8_sint_pack_signed
000000000020c920 000000000000001c t util_format_r8g8_sint_fetch_signed
000000000020c940 0000000000000080 t util_format_r8g8_sint_pack_unsigned
000000000020c9c0 000000000000006c t util_format_r8g8b8_sint_unpack_signed
000000000020ca30 00000000000000bc t util_format_r8g8b8_sint_pack_signed
000000000020caf0 000000000000001c t util_format_r8g8b8_sint_fetch_signed
000000000020cb10 0000000000000088 t util_format_r8g8b8_sint_pack_unsigned
000000000020cba0 0000000000000074 t util_format_r8g8b8a8_sint_unpack_signed
000000000020cc20 00000000000000f8 t util_format_r8g8b8a8_sint_pack_signed
000000000020cd20 0000000000000020 t util_format_r8g8b8a8_sint_fetch_signed
000000000020cd40 00000000000000ac t util_format_r8g8b8a8_sint_pack_unsigned
000000000020cdf0 0000000000000064 t util_format_r16_uint_unpack_unsigned
000000000020ce60 000000000000006c t util_format_r16_uint_pack_unsigned
000000000020ced0 0000000000000018 t util_format_r16_uint_fetch_unsigned
000000000020cef0 0000000000000078 t util_format_r16_uint_pack_signed
000000000020cf70 000000000000006c t util_format_r16g16_uint_unpack_unsigned
000000000020cfe0 0000000000000088 t util_format_r16g16_uint_pack_unsigned
000000000020d070 000000000000001c t util_format_r16g16_uint_fetch_unsigned
000000000020d090 0000000000000094 t util_format_r16g16_uint_pack_signed
000000000020d130 0000000000000074 t util_format_r16g16b16a16_uint_unpack_unsigned
000000000020d1b0 00000000000000a0 t util_format_r16g16b16a16_uint_pack_unsigned
000000000020d250 0000000000000020 t util_format_r16g16b16a16_uint_fetch_unsigned
000000000020d270 00000000000000dc t util_format_r16g16b16a16_uint_pack_signed
000000000020d350 0000000000000064 t util_format_r16_sint_unpack_signed
000000000020d3c0 0000000000000080 t util_format_r16_sint_pack_signed
000000000020d440 0000000000000018 t util_format_r16_sint_fetch_signed
000000000020d460 000000000000006c t util_format_r16_sint_pack_unsigned
000000000020d4d0 000000000000006c t util_format_r16g16_sint_unpack_signed
000000000020d540 00000000000000a4 t util_format_r16g16_sint_pack_signed
000000000020d5f0 000000000000001c t util_format_r16g16_sint_fetch_signed
000000000020d610 0000000000000088 t util_format_r16g16_sint_pack_unsigned
000000000020d6a0 0000000000000074 t util_format_r16g16b16a16_sint_unpack_signed
000000000020d720 00000000000000e4 t util_format_r16g16b16a16_sint_pack_signed
000000000020d810 0000000000000020 t util_format_r16g16b16a16_sint_fetch_signed
000000000020d830 00000000000000a0 t util_format_r16g16b16a16_sint_pack_unsigned
000000000020d8d0 0000000000000064 t util_format_r32_uint_unpack_unsigned
000000000020d940 0000000000000054 t util_format_r32_uint_pack_unsigned
000000000020d9a0 0000000000000018 t util_format_r32_uint_fetch_unsigned
000000000020d9c0 000000000000005c t util_format_r32_uint_pack_signed
000000000020da20 0000000000000068 t util_format_r32g32_uint_unpack_unsigned
000000000020da90 0000000000000068 t util_format_r32g32_uint_pack_unsigned
000000000020db00 000000000000001c t util_format_r32g32_uint_fetch_unsigned
000000000020db20 0000000000000078 t util_format_r32g32_uint_pack_signed
000000000020dba0 0000000000000074 t util_format_r32g32b32a32_uint_unpack_unsigned
000000000020dc20 000000000000007c t util_format_r32g32b32a32_uint_pack_unsigned
000000000020dca0 000000000000001c t util_format_r32g32b32a32_uint_fetch_unsigned
000000000020dcc0 000000000000009c t util_format_r32g32b32a32_uint_pack_signed
000000000020dd60 0000000000000064 t util_format_r32_sint_unpack_signed
000000000020ddd0 0000000000000054 t util_format_r32_sint_pack_signed
000000000020de30 0000000000000018 t util_format_r32_sint_fetch_signed
000000000020de50 000000000000005c t util_format_r32_sint_pack_unsigned
000000000020deb0 0000000000000068 t util_format_r32g32_sint_unpack_signed
000000000020df20 0000000000000068 t util_format_r32g32_sint_pack_signed
000000000020df90 000000000000001c t util_format_r32g32_sint_fetch_signed
000000000020dfb0 0000000000000080 t util_format_r32g32_sint_pack_unsigned
000000000020e030 0000000000000074 t util_format_r32g32b32a32_sint_unpack_signed
000000000020e0b0 000000000000007c t util_format_r32g32b32a32_sint_pack_signed
000000000020e130 000000000000001c t util_format_r32g32b32a32_sint_fetch_signed
000000000020e150 00000000000000a4 t util_format_r32g32b32a32_sint_pack_unsigned
000000000020e200 0000000000000064 t util_format_a8_uint_unpack_unsigned
000000000020e270 0000000000000068 t util_format_a8_uint_pack_unsigned
000000000020e2e0 0000000000000010 t util_format_a8_uint_fetch_unsigned
000000000020e2f0 0000000000000078 t util_format_a8_uint_pack_signed
000000000020e370 0000000000000064 t util_format_i8_uint_unpack_unsigned
000000000020e3e0 0000000000000010 t util_format_i8_uint_fetch_unsigned
000000000020e3f0 0000000000000064 t util_format_l8_uint_unpack_unsigned
000000000020e460 0000000000000014 t util_format_l8_uint_fetch_unsigned
000000000020e480 000000000000006c t util_format_l8a8_uint_unpack_unsigned
000000000020e4f0 0000000000000084 t util_format_l8a8_uint_pack_unsigned
000000000020e580 0000000000000018 t util_format_l8a8_uint_fetch_unsigned
000000000020e5a0 0000000000000098 t util_format_l8a8_uint_pack_signed
000000000020e640 0000000000000064 t util_format_a8_sint_unpack_signed
000000000020e6b0 0000000000000078 t util_format_a8_sint_pack_signed
000000000020e730 0000000000000010 t util_format_a8_sint_fetch_signed
000000000020e740 0000000000000068 t util_format_a8_sint_pack_unsigned
000000000020e7b0 0000000000000064 t util_format_i8_sint_unpack_signed
000000000020e820 0000000000000010 t util_format_i8_sint_fetch_signed
000000000020e830 0000000000000064 t util_format_l8_sint_unpack_signed
000000000020e8a0 0000000000000014 t util_format_l8_sint_fetch_signed
000000000020e8c0 000000000000006c t util_format_l8a8_sint_unpack_signed
000000000020e930 00000000000000a0 t util_format_l8a8_sint_pack_signed
000000000020e9d0 0000000000000018 t util_format_l8a8_sint_fetch_signed
000000000020e9f0 0000000000000084 t util_format_l8a8_sint_pack_unsigned
000000000020ea80 0000000000000064 t util_format_a16_uint_unpack_unsigned
000000000020eaf0 0000000000000070 t util_format_a16_uint_pack_unsigned
000000000020eb60 0000000000000010 t util_format_a16_uint_fetch_unsigned
000000000020eb70 0000000000000078 t util_format_a16_uint_pack_signed
000000000020ebf0 0000000000000064 t util_format_i16_uint_unpack_unsigned
000000000020ec60 0000000000000010 t util_format_i16_uint_fetch_unsigned
000000000020ec70 0000000000000064 t util_format_l16_uint_unpack_unsigned
000000000020ece0 0000000000000014 t util_format_l16_uint_fetch_unsigned
000000000020ed00 000000000000006c t util_format_l16a16_uint_unpack_unsigned
000000000020ed70 0000000000000088 t util_format_l16a16_uint_pack_unsigned
000000000020ee00 0000000000000018 t util_format_l16a16_uint_fetch_unsigned
000000000020ee20 0000000000000094 t util_format_l16a16_uint_pack_signed
000000000020eec0 0000000000000064 t util_format_a16_sint_unpack_signed
000000000020ef30 0000000000000080 t util_format_a16_sint_pack_signed
000000000020efb0 0000000000000010 t util_format_a16_sint_fetch_signed
000000000020efc0 0000000000000070 t util_format_a16_sint_pack_unsigned
000000000020f030 0000000000000064 t util_format_i16_sint_unpack_signed
000000000020f0a0 0000000000000010 t util_format_i16_sint_fetch_signed
000000000020f0b0 0000000000000064 t util_format_l16_sint_unpack_signed
000000000020f120 0000000000000014 t util_format_l16_sint_fetch_signed
000000000020f140 000000000000006c t util_format_l16a16_sint_unpack_signed
000000000020f1b0 00000000000000a4 t util_format_l16a16_sint_pack_signed
000000000020f260 0000000000000018 t util_format_l16a16_sint_fetch_signed
000000000020f280 0000000000000088 t util_format_l16a16_sint_pack_unsigned
000000000020f310 0000000000000064 t util_format_a32_uint_unpack_unsigned
000000000020f380 0000000000000054 t util_format_a32_uint_pack_unsigned
000000000020f3e0 0000000000000010 t util_format_a32_uint_fetch_unsigned
000000000020f3f0 000000000000005c t util_format_a32_uint_pack_signed
000000000020f450 0000000000000064 t util_format_i32_uint_unpack_unsigned
000000000020f4c0 0000000000000010 t util_format_i32_uint_fetch_unsigned
000000000020f4d0 0000000000000064 t util_format_l32_uint_unpack_unsigned
000000000020f540 0000000000000014 t util_format_l32_uint_fetch_unsigned
000000000020f560 0000000000000068 t util_format_l32a32_uint_unpack_unsigned
000000000020f5d0 000000000000006c t util_format_l32a32_uint_pack_unsigned
000000000020f640 0000000000000014 t util_format_l32a32_uint_fetch_unsigned
000000000020f660 000000000000007c t util_format_l32a32_uint_pack_signed
000000000020f6e0 0000000000000064 t util_format_a32_sint_unpack_signed
000000000020f750 0000000000000054 t util_format_a32_sint_pack_signed
000000000020f7b0 0000000000000010 t util_format_a32_sint_fetch_signed
000000000020f7c0 0000000000000064 t util_format_a32_sint_pack_unsigned
000000000020f830 0000000000000064 t util_format_i32_sint_unpack_signed
000000000020f8a0 0000000000000010 t util_format_i32_sint_fetch_signed
000000000020f8b0 0000000000000064 t util_format_l32_sint_unpack_signed
000000000020f920 0000000000000014 t util_format_l32_sint_fetch_signed
000000000020f940 0000000000000068 t util_format_l32a32_sint_unpack_signed
000000000020f9b0 000000000000006c t util_format_l32a32_sint_pack_signed
000000000020fa20 0000000000000014 t util_format_l32a32_sint_fetch_signed
000000000020fa40 0000000000000084 t util_format_l32a32_sint_pack_unsigned
000000000020fad0 0000000000000070 t util_format_b8g8r8_uint_unpack_unsigned
000000000020fb40 0000000000000084 t util_format_b8g8r8_uint_pack_unsigned
000000000020fbd0 000000000000001c t util_format_b8g8r8_uint_fetch_unsigned
000000000020fbf0 00000000000000bc t util_format_b8g8r8_uint_pack_signed
000000000020fcb0 0000000000000074 t util_format_b8g8r8a8_uint_unpack_unsigned
000000000020fd30 00000000000000ac t util_format_b8g8r8a8_uint_pack_unsigned
000000000020fde0 0000000000000020 t util_format_b8g8r8a8_uint_fetch_unsigned
000000000020fe00 00000000000000c8 t util_format_b8g8r8a8_uint_pack_signed
000000000020fed0 0000000000000070 t util_format_b8g8r8_sint_unpack_signed
000000000020ff40 00000000000000bc t util_format_b8g8r8_sint_pack_signed
0000000000210000 000000000000001c t util_format_b8g8r8_sint_fetch_signed
0000000000210020 0000000000000084 t util_format_b8g8r8_sint_pack_unsigned
00000000002100b0 0000000000000074 t util_format_b8g8r8a8_sint_unpack_signed
0000000000210130 00000000000000f8 t util_format_b8g8r8a8_sint_pack_signed
0000000000210230 0000000000000020 t util_format_b8g8r8a8_sint_fetch_signed
0000000000210250 00000000000000ac t util_format_b8g8r8a8_sint_pack_unsigned
0000000000210300 0000000000000074 t util_format_a8r8g8b8_uint_unpack_unsigned
0000000000210380 00000000000000ac t util_format_a8r8g8b8_uint_pack_unsigned
0000000000210430 0000000000000020 t util_format_a8r8g8b8_uint_fetch_unsigned
0000000000210450 00000000000000c8 t util_format_a8r8g8b8_uint_pack_signed
0000000000210520 0000000000000074 t util_format_a8b8g8r8_uint_unpack_unsigned
00000000002105a0 00000000000000ac t util_format_a8b8g8r8_uint_pack_unsigned
0000000000210650 0000000000000020 t util_format_a8b8g8r8_uint_fetch_unsigned
0000000000210670 00000000000000c8 t util_format_a8b8g8r8_uint_pack_signed
0000000000210740 0000000000000074 t util_format_a2r10g10b10_uint_unpack_unsigned
00000000002107c0 000000000000009c t util_format_a2r10g10b10_uint_pack_unsigned
0000000000210860 0000000000000020 t util_format_a2r10g10b10_uint_fetch_unsigned
0000000000210880 00000000000000c4 t util_format_a2r10g10b10_uint_pack_signed
0000000000210950 0000000000000074 t util_format_a2b10g10r10_uint_unpack_unsigned
00000000002109d0 000000000000009c t util_format_a2b10g10r10_uint_pack_unsigned
0000000000210a70 0000000000000020 t util_format_a2b10g10r10_uint_fetch_unsigned
0000000000210a90 00000000000000c4 t util_format_a2b10g10r10_uint_pack_signed
0000000000210b60 0000000000000074 t util_format_b10g10r10a2_uint_unpack_unsigned
0000000000210be0 000000000000009c t util_format_b10g10r10a2_uint_pack_unsigned
0000000000210c80 0000000000000020 t util_format_b10g10r10a2_uint_fetch_unsigned
0000000000210ca0 00000000000000c4 t util_format_b10g10r10a2_uint_pack_signed
0000000000210d70 0000000000000074 t util_format_b10g10r10a2_sint_unpack_signed
0000000000210df0 00000000000000e0 t util_format_b10g10r10a2_sint_pack_signed
0000000000210ed0 0000000000000020 t util_format_b10g10r10a2_sint_fetch_signed
0000000000210ef0 0000000000000094 t util_format_b10g10r10a2_sint_pack_unsigned
0000000000210f90 0000000000000070 t util_format_r5g6b5_uint_unpack_unsigned
0000000000211000 0000000000000098 t util_format_r5g6b5_uint_pack_unsigned
00000000002110a0 0000000000000024 t util_format_r5g6b5_uint_fetch_unsigned
00000000002110d0 00000000000000b8 t util_format_r5g6b5_uint_pack_signed
0000000000211190 0000000000000070 t util_format_b5g6r5_uint_unpack_unsigned
0000000000211200 0000000000000094 t util_format_b5g6r5_uint_pack_unsigned
00000000002112a0 0000000000000024 t util_format_b5g6r5_uint_fetch_unsigned
00000000002112d0 00000000000000b8 t util_format_b5g6r5_uint_pack_signed
0000000000211390 0000000000000070 t util_format_r3g3b2_uint_unpack_unsigned
0000000000211400 0000000000000098 t util_format_r3g3b2_uint_pack_unsigned
00000000002114a0 0000000000000024 t util_format_r3g3b2_uint_fetch_unsigned
00000000002114d0 00000000000000b8 t util_format_r3g3b2_uint_pack_signed
0000000000211590 0000000000000070 t util_format_b2g3r3_uint_unpack_unsigned
0000000000211600 0000000000000094 t util_format_b2g3r3_uint_pack_unsigned
00000000002116a0 0000000000000024 t util_format_b2g3r3_uint_fetch_unsigned
00000000002116d0 00000000000000b8 t util_format_b2g3r3_uint_pack_signed
0000000000211790 0000000000000074 t util_format_r4g4b4a4_uint_unpack_unsigned
0000000000211810 00000000000000b0 t util_format_r4g4b4a4_uint_pack_unsigned
00000000002118c0 0000000000000020 t util_format_r4g4b4a4_uint_fetch_unsigned
00000000002118e0 00000000000000d8 t util_format_r4g4b4a4_uint_pack_signed
00000000002119c0 0000000000000074 t util_format_b4g4r4a4_uint_unpack_unsigned
0000000000211a40 00000000000000b0 t util_format_b4g4r4a4_uint_pack_unsigned
0000000000211af0 0000000000000020 t util_format_b4g4r4a4_uint_fetch_unsigned
0000000000211b10 00000000000000d8 t util_format_b4g4r4a4_uint_pack_signed
0000000000211bf0 0000000000000074 t util_format_a4r4g4b4_uint_unpack_unsigned
0000000000211c70 00000000000000b0 t util_format_a4r4g4b4_uint_pack_unsigned
0000000000211d20 0000000000000020 t util_format_a4r4g4b4_uint_fetch_unsigned
0000000000211d40 00000000000000d8 t util_format_a4r4g4b4_uint_pack_signed
0000000000211e20 0000000000000074 t util_format_a4b4g4r4_uint_unpack_unsigned
0000000000211ea0 00000000000000b0 t util_format_a4b4g4r4_uint_pack_unsigned
0000000000211f50 0000000000000020 t util_format_a4b4g4r4_uint_fetch_unsigned
0000000000211f70 00000000000000d8 t util_format_a4b4g4r4_uint_pack_signed
0000000000212050 0000000000000074 t util_format_a1r5g5b5_uint_unpack_unsigned
00000000002120d0 00000000000000a4 t util_format_a1r5g5b5_uint_pack_unsigned
0000000000212180 0000000000000020 t util_format_a1r5g5b5_uint_fetch_unsigned
00000000002121a0 00000000000000c4 t util_format_a1r5g5b5_uint_pack_signed
0000000000212270 0000000000000074 t util_format_r5g5b5a1_uint_unpack_unsigned
00000000002122f0 00000000000000a4 t util_format_r5g5b5a1_uint_pack_unsigned
00000000002123a0 0000000000000020 t util_format_r5g5b5a1_uint_fetch_unsigned
00000000002123c0 00000000000000d0 t util_format_r5g5b5a1_uint_pack_signed
0000000000212490 0000000000000074 t util_format_b5g5r5a1_uint_unpack_unsigned
0000000000212510 00000000000000a4 t util_format_b5g5r5a1_uint_pack_unsigned
00000000002125c0 0000000000000020 t util_format_b5g5r5a1_uint_fetch_unsigned
00000000002125e0 00000000000000d0 t util_format_b5g5r5a1_uint_pack_signed
00000000002126b0 0000000000000098 t util_format_r8g8b8x8_snorm_unpack_rgba_float
0000000000212750 0000000000000158 t util_format_r8g8b8x8_snorm_pack_rgba_float
00000000002128b0 0000000000000048 t util_format_r8g8b8x8_snorm_fetch_rgba_float
0000000000212900 00000000000000ec t util_format_r8g8b8x8_snorm_unpack_rgba_8unorm
00000000002129f0 0000000000000078 t util_format_r8g8b8x8_snorm_pack_rgba_8unorm
0000000000212a70 0000000000000084 t util_format_r8g8b8x8_srgb_unpack_rgba_float
0000000000212b00 0000000000000038 t util_format_r8g8b8x8_srgb_fetch_rgba_float
0000000000212b40 000000000000008c t util_format_r8g8b8x8_srgb_unpack_rgba_8unorm
0000000000212bd0 0000000000000084 t util_format_r8g8b8x8_srgb_pack_rgba_8unorm
0000000000212c60 0000000000000070 t util_format_r8g8b8x8_uint_unpack_unsigned
0000000000212cd0 0000000000000094 t util_format_r8g8b8x8_uint_pack_unsigned
0000000000212d70 0000000000000024 t util_format_r8g8b8x8_uint_fetch_unsigned
0000000000212da0 00000000000000ac t util_format_r8g8b8x8_uint_pack_signed
0000000000212e50 0000000000000070 t util_format_r8g8b8x8_sint_unpack_signed
0000000000212ec0 00000000000000c0 t util_format_r8g8b8x8_sint_pack_signed
0000000000212f80 0000000000000024 t util_format_r8g8b8x8_sint_fetch_signed
0000000000212fb0 0000000000000094 t util_format_r8g8b8x8_sint_pack_unsigned
0000000000213050 0000000000000098 t util_format_b10g10r10x2_unorm_unpack_rgba_float
00000000002130f0 0000000000000158 t util_format_b10g10r10x2_unorm_pack_rgba_float
0000000000213250 0000000000000048 t util_format_b10g10r10x2_unorm_fetch_rgba_float
00000000002132a0 0000000000000078 t util_format_b10g10r10x2_unorm_unpack_rgba_8unorm
0000000000213320 00000000000000ac t util_format_b10g10r10x2_unorm_pack_rgba_8unorm
00000000002133d0 00000000000000a0 t util_format_r16g16b16x16_unorm_unpack_rgba_float
0000000000213470 000000000000015c t util_format_r16g16b16x16_unorm_pack_rgba_float
00000000002135d0 0000000000000050 t util_format_r16g16b16x16_unorm_fetch_rgba_float
0000000000213620 0000000000000078 t util_format_r16g16b16x16_unorm_unpack_rgba_8unorm
00000000002136a0 00000000000000ac t util_format_r16g16b16x16_unorm_pack_rgba_8unorm
0000000000213750 000000000000009c t util_format_r16g16b16x16_snorm_unpack_rgba_float
00000000002137f0 0000000000000164 t util_format_r16g16b16x16_snorm_pack_rgba_float
0000000000213960 000000000000004c t util_format_r16g16b16x16_snorm_fetch_rgba_float
00000000002139b0 0000000000000098 t util_format_r16g16b16x16_snorm_unpack_rgba_8unorm
0000000000213a50 00000000000000ac t util_format_r16g16b16x16_snorm_pack_rgba_8unorm
0000000000213b00 0000000000000118 t util_format_r16g16b16x16_float_unpack_rgba_float
0000000000213c20 00000000000000f4 t util_format_r16g16b16x16_float_fetch_rgba_float
0000000000213d20 0000000000000070 t util_format_r16g16b16x16_uint_unpack_unsigned
0000000000213d90 0000000000000090 t util_format_r16g16b16x16_uint_pack_unsigned
0000000000213e20 0000000000000024 t util_format_r16g16b16x16_uint_fetch_unsigned
0000000000213e50 00000000000000bc t util_format_r16g16b16x16_uint_pack_signed
0000000000213f10 0000000000000070 t util_format_r16g16b16x16_sint_unpack_signed
0000000000213f80 00000000000000c4 t util_format_r16g16b16x16_sint_pack_signed
0000000000214050 0000000000000024 t util_format_r16g16b16x16_sint_fetch_signed
0000000000214080 0000000000000090 t util_format_r16g16b16x16_sint_pack_unsigned
0000000000214110 0000000000000078 t util_format_r32g32b32x32_float_unpack_rgba_float
0000000000214190 0000000000000074 t util_format_r32g32b32x32_float_pack_rgba_float
0000000000214210 0000000000000024 t util_format_r32g32b32x32_float_fetch_rgba_float
0000000000214240 00000000000000a4 t util_format_r32g32b32x32_float_pack_rgba_8unorm
00000000002142f0 000000000000006c t util_format_r32g32b32x32_uint_unpack_unsigned
0000000000214360 0000000000000074 t util_format_r32g32b32x32_uint_pack_unsigned
00000000002143e0 000000000000001c t util_format_r32g32b32x32_uint_fetch_unsigned
0000000000214400 000000000000008c t util_format_r32g32b32x32_uint_pack_signed
0000000000214490 000000000000006c t util_format_r32g32b32x32_sint_unpack_signed
0000000000214500 0000000000000074 t util_format_r32g32b32x32_sint_pack_signed
0000000000214580 000000000000001c t util_format_r32g32b32x32_sint_fetch_signed
00000000002145a0 0000000000000094 t util_format_r32g32b32x32_sint_pack_unsigned
0000000000214640 0000000000000088 t util_format_r8a8_snorm_unpack_rgba_float
00000000002146d0 0000000000000038 t util_format_r8a8_snorm_fetch_rgba_float
0000000000214710 00000000000000c4 t util_format_r8a8_snorm_unpack_rgba_8unorm
00000000002147e0 000000000000008c t util_format_r16a16_unorm_unpack_rgba_float
0000000000214870 000000000000003c t util_format_r16a16_unorm_fetch_rgba_float
00000000002148b0 0000000000000074 t util_format_r16a16_unorm_unpack_rgba_8unorm
0000000000214930 000000000000008c t util_format_r16a16_snorm_unpack_rgba_float
00000000002149c0 000000000000003c t util_format_r16a16_snorm_fetch_rgba_float
0000000000214a00 000000000000008c t util_format_r16a16_snorm_unpack_rgba_8unorm
0000000000214a90 00000000000000e0 t util_format_r16a16_float_unpack_rgba_float
0000000000214b70 00000000000000a0 t util_format_r16a16_float_fetch_rgba_float
0000000000214c10 000000000000006c t util_format_r32a32_float_unpack_rgba_float
0000000000214c80 000000000000006c t util_format_r32a32_float_pack_rgba_float
0000000000214cf0 0000000000000018 t util_format_r32a32_float_fetch_rgba_float
0000000000214d10 000000000000008c t util_format_r32a32_float_pack_rgba_8unorm
0000000000214da0 000000000000006c t util_format_r8a8_uint_unpack_unsigned
0000000000214e10 000000000000001c t util_format_r8a8_uint_fetch_unsigned
0000000000214e30 000000000000006c t util_format_r8a8_sint_unpack_signed
0000000000214ea0 000000000000001c t util_format_r8a8_sint_fetch_signed
0000000000214ec0 000000000000006c t util_format_r16a16_uint_unpack_unsigned
0000000000214f30 000000000000001c t util_format_r16a16_uint_fetch_unsigned
0000000000214f50 000000000000006c t util_format_r16a16_sint_unpack_signed
0000000000214fc0 000000000000001c t util_format_r16a16_sint_fetch_signed
0000000000214fe0 0000000000000068 t util_format_r32a32_uint_unpack_unsigned
0000000000215050 000000000000006c t util_format_r32a32_uint_pack_unsigned
00000000002150c0 0000000000000018 t util_format_r32a32_uint_fetch_unsigned
00000000002150e0 000000000000007c t util_format_r32a32_uint_pack_signed
0000000000215160 0000000000000068 t util_format_r32a32_sint_unpack_signed
00000000002151d0 000000000000006c t util_format_r32a32_sint_pack_signed
0000000000215240 0000000000000018 t util_format_r32a32_sint_fetch_signed
0000000000215260 0000000000000084 t util_format_r32a32_sint_pack_unsigned
00000000002152f0 0000000000000074 t util_format_r10g10b10a2_uint_unpack_unsigned
0000000000215370 000000000000009c t util_format_r10g10b10a2_uint_pack_unsigned
0000000000215410 0000000000000020 t util_format_r10g10b10a2_uint_fetch_unsigned
0000000000215430 00000000000000c4 t util_format_r10g10b10a2_uint_pack_signed
0000000000215500 0000000000000074 t util_format_r10g10b10a2_sint_unpack_signed
0000000000215580 00000000000000e0 t util_format_r10g10b10a2_sint_pack_signed
0000000000215660 0000000000000020 t util_format_r10g10b10a2_sint_fetch_signed
0000000000215680 0000000000000094 t util_format_r10g10b10a2_sint_pack_unsigned
0000000000215720 000000000000009c t util_format_b5g6r5_srgb_unpack_rgba_float
00000000002157c0 0000000000000050 t util_format_b5g6r5_srgb_fetch_rgba_float
0000000000215810 00000000000000a4 t util_format_b5g6r5_srgb_unpack_rgba_8unorm
00000000002158c0 000000000000008c t util_format_b5g6r5_srgb_pack_rgba_8unorm
0000000000215950 0000000000000098 t util_format_g8r8_unorm_unpack_rgba_float
00000000002159f0 0000000000000040 t util_format_g8r8_unorm_fetch_rgba_float
0000000000215a30 0000000000000070 t util_format_g8r8_unorm_unpack_rgba_8unorm
0000000000215aa0 0000000000000058 t util_format_g8r8_unorm_pack_rgba_8unorm
0000000000215b00 0000000000000090 t util_format_g8r8_snorm_unpack_rgba_float
0000000000215b90 0000000000000108 t util_format_g8r8_snorm_pack_rgba_float
0000000000215ca0 0000000000000038 t util_format_g8r8_snorm_fetch_rgba_float
0000000000215ce0 00000000000000c4 t util_format_g8r8_snorm_unpack_rgba_8unorm
0000000000215db0 000000000000006c t util_format_g8r8_snorm_pack_rgba_8unorm
0000000000215e20 000000000000006c t util_format_g8r8_sint_unpack_signed
0000000000215e90 00000000000000a0 t util_format_g8r8_sint_pack_signed
0000000000215f30 000000000000001c t util_format_g8r8_sint_fetch_signed
0000000000215f50 0000000000000080 t util_format_g8r8_sint_pack_unsigned
0000000000215fd0 0000000000000094 t util_format_g16r16_unorm_unpack_rgba_float
0000000000216070 0000000000000104 t util_format_g16r16_unorm_pack_rgba_float
0000000000216180 000000000000003c t util_format_g16r16_unorm_fetch_rgba_float
00000000002161c0 0000000000000074 t util_format_g16r16_unorm_unpack_rgba_8unorm
0000000000216240 000000000000008c t util_format_g16r16_unorm_pack_rgba_8unorm
00000000002162d0 0000000000000094 t util_format_g16r16_snorm_unpack_rgba_float
0000000000216370 0000000000000114 t util_format_g16r16_snorm_pack_rgba_float
0000000000216490 000000000000003c t util_format_g16r16_snorm_fetch_rgba_float
00000000002164d0 000000000000008c t util_format_g16r16_snorm_unpack_rgba_8unorm
0000000000216560 000000000000008c t util_format_g16r16_snorm_pack_rgba_8unorm
00000000002165f0 00000000000000a0 t util_format_a8b8g8r8_snorm_unpack_rgba_float
0000000000216690 00000000000001b0 t util_format_a8b8g8r8_snorm_pack_rgba_float
0000000000216840 0000000000000050 t util_format_a8b8g8r8_snorm_fetch_rgba_float
0000000000216890 0000000000000114 t util_format_a8b8g8r8_snorm_unpack_rgba_8unorm
00000000002169b0 000000000000008c t util_format_a8b8g8r8_snorm_pack_rgba_8unorm
0000000000216a40 0000000000000074 t util_format_a8b8g8r8_sint_unpack_signed
0000000000216ac0 00000000000000f8 t util_format_a8b8g8r8_sint_pack_signed
0000000000216bc0 0000000000000020 t util_format_a8b8g8r8_sint_fetch_signed
0000000000216be0 00000000000000ac t util_format_a8b8g8r8_sint_pack_unsigned
0000000000216c90 000000000000009c t util_format_x8b8g8r8_snorm_unpack_rgba_float
0000000000216d30 0000000000000160 t util_format_x8b8g8r8_snorm_pack_rgba_float
0000000000216e90 0000000000000050 t util_format_x8b8g8r8_snorm_fetch_rgba_float
0000000000216ee0 00000000000000ec t util_format_x8b8g8r8_snorm_unpack_rgba_8unorm
0000000000216fd0 000000000000007c t util_format_x8b8g8r8_snorm_pack_rgba_8unorm
0000000000217050 0000000000000070 t util_format_x8b8g8r8_sint_unpack_signed
00000000002170c0 00000000000000c0 t util_format_x8b8g8r8_sint_pack_signed
0000000000217180 0000000000000024 t util_format_x8b8g8r8_sint_fetch_signed
00000000002171b0 0000000000000094 t util_format_x8b8g8r8_sint_pack_unsigned
0000000000217250 0000000000000040 t util_format_r64g64b64_float_fetch_rgba_float
0000000000217290 0000000000000090 t util_format_r64g64b64_float_pack_rgba_float
0000000000217320 000000000000009c t util_format_r64g64b64_float_unpack_rgba_float
00000000002173c0 00000000000000bc t util_format_r64g64b64_float_pack_rgba_8unorm
0000000000217480 000000000000018c t util_format_r64g64b64_float_unpack_rgba_8unorm
0000000000217610 0000000000000034 t util_format_r64g64b64a64_float_fetch_rgba_float
0000000000217650 0000000000000094 t util_format_r64g64b64a64_float_pack_rgba_float
00000000002176f0 0000000000000094 t util_format_r64g64b64a64_float_unpack_rgba_float
0000000000217790 00000000000000c4 t util_format_r64g64b64a64_float_pack_rgba_8unorm
0000000000217860 00000000000001d4 t util_format_r64g64b64a64_float_unpack_rgba_8unorm
0000000000217a40 000000000000002c t util_format_r32g32b32_float_fetch_rgba_float
0000000000217a70 0000000000000084 t util_format_r32g32b32_float_pack_rgba_float
0000000000217b00 0000000000000090 t util_format_r32g32b32_float_unpack_rgba_float
0000000000217b90 00000000000000b0 t util_format_r32g32b32_float_pack_rgba_8unorm
0000000000217c40 0000000000000058 t util_format_r32g32b32_unorm_fetch_rgba_float
0000000000217ca0 000000000000010c t util_format_r32g32b32_unorm_pack_rgba_float
0000000000217db0 00000000000000b4 t util_format_r32g32b32_unorm_unpack_rgba_float
0000000000217e70 00000000000000bc t util_format_r32g32b32_unorm_pack_rgba_8unorm
0000000000217f30 0000000000000098 t util_format_r32g32b32_unorm_unpack_rgba_8unorm
0000000000217fd0 0000000000000030 t util_format_r32g32b32_uscaled_fetch_rgba_float
0000000000218000 00000000000000e8 t util_format_r32g32b32_uscaled_pack_rgba_float
00000000002180f0 0000000000000098 t util_format_r32g32b32_uscaled_unpack_rgba_float
0000000000218190 00000000000000a4 t util_format_r32g32b32_uscaled_pack_rgba_8unorm
0000000000218240 00000000000000a4 t util_format_r32g32b32_uscaled_unpack_rgba_8unorm
00000000002182f0 0000000000000058 t util_format_r32g32b32_snorm_fetch_rgba_float
0000000000218350 0000000000000114 t util_format_r32g32b32_snorm_pack_rgba_float
0000000000218470 00000000000000b4 t util_format_r32g32b32_snorm_unpack_rgba_float
0000000000218530 00000000000000bc t util_format_r32g32b32_snorm_pack_rgba_8unorm
00000000002185f0 00000000000000b4 t util_format_r32g32b32_snorm_unpack_rgba_8unorm
00000000002186b0 0000000000000030 t util_format_r32g32b32_sscaled_fetch_rgba_float
00000000002186e0 00000000000000e8 t util_format_r32g32b32_sscaled_pack_rgba_float
00000000002187d0 0000000000000098 t util_format_r32g32b32_sscaled_unpack_rgba_float
0000000000218870 00000000000000a4 t util_format_r32g32b32_sscaled_pack_rgba_8unorm
0000000000218920 00000000000000a8 t util_format_r32g32b32_sscaled_unpack_rgba_8unorm
00000000002189d0 0000000000000114 t util_format_r16g16b16_float_fetch_rgba_float
0000000000218af0 0000000000000134 t util_format_r16g16b16_float_unpack_rgba_float
0000000000218c30 0000000000000060 t util_format_r16g16b16_unorm_fetch_rgba_float
0000000000218c90 0000000000000174 t util_format_r16g16b16_unorm_pack_rgba_float
0000000000218e10 00000000000000c0 t util_format_r16g16b16_unorm_unpack_rgba_float
0000000000218ed0 00000000000000c0 t util_format_r16g16b16_unorm_pack_rgba_8unorm
0000000000218f90 0000000000000098 t util_format_r16g16b16_unorm_unpack_rgba_8unorm
0000000000219030 0000000000000048 t util_format_r16g16b16_uscaled_fetch_rgba_float
0000000000219080 00000000000000f4 t util_format_r16g16b16_uscaled_pack_rgba_float
0000000000219180 00000000000000ac t util_format_r16g16b16_uscaled_unpack_rgba_float
0000000000219230 00000000000000a8 t util_format_r16g16b16_uscaled_pack_rgba_8unorm
00000000002192e0 00000000000000a4 t util_format_r16g16b16_uscaled_unpack_rgba_8unorm
0000000000219390 0000000000000058 t util_format_r16g16b16_snorm_fetch_rgba_float
00000000002193f0 0000000000000174 t util_format_r16g16b16_snorm_pack_rgba_float
0000000000219570 00000000000000b8 t util_format_r16g16b16_snorm_unpack_rgba_float
0000000000219630 00000000000000c0 t util_format_r16g16b16_snorm_pack_rgba_8unorm
00000000002196f0 00000000000000b4 t util_format_r16g16b16_snorm_unpack_rgba_8unorm
00000000002197b0 0000000000000040 t util_format_r16g16b16_sscaled_fetch_rgba_float
00000000002197f0 00000000000000fc t util_format_r16g16b16_sscaled_pack_rgba_float
00000000002198f0 00000000000000a4 t util_format_r16g16b16_sscaled_unpack_rgba_float
00000000002199a0 00000000000000a8 t util_format_r16g16b16_sscaled_pack_rgba_8unorm
0000000000219a50 00000000000000b0 t util_format_r16g16b16_sscaled_unpack_rgba_8unorm
0000000000219b00 0000000000000054 t util_format_r32g32b32_fixed_fetch_rgba_float
0000000000219b60 0000000000000108 t util_format_r32g32b32_fixed_pack_rgba_float
0000000000219c70 00000000000000b4 t util_format_r32g32b32_fixed_unpack_rgba_float
0000000000219d30 00000000000000c4 t util_format_r32g32b32_fixed_pack_rgba_8unorm
0000000000219e00 0000000000000190 t util_format_r32g32b32_fixed_unpack_rgba_8unorm
0000000000219f90 000000000000002c t util_format_r16g16b16_uint_fetch_unsigned
0000000000219fc0 00000000000000d4 t util_format_r16g16b16_uint_pack_signed
000000000021a0a0 00000000000000a0 t util_format_r16g16b16_uint_pack_unsigned
000000000021a140 0000000000000094 t util_format_r16g16b16_uint_unpack_unsigned
000000000021a1e0 000000000000002c t util_format_r16g16b16_sint_fetch_signed
000000000021a210 00000000000000d4 t util_format_r16g16b16_sint_pack_signed
000000000021a2f0 0000000000000094 t util_format_r16g16b16_sint_unpack_signed
000000000021a390 00000000000000a0 t util_format_r16g16b16_sint_pack_unsigned
000000000021a430 0000000000000020 t util_format_r32g32b32_uint_fetch_unsigned
000000000021a450 0000000000000094 t util_format_r32g32b32_uint_pack_signed
000000000021a4f0 000000000000007c t util_format_r32g32b32_uint_pack_unsigned
000000000021a570 0000000000000088 t util_format_r32g32b32_uint_unpack_unsigned
000000000021a600 0000000000000020 t util_format_r32g32b32_sint_fetch_signed
000000000021a620 000000000000007c t util_format_r32g32b32_sint_pack_signed
000000000021a6a0 0000000000000088 t util_format_r32g32b32_sint_unpack_signed
000000000021a730 000000000000009c t util_format_r32g32b32_sint_pack_unsigned
000000000021a7d0 000000000000001c t util_format_r8_uscaled_fetch_rgba_float
000000000021a7f0 0000000000000020 t util_format_a1b5g5r5_uint_fetch_unsigned
000000000021a810 0000000000000064 t util_format_r32_sscaled_pack_rgba_8unorm
000000000021a880 000000000000006c t util_format_r16_sscaled_pack_rgba_8unorm
000000000021a8f0 0000000000000098 t util_format_l8_unorm_pack_rgba_float
000000000021a990 0000000000000098 t util_format_a8_unorm_pack_rgba_float
000000000021aa30 00000000000000a8 t util_format_r32_float_unpack_rgba_8unorm
000000000021aae0 00000000000000ac t util_format_a32_float_unpack_rgba_8unorm
000000000021ab90 00000000000000a8 t util_format_l32_float_unpack_rgba_8unorm
000000000021ac40 00000000000000a8 t util_format_i32_float_unpack_rgba_8unorm
000000000021acf0 0000000000000068 t util_format_r8_srgb_pack_rgba_8unorm
000000000021ad60 00000000000000e0 t util_format_r32g32_float_unpack_rgba_8unorm
000000000021ae40 00000000000000e0 t util_format_l32a32_float_unpack_rgba_8unorm
000000000021af20 00000000000000e0 t util_format_r32a32_float_unpack_rgba_8unorm
000000000021b000 00000000000000c8 t util_format_r8g8_unorm_pack_rgba_float
000000000021b0d0 00000000000000c8 t util_format_g8r8_unorm_pack_rgba_float
000000000021b1a0 00000000000000c8 t util_format_l8a8_unorm_pack_rgba_float
000000000021b270 00000000000000c8 t util_format_a8r8_unorm_pack_rgba_float
000000000021b340 00000000000000e8 t util_format_a16_float_unpack_rgba_8unorm
000000000021b430 00000000000000e8 t util_format_r16_float_unpack_rgba_8unorm
000000000021b520 00000000000000e8 t util_format_i16_float_unpack_rgba_8unorm
000000000021b610 00000000000000e8 t util_format_l16_float_unpack_rgba_8unorm
000000000021b700 0000000000000110 t util_format_r32g32b32x32_float_unpack_rgba_8unorm
000000000021b810 000000000000005c t util_format_r8_unorm_pack_rgba_8unorm
000000000021b870 000000000000005c t util_format_i8_unorm_pack_rgba_8unorm
000000000021b8d0 00000000000000fc t util_format_r8g8b8_unorm_pack_rgba_float
000000000021b9d0 00000000000000fc t util_format_b8g8r8_unorm_pack_rgba_float
000000000021bad0 00000000000000f8 t util_format_r8g8b8x8_unorm_pack_rgba_float
000000000021bbd0 00000000000000f8 t util_format_b8g8r8x8_unorm_pack_rgba_float
000000000021bcd0 0000000000000120 t util_format_r32g32b32_float_unpack_rgba_8unorm
000000000021bdf0 00000000000000f4 t util_format_x8b8g8r8_unorm_pack_rgba_float
000000000021bef0 00000000000000f4 t util_format_x8r8g8b8_unorm_pack_rgba_float
000000000021bff0 0000000000000140 t util_format_r32g32b32a32_float_unpack_rgba_8unorm
000000000021c130 0000000000000068 t util_format_r8a8_unorm_pack_rgba_8unorm
000000000021c1a0 0000000000000144 t util_format_l16a16_float_unpack_rgba_8unorm
000000000021c2f0 0000000000000144 t util_format_r16a16_float_unpack_rgba_8unorm
000000000021c440 0000000000000144 t util_format_r16g16_float_unpack_rgba_8unorm
000000000021c590 0000000000000124 t util_format_a8r8g8b8_unorm_pack_rgba_float
000000000021c6c0 0000000000000124 t util_format_a8b8g8r8_unorm_pack_rgba_float
000000000021c7f0 0000000000000124 t util_format_z24_unorm_s8_uint_as_r8g8b8a8_pack_rgba_float
000000000021c920 0000000000000124 t util_format_b8g8r8a8_unorm_pack_rgba_float
000000000021ca50 0000000000000148 t util_format_r8sg8sb8ux8u_norm_pack_rgba_float
000000000021cba0 0000000000000054 t util_format_r8g8b8a8_unorm_fetch_rgba_float
000000000021cc00 00000000000001a4 t util_format_r16g16b16x16_float_unpack_rgba_8unorm
000000000021cdb0 0000000000000060 t util_format_i8_snorm_pack_rgba_8unorm
000000000021ce10 000000000000006c t util_format_r8_uscaled_pack_rgba_8unorm
000000000021ce80 0000000000000060 t util_format_r8_snorm_pack_rgba_8unorm
000000000021cee0 000000000000006c t util_format_r8_sscaled_pack_rgba_8unorm
000000000021cf50 00000000000001c0 t util_format_r16g16b16_float_unpack_rgba_8unorm
000000000021d110 0000000000000200 t util_format_r16g16b16a16_float_unpack_rgba_8unorm
000000000021d310 0000000000000074 t util_format_r8_uscaled_unpack_rgba_8unorm
000000000021d390 000000000000006c t util_format_r4a4_unorm_pack_rgba_8unorm
000000000021d400 0000000000000070 t util_format_r8a8_snorm_pack_rgba_8unorm
000000000021d470 0000000000000054 t util_format_r32_float_pack_rgba_float
000000000021d4d0 0000000000000064 t util_format_i32_float_pack_rgba_8unorm
000000000021d540 0000000000000054 t util_format_i32_sint_pack_signed
000000000021d5a0 0000000000000054 t util_format_l32_sint_pack_signed
000000000021d600 0000000000000054 t util_format_i32_uint_pack_unsigned
000000000021d660 0000000000000054 t util_format_l32_uint_pack_unsigned
000000000021d6c0 0000000000000054 t util_format_i32_float_pack_rgba_float
000000000021d720 0000000000000074 t util_format_i16_unorm_pack_rgba_8unorm
000000000021d7a0 0000000000000074 t util_format_r16_unorm_pack_rgba_8unorm
000000000021d820 0000000000000074 t util_format_r16_snorm_pack_rgba_8unorm
000000000021d8a0 0000000000000074 t util_format_i16_snorm_pack_rgba_8unorm
000000000021d920 0000000000000064 t util_format_r32_float_pack_rgba_8unorm
000000000021d990 0000000000000078 t util_format_r8g8b8a8_unorm_unpack_rgba_8unorm
000000000021da10 000000000000006c t util_format_r8_uscaled_unpack_rgba_float
000000000021da80 000000000000005c t util_format_i32_uint_pack_signed
000000000021dae0 000000000000005c t util_format_l32_uint_pack_signed
000000000021db40 000000000000005c t util_format_i32_sint_pack_unsigned
000000000021dba0 000000000000005c t util_format_l32_sint_pack_unsigned
000000000021dc00 0000000000000088 t util_format_r8_uscaled_pack_rgba_float
000000000021dc90 000000000000008c t util_format_r16a16_unorm_pack_rgba_8unorm
000000000021dd20 000000000000008c t util_format_r16a16_snorm_pack_rgba_8unorm
000000000021ddb0 000000000000006c t util_format_i16_sint_pack_unsigned
000000000021de20 000000000000006c t util_format_l16_sint_pack_unsigned
000000000021de90 0000000000000064 t util_format_i8_uint_pack_unsigned
000000000021df00 0000000000000064 t util_format_l8_uint_pack_unsigned
000000000021df70 0000000000000064 t util_format_i8_sint_pack_unsigned
000000000021dfe0 0000000000000064 t util_format_l8_sint_pack_unsigned
000000000021e050 000000000000006c t util_format_i16_uint_pack_unsigned
000000000021e0c0 000000000000006c t util_format_l16_uint_pack_unsigned
000000000021e130 0000000000000084 t util_format_r8a8_sint_pack_unsigned
000000000021e1c0 0000000000000088 t util_format_r16a16_uint_pack_unsigned
000000000021e250 0000000000000088 t util_format_r16a16_sint_pack_unsigned
000000000021e2e0 0000000000000044 t util_format_r8g8b8a8_unorm_pack_rgba_8unorm
000000000021e330 0000000000000084 t util_format_r8a8_uint_pack_unsigned
000000000021e3c0 0000000000000074 t util_format_a1b5g5r5_uint_unpack_unsigned
000000000021e440 0000000000000080 t util_format_l16_sint_pack_signed
000000000021e4c0 0000000000000078 t util_format_i8_uint_pack_signed
000000000021e540 0000000000000078 t util_format_l8_uint_pack_signed
000000000021e5c0 0000000000000078 t util_format_i8_sint_pack_signed
000000000021e640 0000000000000080 t util_format_i16_sint_pack_signed
000000000021e6c0 0000000000000078 t util_format_l16_uint_pack_signed
000000000021e740 0000000000000078 t util_format_l8_sint_pack_signed
000000000021e7c0 0000000000000078 t util_format_i16_uint_pack_signed
000000000021e840 0000000000000094 t util_format_r16a16_uint_pack_signed
000000000021e8e0 0000000000000098 t util_format_r8a8_uint_pack_signed
000000000021e980 0000000000000098 t util_format_r8_unorm_pack_rgba_float
000000000021ea20 0000000000000098 t util_format_i8_unorm_pack_rgba_float
000000000021eac0 00000000000000a0 t util_format_r8a8_sint_pack_signed
000000000021eb60 00000000000000a4 t util_format_r16a16_sint_pack_signed
000000000021ec10 00000000000000a0 t util_format_r10g10b10a2_sscaled_pack_rgba_8unorm
000000000021ecb0 00000000000000a4 t util_format_b10g10r10a2_sscaled_pack_rgba_8unorm
000000000021ed60 00000000000000c8 t util_format_r8a8_unorm_pack_rgba_float
000000000021ee30 00000000000000a4 t util_format_r8g8b8a8_unorm_unpack_rgba_float
000000000021eee0 00000000000000d0 t util_format_r16_float_pack_rgba_8unorm
000000000021efb0 00000000000000d0 t util_format_a16_float_pack_rgba_8unorm
000000000021f080 00000000000000b4 t util_format_l16_float_pack_rgba_float
000000000021f140 00000000000000d0 t util_format_l16_float_pack_rgba_8unorm
000000000021f210 00000000000000b4 t util_format_r16_float_pack_rgba_float
000000000021f2d0 00000000000000b4 t util_format_a16_float_pack_rgba_float
000000000021f390 00000000000000d0 t util_format_i16_float_pack_rgba_8unorm
000000000021f460 00000000000000b4 t util_format_i16_float_pack_rgba_float
000000000021f520 00000000000000c8 t util_format_l8_srgb_pack_rgba_float
000000000021f5f0 00000000000000c8 t util_format_r8_srgb_pack_rgba_float
000000000021f6c0 00000000000000a4 t util_format_a1b5g5r5_uint_pack_unsigned
000000000021f770 00000000000000b8 t util_format_i8_snorm_pack_rgba_float
000000000021f830 00000000000000b8 t util_format_i16_unorm_pack_rgba_float
000000000021f8f0 00000000000000b8 t util_format_r8_snorm_pack_rgba_float
000000000021f9b0 00000000000000c0 t util_format_i16_snorm_pack_rgba_float
000000000021fa70 00000000000000b8 t util_format_r16_unorm_pack_rgba_float
000000000021fb30 00000000000000c0 t util_format_r16_snorm_pack_rgba_float
000000000021fbf0 0000000000000108 t util_format_r16a16_float_pack_rgba_float
000000000021fd00 0000000000000108 t util_format_l16a16_float_pack_rgba_float
000000000021fe10 0000000000000108 t util_format_r16g16_float_pack_rgba_float
000000000021ff20 0000000000000108 t util_format_l8a8_srgb_pack_rgba_float
0000000000220030 0000000000000128 t util_format_l16a16_float_pack_rgba_8unorm
0000000000220160 0000000000000128 t util_format_r16g16_float_pack_rgba_8unorm
0000000000220290 0000000000000128 t util_format_r16a16_float_pack_rgba_8unorm
00000000002203c0 0000000000000120 t util_format_r8g8_srgb_pack_rgba_float
00000000002204e0 000000000000019c t util_format_r16g16b16x16_float_pack_rgba_float
0000000000220680 0000000000000170 t util_format_r16g16b16_float_pack_rgba_float
00000000002207f0 00000000000001c8 t util_format_r16g16b16x16_float_pack_rgba_8unorm
00000000002209c0 00000000000001a0 t util_format_r16g16b16_float_pack_rgba_8unorm
0000000000220b60 00000000000001dc t util_format_r16g16b16a16_float_pack_rgba_8unorm
0000000000220d40 00000000000001b8 t util_format_r8g8b8a8_srgb_pack_rgba_float
0000000000220f00 000000000000019c t util_format_r16g16b16a16_float_pack_rgba_float
00000000002210a0 000000000000017c t util_format_r8g8b8_srgb_pack_rgba_float
0000000000221220 000000000000017c t util_format_b8g8r8_srgb_pack_rgba_float
00000000002213a0 000000000000017c t util_format_r8g8b8x8_srgb_pack_rgba_float
0000000000221520 000000000000017c t util_format_b8g8r8x8_srgb_pack_rgba_float
00000000002216a0 000000000000017c t util_format_x8b8g8r8_srgb_pack_rgba_float
0000000000221820 000000000000017c t util_format_x8r8g8b8_srgb_pack_rgba_float
00000000002219a0 0000000000000178 t util_format_b5g6r5_srgb_pack_rgba_float
0000000000221b20 00000000000001bc t util_format_a8r8g8b8_srgb_pack_rgba_float
0000000000221ce0 00000000000001bc t util_format_a8b8g8r8_srgb_pack_rgba_float
0000000000221ea0 00000000000001b8 t util_format_b8g8r8a8_srgb_pack_rgba_float
0000000000222060 00000000000000c4 t util_format_a1b5g5r5_uint_pack_signed
0000000000222130 0000000000000114 t util_format_r16a16_snorm_pack_rgba_float
0000000000222250 0000000000000108 t util_format_r8a8_snorm_pack_rgba_float
0000000000222360 0000000000000104 t util_format_r16a16_unorm_pack_rgba_float
0000000000222470 0000000000000100 t util_format_r4a4_unorm_pack_rgba_float
0000000000222570 0000000000000124 t util_format_r8g8b8a8_unorm_pack_rgba_float
00000000002226a0 00000000000011d4 t util_format_description
0000000000223880 0000000000000078 t _eglGrowArray
0000000000223900 0000000000000078 t _eglCreateArray
0000000000223980 0000000000000068 t _eglDestroyArray
00000000002239f0 0000000000000050 t _eglAppendArray
0000000000223a40 0000000000000044 t _eglFindArray
0000000000223a90 00000000000000e0 t _eglFilterArray
0000000000223b70 00000000000000c0 t _eglFlattenArray
0000000000223c30 0000000000000014 t one_time_fini
0000000000223c50 0000000000000034 t generic_nop
0000000000223c90 0000000000000128 t check_compatible
0000000000223dc0 00000000000000a4 t _mesa_initialize
0000000000223e70 00000000000003d8 t _mesa_init_constants
0000000000224250 0000000000000078 t _mesa_alloc_dispatch_table
00000000002242d0 0000000000000038 t _mesa_initialize_dispatch_tables
0000000000224310 00000000000006c8 t _mesa_initialize_context
00000000002249e0 0000000000000344 t _mesa_copy_context
0000000000224d30 000000000000048c t _mesa_make_current
00000000002251c0 00000000000003cc t _mesa_free_context_data
0000000000225590 000000000000002c t _mesa_destroy_context
00000000002255c0 00000000000000b8 t _mesa_share_state
0000000000225680 0000000000000004 t _mesa_get_current_context
0000000000225690 0000000000000088 T _mesa_Finish
0000000000225720 0000000000000088 T _mesa_Flush
00000000002257b0 0000000000000004 t _mesa_get_cpu_features
00000000002257c0 00000000000000a4 t _mesa_print_info
0000000000225870 0000000000000024 t _mesa_init_debug
00000000002258a0 0000000000000170 t validate_params
0000000000225a10 000000000000011c t _mesa_lock_debug_state
0000000000225b30 00000000000000a0 t validate_length
0000000000225bd0 0000000000000104 t debug_message_store
0000000000225ce0 00000000000000bc t debug_clear_group
0000000000225da0 000000000000027c t debug_make_group_writable.isra.0
0000000000226020 0000000000000214 t log_msg_locked_and_unlock
0000000000226240 000000000000005c t _mesa_debug_get_id
00000000002262a0 0000000000000088 t _mesa_debug_is_message_enabled
0000000000226330 0000000000000090 t _mesa_set_debug_state_int
00000000002263c0 00000000000000d0 t _mesa_get_debug_state_int
0000000000226490 0000000000000070 t _mesa_get_debug_state_ptr
0000000000226500 0000000000000088 t _mesa_log_msg
0000000000226590 0000000000000250 T _mesa_DebugMessageInsert
00000000002267e0 00000000000002ac T _mesa_GetDebugMessageLog
0000000000226a90 000000000000058c T _mesa_DebugMessageControl
0000000000227020 0000000000000064 T _mesa_DebugMessageCallback
0000000000227090 00000000000001e0 T _mesa_PushDebugGroup
0000000000227270 0000000000000144 T _mesa_PopDebugGroup
00000000002273c0 0000000000000010 t _mesa_init_debug_output
00000000002273d0 000000000000010c t _mesa_free_errors_data
00000000002274e0 000000000000009c T _mesa_StringMarkerGREMEDY
0000000000227580 0000000000000050 t _mesa_ClearDepth
00000000002275d0 0000000000000054 t _mesa_ClearDepthf
0000000000227630 00000000000000b8 T _mesa_DepthFunc_no_error
00000000002276f0 00000000000000e4 t _mesa_DepthFunc
00000000002277e0 00000000000000b8 t _mesa_DepthMask
00000000002278a0 000000000000010c t _mesa_DepthBoundsEXT
00000000002279b0 0000000000000024 t _mesa_init_depth
00000000002279e0 0000000000000038 t check_atlas_for_deleted_list
0000000000227a20 000000000000010c t dlist_alloc
0000000000227b30 00000000000000b8 t save_SetFragmentShaderConstantATI
0000000000227bf0 0000000000000084 t save_BindFragmentShaderATI
0000000000227c80 000000000000002c t save_MultiDrawElementsIndirect
0000000000227cb0 000000000000002c t save_MultiDrawArraysIndirect
0000000000227ce0 000000000000002c t save_DrawElementsIndirect
0000000000227d10 000000000000002c t save_DrawArraysIndirect
0000000000227d40 000000000000002c t save_DrawElementsInstancedBaseVertexBaseInstance
0000000000227d70 000000000000002c t save_DrawElementsInstancedBaseInstance
0000000000227da0 000000000000002c t save_DrawArraysInstancedBaseInstance
0000000000227dd0 000000000000002c t save_DrawElementsInstancedBaseVertexARB
0000000000227e00 000000000000002c t save_DrawElementsInstancedARB
0000000000227e30 000000000000002c t save_DrawArraysInstancedARB
0000000000227e60 000000000000002c t save_DispatchComputeIndirect
0000000000227e90 000000000000002c t save_NewList
0000000000227ec0 0000000000000180 t save_VertexAttrib4fvNV
0000000000228040 00000000000001bc t save_VertexAttribL1ui64vARB
0000000000228200 00000000000001b0 t save_VertexAttribL1ui64ARB
00000000002283b0 0000000000000220 t save_VertexAttribL2dv
00000000002285d0 00000000000001d8 t save_VertexAttribL1dv
00000000002287b0 0000000000000220 t save_VertexAttribL2d
00000000002289d0 00000000000001d8 t save_VertexAttribL1d
0000000000228bb0 00000000000001d4 t save_MultiTexCoordP4uiv
0000000000228d90 00000000000001d0 t save_MultiTexCoordP4ui
0000000000228f60 00000000000001b8 t save_MultiTexCoordP3uiv
0000000000229120 00000000000001b4 t save_MultiTexCoordP3ui
00000000002292e0 000000000000017c t save_MultiTexCoordP2uiv
0000000000229460 0000000000000178 t save_MultiTexCoordP2ui
00000000002295e0 0000000000000158 t save_MultiTexCoordP1uiv
0000000000229740 0000000000000154 t save_MultiTexCoordP1ui
00000000002298a0 00000000000001b4 t save_TexCoordP4uiv
0000000000229a60 00000000000001b0 t save_TexCoordP4ui
0000000000229c10 0000000000000198 t save_TexCoordP3uiv
0000000000229db0 0000000000000194 t save_TexCoordP3ui
0000000000229f50 000000000000015c t save_TexCoordP2uiv
000000000022a0b0 0000000000000158 t save_TexCoordP2ui
000000000022a210 0000000000000138 t save_TexCoordP1uiv
000000000022a350 0000000000000134 t save_TexCoordP1ui
000000000022a490 00000000000001b0 t save_VertexP4uiv
000000000022a640 00000000000001ac t save_VertexP4ui
000000000022a7f0 0000000000000194 t save_VertexP3uiv
000000000022a990 0000000000000190 t save_VertexP3ui
000000000022ab20 0000000000000158 t save_VertexP2uiv
000000000022ac80 0000000000000154 t save_VertexP2ui
000000000022ade0 0000000000000230 t save_VertexAttribI4uiv
000000000022b010 000000000000020c t save_VertexAttribI3uiv
000000000022b220 00000000000001fc t save_VertexAttribI2uiv
000000000022b420 0000000000000228 t save_VertexAttribI4ui
000000000022b650 0000000000000204 t save_VertexAttribI3ui
000000000022b860 00000000000001f4 t save_VertexAttribI2ui
000000000022ba60 00000000000001c8 t save_VertexAttribI1ui
000000000022bc30 0000000000000238 t save_VertexAttribI4iv
000000000022be70 0000000000000230 t save_VertexAttribI3iv
000000000022c0a0 00000000000001f4 t save_VertexAttribI2iv
000000000022c2a0 0000000000000228 t save_VertexAttribI4i
000000000022c4d0 0000000000000204 t save_VertexAttribI3i
000000000022c6e0 00000000000001f4 t save_VertexAttribI2i
000000000022c8e0 00000000000001c8 t save_VertexAttribI1i
000000000022cab0 000000000000023c t save_VertexAttrib4fvARB
000000000022ccf0 000000000000023c t save_VertexAttrib4fARB
000000000022cf30 0000000000000224 t save_VertexAttrib3fvARB
000000000022d160 000000000000021c t save_VertexAttrib3fARB
000000000022d380 0000000000000214 t save_VertexAttrib2fvARB
000000000022d5a0 0000000000000214 t save_VertexAttrib2fARB
000000000022d7c0 00000000000001e8 t save_VertexAttrib1fvARB
000000000022d9b0 00000000000001e0 t save_VertexAttrib1fARB
000000000022db90 000000000000009c t save_EvalPoint2
000000000022dc30 0000000000000088 t save_EvalPoint1
000000000022dcc0 000000000000009c t save_EvalCoord2f
000000000022dd60 0000000000000008 t save_EvalCoord2fv
000000000022dd70 0000000000000094 t save_EvalCoord1f
000000000022de10 0000000000000008 t save_EvalCoord1fv
000000000022de20 0000000000000080 t save_End
000000000022dea0 0000000000000278 t save_VertexAttribL4dv
000000000022e120 000000000000026c t save_VertexAttribL3dv
000000000022e390 0000000000000278 t save_VertexAttribL4d
000000000022e610 0000000000000268 t save_VertexAttribL3d
000000000022e880 0000000000000178 t unpack_image.part.0
000000000022ea00 00000000000000dc t save_TexCoord1f
000000000022eae0 00000000000000dc t save_FogCoordfEXT
000000000022ebc0 00000000000000dc t save_Indexf
000000000022eca0 00000000000000e0 t save_TexCoord1fv
000000000022ed80 00000000000000e0 t save_Indexfv
000000000022ee60 00000000000000e0 t save_EdgeFlag
000000000022ef40 00000000000000e0 t save_FogCoordfvEXT
000000000022f020 00000000000000e8 t save_Vertex2f
000000000022f110 00000000000000ec t save_TexCoord2f
000000000022f200 00000000000000ec t save_TexCoord2fv
000000000022f2f0 0000000000000114 t save_TexCoord3f
000000000022f410 00000000000000e8 t save_Vertex2fv
000000000022f500 0000000000000110 t save_Vertex3f
000000000022f610 0000000000000114 t save_SecondaryColor3fEXT
000000000022f730 0000000000000114 t save_Color3f
000000000022f850 0000000000000114 t save_Normal3f
000000000022f970 0000000000000120 t save_TexCoord4f
000000000022fa90 0000000000000120 t save_Color4f
000000000022fbb0 000000000000011c t save_Vertex4f
000000000022fcd0 0000000000000114 t save_Color3fv
000000000022fdf0 0000000000000110 t save_Vertex3fv
000000000022ff00 0000000000000114 t save_Normal3fv
0000000000230020 0000000000000100 t save_MultiTexCoord1f
0000000000230120 0000000000000114 t save_SecondaryColor3fvEXT
0000000000230240 0000000000000114 t save_TexCoord3fv
0000000000230360 0000000000000100 t save_MultiTexCoord1fv
0000000000230460 0000000000000110 t save_MultiTexCoord2f
0000000000230570 0000000000000118 t save_Vertex4fv
0000000000230690 000000000000011c t save_Color4fv
00000000002307b0 000000000000011c t save_TexCoord4fv
00000000002308d0 000000000000010c t save_MultiTexCoord2fv
00000000002309e0 0000000000000138 t save_MultiTexCoord3f
0000000000230b20 0000000000000144 t save_MultiTexCoord4f
0000000000230c70 0000000000000134 t save_MultiTexCoord3fv
0000000000230db0 000000000000013c t save_MultiTexCoord4fv
0000000000230ef0 000000000000005c t execute_list
0000000000230f50 0000000000004ba8 t execute_list.part.0
0000000000235b00 0000000000000144 t save_VertexAttrib1fNV
0000000000235c50 0000000000000144 t save_VertexAttrib1fvNV
0000000000235da0 0000000000000154 t save_VertexAttrib2fNV
0000000000235f00 0000000000000150 t save_VertexAttrib2fvNV
0000000000236050 000000000000017c t save_VertexAttrib3fNV
00000000002361d0 0000000000000178 t save_VertexAttrib3fvNV
0000000000236350 0000000000000188 t save_VertexAttrib4fNV
00000000002364e0 000000000000017c t r11g11b10f_to_float3.constprop.0
0000000000236660 00000000000003f0 t save_SecondaryColorP3ui
0000000000236a50 00000000000003f0 t save_ColorP3ui
0000000000236e40 00000000000003f0 t save_NormalP3ui
0000000000237230 00000000000003f8 t save_SecondaryColorP3uiv
0000000000237630 00000000000003f8 t save_NormalP3uiv
0000000000237a30 00000000000003f8 t save_ColorP3uiv
0000000000237e30 00000000000004c4 t save_ColorP4ui
0000000000238300 00000000000004c8 t save_ColorP4uiv
00000000002387d0 0000000000000150 t save_CallLists
0000000000238920 0000000000000954 t save_VertexAttribP4ui
0000000000239280 000000000000095c t save_VertexAttribP4uiv
0000000000239be0 00000000000003e8 t save_VertexAttribP1ui
0000000000239fd0 00000000000003fc t save_VertexAttribP1uiv
000000000023a3d0 000000000000070c t save_VertexAttribP2ui
000000000023aae0 00000000000006f0 t save_VertexAttribP2uiv
000000000023b1d0 0000000000000a90 t save_VertexAttribP3uiv
000000000023bc60 0000000000000a90 t save_VertexAttribP3ui
000000000023c6f0 000000000000003c t _mesa_delete_bitmap_atlas
000000000023c730 000000000000000c t _mesa_lookup_list
000000000023c740 0000000000000410 t _mesa_delete_list
000000000023cb50 00000000000000a4 t destroy_list
000000000023cc00 0000000000000024 t _mesa_dlist_alloc_aligned
000000000023cc30 0000000000000050 t _mesa_dlist_alloc_opcode
000000000023cc80 0000000000000088 t _mesa_compile_error
000000000023cd10 0000000000000128 t save_NamedProgramLocalParameter4fEXT
000000000023ce40 000000000000000c t save_NamedProgramLocalParameter4fvEXT
000000000023ce50 000000000000001c t save_NamedProgramLocalParameter4dvEXT
000000000023ce70 0000000000000014 t save_NamedProgramLocalParameter4dEXT
000000000023ce90 0000000000000170 t save_NamedProgramStringEXT
000000000023d000 0000000000000218 t save_CompressedMultiTexSubImage3DEXT
000000000023d220 00000000000001f0 t save_CompressedMultiTexSubImage2DEXT
000000000023d410 00000000000001c4 t save_CompressedMultiTexSubImage1DEXT
000000000023d5e0 0000000000000284 t save_CompressedMultiTexImage3DEXT
000000000023d870 0000000000000264 t save_CompressedMultiTexImage2DEXT
000000000023dae0 0000000000000250 t save_CompressedMultiTexImage1DEXT
000000000023dd30 0000000000000218 t save_CompressedTextureSubImage3DEXT
000000000023df50 00000000000001f0 t save_CompressedTextureSubImage2DEXT
000000000023e140 00000000000001c4 t save_CompressedTextureSubImage1DEXT
000000000023e310 0000000000000284 t save_CompressedTextureImage3DEXT
000000000023e5a0 0000000000000264 t save_CompressedTextureImage2DEXT
000000000023e810 0000000000000250 t save_CompressedTextureImage1DEXT
000000000023ea60 0000000000000148 t save_MultiTexEnvfvEXT
000000000023ebb0 00000000000000c4 t save_MultiTexEnvivEXT
000000000023ec80 000000000000002c t save_MultiTexEnviEXT
000000000023ecb0 0000000000000024 t save_MultiTexEnvfEXT
000000000023ece0 0000000000000160 t save_CopyMultiTexSubImage3DEXT
000000000023ee40 000000000000014c t save_CopyMultiTexSubImage2DEXT
000000000023ef90 0000000000000128 t save_CopyMultiTexSubImage1DEXT
000000000023f0c0 000000000000014c t save_CopyMultiTexImage2DEXT
000000000023f210 000000000000013c t save_CopyMultiTexImage1DEXT
000000000023f350 00000000000001f8 t save_MultiTexSubImage3DEXT
000000000023f550 00000000000001e4 t save_MultiTexSubImage2DEXT
000000000023f740 00000000000001b4 t save_MultiTexSubImage1DEXT
000000000023f900 0000000000000264 t save_MultiTexImage3DEXT
000000000023fb70 0000000000000258 t save_MultiTexImage2DEXT
000000000023fdd0 0000000000000240 t save_MultiTexImage1DEXT
0000000000240010 000000000000011c t save_MultiTexParameterfvEXT
0000000000240130 0000000000000024 t save_MultiTexParameterfEXT
0000000000240160 000000000000011c t save_MultiTexParameterIuivEXT
0000000000240280 000000000000011c t save_MultiTexParameterIivEXT
00000000002403a0 000000000000011c t save_MultiTexParameterivEXT
00000000002404c0 0000000000000024 t save_MultiTexParameteriEXT
00000000002404f0 00000000000000e8 t save_BindMultiTextureEXT
00000000002405e0 0000000000000160 t save_CopyTextureSubImage3DEXT
0000000000240740 000000000000014c t save_CopyTextureSubImage2DEXT
0000000000240890 0000000000000128 t save_CopyTextureSubImage1DEXT
00000000002409c0 000000000000014c t save_CopyTextureImage2DEXT
0000000000240b10 000000000000013c t save_CopyTextureImage1DEXT
0000000000240c50 00000000000001f8 t save_TextureSubImage3DEXT
0000000000240e50 00000000000001e4 t save_TextureSubImage2DEXT
0000000000241040 00000000000001b4 t save_TextureSubImage1DEXT
0000000000241200 0000000000000264 t save_TextureImage3DEXT
0000000000241470 0000000000000258 t save_TextureImage2DEXT
00000000002416d0 0000000000000240 t save_TextureImage1DEXT
0000000000241910 000000000000011c t save_TextureParameterIuivEXT
0000000000241a30 000000000000011c t save_TextureParameterIivEXT
0000000000241b50 000000000000011c t save_TextureParameterfvEXT
0000000000241c70 0000000000000024 t save_TextureParameterfEXT
0000000000241ca0 000000000000011c t save_TextureParameterivEXT
0000000000241dc0 0000000000000024 t save_TextureParameteriEXT
0000000000241df0 00000000000000c4 t save_MatrixPopEXT
0000000000241ec0 00000000000000c4 t save_MatrixPushEXT
0000000000241f90 000000000000013c t save_MatrixFrustumEXT
00000000002420d0 000000000000013c t save_MatrixOrthoEXT
0000000000242210 00000000000000c4 t save_MatrixLoadIdentityEXT
00000000002422e0 00000000000000fc t save_MatrixTranslatefEXT
00000000002423e0 0000000000000010 t save_MatrixTranslatedEXT
00000000002423f0 00000000000000fc t save_MatrixScalefEXT
00000000002424f0 0000000000000010 t save_MatrixScaledEXT
0000000000242500 0000000000000104 t save_MatrixRotatefEXT
0000000000242610 0000000000000014 t save_MatrixRotatedEXT
0000000000242630 00000000000000fc t save_MatrixMultfEXT
0000000000242730 0000000000000034 t save_MatrixMultTransposedEXT
0000000000242770 0000000000000034 t save_MatrixMultTransposefEXT
00000000002427b0 0000000000000040 t save_MatrixMultdEXT
00000000002427f0 00000000000000fc t save_MatrixLoadfEXT
00000000002428f0 0000000000000034 t save_MatrixLoadTransposedEXT
0000000000242930 0000000000000034 t save_MatrixLoadTransposefEXT
0000000000242970 0000000000000040 t save_MatrixLoaddEXT
00000000002429b0 00000000000000dc t save_ConservativeRasterParameteriNV
0000000000242a90 00000000000000dc t save_ConservativeRasterParameterfNV
0000000000242b70 00000000000000dc t save_SubpixelPrecisionBiasNV
0000000000242c50 0000000000000154 t save_WindowRectanglesEXT
0000000000242db0 00000000000000f0 t save_PolygonOffsetClampEXT
0000000000242ea0 0000000000000164 t save_ProgramUniformMatrix4x3dv
0000000000243010 0000000000000164 t save_ProgramUniformMatrix3x4dv
0000000000243180 0000000000000160 t save_ProgramUniformMatrix4x2dv
00000000002432e0 0000000000000160 t save_ProgramUniformMatrix2x4dv
0000000000243440 0000000000000164 t save_ProgramUniformMatrix3x2dv
00000000002435b0 0000000000000164 t save_ProgramUniformMatrix2x3dv
0000000000243720 0000000000000160 t save_ProgramUniformMatrix4dv
0000000000243880 0000000000000164 t save_ProgramUniformMatrix3dv
00000000002439f0 0000000000000160 t save_ProgramUniformMatrix2dv
0000000000243b50 0000000000000164 t save_ProgramUniformMatrix4x3fv
0000000000243cc0 0000000000000164 t save_ProgramUniformMatrix3x4fv
0000000000243e30 0000000000000160 t save_ProgramUniformMatrix4x2fv
0000000000243f90 0000000000000160 t save_ProgramUniformMatrix2x4fv
00000000002440f0 0000000000000164 t save_ProgramUniformMatrix3x2fv
0000000000244260 0000000000000164 t save_ProgramUniformMatrix2x3fv
00000000002443d0 0000000000000160 t save_ProgramUniformMatrix4fv
0000000000244530 0000000000000164 t save_ProgramUniformMatrix3fv
00000000002446a0 0000000000000160 t save_ProgramUniformMatrix2fv
0000000000244800 0000000000000148 t save_ProgramUniform4uiv
0000000000244950 000000000000014c t save_ProgramUniform3uiv
0000000000244aa0 0000000000000148 t save_ProgramUniform2uiv
0000000000244bf0 0000000000000148 t save_ProgramUniform1uiv
0000000000244d40 0000000000000120 t save_ProgramUniform4ui
0000000000244e60 000000000000010c t save_ProgramUniform3ui
0000000000244f70 00000000000000fc t save_ProgramUniform2ui
0000000000245070 00000000000000e8 t save_ProgramUniform1ui
0000000000245160 0000000000000148 t save_ProgramUniform4iv
00000000002452b0 000000000000014c t save_ProgramUniform3iv
0000000000245400 0000000000000148 t save_ProgramUniform2iv
0000000000245550 0000000000000148 t save_ProgramUniform1iv
00000000002456a0 0000000000000120 t save_ProgramUniform4i
00000000002457c0 000000000000010c t save_ProgramUniform3i
00000000002458d0 00000000000000fc t save_ProgramUniform2i
00000000002459d0 00000000000000e8 t save_ProgramUniform1i
0000000000245ac0 0000000000000148 t save_ProgramUniform4dv
0000000000245c10 000000000000014c t save_ProgramUniform3dv
0000000000245d60 0000000000000148 t save_ProgramUniform2dv
0000000000245eb0 0000000000000148 t save_ProgramUniform1dv
0000000000246000 0000000000000148 t save_ProgramUniform4d
0000000000246150 0000000000000130 t save_ProgramUniform3d
0000000000246280 0000000000000110 t save_ProgramUniform2d
0000000000246390 00000000000000fc t save_ProgramUniform1d
0000000000246490 0000000000000148 t save_ProgramUniform4fv
00000000002465e0 000000000000014c t save_ProgramUniform3fv
0000000000246730 0000000000000148 t save_ProgramUniform2fv
0000000000246880 0000000000000148 t save_ProgramUniform1fv
00000000002469d0 000000000000011c t save_ProgramUniform4f
0000000000246af0 0000000000000114 t save_ProgramUniform3f
0000000000246c10 00000000000000fc t save_ProgramUniform2f
0000000000246d10 00000000000000f4 t save_ProgramUniform1f
0000000000246e10 00000000000000e8 t save_UseProgramStages
0000000000246f00 0000000000000154 t save_UniformSubroutinesuiv
0000000000247060 00000000000000e8 t save_UniformBlockBinding
0000000000247150 00000000000000e8 t save_WaitSync
0000000000247240 00000000000000b4 t save_EndConditionalRender
0000000000247300 00000000000000dc t save_BeginConditionalRender
00000000002473e0 00000000000000e8 t save_BlendEquationSeparatei
00000000002474d0 00000000000000dc t save_BlendEquationi
00000000002475b0 000000000000010c t save_BlendFuncSeparatei
00000000002476c0 00000000000000e8 t save_BlendFunci
00000000002477b0 0000000000000128 t save_SamplerParameterIuiv
00000000002478e0 0000000000000128 t save_SamplerParameterIiv
0000000000247a10 0000000000000128 t save_SamplerParameterfv
0000000000247b40 0000000000000024 t save_SamplerParameterf
0000000000247b70 0000000000000128 t save_SamplerParameteriv
0000000000247ca0 0000000000000024 t save_SamplerParameteri
0000000000247cd0 00000000000000dc t save_BindSampler
0000000000247db0 00000000000000b4 t save_TextureBarrierNV
0000000000247e70 00000000000000dc t save_VertexAttribDivisor
0000000000247f50 00000000000000dc t save_EndQueryIndexed
0000000000248030 00000000000000e8 t save_BeginQueryIndexed
0000000000248120 00000000000000fc t save_DrawTransformFeedbackStreamInstanced
0000000000248220 00000000000000e8 t save_DrawTransformFeedbackInstanced
0000000000248310 00000000000000e8 t save_DrawTransformFeedbackStream
0000000000248400 00000000000000dc t save_DrawTransformFeedback
00000000002484e0 00000000000000b4 t save_ResumeTransformFeedback
00000000002485a0 00000000000000b4 t save_PauseTransformFeedback
0000000000248660 00000000000000dc t save_BindTransformFeedback
0000000000248740 00000000000000b4 t save_EndTransformFeedback
0000000000248800 00000000000000c4 t save_BeginTransformFeedback
00000000002488d0 0000000000000148 t save_ProgramUniform4ui64vARB
0000000000248a20 0000000000000148 t save_ProgramUniform3ui64vARB
0000000000248b70 0000000000000148 t save_ProgramUniform2ui64vARB
0000000000248cc0 0000000000000148 t save_ProgramUniform1ui64vARB
0000000000248e10 0000000000000124 t save_ProgramUniform4ui64ARB
0000000000248f40 0000000000000110 t save_ProgramUniform3ui64ARB
0000000000249050 0000000000000100 t save_ProgramUniform2ui64ARB
0000000000249150 00000000000000e8 t save_ProgramUniform1ui64ARB
0000000000249240 0000000000000148 t save_ProgramUniform4i64vARB
0000000000249390 0000000000000148 t save_ProgramUniform3i64vARB
00000000002494e0 0000000000000148 t save_ProgramUniform2i64vARB
0000000000249630 0000000000000148 t save_ProgramUniform1i64vARB
0000000000249780 0000000000000124 t save_ProgramUniform4i64ARB
00000000002498b0 0000000000000110 t save_ProgramUniform3i64ARB
00000000002499c0 0000000000000100 t save_ProgramUniform2i64ARB
0000000000249ac0 00000000000000e8 t save_ProgramUniform1i64ARB
0000000000249bb0 000000000000013c t save_Uniform4ui64vARB
0000000000249cf0 0000000000000140 t save_Uniform3ui64vARB
0000000000249e30 000000000000013c t save_Uniform2ui64vARB
0000000000249f70 000000000000013c t save_Uniform1ui64vARB
000000000024a0b0 000000000000010c t save_Uniform4ui64ARB
000000000024a1c0 0000000000000100 t save_Uniform3ui64ARB
000000000024a2c0 00000000000000e8 t save_Uniform2ui64ARB
000000000024a3b0 00000000000000e0 t save_Uniform1ui64ARB
000000000024a490 000000000000013c t save_Uniform4i64vARB
000000000024a5d0 0000000000000140 t save_Uniform3i64vARB
000000000024a710 000000000000013c t save_Uniform2i64vARB
000000000024a850 000000000000013c t save_Uniform1i64vARB
000000000024a990 000000000000010c t save_Uniform4i64ARB
000000000024aaa0 0000000000000100 t save_Uniform3i64ARB
000000000024aba0 00000000000000e8 t save_Uniform2i64ARB
000000000024ac90 00000000000000e0 t save_Uniform1i64ARB
000000000024ad70 0000000000000154 t save_UniformMatrix4x3dv
000000000024aed0 0000000000000154 t save_UniformMatrix3x4dv
000000000024b030 0000000000000150 t save_UniformMatrix4x2dv
000000000024b180 0000000000000150 t save_UniformMatrix2x4dv
000000000024b2d0 0000000000000154 t save_UniformMatrix3x2dv
000000000024b430 0000000000000154 t save_UniformMatrix2x3dv
000000000024b590 0000000000000150 t save_UniformMatrix4dv
000000000024b6e0 0000000000000154 t save_UniformMatrix3dv
000000000024b840 0000000000000150 t save_UniformMatrix2dv
000000000024b990 000000000000013c t save_Uniform4dv
000000000024bad0 0000000000000140 t save_Uniform3dv
000000000024bc10 000000000000013c t save_Uniform2dv
000000000024bd50 000000000000013c t save_Uniform1dv
000000000024be90 000000000000012c t save_Uniform4d
000000000024bfc0 0000000000000118 t save_Uniform3d
000000000024c0e0 00000000000000f8 t save_Uniform2d
000000000024c1e0 00000000000000e4 t save_Uniform1d
000000000024c2d0 000000000000013c t save_Uniform4uiv
000000000024c410 0000000000000140 t save_Uniform3uiv
000000000024c550 000000000000013c t save_Uniform2uiv
000000000024c690 000000000000013c t save_Uniform1uiv
000000000024c7d0 000000000000010c t save_Uniform4ui
000000000024c8e0 00000000000000fc t save_Uniform3ui
000000000024c9e0 00000000000000e8 t save_Uniform2ui
000000000024cad0 00000000000000dc t save_Uniform1ui
000000000024cbb0 0000000000000100 t save_ClearBufferfi
000000000024ccb0 0000000000000128 t save_ClearBufferfv
000000000024cde0 0000000000000128 t save_ClearBufferuiv
000000000024cf10 0000000000000128 t save_ClearBufferiv
000000000024d040 00000000000000dc t save_ClampColorARB
000000000024d120 00000000000000dc t save_ClipControl
000000000024d200 0000000000000104 t save_TexParameterIuiv
000000000024d310 0000000000000104 t save_TexParameterIiv
000000000024d420 00000000000000fc t save_ClearColorIui
000000000024d520 00000000000000fc t save_ClearColorIi
000000000024d620 00000000000000a4 t save_ProvokingVertexEXT
000000000024d6d0 0000000000000140 t save_ProgramLocalParameters4fvEXT
000000000024d810 0000000000000140 t save_ProgramEnvParameters4fvEXT
000000000024d950 00000000000000dc t save_BlendEquationSeparateEXT
000000000024da30 0000000000000154 t save_UniformMatrix4x3fv
000000000024db90 0000000000000154 t save_UniformMatrix3x4fv
000000000024dcf0 0000000000000150 t save_UniformMatrix4x2fv
000000000024de40 0000000000000150 t save_UniformMatrix2x4fv
000000000024df90 0000000000000154 t save_UniformMatrix3x2fv
000000000024e0f0 0000000000000154 t save_UniformMatrix2x3fv
000000000024e250 0000000000000150 t save_UniformMatrix4fvARB
000000000024e3a0 0000000000000154 t save_UniformMatrix3fvARB
000000000024e500 0000000000000150 t save_UniformMatrix2fvARB
000000000024e650 000000000000013c t save_Uniform4ivARB
000000000024e790 0000000000000140 t save_Uniform3ivARB
000000000024e8d0 000000000000013c t save_Uniform2ivARB
000000000024ea10 000000000000013c t save_Uniform1ivARB
000000000024eb50 000000000000010c t save_Uniform4iARB
000000000024ec60 00000000000000fc t save_Uniform3iARB
000000000024ed60 00000000000000e8 t save_Uniform2iARB
000000000024ee50 00000000000000dc t save_Uniform1iARB
000000000024ef30 000000000000013c t save_Uniform4fvARB
000000000024f070 0000000000000140 t save_Uniform3fvARB
000000000024f1b0 000000000000013c t save_Uniform2fvARB
000000000024f2f0 000000000000013c t save_Uniform1fvARB
000000000024f430 0000000000000104 t save_Uniform4fARB
000000000024f540 00000000000000fc t save_Uniform3fARB
000000000024f640 00000000000000e4 t save_Uniform2fARB
000000000024f730 00000000000000dc t save_Uniform1fARB
000000000024f810 00000000000000c4 t save_UseProgram
000000000024f8e0 0000000000000160 t save_BlitFramebufferEXT
000000000024fa40 0000000000000110 t save_DrawBuffersARB
000000000024fb50 00000000000000dc t save_QueryCounter
000000000024fc30 00000000000000c4 t save_EndQueryARB
000000000024fd00 00000000000000dc t save_BeginQueryARB
000000000024fde0 0000000000000104 t save_ProgramLocalParameter4fvARB
000000000024fef0 000000000000011c t save_ProgramLocalParameter4fARB
0000000000250010 0000000000000104 t save_ProgramLocalParameter4dvARB
0000000000250120 000000000000012c t save_ProgramLocalParameter4dARB
0000000000250250 000000000000011c t save_ProgramEnvParameter4fARB
0000000000250370 000000000000000c t save_ProgramEnvParameter4fvARB
0000000000250380 000000000000001c t save_ProgramEnvParameter4dvARB
00000000002503a0 0000000000000014 t save_ProgramEnvParameter4dARB
00000000002503c0 00000000000000dc t save_BindProgramARB
00000000002504a0 0000000000000158 t save_ProgramStringARB
0000000000250600 00000000000001b4 t save_CompressedTexSubImage1DARB
00000000002507c0 00000000000001d8 t save_CompressedTexSubImage2DARB
00000000002509a0 0000000000000200 t save_CompressedTexSubImage3DARB
0000000000250ba0 000000000000023c t save_CompressedTexImage1DARB
0000000000250de0 0000000000000250 t save_CompressedTexImage2DARB
0000000000251030 0000000000000264 t save_CompressedTexImage3DARB
00000000002512a0 00000000000000dc t save_SampleCoverageARB
0000000000251380 00000000000000b0 t save_ActiveTextureARB
0000000000251430 00000000000000e0 t save_DepthBoundsEXT
0000000000251510 00000000000000c4 t save_ActiveStencilFaceEXT
00000000002515e0 00000000000000f8 t save_WindowPos4fMESA
00000000002516e0 0000000000000024 t save_WindowPos4svMESA
0000000000251710 0000000000000024 t save_WindowPos4sMESA
0000000000251740 000000000000001c t save_WindowPos4ivMESA
0000000000251760 0000000000000014 t save_WindowPos4iMESA
0000000000251780 000000000000000c t save_WindowPos4fvMESA
0000000000251790 000000000000001c t save_WindowPos4dvMESA
00000000002517b0 0000000000000014 t save_WindowPos4dMESA
00000000002517d0 0000000000000020 t save_WindowPos3svMESA
00000000002517f0 0000000000000020 t save_WindowPos3sMESA
0000000000251810 000000000000001c t save_WindowPos3ivMESA
0000000000251830 0000000000000014 t save_WindowPos3iMESA
0000000000251850 0000000000000010 t save_WindowPos3fvMESA
0000000000251860 0000000000000008 t save_WindowPos3fMESA
0000000000251870 000000000000001c t save_WindowPos3dvMESA
0000000000251890 0000000000000014 t save_WindowPos3dMESA
00000000002518b0 000000000000001c t save_WindowPos2svMESA
00000000002518d0 000000000000001c t save_WindowPos2sMESA
00000000002518f0 0000000000000018 t save_WindowPos2ivMESA
0000000000251910 0000000000000014 t save_WindowPos2iMESA
0000000000251930 0000000000000010 t save_WindowPos2fvMESA
0000000000251940 000000000000000c t save_WindowPos2fMESA
0000000000251950 0000000000000018 t save_WindowPos2dvMESA
0000000000251970 0000000000000014 t save_WindowPos2dMESA
0000000000251990 00000000000000fc t save_BlendFuncSeparateEXT
0000000000251a90 000000000000000c t save_BlendFunc
0000000000251aa0 00000000000000e8 t save_DispatchCompute
0000000000251b90 00000000000000ec t save_DepthRangeIndexed
0000000000251c80 000000000000013c t save_DepthRangeArrayv
0000000000251dc0 00000000000000fc t save_ScissorIndexedv
0000000000251ec0 000000000000010c t save_ScissorIndexed
0000000000251fd0 000000000000013c t save_ScissorArrayv
0000000000252110 00000000000000fc t save_ViewportIndexedfv
0000000000252210 0000000000000104 t save_ViewportIndexedf
0000000000252320 000000000000013c t save_ViewportArrayv
0000000000252460 0000000000000140 t save_PatchParameterfv
00000000002525a0 00000000000000dc t save_PatchParameteri
0000000000252680 00000000000000f4 t save_PointParameterfvEXT
0000000000252780 000000000000002c t save_PointParameterivNV
00000000002527b0 0000000000000028 t save_PointParameteriNV
00000000002527e0 0000000000000020 t save_PointParameterfEXT
0000000000252800 00000000000000b0 t save_BlendEquation
00000000002528b0 00000000000000e4 t save_BlendColor
00000000002529a0 0000000000000154 t save_StencilFuncSeparateATI
0000000000252b00 00000000000000fc t save_StencilOpSeparate
0000000000252c00 00000000000000dc t save_StencilMaskSeparate
0000000000252ce0 00000000000000fc t save_StencilFuncSeparate
0000000000252de0 00000000000001dc t save_TexSubImage3D
0000000000252fc0 0000000000000210 t save_TexImage3D
00000000002531d0 0000000000000138 t save_CopyTexSubImage3D
0000000000253310 00000000000001b8 t save_TexSubImage2D
00000000002534d0 0000000000000198 t save_TexSubImage1D
0000000000253670 0000000000000108 t save_PrioritizeTextures
0000000000253780 0000000000000128 t save_CopyTexSubImage2D
00000000002538b0 000000000000010c t save_CopyTexSubImage1D
00000000002539c0 0000000000000128 t save_CopyTexImage2D
0000000000253af0 0000000000000114 t save_CopyTexImage1D
0000000000253c10 00000000000000c8 t save_BindTexture
0000000000253ce0 00000000000000e8 t save_Viewport
0000000000253dd0 00000000000000dc t save_Translatef
0000000000253eb0 0000000000000010 t save_Translated
0000000000253ec0 00000000000000f0 t save_TexParameterfv
0000000000253fb0 0000000000000030 t save_TexParameteriv
0000000000253fe0 000000000000002c t save_TexParameteri
0000000000254010 0000000000000024 t save_TexParameterf
0000000000254040 0000000000000204 t save_TexImage2D
0000000000254250 00000000000001f0 t save_TexImage1D
0000000000254440 00000000000000f0 t save_TexGenfv
0000000000254530 000000000000003c t save_TexGeniv
0000000000254570 0000000000000024 t save_TexGenf
00000000002545a0 000000000000003c t save_TexGendv
00000000002545e0 0000000000000028 t save_TexGend
0000000000254610 000000000000002c t save_TexGeni
0000000000254640 0000000000000118 t save_TexEnvfv
0000000000254760 00000000000000c4 t save_TexEnviv
0000000000254830 000000000000002c t save_TexEnvi
0000000000254860 0000000000000024 t save_TexEnvf
0000000000254890 00000000000000d4 t save_StencilOp
0000000000254970 00000000000000b0 t save_StencilMask
0000000000254a20 00000000000000d4 t save_StencilFunc
0000000000254b00 00000000000000e0 t save_ShadeModel
0000000000254be0 00000000000000e8 t save_Scissor
0000000000254cd0 00000000000000dc t save_Scalef
0000000000254db0 0000000000000010 t save_Scaled
0000000000254dc0 00000000000000e4 t save_Rotatef
0000000000254eb0 0000000000000014 t save_Rotated
0000000000254ed0 00000000000000e4 t save_Rectf
0000000000254fc0 00000000000000b0 t save_ReadBuffer
0000000000255070 00000000000000e4 t save_RasterPos4f
0000000000255160 0000000000000024 t save_RasterPos4sv
0000000000255190 0000000000000024 t save_RasterPos4s
00000000002551c0 000000000000001c t save_RasterPos4iv
00000000002551e0 0000000000000014 t save_RasterPos4i
0000000000255200 000000000000000c t save_RasterPos4fv
0000000000255210 000000000000001c t save_RasterPos4dv
0000000000255230 0000000000000014 t save_RasterPos4d
0000000000255250 0000000000000020 t save_RasterPos3sv
0000000000255270 0000000000000020 t save_RasterPos3s
0000000000255290 000000000000001c t save_RasterPos3iv
00000000002552b0 0000000000000014 t save_RasterPos3i
00000000002552d0 0000000000000010 t save_RasterPos3fv
00000000002552e0 0000000000000008 t save_RasterPos3f
00000000002552f0 000000000000001c t save_RasterPos3dv
0000000000255310 0000000000000014 t save_RasterPos3d
0000000000255330 000000000000001c t save_RasterPos2sv
0000000000255350 000000000000001c t save_RasterPos2s
0000000000255370 0000000000000018 t save_RasterPos2iv
0000000000255390 0000000000000014 t save_RasterPos2i
00000000002553b0 0000000000000010 t save_RasterPos2fv
00000000002553c0 000000000000000c t save_RasterPos2f
00000000002553d0 0000000000000018 t save_RasterPos2dv
00000000002553f0 0000000000000014 t save_RasterPos2d
0000000000255410 00000000000000b0 t save_PushName
00000000002554c0 00000000000000a0 t save_PushMatrix
0000000000255560 00000000000000b0 t save_PushAttrib
0000000000255610 00000000000000a0 t save_PopName
00000000002556b0 00000000000000a0 t save_PopMatrix
0000000000255750 00000000000000a0 t save_PopAttrib
00000000002557f0 000000000000012c t save_PolygonStipple
0000000000255920 00000000000000c4 t save_PolygonOffset
00000000002559f0 00000000000000c8 t save_PolygonMode
0000000000255ac0 00000000000000bc t save_PointSize
0000000000255b80 00000000000000c4 t save_PixelZoom
0000000000255c50 00000000000000c8 t save_PixelTransferf
0000000000255d20 0000000000000008 t save_PixelTransferi
0000000000255d30 0000000000000128 t save_PixelMapfv
0000000000255e60 00000000000000c8 t save_PixelMapusv
0000000000255f30 00000000000000d0 t save_PixelMapuiv
0000000000256000 00000000000000bc t save_PassThrough
00000000002560c0 000000000000011c t save_Ortho
00000000002561e0 00000000000000c8 t save_MultMatrixf
00000000002562b0 0000000000000030 t save_MultTransposeMatrixfARB
00000000002562e0 0000000000000030 t save_MultTransposeMatrixdARB
0000000000256310 0000000000000040 t save_MultMatrixd
0000000000256350 00000000000000b0 t save_MatrixMode
0000000000256400 000000000000010c t save_MapGrid2f
0000000000256510 0000000000000014 t save_MapGrid2d
0000000000256530 00000000000000d0 t save_MapGrid1f
0000000000256600 000000000000000c t save_MapGrid1d
0000000000256610 0000000000000198 t save_Map2f
00000000002567b0 00000000000001a8 t save_Map2d
0000000000256960 000000000000013c t save_Map1f
0000000000256aa0 0000000000000144 t save_Map1d
0000000000256bf0 00000000000000b0 t save_LogicOp
0000000000256ca0 00000000000000b0 t save_LoadName
0000000000256d50 00000000000000c8 t save_LoadMatrixf
0000000000256e20 0000000000000030 t save_LoadTransposeMatrixfARB
0000000000256e50 0000000000000030 t save_LoadTransposeMatrixdARB
0000000000256e80 0000000000000040 t save_LoadMatrixd
0000000000256ec0 00000000000000a0 t save_LoadIdentity
0000000000256f60 00000000000000b0 t save_ListBase
0000000000257010 00000000000000bc t save_LineWidth
00000000002570d0 00000000000000cc t save_LineStipple
00000000002571a0 0000000000000114 t save_Lightfv
00000000002572c0 0000000000000148 t save_Lightiv
0000000000257410 0000000000000024 t save_Lighti
0000000000257440 0000000000000024 t save_Lightf
0000000000257470 00000000000000e8 t save_LightModelfv
0000000000257560 0000000000000108 t save_LightModeliv
0000000000257670 0000000000000024 t save_LightModeli
00000000002576a0 0000000000000024 t save_LightModelf
00000000002576d0 00000000000000a0 t save_InitNames
0000000000257770 00000000000000b0 t save_IndexMask
0000000000257820 00000000000000c8 t save_Hint
00000000002578f0 000000000000011c t save_Frustum
0000000000257a10 00000000000000b0 t save_FrontFace
0000000000257ac0 00000000000000e8 t save_Fogfv
0000000000257bb0 0000000000000108 t save_Fogiv
0000000000257cc0 0000000000000024 t save_Fogi
0000000000257cf0 0000000000000024 t save_Fogf
0000000000257d20 00000000000000f4 t save_EvalMesh2
0000000000257e20 00000000000000d4 t save_EvalMesh1
0000000000257f00 00000000000000dc t save_EnableIndexed
0000000000257fe0 00000000000000b0 t save_Enable
0000000000258090 0000000000000178 t save_DrawPixels
0000000000258210 00000000000000b0 t save_DrawBuffer
00000000002582c0 00000000000000dc t save_DisableIndexed
00000000002583a0 00000000000000b0 t save_Disable
0000000000258450 00000000000000cc t save_DepthRange
0000000000258520 00000000000000b0 t save_DepthMask
00000000002585d0 00000000000000b0 t save_DepthFunc
0000000000258680 00000000000000b0 t save_CullFace
0000000000258730 00000000000000f4 t save_CopyPixels
0000000000258830 00000000000000c8 t save_ColorMaterial
0000000000258900 00000000000000bc t save_ColorMaskIndexed
00000000002589c0 00000000000000f0 t save_ColorMask
0000000000258ab0 00000000000000e8 t save_ClipPlane
0000000000258ba0 00000000000000b0 t save_ClearStencil
0000000000258c50 00000000000000bc t save_ClearIndex
0000000000258d10 00000000000000c0 t save_ClearDepth
0000000000258dd0 00000000000000e4 t save_ClearColor
0000000000258ec0 00000000000000e4 t save_ClearAccum
0000000000258fb0 00000000000000b0 t save_Clear
0000000000259060 0000000000000198 t save_Bitmap
0000000000259200 00000000000000c8 t save_AlphaFunc
00000000002592d0 00000000000000c8 t save_Accum
00000000002593a0 00000000000002d0 t save_Materialfv
0000000000259670 00000000000000b4 t save_PrimitiveRestartNV
0000000000259730 0000000000000098 t save_Begin
00000000002597d0 00000000000000a4 T _mesa_IsList
0000000000259880 0000000000000130 T _mesa_DeleteLists
00000000002599b0 0000000000000208 T _mesa_GenLists
0000000000259bc0 00000000000001cc T _mesa_NewList
0000000000259d90 000000000000019c T _mesa_EndList
0000000000259f30 00000000000000b8 t _mesa_CallList
0000000000259ff0 00000000000000c0 t save_CallList
000000000025a0b0 00000000000006cc T _mesa_CallLists
000000000025a780 0000000000000088 T _mesa_ListBase
000000000025a810 00000000000027ac t _mesa_initialize_save_table
000000000025cfc0 000000000000000c t _mesa_install_dlist_vtxfmt
000000000025cfd0 000000000000061c t _mesa_init_display_list
000000000025d5f0 0000000000000028 t _mesa_free_display_list_data
000000000025d620 000000000000009c t need_xfb_remaining_prims_check
000000000025d6c0 0000000000000150 t count_tessellated_primitives
000000000025d810 00000000000000c0 t valid_draw_indirect_parameters
000000000025d8d0 0000000000000164 t check_valid_to_render.part.0
000000000025da40 0000000000000354 t _mesa_valid_to_render
000000000025dda0 00000000000000e4 t _mesa_is_valid_prim_mode
000000000025de90 0000000000000374 t _mesa_valid_prim_mode
000000000025e210 0000000000000210 t valid_draw_indirect
000000000025e420 0000000000000108 t validate_draw_arrays.constprop.0
000000000025e530 0000000000000160 t validate_DrawElements_common.constprop.0
000000000025e690 000000000000000c t _mesa_validate_DrawElements
000000000025e6a0 0000000000000194 t _mesa_validate_MultiDrawElements
000000000025e840 0000000000000040 t _mesa_validate_DrawRangeElements
000000000025e880 0000000000000014 t _mesa_validate_DrawArrays
000000000025e8a0 0000000000000098 t _mesa_validate_DrawArraysInstanced
000000000025e940 0000000000000190 t _mesa_validate_MultiDrawArrays
000000000025ead0 0000000000000060 t _mesa_validate_DrawElementsInstanced
000000000025eb30 0000000000000128 t _mesa_validate_DrawTransformFeedback
000000000025ec60 0000000000000064 t _mesa_valid_draw_indirect_multi
000000000025ecd0 0000000000000010 t _mesa_validate_DrawArraysIndirect
000000000025ece0 00000000000000bc t _mesa_validate_DrawElementsIndirect
000000000025eda0 0000000000000090 t _mesa_validate_MultiDrawArraysIndirect
000000000025ee30 000000000000012c t _mesa_validate_MultiDrawElementsIndirect
000000000025ef60 00000000000000c4 t _mesa_validate_MultiDrawArraysIndirectCount
000000000025f030 0000000000000154 t _mesa_validate_MultiDrawElementsIndirectCount
000000000025f190 000000000000014c t output_if_debug
000000000025f2e0 0000000000000094 t flush_delayed_errors
000000000025f380 000000000000000c t _mesa_get_log_file
000000000025f390 00000000000000d0 t _mesa_warning
000000000025f460 0000000000000108 t _mesa_problem
000000000025f570 00000000000000b0 t _mesa_gl_vdebugf
000000000025f620 0000000000000064 t _mesa_gl_debugf
000000000025f690 00000000000002f4 t _mesa_error
000000000025f990 0000000000000030 t _mesa_error_no_memory
000000000025f9c0 0000000000000004 t _mesa_debug
000000000025f9d0 00000000000000c4 t _mesa_log
000000000025faa0 0000000000000068 t _mesa_shader_debug
000000000025fb10 00000000000000c4 t get_1d_map
000000000025fbe0 00000000000000c0 t get_2d_map
000000000025fca0 0000000000000024 t _mesa_evaluator_components
000000000025fcd0 00000000000000d8 t _mesa_copy_map_points1f
000000000025fdb0 00000000000000d4 t _mesa_copy_map_points1d
000000000025fe90 00000000000001ec t map1
0000000000260080 0000000000000190 t _mesa_copy_map_points2f
0000000000260210 0000000000000158 t _mesa_copy_map_points2d
0000000000260370 0000000000000260 t map2
00000000002605d0 0000000000000008 T _mesa_Map1f
00000000002605e0 0000000000000010 T _mesa_Map1d
00000000002605f0 0000000000000008 T _mesa_Map2f
0000000000260600 0000000000000018 T _mesa_Map2d
0000000000260620 00000000000001b8 t _mesa_GetnMapdvARB
00000000002607e0 000000000000000c T _mesa_GetMapdv
00000000002607f0 00000000000001b4 t _mesa_GetnMapfvARB
00000000002609b0 000000000000000c T _mesa_GetMapfv
00000000002609c0 00000000000001b0 t _mesa_GetnMapivARB
0000000000260b70 000000000000000c T _mesa_GetMapiv
0000000000260b80 000000000000009c t _mesa_MapGrid1f
0000000000260c20 000000000000000c T _mesa_MapGrid1d
0000000000260c30 00000000000000f8 t _mesa_MapGrid2f
0000000000260d30 0000000000000014 T _mesa_MapGrid2d
0000000000260d50 000000000000002c t _mesa_install_eval_vtxfmt
0000000000260d80 0000000000000410 t _mesa_init_eval
0000000000261190 00000000000000a8 t _mesa_free_eval_data
0000000000261240 0000000000000040 t free_unknown_extensions_strings
0000000000261280 0000000000000008 t extension_name_compare
0000000000261290 0000000000000048 t extension_compare
00000000002612e0 000000000000006c t _mesa_override_extensions
0000000000261350 0000000000000294 t _mesa_one_time_init_extension_overrides
00000000002615f0 0000000000000034 t _mesa_init_extensions
0000000000261630 000000000000022c t _mesa_make_extension_string
0000000000261860 0000000000000098 t _mesa_get_extension_count
0000000000261900 00000000000000b8 t _mesa_get_enabled_extension
00000000002619c0 0000000000000004 t delete_dummy_renderbuffer
00000000002619d0 0000000000000004 t delete_dummy_framebuffer
00000000002619e0 00000000000000b8 t get_framebuffer_target
0000000000261aa0 00000000000000ec t get_attachment
0000000000261b90 0000000000000078 t driver_RenderTexture_is_safe
0000000000261c10 000000000000009c t validate_framebuffer_parameter_extensions
0000000000261cb0 0000000000000268 t framebuffer_parameteri
0000000000261f20 0000000000000130 t check_layer
0000000000262050 00000000000000b4 t remove_attachment
0000000000262110 000000000000018c t create_framebuffers
00000000002622a0 00000000000000fc t check_texture_target
00000000002623a0 0000000000000208 t sample_locations
00000000002625b0 0000000000000044 t invalidate_rb
0000000000262600 0000000000000070 t check_end_texture_render
0000000000262670 0000000000000198 t discard_framebuffer.part.0
0000000000262810 0000000000000140 t create_render_buffers
0000000000262950 00000000000002f0 t get_framebuffer_parameteriv
0000000000262c40 00000000000001b4 t invalidate_framebuffer_storage.constprop.0
0000000000262e00 0000000000000118 t check_layered_texture_target.constprop.0
0000000000262f20 0000000000000194 t get_render_buffer_parameteriv
00000000002630c0 00000000000000cc t lookup_named_framebuffer_ext_dsa
0000000000263190 00000000000007bc t get_framebuffer_attachment_parameter
0000000000263950 00000000000001f4 t framebuffer_renderbuffer_error
0000000000263b50 0000000000000158 t bind_renderbuffer
0000000000263cb0 0000000000000078 t _mesa_init_fbobjects
0000000000263d30 000000000000000c t _mesa_get_incomplete_framebuffer
0000000000263d40 0000000000000018 t _mesa_lookup_renderbuffer
0000000000263d60 0000000000000018 t _mesa_lookup_framebuffer
0000000000263d80 000000000000012c t _mesa_lookup_framebuffer_dsa
0000000000263eb0 0000000000000080 t _mesa_lookup_framebuffer_err
0000000000263f30 0000000000000124 t _mesa_update_texture_renderbuffer
0000000000264060 0000000000000110 T _mesa_FramebufferRenderbuffer_sw
0000000000264170 0000000000000064 t _mesa_has_depthstencil_combined
00000000002641e0 00000000000000a8 t _mesa_is_legal_color_format
0000000000264290 000000000000022c t test_attachment_completeness
00000000002644c0 0000000000000c54 t _mesa_test_framebuffer_completeness
0000000000265120 0000000000000080 T _mesa_IsRenderbuffer
00000000002651a0 0000000000000004 T _mesa_BindRenderbuffer
00000000002651b0 0000000000000004 T _mesa_BindRenderbufferEXT
00000000002651c0 00000000000000c4 t _mesa_FramebufferParameteri
0000000000265290 0000000000000004 T _mesa_FramebufferParameteriMESA
00000000002652a0 00000000000000c4 t _mesa_GetFramebufferParameteriv
0000000000265370 0000000000000004 T _mesa_GetFramebufferParameterivMESA
0000000000265380 0000000000000090 t _mesa_detach_renderbuffer
0000000000265410 0000000000000234 T _mesa_DeleteRenderbuffers
0000000000265650 0000000000000030 T _mesa_GenRenderbuffers_no_error
0000000000265680 0000000000000050 T _mesa_GenRenderbuffers
00000000002656d0 0000000000000030 T _mesa_CreateRenderbuffers_no_error
0000000000265700 0000000000000050 T _mesa_CreateRenderbuffers
0000000000265750 0000000000000ff8 t _mesa_base_fbo_format
0000000000266750 0000000000000148 t _mesa_renderbuffer_storage
00000000002668a0 00000000000001a0 t renderbuffer_storage
0000000000266a40 00000000000000e4 T _mesa_EGLImageTargetRenderbufferStorageOES
0000000000266b30 0000000000000094 T _mesa_RenderbufferStorage
0000000000266bd0 0000000000000084 T _mesa_RenderbufferStorageMultisample
0000000000266c60 0000000000000094 T _mesa_RenderbufferStorageMultisampleAdvancedAMD
0000000000266d00 00000000000000c4 T _mesa_NamedRenderbufferStorage
0000000000266dd0 0000000000000110 T _mesa_NamedRenderbufferStorageEXT
0000000000266ee0 00000000000000c8 T _mesa_NamedRenderbufferStorageMultisample
0000000000266fb0 0000000000000118 T _mesa_NamedRenderbufferStorageMultisampleEXT
00000000002670d0 00000000000000d8 T _mesa_NamedRenderbufferStorageMultisampleAdvancedAMD
00000000002671b0 0000000000000078 T _mesa_GetRenderbufferParameteriv
0000000000267230 00000000000000a0 T _mesa_GetNamedRenderbufferParameteriv
00000000002672d0 0000000000000100 T _mesa_GetNamedRenderbufferParameterivEXT
00000000002673d0 0000000000000084 T _mesa_IsFramebuffer
0000000000267460 00000000000001e0 t _mesa_bind_framebuffers
0000000000267640 0000000000000170 t bind_framebuffer
00000000002677b0 0000000000000004 t _mesa_BindFramebuffer
00000000002677c0 0000000000000004 T _mesa_BindFramebufferEXT
00000000002677d0 0000000000000170 T _mesa_DeleteFramebuffers
0000000000267940 0000000000000008 T _mesa_GenFramebuffers
0000000000267950 0000000000000008 T _mesa_CreateFramebuffers
0000000000267960 0000000000000160 T _mesa_CheckFramebufferStatus_no_error
0000000000267ac0 000000000000016c T _mesa_CheckFramebufferStatus
0000000000267c30 0000000000000170 t _mesa_CheckNamedFramebufferStatus
0000000000267da0 0000000000000150 T _mesa_CheckNamedFramebufferStatusEXT
0000000000267ef0 000000000000015c t _mesa_get_and_validate_attachment
0000000000268050 00000000000002f4 t _mesa_framebuffer_texture
0000000000268350 00000000000000bc t framebuffer_texture_with_dims_no_error
0000000000268410 000000000000042c t framebuffer_texture_with_dims
0000000000268840 0000000000000008 T _mesa_FramebufferTexture1D_no_error
0000000000268850 0000000000000054 T _mesa_FramebufferTexture1D
00000000002688b0 0000000000000008 T _mesa_FramebufferTexture2D_no_error
00000000002688c0 0000000000000054 T _mesa_FramebufferTexture2D
0000000000268920 0000000000000058 T _mesa_FramebufferTexture2DMultisampleEXT
0000000000268980 0000000000000004 T _mesa_FramebufferTexture3D_no_error
0000000000268990 0000000000000054 T _mesa_FramebufferTexture3D
00000000002689f0 0000000000000100 T _mesa_FramebufferTextureLayer_no_error
0000000000268af0 0000000000000264 T _mesa_FramebufferTextureLayer
0000000000268d60 000000000000010c T _mesa_NamedFramebufferTextureLayer_no_error
0000000000268e70 0000000000000280 T _mesa_NamedFramebufferTextureLayer
00000000002690f0 0000000000000110 T _mesa_FramebufferTexture_no_error
0000000000269200 0000000000000290 T _mesa_FramebufferTexture
0000000000269490 000000000000011c T _mesa_NamedFramebufferTexture_no_error
00000000002695b0 000000000000028c T _mesa_NamedFramebufferTexture
0000000000269840 0000000000000058 T _mesa_NamedFramebufferTexture1DEXT
00000000002698a0 0000000000000058 T _mesa_NamedFramebufferTexture2DEXT
0000000000269900 0000000000000058 T _mesa_NamedFramebufferTexture3DEXT
0000000000269960 00000000000000bc T _mesa_FramebufferRenderbuffer_no_error
0000000000269a20 0000000000000104 T _mesa_FramebufferRenderbuffer
0000000000269b30 00000000000000c8 T _mesa_NamedFramebufferRenderbuffer_no_error
0000000000269c00 00000000000000bc T _mesa_NamedFramebufferRenderbuffer
0000000000269cc0 0000000000000084 T _mesa_NamedFramebufferRenderbufferEXT
0000000000269d50 0000000000000104 T _mesa_GetFramebufferAttachmentParameteriv
0000000000269e60 00000000000000c4 T _mesa_GetNamedFramebufferAttachmentParameteriv
0000000000269f30 000000000000009c T _mesa_GetNamedFramebufferAttachmentParameterivEXT
0000000000269fd0 00000000000000f8 T _mesa_NamedFramebufferParameteri
000000000026a0d0 000000000000007c T _mesa_NamedFramebufferParameteriEXT
000000000026a150 00000000000000e0 T _mesa_GetFramebufferParameterivEXT
000000000026a230 00000000000000ec T _mesa_GetNamedFramebufferParameteriv
000000000026a320 000000000000007c T _mesa_GetNamedFramebufferParameterivEXT
000000000026a3a0 0000000000000004 T _mesa_InvalidateSubFramebuffer_no_error
000000000026a3b0 000000000000008c T _mesa_InvalidateSubFramebuffer
000000000026a440 00000000000000cc T _mesa_InvalidateNamedFramebufferSubData
000000000026a510 00000000000000d4 T _mesa_InvalidateFramebuffer_no_error
000000000026a5f0 00000000000000d8 T _mesa_InvalidateFramebuffer
000000000026a6d0 00000000000000bc T _mesa_InvalidateNamedFramebufferData
000000000026a790 000000000000013c T _mesa_DiscardFramebufferEXT
000000000026a8d0 0000000000000108 T _mesa_FramebufferSampleLocationsfvARB
000000000026a9e0 00000000000000c8 T _mesa_NamedFramebufferSampleLocationsfvARB
000000000026aab0 0000000000000120 T _mesa_FramebufferSampleLocationsfvARB_no_error
000000000026abd0 0000000000000078 T _mesa_NamedFramebufferSampleLocationsfvARB_no_error
000000000026ac50 0000000000000058 T _mesa_EvaluateDepthValuesARB
000000000026acb0 0000000000000100 t write_hit_record
000000000026adb0 00000000000001a4 T _mesa_FeedbackBuffer
000000000026af60 00000000000000b0 T _mesa_PassThrough
000000000026b010 0000000000000194 t _mesa_feedback_vertex
000000000026b1b0 00000000000000e4 T _mesa_SelectBuffer
000000000026b2a0 000000000000003c t _mesa_update_hitflag
000000000026b2e0 000000000000009c T _mesa_InitNames
000000000026b380 00000000000000ec T _mesa_LoadName
000000000026b470 00000000000000f4 T _mesa_PushName
000000000026b570 00000000000000d4 T _mesa_PopName
000000000026b650 00000000000001f4 T _mesa_RenderMode
000000000026b850 0000000000000034 t _mesa_init_feedback
000000000026b890 00000000000004e0 t _mesa_Fogfv
000000000026bd70 0000000000000024 t _mesa_Fogf
000000000026bda0 000000000000002c t _mesa_Fogi
000000000026bdd0 00000000000000f8 T _mesa_Fogiv
000000000026bed0 0000000000000040 t _mesa_init_fog
000000000026bf10 000000000000000c t array_formats_equal
000000000026bf20 0000000000000010 t format_array_format_table_destroy
000000000026bf30 00000000000000bc t format_array_format_table_init
000000000026bff0 0000000000000038 t _mesa_get_format_name
000000000026c030 0000000000000050 t _mesa_get_format_bytes
000000000026c080 0000000000000250 t _mesa_get_format_bits
000000000026c2d0 0000000000000094 t _mesa_get_format_max_bits
000000000026c370 000000000000003c t _mesa_get_format_layout
000000000026c3b0 000000000000003c t _mesa_get_format_datatype
000000000026c3f0 0000000000000140 t _mesa_get_format_base_format
000000000026c530 0000000000000048 t _mesa_get_format_block_size
000000000026c580 0000000000000050 t _mesa_get_format_block_size_3d
000000000026c5d0 000000000000003c t _mesa_format_to_array_format
000000000026c610 0000000000000068 t _mesa_format_from_array_format
000000000026c680 0000000000000058 t _mesa_is_format_compressed
000000000026c6e0 0000000000000048 t _mesa_is_format_packed_depth_stencil
000000000026c730 0000000000000080 t _mesa_is_format_integer_color
000000000026c7b0 0000000000000054 t _mesa_is_format_unsigned
000000000026c810 0000000000000070 t _mesa_is_format_signed
000000000026c880 000000000000004c t _mesa_is_format_integer
000000000026c8d0 000000000000003c t _mesa_is_format_srgb
000000000026c910 0000000000000010 t _mesa_is_format_etc2
000000000026c920 0000000000000010 t _mesa_is_format_astc_2d
000000000026c930 00000000000000d4 t _mesa_get_uncompressed_format
000000000026ca10 0000000000000098 t _mesa_format_num_components
000000000026cab0 00000000000000b8 t _mesa_format_has_color_component
000000000026cb70 0000000000000098 t _mesa_format_image_size
000000000026cc10 00000000000000b4 t _mesa_format_image_size64
000000000026ccd0 000000000000006c t _mesa_format_row_stride
000000000026cd40 00000000000004b4 t _mesa_uncompressed_format_to_type_and_comps
000000000026d200 0000000000000148 t _mesa_format_matches_format_and_type
000000000026d350 0000000000000140 t renderbuffer_exists.part.0
000000000026d490 00000000000001c0 t update_framebuffer
000000000026d650 0000000000000070 T _mesa_new_framebuffer
000000000026d6c0 0000000000000170 t _mesa_initialize_window_framebuffer
000000000026d830 0000000000000074 t _mesa_free_framebuffer_data
000000000026d8b0 0000000000000034 T _mesa_destroy_framebuffer
000000000026d8f0 0000000000000084 t _mesa_reference_framebuffer_
000000000026d980 00000000000000b0 t _mesa_intersect_scissor_bounding_box
000000000026da30 0000000000000128 t _mesa_resize_framebuffer
000000000026db60 0000000000000078 t _mesa_update_draw_buffer_bounds
000000000026dbe0 0000000000000260 t _mesa_update_framebuffer_visual
000000000026de40 000000000000005c t _mesa_update_framebuffer
000000000026dea0 0000000000000078 t _mesa_source_buffer_exists
000000000026df20 0000000000000078 t _mesa_dest_buffer_exists
000000000026dfa0 000000000000019c t _mesa_get_color_read_format
000000000026e140 0000000000000098 t _mesa_get_color_read_type
000000000026e1e0 0000000000000084 t _mesa_get_read_renderbuffer_for_format
000000000026e270 0000000000000044 t _mesa_is_multisample_enabled
000000000026e2c0 0000000000000024 t _mesa_is_alpha_test_enabled
000000000026e2f0 00000000000003c8 t _mesa_GetString
000000000026e6c0 00000000000001b8 T _mesa_GetStringi
000000000026e880 00000000000001e8 t _get_vao_pointerv
000000000026ea70 0000000000000060 T _mesa_GetPointerv
000000000026ead0 0000000000000064 T _mesa_GetPointerIndexedvEXT
000000000026eb40 0000000000000078 T _mesa_GetError
000000000026ebc0 00000000000001cc t get_map_idx
000000000026ed90 000000000000007c t _mesa_compute_component_mapping
000000000026ee10 000000000000009c t _mesa_type_is_packed
000000000026eeb0 00000000000000b8 t _mesa_sizeof_type
000000000026ef70 0000000000000170 t _mesa_sizeof_packed_type
000000000026f0e0 0000000000000180 t _mesa_components_in_format
000000000026f260 0000000000000300 t _mesa_bytes_per_pixel
000000000026f560 00000000000000e0 t _mesa_bytes_per_vertex_attrib
000000000026f640 00000000000000ec t _mesa_is_enum_format_unsized
000000000026f730 00000000000000fc t _mesa_is_enum_format_unorm
000000000026f830 0000000000000030 t _mesa_is_enum_format_snorm
000000000026f860 000000000000005c t _mesa_is_enum_format_unsigned_int
000000000026f8c0 000000000000004c t _mesa_is_enum_format_signed_int
000000000026f910 0000000000000064 t _mesa_is_astc_format
000000000026f980 0000000000000014 t _mesa_is_etc2_format
000000000026f9a0 00000000000000a8 t _mesa_is_enum_format_integer
000000000026fa50 0000000000000070 t _mesa_is_type_unsigned
000000000026fac0 000000000000027c t _mesa_is_color_format
000000000026fd40 0000000000000040 t _mesa_is_depth_format
000000000026fd80 0000000000000010 t _mesa_is_stencil_format
000000000026fd90 0000000000000010 t _mesa_is_ycbcr_format
000000000026fda0 0000000000000030 t _mesa_is_depthstencil_format
000000000026fdd0 000000000000008c t _mesa_is_depth_or_stencil_format
000000000026fe60 000000000000042c t _mesa_is_compressed_format
0000000000270290 0000000000000084 t _mesa_is_srgb_format
0000000000270320 00000000000000cc t _mesa_unpack_format_to_base_format
00000000002703f0 00000000000000cc t _mesa_base_format_to_integer_format
00000000002704c0 0000000000000298 t _mesa_base_format_has_channel
0000000000270760 00000000000000e4 t _mesa_generic_compressed_format_to_uncompressed_format
0000000000270850 00000000000001cc t _mesa_get_nongeneric_internalformat
0000000000270a20 0000000000000020 t _mesa_get_linear_internalformat
0000000000270a40 00000000000008ec t _mesa_error_check_format_and_type
0000000000271330 0000000000000214 t _mesa_es_error_check_format_and_type
0000000000271550 0000000000000b88 t _mesa_base_tex_format
00000000002720e0 0000000000001318 t _mesa_gles_error_check_format_and_type
0000000000273400 000000000000008c t _mesa_swap_bytes_in_type_enum
0000000000273490 0000000000001158 t _mesa_format_from_format_and_type
00000000002745f0 000000000000021c t _mesa_is_es3_color_renderable
0000000000274810 00000000000001ac t _mesa_is_es3_texture_filterable
00000000002749c0 000000000000000c t uint_key_compare
00000000002749d0 0000000000000004 t uint_key_hash
00000000002749e0 0000000000000088 t hash_walk_unlocked
0000000000274a70 0000000000000090 t _mesa_NewHashTable
0000000000274b00 0000000000000058 t _mesa_DeleteHashTable
0000000000274b60 0000000000000084 t _mesa_HashLookup
0000000000274bf0 0000000000000034 t _mesa_HashLookupLocked
0000000000274c30 0000000000000094 t _mesa_HashInsertLocked
0000000000274cd0 00000000000000ac t _mesa_HashInsert
0000000000274d80 0000000000000048 t _mesa_HashRemoveLocked
0000000000274dd0 0000000000000074 t _mesa_HashRemove
0000000000274e50 00000000000000ac t _mesa_HashDeleteAll
0000000000274f00 000000000000004c t _mesa_HashWalk
0000000000274f50 0000000000000004 t _mesa_HashWalkLocked
0000000000274f60 00000000000000d4 t _mesa_HashFindFreeKeyBlock
0000000000275040 0000000000000380 t _mesa_Hint
00000000002753c0 0000000000000040 T _mesa_MaxShaderCompilerThreadsKHR
0000000000275400 0000000000000028 t _mesa_init_hint
0000000000275430 0000000000000028 t _mesa_swap2
0000000000275460 0000000000000024 t _mesa_swap4
0000000000275490 0000000000000130 t _mesa_image_offset
00000000002755c0 0000000000000050 t _mesa_image_address
0000000000275610 0000000000000044 t _mesa_image_address2d
0000000000275660 00000000000000b4 t _mesa_image_row_stride
0000000000275720 00000000000000cc t _mesa_image_image_stride
00000000002757f0 00000000000001cc t _mesa_expand_bitmap
00000000002759c0 000000000000016c t _mesa_clip_drawpixels
0000000000275b30 00000000000000e8 t _mesa_clip_readpixels
0000000000275c20 00000000000000d4 t _mesa_clip_copytexsubimage
0000000000275d00 00000000000006c4 t _mesa_clip_blit
00000000002763d0 0000000000000130 t _mesa_swap_bytes_2d_image
0000000000276500 00000000000000b0 t update_modelview_scale
00000000002765b0 00000000000003fc t _mesa_update_material.part.0
00000000002769b0 0000000000000594 t compute_light_positions.part.0
0000000000276f50 00000000000000e4 t _mesa_ShadeModel
0000000000277040 00000000000000a8 t _mesa_ProvokingVertex
00000000002770f0 000000000000073c t _mesa_light
0000000000277830 00000000000002cc t _mesa_Lightfv
0000000000277b00 0000000000000024 t _mesa_Lightf
0000000000277b30 0000000000000148 t _mesa_Lightiv
0000000000277c80 0000000000000024 T _mesa_Lighti
0000000000277cb0 000000000000029c t _mesa_GetLightfv
0000000000277f50 00000000000002f0 T _mesa_GetLightiv
0000000000278240 00000000000002a0 t _mesa_LightModelfv
00000000002784e0 00000000000000ec t _mesa_LightModeliv
00000000002785d0 0000000000000024 T _mesa_LightModeli
0000000000278600 0000000000000024 t _mesa_LightModelf
0000000000278630 00000000000000f8 t _mesa_material_bitmask
0000000000278730 0000000000000060 t _mesa_update_color_material
0000000000278790 000000000000015c t _mesa_ColorMaterial
00000000002788f0 00000000000001ec t _mesa_GetMaterialfv
0000000000278ae0 0000000000000234 T _mesa_GetMaterialiv
0000000000278d20 00000000000000e8 t _mesa_update_lighting
0000000000278e10 0000000000000130 t _mesa_update_tnl_spaces
0000000000278f40 00000000000001f4 t _mesa_init_lighting
0000000000279140 00000000000000a0 T _mesa_LineWidth_no_error
00000000002791e0 00000000000000e8 t _mesa_LineWidth
00000000002792d0 00000000000000e8 t _mesa_LineStipple
00000000002793c0 000000000000001c t _mesa_init_line
00000000002793e0 0000000000000110 t get_named_matrix_stack
00000000002794f0 000000000000018c t push_matrix
0000000000279680 000000000000010c t matrix_load.constprop.0
0000000000279790 00000000000000d8 t _mesa_Frustum
0000000000279870 00000000000001e0 T _mesa_MatrixFrustumEXT
0000000000279a50 00000000000000c8 t _mesa_Ortho
0000000000279b20 00000000000001d0 T _mesa_MatrixOrthoEXT
0000000000279cf0 000000000000017c t _mesa_MatrixMode
0000000000279e70 0000000000000038 T _mesa_PushMatrix
0000000000279eb0 00000000000001a8 T _mesa_MatrixPushEXT
000000000027a060 00000000000000e4 T _mesa_PopMatrix
000000000027a150 00000000000001e4 T _mesa_MatrixPopEXT
000000000027a340 0000000000000064 T _mesa_LoadIdentity
000000000027a3b0 0000000000000184 T _mesa_MatrixLoadIdentityEXT
000000000027a540 0000000000000108 t _mesa_LoadMatrixf
000000000027a650 0000000000000130 T _mesa_MatrixLoadfEXT
000000000027a780 000000000000007c t _mesa_MultMatrixf
000000000027a800 0000000000000188 t _mesa_MatrixMultfEXT
000000000027a990 000000000000008c t _mesa_Rotatef
000000000027aa20 00000000000001b0 T _mesa_MatrixRotatefEXT
000000000027abd0 0000000000000078 t _mesa_Scalef
000000000027ac50 0000000000000184 t _mesa_MatrixScalefEXT
000000000027ade0 0000000000000078 t _mesa_Translatef
000000000027ae60 0000000000000184 t _mesa_MatrixTranslatefEXT
000000000027aff0 000000000000005c T _mesa_LoadMatrixd
000000000027b050 000000000000007c T _mesa_MatrixLoaddEXT
000000000027b0d0 0000000000000044 T _mesa_MultMatrixd
000000000027b120 0000000000000044 T _mesa_MatrixMultdEXT
000000000027b170 00000000000000b4 T _mesa_Rotated
000000000027b230 00000000000001c0 T _mesa_MatrixRotatedEXT
000000000027b3f0 0000000000000084 T _mesa_Scaled
000000000027b480 0000000000000010 T _mesa_MatrixScaledEXT
000000000027b490 0000000000000084 T _mesa_Translated
000000000027b520 0000000000000010 T _mesa_MatrixTranslatedEXT
000000000027b530 0000000000000050 T _mesa_LoadTransposeMatrixf
000000000027b580 000000000000005c T _mesa_MatrixLoadTransposefEXT
000000000027b5e0 0000000000000050 T _mesa_LoadTransposeMatrixd
000000000027b630 000000000000005c T _mesa_MatrixLoadTransposedEXT
000000000027b690 0000000000000038 T _mesa_MultTransposeMatrixf
000000000027b6d0 000000000000003c T _mesa_MatrixMultTransposefEXT
000000000027b710 0000000000000038 T _mesa_MultTransposeMatrixd
000000000027b750 000000000000003c T _mesa_MatrixMultTransposedEXT
000000000027b790 00000000000000cc t _mesa_update_modelview_project
000000000027b860 0000000000000164 t _mesa_init_matrix
000000000027b9d0 000000000000016c t _mesa_free_matrix_data
000000000027bb40 000000000000005c t _mesa_init_transform
000000000027bba0 00000000000000dc t _mesa_SampleCoverage
000000000027bc80 000000000000003c t _mesa_init_multisample
000000000027bcc0 0000000000000138 T _mesa_GetMultisamplefv
000000000027be00 0000000000000088 T _mesa_SampleMaski_no_error
000000000027be90 00000000000000d4 T _mesa_SampleMaski
000000000027bf70 00000000000000a4 T _mesa_MinSampleShading_no_error
000000000027c020 000000000000011c T _mesa_MinSampleShading
000000000027c140 00000000000001ec t _mesa_check_sample_count
000000000027c330 00000000000000ac t _mesa_AlphaToCoverageDitherControlNV
000000000027c3e0 0000000000000074 t flip_bytes
000000000027c460 000000000000048c t extract_uint_indexes
000000000027c8f0 0000000000000350 t _mesa_unpack_image.part.0
000000000027cc40 00000000000000e0 t convert_integer_luminance64
000000000027cd20 0000000000000074 t _mesa_unpack_polygon_stipple
000000000027cda0 00000000000001fc t _mesa_pack_bitmap
000000000027cfa0 0000000000000060 t _mesa_pack_polygon_stipple
000000000027d000 00000000000002d8 t _mesa_unpack_stencil_span
000000000027d2e0 00000000000003a8 t _mesa_pack_stencil_span
000000000027d690 00000000000008ac t _mesa_unpack_depth_span
000000000027df40 0000000000000388 t _mesa_pack_depth_span
000000000027e2d0 00000000000001e0 t _mesa_pack_depth_stencil_span
000000000027e4b0 0000000000000020 t _mesa_unpack_image
000000000027e4d0 0000000000000140 t _mesa_pack_luminance_from_rgba_float
000000000027e610 0000000000000280 t _mesa_pack_luminance_from_rgba_integer
000000000027e890 00000000000001a4 t _mesa_unpack_color_index_to_rgba_float
000000000027ea40 00000000000000e0 t _mesa_unpack_color_index_to_rgba_ubyte
000000000027eb20 0000000000000198 t _mesa_validate_pbo_access
000000000027ecc0 000000000000005c t _mesa_map_pbo_source
000000000027ed20 0000000000000110 t _mesa_validate_pbo_source
000000000027ee30 0000000000000088 t _mesa_validate_pbo_source_compressed
000000000027eec0 000000000000009c t _mesa_map_validate_pbo_source
000000000027ef60 0000000000000020 t _mesa_unmap_pbo_source
000000000027ef80 000000000000005c t _mesa_map_pbo_dest
000000000027efe0 000000000000015c t _mesa_map_validate_pbo_dest
000000000027f140 0000000000000020 t _mesa_unmap_pbo_dest
000000000027f160 00000000000000f4 t _mesa_validate_pbo_teximage
000000000027f260 00000000000000c0 t _mesa_validate_pbo_compressed_teximage
000000000027f320 0000000000000020 t _mesa_unmap_teximage_pbo
000000000027f340 0000000000000044 t free_performance_monitor
000000000027f390 0000000000000034 t _mesa_init_performance_monitors
000000000027f3d0 0000000000000034 t _mesa_free_performance_monitors
000000000027f410 00000000000000a4 T _mesa_GetPerfMonitorGroupsAMD
000000000027f4c0 00000000000000fc T _mesa_GetPerfMonitorCountersAMD
000000000027f5c0 00000000000000fc T _mesa_GetPerfMonitorGroupStringAMD
000000000027f6c0 000000000000013c T _mesa_GetPerfMonitorCounterStringAMD
000000000027f800 0000000000000194 T _mesa_GetPerfMonitorCounterInfoAMD
000000000027f9a0 0000000000000218 T _mesa_GenPerfMonitorsAMD
000000000027fbc0 0000000000000114 T _mesa_DeletePerfMonitorsAMD
000000000027fce0 000000000000021c T _mesa_SelectPerfMonitorCountersAMD
000000000027ff00 00000000000000c0 T _mesa_BeginPerfMonitorAMD
000000000027ffc0 000000000000009c T _mesa_EndPerfMonitorAMD
0000000000280060 0000000000000294 T _mesa_GetPerfMonitorCounterDataAMD
0000000000280300 0000000000000020 t free_performance_query
0000000000280320 0000000000000028 t _mesa_init_performance_queries
0000000000280350 0000000000000034 t _mesa_free_performance_queries
0000000000280390 000000000000008c T _mesa_GetFirstPerfQueryIdINTEL
0000000000280420 000000000000009c T _mesa_GetNextPerfQueryIdINTEL
00000000002804c0 0000000000000114 T _mesa_GetPerfQueryIdByNameINTEL
00000000002805e0 000000000000012c T _mesa_GetPerfQueryInfoINTEL
0000000000280710 0000000000000208 T _mesa_GetPerfCounterInfoINTEL
0000000000280920 000000000000011c T _mesa_CreatePerfQueryINTEL
0000000000280a40 000000000000011c T _mesa_BeginPerfQueryINTEL
0000000000280b60 00000000000000a0 t _mesa_EndPerfQueryINTEL
0000000000280c00 00000000000000d8 T _mesa_DeletePerfQueryINTEL
0000000000280ce0 00000000000001c4 T _mesa_GetPerfQueryDataINTEL
0000000000280eb0 0000000000000120 t create_program_pipelines
0000000000280fd0 0000000000000170 t use_program_stages
0000000000281140 0000000000000090 t _mesa_delete_pipeline_object
00000000002811d0 0000000000000008 t delete_pipelineobj_cb
00000000002811e0 00000000000000ac t _mesa_init_pipeline
0000000000281290 0000000000000068 t _mesa_free_pipeline_data
0000000000281300 0000000000000018 t _mesa_lookup_pipeline_object
0000000000281320 000000000000005c t _mesa_reference_pipeline_object_
0000000000281380 0000000000000088 T _mesa_UseProgramStages_no_error
0000000000281410 0000000000000268 T _mesa_UseProgramStages
0000000000281680 0000000000000098 T _mesa_ActiveShaderProgram_no_error
0000000000281720 0000000000000118 T _mesa_ActiveShaderProgram
0000000000281840 0000000000000190 t _mesa_bind_pipeline
00000000002819d0 0000000000000070 t _mesa_BindProgramPipeline_no_error
0000000000281a40 00000000000000cc t _mesa_BindProgramPipeline
0000000000281b10 00000000000000fc T _mesa_DeleteProgramPipelines
0000000000281c10 0000000000000030 T _mesa_GenProgramPipelines_no_error
0000000000281c40 0000000000000050 T _mesa_GenProgramPipelines
0000000000281c90 0000000000000030 T _mesa_CreateProgramPipelines_no_error
0000000000281cc0 0000000000000050 T _mesa_CreateProgramPipelines
0000000000281d10 0000000000000048 T _mesa_IsProgramPipeline
0000000000281d60 00000000000002cc T _mesa_GetProgramPipelineiv
0000000000282030 0000000000000284 t _mesa_validate_program_pipeline
00000000002822c0 0000000000000064 T _mesa_ValidateProgramPipeline
0000000000282330 00000000000000ac T _mesa_GetProgramPipelineInfoLog
00000000002823e0 00000000000000d0 t get_pixelmap
00000000002824b0 0000000000000104 t store_pixelmap
00000000002825c0 0000000000000120 t validate_pbo_access.constprop.0
00000000002826e0 0000000000000084 T _mesa_PixelZoom
0000000000282770 0000000000000150 T _mesa_PixelMapfv
00000000002828c0 00000000000001f4 T _mesa_PixelMapuiv
0000000000282ac0 00000000000001f4 T _mesa_PixelMapusv
0000000000282cc0 0000000000000160 t _mesa_GetnPixelMapfvARB
0000000000282e20 000000000000000c T _mesa_GetPixelMapfv
0000000000282e30 0000000000000160 t _mesa_GetnPixelMapuivARB
0000000000282f90 000000000000000c T _mesa_GetPixelMapuiv
0000000000282fa0 0000000000000210 t _mesa_GetnPixelMapusvARB
00000000002831b0 000000000000000c T _mesa_GetPixelMapusv
00000000002831c0 00000000000004ec t _mesa_PixelTransferf
00000000002836b0 0000000000000008 T _mesa_PixelTransferi
00000000002836c0 00000000000000a0 t _mesa_update_pixel
0000000000283760 00000000000000b0 t _mesa_init_pixel
0000000000283810 000000000000053c t _mesa_PixelStorei
0000000000283d50 0000000000000008 T _mesa_PixelStoref
0000000000283d60 0000000000000234 t _mesa_PixelStorei_no_error
0000000000283fa0 0000000000000008 T _mesa_PixelStoref_no_error
0000000000283fb0 00000000000000e8 t _mesa_init_pixelstore
00000000002840a0 00000000000000fc t _mesa_compressed_pixel_storage_error_check
00000000002841a0 0000000000000150 t _mesa_scale_and_bias_rgba
00000000002842f0 0000000000000150 t _mesa_map_rgba
0000000000284440 0000000000000098 t _mesa_map_ci_to_rgba
00000000002844e0 0000000000000050 t _mesa_scale_and_bias_depth
0000000000284530 0000000000000070 t _mesa_scale_and_bias_depth_uint
00000000002845a0 0000000000000120 t _mesa_apply_rgba_transfer_ops
00000000002846c0 00000000000000b0 t _mesa_shift_and_offset_ci
0000000000284770 0000000000000130 t _mesa_apply_stencil_transfer_ops
00000000002848a0 00000000000000a4 T _mesa_PointSize_no_error
0000000000284950 00000000000000c8 t _mesa_PointSize
0000000000284a20 00000000000003b0 t _mesa_PointParameterfv
0000000000284dd0 0000000000000028 t _mesa_PointParameteri
0000000000284e00 0000000000000040 T _mesa_PointParameteriv
0000000000284e40 0000000000000020 t _mesa_PointParameterf
0000000000284e60 0000000000000064 t _mesa_init_point
0000000000284ed0 00000000000000b0 T _mesa_CullFace_no_error
0000000000284f80 00000000000000e4 t _mesa_CullFace
0000000000285070 00000000000000b0 T _mesa_FrontFace_no_error
0000000000285120 00000000000000dc t _mesa_FrontFace
0000000000285200 0000000000000190 T _mesa_PolygonMode_no_error
0000000000285390 0000000000000210 t _mesa_PolygonMode
00000000002855a0 000000000000010c T _mesa_PolygonStipple
00000000002856b0 00000000000000a4 t _mesa_GetnPolygonStippleARB
0000000000285760 000000000000000c T _mesa_GetPolygonStipple
0000000000285770 00000000000000bc t _mesa_polygon_offset_clamp
0000000000285830 00000000000000c4 t _mesa_PolygonOffset
0000000000285900 00000000000000f0 T _mesa_PolygonOffsetClampEXT
00000000002859f0 0000000000000060 t _mesa_init_polygon
0000000000285a50 0000000000000014 t delete_queryobj_cb
0000000000285a70 0000000000000028 t _mesa_delete_query
0000000000285aa0 0000000000000120 t create_queries
0000000000285bc0 0000000000000370 t get_query_object
0000000000285f30 00000000000005c0 t get_query_binding_point
00000000002864f0 0000000000000030 T _mesa_GenQueries
0000000000286520 00000000000000d8 T _mesa_CreateQueries
0000000000286600 0000000000000128 T _mesa_DeleteQueries
0000000000286730 0000000000000074 T _mesa_IsQuery
00000000002867b0 0000000000000254 t _mesa_BeginQueryIndexed
0000000000286a10 0000000000000184 t _mesa_EndQueryIndexed
0000000000286ba0 000000000000000c T _mesa_BeginQuery
0000000000286bb0 0000000000000008 T _mesa_EndQuery
0000000000286bc0 000000000000016c T _mesa_QueryCounter
0000000000286d30 0000000000000494 t _mesa_GetQueryIndexediv
00000000002871d0 0000000000000010 T _mesa_GetQueryiv
00000000002871e0 0000000000000044 T _mesa_GetQueryObjectiv
0000000000287230 0000000000000044 T _mesa_GetQueryObjectuiv
0000000000287280 0000000000000044 T _mesa_GetQueryObjecti64v
00000000002872d0 0000000000000044 T _mesa_GetQueryObjectui64v
0000000000287320 000000000000008c T _mesa_GetQueryBufferObjectiv
00000000002873b0 000000000000008c T _mesa_GetQueryBufferObjectuiv
0000000000287440 000000000000008c T _mesa_GetQueryBufferObjecti64v
00000000002874d0 000000000000008c T _mesa_GetQueryBufferObjectui64v
0000000000287560 000000000000004c t _mesa_init_queryobj
00000000002875b0 0000000000000034 t _mesa_free_queryobj_data
00000000002875f0 0000000000000338 t window_pos3f
0000000000287930 00000000000000ac t rasterpos
00000000002879e0 0000000000000014 T _mesa_RasterPos2d
0000000000287a00 000000000000000c T _mesa_RasterPos2f
0000000000287a10 0000000000000014 T _mesa_RasterPos2i
0000000000287a30 000000000000001c T _mesa_RasterPos2s
0000000000287a50 0000000000000014 T _mesa_RasterPos3d
0000000000287a70 0000000000000008 T _mesa_RasterPos3f
0000000000287a80 0000000000000014 T _mesa_RasterPos3i
0000000000287aa0 0000000000000020 T _mesa_RasterPos3s
0000000000287ac0 0000000000000014 T _mesa_RasterPos4d
0000000000287ae0 0000000000000004 T _mesa_RasterPos4f
0000000000287af0 0000000000000014 T _mesa_RasterPos4i
0000000000287b10 0000000000000024 T _mesa_RasterPos4s
0000000000287b40 0000000000000018 T _mesa_RasterPos2dv
0000000000287b60 0000000000000010 T _mesa_RasterPos2fv
0000000000287b70 0000000000000018 T _mesa_RasterPos2iv
0000000000287b90 000000000000001c T _mesa_RasterPos2sv
0000000000287bb0 000000000000001c T _mesa_RasterPos3dv
0000000000287bd0 0000000000000010 T _mesa_RasterPos3fv
0000000000287be0 000000000000001c T _mesa_RasterPos3iv
0000000000287c00 0000000000000020 T _mesa_RasterPos3sv
0000000000287c20 000000000000001c T _mesa_RasterPos4dv
0000000000287c40 000000000000000c T _mesa_RasterPos4fv
0000000000287c50 000000000000001c T _mesa_RasterPos4iv
0000000000287c70 0000000000000024 T _mesa_RasterPos4sv
0000000000287ca0 0000000000000044 T _mesa_WindowPos2d
0000000000287cf0 000000000000003c T _mesa_WindowPos2f
0000000000287d30 0000000000000048 T _mesa_WindowPos2i
0000000000287d80 000000000000004c T _mesa_WindowPos2s
0000000000287dd0 0000000000000044 T _mesa_WindowPos3d
0000000000287e20 0000000000000038 T _mesa_WindowPos3f
0000000000287e60 0000000000000048 T _mesa_WindowPos3i
0000000000287eb0 0000000000000050 T _mesa_WindowPos3s
0000000000287f00 0000000000000050 T _mesa_WindowPos4dMESA
0000000000287f50 0000000000000040 T _mesa_WindowPos4fMESA
0000000000287f90 0000000000000054 T _mesa_WindowPos4iMESA
0000000000287ff0 0000000000000054 T _mesa_WindowPos4sMESA
0000000000288050 000000000000004c T _mesa_WindowPos2dv
00000000002880a0 0000000000000044 T _mesa_WindowPos2fv
00000000002880f0 000000000000004c T _mesa_WindowPos2iv
0000000000288140 0000000000000050 T _mesa_WindowPos2sv
0000000000288190 0000000000000050 T _mesa_WindowPos3dv
00000000002881e0 0000000000000044 T _mesa_WindowPos3fv
0000000000288230 0000000000000050 T _mesa_WindowPos3iv
0000000000288280 0000000000000054 T _mesa_WindowPos3sv
00000000002882e0 000000000000005c T _mesa_WindowPos4dvMESA
0000000000288340 000000000000004c T _mesa_WindowPos4fvMESA
0000000000288390 000000000000005c T _mesa_WindowPos4ivMESA
00000000002883f0 0000000000000060 T _mesa_WindowPos4svMESA
0000000000288450 0000000000000068 t _mesa_init_rastpos
00000000002884c0 0000000000000144 t _mesa_get_readpixels_transfer_ops
0000000000288610 0000000000000170 t _mesa_readpixels_needs_slow_path
0000000000288780 0000000000000ffc t _mesa_readpixels
0000000000289780 000000000000010c t _mesa_ReadnPixelsARB_no_error
0000000000289890 0000000000000750 t _mesa_ReadnPixelsARB
0000000000289fe0 000000000000000c T _mesa_ReadPixels_no_error
0000000000289ff0 000000000000000c T _mesa_ReadPixels
000000000028a000 0000000000000158 t _mesa_init_remap_table
000000000028a160 0000000000000030 t _mesa_delete_renderbuffer
000000000028a190 0000000000000084 t _mesa_init_renderbuffer
000000000028a220 0000000000000094 t _mesa_reference_renderbuffer_
000000000028a2c0 000000000000006c t _mesa_attach_and_own_rb
000000000028a330 0000000000000040 t _mesa_attach_and_reference_rb
000000000028a370 00000000000000d0 t set_scissor_no_notify
000000000028a440 0000000000000120 t scissor_array
000000000028a560 0000000000000130 T _mesa_Scissor_no_error
000000000028a690 0000000000000158 T _mesa_Scissor
000000000028a7f0 0000000000000104 t _mesa_set_scissor
000000000028a900 0000000000000034 T _mesa_ScissorArrayv_no_error
000000000028a940 00000000000000a8 T _mesa_ScissorArrayv
000000000028a9f0 0000000000000114 T _mesa_ScissorIndexed_no_error
000000000028ab10 00000000000000dc T _mesa_ScissorIndexed
000000000028abf0 0000000000000110 T _mesa_ScissorIndexedv_no_error
000000000028ad00 00000000000000d0 T _mesa_ScissorIndexedv
000000000028add0 000000000000017c t _mesa_WindowRectanglesEXT
000000000028af50 00000000000000d4 t _mesa_init_scissor
000000000028b030 000000000000008c t attach_shader
000000000028b0c0 00000000000000bc t get_attached_shaders
000000000028b180 00000000000000ec t attach_shader_err
000000000028b270 000000000000006c t create_shader_program
000000000028b2e0 0000000000000164 t detach_shader_error
000000000028b450 0000000000000114 t detach_shader_no_error
000000000028b570 000000000000016c t get_shaderiv
000000000028b6e0 0000000000000038 t destroy_shader_include
000000000028b720 000000000000025c t validate_and_tokenise_sh_incl
000000000028b980 00000000000001e0 t lookup_shader_include
000000000028bb60 0000000000000078 t copy_string
000000000028bbe0 00000000000001fc t _mesa_compile_shader.part.0
000000000028bde0 00000000000000cc t create_shader
000000000028beb0 0000000000000950 t get_programiv
000000000028c800 0000000000000144 t _mesa_get_shader_flags
000000000028c950 0000000000000054 t _mesa_get_shader_capture_path
000000000028c9b0 00000000000000b0 t _mesa_init_shader_state
000000000028ca60 00000000000000d0 t _mesa_free_shader_state
000000000028cb30 0000000000000050 t _mesa_copy_string
000000000028cb80 0000000000000198 t _mesa_validate_shader_target
000000000028cd20 0000000000000054 t _mesa_active_program
000000000028cd80 0000000000000058 T _mesa_AttachObjectARB_no_error
000000000028cde0 0000000000000034 T _mesa_AttachObjectARB
000000000028ce20 0000000000000058 T _mesa_AttachShader_no_error
000000000028ce80 0000000000000034 T _mesa_AttachShader
000000000028cec0 0000000000000078 T _mesa_CompileShader
000000000028cf40 0000000000000024 T _mesa_CreateShader_no_error
000000000028cf70 0000000000000080 T _mesa_CreateShader
000000000028cff0 0000000000000024 T _mesa_CreateShaderObjectARB_no_error
000000000028d020 0000000000000080 T _mesa_CreateShaderObjectARB
000000000028d0a0 0000000000000020 T _mesa_CreateProgram
000000000028d0c0 0000000000000020 T _mesa_CreateProgramObjectARB
000000000028d0e0 0000000000000104 T _mesa_DeleteObjectARB
000000000028d1f0 00000000000000bc T _mesa_DeleteProgram
000000000028d2b0 00000000000000bc T _mesa_DeleteShader
000000000028d370 000000000000002c T _mesa_DetachObjectARB_no_error
000000000028d3a0 000000000000002c T _mesa_DetachObjectARB
000000000028d3d0 000000000000002c T _mesa_DetachShader_no_error
000000000028d400 000000000000002c T _mesa_DetachShader
000000000028d430 0000000000000040 T _mesa_GetAttachedObjectsARB
000000000028d470 0000000000000040 T _mesa_GetAttachedShaders
000000000028d4b0 00000000000001a0 T _mesa_GetInfoLogARB
000000000028d650 00000000000000e8 T _mesa_GetObjectParameterivARB
000000000028d740 0000000000000108 T _mesa_GetObjectParameterfvARB
000000000028d850 0000000000000034 T _mesa_GetProgramiv
000000000028d890 0000000000000034 T _mesa_GetShaderiv
000000000028d8d0 00000000000000c0 T _mesa_GetProgramInfoLog
000000000028d990 00000000000000c0 T _mesa_GetShaderInfoLog
000000000028da50 00000000000000c0 T _mesa_GetShaderSource
000000000028db10 0000000000000064 T _mesa_GetHandleARB
000000000028db80 0000000000000030 T _mesa_IsProgram
000000000028dbb0 0000000000000030 T _mesa_IsShader
000000000028dbe0 00000000000001cc T _mesa_ShaderSource_no_error
000000000028ddb0 000000000000022c t _mesa_ShaderSource
000000000028dfe0 00000000000000d4 T _mesa_ValidateProgram
000000000028e0c0 0000000000000118 T _mesa_GetShaderPrecisionFormat
000000000028e1e0 0000000000000048 T _mesa_ReleaseShaderCompiler
000000000028e230 0000000000000174 T _mesa_ShaderBinary
000000000028e3b0 0000000000000124 T _mesa_GetProgramBinary
000000000028e4e0 0000000000000108 T _mesa_ProgramBinary
000000000028e5f0 0000000000000068 T _mesa_ProgramParameteri_no_error
000000000028e660 00000000000000f0 T _mesa_ProgramParameteri
000000000028e750 000000000000008c t _mesa_copy_linked_program_data
000000000028e7e0 0000000000000060 T _mesa_PatchParameteri_no_error
000000000028e840 00000000000000fc T _mesa_PatchParameteri
000000000028e940 0000000000000148 T _mesa_PatchParameterfv
000000000028ea90 000000000000011c T _mesa_GetSubroutineUniformLocation
000000000028ebb0 0000000000000160 T _mesa_GetSubroutineIndex
000000000028ed10 0000000000000288 T _mesa_GetActiveSubroutineUniformiv
000000000028efa0 000000000000015c T _mesa_GetActiveSubroutineUniformName
000000000028f100 000000000000015c T _mesa_GetActiveSubroutineName
000000000028f260 0000000000000294 T _mesa_UniformSubroutinesuiv
000000000028f500 0000000000000108 T _mesa_GetUniformSubroutineuiv
000000000028f610 00000000000002ac T _mesa_GetProgramStageiv
000000000028f8c0 000000000000004c t _mesa_init_shader_includes
000000000028f910 000000000000000c t _mesa_get_shader_include_cursor
000000000028f920 000000000000000c t _mesa_set_shader_include_cursor
000000000028f930 0000000000000034 t _mesa_destroy_shader_includes
000000000028f970 000000000000001c t _mesa_lookup_shader_include
000000000028f990 0000000000000220 T _mesa_NamedStringARB
000000000028fbb0 00000000000000d0 T _mesa_DeleteNamedStringARB
000000000028fc80 00000000000001ec T _mesa_CompileShaderIncludeARB
000000000028fe70 000000000000008c T _mesa_IsNamedStringARB
000000000028ff00 0000000000000108 T _mesa_GetNamedStringARB
0000000000290010 0000000000000140 T _mesa_GetNamedStringivARB
0000000000290150 00000000000000d0 t _mesa_shader_write_subroutine_indices
0000000000290220 00000000000000e4 t _mesa_program_init_subroutine_defaults
0000000000290310 0000000000000124 t _mesa_use_program
0000000000290440 000000000000035c t link_program_error.part.0
00000000002907a0 0000000000000220 T _mesa_CreateShaderProgramv
00000000002909c0 0000000000000088 T _mesa_LinkProgram
0000000000290a50 0000000000000378 T _mesa_LinkProgram_no_error
0000000000290dd0 000000000000007c t update_programs_in_pipeline
0000000000290e50 0000000000000088 t _mesa_use_shader_program
0000000000290ee0 0000000000000114 T _mesa_UseProgram_no_error
0000000000291000 0000000000000298 T _mesa_UseProgram
00000000002912a0 0000000000000248 t _mesa_get_shader_image_format
00000000002914f0 00000000000000b4 t set_image_binding
00000000002915b0 000000000000004c t _mesa_get_image_format_class
0000000000291600 000000000000018c t _mesa_is_shader_image_format_supported
0000000000291790 0000000000000050 t _mesa_default_image_unit
00000000002917e0 0000000000000098 t _mesa_init_image_units
0000000000291880 000000000000004c t _mesa_free_image_textures
00000000002918d0 00000000000001cc t _mesa_is_image_unit_valid
0000000000291aa0 00000000000000e4 T _mesa_BindImageTexture_no_error
0000000000291b90 0000000000000240 T _mesa_BindImageTexture
0000000000291dd0 000000000000018c T _mesa_BindImageTextureEXT
0000000000291f60 00000000000001a8 T _mesa_BindImageTextures_no_error
0000000000292110 00000000000002ec T _mesa_BindImageTextures
0000000000292400 00000000000000c4 t _mesa_reference_shader
00000000002924d0 0000000000000050 t _mesa_new_shader
0000000000292520 0000000000000044 t _mesa_delete_shader
0000000000292570 0000000000000048 t _mesa_delete_linked_shader
00000000002925c0 0000000000000048 t _mesa_lookup_shader
0000000000292610 000000000000008c t _mesa_lookup_shader_err
00000000002926a0 00000000000000a4 t _mesa_reference_shader_program_data
0000000000292750 0000000000000048 t _mesa_create_shader_program_data
00000000002927a0 00000000000000c8 t _mesa_new_shader_program
0000000000292870 00000000000000d0 t _mesa_clear_shader_program_data
0000000000292940 00000000000000e0 t _mesa_free_shader_program_data
0000000000292a20 00000000000000b0 t _mesa_reference_shader_program_
0000000000292ad0 0000000000000024 t _mesa_delete_shader_program
0000000000292b00 0000000000000048 t _mesa_lookup_shader_program
0000000000292b50 0000000000000094 t _mesa_lookup_shader_program_err
0000000000292bf0 000000000000012c t program_resource_location(gl_program_resource*, unsigned int)
0000000000292d20 0000000000000078 t compute_resource_key(unsigned int, char const*)
0000000000292da0 000000000000009c T _mesa_BindAttribLocation_no_error
0000000000292e40 000000000000012c T _mesa_BindAttribLocation
0000000000292f70 0000000000000068 t _mesa_count_active_attribs
0000000000292fe0 00000000000000c0 t _mesa_longest_attribute_name_length
00000000002930a0 00000000000000f4 T _mesa_BindFragDataLocation_no_error
00000000002931a0 00000000000001b8 t _mesa_BindFragDataLocationIndexed
0000000000293360 000000000000000c T _mesa_BindFragDataLocation
0000000000293370 00000000000000f4 T _mesa_BindFragDataLocationIndexed_no_error
0000000000293470 00000000000000a4 t _mesa_program_resource_name
0000000000293520 00000000000000b8 t _mesa_program_resource_array_size
00000000002935e0 0000000000000330 t _mesa_program_resource_find_name
0000000000293910 00000000000000a0 T _mesa_GetAttribLocation
00000000002939b0 00000000000000e0 T _mesa_GetFragDataLocation
0000000000293a90 00000000000000fc T _mesa_GetFragDataIndex
0000000000293b90 0000000000000108 t _mesa_program_resource_find_active_variable
0000000000293ca0 00000000000000a8 t _mesa_program_resource_index
0000000000293d50 000000000000011c t _mesa_program_resource_find_index
0000000000293e70 00000000000000ec t _mesa_program_resource_name_len
0000000000293f60 0000000000000170 t _mesa_get_program_resource_name
00000000002940d0 0000000000000030 t _mesa_program_resource_location
0000000000294100 0000000000000050 t _mesa_program_resource_location_index
0000000000294150 0000000000000a7c t _mesa_program_resource_prop
0000000000294bd0 0000000000000188 T _mesa_GetActiveAttrib
0000000000294d60 0000000000000144 t _mesa_get_program_resourceiv
0000000000294eb0 000000000000041c t _mesa_validate_pipeline_io
00000000002952d0 00000000000000a4 t _mesa_create_program_resource_hash
0000000000295380 0000000000000014 t delete_texture_cb
00000000002953a0 000000000000002c t delete_program_cb
00000000002953d0 000000000000001c t delete_framebuffer_cb
00000000002953f0 000000000000001c t delete_renderbuffer_cb
0000000000295410 0000000000000014 t delete_memory_object_cb
0000000000295430 0000000000000014 t delete_semaphore_object_cb
0000000000295450 0000000000000008 t delete_fragshader_cb
0000000000295460 0000000000000028 t delete_sampler_object_cb
0000000000295490 0000000000000040 t delete_bufferobj_cb
00000000002954d0 0000000000000048 t delete_shader_cb
0000000000295520 000000000000001c t free_shader_program_data_cb
0000000000295540 0000000000000008 t delete_bitmap_atlas_cb
0000000000295550 0000000000000008 t delete_displaylist_cb
0000000000295560 0000000000000194 t _mesa_alloc_shared_state
0000000000295700 0000000000000354 t _mesa_reference_shared_state
0000000000295a60 000000000000001c t _mesa_get_spirv_extension_count
0000000000295a80 00000000000000cc t _mesa_spirv_extensions_to_string
0000000000295b50 0000000000000044 t _mesa_get_enabled_spirv_extension
0000000000295ba0 0000000000000074 t _mesa_fill_supported_spirv_extensions
0000000000295c20 000000000000038c t update_program
0000000000295fb0 0000000000000120 t _mesa_update_allow_draw_out_of_order
00000000002960d0 000000000000030c t _mesa_update_state_locked
00000000002963e0 000000000000002c t _mesa_update_state
0000000000296410 000000000000002c t _mesa_set_vp_override
0000000000296440 00000000000000b0 t _mesa_update_vertex_processing_mode
00000000002964f0 0000000000000140 t _mesa_set_draw_vao
0000000000296630 0000000000000214 t stencil_func
0000000000296850 0000000000000208 t stencil_op
0000000000296a60 00000000000001b4 t stencil_op_separate
0000000000296c20 000000000000002c t _mesa_ClearStencil
0000000000296c50 000000000000018c T _mesa_StencilFuncSeparateATI
0000000000296de0 0000000000000034 T _mesa_StencilFunc_no_error
0000000000296e20 0000000000000050 T _mesa_StencilFunc
0000000000296e70 0000000000000178 T _mesa_StencilMask
0000000000296ff0 0000000000000034 T _mesa_StencilOp_no_error
0000000000297030 0000000000000114 T _mesa_StencilOp
0000000000297150 0000000000000078 t _mesa_ActiveStencilFaceEXT
00000000002971d0 000000000000003c T _mesa_StencilOpSeparate_no_error
0000000000297210 0000000000000140 t _mesa_StencilOpSeparate
0000000000297350 00000000000000f8 T _mesa_StencilFuncSeparate_no_error
0000000000297450 0000000000000144 t _mesa_StencilFuncSeparate
00000000002975a0 00000000000000c4 T _mesa_StencilMaskSeparate_no_error
0000000000297670 00000000000000ec t _mesa_StencilMaskSeparate
0000000000297760 0000000000000050 t _mesa_init_stencil
00000000002977b0 00000000000000a4 t fence_sync
0000000000297860 0000000000000004 t _mesa_init_sync
0000000000297870 0000000000000004 t _mesa_free_sync_data
0000000000297880 0000000000000090 t _mesa_get_and_ref_sync
0000000000297910 0000000000000090 t _mesa_unref_sync_object
00000000002979a0 0000000000000094 t client_wait_sync
0000000000297a40 00000000000000a4 T _mesa_IsSync
0000000000297af0 000000000000009c T _mesa_DeleteSync_no_error
0000000000297b90 00000000000000c4 T _mesa_DeleteSync
0000000000297c60 000000000000002c T _mesa_FenceSync_no_error
0000000000297c90 00000000000000a0 T _mesa_FenceSync
0000000000297d30 0000000000000090 T _mesa_ClientWaitSync_no_error
0000000000297dc0 0000000000000120 T _mesa_ClientWaitSync
0000000000297ee0 00000000000000a8 T _mesa_WaitSync_no_error
0000000000297f90 0000000000000118 T _mesa_WaitSync
00000000002980b0 00000000000001a4 T _mesa_GetSynciv
0000000000298260 000000000000032c t _mesa_gl_compressed_format_base_format
0000000000298590 00000000000005b8 t _mesa_get_compressed_formats
0000000000298b50 0000000000000460 t _mesa_glenum_to_compressed_format
0000000000298fb0 00000000000002e4 t _mesa_compressed_format_to_glenum
00000000002992a0 00000000000000a4 t _mesa_get_compressed_fetch_func
0000000000299350 00000000000000f4 t _mesa_decompress_image
0000000000299450 000000000000006c t write_bits
00000000002994c0 0000000000000070 t count_anchors_before_texel
0000000000299530 00000000000007f4 t texstore_bptc_rgb_float.constprop.0
0000000000299d30 00000000000005d8 t fetch_rgb_float_from_block
000000000029a310 0000000000000070 t fetch_bptc_rgb_unsigned_float
000000000029a380 0000000000000070 t fetch_bptc_rgb_signed_float
000000000029a3f0 000000000000093c t fetch_rgba_unorm_from_block
000000000029ad30 00000000000000c0 t fetch_bptc_rgba_unorm
000000000029adf0 00000000000000c4 t fetch_bptc_srgb_alpha_unorm
000000000029aec0 000000000000005c t _mesa_get_bptc_fetch_func
000000000029af20 00000000000008cc T _mesa_texstore_bptc_rgba_unorm
000000000029b7f0 0000000000000044 T _mesa_texstore_bptc_rgb_signed_float
000000000029b840 0000000000000040 T _mesa_texstore_bptc_rgb_unsigned_float
000000000029b880 000000000000013c t etc1_parse_block
000000000029b9c0 00000000000000c8 t etc1_fetch_texel
000000000029ba90 00000000000005ec t etc2_rgb8_parse_block
000000000029c080 000000000000005c t etc2_alpha8_parse_block
000000000029c0e0 00000000000000bc t fetch_etc1_rgb8
000000000029c1a0 0000000000000254 t etc2_rgb8_fetch_texel
000000000029c400 00000000000000d0 t fetch_etc2_srgb8_punchthrough_alpha1
000000000029c4d0 00000000000000cc t fetch_etc2_rgb8_punchthrough_alpha1
000000000029c5a0 00000000000000c4 t fetch_etc2_srgb8
000000000029c670 00000000000000c4 t fetch_etc2_rgb8
000000000029c740 00000000000000c8 t etc2_signed_r11_fetch_texel.isra.0
000000000029c810 000000000000011c t fetch_etc2_signed_rg11_eac
000000000029c930 00000000000000cc t fetch_etc2_signed_r11_eac
000000000029ca00 00000000000000a0 t etc2_r11_fetch_texel.isra.0
000000000029caa0 0000000000000108 t fetch_etc2_rg11_eac
000000000029cbb0 0000000000000090 t etc2_rgba8_fetch_texel
000000000029cc40 00000000000000e0 t fetch_etc2_srgb8_alpha8_eac
000000000029cd20 00000000000000dc t fetch_etc2_rgba8_eac
000000000029ce00 0000000000000180 t fetch_etc2_r11_eac
000000000029cf80 0000000000000008 T _mesa_texstore_etc1_rgb8
000000000029cf90 0000000000000128 t _mesa_etc1_unpack_rgba8888
000000000029d0c0 0000000000000008 T _mesa_texstore_etc2_rgb8
000000000029d0d0 0000000000000008 T _mesa_texstore_etc2_srgb8
000000000029d0e0 0000000000000008 T _mesa_texstore_etc2_rgba8_eac
000000000029d0f0 0000000000000008 T _mesa_texstore_etc2_srgb8_alpha8_eac
000000000029d100 0000000000000008 T _mesa_texstore_etc2_r11_eac
000000000029d110 0000000000000008 T _mesa_texstore_etc2_signed_r11_eac
000000000029d120 0000000000000008 T _mesa_texstore_etc2_rg11_eac
000000000029d130 0000000000000008 T _mesa_texstore_etc2_signed_rg11_eac
000000000029d140 0000000000000008 T _mesa_texstore_etc2_rgb8_punchthrough_alpha1
000000000029d150 0000000000000008 T _mesa_texstore_etc2_srgb8_punchthrough_alpha1
000000000029d160 0000000000000f4c t _mesa_unpack_etc2_format
000000000029e0b0 00000000000000e4 t _mesa_get_etc_fetch_func
000000000029e1a0 0000000000000100 t fxt1_decode_1HI
000000000029e2a0 0000000000000074 t fxt1_decode_1CHROMA
000000000029e320 0000000000000228 t fxt1_decode_1MIXED
000000000029e550 0000000000000210 t fxt1_decode_1ALPHA
000000000029e760 0000000000000078 t fxt1_decode_1
000000000029e7e0 0000000000000054 t fetch_rgb_fxt1
000000000029e840 000000000000005c t fetch_rgba_fxt1
000000000029e8a0 0000000000000080 t fxt1_variance.constprop.0
000000000029e920 0000000000001094 t fxt1_encode
000000000029f9c0 0000000000000198 T _mesa_texstore_rgb_fxt1
000000000029fb60 0000000000000174 T _mesa_texstore_rgba_fxt1
000000000029fce0 0000000000000028 t _mesa_get_fxt_fetch_func
000000000029fd10 00000000000000c0 t fetch_signed_la_latc2
000000000029fdd0 00000000000000c4 t fetch_signed_rg_rgtc2
000000000029fea0 0000000000000060 t fetch_signed_l_latc1
000000000029ff00 0000000000000068 t fetch_signed_red_rgtc1
000000000029ff70 0000000000000090 t fetch_la_latc2
00000000002a0000 0000000000000094 t fetch_rg_rgtc2
00000000002a00a0 0000000000000050 t fetch_l_latc1
00000000002a00f0 0000000000000054 t fetch_red_rgtc1
00000000002a0150 0000000000000240 T _mesa_texstore_red_rgtc1
00000000002a0390 0000000000000264 T _mesa_texstore_signed_red_rgtc1
00000000002a0600 00000000000002f0 T _mesa_texstore_rg_rgtc2
00000000002a08f0 000000000000033c T _mesa_texstore_signed_rg_rgtc2
00000000002a0c30 00000000000000b0 t _mesa_get_compressed_rgtc_func
00000000002a0ce0 00000000000001fc t dxt135_decode_imageblock
00000000002a0ee0 000000000000008c t fetch_2d_texel_rgba_dxt3
00000000002a0f70 0000000000000150 t fetch_2d_texel_rgba_dxt5
00000000002a10c0 0000000000000c44 t encodedxtcolorblockfaster
00000000002a1d10 00000000000000cc t writedxt5encodedalphablock
00000000002a1de0 00000000000000a0 t fetch_rgba_dxt1
00000000002a1e80 0000000000000060 t fetch_rgba_dxt3
00000000002a1ee0 0000000000000060 t fetch_rgba_dxt5
00000000002a1f40 00000000000000a4 t fetch_srgb_dxt1
00000000002a1ff0 0000000000000064 t fetch_srgba_dxt3
00000000002a2060 0000000000000064 t fetch_srgba_dxt5
00000000002a20d0 00000000000000a4 t fetch_srgba_dxt1
00000000002a2180 00000000000000a0 t fetch_rgb_dxt1
00000000002a2220 0000000000001234 t tx_compress_dxtn
00000000002a3460 000000000000017c T _mesa_texstore_rgb_dxt1
00000000002a35e0 000000000000017c T _mesa_texstore_rgba_dxt1
00000000002a3760 000000000000017c T _mesa_texstore_rgba_dxt3
00000000002a38e0 000000000000017c T _mesa_texstore_rgba_dxt5
00000000002a3a60 00000000000000ac t _mesa_get_dxt_fetch_func
00000000002a3b10 0000000000000078 t adjust_for_oes_float_texture
00000000002a3b90 00000000000000bc t strip_texture_border
00000000002a3c50 0000000000000110 t copytexsubimage_by_slice
00000000002a3d60 00000000000001b0 t get_proxy_tex_image
00000000002a3f10 00000000000000b8 t error_check_subtexture_negative_dimensions
00000000002a3fd0 00000000000000dc t check_texture_buffer_range
00000000002a40b0 00000000000000a0 t get_tex_images_for_clear
00000000002a4150 0000000000000144 t proxy_target
00000000002a42a0 00000000000000e0 t check_rtt_cb
00000000002a4380 00000000000000b0 t texture_format_error_check_gles
00000000002a4430 00000000000000fc t texture_formats_agree
00000000002a4530 0000000000000318 t error_check_subtexture_dimensions
00000000002a4850 0000000000000170 t lookup_texture_ext_dsa
00000000002a49c0 0000000000000100 t formats_differ_in_component_sizes
00000000002a4ac0 0000000000000298 t check_clear_tex_image
00000000002a4d60 0000000000000150 t compressed_texture_sub_image
00000000002a4eb0 00000000000001b8 t texture_sub_image
00000000002a5070 00000000000001c8 t texturesubimage_no_error.constprop.0
00000000002a5240 00000000000001f0 t copy_texture_sub_image
00000000002a5430 00000000000001c4 t legal_texsubimage_target
00000000002a5600 000000000000021c t legal_teximage_target
00000000002a5820 000000000000002c t _mesa_delete_texture_image
00000000002a5850 000000000000003c t _mesa_is_proxy_texture
00000000002a5890 000000000000003c t _mesa_is_array_texture
00000000002a58d0 0000000000000024 t _mesa_is_cube_map_texture
00000000002a5900 0000000000000028 t _mesa_select_tex_image
00000000002a5930 00000000000000c4 t _mesa_get_tex_image
00000000002a5a00 00000000000002a4 t egl_image_target_texture
00000000002a5cb0 0000000000000064 t egl_image_target_texture_storage
00000000002a5d20 0000000000000290 t _mesa_max_texture_levels
00000000002a5fb0 00000000000007c0 t compressed_tex_sub_image
00000000002a6770 0000000000000150 t _mesa_get_texture_dimensions
00000000002a68c0 0000000000000088 t _mesa_tex_target_is_layered
00000000002a6950 0000000000000090 t _mesa_get_texture_layers
00000000002a69e0 0000000000000110 t _mesa_get_tex_max_num_levels
00000000002a6af0 0000000000000298 t _mesa_init_teximage_fields_ms
00000000002a6d90 0000000000000028 t _mesa_init_teximage_fields
00000000002a6dc0 000000000000004c t _mesa_clear_texture_image
00000000002a6e10 0000000000000458 t _mesa_legal_texture_dimensions
00000000002a7270 00000000000006a4 t texture_image_multisample
00000000002a7920 0000000000000128 t _mesa_test_proxy_teximage
00000000002a7a50 000000000000008c t _mesa_format_no_online_compression
00000000002a7ae0 000000000000044c t texsubimage_error_check
00000000002a7f30 00000000000002f8 t texturesubimage_error
00000000002a8230 00000000000001a0 t texsubimage_err
00000000002a83d0 000000000000041c t copy_texture_sub_image_err
00000000002a87f0 0000000000000218 t _mesa_target_can_be_compressed
00000000002a8a10 0000000000000290 t compressed_texture_error_check
00000000002a8ca0 0000000000000698 t copytexture_error_check
00000000002a9340 0000000000000174 t _mesa_legal_texture_base_format_for_target
00000000002a94c0 0000000000000554 t texture_error_check
00000000002a9a20 0000000000000044 t _mesa_update_fbo_texture
00000000002a9a70 0000000000000078 t _mesa_choose_texture_format
00000000002a9af0 00000000000006d8 t teximage_err
00000000002aa1d0 0000000000000464 t teximage_no_error
00000000002aa640 00000000000005c8 t copyteximage_err
00000000002aac10 00000000000004c4 t copyteximage_no_error
00000000002ab0e0 0000000000000074 T _mesa_TexImage1D
00000000002ab160 0000000000000580 T _mesa_TextureImage1DEXT
00000000002ab6e0 0000000000000580 T _mesa_MultiTexImage1DEXT
00000000002abc60 0000000000000078 t _mesa_TexImage2D
00000000002abce0 00000000000005e0 T _mesa_TextureImage2DEXT
00000000002ac2c0 00000000000005e0 T _mesa_MultiTexImage2DEXT
00000000002ac8a0 0000000000000078 T _mesa_TexImage3D
00000000002ac920 00000000000005e4 T _mesa_TextureImage3DEXT
00000000002acf10 00000000000005e4 T _mesa_MultiTexImage3DEXT
00000000002ad500 0000000000000074 T _mesa_TexImage1D_no_error
00000000002ad580 0000000000000078 T _mesa_TexImage2D_no_error
00000000002ad600 0000000000000078 T _mesa_TexImage3D_no_error
00000000002ad680 0000000000000090 T _mesa_EGLImageTargetTexture2DOES
00000000002ad710 0000000000000094 T _mesa_EGLImageTargetTexStorageEXT
00000000002ad7b0 00000000000000f8 T _mesa_EGLImageTargetTextureStorageEXT
00000000002ad8b0 00000000000000d0 T _mesa_TexSubImage1D_no_error
00000000002ad980 0000000000000078 T _mesa_TexSubImage1D
00000000002ada00 00000000000000e4 T _mesa_TexSubImage2D_no_error
00000000002adaf0 0000000000000078 T _mesa_TexSubImage2D
00000000002adb70 00000000000000e8 T _mesa_TexSubImage3D_no_error
00000000002adc60 0000000000000084 T _mesa_TexSubImage3D
00000000002adcf0 0000000000000070 T _mesa_TextureSubImage1D_no_error
00000000002add60 0000000000000084 T _mesa_TextureSubImage1DEXT
00000000002addf0 00000000000000e4 T _mesa_MultiTexSubImage1DEXT
00000000002adee0 0000000000000080 T _mesa_TextureSubImage1D
00000000002adf60 0000000000000078 T _mesa_TextureSubImage2D_no_error
00000000002adfe0 0000000000000090 T _mesa_TextureSubImage2DEXT
00000000002ae070 00000000000000f0 T _mesa_MultiTexSubImage2DEXT
00000000002ae160 0000000000000088 T _mesa_TextureSubImage2D
00000000002ae1f0 000000000000007c T _mesa_TextureSubImage3D_no_error
00000000002ae270 0000000000000094 T _mesa_TextureSubImage3DEXT
00000000002ae310 00000000000000f4 T _mesa_MultiTexSubImage3DEXT
00000000002ae410 0000000000000088 T _mesa_TextureSubImage3D
00000000002ae4a0 0000000000000064 T _mesa_CopyTexImage1D
00000000002ae510 0000000000000588 T _mesa_CopyTextureImage1DEXT
00000000002aeaa0 0000000000000588 T _mesa_CopyMultiTexImage1DEXT
00000000002af030 0000000000000064 T _mesa_CopyTexImage2D
00000000002af0a0 00000000000005b0 T _mesa_CopyTextureImage2DEXT
00000000002af650 00000000000005ac T _mesa_CopyMultiTexImage2DEXT
00000000002afc00 0000000000000064 T _mesa_CopyTexImage1D_no_error
00000000002afc70 0000000000000064 T _mesa_CopyTexImage2D_no_error
00000000002afce0 0000000000000100 T _mesa_CopyTexSubImage1D
00000000002afde0 0000000000000198 T _mesa_CopyTexSubImage2D
00000000002aff80 0000000000000124 T _mesa_CopyTexSubImage3D
00000000002b00b0 0000000000000104 T _mesa_CopyTextureSubImage1D
00000000002b01c0 000000000000010c T _mesa_CopyTextureSubImage1DEXT
00000000002b02d0 00000000000000bc T _mesa_CopyMultiTexSubImage1DEXT
00000000002b0390 0000000000000128 T _mesa_CopyTextureSubImage2D
00000000002b04c0 0000000000000130 T _mesa_CopyTextureSubImage2DEXT
00000000002b05f0 00000000000000c4 T _mesa_CopyMultiTexSubImage2DEXT
00000000002b06c0 0000000000000194 T _mesa_CopyTextureSubImage3D
00000000002b0860 000000000000019c T _mesa_CopyTextureSubImage3DEXT
00000000002b0a00 0000000000000130 T _mesa_CopyMultiTexSubImage3DEXT
00000000002b0b30 00000000000000f0 T _mesa_CopyTexSubImage1D_no_error
00000000002b0c20 0000000000000100 T _mesa_CopyTexSubImage2D_no_error
00000000002b0d20 0000000000000104 T _mesa_CopyTexSubImage3D_no_error
00000000002b0e30 00000000000000f4 T _mesa_CopyTextureSubImage1D_no_error
00000000002b0f30 0000000000000104 T _mesa_CopyTextureSubImage2D_no_error
00000000002b1040 00000000000001c0 T _mesa_CopyTextureSubImage3D_no_error
00000000002b1200 0000000000000318 T _mesa_ClearTexSubImage
00000000002b1520 00000000000001c4 T _mesa_ClearTexImage
00000000002b16f0 0000000000000070 T _mesa_CompressedTexImage1D
00000000002b1760 00000000000004f4 T _mesa_CompressedTextureImage1DEXT
00000000002b1c60 00000000000004f4 T _mesa_CompressedMultiTexImage1DEXT
00000000002b2160 0000000000000074 T _mesa_CompressedTexImage2D
00000000002b21e0 000000000000058c T _mesa_CompressedTextureImage2DEXT
00000000002b2770 000000000000058c T _mesa_CompressedMultiTexImage2DEXT
00000000002b2d00 0000000000000074 T _mesa_CompressedTexImage3D
00000000002b2d80 0000000000000554 T _mesa_CompressedTextureImage3DEXT
00000000002b32e0 0000000000000554 T _mesa_CompressedMultiTexImage3DEXT
00000000002b3840 0000000000000070 T _mesa_CompressedTexImage1D_no_error
00000000002b38b0 0000000000000074 T _mesa_CompressedTexImage2D_no_error
00000000002b3930 0000000000000074 T _mesa_CompressedTexImage3D_no_error
00000000002b39b0 0000000000000068 T _mesa_CompressedTexSubImage1D_no_error
00000000002b3a20 0000000000000068 T _mesa_CompressedTexSubImage1D
00000000002b3a90 0000000000000068 T _mesa_CompressedTextureSubImage1D_no_error
00000000002b3b00 0000000000000068 T _mesa_CompressedTextureSubImage1D
00000000002b3b70 000000000000006c T _mesa_CompressedTextureSubImage1DEXT
00000000002b3be0 0000000000000070 T _mesa_CompressedMultiTexSubImage1DEXT
00000000002b3c50 000000000000006c T _mesa_CompressedTexSubImage2D_no_error
00000000002b3cc0 000000000000006c T _mesa_CompressedTexSubImage2D
00000000002b3d30 0000000000000078 T _mesa_CompressedTextureSubImage2DEXT
00000000002b3db0 000000000000007c T _mesa_CompressedMultiTexSubImage2DEXT
00000000002b3e30 0000000000000070 T _mesa_CompressedTextureSubImage2D_no_error
00000000002b3ea0 0000000000000070 T _mesa_CompressedTextureSubImage2D
00000000002b3f10 0000000000000074 T _mesa_CompressedTexSubImage3D_no_error
00000000002b3f90 0000000000000078 T _mesa_CompressedTexSubImage3D
00000000002b4010 0000000000000078 T _mesa_CompressedTextureSubImage3D_no_error
00000000002b4090 0000000000000078 T _mesa_CompressedTextureSubImage3D
00000000002b4110 0000000000000080 T _mesa_CompressedTextureSubImage3DEXT
00000000002b4190 0000000000000084 T _mesa_CompressedMultiTexSubImage3DEXT
00000000002b4220 00000000000004e8 t _mesa_get_texbuffer_format
00000000002b4710 000000000000009c t _mesa_validate_texbuffer_format
00000000002b47b0 0000000000000238 t texture_buffer_range
00000000002b49f0 00000000000000f8 T _mesa_TexBuffer
00000000002b4af0 000000000000010c T _mesa_TexBufferRange
00000000002b4c00 0000000000000144 T _mesa_TextureBufferRangeEXT
00000000002b4d50 000000000000010c T _mesa_TextureBuffer
00000000002b4e60 0000000000000114 T _mesa_TextureBufferEXT
00000000002b4f80 0000000000000114 T _mesa_MultiTexBufferEXT
00000000002b50a0 000000000000012c T _mesa_TextureBufferRange
00000000002b51d0 000000000000003c t _mesa_is_renderable_texture_format
00000000002b5210 00000000000000b4 T _mesa_TexImage2DMultisample
00000000002b52d0 00000000000000b4 T _mesa_TexImage3DMultisample
00000000002b5390 0000000000000110 T _mesa_TexStorage2DMultisample
00000000002b54a0 0000000000000114 T _mesa_TexStorage3DMultisample
00000000002b55c0 0000000000000114 T _mesa_TextureStorage2DMultisample
00000000002b56e0 0000000000000118 T _mesa_TextureStorage3DMultisample
00000000002b5800 0000000000000114 T _mesa_TextureStorage2DMultisampleEXT
00000000002b5920 0000000000000118 T _mesa_TextureStorage3DMultisampleEXT
00000000002b5a40 000000000000004c t _mesa_texture_storage_ms_memory
00000000002b5a90 0000000000000124 t finish_texture_init
00000000002b5bc0 00000000000000e0 t invalidate_tex_image_error_check
00000000002b5ca0 00000000000000a4 t unbind_texobj_from_fbo
00000000002b5d50 0000000000000100 t create_textures.part.0
00000000002b5e50 000000000000000c t _mesa_lookup_texture
00000000002b5e60 000000000000005c t _mesa_lookup_texture_err
00000000002b5ec0 000000000000000c t _mesa_lookup_texture_locked
00000000002b5ed0 0000000000000484 t _mesa_get_current_tex_object
00000000002b6360 00000000000000b0 t _mesa_delete_texture_object
00000000002b6410 000000000000010c t _mesa_copy_texture_object
00000000002b6520 0000000000000088 t _mesa_clear_texture_object
00000000002b65b0 00000000000000c0 t _mesa_reference_texobj_
00000000002b6670 00000000000000dc t unbind_texobj_from_texunits
00000000002b6750 00000000000001a0 t delete_textures
00000000002b68f0 00000000000001a8 t bind_texture_object
00000000002b6aa0 00000000000000ec t unbind_textures_from_unit
00000000002b6b90 00000000000003a8 t _mesa_test_texobj_completeness
00000000002b6f40 0000000000000090 t _mesa_cube_level_complete
00000000002b6fd0 000000000000009c t _mesa_cube_complete
00000000002b7070 0000000000000018 t _mesa_dirty_texobj
00000000002b7090 0000000000000218 t _mesa_get_fallback_texture
00000000002b72b0 0000000000000020 t _mesa_texture_base_format
00000000002b72d0 000000000000003c T _mesa_GenTextures_no_error
00000000002b7310 0000000000000060 T _mesa_GenTextures
00000000002b7370 0000000000000040 T _mesa_CreateTextures_no_error
00000000002b73b0 000000000000002c T _mesa_DeleteTextures_no_error
00000000002b73e0 0000000000000044 T _mesa_DeleteTextures
00000000002b7430 00000000000002f4 t _mesa_tex_target_to_index
00000000002b7730 00000000000000f4 t _mesa_get_texobj_by_target_and_texunit
00000000002b7830 000000000000014c t _mesa_initialize_texture_object
00000000002b7980 0000000000000054 t _mesa_new_texture_object
00000000002b79e0 000000000000009c T _mesa_CreateTextures
00000000002b7a80 0000000000000204 t _mesa_lookup_or_create_texture
00000000002b7c90 0000000000000070 T _mesa_BindTexture_no_error
00000000002b7d00 0000000000000070 t _mesa_BindTexture
00000000002b7d70 00000000000000b8 T _mesa_BindMultiTextureEXT
00000000002b7e30 000000000000005c T _mesa_BindTextureUnit_no_error
00000000002b7e90 00000000000000dc T _mesa_BindTextureUnit
00000000002b7f70 0000000000000124 T _mesa_BindTextures_no_error
00000000002b80a0 000000000000019c T _mesa_BindTextures
00000000002b8240 000000000000010c T _mesa_PrioritizeTextures
00000000002b8350 0000000000000110 T _mesa_AreTexturesResident
00000000002b8460 0000000000000098 T _mesa_IsTexture
00000000002b8500 0000000000000050 t _mesa_lock_context_textures
00000000002b8550 000000000000000c t _mesa_unlock_context_textures
00000000002b8560 0000000000000004 T _mesa_InvalidateTexSubImage_no_error
00000000002b8570 00000000000002d8 T _mesa_InvalidateTexSubImage
00000000002b8850 0000000000000004 T _mesa_InvalidateTexImage_no_error
00000000002b8860 0000000000000034 T _mesa_InvalidateTexImage
00000000002b88a0 00000000000000e8 t tex_combine_translate_mode
00000000002b8990 0000000000000230 t update_single_program_texture
00000000002b8bc0 00000000000002e8 t _mesa_copy_texture_state
00000000002b8eb0 00000000000000a0 t _mesa_ActiveTexture_no_error
00000000002b8f50 00000000000000f4 t _mesa_ActiveTexture
00000000002b9050 0000000000000080 t _mesa_ClientActiveTexture
00000000002b90d0 00000000000000cc t _mesa_update_texture_matrices
00000000002b91a0 0000000000000f84 t _mesa_update_texture_state
00000000002ba130 0000000000000278 t _mesa_init_texture
00000000002ba3b0 0000000000000110 t _mesa_free_texture_data
00000000002ba4c0 0000000000000098 t _mesa_update_default_objects_texture
00000000002ba560 00000000000002c8 t tex_storage_error_check
00000000002ba830 000000000000015c t initialize_texture_fields
00000000002ba990 0000000000000088 t update_fbo_texture
00000000002baa20 00000000000001e4 t legal_texobj_target
00000000002bac10 00000000000000d0 t clear_texture_fields
00000000002bace0 000000000000017c t texture_storage_no_error.constprop.0
00000000002bae60 00000000000002c8 t texture_storage_error.constprop.0
00000000002bb130 0000000000000110 t _mesa_is_legal_tex_storage_format
00000000002bb240 0000000000000134 t texstorage_error
00000000002bb380 0000000000000160 t texturestorage_error
00000000002bb4e0 0000000000000084 T _mesa_TexStorage1D_no_error
00000000002bb570 0000000000000030 T _mesa_TexStorage1D
00000000002bb5a0 000000000000008c T _mesa_TexStorage2D_no_error
00000000002bb630 0000000000000034 T _mesa_TexStorage2D
00000000002bb670 0000000000000094 T _mesa_TexStorage3D_no_error
00000000002bb710 0000000000000038 T _mesa_TexStorage3D
00000000002bb750 000000000000007c T _mesa_TextureStorage1D_no_error
00000000002bb7d0 0000000000000030 T _mesa_TextureStorage1D
00000000002bb800 000000000000008c T _mesa_TextureStorage2D_no_error
00000000002bb890 0000000000000034 T _mesa_TextureStorage2D
00000000002bb8d0 000000000000008c T _mesa_TextureStorage3D_no_error
00000000002bb960 0000000000000038 T _mesa_TextureStorage3D
00000000002bb9a0 000000000000009c T _mesa_TextureStorage1DEXT
00000000002bba40 00000000000000a0 T _mesa_TextureStorage2DEXT
00000000002bbae0 00000000000000b0 T _mesa_TextureStorage3DEXT
00000000002bbb90 0000000000000350 t _mesa_texture_storage_memory
00000000002bbee0 000000000000011c t _mesa_texstore_z32
00000000002bc000 000000000000013c t _mesa_texstore_z24_x8
00000000002bc140 0000000000000114 t _mesa_texstore_x8_z24
00000000002bc260 0000000000000114 t _mesa_texstore_z16
00000000002bc380 00000000000001bc t _mesa_texstore_z32f_x24s8
00000000002bc540 0000000000000184 t _mesa_texstore_s8
00000000002bc6d0 0000000000000290 t _mesa_texstore_s8_z24
00000000002bc960 0000000000000290 t _mesa_texstore_z24_s8
00000000002bcbf0 00000000000001ac t _mesa_memcpy_texture
00000000002bcda0 00000000000000a4 t _mesa_texstore_needs_transfer_ops
00000000002bce50 0000000000000118 t _mesa_texstore_can_use_memcpy
00000000002bcf70 000000000000086c t _mesa_texstore
00000000002bd7e0 0000000000000424 t store_texsubimage
00000000002bdc10 000000000000004c t _mesa_store_texsubimage
00000000002bdc60 0000000000000174 t _mesa_compute_compressed_pixelstore
00000000002bdde0 000000000000022c t _mesa_store_compressed_texsubimage
00000000002be010 0000000000000100 t make_texture_handle_resident
00000000002be110 00000000000000d0 t is_sampler_border_color_valid
00000000002be1e0 0000000000000308 t get_texture_handle
00000000002be4f0 00000000000002b8 t get_image_handle
00000000002be7b0 000000000000003c t _mesa_init_resident_handles
00000000002be7f0 0000000000000030 t _mesa_free_resident_handles
00000000002be820 0000000000000044 t _mesa_init_shared_handles
00000000002be870 0000000000000040 t _mesa_free_shared_handles
00000000002be8b0 000000000000001c t _mesa_init_texture_handles
00000000002be8d0 000000000000013c t _mesa_make_texture_handles_non_resident
00000000002bea10 00000000000001c8 t _mesa_delete_texture_handles
00000000002bebe0 000000000000000c t _mesa_init_sampler_handles
00000000002bebf0 0000000000000124 t _mesa_delete_sampler_handles
00000000002bed20 0000000000000134 T _mesa_GetTextureHandleARB_no_error
00000000002bee60 00000000000002b4 T _mesa_GetTextureHandleARB
00000000002bf120 0000000000000148 T _mesa_GetTextureSamplerHandleARB_no_error
00000000002bf270 00000000000002dc T _mesa_GetTextureSamplerHandleARB
00000000002bf550 0000000000000064 T _mesa_MakeTextureHandleResidentARB_no_error
00000000002bf5c0 000000000000012c T _mesa_MakeTextureHandleResidentARB
00000000002bf6f0 0000000000000064 T _mesa_MakeTextureHandleNonResidentARB_no_error
00000000002bf760 000000000000012c T _mesa_MakeTextureHandleNonResidentARB
00000000002bf890 000000000000014c T _mesa_GetImageHandleARB_no_error
00000000002bf9e0 00000000000003ac T _mesa_GetImageHandleARB
00000000002bfd90 00000000000000b4 T _mesa_MakeImageHandleResidentARB_no_error
00000000002bfe50 0000000000000198 T _mesa_MakeImageHandleResidentARB
00000000002bfff0 00000000000000ac T _mesa_MakeImageHandleNonResidentARB_no_error
00000000002c00a0 000000000000014c T _mesa_MakeImageHandleNonResidentARB
00000000002c01f0 0000000000000038 T _mesa_IsTextureHandleResidentARB_no_error
00000000002c0230 00000000000000fc T _mesa_IsTextureHandleResidentARB
00000000002c0330 0000000000000038 T _mesa_IsImageHandleResidentARB_no_error
00000000002c0370 0000000000000104 T _mesa_IsImageHandleResidentARB
00000000002c0480 000000000000016c t initialize_texture_fields
00000000002c05f0 000000000000018c t _mesa_texture_view_lookup_view_class
00000000002c0780 0000000000000054 t _mesa_texture_view_compatible_format
00000000002c07e0 0000000000000100 t _mesa_set_texture_view_state
00000000002c08e0 000000000000024c T _mesa_TextureView_no_error
00000000002c0b30 0000000000000770 T _mesa_TextureView
00000000002c12a0 0000000000000080 t reference_transform_feedback_object
00000000002c1320 0000000000000014 t delete_cb
00000000002c1340 000000000000004c t compute_transform_feedback_buffer_sizes
00000000002c1390 0000000000000060 t _mesa_delete_transform_feedback_object
00000000002c13f0 0000000000000088 t end_transform_feedback
00000000002c1480 0000000000000158 t create_transform_feedbacks
00000000002c15e0 0000000000000028 t active_xfb_object_references_program
00000000002c1610 0000000000000078 t _mesa_transform_feedback_is_using_program
00000000002c1690 0000000000000070 t _mesa_init_transform_feedback
00000000002c1700 000000000000006c t _mesa_free_transform_feedback
00000000002c1770 0000000000000010 t _mesa_init_transform_feedback_object
00000000002c1780 0000000000000198 T _mesa_BeginTransformFeedback_no_error
00000000002c1920 0000000000000288 T _mesa_BeginTransformFeedback
00000000002c1bb0 0000000000000028 T _mesa_EndTransformFeedback_no_error
00000000002c1be0 0000000000000044 T _mesa_EndTransformFeedback
00000000002c1c30 0000000000000130 t _mesa_validate_buffer_range_xfb
00000000002c1d60 000000000000013c t _mesa_bind_buffer_base_transform_feedback
00000000002c1ea0 00000000000000e4 T _mesa_TransformFeedbackBufferBase
00000000002c1f90 0000000000000184 T _mesa_TransformFeedbackBufferRange
00000000002c2120 00000000000000ec T _mesa_BindBufferOffsetEXT_no_error
00000000002c2210 00000000000001b8 T _mesa_BindBufferOffsetEXT
00000000002c23d0 0000000000000108 T _mesa_TransformFeedbackVaryings_no_error
00000000002c24e0 000000000000033c T _mesa_TransformFeedbackVaryings
00000000002c2820 0000000000000140 T _mesa_GetTransformFeedbackVarying
00000000002c2960 0000000000000018 t _mesa_lookup_transform_feedback_object
00000000002c2980 0000000000000030 T _mesa_GenTransformFeedbacks
00000000002c29b0 0000000000000030 T _mesa_CreateTransformFeedbacks
00000000002c29e0 0000000000000074 T _mesa_IsTransformFeedback
00000000002c2a60 00000000000000a4 T _mesa_BindTransformFeedback_no_error
00000000002c2b10 00000000000000d4 T _mesa_BindTransformFeedback
00000000002c2bf0 0000000000000130 T _mesa_DeleteTransformFeedbacks
00000000002c2d20 0000000000000080 T _mesa_PauseTransformFeedback_no_error
00000000002c2da0 00000000000000a0 T _mesa_PauseTransformFeedback
00000000002c2e40 000000000000007c T _mesa_ResumeTransformFeedback_no_error
00000000002c2ec0 00000000000000e0 T _mesa_ResumeTransformFeedback
00000000002c2fa0 00000000000000e4 T _mesa_GetTransformFeedbackiv
00000000002c3090 0000000000000110 T _mesa_GetTransformFeedbacki_v
00000000002c31a0 0000000000000170 T _mesa_GetTransformFeedbacki64_v
00000000002c3310 0000000000000140 t glsl_type_name(glsl_base_type)
00000000002c3450 000000000000012c t validate_uniform_parameters(int, int, unsigned int*, gl_context*, gl_shader_program*, char const*)
00000000002c3580 0000000000000134 t copy_uniform_matrix_to_storage(gl_constant_value*, int, void const*, unsigned int, unsigned int, unsigned int, unsigned int, bool, unsigned int, unsigned int, glsl_base_type) [clone .constprop.0]
00000000002c36c0 00000000000000c0 t copy_uniforms_to_storage(gl_constant_value*, gl_uniform_storage*, gl_context*, int, void const*, int, unsigned int, unsigned int, glsl_base_type) [clone .constprop.0] [clone .isra.0]
00000000002c3780 00000000000001b4 t log_uniform(void const*, glsl_base_type, unsigned int, unsigned int, unsigned int, bool, gl_shader_program const*, int, gl_uniform_storage const*) [clone .isra.0]
00000000002c3940 0000000000000160 T _mesa_GetActiveUniform
00000000002c3aa0 00000000000001e8 T _mesa_GetActiveUniformsiv
00000000002c3c90 0000000000000760 t _mesa_get_uniform
00000000002c43f0 0000000000000298 t _mesa_propagate_uniforms_to_driver_storage
00000000002c4690 00000000000000e8 t _mesa_flush_vertices_for_uniforms
00000000002c4780 00000000000006e0 t _mesa_uniform
00000000002c4e60 000000000000032c t _mesa_uniform_matrix
00000000002c5190 0000000000000344 t _mesa_uniform_handle
00000000002c54e0 0000000000000054 t _mesa_sampler_uniforms_are_valid
00000000002c5540 0000000000000108 t _mesa_sampler_uniforms_pipeline_are_valid
00000000002c5650 00000000000002e8 t mesa_bufferiv
00000000002c5940 00000000000002e0 t _mesa_update_shader_textures_used
00000000002c5c20 0000000000000078 t _mesa_uniform_attach_driver_storage
00000000002c5ca0 000000000000002c t _mesa_uniform_detach_all_driver_storage
00000000002c5cd0 0000000000000050 T _mesa_Uniform1f
00000000002c5d20 0000000000000050 T _mesa_Uniform2f
00000000002c5d70 0000000000000054 T _mesa_Uniform3f
00000000002c5dd0 0000000000000050 T _mesa_Uniform4f
00000000002c5e20 0000000000000050 T _mesa_Uniform1i
00000000002c5e70 0000000000000058 T _mesa_Uniform2i
00000000002c5ed0 0000000000000058 T _mesa_Uniform3i
00000000002c5f30 0000000000000058 T _mesa_Uniform4i
00000000002c5f90 0000000000000040 T _mesa_Uniform1fv
00000000002c5fd0 0000000000000040 T _mesa_Uniform2fv
00000000002c6010 0000000000000040 T _mesa_Uniform3fv
00000000002c6050 0000000000000040 T _mesa_Uniform4fv
00000000002c6090 0000000000000040 T _mesa_Uniform1iv
00000000002c60d0 0000000000000040 T _mesa_Uniform2iv
00000000002c6110 0000000000000040 T _mesa_Uniform3iv
00000000002c6150 0000000000000040 T _mesa_Uniform4iv
00000000002c6190 0000000000000048 T _mesa_UniformHandleui64ARB
00000000002c61e0 0000000000000038 T _mesa_UniformHandleui64vARB
00000000002c6220 0000000000000068 T _mesa_ProgramUniform1f
00000000002c6290 0000000000000068 T _mesa_ProgramUniform2f
00000000002c6300 000000000000006c T _mesa_ProgramUniform3f
00000000002c6370 000000000000006c T _mesa_ProgramUniform4f
00000000002c63e0 0000000000000068 T _mesa_ProgramUniform1i
00000000002c6450 000000000000006c T _mesa_ProgramUniform2i
00000000002c64c0 0000000000000070 T _mesa_ProgramUniform3i
00000000002c6530 000000000000006c T _mesa_ProgramUniform4i
00000000002c65a0 0000000000000070 T _mesa_ProgramUniform1fv
00000000002c6610 0000000000000070 T _mesa_ProgramUniform2fv
00000000002c6680 0000000000000070 T _mesa_ProgramUniform3fv
00000000002c66f0 0000000000000070 T _mesa_ProgramUniform4fv
00000000002c6760 0000000000000070 T _mesa_ProgramUniform1iv
00000000002c67d0 0000000000000070 T _mesa_ProgramUniform2iv
00000000002c6840 0000000000000070 T _mesa_ProgramUniform3iv
00000000002c68b0 0000000000000070 T _mesa_ProgramUniform4iv
00000000002c6920 0000000000000060 T _mesa_ProgramUniformHandleui64ARB
00000000002c6980 0000000000000068 T _mesa_ProgramUniformHandleui64vARB
00000000002c69f0 0000000000000050 T _mesa_Uniform1ui
00000000002c6a40 0000000000000054 T _mesa_Uniform2ui
00000000002c6aa0 000000000000005c T _mesa_Uniform3ui
00000000002c6b00 0000000000000058 T _mesa_Uniform4ui
00000000002c6b60 0000000000000040 T _mesa_Uniform1uiv
00000000002c6ba0 0000000000000040 T _mesa_Uniform2uiv
00000000002c6be0 0000000000000040 T _mesa_Uniform3uiv
00000000002c6c20 0000000000000040 T _mesa_Uniform4uiv
00000000002c6c60 0000000000000050 T _mesa_UniformMatrix2fv
00000000002c6cb0 0000000000000054 T _mesa_UniformMatrix3fv
00000000002c6d10 0000000000000054 T _mesa_UniformMatrix4fv
00000000002c6d70 0000000000000068 T _mesa_ProgramUniform1ui
00000000002c6de0 000000000000006c T _mesa_ProgramUniform2ui
00000000002c6e50 0000000000000070 T _mesa_ProgramUniform3ui
00000000002c6ec0 000000000000006c T _mesa_ProgramUniform4ui
00000000002c6f30 0000000000000070 T _mesa_ProgramUniform1uiv
00000000002c6fa0 0000000000000070 T _mesa_ProgramUniform2uiv
00000000002c7010 0000000000000070 T _mesa_ProgramUniform3uiv
00000000002c7080 0000000000000070 T _mesa_ProgramUniform4uiv
00000000002c70f0 0000000000000090 T _mesa_ProgramUniformMatrix2fv
00000000002c7180 0000000000000094 T _mesa_ProgramUniformMatrix3fv
00000000002c7220 0000000000000094 T _mesa_ProgramUniformMatrix4fv
00000000002c72c0 0000000000000050 T _mesa_UniformMatrix2x3fv
00000000002c7310 0000000000000050 T _mesa_UniformMatrix3x2fv
00000000002c7360 0000000000000050 T _mesa_UniformMatrix2x4fv
00000000002c73b0 0000000000000050 T _mesa_UniformMatrix4x2fv
00000000002c7400 0000000000000054 T _mesa_UniformMatrix3x4fv
00000000002c7460 0000000000000054 T _mesa_UniformMatrix4x3fv
00000000002c74c0 0000000000000090 T _mesa_ProgramUniformMatrix2x3fv
00000000002c7550 0000000000000090 T _mesa_ProgramUniformMatrix3x2fv
00000000002c75e0 0000000000000090 T _mesa_ProgramUniformMatrix2x4fv
00000000002c7670 0000000000000090 T _mesa_ProgramUniformMatrix4x2fv
00000000002c7700 0000000000000094 T _mesa_ProgramUniformMatrix3x4fv
00000000002c77a0 0000000000000094 T _mesa_ProgramUniformMatrix4x3fv
00000000002c7840 0000000000000040 T _mesa_GetnUniformfvARB
00000000002c7880 000000000000003c T _mesa_GetUniformfv
00000000002c78c0 0000000000000040 T _mesa_GetnUniformivARB
00000000002c7900 000000000000003c T _mesa_GetUniformiv
00000000002c7940 0000000000000040 T _mesa_GetnUniformuivARB
00000000002c7980 000000000000003c T _mesa_GetUniformuiv
00000000002c79c0 0000000000000040 T _mesa_GetnUniformdvARB
00000000002c7a00 000000000000003c T _mesa_GetUniformdv
00000000002c7a40 0000000000000040 T _mesa_GetnUniformi64vARB
00000000002c7a80 000000000000003c T _mesa_GetUniformi64vARB
00000000002c7ac0 0000000000000040 T _mesa_GetnUniformui64vARB
00000000002c7b00 000000000000003c T _mesa_GetUniformui64vARB
00000000002c7b40 0000000000000088 T _mesa_GetUniformLocation
00000000002c7bd0 0000000000000040 T _mesa_GetUniformLocation_no_error
00000000002c7c10 0000000000000090 T _mesa_GetUniformBlockIndex
00000000002c7ca0 00000000000000f4 T _mesa_GetUniformIndices
00000000002c7da0 00000000000000ac T _mesa_UniformBlockBinding_no_error
00000000002c7e50 0000000000000140 T _mesa_UniformBlockBinding
00000000002c7f90 00000000000000ac T _mesa_ShaderStorageBlockBinding_no_error
00000000002c8040 0000000000000140 T _mesa_ShaderStorageBlockBinding
00000000002c8180 00000000000000a0 T _mesa_GetActiveUniformBlockiv
00000000002c8220 00000000000000d4 T _mesa_GetActiveUniformBlockName
00000000002c8300 00000000000000d4 T _mesa_GetActiveUniformName
00000000002c83e0 00000000000000a0 T _mesa_GetActiveAtomicCounterBufferiv
00000000002c8480 0000000000000050 T _mesa_Uniform1d
00000000002c84d0 0000000000000050 T _mesa_Uniform2d
00000000002c8520 0000000000000054 T _mesa_Uniform3d
00000000002c8580 0000000000000054 T _mesa_Uniform4d
00000000002c85e0 0000000000000040 T _mesa_Uniform1dv
00000000002c8620 0000000000000040 T _mesa_Uniform2dv
00000000002c8660 0000000000000040 T _mesa_Uniform3dv
00000000002c86a0 0000000000000040 T _mesa_Uniform4dv
00000000002c86e0 0000000000000054 T _mesa_UniformMatrix2dv
00000000002c8740 0000000000000054 T _mesa_UniformMatrix3dv
00000000002c87a0 0000000000000050 T _mesa_UniformMatrix4dv
00000000002c87f0 0000000000000054 T _mesa_UniformMatrix2x3dv
00000000002c8850 0000000000000054 T _mesa_UniformMatrix3x2dv
00000000002c88b0 0000000000000050 T _mesa_UniformMatrix2x4dv
00000000002c8900 0000000000000050 T _mesa_UniformMatrix4x2dv
00000000002c8950 0000000000000050 T _mesa_UniformMatrix3x4dv
00000000002c89a0 0000000000000050 T _mesa_UniformMatrix4x3dv
00000000002c89f0 0000000000000068 T _mesa_ProgramUniform1d
00000000002c8a60 0000000000000068 T _mesa_ProgramUniform2d
00000000002c8ad0 000000000000006c T _mesa_ProgramUniform3d
00000000002c8b40 0000000000000078 T _mesa_ProgramUniform4d
00000000002c8bc0 0000000000000070 T _mesa_ProgramUniform1dv
00000000002c8c30 0000000000000070 T _mesa_ProgramUniform2dv
00000000002c8ca0 0000000000000070 T _mesa_ProgramUniform3dv
00000000002c8d10 0000000000000070 T _mesa_ProgramUniform4dv
00000000002c8d80 0000000000000094 T _mesa_ProgramUniformMatrix2dv
00000000002c8e20 0000000000000094 T _mesa_ProgramUniformMatrix3dv
00000000002c8ec0 0000000000000090 T _mesa_ProgramUniformMatrix4dv
00000000002c8f50 0000000000000094 T _mesa_ProgramUniformMatrix2x3dv
00000000002c8ff0 0000000000000094 T _mesa_ProgramUniformMatrix3x2dv
00000000002c9090 0000000000000090 T _mesa_ProgramUniformMatrix2x4dv
00000000002c9120 0000000000000090 T _mesa_ProgramUniformMatrix4x2dv
00000000002c91b0 0000000000000090 T _mesa_ProgramUniformMatrix3x4dv
00000000002c9240 0000000000000090 T _mesa_ProgramUniformMatrix4x3dv
00000000002c92d0 0000000000000050 T _mesa_Uniform1i64ARB
00000000002c9320 0000000000000054 T _mesa_Uniform2i64ARB
00000000002c9380 000000000000005c T _mesa_Uniform3i64ARB
00000000002c93e0 0000000000000060 T _mesa_Uniform4i64ARB
00000000002c9440 0000000000000040 T _mesa_Uniform1i64vARB
00000000002c9480 0000000000000040 T _mesa_Uniform2i64vARB
00000000002c94c0 0000000000000040 T _mesa_Uniform3i64vARB
00000000002c9500 0000000000000040 T _mesa_Uniform4i64vARB
00000000002c9540 0000000000000050 T _mesa_Uniform1ui64ARB
00000000002c9590 0000000000000054 T _mesa_Uniform2ui64ARB
00000000002c95f0 000000000000005c T _mesa_Uniform3ui64ARB
00000000002c9650 0000000000000060 T _mesa_Uniform4ui64ARB
00000000002c96b0 0000000000000040 T _mesa_Uniform1ui64vARB
00000000002c96f0 0000000000000040 T _mesa_Uniform2ui64vARB
00000000002c9730 0000000000000040 T _mesa_Uniform3ui64vARB
00000000002c9770 0000000000000040 T _mesa_Uniform4ui64vARB
00000000002c97b0 0000000000000068 T _mesa_ProgramUniform1i64ARB
00000000002c9820 0000000000000078 T _mesa_ProgramUniform2i64ARB
00000000002c98a0 0000000000000088 T _mesa_ProgramUniform3i64ARB
00000000002c9930 0000000000000090 T _mesa_ProgramUniform4i64ARB
00000000002c99c0 0000000000000070 T _mesa_ProgramUniform1i64vARB
00000000002c9a30 0000000000000070 T _mesa_ProgramUniform2i64vARB
00000000002c9aa0 0000000000000070 T _mesa_ProgramUniform3i64vARB
00000000002c9b10 0000000000000070 T _mesa_ProgramUniform4i64vARB
00000000002c9b80 0000000000000068 T _mesa_ProgramUniform1ui64ARB
00000000002c9bf0 0000000000000078 T _mesa_ProgramUniform2ui64ARB
00000000002c9c70 0000000000000088 T _mesa_ProgramUniform3ui64ARB
00000000002c9d00 0000000000000090 T _mesa_ProgramUniform4ui64ARB
00000000002c9d90 0000000000000070 T _mesa_ProgramUniform1ui64vARB
00000000002c9e00 0000000000000070 T _mesa_ProgramUniform2ui64vARB
00000000002c9e70 0000000000000070 T _mesa_ProgramUniform3ui64vARB
00000000002c9ee0 0000000000000070 T _mesa_ProgramUniform4ui64vARB
00000000002c9f50 00000000000002c0 t get_vertex_array_attrib
00000000002ca210 00000000000000a8 t get_current_attrib
00000000002ca2c0 0000000000000008 t delete_arrayobj_cb
00000000002ca2d0 00000000000000cc t _lookup_vao_and_vbo_dsa
00000000002ca3a0 00000000000003c0 t validate_array_format.constprop.0
00000000002ca760 0000000000000154 t validate_array_and_format.isra.0
00000000002ca8c0 00000000000000c4 t vertex_array_binding_divisor
00000000002ca990 00000000000000a0 t _mesa_vertex_attrib_binding
00000000002caa30 0000000000000074 t vertex_array_attrib_binding
00000000002caab0 0000000000000184 t _mesa_bind_vertex_buffer
00000000002cac40 00000000000001e0 t vertex_array_vertex_buffer_err.part.0
00000000002cae20 0000000000000274 t vertex_array_vertex_buffers_err.part.0
00000000002cb0a0 00000000000001a4 t _mesa_set_vertex_format
00000000002cb250 00000000000000b8 t _mesa_update_array_format
00000000002cb310 000000000000020c t vertex_attrib_format
00000000002cb520 00000000000001ec t vertex_array_attrib_format
00000000002cb710 0000000000000108 t update_array.constprop.0
00000000002cb820 0000000000000140 T _mesa_VertexPointer_no_error
00000000002cb960 00000000000000e8 t _mesa_VertexPointer
00000000002cba50 0000000000000160 T _mesa_VertexArrayVertexOffsetEXT
00000000002cbbb0 0000000000000140 T _mesa_NormalPointer_no_error
00000000002cbcf0 00000000000000e8 t _mesa_NormalPointer
00000000002cbde0 000000000000015c T _mesa_VertexArrayNormalOffsetEXT
00000000002cbf40 000000000000008c T _mesa_ColorPointer_no_error
00000000002cbfd0 0000000000000140 t _mesa_ColorPointer
00000000002cc110 00000000000001a4 T _mesa_VertexArrayColorOffsetEXT
00000000002cc2c0 0000000000000140 T _mesa_FogCoordPointer_no_error
00000000002cc400 00000000000000cc t _mesa_FogCoordPointer
00000000002cc4d0 0000000000000138 T _mesa_VertexArrayFogCoordOffsetEXT
00000000002cc610 0000000000000140 T _mesa_IndexPointer_no_error
00000000002cc750 00000000000000cc t _mesa_IndexPointer
00000000002cc820 0000000000000138 T _mesa_VertexArrayIndexOffsetEXT
00000000002cc960 000000000000008c T _mesa_SecondaryColorPointer_no_error
00000000002cc9f0 0000000000000104 t _mesa_SecondaryColorPointer
00000000002ccb00 0000000000000174 T _mesa_VertexArraySecondaryColorOffsetEXT
00000000002ccc80 0000000000000064 T _mesa_TexCoordPointer_no_error
00000000002cccf0 00000000000000f0 t _mesa_TexCoordPointer
00000000002ccde0 0000000000000158 T _mesa_VertexArrayTexCoordOffsetEXT
00000000002ccf40 0000000000000188 T _mesa_VertexArrayMultiTexCoordOffsetEXT
00000000002cd0d0 0000000000000138 T _mesa_EdgeFlagPointer_no_error
00000000002cd210 00000000000000cc t _mesa_EdgeFlagPointer
00000000002cd2e0 0000000000000130 T _mesa_VertexArrayEdgeFlagOffsetEXT
00000000002cd410 0000000000000140 T _mesa_PointSizePointerOES_no_error
00000000002cd550 0000000000000120 T _mesa_PointSizePointerOES
00000000002cd670 0000000000000088 T _mesa_VertexAttribPointer_no_error
00000000002cd700 0000000000000168 t _mesa_VertexAttribPointer
00000000002cd870 0000000000000184 T _mesa_VertexArrayVertexAttribOffsetEXT
00000000002cda00 0000000000000178 T _mesa_VertexArrayVertexAttribLOffsetEXT
00000000002cdb80 0000000000000068 T _mesa_VertexAttribIPointer_no_error
00000000002cdbf0 0000000000000130 T _mesa_VertexAttribIPointer
00000000002cdd20 0000000000000068 T _mesa_VertexAttribLPointer_no_error
00000000002cdd90 0000000000000178 T _mesa_VertexArrayVertexAttribIOffsetEXT
00000000002cdf10 0000000000000130 T _mesa_VertexAttribLPointer
00000000002ce040 000000000000004c t _mesa_enable_vertex_array_attribs
00000000002ce090 00000000000000ac T _mesa_EnableVertexAttribArray
00000000002ce140 0000000000000080 T _mesa_EnableVertexAttribArray_no_error
00000000002ce1c0 00000000000000b0 T _mesa_EnableVertexArrayAttrib
00000000002ce270 00000000000000b0 T _mesa_EnableVertexArrayAttribEXT
00000000002ce320 0000000000000090 T _mesa_EnableVertexArrayAttrib_no_error
00000000002ce3b0 000000000000004c t _mesa_disable_vertex_array_attribs
00000000002ce400 00000000000000a4 t _mesa_DisableVertexAttribArray
00000000002ce4b0 0000000000000080 T _mesa_DisableVertexAttribArray_no_error
00000000002ce530 0000000000000098 T _mesa_DisableVertexArrayAttrib
00000000002ce5d0 0000000000000098 T _mesa_DisableVertexArrayAttribEXT
00000000002ce670 0000000000000090 T _mesa_DisableVertexArrayAttrib_no_error
00000000002ce700 00000000000000a0 T _mesa_GetVertexAttribfv
00000000002ce7a0 00000000000000a0 T _mesa_GetVertexAttribdv
00000000002ce840 00000000000000a0 T _mesa_GetVertexAttribLdv
00000000002ce8e0 000000000000009c T _mesa_GetVertexAttribiv
00000000002ce980 00000000000000a0 T _mesa_GetVertexAttribLui64vARB
00000000002cea20 000000000000009c T _mesa_GetVertexAttribIiv
00000000002ceac0 000000000000009c T _mesa_GetVertexAttribIuiv
00000000002ceb60 0000000000000080 T _mesa_GetVertexAttribPointerv
00000000002cebe0 0000000000000160 T _mesa_GetVertexArrayIndexediv
00000000002ced40 00000000000000d0 T _mesa_GetVertexArrayIndexed64iv
00000000002cee10 0000000000000008 T _mesa_VertexPointerEXT
00000000002cee20 0000000000000008 T _mesa_NormalPointerEXT
00000000002cee30 0000000000000008 T _mesa_ColorPointerEXT
00000000002cee40 0000000000000008 T _mesa_IndexPointerEXT
00000000002cee50 0000000000000008 T _mesa_TexCoordPointerEXT
00000000002cee60 00000000000000e0 T _mesa_MultiTexCoordPointerEXT
00000000002cef40 0000000000000008 T _mesa_EdgeFlagPointerEXT
00000000002cef50 00000000000001d8 T _mesa_InterleavedArrays
00000000002cf130 0000000000000080 T _mesa_LockArraysEXT
00000000002cf1b0 000000000000004c T _mesa_UnlockArraysEXT
00000000002cf200 000000000000002c t _mesa_PrimitiveRestartIndex_no_error
00000000002cf230 000000000000005c T _mesa_PrimitiveRestartIndex
00000000002cf290 0000000000000098 T _mesa_VertexAttribDivisor_no_error
00000000002cf330 00000000000000dc T _mesa_VertexAttribDivisor
00000000002cf410 0000000000000128 T _mesa_VertexArrayVertexAttribDivisorEXT
00000000002cf540 00000000000000e4 T _mesa_BindVertexBuffer_no_error
00000000002cf630 00000000000000b0 T _mesa_BindVertexBuffer
00000000002cf6e0 00000000000000f8 T _mesa_VertexArrayVertexBuffer_no_error
00000000002cf7e0 00000000000000d0 T _mesa_VertexArrayVertexBuffer
00000000002cf8b0 00000000000000d0 T _mesa_VertexArrayBindVertexBufferEXT
00000000002cf980 0000000000000190 T _mesa_BindVertexBuffers_no_error
00000000002cfb10 000000000000009c T _mesa_BindVertexBuffers
00000000002cfbb0 00000000000001a0 T _mesa_VertexArrayVertexBuffers_no_error
00000000002cfd50 00000000000000e8 T _mesa_VertexArrayVertexBuffers
00000000002cfe40 000000000000003c T _mesa_VertexAttribFormat
00000000002cfe80 0000000000000040 T _mesa_VertexAttribIFormat
00000000002cfec0 0000000000000040 T _mesa_VertexAttribLFormat
00000000002cff00 0000000000000060 T _mesa_VertexArrayAttribFormat
00000000002cff60 0000000000000060 T _mesa_VertexArrayVertexAttribFormatEXT
00000000002cffc0 000000000000005c T _mesa_VertexArrayAttribIFormat
00000000002d0020 000000000000005c T _mesa_VertexArrayVertexAttribIFormatEXT
00000000002d0080 000000000000005c T _mesa_VertexArrayAttribLFormat
00000000002d00e0 000000000000005c T _mesa_VertexArrayVertexAttribLFormatEXT
00000000002d0140 0000000000000034 T _mesa_VertexAttribBinding_no_error
00000000002d0180 00000000000000f8 T _mesa_VertexAttribBinding
00000000002d0280 0000000000000058 T _mesa_VertexArrayAttribBinding_no_error
00000000002d02e0 0000000000000080 T _mesa_VertexArrayAttribBinding
00000000002d0360 0000000000000080 T _mesa_VertexArrayVertexAttribBindingEXT
00000000002d03e0 0000000000000088 T _mesa_VertexBindingDivisor_no_error
00000000002d0470 0000000000000144 T _mesa_VertexBindingDivisor
00000000002d05c0 0000000000000094 T _mesa_VertexArrayBindingDivisor_no_error
00000000002d0660 0000000000000080 T _mesa_VertexArrayBindingDivisor
00000000002d06e0 0000000000000080 T _mesa_VertexArrayVertexBindingDivisorEXT
00000000002d0760 000000000000003c t _mesa_copy_vertex_attrib_array
00000000002d07a0 0000000000000040 t _mesa_copy_vertex_buffer_binding
00000000002d07e0 0000000000000370 t _mesa_init_varray
00000000002d0b50 0000000000000034 t _mesa_free_varray_data
00000000002d0b90 0000000000000464 T _mesa_GetVertexArrayIntegervEXT
00000000002d1000 00000000000000c4 T _mesa_GetVertexArrayPointervEXT
00000000002d10d0 0000000000000194 T _mesa_GetVertexArrayIntegeri_vEXT
00000000002d1270 00000000000000f4 T _mesa_GetVertexArrayPointeri_vEXT
00000000002d1370 00000000000000b8 t create_version_string
00000000002d1430 0000000000000220 t get_gl_override
00000000002d1650 00000000000000c4 t _mesa_override_gl_version_contextless
00000000002d1720 00000000000000e0 t _mesa_override_gl_version
00000000002d1800 000000000000007c t _mesa_override_glsl_version
00000000002d1880 00000000000008ac t _mesa_get_version
00000000002d2130 00000000000001cc t _mesa_compute_version
00000000002d2300 0000000000000010 t _mesa_get_driver_uuid
00000000002d2310 0000000000000010 t _mesa_get_device_uuid
00000000002d2320 00000000000004f0 t _mesa_get_shading_language_version
00000000002d2810 0000000000000108 t clamp_viewport
00000000002d2920 00000000000000e8 t set_depth_range_no_notify
00000000002d2a10 0000000000000150 t viewport_array
00000000002d2b60 000000000000013c t viewport
00000000002d2ca0 000000000000003c T _mesa_Viewport_no_error
00000000002d2ce0 0000000000000060 T _mesa_Viewport
00000000002d2d40 000000000000010c t _mesa_set_viewport
00000000002d2e50 0000000000000034 T _mesa_ViewportArrayv_no_error
00000000002d2e90 00000000000000b4 T _mesa_ViewportArrayv
00000000002d2f50 0000000000000024 T _mesa_ViewportIndexedf_no_error
00000000002d2f80 0000000000000090 T _mesa_ViewportIndexedf
00000000002d3010 0000000000000030 T _mesa_ViewportIndexedfv_no_error
00000000002d3040 000000000000009c T _mesa_ViewportIndexedfv
00000000002d30e0 0000000000000108 t _mesa_set_depth_range
00000000002d31f0 0000000000000148 T _mesa_DepthRange
00000000002d3340 0000000000000120 t _mesa_DepthRangef
00000000002d3460 0000000000000158 T _mesa_DepthRangeArrayv_no_error
00000000002d35c0 000000000000018c T _mesa_DepthRangeArrayv
00000000002d3750 000000000000017c T _mesa_DepthRangeArrayfvOES
00000000002d38d0 0000000000000128 T _mesa_DepthRangeIndexed_no_error
00000000002d3a00 0000000000000080 T _mesa_DepthRangeIndexed
00000000002d3a80 0000000000000088 T _mesa_DepthRangeIndexedfOES
00000000002d3b10 0000000000000074 t _mesa_init_viewport
00000000002d3b90 0000000000000128 T _mesa_ClipControl_no_error
00000000002d3cc0 00000000000001b4 t _mesa_ClipControl
00000000002d3e80 00000000000000a4 t _mesa_get_viewport_xform
00000000002d3f30 0000000000000074 T _mesa_SubpixelPrecisionBiasNV_no_error
00000000002d3fb0 00000000000000ec t _mesa_SubpixelPrecisionBiasNV
00000000002d40a0 00000000000000d8 T _mesa_ViewportSwizzleNV_no_error
00000000002d4180 00000000000001bc T _mesa_ViewportSwizzleNV
00000000002d4340 00000000000000cc t matmul4
00000000002d4410 00000000000000c4 t matmul34
00000000002d44e0 0000000000000734 t invert_matrix_general
00000000002d4c20 000000000000008c t invert_matrix_2d_no_rot
00000000002d4cb0 00000000000000ac t invert_matrix_3d_no_rot
00000000002d4d60 0000000000000028 t invert_matrix_identity
00000000002d4d90 0000000000000464 t invert_matrix_3d
00000000002d5200 000000000000003c t _math_matrix_mul_matrix
00000000002d5240 0000000000000024 t _math_matrix_mul_floats
00000000002d5270 000000000000023c t _math_matrix_rotate
00000000002d54b0 00000000000000a0 t _math_matrix_frustum
00000000002d5550 00000000000000b8 t _math_matrix_ortho
00000000002d5610 00000000000000b0 t _math_matrix_scale
00000000002d56c0 00000000000000a4 t _math_matrix_translate
00000000002d5770 000000000000003c t _math_matrix_set_identity
00000000002d57b0 0000000000000590 t _math_matrix_analyse
00000000002d5d40 0000000000000014 t _math_matrix_is_length_preserving
00000000002d5d60 0000000000000010 t _math_matrix_is_dirty
00000000002d5d70 000000000000003c t _math_matrix_copy
00000000002d5db0 0000000000000020 t _math_matrix_loadf
00000000002d5dd0 000000000000007c t _math_matrix_ctr
00000000002d5e50 0000000000000034 t _math_matrix_dtr
00000000002d5e90 0000000000000084 t _math_transposef
00000000002d5f20 000000000000009c t _math_transposefd
00000000002d5fc0 00000000000000b0 t _mesa_transform_vector
00000000002d6070 0000000000000010 t _vbo_install_exec_vtxfmt
00000000002d6080 0000000000000018 t vbo_exec_update_eval_maps
00000000002d60a0 0000000000000234 t _vbo_CreateContext
00000000002d62e0 000000000000008c t _vbo_DestroyContext
00000000002d6370 0000000000000030 t _vbo_current_attrib
00000000002d63a0 0000000000000140 t vbo_exec_wrap_buffers
00000000002d64e0 0000000000000070 t vbo_exec_vtx_wrap
00000000002d6550 0000000000000204 t vbo_exec_End
00000000002d6760 0000000000000278 t vbo_exec_copy_to_current
00000000002d69e0 0000000000000568 t vbo_exec_wrap_upgrade_vertex
00000000002d6f50 00000000000000b0 t vbo_exec_fixup_vertex
00000000002d7000 00000000000001b4 t vbo_exec_TexCoordP4uiv
00000000002d71c0 0000000000000184 t vbo_exec_TexCoordP4ui
00000000002d7350 000000000000016c t vbo_exec_TexCoordP3uiv
00000000002d74c0 000000000000016c t vbo_exec_TexCoordP3ui
00000000002d7630 0000000000000148 t vbo_exec_TexCoordP2uiv
00000000002d7780 0000000000000150 t vbo_exec_TexCoordP2ui
00000000002d78d0 0000000000000124 t vbo_exec_TexCoordP1uiv
00000000002d7a00 0000000000000118 t vbo_exec_TexCoordP1ui
00000000002d7b20 0000000000000094 t vbo_exec_Indexfv
00000000002d7bc0 000000000000008c t vbo_exec_Indexf
00000000002d7c50 0000000000000094 t vbo_exec_EdgeFlag
00000000002d7cf0 00000000000007f0 t vbo_exec_Materialfv
00000000002d84e0 000000000000009c t vbo_exec_TexCoord4fv
00000000002d8580 00000000000000a8 t vbo_exec_TexCoord4f
00000000002d8630 000000000000009c t vbo_exec_TexCoord3fv
00000000002d86d0 00000000000000a0 t vbo_exec_TexCoord3f
00000000002d8770 0000000000000094 t vbo_exec_TexCoord2fv
00000000002d8810 0000000000000094 t vbo_exec_TexCoord2f
00000000002d88b0 0000000000000094 t vbo_exec_TexCoord1fv
00000000002d8950 000000000000008c t vbo_exec_TexCoord1f
00000000002d89e0 000000000000009c t vbo_exec_SecondaryColor3fvEXT
00000000002d8a80 00000000000000a0 t vbo_exec_SecondaryColor3fEXT
00000000002d8b20 000000000000009c t vbo_exec_Normal3fv
00000000002d8bc0 00000000000000a0 t vbo_exec_Normal3f
00000000002d8c60 0000000000000094 t vbo_exec_FogCoordfvEXT
00000000002d8d00 000000000000008c t vbo_exec_FogCoordfEXT
00000000002d8d90 000000000000009c t vbo_exec_Color4fv
00000000002d8e30 00000000000000a8 t vbo_exec_Color4f
00000000002d8ee0 000000000000009c t vbo_exec_Color3fv
00000000002d8f80 00000000000000a0 t vbo_exec_Color3f
00000000002d9020 00000000000001cc t vbo_exec_MultiTexCoordP4uiv
00000000002d91f0 000000000000019c t vbo_exec_MultiTexCoordP4ui
00000000002d9390 0000000000000184 t vbo_exec_MultiTexCoordP3uiv
00000000002d9520 0000000000000184 t vbo_exec_MultiTexCoordP3ui
00000000002d96b0 0000000000000160 t vbo_exec_MultiTexCoordP2uiv
00000000002d9810 0000000000000168 t vbo_exec_MultiTexCoordP2ui
00000000002d9980 000000000000013c t vbo_exec_MultiTexCoordP1uiv
00000000002d9ac0 000000000000012c t vbo_exec_MultiTexCoordP1ui
00000000002d9bf0 00000000000000b4 t vbo_exec_MultiTexCoord4fv
00000000002d9cb0 00000000000000c4 t vbo_exec_MultiTexCoord4f
00000000002d9d80 00000000000000b4 t vbo_exec_MultiTexCoord3fv
00000000002d9e40 00000000000000bc t vbo_exec_MultiTexCoord3f
00000000002d9f00 00000000000000ac t vbo_exec_MultiTexCoord2fv
00000000002d9fb0 00000000000000b0 t vbo_exec_MultiTexCoord2f
00000000002da060 00000000000000ac t vbo_exec_MultiTexCoord1fv
00000000002da110 00000000000000a8 t vbo_exec_MultiTexCoord1f
00000000002da1c0 00000000000000f0 T _es_VertexAttrib4fv
00000000002da2b0 0000000000000130 t vbo_exec_EvalCoord2f
00000000002da3e0 0000000000000070 t vbo_exec_EvalPoint2
00000000002da450 0000000000000008 t vbo_exec_EvalCoord2fv
00000000002da460 00000000000000f0 t vbo_exec_EvalCoord1f
00000000002da550 000000000000004c t vbo_exec_EvalPoint1
00000000002da5a0 0000000000000008 t vbo_exec_EvalCoord1fv
00000000002da5b0 00000000000001d4 t vbo_exec_VertexAttribL1ui64vARB
00000000002da790 00000000000001d0 t vbo_exec_VertexAttribL1ui64ARB
00000000002da960 00000000000001ac t vbo_exec_VertexAttribL4dv
00000000002dab10 00000000000001bc t vbo_exec_VertexAttribL3dv
00000000002dacd0 00000000000001cc t vbo_exec_VertexAttribL2dv
00000000002daea0 00000000000001d8 t vbo_exec_VertexAttribL1dv
00000000002db080 00000000000001dc t vbo_exec_VertexAttribL4d
00000000002db260 00000000000001d8 t vbo_exec_VertexAttribL3d
00000000002db440 00000000000001d4 t vbo_exec_VertexAttribL2d
00000000002db620 00000000000001dc t vbo_exec_VertexAttribL1d
00000000002db800 000000000000022c t vbo_exec_VertexP4uiv
00000000002dba30 00000000000001fc t vbo_exec_VertexP4ui
00000000002dbc30 0000000000000230 t vbo_exec_VertexP3uiv
00000000002dbe60 0000000000000210 t vbo_exec_VertexP3ui
00000000002dc070 0000000000000230 t vbo_exec_VertexP2uiv
00000000002dc2a0 00000000000001e4 t vbo_exec_VertexP2ui
00000000002dc490 00000000000001c4 t vbo_exec_VertexAttribI4uiv
00000000002dc660 00000000000001cc t vbo_exec_VertexAttribI3uiv
00000000002dc830 00000000000001d0 t vbo_exec_VertexAttribI2uiv
00000000002dca00 00000000000001cc t vbo_exec_VertexAttribI4ui
00000000002dcbd0 00000000000001cc t vbo_exec_VertexAttribI3ui
00000000002dcda0 00000000000001d4 t vbo_exec_VertexAttribI2ui
00000000002dcf80 00000000000001c4 t vbo_exec_VertexAttribI1ui
00000000002dd150 00000000000001c4 t vbo_exec_VertexAttribI4iv
00000000002dd320 00000000000001cc t vbo_exec_VertexAttribI3iv
00000000002dd4f0 00000000000001d0 t vbo_exec_VertexAttribI2iv
00000000002dd6c0 00000000000001cc t vbo_exec_VertexAttribI4i
00000000002dd890 00000000000001cc t vbo_exec_VertexAttribI3i
00000000002dda60 00000000000001d4 t vbo_exec_VertexAttribI2i
00000000002ddc40 00000000000001c4 t vbo_exec_VertexAttribI1i
00000000002dde10 000000000000017c t vbo_exec_VertexAttrib4fvNV
00000000002ddf90 0000000000000194 t vbo_exec_VertexAttrib4fNV
00000000002de130 000000000000018c t vbo_exec_VertexAttrib3fvNV
00000000002de2c0 00000000000001a8 t vbo_exec_VertexAttrib3fNV
00000000002de470 0000000000000190 t vbo_exec_VertexAttrib2fvNV
00000000002de600 000000000000019c t vbo_exec_VertexAttrib2fNV
00000000002de7a0 000000000000019c t vbo_exec_VertexAttrib1fvNV
00000000002de940 0000000000000198 t vbo_exec_VertexAttrib1fNV
00000000002deae0 00000000000001ac t vbo_exec_VertexAttrib4fvARB
00000000002dec90 00000000000001dc t vbo_exec_VertexAttrib4fARB
00000000002dee70 00000000000001bc t vbo_exec_VertexAttrib3fvARB
00000000002df030 00000000000001d8 t vbo_exec_VertexAttrib3fARB
00000000002df210 00000000000001c4 t vbo_exec_VertexAttrib2fvARB
00000000002df3e0 00000000000001d0 t vbo_exec_VertexAttrib2fARB
00000000002df5b0 00000000000001d0 t vbo_exec_VertexAttrib1fvARB
00000000002df780 00000000000001cc t vbo_exec_VertexAttrib1fARB
00000000002df950 00000000000000f4 t vbo_exec_Vertex4fv
00000000002dfa50 00000000000000f4 t vbo_exec_Vertex4f
00000000002dfb50 0000000000000104 t vbo_exec_Vertex3fv
00000000002dfc60 0000000000000114 t vbo_exec_Vertex3f
00000000002dfd80 0000000000000110 t vbo_exec_Vertex2fv
00000000002dfe90 0000000000000114 t vbo_exec_Vertex2f
00000000002dffb0 000000000000017c t r11g11b10f_to_float3
00000000002e0130 00000000000000c8 t vbo_exec_FlushVertices_internal
00000000002e0200 0000000000000158 t vbo_exec_Begin
00000000002e0360 0000000000000058 t vbo_exec_PrimitiveRestartNV
00000000002e03c0 00000000000000e0 T _es_VertexAttrib4f
00000000002e04a0 00000000000000d0 T _es_VertexAttrib1f
00000000002e0570 00000000000000d4 T _es_VertexAttrib2f
00000000002e0650 00000000000000e0 T _es_VertexAttrib3f
00000000002e0730 00000000000000dc T _es_VertexAttrib1fv
00000000002e0810 00000000000000dc T _es_VertexAttrib2fv
00000000002e08f0 00000000000000f0 T _es_VertexAttrib3fv
00000000002e09e0 0000000000000300 t vbo_exec_NormalP3ui
00000000002e0ce0 0000000000000300 t vbo_exec_SecondaryColorP3ui
00000000002e0fe0 0000000000000300 t vbo_exec_ColorP3ui
00000000002e12e0 000000000000031c t vbo_exec_ColorP3uiv
00000000002e1600 000000000000031c t vbo_exec_SecondaryColorP3uiv
00000000002e1920 000000000000031c t vbo_exec_NormalP3uiv
00000000002e1c40 000000000000038c t vbo_exec_ColorP4ui
00000000002e1fd0 00000000000003b4 t vbo_exec_ColorP4uiv
00000000002e2390 00000000000009c0 t vbo_exec_VertexAttribP4ui
00000000002e2d50 0000000000000a68 t vbo_exec_VertexAttribP4uiv
00000000002e37c0 00000000000007bc t vbo_exec_VertexAttribP1ui
00000000002e3f80 0000000000000860 t vbo_exec_VertexAttribP1uiv
00000000002e47e0 000000000000093c t vbo_exec_VertexAttribP2ui
00000000002e5120 00000000000009b0 t vbo_exec_VertexAttribP2uiv
00000000002e5ad0 0000000000000a58 t vbo_exec_VertexAttribP3ui
00000000002e6530 0000000000000ae8 t vbo_exec_VertexAttribP3uiv
00000000002e7020 00000000000006a8 t vbo_exec_vtx_init
00000000002e76d0 0000000000000080 t vbo_exec_vtx_destroy
00000000002e7750 0000000000000024 t vbo_exec_FlushVertices
00000000002e7780 00000000000000a8 t _es_Color4f
00000000002e7830 00000000000000a0 t _es_Normal3f
00000000002e78d0 00000000000000c4 t _es_MultiTexCoord4f
00000000002e79a0 0000000000000004 t _es_Materialfv
00000000002e79b0 0000000000000024 t _es_Materialf
00000000002e79e0 0000000000000050 t vbo_exec_init
00000000002e7a30 0000000000000010 t vbo_exec_destroy
00000000002e7a40 0000000000000050 t vbo_try_prim_conversion
00000000002e7a90 0000000000000148 t vbo_merge_draws
00000000002e7be0 000000000000024c t vbo_copy_vertices
00000000002e7e30 00000000000000ac t vbo_exec_vtx_unmap
00000000002e7ee0 00000000000001a0 t vbo_exec_vtx_map
00000000002e8080 00000000000004b8 t vbo_exec_vtx_flush
00000000002e8540 0000000000000300 t vbo_exec_eval_update
00000000002e8840 00000000000001b0 t vbo_exec_do_EvalCoord1f
00000000002e89f0 000000000000035c t vbo_exec_do_EvalCoord2f
00000000002e8d50 0000000000000004 t _mesa_noop_Materialfv
00000000002e8d60 0000000000000004 t _mesa_noop_EvalCoord1f
00000000002e8d70 0000000000000004 t _mesa_noop_EvalCoord1fv
00000000002e8d80 0000000000000004 t _mesa_noop_EvalCoord2f
00000000002e8d90 0000000000000004 t _mesa_noop_EvalPoint1
00000000002e8da0 0000000000000004 t _mesa_noop_EvalPoint2
00000000002e8db0 0000000000000004 t _mesa_noop_Begin
00000000002e8dc0 0000000000000004 t _mesa_noop_End
00000000002e8dd0 0000000000000004 t _mesa_noop_Vertex3f
00000000002e8de0 0000000000000004 t _mesa_noop_Vertex4f
00000000002e8df0 0000000000000004 t _mesa_noop_EdgeFlag
00000000002e8e00 0000000000000004 t _mesa_noop_MultiTexCoord1f
00000000002e8e10 0000000000000004 t _mesa_noop_MultiTexCoord1fv
00000000002e8e20 0000000000000004 t _mesa_noop_MultiTexCoord2f
00000000002e8e30 0000000000000004 t _mesa_noop_MultiTexCoord3f
00000000002e8e40 0000000000000004 t _mesa_noop_MultiTexCoord4f
00000000002e8e50 0000000000000038 t _mesa_noop_VertexAttribL1ui64vARB
00000000002e8e90 0000000000000038 t _mesa_noop_VertexAttribL1ui64ARB
00000000002e8ed0 0000000000000038 t _mesa_noop_VertexAttribL4dv
00000000002e8f10 0000000000000038 t _mesa_noop_VertexAttribL3dv
00000000002e8f50 0000000000000038 t _mesa_noop_VertexAttribL2dv
00000000002e8f90 0000000000000038 t _mesa_noop_VertexAttribL1dv
00000000002e8fd0 0000000000000038 t _mesa_noop_VertexAttribL4d
00000000002e9010 0000000000000038 t _mesa_noop_VertexAttribL3d
00000000002e9050 0000000000000038 t _mesa_noop_VertexAttribL2d
00000000002e9090 0000000000000038 t _mesa_noop_VertexAttribL1d
00000000002e90d0 0000000000000070 t _mesa_noop_VertexAttribP4uiv
00000000002e9140 0000000000000070 t _mesa_noop_VertexAttribP4ui
00000000002e91b0 000000000000004c t _mesa_noop_SecondaryColorP3uiv
00000000002e9200 000000000000004c t _mesa_noop_SecondaryColorP3ui
00000000002e9250 000000000000004c t _mesa_noop_ColorP4uiv
00000000002e92a0 000000000000004c t _mesa_noop_ColorP4ui
00000000002e92f0 000000000000004c t _mesa_noop_ColorP3uiv
00000000002e9340 000000000000004c t _mesa_noop_ColorP3ui
00000000002e9390 000000000000004c t _mesa_noop_NormalP3uiv
00000000002e93e0 000000000000004c t _mesa_noop_NormalP3ui
00000000002e9430 000000000000004c t _mesa_noop_MultiTexCoordP4uiv
00000000002e9480 000000000000004c t _mesa_noop_MultiTexCoordP4ui
00000000002e94d0 000000000000004c t _mesa_noop_MultiTexCoordP3uiv
00000000002e9520 000000000000004c t _mesa_noop_MultiTexCoordP3ui
00000000002e9570 000000000000004c t _mesa_noop_MultiTexCoordP2uiv
00000000002e95c0 000000000000004c t _mesa_noop_MultiTexCoordP2ui
00000000002e9610 000000000000004c t _mesa_noop_MultiTexCoordP1uiv
00000000002e9660 000000000000004c t _mesa_noop_MultiTexCoordP1ui
00000000002e96b0 000000000000004c t _mesa_noop_TexCoordP4uiv
00000000002e9700 000000000000004c t _mesa_noop_TexCoordP4ui
00000000002e9750 000000000000004c t _mesa_noop_TexCoordP3uiv
00000000002e97a0 000000000000004c t _mesa_noop_TexCoordP3ui
00000000002e97f0 000000000000004c t _mesa_noop_TexCoordP2uiv
00000000002e9840 000000000000004c t _mesa_noop_TexCoordP2ui
00000000002e9890 000000000000004c t _mesa_noop_TexCoordP1uiv
00000000002e98e0 000000000000004c t _mesa_noop_TexCoordP1ui
00000000002e9930 000000000000004c t _mesa_noop_VertexP4uiv
00000000002e9980 000000000000004c t _mesa_noop_VertexP4ui
00000000002e99d0 000000000000004c t _mesa_noop_VertexP3uiv
00000000002e9a20 000000000000004c t _mesa_noop_VertexP3ui
00000000002e9a70 000000000000004c t _mesa_noop_VertexP2uiv
00000000002e9ac0 000000000000004c t _mesa_noop_VertexP2ui
00000000002e9b10 0000000000000038 t _mesa_noop_VertexAttribI4uiv
00000000002e9b50 0000000000000038 t _mesa_noop_VertexAttribI3uiv
00000000002e9b90 0000000000000038 t _mesa_noop_VertexAttribI2uiv
00000000002e9bd0 0000000000000038 t _mesa_noop_VertexAttribI4ui
00000000002e9c10 0000000000000038 t _mesa_noop_VertexAttribI3ui
00000000002e9c50 0000000000000038 t _mesa_noop_VertexAttribI2ui
00000000002e9c90 0000000000000038 t _mesa_noop_VertexAttribI1ui
00000000002e9cd0 0000000000000038 t _mesa_noop_VertexAttribI4iv
00000000002e9d10 0000000000000038 t _mesa_noop_VertexAttribI3iv
00000000002e9d50 0000000000000038 t _mesa_noop_VertexAttribI2iv
00000000002e9d90 0000000000000038 t _mesa_noop_VertexAttribI4i
00000000002e9dd0 0000000000000038 t _mesa_noop_VertexAttribI3i
00000000002e9e10 0000000000000038 t _mesa_noop_VertexAttribI2i
00000000002e9e50 0000000000000038 t _mesa_noop_VertexAttribI1i
00000000002e9e90 0000000000000038 t _mesa_noop_VertexAttrib4fvARB
00000000002e9ed0 0000000000000038 t _mesa_noop_VertexAttrib4fARB
00000000002e9f10 0000000000000038 t _mesa_noop_VertexAttrib3fvARB
00000000002e9f50 0000000000000038 t _mesa_noop_VertexAttrib3fARB
00000000002e9f90 0000000000000038 t _mesa_noop_VertexAttrib2fvARB
00000000002e9fd0 0000000000000038 t _mesa_noop_VertexAttrib2fARB
00000000002ea010 0000000000000038 t _mesa_noop_VertexAttrib1fvARB
00000000002ea050 0000000000000038 t _mesa_noop_VertexAttrib1fARB
00000000002ea090 0000000000000004 t _mesa_noop_VertexAttrib4fNV
00000000002ea0a0 0000000000000004 t _mesa_noop_VertexAttrib3fNV
00000000002ea0b0 0000000000000004 t _mesa_noop_VertexAttrib2fNV
00000000002ea0c0 0000000000000004 t _mesa_noop_VertexAttrib4fvNV
00000000002ea0d0 0000000000000004 t _mesa_noop_Color4f
00000000002ea0e0 0000000000000004 t _mesa_noop_TexCoord3f
00000000002ea0f0 0000000000000004 t _mesa_noop_Vertex2f
00000000002ea100 0000000000000004 t _mesa_noop_Vertex4fv
00000000002ea110 0000000000000004 t _mesa_noop_TexCoord1f
00000000002ea120 0000000000000004 t _mesa_noop_TexCoord4f
00000000002ea130 0000000000000004 t _mesa_noop_Normal3f
00000000002ea140 0000000000000004 t _mesa_noop_SecondaryColor3fEXT
00000000002ea150 0000000000000004 t _mesa_noop_Color3f
00000000002ea160 0000000000000004 t _mesa_noop_MultiTexCoord3fv
00000000002ea170 0000000000000004 t _mesa_noop_MultiTexCoord4fv
00000000002ea180 0000000000000004 t _mesa_noop_VertexAttrib1fNV
00000000002ea190 0000000000000004 t _mesa_noop_VertexAttrib1fvNV
00000000002ea1a0 0000000000000004 t _mesa_noop_VertexAttrib2fvNV
00000000002ea1b0 0000000000000004 t _mesa_noop_MultiTexCoord2fv
00000000002ea1c0 0000000000000004 t _mesa_noop_TexCoord2f
00000000002ea1d0 0000000000000004 t _mesa_noop_VertexAttrib3fvNV
00000000002ea1e0 0000000000000004 t _mesa_noop_EvalCoord2fv
00000000002ea1f0 0000000000000004 t _mesa_noop_ArrayElement
00000000002ea200 0000000000000004 t _mesa_noop_Color4fv
00000000002ea210 0000000000000004 t _mesa_noop_Indexfv
00000000002ea220 0000000000000004 t _mesa_noop_SecondaryColor3fvEXT
00000000002ea230 0000000000000004 t _mesa_noop_Indexf
00000000002ea240 0000000000000004 t _mesa_noop_TexCoord1fv
00000000002ea250 0000000000000004 t _mesa_noop_TexCoord4fv
00000000002ea260 0000000000000004 t _mesa_noop_Normal3fv
00000000002ea270 0000000000000004 t _mesa_noop_FogCoordfEXT
00000000002ea280 0000000000000004 t _mesa_noop_TexCoord3fv
00000000002ea290 0000000000000004 t _mesa_noop_Color3fv
00000000002ea2a0 0000000000000004 t _mesa_noop_FogCoordfvEXT
00000000002ea2b0 0000000000000004 t _mesa_noop_TexCoord2fv
00000000002ea2c0 0000000000000004 t _mesa_noop_Vertex2fv
00000000002ea2d0 0000000000000004 t _mesa_noop_Vertex3fv
00000000002ea2e0 0000000000000004 t _mesa_noop_PrimitiveRestartNV
00000000002ea2f0 000000000000017c t r11g11b10f_to_float3
00000000002ea470 00000000000000bc t _mesa_noop_VertexAttribP3uiv
00000000002ea530 00000000000000bc t _mesa_noop_VertexAttribP3ui
00000000002ea5f0 00000000000000bc t _mesa_noop_VertexAttribP2uiv
00000000002ea6b0 00000000000000bc t _mesa_noop_VertexAttribP2ui
00000000002ea770 00000000000000bc t _mesa_noop_VertexAttribP1uiv
00000000002ea830 00000000000000bc t _mesa_noop_VertexAttribP1ui
00000000002ea8f0 0000000000000570 t _mesa_noop_vtxfmt_init
00000000002eae60 0000000000000018 t _mesa_using_noop_vtxfmt
00000000002eae80 0000000000000068 t reset_counters
00000000002eaef0 0000000000000094 t _save_OBE_MultiDrawElements
00000000002eaf90 00000000000000bc t _save_OBE_MultiDrawElementsBaseVertex
00000000002eb050 000000000000002c t _save_Begin
00000000002eb080 0000000000000084 t vbo_destroy_vertex_list
00000000002eb110 00000000000000f0 t alloc_vertex_store
00000000002eb200 00000000000000f4 t vbo_print_vertex_list
00000000002eb300 000000000000013c t copy_to_current
00000000002eb440 000000000000017c t r11g11b10f_to_float3
00000000002eb5c0 0000000000000074 t vbo_save_map_vertex_store
00000000002eb640 0000000000000074 t vbo_save_unmap_vertex_store
00000000002eb6c0 0000000000000868 t compile_vertex_list
00000000002ebf30 0000000000000070 t wrap_buffers
00000000002ebfa0 000000000000049c t fixup_vertex
00000000002ec440 0000000000000314 t _save_SecondaryColorP3uiv
00000000002ec760 00000000000002f4 t _save_SecondaryColorP3ui
00000000002eca60 00000000000003b4 t _save_ColorP4uiv
00000000002ece20 0000000000000388 t _save_ColorP4ui
00000000002ed1b0 0000000000000314 t _save_ColorP3uiv
00000000002ed4d0 00000000000002f4 t _save_ColorP3ui
00000000002ed7d0 0000000000000314 t _save_NormalP3uiv
00000000002edaf0 00000000000002f4 t _save_NormalP3ui
00000000002eddf0 0000000000000164 t _save_TexCoordP4uiv
00000000002edf60 0000000000000134 t _save_TexCoordP4ui
00000000002ee0a0 000000000000013c t _save_TexCoordP3uiv
00000000002ee1e0 000000000000011c t _save_TexCoordP3ui
00000000002ee300 0000000000000118 t _save_TexCoordP2uiv
00000000002ee420 0000000000000120 t _save_TexCoordP2ui
00000000002ee540 0000000000000110 t _save_TexCoordP1uiv
00000000002ee650 00000000000000f0 t _save_TexCoordP1ui
00000000002ee740 0000000000000068 t _save_Indexfv
00000000002ee7b0 0000000000000070 t _save_Indexf
00000000002ee820 0000000000000068 t _save_EdgeFlag
00000000002ee890 000000000000064c t _save_Materialfv
00000000002eeee0 0000000000000070 t _save_TexCoord4fv
00000000002eef50 0000000000000094 t _save_TexCoord4f
00000000002eeff0 0000000000000070 t _save_TexCoord3fv
00000000002ef060 000000000000008c t _save_TexCoord3f
00000000002ef0f0 0000000000000068 t _save_TexCoord2fv
00000000002ef160 0000000000000078 t _save_TexCoord2f
00000000002ef1e0 0000000000000068 t _save_TexCoord1fv
00000000002ef250 0000000000000070 t _save_TexCoord1f
00000000002ef2c0 0000000000000070 t _save_SecondaryColor3fvEXT
00000000002ef330 000000000000008c t _save_SecondaryColor3fEXT
00000000002ef3c0 0000000000000070 t _save_Normal3fv
00000000002ef430 000000000000008c t _save_Normal3f
00000000002ef4c0 0000000000000068 t _save_FogCoordfvEXT
00000000002ef530 0000000000000070 t _save_FogCoordfEXT
00000000002ef5a0 0000000000000070 t _save_Color4fv
00000000002ef610 0000000000000094 t _save_Color4f
00000000002ef6b0 0000000000000070 t _save_Color3fv
00000000002ef720 000000000000008c t _save_Color3f
00000000002ef7b0 0000000000000194 t _save_MultiTexCoordP4uiv
00000000002ef950 0000000000000164 t _save_MultiTexCoordP4ui
00000000002efac0 000000000000016c t _save_MultiTexCoordP3uiv
00000000002efc30 000000000000014c t _save_MultiTexCoordP3ui
00000000002efd80 0000000000000148 t _save_MultiTexCoordP2uiv
00000000002efed0 0000000000000130 t _save_MultiTexCoordP2ui
00000000002f0000 0000000000000124 t _save_MultiTexCoordP1uiv
00000000002f0130 00000000000000fc t _save_MultiTexCoordP1ui
00000000002f0230 0000000000000094 t _save_MultiTexCoord4fv
00000000002f02d0 00000000000000b0 t _save_MultiTexCoord4f
00000000002f0380 0000000000000094 t _save_MultiTexCoord3fv
00000000002f0420 00000000000000a8 t _save_MultiTexCoord3f
00000000002f04d0 000000000000008c t _save_MultiTexCoord2fv
00000000002f0560 0000000000000094 t _save_MultiTexCoord2f
00000000002f0600 000000000000008c t _save_MultiTexCoord1fv
00000000002f0690 000000000000008c t _save_MultiTexCoord1f
00000000002f0720 0000000000000078 t wrap_filled_vertex
00000000002f07a0 0000000000000184 t _save_VertexAttribL1ui64vARB
00000000002f0930 0000000000000178 t _save_VertexAttribL1ui64ARB
00000000002f0ab0 0000000000000190 t _save_VertexAttribL4dv
00000000002f0c40 0000000000000190 t _save_VertexAttribL3dv
00000000002f0dd0 0000000000000180 t _save_VertexAttribL2dv
00000000002f0f50 0000000000000184 t _save_VertexAttribL1dv
00000000002f10e0 00000000000001cc t _save_VertexAttribL4d
00000000002f12b0 00000000000001bc t _save_VertexAttribL3d
00000000002f1470 000000000000019c t _save_VertexAttribL2d
00000000002f1610 0000000000000184 t _save_VertexAttribL1d
00000000002f17a0 00000000000009ec t _save_VertexAttribP4uiv
00000000002f2190 000000000000093c t _save_VertexAttribP4ui
00000000002f2ad0 00000000000009e0 t _save_VertexAttribP3uiv
00000000002f34b0 0000000000000948 t _save_VertexAttribP3ui
00000000002f3e00 0000000000000828 t _save_VertexAttribP2uiv
00000000002f4630 00000000000007d0 t _save_VertexAttribP2ui
00000000002f4e00 0000000000000670 t _save_VertexAttribP1uiv
00000000002f5470 0000000000000630 t _save_VertexAttribP1ui
00000000002f5aa0 0000000000000228 t _save_VertexP4uiv
00000000002f5cd0 00000000000001f8 t _save_VertexP4ui
00000000002f5ed0 0000000000000200 t _save_VertexP3uiv
00000000002f60d0 00000000000001e0 t _save_VertexP3ui
00000000002f62b0 00000000000001c4 t _save_VertexP2uiv
00000000002f6480 00000000000001a4 t _save_VertexP2ui
00000000002f6630 00000000000001b0 t _save_VertexAttribI4uiv
00000000002f67e0 00000000000001a0 t _save_VertexAttribI3uiv
00000000002f6980 0000000000000190 t _save_VertexAttribI2uiv
00000000002f6b10 00000000000001ac t _save_VertexAttribI4ui
00000000002f6cc0 0000000000000198 t _save_VertexAttribI3ui
00000000002f6e60 000000000000018c t _save_VertexAttribI2ui
00000000002f6ff0 0000000000000178 t _save_VertexAttribI1ui
00000000002f7170 00000000000001b0 t _save_VertexAttribI4iv
00000000002f7320 00000000000001a0 t _save_VertexAttribI3iv
00000000002f74c0 0000000000000190 t _save_VertexAttribI2iv
00000000002f7650 00000000000001ac t _save_VertexAttribI4i
00000000002f7800 0000000000000198 t _save_VertexAttribI3i
00000000002f79a0 000000000000018c t _save_VertexAttribI2i
00000000002f7b30 0000000000000178 t _save_VertexAttribI1i
00000000002f7cb0 0000000000000114 t _save_VertexAttrib4fvNV
00000000002f7dd0 000000000000012c t _save_VertexAttrib4fNV
00000000002f7f00 0000000000000114 t _save_VertexAttrib3fvNV
00000000002f8020 0000000000000124 t _save_VertexAttrib3fNV
00000000002f8150 000000000000010c t _save_VertexAttrib2fvNV
00000000002f8260 0000000000000114 t _save_VertexAttrib2fNV
00000000002f8380 000000000000010c t _save_VertexAttrib1fvNV
00000000002f8490 000000000000012c t _save_VertexAttrib1fNV
00000000002f85c0 0000000000000190 t _save_VertexAttrib4fvARB
00000000002f8750 00000000000001cc t _save_VertexAttrib4fARB
00000000002f8920 0000000000000190 t _save_VertexAttrib3fvARB
00000000002f8ab0 00000000000001bc t _save_VertexAttrib3fARB
00000000002f8c70 0000000000000180 t _save_VertexAttrib2fvARB
00000000002f8df0 000000000000019c t _save_VertexAttrib2fARB
00000000002f8f90 0000000000000184 t _save_VertexAttrib1fvARB
00000000002f9120 0000000000000184 t _save_VertexAttrib1fARB
00000000002f92b0 00000000000000e4 t _save_Vertex4fv
00000000002f93a0 000000000000010c t _save_Vertex4f
00000000002f94b0 00000000000000e4 t _save_Vertex3fv
00000000002f95a0 0000000000000104 t _save_Vertex3f
00000000002f96b0 00000000000000dc t _save_Vertex2fv
00000000002f9790 00000000000000ec t _save_Vertex2f
00000000002f9880 0000000000000128 t dlist_fallback
00000000002f99b0 0000000000000054 t _save_EvalPoint2
00000000002f9a10 0000000000000044 t _save_EvalPoint1
00000000002f9a60 0000000000000044 t _save_EvalCoord2fv
00000000002f9ab0 0000000000000054 t _save_EvalCoord2f
00000000002f9b10 0000000000000044 t _save_EvalCoord1fv
00000000002f9b60 000000000000004c t _save_EvalCoord1f
00000000002f9bb0 000000000000005c t _save_CallLists
00000000002f9c10 0000000000000044 t _save_CallList
00000000002f9c60 00000000000000b0 t _save_End
00000000002f9d10 00000000000000a4 t vbo_save_NotifyBegin
00000000002f9dc0 00000000000000bc t _save_OBE_Rectf
00000000002f9e80 0000000000000318 t _save_OBE_DrawElementsBaseVertex
00000000002fa1a0 0000000000000008 t _save_OBE_DrawElements
00000000002fa1b0 0000000000000160 t _save_OBE_DrawRangeElements
00000000002fa310 0000000000000144 t _save_OBE_DrawArrays
00000000002fa460 000000000000010c t _save_OBE_MultiDrawArrays
00000000002fa570 00000000000000a0 t _save_PrimitiveRestartNV
00000000002fa610 0000000000000098 t vbo_initialize_save_dispatch
00000000002fa6b0 00000000000000bc t vbo_save_SaveFlushVertices
00000000002fa770 00000000000000dc t vbo_save_NewList
00000000002fa850 0000000000000098 t vbo_save_EndList
00000000002fa8f0 0000000000000024 t vbo_save_BeginCallList
00000000002fa920 000000000000002c t vbo_save_EndCallList
00000000002fa950 000000000000064c t vbo_save_api_init
00000000002fafa0 0000000000000050 t vbo_save_init
00000000002faff0 00000000000000b8 t vbo_save_destroy
00000000002fb0b0 0000000000000298 t copy_vao
00000000002fb350 00000000000002f4 T vbo_save_playback_vertex_list
00000000002fb650 0000000000000030 t VertexAttrib1fvNV
00000000002fb680 0000000000000030 t VertexAttrib2fvNV
00000000002fb6b0 0000000000000030 t VertexAttrib3fvNV
00000000002fb6e0 0000000000000030 t VertexAttrib4fvNV
00000000002fb710 0000000000000318 t _vbo_loopback_vertex_list
00000000002fba30 0000000000000038 t unpack_float_z_X8_UINT_Z24_UNORM
00000000002fba70 0000000000000038 t unpack_float_z_Z24_UNORM_X8_UINT
00000000002fbab0 0000000000000038 t unpack_float_Z_UNORM16
00000000002fbaf0 0000000000000030 t unpack_float_Z_UNORM32
00000000002fbb20 0000000000000024 t unpack_float_z_Z32X24S8
00000000002fbb50 0000000000000028 t unpack_uint_z_X8_UINT_Z24_UNORM
00000000002fbb80 0000000000000028 t unpack_uint_z_Z24_UNORM_X8_UINT
00000000002fbbb0 0000000000000024 t unpack_uint_Z_UNORM16
00000000002fbbe0 0000000000000058 t unpack_uint_Z_FLOAT32
00000000002fbc40 000000000000005c t unpack_uint_Z_FLOAT32_X24S8
00000000002fbca0 0000000000000010 t unpack_float_Z_FLOAT32
00000000002fbcb0 0000000000000014 t unpack_uint_Z_UNORM32
00000000002fbcd0 000000000000007c t _mesa_unorm_to_unorm.constprop.0
00000000002fbd50 000000000000252c t _mesa_unpack_rgba_row
00000000002fe280 0000000000001d58 t _mesa_unpack_ubyte_rgba_row
00000000002fffe0 0000000000000de0 t _mesa_unpack_uint_rgba_row
0000000000300dc0 00000000000000a0 t _mesa_unpack_float_z_row
0000000000300e60 00000000000000a0 t _mesa_unpack_uint_z_row
0000000000300f00 000000000000009c t _mesa_unpack_ubyte_stencil_row
0000000000300fa0 0000000000000094 t _mesa_unpack_uint_24_8_depth_stencil_row
0000000000301040 00000000000000b4 t _mesa_unpack_float_32_uint_24_8_depth_stencil_row
0000000000301100 0000000000008cec t _mesa_initialize_exec_table
0000000000309df0 0000000000000010 t compar_nr
0000000000309e00 0000000000000080 t _mesa_enum_to_string
0000000000309e80 0000000000000024 t _mesa_lookup_prim_by_nr
0000000000309eb0 0000000000000184 t _mesa_get_srgb_format_linear
000000000030a040 00000000000000c0 t _mesa_get_intensity_format_red
000000000030a100 0000000000000298 t setup_render_state
000000000030a3a0 0000000000000184 t draw_bitmap_quad
000000000030a530 0000000000000168 t init_bitmap_state
000000000030a6a0 00000000000001a4 t st_flush_bitmap_cache.part.0
000000000030a850 0000000000000584 t st_Bitmap
000000000030ade0 00000000000004c4 t st_DrawAtlasBitmaps
000000000030b2b0 0000000000000018 t st_flush_bitmap_cache
000000000030b2d0 0000000000000018 t st_init_bitmap_functions
000000000030b2f0 0000000000000084 t st_destroy_bitmap
000000000030b380 00000000000000f8 t get_color_fp_variant
000000000030b480 0000000000000560 t draw_textured_quad.constprop.0
000000000030b9e0 00000000000000d8 t pipe_resource_reference
000000000030bac0 00000000000003ac t make_drawpix_z_stencil_program_tgsi
000000000030be70 0000000000000068 t st_make_passthrough_vertex_shader
000000000030bee0 0000000000000e3c t st_CopyPixels
000000000030cd20 0000000000001518 t st_DrawPixels
000000000030e240 000000000000001c t st_init_drawpixels_functions
000000000030e260 00000000000000d8 t st_destroy_drawpix
000000000030e340 0000000000000058 t st_discard_framebuffer
000000000030e3a0 0000000000000040 t st_UnmapRenderbuffer
000000000030e3e0 0000000000000050 t st_new_renderbuffer
000000000030e430 0000000000000038 t st_EvaluateDepthValues
000000000030e470 0000000000000178 t st_MapRenderbuffer
000000000030e5f0 0000000000000070 t st_DrawBufferAllocate
000000000030e660 0000000000000070 t st_ReadBuffer
000000000030e6d0 00000000000000e4 t st_validate_attachment
000000000030e7c0 00000000000001c4 t st_validate_framebuffer
000000000030e990 0000000000000018 t st_finish_render_texture
000000000030e9b0 00000000000001f4 t st_renderbuffer_delete
000000000030ebb0 00000000000001f0 t st_new_renderbuffer_fb
000000000030eda0 00000000000004e0 t st_update_renderbuffer_surface
000000000030f280 000000000000045c t st_renderbuffer_alloc_storage
000000000030f6e0 0000000000000124 t st_render_texture
000000000030f810 0000000000000090 t st_init_fbo_functions
000000000030f8a0 0000000000000010 t st_device_reset_callback
000000000030f8b0 0000000000000074 t st_get_graphics_reset_status
000000000030f930 0000000000000048 t st_glFlush
000000000030f980 0000000000000044 t st_flush
000000000030f9d0 0000000000000080 t st_finish
000000000030fa50 000000000000002c t st_glFinish
000000000030fa80 0000000000000038 t st_install_device_reset_callback
000000000030fac0 000000000000004c t st_init_flush_functions
000000000030fb10 000000000000019c t util_format_linear
000000000030fcb0 00000000000000dc t guess_base_level_size
000000000030fd90 00000000000000c0 t alpha_to_red
000000000030fe50 0000000000000018 t st_DeleteTextureHandle
000000000030fe70 0000000000000018 t st_MakeTextureHandleResident
000000000030fe90 0000000000000018 t st_DeleteImageHandle
000000000030feb0 0000000000000018 t st_MakeImageHandleResident
000000000030fed0 0000000000000074 t st_TexParameter
000000000030ff50 0000000000000044 t st_NewImageHandle
000000000030ffa0 0000000000000004 t st_DeleteTextureImage
000000000030ffb0 000000000000000c t st_NewTextureImage
000000000030ffc0 00000000000000b0 t st_NewTextureObject
0000000000310070 0000000000000064 t compressed_tex_fallback_allocate.part.0
00000000003100e0 0000000000000224 t try_pbo_upload_common
0000000000310310 00000000000000d0 t default_bindings.isra.0
00000000003103e0 00000000000000d8 t pipe_resource_reference
00000000003104c0 0000000000000098 t st_DeleteTextureObject
0000000000310560 00000000000000a4 t st_FreeTextureImageBuffer
0000000000310610 000000000000023c t st_TextureView
0000000000310850 0000000000000104 t prep_teximage
0000000000310960 0000000000000240 t st_ClearTexSubImage
0000000000310ba0 000000000000015c t gl_target_to_pipe
0000000000310d00 000000000000018c t st_TestProxyTexImage
0000000000310e90 0000000000000290 t guess_and_alloc_texture
0000000000311120 0000000000000064 t st_astc_format_fallback
0000000000311190 00000000000000a4 t st_compressed_format_fallback
0000000000311240 0000000000000324 t st_AllocTextureImageBuffer
0000000000311570 0000000000000118 t st_UnmapTextureImage
0000000000311690 00000000000001a0 t st_MapTextureImage
0000000000311830 000000000000042c t st_CompressedTexSubImage
0000000000311c60 00000000000000fc t st_CompressedTexImage
0000000000311d60 0000000000000350 t st_texture_storage
00000000003120b0 000000000000001c t st_SetTextureStorageForMemoryObject
00000000003120d0 000000000000000c t st_AllocTextureStorage
00000000003120e0 00000000000000a0 t st_get_blit_mask
0000000000312180 0000000000000b10 t st_GetTexSubImage
0000000000312c90 0000000000000c08 t st_CopyTexSubImage
00000000003138a0 0000000000001730 t st_TexSubImage
0000000000314fd0 00000000000000fc t st_TexImage
00000000003150d0 000000000000067c t st_finalize_texture
0000000000315750 00000000000000e4 t st_NewTextureHandle
0000000000315840 0000000000000154 t st_init_texture_functions
00000000003159a0 0000000000000050 t st_query_memory_info
00000000003159f0 000000000000025c t st_invalidate_state
0000000000315c50 0000000000000018 t st_emit_string_marker
0000000000315c70 0000000000000018 t st_set_background_context
0000000000315c90 00000000000001c4 t free_zombie_shaders
0000000000315e60 0000000000000020 t st_get_device_uuid
0000000000315e80 0000000000000020 t st_get_driver_uuid
0000000000315ea0 0000000000000058 t st_Enable
0000000000315f00 000000000000004c t destroy_framebuffer_attachment_sampler_cb
0000000000315f50 0000000000000008 t destroy_tex_sampler_cb
0000000000315f60 00000000000000c8 t free_zombie_sampler_views
0000000000316030 00000000000001c4 t st_destroy_context_priv
0000000000316200 0000000000000018 t st_invalidate_buffers
0000000000316220 000000000000008c t st_save_zombie_sampler_view
00000000003162b0 0000000000000094 t st_save_zombie_shader
0000000000316350 0000000000000024 t st_context_free_zombie_objects
0000000000316380 0000000000000b60 t st_create_context
0000000000316ee0 0000000000000290 t st_destroy_context
0000000000317170 0000000000000050 t st_debug_message
00000000003171c0 000000000000005c t st_debug_init
0000000000317220 000000000000009c t st_update_debug_callback
00000000003172c0 0000000000000330 t st_draw_vbo
00000000003175f0 00000000000002a4 t st_indirect_draw_vbo
00000000003178a0 0000000000000018 t st_init_draw_functions
00000000003178c0 0000000000000220 t st_draw_quad
0000000000317ae0 00000000000000f0 t init_format_extensions
0000000000317bd0 0000000000000f78 t st_init_limits
0000000000318b50 00000000000013f0 t st_init_extensions
0000000000319f40 0000000000000134 t st_mesa_format_to_pipe_format
000000000031a080 0000000000000028 t st_pipe_format_to_mesa_format
000000000031a0b0 00000000000000bc t st_choose_matching_format
000000000031a170 0000000000000278 t st_choose_format
000000000031a3f0 0000000000000074 t st_choose_renderbuffer_format
000000000031a470 00000000000000d4 t st_QuerySamplesForFormat
000000000031a550 000000000000032c T st_ChooseTextureFormat
000000000031a880 00000000000000f0 T st_QueryInternalFormat
000000000031a970 0000000000000254 t st_translate_color
000000000031abd0 00000000000004a8 T st_generate_mipmap
000000000031b080 0000000000000074 t get_pbo_conversion
000000000031b100 0000000000000284 t build_conversion
000000000031b390 00000000000010e8 t create_fs_tgsi.isra.0
000000000031c480 00000000000000a8 t st_pbo_addresses_setup
000000000031c530 0000000000000120 t st_pbo_addresses_pixelstore
000000000031c650 0000000000000024 t st_pbo_addresses_invert_y
000000000031c680 00000000000002b4 t st_pbo_create_vs
000000000031c940 0000000000000344 t st_pbo_create_gs
000000000031cc90 0000000000000344 t st_pbo_draw
000000000031cfe0 0000000000000064 t st_pbo_get_upload_fs
000000000031d050 000000000000007c t st_pbo_get_download_fs
000000000031d0d0 0000000000000194 t st_init_pbo_helpers
000000000031d270 00000000000000d0 t st_destroy_pbo_helpers
000000000031d340 000000000000017c t delete_variant
000000000031d4c0 0000000000000164 t st_create_vp_variant
000000000031d630 0000000000000420 t st_create_fp_variant
000000000031da50 0000000000000110 t st_unbind_program.isra.0
000000000031db60 0000000000000094 t set_affected_state_flags.isra.0
000000000031dc00 00000000000000a8 t destroy_program_variants_cb
000000000031dcb0 00000000000000e0 t destroy_shader_program_variants_cb
000000000031dd90 000000000000018c t st_set_prog_affected_state_flags
000000000031df20 000000000000006c t st_release_variants
000000000031df90 00000000000000d8 t st_release_program
000000000031e070 00000000000000cc t st_prepare_vertex_program
000000000031e140 00000000000000e4 t st_translate_stream_output_info
000000000031e230 0000000000000318 t st_translate_vertex_program
000000000031e550 00000000000000dc t st_get_vp_variant
000000000031e630 0000000000000694 t st_translate_fragment_program
000000000031ecd0 00000000000000d0 t st_get_fp_variant
000000000031eda0 0000000000000480 t st_translate_common_program
000000000031f220 0000000000000200 t st_get_common_variant
000000000031f420 0000000000000064 t st_destroy_program_variants
000000000031f490 000000000000015c t st_finalize_program
000000000031f5f0 000000000000008c t st_window_rectangles_to_blit
000000000031f680 00000000000001d0 t st_deserialise_ir_program
000000000031f850 000000000000013c t st_serialise_ir_program.part.0
000000000031f990 0000000000000004 T st_get_program_binary_driver_sha1
000000000031f9a0 00000000000000bc t st_store_ir_in_disk_cache
000000000031fa60 00000000000000fc t st_load_ir_from_disk_cache
000000000031fb60 0000000000000014 T st_serialise_tgsi_program
000000000031fb80 0000000000000014 T st_serialise_tgsi_program_binary
000000000031fba0 0000000000000008 T st_deserialise_tgsi_program
000000000031fbb0 0000000000000094 t st_destroy_bound_texture_handles_per_stage
000000000031fc50 0000000000000098 t st_destroy_bound_image_handles_per_stage
000000000031fcf0 000000000000006c t st_texture_create
000000000031fd60 00000000000001b4 t st_gl_texture_dims_to_pipe_dims
000000000031ff20 00000000000000e4 t st_texture_match_image
0000000000320010 0000000000000148 t st_texture_image_map
0000000000320160 0000000000000050 t st_texture_image_unmap
00000000003201b0 000000000000015c t st_texture_image_copy
0000000000320310 00000000000000a4 t st_create_color_map_texture
00000000003203c0 000000000000003c t st_destroy_bound_texture_handles
0000000000320400 000000000000003c t st_destroy_bound_image_handles
0000000000320440 0000000000000170 t st_make_bound_samplers_resident
00000000003205b0 0000000000000120 t st_make_bound_images_resident
00000000003206d0 00000000000000a8 t transform_decl
0000000000320780 00000000000000d4 t prolog_common
0000000000320860 00000000000000f0 t prolog_last_vertex_stage
0000000000320950 0000000000000320 t prolog_fs
0000000000320c70 0000000000000388 t epilog_fs
0000000000321000 00000000000004f0 t epilog_last_vertex_stage
00000000003214f0 000000000000013c t transform_instr
0000000000321630 0000000000000144 t st_tgsi_lower_depth_clamp
0000000000321780 0000000000000008 t st_tgsi_lower_depth_clamp_fs
0000000000321790 00000000000000b8 t emit_samp
0000000000321850 0000000000000424 t yuv_to_rgb
0000000000321c80 0000000000000a20 t transform_instr
00000000003226a0 00000000000000b0 t st_tgsi_lower_yuv
0000000000322750 0000000000000008 t always_available(_mesa_glsl_parse_state const*)
0000000000322760 000000000000003c t compatibility_vs_only(_mesa_glsl_parse_state const*)
00000000003227a0 0000000000000030 t derivatives_only(_mesa_glsl_parse_state const*)
00000000003227d0 0000000000000010 t gs_only(_mesa_glsl_parse_state const*)
00000000003227e0 000000000000000c t v110(_mesa_glsl_parse_state const*)
00000000003227f0 000000000000002c t v120(_mesa_glsl_parse_state const*)
0000000000322820 000000000000002c t v130(_mesa_glsl_parse_state const*)
0000000000322850 0000000000000030 t v130_desktop(_mesa_glsl_parse_state const*)
0000000000322880 0000000000000030 t v460_desktop(_mesa_glsl_parse_state const*)
00000000003228b0 000000000000002c t v140_or_es3(_mesa_glsl_parse_state const*)
00000000003228e0 0000000000000008 t texture_rectangle(_mesa_glsl_parse_state const*)
00000000003228f0 0000000000000008 t texture_external(_mesa_glsl_parse_state const*)
0000000000322900 0000000000000008 t shader_texture_lod(_mesa_glsl_parse_state const*)
0000000000322910 0000000000000014 t shader_texture_lod_and_rect(_mesa_glsl_parse_state const*)
0000000000322930 000000000000005c t shader_integer_mix(_mesa_glsl_parse_state const*)
0000000000322990 0000000000000008 t gpu_shader4(_mesa_glsl_parse_state const*)
00000000003229a0 0000000000000024 t gpu_shader4_integer(_mesa_glsl_parse_state const*)
00000000003229d0 0000000000000024 t gpu_shader4_array(_mesa_glsl_parse_state const*)
0000000000322a00 0000000000000030 t gpu_shader4_array_integer(_mesa_glsl_parse_state const*)
0000000000322a30 0000000000000024 t gpu_shader4_rect(_mesa_glsl_parse_state const*)
0000000000322a60 0000000000000030 t gpu_shader4_rect_integer(_mesa_glsl_parse_state const*)
0000000000322a90 0000000000000024 t gpu_shader4_tbo(_mesa_glsl_parse_state const*)
0000000000322ac0 0000000000000030 t gpu_shader4_tbo_integer(_mesa_glsl_parse_state const*)
0000000000322af0 0000000000000038 t v130_or_gpu_shader4(_mesa_glsl_parse_state const*)
0000000000322b30 000000000000004c t gpu_shader5(_mesa_glsl_parse_state const*)
0000000000322b80 0000000000000038 t gpu_shader5_or_es31(_mesa_glsl_parse_state const*)
0000000000322bc0 0000000000000038 t texture_multisample(_mesa_glsl_parse_state const*)
0000000000322c00 000000000000004c t texture_query_levels(_mesa_glsl_parse_state const*)
0000000000322c50 0000000000000038 t texture_query_lod(_mesa_glsl_parse_state const*)
0000000000322c90 0000000000000008 t texture_texture4(_mesa_glsl_parse_state const*)
0000000000322ca0 0000000000000068 t texture_gather_only_or_es31(_mesa_glsl_parse_state const*)
0000000000322d10 000000000000003c t derivatives_tex3d(_mesa_glsl_parse_state const*)
0000000000322d50 0000000000000008 t shader_atomic_counter_ops(_mesa_glsl_parse_state const*)
0000000000322d60 0000000000000008 t shader_ballot(_mesa_glsl_parse_state const*)
0000000000322d70 0000000000000008 t supports_arb_fragment_shader_interlock(_mesa_glsl_parse_state const*)
0000000000322d80 0000000000000008 t supports_nv_fragment_shader_interlock(_mesa_glsl_parse_state const*)
0000000000322d90 0000000000000008 t shader_clock(_mesa_glsl_parse_state const*)
0000000000322da0 0000000000000020 t shader_clock_int64(_mesa_glsl_parse_state const*)
0000000000322dc0 0000000000000008 t shader_trinary_minmax(_mesa_glsl_parse_state const*)
0000000000322dd0 0000000000000008 t shader_image_load_store_ext(_mesa_glsl_parse_state const*)
0000000000322de0 0000000000000008 t shader_image_atomic_add_float(_mesa_glsl_parse_state const*)
0000000000322df0 0000000000000038 t shader_image_size(_mesa_glsl_parse_state const*)
0000000000322e30 000000000000004c t shader_samples(_mesa_glsl_parse_state const*)
0000000000322e80 0000000000000014 t int64(_mesa_glsl_parse_state const*)
0000000000322ea0 0000000000000010 t compute_shader(_mesa_glsl_parse_state const*)
0000000000322eb0 0000000000000014 t barrier_supported(_mesa_glsl_parse_state const*)
0000000000322ed0 0000000000000008 t vote(_mesa_glsl_parse_state const*)
0000000000322ee0 0000000000000014 t integer_functions_supported(_mesa_glsl_parse_state const*)
0000000000322f00 0000000000000014 t NV_shader_atomic_float_supported(_mesa_glsl_parse_state const*)
0000000000322f20 0000000000000014 t shader_atomic_float_exchange(_mesa_glsl_parse_state const*)
0000000000322f40 0000000000000014 t INTEL_shader_atomic_float_minmax_supported(_mesa_glsl_parse_state const*)
0000000000322f60 0000000000000008 t shader_atomic_float_minmax(_mesa_glsl_parse_state const*)
0000000000322f70 0000000000000008 t demote_to_helper_invocation(_mesa_glsl_parse_state const*)
0000000000322f80 0000000000000008 t shader_integer_functions2(_mesa_glsl_parse_state const*)
0000000000322f90 0000000000000024 t is_nir(_mesa_glsl_parse_state const*)
0000000000322fc0 0000000000000024 t is_not_nir(_mesa_glsl_parse_state const*)
0000000000322ff0 0000000000000004 W glsl_symbol_table::_ralloc_destructor(void*)
0000000000323000 00000000000000f8 t (anonymous namespace)::builtin_builder::new_sig(glsl_type const*, bool (*)(_mesa_glsl_parse_state const*), int, ...)
0000000000323100 0000000000000044 t shader_image_load_store(_mesa_glsl_parse_state const*)
0000000000323150 000000000000004c t shader_image_atomic_exchange_float(_mesa_glsl_parse_state const*)
00000000003231a0 0000000000000064 t lod_exists_in_stage(_mesa_glsl_parse_state const*)
0000000000323210 0000000000000044 t texture_multisample_array(_mesa_glsl_parse_state const*)
0000000000323260 000000000000006c t derivative_control(_mesa_glsl_parse_state const*)
00000000003232d0 0000000000000064 t fs_interpolate_at(_mesa_glsl_parse_state const*)
0000000000323340 0000000000000020 t shader_integer_functions2_int64(_mesa_glsl_parse_state const*)
0000000000323360 00000000000000d4 t (anonymous namespace)::builtin_builder::add_function(char const*, ...) [clone .constprop.0]
0000000000323440 000000000000004c t fp64(_mesa_glsl_parse_state const*)
0000000000323490 0000000000000044 t compute_shader_supported(_mesa_glsl_parse_state const*)
00000000003234e0 0000000000000044 t shader_atomic_counters(_mesa_glsl_parse_state const*)
0000000000323530 0000000000000074 t derivatives(_mesa_glsl_parse_state const*)
00000000003235b0 0000000000000044 t shader_bit_encoding(_mesa_glsl_parse_state const*)
0000000000323600 0000000000000050 t shader_packing_or_es3_or_gpu_shader5(_mesa_glsl_parse_state const*)
0000000000323650 0000000000000044 t shader_packing_or_es3(_mesa_glsl_parse_state const*)
00000000003236a0 0000000000000050 t shader_packing_or_es31_or_gpu_shader5(_mesa_glsl_parse_state const*)
00000000003236f0 0000000000000044 t texture_buffer(_mesa_glsl_parse_state const*)
0000000000323740 0000000000000038 t texture_external_es3(_mesa_glsl_parse_state const*)
0000000000323780 0000000000000044 t texture_gather_or_es31(_mesa_glsl_parse_state const*)
00000000003237d0 0000000000000058 t texture_gather_cube_map_array(_mesa_glsl_parse_state const*)
0000000000323830 0000000000000050 t gpu_shader5_es(_mesa_glsl_parse_state const*)
0000000000323880 0000000000000050 t shader_image_atomic(_mesa_glsl_parse_state const*)
00000000003238d0 000000000000004c t shader_atomic_counter_ops_or_v460_desktop(_mesa_glsl_parse_state const*)
0000000000323920 000000000000002c t texture_array(_mesa_glsl_parse_state const*)
0000000000323950 0000000000000008 t shader_atomic_float_add(_mesa_glsl_parse_state const*)
0000000000323960 000000000000005c t buffer_atomics_supported(_mesa_glsl_parse_state const*)
00000000003239c0 0000000000000050 t texture_array_derivs_only(_mesa_glsl_parse_state const*)
0000000000323a10 0000000000000028 t tex3d(_mesa_glsl_parse_state const*)
0000000000323a40 0000000000000060 t int64_fp64(_mesa_glsl_parse_state const*)
0000000000323aa0 0000000000000050 t gpu_shader5_or_OES_texture_cube_map_array(_mesa_glsl_parse_state const*)
0000000000323af0 000000000000004c t vote_or_v460_desktop(_mesa_glsl_parse_state const*)
0000000000323b40 000000000000004c t texture_cube_map_array(_mesa_glsl_parse_state const*)
0000000000323b90 0000000000000070 t derivatives_texture_cube_map_array(_mesa_glsl_parse_state const*)
0000000000323c00 000000000000003c t texture_samples_identical(_mesa_glsl_parse_state const*)
0000000000323c40 0000000000000044 t gpu_shader5_or_es31_or_integer_functions(_mesa_glsl_parse_state const*)
0000000000323c90 000000000000004c t texture_samples_identical_array(_mesa_glsl_parse_state const*)
0000000000323ce0 0000000000000060 t gs_streams(_mesa_glsl_parse_state const*)
0000000000323d40 0000000000000030 t gpu_shader4_derivs_only(_mesa_glsl_parse_state const*)
0000000000323d70 000000000000003c t v110_derivatives_only(_mesa_glsl_parse_state const*)
0000000000323db0 000000000000003c t v130_or_gpu_shader4_and_tex_shadow_lod(_mesa_glsl_parse_state const*)
0000000000323df0 0000000000000048 t gpu_shader4_integer_derivs_only(_mesa_glsl_parse_state const*)
0000000000323e40 0000000000000048 t gpu_shader4_array_derivs_only(_mesa_glsl_parse_state const*)
0000000000323e90 0000000000000058 t v130_derivatives_only(_mesa_glsl_parse_state const*)
0000000000323ef0 000000000000006c t v400_derivatives_only(_mesa_glsl_parse_state const*)
0000000000323f60 0000000000000054 t gpu_shader4_array_integer_derivs_only(_mesa_glsl_parse_state const*)
0000000000323fc0 0000000000000060 t es31_not_gs5(_mesa_glsl_parse_state const*)
0000000000324020 0000000000000090 t v130_or_gpu_shader4_and_tex_cube_map_array(_mesa_glsl_parse_state const*)
00000000003240b0 0000000000000088 t texture_array_lod(_mesa_glsl_parse_state const*)
0000000000324140 000000000000006c t tex3d_lod(_mesa_glsl_parse_state const*)
00000000003241b0 000000000000005c t v110_lod(_mesa_glsl_parse_state const*)
0000000000324210 000000000000005c t tex1d_lod(_mesa_glsl_parse_state const*)
0000000000324270 00000000000000e4 t (anonymous namespace)::builtin_builder::_EndStreamPrimitive(bool (*)(_mesa_glsl_parse_state const*), glsl_type const*) [clone .constprop.0]
0000000000324360 00000000000000e4 t (anonymous namespace)::builtin_builder::_EmitStreamVertex(bool (*)(_mesa_glsl_parse_state const*), glsl_type const*) [clone .constprop.0]
0000000000324450 000000000000007c t (anonymous namespace)::builtin_builder::_image_samples_prototype(glsl_type const*, unsigned int, unsigned int)
00000000003244d0 00000000000000a4 t (anonymous namespace)::builtin_builder::_atomic_intrinsic2(bool (*)(_mesa_glsl_parse_state const*), glsl_type const*, ir_intrinsic_id) [clone .constprop.0]
0000000000324580 00000000000000b0 t (anonymous namespace)::builtin_builder::_read_invocation_intrinsic(glsl_type const*) [clone .constprop.0]
0000000000324630 00000000000001dc t (anonymous namespace)::builtin_builder::call(ir_function*, ir_variable*, exec_list) [clone .constprop.0] [clone .isra.0]
0000000000324810 0000000000000400 t (anonymous namespace)::builtin_builder::add_image_function(char const*, char const*, ir_function_signature* ((anonymous namespace)::builtin_builder::*)(glsl_type const*, unsigned int, unsigned int), unsigned int, unsigned int, ir_intrinsic_id) [clone .constprop.0]
0000000000324c10 000000000000046c t (anonymous namespace)::builtin_builder::add_image_functions(bool) [clone .constprop.0]
0000000000325080 0000000000000090 t (anonymous namespace)::builtin_builder::_memory_barrier(char const*, bool (*)(_mesa_glsl_parse_state const*)) [clone .constprop.0]
0000000000325110 00000000000000b8 t (anonymous namespace)::builtin_builder::_atomic_counter_intrinsic1(bool (*)(_mesa_glsl_parse_state const*), ir_intrinsic_id) [clone .constprop.0]
00000000003251d0 00000000000000b0 t (anonymous namespace)::builtin_builder::_image_size_prototype(glsl_type const*, unsigned int, unsigned int)
0000000000325280 00000000000000cc t (anonymous namespace)::builtin_builder::_atomic_intrinsic3(bool (*)(_mesa_glsl_parse_state const*), glsl_type const*, ir_intrinsic_id) [clone .constprop.0]
0000000000325350 00000000000000e0 t (anonymous namespace)::builtin_builder::_noise2(glsl_type const*) [clone .constprop.0]
0000000000325430 00000000000000e0 t (anonymous namespace)::builtin_builder::_noise1(glsl_type const*) [clone .constprop.0]
0000000000325510 00000000000000e0 t (anonymous namespace)::builtin_builder::_noise4(glsl_type const*) [clone .constprop.0]
00000000003255f0 00000000000000e0 t (anonymous namespace)::builtin_builder::_noise3(glsl_type const*) [clone .constprop.0]
00000000003256d0 00000000000000d4 t (anonymous namespace)::builtin_builder::unop(bool (*)(_mesa_glsl_parse_state const*), ir_expression_operation, glsl_type const*, glsl_type const*) [clone .constprop.0]
00000000003257b0 00000000000000cc t (anonymous namespace)::builtin_builder::_interpolateAtCentroid(glsl_type const*) [clone .constprop.0]
0000000000325880 00000000000000c8 t (anonymous namespace)::builtin_builder::_doubleBitsToUint64(bool (*)(_mesa_glsl_parse_state const*), glsl_type const*) [clone .constprop.0]
0000000000325950 00000000000000c8 t (anonymous namespace)::builtin_builder::_uint64BitsToDouble(bool (*)(_mesa_glsl_parse_state const*), glsl_type const*) [clone .constprop.0]
0000000000325a20 00000000000000c8 t (anonymous namespace)::builtin_builder::_uintBitsToFloat(glsl_type const*) [clone .constprop.0]
0000000000325af0 00000000000000c8 t (anonymous namespace)::builtin_builder::_int64BitsToDouble(bool (*)(_mesa_glsl_parse_state const*), glsl_type const*) [clone .constprop.0]
0000000000325bc0 00000000000000c8 t (anonymous namespace)::builtin_builder::_floatBitsToUint(glsl_type const*) [clone .constprop.0]
0000000000325c90 00000000000000c8 t (anonymous namespace)::builtin_builder::_doubleBitsToInt64(bool (*)(_mesa_glsl_parse_state const*), glsl_type const*) [clone .constprop.0]
0000000000325d60 00000000000000c8 t (anonymous namespace)::builtin_builder::_intBitsToFloat(glsl_type const*) [clone .constprop.0]
0000000000325e30 00000000000000c8 t (anonymous namespace)::builtin_builder::_floatBitsToInt(glsl_type const*) [clone .constprop.0]
0000000000325f00 00000000000000e8 t (anonymous namespace)::builtin_builder::_degrees(glsl_type const*) [clone .constprop.0]
0000000000325ff0 00000000000000e8 t (anonymous namespace)::builtin_builder::_radians(glsl_type const*) [clone .constprop.0]
00000000003260e0 000000000000011c t (anonymous namespace)::builtin_builder::_textureQueryLevels(bool (*)(_mesa_glsl_parse_state const*), glsl_type const*) [clone .constprop.0]
0000000000326200 00000000000000f4 t (anonymous namespace)::builtin_builder::_all(glsl_type const*) [clone .constprop.0]
0000000000326300 000000000000011c t (anonymous namespace)::builtin_builder::_textureSamples(bool (*)(_mesa_glsl_parse_state const*), glsl_type const*) [clone .constprop.0]
0000000000326420 00000000000000f4 t (anonymous namespace)::builtin_builder::_any(glsl_type const*) [clone .constprop.0]
0000000000326520 0000000000000138 t (anonymous namespace)::builtin_builder::_shader_clock(bool (*)(_mesa_glsl_parse_state const*), glsl_type const*) [clone .constprop.0]
0000000000326660 00000000000000e8 t (anonymous namespace)::builtin_builder::_isnan(bool (*)(_mesa_glsl_parse_state const*), glsl_type const*) [clone .constprop.0]
0000000000326750 0000000000000078 t (anonymous namespace)::builtin_builder::matrix_elt(ir_variable*, int, int) [clone .constprop.0]
00000000003267d0 000000000000010c t (anonymous namespace)::builtin_builder::_read_first_invocation(glsl_type const*) [clone .constprop.0]
00000000003268e0 000000000000011c t (anonymous namespace)::builtin_builder::_vote(char const*, bool (*)(_mesa_glsl_parse_state const*)) [clone .constprop.0]
0000000000326a00 00000000000000ec t (anonymous namespace)::builtin_builder::_length(bool (*)(_mesa_glsl_parse_state const*), glsl_type const*) [clone .constprop.0]
0000000000326af0 0000000000000120 t (anonymous namespace)::builtin_builder::_atomic_counter_op(char const*, bool (*)(_mesa_glsl_parse_state const*)) [clone .constprop.0]
0000000000326c10 00000000000000f4 t (anonymous namespace)::builtin_builder::_tan(glsl_type const*) [clone .constprop.0]
0000000000326d10 0000000000000254 t (anonymous namespace)::builtin_builder::asin_expr(ir_variable*, float, float) [clone .constprop.0]
0000000000326f70 00000000000000ec t (anonymous namespace)::builtin_builder::_acos(glsl_type const*) [clone .constprop.0]
0000000000327060 00000000000000bc t (anonymous namespace)::builtin_builder::_asin(glsl_type const*) [clone .constprop.0]
0000000000327120 0000000000000100 t (anonymous namespace)::builtin_builder::_countTrailingZeros(bool (*)(_mesa_glsl_parse_state const*), glsl_type const*) [clone .constprop.0]
0000000000327220 0000000000000120 t (anonymous namespace)::builtin_builder::_interpolateAtSample(glsl_type const*) [clone .constprop.0]
0000000000327340 0000000000000120 t (anonymous namespace)::builtin_builder::_interpolateAtOffset(glsl_type const*) [clone .constprop.0]
0000000000327460 0000000000000140 t (anonymous namespace)::builtin_builder::_atomic_op2(char const*, bool (*)(_mesa_glsl_parse_state const*), glsl_type const*) [clone .constprop.0]
00000000003275a0 0000000000000148 t (anonymous namespace)::builtin_builder::_read_invocation(glsl_type const*) [clone .constprop.0]
00000000003276f0 0000000000000104 t (anonymous namespace)::builtin_builder::_fwidthFine(glsl_type const*) [clone .constprop.0]
0000000000327800 0000000000000104 t (anonymous namespace)::builtin_builder::_fwidthCoarse(glsl_type const*) [clone .constprop.0]
0000000000327910 0000000000000104 t (anonymous namespace)::builtin_builder::_fwidth(glsl_type const*) [clone .constprop.0]
0000000000327a20 0000000000000118 t (anonymous namespace)::builtin_builder::_determinant_mat2(bool (*)(_mesa_glsl_parse_state const*), glsl_type const*) [clone .constprop.0]
0000000000327b40 0000000000000160 t (anonymous namespace)::builtin_builder::_textureSamplesIdentical(bool (*)(_mesa_glsl_parse_state const*), glsl_type const*, glsl_type const*) [clone .constprop.0]
0000000000327ca0 0000000000000160 t (anonymous namespace)::builtin_builder::_textureQueryLod(bool (*)(_mesa_glsl_parse_state const*), glsl_type const*, glsl_type const*) [clone .constprop.0]
0000000000327e00 0000000000000164 t (anonymous namespace)::builtin_builder::_isinf(bool (*)(_mesa_glsl_parse_state const*), glsl_type const*) [clone .constprop.0]
0000000000327f70 0000000000000120 t (anonymous namespace)::builtin_builder::_sinh(glsl_type const*) [clone .constprop.0]
0000000000328090 0000000000000168 t (anonymous namespace)::builtin_builder::_atomic_op3(char const*, bool (*)(_mesa_glsl_parse_state const*), glsl_type const*) [clone .constprop.0]
0000000000328200 0000000000000120 t (anonymous namespace)::builtin_builder::_cosh(glsl_type const*) [clone .constprop.0]
0000000000328320 0000000000000178 t (anonymous namespace)::builtin_builder::_atomic_counter_op2(char const*, bool (*)(_mesa_glsl_parse_state const*)) [clone .constprop.0]
00000000003284a0 0000000000000160 t (anonymous namespace)::builtin_builder::_mix_sel(bool (*)(_mesa_glsl_parse_state const*), glsl_type const*, glsl_type const*) [clone .constprop.0]
0000000000328600 0000000000000158 t (anonymous namespace)::builtin_builder::_dfrexp(glsl_type const*, glsl_type const*) [clone .constprop.0]
0000000000328760 0000000000000168 t (anonymous namespace)::builtin_builder::_clamp(bool (*)(_mesa_glsl_parse_state const*), glsl_type const*, glsl_type const*) [clone .constprop.0]
00000000003288d0 0000000000000168 t (anonymous namespace)::builtin_builder::_mix_lrp(bool (*)(_mesa_glsl_parse_state const*), glsl_type const*, glsl_type const*) [clone .constprop.0]
0000000000328a40 000000000000015c t (anonymous namespace)::builtin_builder::_fma(bool (*)(_mesa_glsl_parse_state const*), glsl_type const*) [clone .constprop.0]
0000000000328ba0 0000000000000164 t (anonymous namespace)::builtin_builder::_max3(glsl_type const*) [clone .constprop.0]
0000000000328d10 0000000000000164 t (anonymous namespace)::builtin_builder::_min3(glsl_type const*) [clone .constprop.0]
0000000000328e80 0000000000000144 t (anonymous namespace)::builtin_builder::_acosh(glsl_type const*) [clone .constprop.0]
0000000000328fd0 000000000000015c t (anonymous namespace)::builtin_builder::_normalize(bool (*)(_mesa_glsl_parse_state const*), glsl_type const*) [clone .constprop.0]
0000000000329130 0000000000000174 t (anonymous namespace)::builtin_builder::binop(bool (*)(_mesa_glsl_parse_state const*), ir_expression_operation, glsl_type const*, glsl_type const*, glsl_type const*, bool) [clone .constprop.0]
00000000003292b0 0000000000000090 t (anonymous namespace)::builtin_builder::_absoluteDifference(bool (*)(_mesa_glsl_parse_state const*), glsl_type const*) [clone .constprop.0]
0000000000329340 000000000000006c t (anonymous namespace)::builtin_builder::_dot(bool (*)(_mesa_glsl_parse_state const*), glsl_type const*) [clone .constprop.0]
00000000003293b0 000000000000016c t (anonymous namespace)::builtin_builder::_atanh(glsl_type const*) [clone .constprop.0]
0000000000329520 00000000000001ec t (anonymous namespace)::builtin_builder::_transpose(bool (*)(_mesa_glsl_parse_state const*), glsl_type const*) [clone .constprop.0]
0000000000329710 0000000000000184 t (anonymous namespace)::builtin_builder::_asinh(glsl_type const*) [clone .constprop.0]
00000000003298a0 00000000000001c0 t (anonymous namespace)::builtin_builder::_uaddCarry(glsl_type const*) [clone .constprop.0]
0000000000329a60 00000000000001c0 t (anonymous namespace)::builtin_builder::_usubBorrow(glsl_type const*) [clone .constprop.0]
0000000000329c20 00000000000001ac t (anonymous namespace)::builtin_builder::_cross(bool (*)(_mesa_glsl_parse_state const*), glsl_type const*) [clone .constprop.0]
0000000000329dd0 00000000000001b0 t (anonymous namespace)::builtin_builder::_reflect(bool (*)(_mesa_glsl_parse_state const*), glsl_type const*) [clone .constprop.0]
0000000000329f80 0000000000000204 t (anonymous namespace)::builtin_builder::_matrixCompMult(bool (*)(_mesa_glsl_parse_state const*), glsl_type const*) [clone .constprop.0]
000000000032a190 00000000000001dc t (anonymous namespace)::builtin_builder::_modf(bool (*)(_mesa_glsl_parse_state const*), glsl_type const*) [clone .constprop.0]
000000000032a370 00000000000001e8 t (anonymous namespace)::builtin_builder::_faceforward(bool (*)(_mesa_glsl_parse_state const*), glsl_type const*) [clone .constprop.0]
000000000032a560 00000000000001f0 t (anonymous namespace)::builtin_builder::_bitfieldExtract(glsl_type const*) [clone .constprop.0]
000000000032a750 00000000000001e4 t (anonymous namespace)::builtin_builder::_mid3(glsl_type const*) [clone .constprop.0]
000000000032a940 0000000000000234 t (anonymous namespace)::builtin_builder::_bitfieldInsert(glsl_type const*) [clone .constprop.0]
000000000032ab80 0000000000000580 t (anonymous namespace)::builtin_builder::do_atan(ir_builder::ir_factory&, glsl_type const*, ir_variable*, ir_builder::operand) [clone .constprop.0]
000000000032b100 0000000000000110 t (anonymous namespace)::builtin_builder::_atan(glsl_type const*) [clone .constprop.0]
000000000032b210 0000000000000228 t (anonymous namespace)::builtin_builder::_distance(bool (*)(_mesa_glsl_parse_state const*), glsl_type const*) [clone .constprop.0]
000000000032b440 0000000000000274 t (anonymous namespace)::builtin_builder::_atomic_counter_op1(char const*, bool (*)(_mesa_glsl_parse_state const*)) [clone .constprop.0]
000000000032b6c0 0000000000000234 t (anonymous namespace)::builtin_builder::_tanh(glsl_type const*) [clone .constprop.0]
000000000032b900 00000000000001d4 t (anonymous namespace)::builtin_builder::_textureSize(bool (*)(_mesa_glsl_parse_state const*), glsl_type const*, glsl_type const*) [clone .constprop.0]
000000000032bae0 0000000000000274 t (anonymous namespace)::builtin_builder::_determinant_mat3(bool (*)(_mesa_glsl_parse_state const*), glsl_type const*) [clone .constprop.0]
000000000032bd60 00000000000003a8 t (anonymous namespace)::builtin_builder::_smoothstep(bool (*)(_mesa_glsl_parse_state const*), glsl_type const*, glsl_type const*) [clone .constprop.0]
000000000032c110 0000000000000470 t (anonymous namespace)::builtin_builder::_mulExtended(glsl_type const*) [clone .constprop.0]
000000000032c580 00000000000004c8 t (anonymous namespace)::builtin_builder::_refract(bool (*)(_mesa_glsl_parse_state const*), glsl_type const*) [clone .constprop.0]
000000000032ca50 00000000000004e8 t (anonymous namespace)::builtin_builder::_frexp(glsl_type const*, glsl_type const*) [clone .constprop.0]
000000000032cf40 000000000000023c t (anonymous namespace)::builtin_builder::_outerProduct(bool (*)(_mesa_glsl_parse_state const*), glsl_type const*) [clone .constprop.0]
000000000032d180 00000000000002f8 t (anonymous namespace)::builtin_builder::_inverse_mat2(bool (*)(_mesa_glsl_parse_state const*), glsl_type const*) [clone .constprop.0]
000000000032d480 0000000000000748 t (anonymous namespace)::builtin_builder::_atan2(glsl_type const*) [clone .constprop.0]
000000000032dbd0 0000000000000274 t (anonymous namespace)::builtin_builder::_image_prototype(glsl_type const*, unsigned int, unsigned int)
000000000032de50 000000000000025c t (anonymous namespace)::builtin_builder::_textureCubeArrayShadow(ir_texture_opcode, bool (*)(_mesa_glsl_parse_state const*), glsl_type const*) [clone .constprop.0]
000000000032e0b0 00000000000004fc t (anonymous namespace)::builtin_builder::_step(bool (*)(_mesa_glsl_parse_state const*), glsl_type const*, glsl_type const*) [clone .constprop.0]
000000000032e5b0 0000000000000e28 t (anonymous namespace)::builtin_builder::create_intrinsics() [clone .constprop.0]
000000000032f3e0 000000000000031c t (anonymous namespace)::builtin_builder::_texelFetch(bool (*)(_mesa_glsl_parse_state const*), glsl_type const*, glsl_type const*, glsl_type const*, glsl_type const*) [clone .constprop.0]
000000000032f700 0000000000000a50 t (anonymous namespace)::builtin_builder::_inverse_mat3(bool (*)(_mesa_glsl_parse_state const*), glsl_type const*) [clone .constprop.0]
0000000000330150 000000000000064c t (anonymous namespace)::builtin_builder::_texture(ir_texture_opcode, bool (*)(_mesa_glsl_parse_state const*), glsl_type const*, glsl_type const*, glsl_type const*, int) [clone .constprop.0]
00000000003307a0 0000000000001624 t (anonymous namespace)::builtin_builder::_determinant_mat4(bool (*)(_mesa_glsl_parse_state const*), glsl_type const*) [clone .constprop.0]
0000000000331dd0 00000000000025dc t (anonymous namespace)::builtin_builder::_inverse_mat4(bool (*)(_mesa_glsl_parse_state const*), glsl_type const*) [clone .constprop.0]
00000000003343b0 0000000000016530 t _mesa_glsl_builtin_functions_init_or_ref
000000000034a8e0 0000000000000078 t _mesa_glsl_builtin_functions_decref
000000000034a960 00000000000000a4 t _mesa_glsl_find_builtin_function(_mesa_glsl_parse_state*, char const*, exec_list*)
000000000034aa10 0000000000000094 t _mesa_glsl_has_builtin_function(_mesa_glsl_parse_state*, char const*)
000000000034aab0 000000000000000c t _mesa_glsl_get_builtin_function_shader()
000000000034aac0 0000000000000064 t _mesa_get_main_function_signature(glsl_symbol_table*)
000000000034ab30 00000000000003cc t generate_ir::umul64(void*, bool (*)(_mesa_glsl_parse_state const*))
000000000034af00 00000000000002b8 t generate_ir::sign64(void*, bool (*)(_mesa_glsl_parse_state const*))
000000000034b1c0 0000000000001494 t generate_ir::udiv64(void*, bool (*)(_mesa_glsl_parse_state const*))
000000000034c660 000000000000184c t generate_ir::idiv64(void*, bool (*)(_mesa_glsl_parse_state const*))
000000000034deb0 0000000000001570 t generate_ir::umod64(void*, bool (*)(_mesa_glsl_parse_state const*))
000000000034f420 0000000000001940 t generate_ir::imod64(void*, bool (*)(_mesa_glsl_parse_state const*))
0000000000350d60 0000000000000034 t has_AMD_conservative_depth(gl_context const*, gl_api, unsigned char)
0000000000350da0 0000000000000034 t has_AMD_gpu_shader_int64(gl_context const*, gl_api, unsigned char)
0000000000350de0 0000000000000034 t has_AMD_shader_stencil_export(gl_context const*, gl_api, unsigned char)
0000000000350e20 0000000000000034 t has_AMD_shader_trinary_minmax(gl_context const*, gl_api, unsigned char)
0000000000350e60 0000000000000034 t has_AMD_texture_texture4(gl_context const*, gl_api, unsigned char)
0000000000350ea0 0000000000000034 t has_AMD_vertex_shader_layer(gl_context const*, gl_api, unsigned char)
0000000000350ee0 0000000000000034 t has_AMD_vertex_shader_viewport_index(gl_context const*, gl_api, unsigned char)
0000000000350f20 0000000000000034 t has_ANDROID_extension_pack_es31a(gl_context const*, gl_api, unsigned char)
0000000000350f60 0000000000000034 t has_ARB_ES3_1_compatibility(gl_context const*, gl_api, unsigned char)
0000000000350fa0 0000000000000034 t has_ARB_ES3_2_compatibility(gl_context const*, gl_api, unsigned char)
0000000000350fe0 0000000000000034 t has_ARB_arrays_of_arrays(gl_context const*, gl_api, unsigned char)
0000000000351020 0000000000000034 t has_ARB_bindless_texture(gl_context const*, gl_api, unsigned char)
0000000000351060 0000000000000034 t has_ARB_compatibility(gl_context const*, gl_api, unsigned char)
00000000003510a0 0000000000000034 t has_ARB_compute_shader(gl_context const*, gl_api, unsigned char)
00000000003510e0 0000000000000034 t has_ARB_compute_variable_group_size(gl_context const*, gl_api, unsigned char)
0000000000351120 0000000000000034 t has_ARB_conservative_depth(gl_context const*, gl_api, unsigned char)
0000000000351160 0000000000000034 t has_ARB_cull_distance(gl_context const*, gl_api, unsigned char)
00000000003511a0 0000000000000034 t has_ARB_derivative_control(gl_context const*, gl_api, unsigned char)
00000000003511e0 0000000000000034 t has_ARB_draw_buffers(gl_context const*, gl_api, unsigned char)
0000000000351220 0000000000000034 t has_ARB_draw_instanced(gl_context const*, gl_api, unsigned char)
0000000000351260 0000000000000034 t has_ARB_enhanced_layouts(gl_context const*, gl_api, unsigned char)
00000000003512a0 0000000000000034 t has_ARB_explicit_attrib_location(gl_context const*, gl_api, unsigned char)
00000000003512e0 0000000000000034 t has_ARB_explicit_uniform_location(gl_context const*, gl_api, unsigned char)
0000000000351320 0000000000000034 t has_ARB_fragment_coord_conventions(gl_context const*, gl_api, unsigned char)
0000000000351360 0000000000000034 t has_ARB_fragment_layer_viewport(gl_context const*, gl_api, unsigned char)
00000000003513a0 0000000000000034 t has_ARB_fragment_shader_interlock(gl_context const*, gl_api, unsigned char)
00000000003513e0 0000000000000034 t has_ARB_gpu_shader5(gl_context const*, gl_api, unsigned char)
0000000000351420 0000000000000034 t has_ARB_gpu_shader_fp64(gl_context const*, gl_api, unsigned char)
0000000000351460 0000000000000034 t has_ARB_gpu_shader_int64(gl_context const*, gl_api, unsigned char)
00000000003514a0 0000000000000034 t has_ARB_post_depth_coverage(gl_context const*, gl_api, unsigned char)
00000000003514e0 0000000000000034 t has_ARB_sample_shading(gl_context const*, gl_api, unsigned char)
0000000000351520 0000000000000034 t has_ARB_separate_shader_objects(gl_context const*, gl_api, unsigned char)
0000000000351560 0000000000000034 t has_ARB_shader_atomic_counter_ops(gl_context const*, gl_api, unsigned char)
00000000003515a0 0000000000000034 t has_ARB_shader_atomic_counters(gl_context const*, gl_api, unsigned char)
00000000003515e0 0000000000000034 t has_ARB_shader_ballot(gl_context const*, gl_api, unsigned char)
0000000000351620 0000000000000034 t has_ARB_shader_bit_encoding(gl_context const*, gl_api, unsigned char)
0000000000351660 0000000000000034 t has_ARB_shader_clock(gl_context const*, gl_api, unsigned char)
00000000003516a0 0000000000000034 t has_ARB_shader_draw_parameters(gl_context const*, gl_api, unsigned char)
00000000003516e0 0000000000000034 t has_ARB_shader_group_vote(gl_context const*, gl_api, unsigned char)
0000000000351720 0000000000000034 t has_ARB_shader_image_load_store(gl_context const*, gl_api, unsigned char)
0000000000351760 0000000000000034 t has_ARB_shader_image_size(gl_context const*, gl_api, unsigned char)
00000000003517a0 0000000000000034 t has_ARB_shader_precision(gl_context const*, gl_api, unsigned char)
00000000003517e0 0000000000000034 t has_ARB_shader_stencil_export(gl_context const*, gl_api, unsigned char)
0000000000351820 0000000000000034 t has_ARB_shader_storage_buffer_object(gl_context const*, gl_api, unsigned char)
0000000000351860 0000000000000034 t has_ARB_shader_subroutine(gl_context const*, gl_api, unsigned char)
00000000003518a0 0000000000000034 t has_ARB_shader_texture_image_samples(gl_context const*, gl_api, unsigned char)
00000000003518e0 0000000000000034 t has_ARB_shader_texture_lod(gl_context const*, gl_api, unsigned char)
0000000000351920 0000000000000034 t has_ARB_shader_viewport_layer_array(gl_context const*, gl_api, unsigned char)
0000000000351960 0000000000000034 t has_ARB_shading_language_420pack(gl_context const*, gl_api, unsigned char)
00000000003519a0 0000000000000034 t has_ARB_shading_language_include(gl_context const*, gl_api, unsigned char)
00000000003519e0 0000000000000034 t has_ARB_shading_language_packing(gl_context const*, gl_api, unsigned char)
0000000000351a20 0000000000000034 t has_ARB_tessellation_shader(gl_context const*, gl_api, unsigned char)
0000000000351a60 0000000000000034 t has_ARB_texture_cube_map_array(gl_context const*, gl_api, unsigned char)
0000000000351aa0 0000000000000034 t has_ARB_texture_gather(gl_context const*, gl_api, unsigned char)
0000000000351ae0 0000000000000034 t has_ARB_texture_multisample(gl_context const*, gl_api, unsigned char)
0000000000351b20 0000000000000034 t has_ARB_texture_query_levels(gl_context const*, gl_api, unsigned char)
0000000000351b60 0000000000000034 t has_ARB_texture_query_lod(gl_context const*, gl_api, unsigned char)
0000000000351ba0 0000000000000034 t has_ARB_texture_rectangle(gl_context const*, gl_api, unsigned char)
0000000000351be0 0000000000000038 t has_ARB_uniform_buffer_object(gl_context const*, gl_api, unsigned char)
0000000000351c20 0000000000000038 t has_ARB_vertex_attrib_64bit(gl_context const*, gl_api, unsigned char)
0000000000351c60 0000000000000038 t has_ARB_viewport_array(gl_context const*, gl_api, unsigned char)
0000000000351ca0 0000000000000038 t has_EXT_blend_func_extended(gl_context const*, gl_api, unsigned char)
0000000000351ce0 0000000000000038 t has_EXT_clip_cull_distance(gl_context const*, gl_api, unsigned char)
0000000000351d20 0000000000000038 t has_EXT_demote_to_helper_invocation(gl_context const*, gl_api, unsigned char)
0000000000351d60 0000000000000038 t has_EXT_draw_buffers(gl_context const*, gl_api, unsigned char)
0000000000351da0 0000000000000038 t has_EXT_draw_instanced(gl_context const*, gl_api, unsigned char)
0000000000351de0 0000000000000038 t has_EXT_frag_depth(gl_context const*, gl_api, unsigned char)
0000000000351e20 0000000000000038 t has_EXT_geometry_point_size(gl_context const*, gl_api, unsigned char)
0000000000351e60 0000000000000038 t has_EXT_geometry_shader(gl_context const*, gl_api, unsigned char)
0000000000351ea0 0000000000000038 t has_EXT_gpu_shader4(gl_context const*, gl_api, unsigned char)
0000000000351ee0 0000000000000038 t has_EXT_gpu_shader5(gl_context const*, gl_api, unsigned char)
0000000000351f20 0000000000000038 t has_EXT_primitive_bounding_box(gl_context const*, gl_api, unsigned char)
0000000000351f60 0000000000000038 t has_EXT_separate_shader_objects(gl_context const*, gl_api, unsigned char)
0000000000351fa0 0000000000000038 t has_EXT_shader_framebuffer_fetch(gl_context const*, gl_api, unsigned char)
0000000000351fe0 0000000000000038 t has_EXT_shader_framebuffer_fetch_non_coherent(gl_context const*, gl_api, unsigned char)
0000000000352020 0000000000000038 t has_EXT_shader_image_load_formatted(gl_context const*, gl_api, unsigned char)
0000000000352060 0000000000000038 t has_EXT_shader_image_load_store(gl_context const*, gl_api, unsigned char)
00000000003520a0 0000000000000038 t has_EXT_shader_implicit_conversions(gl_context const*, gl_api, unsigned char)
00000000003520e0 0000000000000038 t has_EXT_shader_integer_mix(gl_context const*, gl_api, unsigned char)
0000000000352120 0000000000000038 t has_EXT_shader_io_blocks(gl_context const*, gl_api, unsigned char)
0000000000352160 0000000000000038 t has_EXT_shader_samples_identical(gl_context const*, gl_api, unsigned char)
00000000003521a0 0000000000000038 t has_EXT_tessellation_point_size(gl_context const*, gl_api, unsigned char)
00000000003521e0 0000000000000038 t has_EXT_tessellation_shader(gl_context const*, gl_api, unsigned char)
0000000000352220 0000000000000038 t has_EXT_texture_array(gl_context const*, gl_api, unsigned char)
0000000000352260 0000000000000038 t has_EXT_texture_buffer(gl_context const*, gl_api, unsigned char)
00000000003522a0 0000000000000038 t has_EXT_texture_cube_map_array(gl_context const*, gl_api, unsigned char)
00000000003522e0 0000000000000038 t has_EXT_texture_query_lod(gl_context const*, gl_api, unsigned char)
0000000000352320 0000000000000038 t has_EXT_texture_shadow_lod(gl_context const*, gl_api, unsigned char)
0000000000352360 0000000000000038 t has_INTEL_conservative_rasterization(gl_context const*, gl_api, unsigned char)
00000000003523a0 0000000000000038 t has_INTEL_shader_atomic_float_minmax(gl_context const*, gl_api, unsigned char)
00000000003523e0 0000000000000038 t has_INTEL_shader_integer_functions2(gl_context const*, gl_api, unsigned char)
0000000000352420 0000000000000038 t has_KHR_blend_equation_advanced(gl_context const*, gl_api, unsigned char)
0000000000352460 0000000000000038 t has_MESA_shader_integer_functions(gl_context const*, gl_api, unsigned char)
00000000003524a0 0000000000000038 t has_NV_compute_shader_derivatives(gl_context const*, gl_api, unsigned char)
00000000003524e0 0000000000000038 t has_NV_fragment_shader_interlock(gl_context const*, gl_api, unsigned char)
0000000000352520 0000000000000038 t has_NV_image_formats(gl_context const*, gl_api, unsigned char)
0000000000352560 0000000000000038 t has_NV_shader_atomic_float(gl_context const*, gl_api, unsigned char)
00000000003525a0 0000000000000038 t has_NV_viewport_array2(gl_context const*, gl_api, unsigned char)
00000000003525e0 0000000000000038 t has_OES_EGL_image_external(gl_context const*, gl_api, unsigned char)
0000000000352620 0000000000000038 t has_OES_EGL_image_external_essl3(gl_context const*, gl_api, unsigned char)
0000000000352660 0000000000000038 t has_OES_geometry_point_size(gl_context const*, gl_api, unsigned char)
00000000003526a0 0000000000000038 t has_OES_geometry_shader(gl_context const*, gl_api, unsigned char)
00000000003526e0 0000000000000038 t has_OES_gpu_shader5(gl_context const*, gl_api, unsigned char)
0000000000352720 0000000000000038 t has_OES_primitive_bounding_box(gl_context const*, gl_api, unsigned char)
0000000000352760 0000000000000038 t has_OES_sample_variables(gl_context const*, gl_api, unsigned char)
00000000003527a0 0000000000000038 t has_OES_shader_image_atomic(gl_context const*, gl_api, unsigned char)
00000000003527e0 0000000000000038 t has_OES_shader_io_blocks(gl_context const*, gl_api, unsigned char)
0000000000352820 0000000000000038 t has_OES_shader_multisample_interpolation(gl_context const*, gl_api, unsigned char)
0000000000352860 0000000000000038 t has_OES_standard_derivatives(gl_context const*, gl_api, unsigned char)
00000000003528a0 0000000000000038 t has_OES_tessellation_point_size(gl_context const*, gl_api, unsigned char)
00000000003528e0 0000000000000038 t has_OES_tessellation_shader(gl_context const*, gl_api, unsigned char)
0000000000352920 0000000000000038 t has_OES_texture_3D(gl_context const*, gl_api, unsigned char)
0000000000352960 0000000000000038 t has_OES_texture_buffer(gl_context const*, gl_api, unsigned char)
00000000003529a0 0000000000000038 t has_OES_texture_cube_map_array(gl_context const*, gl_api, unsigned char)
00000000003529e0 0000000000000038 t has_OES_texture_storage_multisample_2d_array(gl_context const*, gl_api, unsigned char)
0000000000352a20 0000000000000038 t has_OES_viewport_array(gl_context const*, gl_api, unsigned char)
0000000000352a60 000000000000003c T ast_function_definition::print() const
0000000000352aa0 0000000000000050 T ast_case_statement_list::print() const
0000000000352af0 0000000000000108 t add_builtin_defines
0000000000352c00 00000000000000f4 t _mesa_glsl_msg(YYLTYPE const*, _mesa_glsl_parse_state*, unsigned int, char const*, std::__va_list)
0000000000352d00 000000000000000c T ast_node::print() const
0000000000352d10 0000000000000038 T ast_expression_statement::print() const
0000000000352d50 000000000000000c T ast_demote_statement::print() const
0000000000352d60 0000000000000084 T ast_selection_statement::print() const
0000000000352df0 0000000000000054 T ast_switch_statement::print() const
0000000000352e50 000000000000005c T ast_case_label::print() const
0000000000352eb0 0000000000000120 T ast_iteration_statement::print() const
0000000000352fd0 0000000000000068 T ast_struct_specifier::print() const
0000000000353040 0000000000000088 T ast_subroutine_list::print() const
00000000003530d0 0000000000000068 T ast_compound_statement::print() const
0000000000353140 0000000000000044 T ast_switch_body::print() const
0000000000353190 0000000000000054 T ast_case_label_list::print() const
00000000003531f0 0000000000000068 T ast_case_statement::print() const
0000000000353260 000000000000020c t _mesa_ast_type_qualifier_print(ast_type_qualifier const*)
0000000000353470 0000000000000034 T ast_fully_specified_type::print() const
00000000003534b0 0000000000000070 T ast_declaration::print() const
0000000000353520 00000000000000a8 T ast_jump_statement::print() const
00000000003535d0 0000000000000090 T ast_parameter_declarator::print() const
0000000000353660 00000000000000a8 T ast_function::print() const
0000000000353710 00000000000000fc T ast_declarator_list::print() const
0000000000353810 0000000000000040 t glsl_compute_version_string(void*, bool, unsigned int)
0000000000353850 0000000000000080 t _mesa_glsl_error(YYLTYPE*, _mesa_glsl_parse_state*, char const*, ...)
00000000003538d0 0000000000000230 t _mesa_glsl_parse_state::check_version(unsigned int, unsigned int, YYLTYPE*, char const*, ...)
0000000000353b00 0000000000000340 t _mesa_glsl_parse_state::process_version_directive(YYLTYPE*, int, char const*)
0000000000353e40 0000000000000080 t _mesa_glsl_warning(YYLTYPE const*, _mesa_glsl_parse_state*, char const*, ...)
0000000000353ec0 0000000000000300 t _mesa_glsl_process_extension(char const*, YYLTYPE*, char const*, YYLTYPE*, _mesa_glsl_parse_state*)
00000000003541c0 0000000000000780 t _mesa_glsl_parse_state::_mesa_glsl_parse_state(gl_context*, gl_shader_stage, void*)
00000000003541c0 0000000000000780 T _mesa_glsl_parse_state::_mesa_glsl_parse_state(gl_context*, gl_shader_stage, void*)
0000000000354940 000000000000019c t _mesa_ast_set_aggregate_type(glsl_type const*, ast_expression*)
0000000000354ae0 000000000000043c t _mesa_ast_process_interface_block(YYLTYPE*, _mesa_glsl_parse_state*, ast_interface_block*, ast_type_qualifier const&)
0000000000354f20 000000000000001c T ast_node::ast_node()
0000000000354f20 000000000000001c t ast_node::ast_node()
0000000000354f40 0000000000000050 t ast_compound_statement::ast_compound_statement(int, ast_node*)
0000000000354f40 0000000000000050 T ast_compound_statement::ast_compound_statement(int, ast_node*)
0000000000354f90 0000000000000498 T ast_expression::print() const
0000000000355430 0000000000000048 t ast_expression::ast_expression(int, ast_expression*, ast_expression*, ast_expression*)
0000000000355430 0000000000000048 t ast_expression::ast_expression(int, ast_expression*, ast_expression*, ast_expression*)
0000000000355480 0000000000000020 t ast_expression_statement::ast_expression_statement(ast_expression*)
0000000000355480 0000000000000020 T ast_expression_statement::ast_expression_statement(ast_expression*)
00000000003554a0 000000000000003c t ast_function::ast_function()
00000000003554a0 000000000000003c T ast_function::ast_function()
00000000003554e0 0000000000000024 t ast_declaration::ast_declaration(char const*, ast_array_specifier*, ast_expression*)
00000000003554e0 0000000000000024 T ast_declaration::ast_declaration(char const*, ast_array_specifier*, ast_expression*)
0000000000355510 0000000000000038 t ast_declarator_list::ast_declarator_list(ast_fully_specified_type*)
0000000000355510 0000000000000038 T ast_declarator_list::ast_declarator_list(ast_fully_specified_type*)
0000000000355550 000000000000002c t ast_jump_statement::ast_jump_statement(int, ast_expression*)
0000000000355550 000000000000002c T ast_jump_statement::ast_jump_statement(int, ast_expression*)
0000000000355580 0000000000000024 t ast_selection_statement::ast_selection_statement(ast_expression*, ast_node*, ast_node*)
0000000000355580 0000000000000024 T ast_selection_statement::ast_selection_statement(ast_expression*, ast_node*, ast_node*)
00000000003555b0 0000000000000020 t ast_switch_statement::ast_switch_statement(ast_expression*, ast_node*)
00000000003555b0 0000000000000020 T ast_switch_statement::ast_switch_statement(ast_expression*, ast_node*)
00000000003555d0 0000000000000020 t ast_switch_body::ast_switch_body(ast_case_statement_list*)
00000000003555d0 0000000000000020 T ast_switch_body::ast_switch_body(ast_case_statement_list*)
00000000003555f0 0000000000000020 t ast_case_label::ast_case_label(ast_expression*)
00000000003555f0 0000000000000020 T ast_case_label::ast_case_label(ast_expression*)
0000000000355610 0000000000000030 t ast_case_label_list::ast_case_label_list()
0000000000355610 0000000000000030 T ast_case_label_list::ast_case_label_list()
0000000000355640 0000000000000034 t ast_case_statement::ast_case_statement(ast_case_label_list*)
0000000000355640 0000000000000034 T ast_case_statement::ast_case_statement(ast_case_label_list*)
0000000000355680 0000000000000030 t ast_case_statement_list::ast_case_statement_list()
0000000000355680 0000000000000030 T ast_case_statement_list::ast_case_statement_list()
00000000003556b0 0000000000000028 t ast_iteration_statement::ast_iteration_statement(int, ast_node*, ast_node*, ast_expression*, ast_node*)
00000000003556b0 0000000000000028 T ast_iteration_statement::ast_iteration_statement(int, ast_node*, ast_node*, ast_expression*, ast_node*)
00000000003556e0 0000000000000058 t ast_struct_specifier::ast_struct_specifier(char const*, ast_declarator_list*)
00000000003556e0 0000000000000058 T ast_struct_specifier::ast_struct_specifier(char const*, ast_declarator_list*)
0000000000355740 00000000000000fc t _mesa_glsl_copy_symbols_from_table
0000000000355840 000000000000048c t do_common_optimization(exec_list*, bool, bool, gl_shader_compiler_options const*, bool)
0000000000355cd0 0000000000000a44 t _mesa_glsl_compile_shader
0000000000356720 0000000000000044 t glsl_symbol_table::glsl_symbol_table()
0000000000356720 0000000000000044 T glsl_symbol_table::glsl_symbol_table()
0000000000356770 0000000000000028 t glsl_symbol_table::~glsl_symbol_table()
0000000000356770 0000000000000028 T glsl_symbol_table::~glsl_symbol_table()
00000000003567a0 0000000000000008 t glsl_symbol_table::push_scope()
00000000003567b0 0000000000000008 t glsl_symbol_table::pop_scope()
00000000003567c0 0000000000000020 t glsl_symbol_table::name_declared_this_scope(char const*)
00000000003567e0 0000000000000104 t glsl_symbol_table::add_variable(ir_variable*)
00000000003568f0 0000000000000060 t glsl_symbol_table::add_type(char const*, glsl_type const*)
0000000000356950 000000000000015c t glsl_symbol_table::add_interface(char const*, glsl_type const*, ir_variable_mode)
0000000000356ab0 000000000000009c t glsl_symbol_table::add_function(ir_function*)
0000000000356b50 00000000000000e4 t glsl_symbol_table::add_default_precision_qualifier(char const*, int)
0000000000356c40 0000000000000020 t glsl_symbol_table::get_variable(char const*)
0000000000356c60 0000000000000020 t glsl_symbol_table::get_type(char const*)
0000000000356c80 0000000000000090 t glsl_symbol_table::get_interface(char const*, ir_variable_mode)
0000000000356d10 0000000000000020 t glsl_symbol_table::get_function(char const*)
0000000000356d30 000000000000005c t glsl_symbol_table::get_default_precision_qualifier(char const*)
0000000000356d90 0000000000000020 t glsl_symbol_table::disable_variable(char const*)
0000000000356db0 000000000000002c t glsl_symbol_table::replace_variable(char const*, ir_variable*)
0000000000356de0 000000000000002c t ir_builder::ir_factory::emit(ir_instruction*)
0000000000356e10 000000000000007c t ir_builder::ir_factory::make_temp(glsl_type const*, char const*)
0000000000356e90 0000000000000058 t ir_builder::assign(ir_builder::deref, ir_builder::operand, ir_builder::operand, int)
0000000000356ef0 0000000000000064 t ir_builder::assign(ir_builder::deref, ir_builder::operand)
0000000000356f60 0000000000000054 t ir_builder::assign(ir_builder::deref, ir_builder::operand, int)
0000000000356fc0 0000000000000068 t ir_builder::assign(ir_builder::deref, ir_builder::operand, ir_builder::operand)
0000000000357030 0000000000000048 t ir_builder::ret(ir_builder::operand)
0000000000357080 000000000000005c t ir_builder::swizzle(ir_builder::operand, int, int)
00000000003570e0 00000000000000a0 t ir_builder::swizzle_for_size(ir_builder::operand, unsigned int)
0000000000357180 000000000000004c t ir_builder::swizzle_xxxx(ir_builder::operand)
00000000003571d0 000000000000004c t ir_builder::swizzle_x(ir_builder::operand)
0000000000357220 000000000000004c t ir_builder::swizzle_y(ir_builder::operand)
0000000000357270 000000000000004c t ir_builder::swizzle_z(ir_builder::operand)
00000000003572c0 000000000000004c t ir_builder::swizzle_w(ir_builder::operand)
0000000000357310 000000000000004c t ir_builder::swizzle_xy(ir_builder::operand)
0000000000357360 000000000000004c t ir_builder::swizzle_xyz(ir_builder::operand)
00000000003573b0 0000000000000044 t ir_builder::expr(ir_expression_operation, ir_builder::operand)
0000000000357400 0000000000000054 t ir_builder::expr(ir_expression_operation, ir_builder::operand, ir_builder::operand)
0000000000357460 000000000000005c t ir_builder::expr(ir_expression_operation, ir_builder::operand, ir_builder::operand, ir_builder::operand)
00000000003574c0 0000000000000044 t ir_builder::add(ir_builder::operand, ir_builder::operand)
0000000000357510 0000000000000044 t ir_builder::sub(ir_builder::operand, ir_builder::operand)
0000000000357560 0000000000000044 t ir_builder::min2(ir_builder::operand, ir_builder::operand)
00000000003575b0 0000000000000044 t ir_builder::max2(ir_builder::operand, ir_builder::operand)
0000000000357600 0000000000000044 t ir_builder::mul(ir_builder::operand, ir_builder::operand)
0000000000357650 0000000000000044 t ir_builder::imul_high(ir_builder::operand, ir_builder::operand)
00000000003576a0 0000000000000044 t ir_builder::div(ir_builder::operand, ir_builder::operand)
00000000003576f0 0000000000000044 t ir_builder::carry(ir_builder::operand, ir_builder::operand)
0000000000357740 0000000000000044 t ir_builder::borrow(ir_builder::operand, ir_builder::operand)
0000000000357790 000000000000003c t ir_builder::trunc(ir_builder::operand)
00000000003577d0 000000000000003c t ir_builder::round_even(ir_builder::operand)
0000000000357810 000000000000003c t ir_builder::fract(ir_builder::operand)
0000000000357850 0000000000000084 t ir_builder::dot(ir_builder::operand, ir_builder::operand)
00000000003578e0 0000000000000074 t ir_builder::clamp(ir_builder::operand, ir_builder::operand, ir_builder::operand)
0000000000357960 000000000000003c t ir_builder::saturate(ir_builder::operand)
00000000003579a0 000000000000003c t ir_builder::abs(ir_builder::operand)
00000000003579e0 000000000000003c t ir_builder::neg(ir_builder::operand)
0000000000357a20 000000000000003c t ir_builder::sin(ir_builder::operand)
0000000000357a60 000000000000003c t ir_builder::cos(ir_builder::operand)
0000000000357aa0 000000000000003c t ir_builder::exp(ir_builder::operand)
0000000000357ae0 000000000000003c t ir_builder::rcp(ir_builder::operand)
0000000000357b20 000000000000003c t ir_builder::rsq(ir_builder::operand)
0000000000357b60 000000000000003c t ir_builder::sqrt(ir_builder::operand)
0000000000357ba0 000000000000003c t ir_builder::log(ir_builder::operand)
0000000000357be0 000000000000003c t ir_builder::sign(ir_builder::operand)
0000000000357c20 000000000000003c t ir_builder::subr_to_int(ir_builder::operand)
0000000000357c60 0000000000000044 t ir_builder::equal(ir_builder::operand, ir_builder::operand)
0000000000357cb0 0000000000000044 t ir_builder::nequal(ir_builder::operand, ir_builder::operand)
0000000000357d00 0000000000000044 t ir_builder::less(ir_builder::operand, ir_builder::operand)
0000000000357d50 0000000000000048 t ir_builder::greater(ir_builder::operand, ir_builder::operand)
0000000000357da0 0000000000000048 t ir_builder::lequal(ir_builder::operand, ir_builder::operand)
0000000000357df0 0000000000000044 t ir_builder::gequal(ir_builder::operand, ir_builder::operand)
0000000000357e40 000000000000003c t ir_builder::logic_not(ir_builder::operand)
0000000000357e80 0000000000000044 t ir_builder::logic_and(ir_builder::operand, ir_builder::operand)
0000000000357ed0 0000000000000044 t ir_builder::logic_or(ir_builder::operand, ir_builder::operand)
0000000000357f20 000000000000003c t ir_builder::bit_not(ir_builder::operand)
0000000000357f60 0000000000000044 t ir_builder::bit_and(ir_builder::operand, ir_builder::operand)
0000000000357fb0 0000000000000044 t ir_builder::bit_or(ir_builder::operand, ir_builder::operand)
0000000000358000 0000000000000044 t ir_builder::lshift(ir_builder::operand, ir_builder::operand)
0000000000358050 0000000000000044 t ir_builder::rshift(ir_builder::operand, ir_builder::operand)
00000000003580a0 000000000000003c t ir_builder::f2i(ir_builder::operand)
00000000003580e0 000000000000003c t ir_builder::bitcast_f2i(ir_builder::operand)
0000000000358120 000000000000003c t ir_builder::i2f(ir_builder::operand)
0000000000358160 000000000000003c t ir_builder::bitcast_i2f(ir_builder::operand)
00000000003581a0 000000000000003c t ir_builder::i2u(ir_builder::operand)
00000000003581e0 000000000000003c t ir_builder::u2i(ir_builder::operand)
0000000000358220 000000000000003c t ir_builder::f2u(ir_builder::operand)
0000000000358260 000000000000003c t ir_builder::bitcast_f2u(ir_builder::operand)
00000000003582a0 000000000000003c t ir_builder::u2f(ir_builder::operand)
00000000003582e0 000000000000003c t ir_builder::bitcast_u2f(ir_builder::operand)
0000000000358320 000000000000003c t ir_builder::b2i(ir_builder::operand)
0000000000358360 000000000000003c t ir_builder::b2f(ir_builder::operand)
00000000003583a0 000000000000003c t ir_builder::bitcast_d2i64(ir_builder::operand)
00000000003583e0 000000000000003c t ir_builder::bitcast_d2u64(ir_builder::operand)
0000000000358420 000000000000003c t ir_builder::bitcast_i642d(ir_builder::operand)
0000000000358460 000000000000003c t ir_builder::bitcast_u642d(ir_builder::operand)
00000000003584a0 000000000000003c t ir_builder::interpolate_at_centroid(ir_builder::operand)
00000000003584e0 0000000000000044 t ir_builder::interpolate_at_offset(ir_builder::operand, ir_builder::operand)
0000000000358530 0000000000000044 t ir_builder::interpolate_at_sample(ir_builder::operand, ir_builder::operand)
0000000000358580 000000000000003c t ir_builder::f2d(ir_builder::operand)
00000000003585c0 0000000000000054 t ir_builder::fma(ir_builder::operand, ir_builder::operand, ir_builder::operand)
0000000000358620 0000000000000054 t ir_builder::lrp(ir_builder::operand, ir_builder::operand, ir_builder::operand)
0000000000358680 0000000000000054 t ir_builder::csel(ir_builder::operand, ir_builder::operand, ir_builder::operand)
00000000003586e0 0000000000000054 t ir_builder::bitfield_extract(ir_builder::operand, ir_builder::operand, ir_builder::operand)
0000000000358740 0000000000000060 t ir_builder::bitfield_insert(ir_builder::operand, ir_builder::operand, ir_builder::operand, ir_builder::operand)
00000000003587a0 0000000000000088 t ir_builder::if_tree(ir_builder::operand, ir_instruction*)
0000000000358830 00000000000000ac t ir_builder::if_tree(ir_builder::operand, ir_instruction*, ir_instruction*)
00000000003588e0 0000000000000004 W ir_visitor::visit(ir_rvalue*)
00000000003588f0 0000000000000004 W ir_control_flow_visitor::visit(ir_variable*)
0000000000358900 0000000000000004 W ir_control_flow_visitor::visit(ir_texture*)
0000000000358910 0000000000000004 W ir_control_flow_visitor::visit(ir_swizzle*)
0000000000358920 0000000000000004 W ir_control_flow_visitor::visit(ir_dereference_variable*)
0000000000358930 0000000000000004 W ir_control_flow_visitor::visit(ir_dereference_array*)
0000000000358940 0000000000000004 W ir_control_flow_visitor::visit(ir_dereference_record*)
0000000000358950 0000000000000004 W ir_control_flow_visitor::visit(ir_assignment*)
0000000000358960 0000000000000004 W ir_control_flow_visitor::visit(ir_constant*)
0000000000358970 0000000000000004 W ir_control_flow_visitor::visit(ir_call*)
0000000000358980 0000000000000004 W ir_control_flow_visitor::visit(ir_demote*)
0000000000358990 0000000000000008 W ir_rvalue::is_lvalue(_mesa_glsl_parse_state const*) const
00000000003589a0 0000000000000008 W ir_rvalue::variable_referenced() const
00000000003589b0 0000000000000008 W ir_rvalue::whole_variable_referenced()
00000000003589c0 0000000000000008 W ir_rvalue::is_uint16_constant() const
00000000003589d0 000000000000001c W ir_function_signature::accept(ir_visitor*)
00000000003589f0 000000000000001c W ir_function::accept(ir_visitor*)
0000000000358a10 000000000000001c W ir_if::accept(ir_visitor*)
0000000000358a30 000000000000001c W ir_loop::accept(ir_visitor*)
0000000000358a50 000000000000001c W ir_return::accept(ir_visitor*)
0000000000358a70 000000000000001c W ir_loop_jump::accept(ir_visitor*)
0000000000358a90 000000000000001c W ir_discard::accept(ir_visitor*)
0000000000358ab0 0000000000000004 W ir_rvalue::~ir_rvalue()
0000000000358ab0 0000000000000004 W ir_rvalue::~ir_rvalue()
0000000000358ac0 0000000000000040 W ir_swizzle::is_lvalue(_mesa_glsl_parse_state const*) const
0000000000358b00 0000000000000008 W ir_dereference_variable::variable_referenced() const
0000000000358b10 0000000000000010 W ir_dereference_variable::precision() const
0000000000358b20 0000000000000008 W ir_dereference_variable::whole_variable_referenced()
0000000000358b30 0000000000000014 W ir_dereference_array::variable_referenced() const
0000000000358b50 0000000000000028 W ir_dereference_array::precision() const
0000000000358b80 0000000000000014 W ir_dereference_record::variable_referenced() const
0000000000358ba0 0000000000000024 W ir_dereference_record::precision() const
0000000000358bd0 0000000000000004 W ir_constant::~ir_constant()
0000000000358bd0 0000000000000004 W ir_constant::~ir_constant()
0000000000358be0 0000000000000004 W ir_function_signature::~ir_function_signature()
0000000000358be0 0000000000000004 W ir_function_signature::~ir_function_signature()
0000000000358bf0 0000000000000004 W ir_function::~ir_function()
0000000000358bf0 0000000000000004 W ir_function::~ir_function()
0000000000358c00 0000000000000004 W ir_assignment::~ir_assignment()
0000000000358c00 0000000000000004 W ir_assignment::~ir_assignment()
0000000000358c10 0000000000000004 W ir_texture::~ir_texture()
0000000000358c10 0000000000000004 W ir_texture::~ir_texture()
0000000000358c20 0000000000000004 W ir_dereference_record::~ir_dereference_record()
0000000000358c20 0000000000000004 W ir_dereference_record::~ir_dereference_record()
0000000000358c30 0000000000000004 W ir_dereference_array::~ir_dereference_array()
0000000000358c30 0000000000000004 W ir_dereference_array::~ir_dereference_array()
0000000000358c40 0000000000000004 W ir_dereference_variable::~ir_dereference_variable()
0000000000358c40 0000000000000004 W ir_dereference_variable::~ir_dereference_variable()
0000000000358c50 0000000000000004 W ir_call::~ir_call()
0000000000358c50 0000000000000004 W ir_call::~ir_call()
0000000000358c60 0000000000000004 W ir_loop::~ir_loop()
0000000000358c60 0000000000000004 W ir_loop::~ir_loop()
0000000000358c70 0000000000000004 W ir_if::~ir_if()
0000000000358c70 0000000000000004 W ir_if::~ir_if()
0000000000358c80 0000000000000004 W ir_loop_jump::~ir_loop_jump()
0000000000358c80 0000000000000004 W ir_loop_jump::~ir_loop_jump()
0000000000358c90 0000000000000004 W ir_demote::~ir_demote()
0000000000358c90 0000000000000004 W ir_demote::~ir_demote()
0000000000358ca0 0000000000000004 W ir_discard::~ir_discard()
0000000000358ca0 0000000000000004 W ir_discard::~ir_discard()
0000000000358cb0 0000000000000004 W ir_return::~ir_return()
0000000000358cb0 0000000000000004 W ir_return::~ir_return()
0000000000358cc0 0000000000000004 W ir_swizzle::~ir_swizzle()
0000000000358cc0 0000000000000004 W ir_swizzle::~ir_swizzle()
0000000000358cd0 0000000000000004 W ir_variable::~ir_variable()
0000000000358cd0 0000000000000004 W ir_variable::~ir_variable()
0000000000358ce0 0000000000000008 T ir_rvalue::clone(void*, hash_table*) const
0000000000358cf0 0000000000000158 T ir_if::clone(void*, hash_table*) const
0000000000358e50 0000000000000060 T ir_return::clone(void*, hash_table*) const
0000000000358eb0 0000000000000044 T ir_loop_jump::clone(void*, hash_table*) const
0000000000358f00 0000000000000060 T ir_discard::clone(void*, hash_table*) const
0000000000358f60 0000000000000034 T ir_demote::clone(void*, hash_table*) const
0000000000358fa0 00000000000001c8 T ir_variable::clone(void*, hash_table*) const
0000000000359170 0000000000000064 t ir_swizzle::clone(void*, hash_table*) const
00000000003591e0 00000000000000ac T ir_loop::clone(void*, hash_table*) const
0000000000359290 0000000000000038 W fixup_ir_call_visitor::visit_enter(ir_call*)
00000000003592d0 0000000000000068 T ir_dereference_variable::clone(void*, hash_table*) const
0000000000359340 0000000000000080 T ir_dereference_array::clone(void*, hash_table*) const
00000000003593c0 0000000000000074 T ir_dereference_record::clone(void*, hash_table*) const
0000000000359440 00000000000001e4 T ir_texture::clone(void*, hash_table*) const
0000000000359630 00000000000000c0 T ir_assignment::clone(void*, hash_table*) const
00000000003596f0 000000000000010c T ir_function::clone(void*, hash_table*) const
0000000000359800 0000000000000004 W ir_rvalue::~ir_rvalue()
0000000000359810 0000000000000004 W ir_constant::~ir_constant()
0000000000359820 0000000000000004 W ir_texture::~ir_texture()
0000000000359830 0000000000000004 W ir_swizzle::~ir_swizzle()
0000000000359840 0000000000000004 W ir_function_signature::~ir_function_signature()
0000000000359850 0000000000000004 W ir_function::~ir_function()
0000000000359860 0000000000000004 W ir_assignment::~ir_assignment()
0000000000359870 0000000000000004 W ir_call::~ir_call()
0000000000359880 0000000000000004 W ir_loop::~ir_loop()
0000000000359890 0000000000000004 W ir_if::~ir_if()
00000000003598a0 0000000000000004 W ir_demote::~ir_demote()
00000000003598b0 0000000000000004 W ir_variable::~ir_variable()
00000000003598c0 0000000000000004 W ir_loop_jump::~ir_loop_jump()
00000000003598d0 0000000000000004 W ir_discard::~ir_discard()
00000000003598e0 0000000000000004 W ir_return::~ir_return()
00000000003598f0 0000000000000004 W ir_dereference_record::~ir_dereference_record()
0000000000359900 0000000000000004 W ir_dereference_array::~ir_dereference_array()
0000000000359910 0000000000000004 W ir_dereference_variable::~ir_dereference_variable()
0000000000359920 0000000000000118 T ir_constant::clone(void*, hash_table*) const
0000000000359a40 0000000000000030 W ir_constant::accept(ir_visitor*)
0000000000359a70 0000000000000030 W ir_rvalue::accept(ir_visitor*)
0000000000359aa0 0000000000000030 W ir_variable::accept(ir_visitor*)
0000000000359ad0 0000000000000030 W ir_assignment::accept(ir_visitor*)
0000000000359b00 0000000000000030 W ir_call::accept(ir_visitor*)
0000000000359b30 0000000000000030 W ir_demote::accept(ir_visitor*)
0000000000359b60 0000000000000030 W ir_texture::accept(ir_visitor*)
0000000000359b90 0000000000000030 W ir_swizzle::accept(ir_visitor*)
0000000000359bc0 0000000000000030 W ir_dereference_variable::accept(ir_visitor*)
0000000000359bf0 0000000000000030 W ir_dereference_array::accept(ir_visitor*)
0000000000359c20 0000000000000030 W ir_dereference_record::accept(ir_visitor*)
0000000000359c50 000000000000016c T ir_call::clone(void*, hash_table*) const
0000000000359dc0 00000000000000e0 T ir_expression::clone(void*, hash_table*) const
0000000000359ea0 00000000000000cc t ir_function_signature::clone_prototype(void*, hash_table*) const
0000000000359f70 00000000000000b0 T ir_function_signature::clone(void*, hash_table*) const
000000000035a020 00000000000000d0 t clone_ir_list(void*, exec_list*, exec_list const*)
000000000035a0f0 000000000000024c t constant_referenced(ir_dereference const*, hash_table*, ir_constant*&, int&)
000000000035a340 0000000000000008 T ir_texture::constant_expression_value(void*, hash_table*)
000000000035a340 0000000000000008 T ir_assignment::constant_expression_value(void*, hash_table*)
000000000035a340 0000000000000008 T ir_rvalue::constant_expression_value(void*, hash_table*)
000000000035a350 00000000000043c0 t ir_expression::constant_expression_value(void*, hash_table*)
000000000035e710 0000000000000230 T ir_swizzle::constant_expression_value(void*, hash_table*)
000000000035e940 0000000000000080 T ir_dereference_variable::constant_expression_value(void*, hash_table*)
000000000035e9c0 0000000000000250 T ir_dereference_array::constant_expression_value(void*, hash_table*)
000000000035ec10 0000000000000044 T ir_dereference_record::constant_expression_value(void*, hash_table*)
000000000035ec60 0000000000000004 T ir_constant::constant_expression_value(void*, hash_table*)
000000000035ec70 00000000000002e0 t ir_function_signature::constant_expression_evaluate_expression_list(void*, exec_list const&, hash_table*, ir_constant**)
000000000035ef50 00000000000001d4 t ir_function_signature::constant_expression_value(void*, exec_list*, hash_table*) [clone .part.0]
000000000035f130 000000000000007c T ir_call::constant_expression_value(void*, hash_table*)
000000000035f1b0 0000000000000078 t ir_function_signature::constant_expression_value(void*, exec_list*, hash_table*)
000000000035f230 0000000000000008 T ir_rvalue::is_negative_one() const
000000000035f230 0000000000000008 T ir_rvalue::is_one() const
000000000035f230 0000000000000008 T ir_rvalue::is_zero() const
000000000035f240 00000000000000f4 t steal_memory(ir_instruction*, void*)
000000000035f340 00000000000000a0 T ir_dereference::is_lvalue(_mesa_glsl_parse_state const*) const
000000000035f3e0 000000000000002c T ir_rvalue::ir_rvalue(ir_node_type)
000000000035f3e0 000000000000002c t ir_rvalue::ir_rvalue(ir_node_type)
000000000035f410 00000000000003c0 t ir_assignment::set_lhs(ir_rvalue*)
000000000035f7d0 0000000000000074 t ir_assignment::whole_variable_written()
000000000035f850 0000000000000034 t ir_assignment::ir_assignment(ir_dereference*, ir_rvalue*, ir_rvalue*, unsigned int)
000000000035f850 0000000000000034 T ir_assignment::ir_assignment(ir_dereference*, ir_rvalue*, ir_rvalue*, unsigned int)
000000000035f890 000000000000009c t ir_assignment::ir_assignment(ir_rvalue*, ir_rvalue*, ir_rvalue*)
000000000035f890 000000000000009c T ir_assignment::ir_assignment(ir_rvalue*, ir_rvalue*, ir_rvalue*)
000000000035f930 000000000000006c t ir_expression::ir_expression(int, glsl_type const*, ir_rvalue*, ir_rvalue*, ir_rvalue*, ir_rvalue*)
000000000035f930 000000000000006c T ir_expression::ir_expression(int, glsl_type const*, ir_rvalue*, ir_rvalue*, ir_rvalue*, ir_rvalue*)
000000000035f9a0 000000000000024c t ir_expression::ir_expression(int, ir_rvalue*)
000000000035f9a0 000000000000024c T ir_expression::ir_expression(int, ir_rvalue*)
000000000035fbf0 0000000000000288 t ir_expression::ir_expression(int, ir_rvalue*, ir_rvalue*)
000000000035fbf0 0000000000000288 T ir_expression::ir_expression(int, ir_rvalue*, ir_rvalue*)
000000000035fe80 00000000000000d8 t ir_expression::ir_expression(int, ir_rvalue*, ir_rvalue*, ir_rvalue*)
000000000035fe80 00000000000000d8 T ir_expression::ir_expression(int, ir_rvalue*, ir_rvalue*, ir_rvalue*)
000000000035ff60 000000000000002c t ir_expression::get_num_operands(ir_expression_operation)
000000000035ff90 0000000000000068 t depth_layout_string(ir_depth_layout)
0000000000360000 000000000000002c T ir_expression::variable_referenced() const
0000000000360030 0000000000000034 t ir_constant::ir_constant()
0000000000360030 0000000000000034 T ir_constant::ir_constant()
0000000000360070 000000000000004c t ir_constant::ir_constant(glsl_type const*, ir_constant_data const*)
0000000000360070 000000000000004c T ir_constant::ir_constant(glsl_type const*, ir_constant_data const*)
00000000003600c0 00000000000000b4 t ir_constant::ir_constant(float16_t, unsigned int)
00000000003600c0 00000000000000b4 T ir_constant::ir_constant(float16_t, unsigned int)
0000000000360180 00000000000000b4 t ir_constant::ir_constant(float, unsigned int)
0000000000360180 00000000000000b4 T ir_constant::ir_constant(float, unsigned int)
0000000000360240 00000000000000b4 t ir_constant::ir_constant(double, unsigned int)
0000000000360240 00000000000000b4 T ir_constant::ir_constant(double, unsigned int)
0000000000360300 00000000000000b4 t ir_constant::ir_constant(unsigned int, unsigned int)
0000000000360300 00000000000000b4 T ir_constant::ir_constant(unsigned int, unsigned int)
00000000003603c0 00000000000000b4 t ir_constant::ir_constant(int, unsigned int)
00000000003603c0 00000000000000b4 T ir_constant::ir_constant(int, unsigned int)
0000000000360480 00000000000000b4 t ir_constant::ir_constant(unsigned long, unsigned int)
0000000000360480 00000000000000b4 T ir_constant::ir_constant(unsigned long, unsigned int)
0000000000360540 00000000000000b4 t ir_constant::ir_constant(long, unsigned int)
0000000000360540 00000000000000b4 T ir_constant::ir_constant(long, unsigned int)
0000000000360600 00000000000000b0 t ir_constant::ir_constant(bool, unsigned int)
0000000000360600 00000000000000b0 T ir_constant::ir_constant(bool, unsigned int)
00000000003606b0 0000000000000118 t ir_constant::ir_constant(ir_constant const*, unsigned int)
00000000003606b0 0000000000000118 T ir_constant::ir_constant(ir_constant const*, unsigned int)
00000000003607d0 0000000000000164 t ir_constant::zero(void*, glsl_type const*)
0000000000360940 00000000000000f8 t ir_constant::get_bool_component(unsigned int) const
0000000000360a40 00000000000000ec t ir_constant::get_float_component(unsigned int) const
0000000000360b30 0000000000000104 t ir_constant::get_double_component(unsigned int) const
0000000000360c40 00000000000000d4 t ir_constant::get_int_component(unsigned int) const
0000000000360d20 00000000000000d4 t ir_constant::get_uint_component(unsigned int) const
0000000000360e00 00000000000000e0 t ir_constant::get_int64_component(unsigned int) const
0000000000360ee0 00000000000000e0 t ir_constant::get_uint64_component(unsigned int) const
0000000000360fc0 0000000000000594 t ir_constant::ir_constant(glsl_type const*, exec_list*)
0000000000360fc0 0000000000000594 T ir_constant::ir_constant(glsl_type const*, exec_list*)
0000000000361560 000000000000003c t ir_constant::get_array_element(unsigned int) const
00000000003615a0 000000000000000c t ir_constant::get_record_field(int)
00000000003615b0 0000000000000230 t ir_constant::copy_offset(ir_constant*, int)
00000000003617e0 000000000000028c t ir_constant::copy_masked_offset(ir_constant*, int, unsigned int)
0000000000361a70 0000000000000250 t ir_constant::has_value(ir_constant const*) const
0000000000361cc0 00000000000001e0 T ir_constant::is_value(float, int) const
0000000000361ea0 0000000000000018 T ir_constant::is_zero() const
0000000000361ec0 0000000000000018 T ir_constant::is_one() const
0000000000361ee0 0000000000000018 T ir_constant::is_negative_one() const
0000000000361f00 000000000000002c T ir_constant::is_uint16_constant() const
0000000000361f30 0000000000000034 t ir_loop::ir_loop()
0000000000361f30 0000000000000034 T ir_loop::ir_loop()
0000000000361f70 0000000000000038 t ir_dereference_variable::ir_dereference_variable(ir_variable*)
0000000000361f70 0000000000000038 T ir_dereference_variable::ir_dereference_variable(ir_variable*)
0000000000361fb0 00000000000000c4 t ir_dereference_array::set_array(ir_rvalue*)
0000000000362080 0000000000000030 t ir_dereference_array::ir_dereference_array(ir_rvalue*, ir_rvalue*)
0000000000362080 0000000000000030 T ir_dereference_array::ir_dereference_array(ir_rvalue*, ir_rvalue*)
00000000003620b0 0000000000000094 t ir_dereference_array::ir_dereference_array(ir_variable*, ir_rvalue*)
00000000003620b0 0000000000000094 T ir_dereference_array::ir_dereference_array(ir_variable*, ir_rvalue*)
0000000000362150 0000000000000074 t ir_dereference_record::ir_dereference_record(ir_rvalue*, char const*)
0000000000362150 0000000000000074 T ir_dereference_record::ir_dereference_record(ir_rvalue*, char const*)
00000000003621d0 0000000000000014 t ir_texture::opcode_string()
00000000003621f0 000000000000000c t ir_texture::set_sampler(ir_dereference*, glsl_type const*)
0000000000362200 000000000000014c t ir_swizzle::init_mask(unsigned int const*, unsigned int)
0000000000362350 0000000000000058 t ir_swizzle::ir_swizzle(ir_rvalue*, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int)
0000000000362350 0000000000000058 T ir_swizzle::ir_swizzle(ir_rvalue*, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int)
00000000003623b0 000000000000003c t ir_swizzle::ir_swizzle(ir_rvalue*, unsigned int const*, unsigned int)
00000000003623b0 000000000000003c T ir_swizzle::ir_swizzle(ir_rvalue*, unsigned int const*, unsigned int)
00000000003623f0 0000000000000074 t ir_swizzle::ir_swizzle(ir_rvalue*, ir_swizzle_mask)
00000000003623f0 0000000000000074 T ir_swizzle::ir_swizzle(ir_rvalue*, ir_swizzle_mask)
0000000000362470 0000000000000130 t ir_swizzle::create(ir_rvalue*, char const*, unsigned int)
00000000003625a0 0000000000000014 T ir_swizzle::variable_referenced() const
00000000003625c0 0000000000000238 t ir_variable::ir_variable(glsl_type const*, char const*, ir_variable_mode)
00000000003625c0 0000000000000238 T ir_variable::ir_variable(glsl_type const*, char const*, ir_variable_mode)
0000000000362800 0000000000000050 t interpolation_string(unsigned int)
0000000000362850 0000000000000084 t ir_variable::enable_extension_warning(char const*)
00000000003628e0 0000000000000060 t ir_function_signature::ir_function_signature(glsl_type const*, bool (*)(_mesa_glsl_parse_state const*))
00000000003628e0 0000000000000060 T ir_function_signature::ir_function_signature(glsl_type const*, bool (*)(_mesa_glsl_parse_state const*))
0000000000362940 0000000000000010 t ir_function_signature::is_builtin() const
0000000000362950 0000000000000020 t ir_function_signature::is_builtin_available(_mesa_glsl_parse_state const*) const
0000000000362970 00000000000000bc t ir_function_signature::qualifiers_match(exec_list*)
0000000000362a30 0000000000000050 t ir_function_signature::replace_parameters(exec_list*)
0000000000362a80 000000000000005c t ir_function::ir_function(char const*)
0000000000362a80 000000000000005c T ir_function::ir_function(char const*)
0000000000362ae0 000000000000003c t ir_function::has_user_signature()
0000000000362b20 0000000000000044 t ir_rvalue::error_value(void*)
0000000000362b70 000000000000008c t visit_exec_list(exec_list*, ir_visitor*)
0000000000362c00 0000000000000068 t reparent_ir(exec_list*, void*)
0000000000362c70 0000000000000020 t vertices_per_prim(unsigned int)
0000000000362c90 00000000000000f4 t mode_string(ir_variable const*)
0000000000362d90 0000000000000004 W ir_control_flow_visitor::visit(ir_expression*)
0000000000362da0 0000000000000008 T ir_instruction::equals(ir_instruction const*, ir_node_type) const
0000000000362db0 0000000000000004 W ir_expression::~ir_expression()
0000000000362db0 0000000000000004 W ir_expression::~ir_expression()
0000000000362dc0 0000000000000004 W ir_expression::~ir_expression()
0000000000362dd0 00000000000000c0 T ir_expression::equals(ir_instruction const*, ir_node_type) const
0000000000362e90 0000000000000030 W ir_expression::accept(ir_visitor*)
0000000000362ec0 0000000000000090 T ir_constant::equals(ir_instruction const*, ir_node_type) const
0000000000362f50 0000000000000028 T ir_dereference_variable::equals(ir_instruction const*, ir_node_type) const
0000000000362f80 000000000000009c T ir_dereference_array::equals(ir_instruction const*, ir_node_type) const
0000000000363020 0000000000000068 T ir_swizzle::equals(ir_instruction const*, ir_node_type) const
0000000000363090 0000000000000208 T ir_texture::equals(ir_instruction const*, ir_node_type) const
00000000003632a0 0000000000000414 t ir_function::matching_signature(_mesa_glsl_parse_state*, exec_list const*, bool, bool*)
00000000003636c0 0000000000000018 t ir_function::matching_signature(_mesa_glsl_parse_state*, exec_list const*, bool)
00000000003636e0 00000000000000c4 t ir_function::exact_matching_signature(_mesa_glsl_parse_state*, exec_list const*)
00000000003637b0 0000000000000034 T ir_hierarchical_visitor::visit_enter(ir_discard*)
00000000003637b0 0000000000000034 T ir_hierarchical_visitor::visit_enter(ir_swizzle*)
00000000003637b0 0000000000000034 t ir_hierarchical_visitor::visit_enter(ir_texture*)
00000000003637b0 0000000000000034 T ir_hierarchical_visitor::visit_enter(ir_function*)
00000000003637b0 0000000000000034 T ir_hierarchical_visitor::visit_enter(ir_assignment*)
00000000003637b0 0000000000000034 t ir_hierarchical_visitor::visit_enter(ir_expression*)
00000000003637b0 0000000000000034 T ir_hierarchical_visitor::visit_enter(ir_emit_vertex*)
00000000003637b0 0000000000000034 T ir_hierarchical_visitor::visit_enter(ir_end_primitive*)
00000000003637b0 0000000000000034 t ir_hierarchical_visitor::visit_enter(ir_dereference_array*)
00000000003637b0 0000000000000034 t ir_hierarchical_visitor::visit_enter(ir_dereference_record*)
00000000003637b0 0000000000000034 T ir_hierarchical_visitor::visit_enter(ir_function_signature*)
00000000003637b0 0000000000000034 T ir_hierarchical_visitor::visit_enter(ir_if*)
00000000003637b0 0000000000000034 T ir_hierarchical_visitor::visit_enter(ir_call*)
00000000003637b0 0000000000000034 T ir_hierarchical_visitor::visit_enter(ir_loop*)
00000000003637b0 0000000000000034 T ir_hierarchical_visitor::visit_enter(ir_demote*)
00000000003637b0 0000000000000034 T ir_hierarchical_visitor::visit_enter(ir_return*)
00000000003637f0 0000000000000034 T ir_hierarchical_visitor::visit_leave(ir_discard*)
00000000003637f0 0000000000000034 T ir_hierarchical_visitor::visit_leave(ir_swizzle*)
00000000003637f0 0000000000000034 T ir_hierarchical_visitor::visit_leave(ir_texture*)
00000000003637f0 0000000000000034 T ir_hierarchical_visitor::visit_leave(ir_function*)
00000000003637f0 0000000000000034 t ir_hierarchical_visitor::visit_leave(ir_assignment*)
00000000003637f0 0000000000000034 T ir_hierarchical_visitor::visit_leave(ir_expression*)
00000000003637f0 0000000000000034 T ir_hierarchical_visitor::visit_leave(ir_emit_vertex*)
00000000003637f0 0000000000000034 T ir_hierarchical_visitor::visit_leave(ir_end_primitive*)
00000000003637f0 0000000000000034 T ir_hierarchical_visitor::visit_leave(ir_dereference_array*)
00000000003637f0 0000000000000034 T ir_hierarchical_visitor::visit_leave(ir_dereference_record*)
00000000003637f0 0000000000000034 T ir_hierarchical_visitor::visit_leave(ir_function_signature*)
00000000003637f0 0000000000000034 T ir_hierarchical_visitor::visit_leave(ir_if*)
00000000003637f0 0000000000000034 t ir_hierarchical_visitor::visit_leave(ir_call*)
00000000003637f0 0000000000000034 T ir_hierarchical_visitor::visit_leave(ir_loop*)
00000000003637f0 0000000000000034 T ir_hierarchical_visitor::visit_leave(ir_demote*)
00000000003637f0 0000000000000034 T ir_hierarchical_visitor::visit_leave(ir_return*)
0000000000363830 000000000000004c T ir_hierarchical_visitor::visit(ir_barrier*)
0000000000363830 000000000000004c T ir_hierarchical_visitor::visit(ir_constant*)
0000000000363830 000000000000004c T ir_hierarchical_visitor::visit(ir_variable*)
0000000000363830 000000000000004c T ir_hierarchical_visitor::visit(ir_loop_jump*)
0000000000363830 000000000000004c T ir_hierarchical_visitor::visit(ir_dereference_variable*)
0000000000363830 000000000000004c T ir_hierarchical_visitor::visit(ir_rvalue*)
0000000000363880 000000000000001c T ir_hierarchical_visitor::ir_hierarchical_visitor()
0000000000363880 000000000000001c t ir_hierarchical_visitor::ir_hierarchical_visitor()
00000000003638a0 0000000000000008 t ir_hierarchical_visitor::run(exec_list*)
00000000003638b0 000000000000003c t visit_tree(ir_instruction*, void (*)(ir_instruction*, void*), void*, void (*)(ir_instruction*, void*), void*)
00000000003638f0 0000000000000004 W ir_control_flow_visitor::visit(ir_emit_vertex*)
0000000000363900 0000000000000004 W ir_control_flow_visitor::visit(ir_end_primitive*)
0000000000363910 0000000000000004 W ir_control_flow_visitor::visit(ir_barrier*)
0000000000363920 000000000000001c T ir_dereference_variable::accept(ir_hierarchical_visitor*)
0000000000363940 000000000000001c T ir_barrier::accept(ir_hierarchical_visitor*)
0000000000363960 0000000000000004 W ir_barrier::~ir_barrier()
0000000000363960 0000000000000004 W ir_barrier::~ir_barrier()
0000000000363970 0000000000000004 W ir_end_primitive::~ir_end_primitive()
0000000000363970 0000000000000004 W ir_end_primitive::~ir_end_primitive()
0000000000363980 0000000000000004 W ir_emit_vertex::~ir_emit_vertex()
0000000000363980 0000000000000004 W ir_emit_vertex::~ir_emit_vertex()
0000000000363990 0000000000000058 W ir_emit_vertex::clone(void*, hash_table*) const
00000000003639f0 0000000000000058 W ir_end_primitive::clone(void*, hash_table*) const
0000000000363a50 0000000000000034 W ir_barrier::clone(void*, hash_table*) const
0000000000363a90 0000000000000004 W ir_barrier::~ir_barrier()
0000000000363aa0 0000000000000004 W ir_end_primitive::~ir_end_primitive()
0000000000363ab0 0000000000000004 W ir_emit_vertex::~ir_emit_vertex()
0000000000363ac0 0000000000000088 T ir_emit_vertex::accept(ir_hierarchical_visitor*)
0000000000363b50 0000000000000088 T ir_end_primitive::accept(ir_hierarchical_visitor*)
0000000000363be0 0000000000000030 W ir_barrier::accept(ir_visitor*)
0000000000363c10 0000000000000030 W ir_emit_vertex::accept(ir_visitor*)
0000000000363c40 0000000000000030 W ir_end_primitive::accept(ir_visitor*)
0000000000363c70 00000000000000c0 t visit_list_elements(ir_hierarchical_visitor*, exec_list*, bool)
0000000000363d30 000000000000001c T ir_rvalue::accept(ir_hierarchical_visitor*)
0000000000363d50 000000000000001c T ir_variable::accept(ir_hierarchical_visitor*)
0000000000363d70 0000000000000078 T ir_loop::accept(ir_hierarchical_visitor*)
0000000000363df0 000000000000001c T ir_loop_jump::accept(ir_hierarchical_visitor*)
0000000000363e10 00000000000000a0 T ir_function_signature::accept(ir_hierarchical_visitor*)
0000000000363eb0 0000000000000078 T ir_function::accept(ir_hierarchical_visitor*)
0000000000363f30 00000000000000bc T ir_expression::accept(ir_hierarchical_visitor*)
0000000000363ff0 0000000000000168 T ir_texture::accept(ir_hierarchical_visitor*)
0000000000364160 000000000000007c T ir_swizzle::accept(ir_hierarchical_visitor*)
00000000003641e0 00000000000000c4 T ir_dereference_array::accept(ir_hierarchical_visitor*)
00000000003642b0 000000000000007c T ir_dereference_record::accept(ir_hierarchical_visitor*)
0000000000364330 00000000000000cc t ir_assignment::accept(ir_hierarchical_visitor*)
0000000000364400 000000000000001c T ir_constant::accept(ir_hierarchical_visitor*)
0000000000364420 00000000000000d8 T ir_call::accept(ir_hierarchical_visitor*)
0000000000364500 0000000000000080 T ir_return::accept(ir_hierarchical_visitor*)
0000000000364580 0000000000000080 T ir_discard::accept(ir_hierarchical_visitor*)
0000000000364600 0000000000000060 T ir_demote::accept(ir_hierarchical_visitor*)
0000000000364660 00000000000000c8 T ir_if::accept(ir_hierarchical_visitor*)
0000000000364730 000000000000001c T ir_print_visitor::visit(ir_rvalue*)
0000000000364750 0000000000000074 T ir_print_visitor::visit(ir_dereference_array*)
00000000003647d0 0000000000000074 T ir_print_visitor::visit(ir_dereference_record*)
0000000000364850 000000000000001c T ir_print_visitor::visit(ir_demote*)
0000000000364870 0000000000000060 T ir_print_visitor::visit(ir_emit_vertex*)
00000000003648d0 0000000000000060 T ir_print_visitor::visit(ir_end_primitive*)
0000000000364930 000000000000001c T ir_print_visitor::visit(ir_barrier*)
0000000000364950 00000000000000d4 T ir_print_visitor::visit(ir_swizzle*)
0000000000364a30 00000000000000ec T ir_print_visitor::visit(ir_assignment*)
0000000000364b20 0000000000000068 T ir_print_visitor::visit(ir_discard*)
0000000000364b90 0000000000000068 T ir_print_visitor::visit(ir_return*)
0000000000364c00 00000000000000c4 t print_type(__sFILE*, glsl_type const*)
0000000000364cd0 00000000000000b4 T ir_print_visitor::visit(ir_expression*)
0000000000364d90 0000000000000024 T ir_print_visitor::visit(ir_loop_jump*)
0000000000364dc0 0000000000000040 T ir_print_visitor::~ir_print_visitor()
0000000000364dc0 0000000000000040 T ir_print_visitor::~ir_print_visitor()
0000000000364e00 0000000000000294 T ir_print_visitor::visit(ir_texture*)
00000000003650a0 0000000000000060 t print_float_constant(__sFILE*, float)
0000000000365100 00000000000000dc T ir_print_visitor::visit(ir_call*)
00000000003651e0 00000000000003f8 T ir_print_visitor::visit(ir_constant*)
00000000003655e0 000000000000004c T ir_print_visitor::~ir_print_visitor()
0000000000365630 0000000000000130 T ir_print_visitor::visit(ir_loop*)
0000000000365760 0000000000000188 T ir_print_visitor::visit(ir_function*)
00000000003658f0 0000000000000348 T ir_print_visitor::visit(ir_function_signature*)
0000000000365c40 00000000000002e0 T ir_print_visitor::visit(ir_if*)
0000000000365f20 000000000000008c t ir_instruction::fprint(__sFILE*) const
0000000000365fb0 000000000000002c t ir_instruction::print() const
0000000000365fe0 000000000000018c t _mesa_print_ir
0000000000366170 00000000000000e0 t ir_print_visitor::unique_name(ir_variable*)
0000000000366250 000000000000033c T ir_print_visitor::visit(ir_variable*)
0000000000366590 0000000000000064 T ir_print_visitor::visit(ir_dereference_variable*)
0000000000366600 0000000000000004 t validate_ir_tree(exec_list*)
0000000000366610 0000000000000014 t (anonymous namespace)::deref_type_updater::visit(ir_dereference_variable*)
0000000000366630 0000000000000024 t (anonymous namespace)::deref_type_updater::visit_leave(ir_dereference_array*)
0000000000366660 0000000000000028 t (anonymous namespace)::deref_type_updater::visit_leave(ir_dereference_record*)
0000000000366690 0000000000000004 t (anonymous namespace)::array_resize_visitor::~array_resize_visitor()
0000000000366690 0000000000000004 t (anonymous namespace)::array_resize_visitor::~array_resize_visitor()
00000000003666a0 000000000000005c t (anonymous namespace)::find_emit_vertex_visitor::visit_leave(ir_emit_vertex*)
0000000000366700 000000000000005c t (anonymous namespace)::find_emit_vertex_visitor::visit_leave(ir_end_primitive*)
0000000000366760 0000000000000010 t assign_attribute_or_color_locations(void*, gl_shader_program*, gl_constants*, unsigned int, bool)::temp_attr::compare(void const*, void const*)
0000000000366770 0000000000000170 t match_explicit_outputs_to_inputs(gl_linked_shader*, gl_linked_shader*)
00000000003668e0 000000000000004c t (anonymous namespace)::find_deref_visitor::visit(ir_dereference_variable*)
0000000000366930 00000000000001dc t move_non_declarations(exec_list*, exec_node*, bool, gl_linked_shader*)
0000000000366b10 0000000000000008 t (anonymous namespace)::array_resize_visitor::~array_resize_visitor()
0000000000366b20 0000000000000098 t linker_optimisation_loop(gl_context*, exec_list*, unsigned int)
0000000000366bc0 00000000000000ec t remap_variables(ir_instruction*, gl_linked_shader*, hash_table*)::remap_visitor::visit(ir_dereference_variable*)
0000000000366cb0 0000000000000058 t set_always_active_io(exec_list*, ir_variable_mode) [clone .isra.0]
0000000000366d10 0000000000000474 t add_shader_variable(gl_context const*, gl_shader_program*, set*, unsigned int, unsigned int, ir_variable*, char const*, glsl_type const*, bool, int, bool, glsl_type const*) [clone .isra.0]
0000000000367190 00000000000001fc t add_interface_variables(gl_context const*, gl_shader_program*, set*, unsigned int, unsigned int) [clone .isra.0]
0000000000367390 00000000000000dc t (anonymous namespace)::dynamic_sampler_array_indexing_visitor::visit_enter(ir_dereference_array*)
0000000000367470 00000000000002ac t add_packed_varyings(gl_context const*, gl_shader_program*, set*, int, unsigned int) [clone .isra.0]
0000000000367720 00000000000001bc t (anonymous namespace)::find_assignment_visitor::visit_enter(ir_call*)
00000000003678e0 00000000000000a8 t (anonymous namespace)::find_assignment_visitor::visit_enter(ir_assignment*)
0000000000367990 00000000000000a8 t linker_error
0000000000367a40 0000000000000104 t (anonymous namespace)::array_resize_visitor::visit(ir_variable*)
0000000000367b50 0000000000000240 t analyze_clip_cull_usage(gl_shader_program*, gl_linked_shader*, gl_context*, shader_info*)
0000000000367d90 00000000000002e0 t interstage_cross_validate_uniform_blocks(gl_shader_program*, bool)
0000000000368070 00000000000000a0 t linker_warning
0000000000368110 000000000000095c t assign_attribute_or_color_locations(void*, gl_shader_program*, gl_constants*, unsigned int, bool)
0000000000368a70 00000000000000c8 t parse_program_resource_name(char const*, char const**)
0000000000368b40 000000000000006c t link_invalidate_variable_locations(exec_list*)
0000000000368bb0 0000000000000128 t validate_intrastage_arrays(gl_shader_program*, ir_variable*, ir_variable*, bool)
0000000000368ce0 0000000000000624 t cross_validate_globals(gl_context*, gl_shader_program*, exec_list*, glsl_symbol_table*, bool) [clone .isra.0]
0000000000369310 00000000000000a8 t array_sizing_visitor::update_interface_members_array(glsl_type const*, glsl_type const*)
00000000003693c0 00000000000005d8 W array_sizing_visitor::visit(ir_variable*)
00000000003699a0 0000000000001340 t link_intrastage_shaders(void*, gl_context*, gl_shader_program*, gl_shader**, unsigned int, bool)
000000000036ace0 00000000000005d0 t build_program_resource_list(gl_context*, gl_shader_program*, bool)
000000000036b2b0 0000000000001a60 t link_shaders(gl_context*, gl_shader_program*)
000000000036cd10 0000000000000050 t link_util_should_add_buffer_variable
000000000036cd60 00000000000000e0 t link_util_add_program_resource
000000000036ce40 000000000000008c t link_util_find_empty_block
000000000036ced0 00000000000000ac t link_util_update_empty_uniform_locations
000000000036cf80 0000000000000098 t link_util_check_subroutine_resources
000000000036d020 0000000000000264 t link_util_check_uniform_resources
000000000036d290 0000000000000134 t link_util_calculate_subroutine_compat
000000000036d3d0 00000000000000f4 t _mark_array_elements_referenced(array_deref_range const*, unsigned int, unsigned int, unsigned int, unsigned int*)
000000000036d4d0 000000000000001c t link_util_mark_array_elements_referenced
000000000036d4f0 0000000000000018 t (anonymous namespace)::cmp_actives(void const*, void const*)
000000000036d510 00000000000002a4 t (anonymous namespace)::process_atomic_variable(glsl_type const*, gl_shader_program*, unsigned int*, ir_variable*, (anonymous namespace)::active_atomic_buffer*, unsigned int*, int*, unsigned int)
000000000036d7c0 00000000000002f8 t (anonymous namespace)::find_active_atomic_counters(gl_context*, gl_shader_program*, unsigned int*)
000000000036dac0 000000000000036c t link_assign_atomic_counter_resources(gl_context*, gl_shader_program*)
000000000036de30 000000000000025c t link_check_atomic_counter_resources(gl_context*, gl_shader_program*)
000000000036e090 00000000000000c0 t (anonymous namespace)::call_link_visitor::visit_leave(ir_call*)
000000000036e150 0000000000000064 t find_matching_signature(char const*, exec_list const*, glsl_symbol_table*)
000000000036e1c0 0000000000000320 t (anonymous namespace)::call_link_visitor::visit_enter(ir_call*)
000000000036e4e0 000000000000001c t (anonymous namespace)::call_link_visitor::visit(ir_variable*)
000000000036e500 0000000000000180 t (anonymous namespace)::call_link_visitor::visit(ir_dereference_variable*)
000000000036e680 000000000000009c t link_function_calls(gl_shader_program*, gl_linked_shader*, gl_shader**, unsigned int)
000000000036e720 000000000000011c t (anonymous namespace)::interstage_member_mismatch(gl_shader_program*, glsl_type const*, glsl_type const*)
000000000036e840 0000000000000260 t (anonymous namespace)::intrastage_match(ir_variable*, ir_variable*, gl_shader_program*, bool)
000000000036eaa0 0000000000000310 t validate_intrastage_interface_blocks(gl_shader_program*, gl_shader const**, unsigned int)
000000000036edb0 00000000000004e0 t validate_interstage_inout_blocks(gl_shader_program*, gl_linked_shader const*, gl_linked_shader const*)
000000000036f290 00000000000001f0 t validate_interstage_uniform_blocks(gl_shader_program*, gl_linked_shader**)
000000000036f480 0000000000000004 T program_resource_visitor::enter_record(glsl_type const*, char const*, bool, glsl_interface_packing)
000000000036f480 0000000000000004 T program_resource_visitor::leave_record(glsl_type const*, char const*, bool, glsl_interface_packing)
000000000036f490 0000000000000004 T program_resource_visitor::set_buffer_offset(unsigned int)
000000000036f490 0000000000000004 T program_resource_visitor::set_record_array_count(unsigned int)
000000000036f4a0 0000000000000008 W parcel_out_uniform_storage::set_buffer_offset(unsigned int)
000000000036f4b0 0000000000000008 W parcel_out_uniform_storage::set_record_array_count(unsigned int)
000000000036f4c0 0000000000000028 W parcel_out_uniform_storage::~parcel_out_uniform_storage()
000000000036f4c0 0000000000000028 W parcel_out_uniform_storage::~parcel_out_uniform_storage()
000000000036f4f0 000000000000007c t get_top_level_name(char const*)
000000000036f570 00000000000000dc t is_top_level_shader_storage_block_member(char const*, char const*, char const*)
000000000036f650 0000000000000078 W parcel_out_uniform_storage::leave_record(glsl_type const*, char const*, bool, glsl_interface_packing)
000000000036f6d0 0000000000000078 W parcel_out_uniform_storage::enter_record(glsl_type const*, char const*, bool, glsl_interface_packing)
000000000036f750 0000000000000034 W parcel_out_uniform_storage::~parcel_out_uniform_storage()
000000000036f790 0000000000000070 t assign_hidden_uniform_slot_id(char const*, unsigned int, void*)
000000000036f800 00000000000001dc t parcel_out_uniform_storage::set_opaque_indices(glsl_type const*, gl_uniform_storage*, char const*, unsigned int&, string_to_uint_map*) [clone .isra.0]
000000000036f9e0 0000000000000214 t (anonymous namespace)::count_uniform_size::visit_field(glsl_type const*, char const*, bool, glsl_type const*, glsl_interface_packing, bool)
000000000036fc00 0000000000000ad4 W parcel_out_uniform_storage::visit_field(glsl_type const*, char const*, bool, glsl_type const*, glsl_interface_packing, bool)
00000000003706e0 00000000000003d4 t program_resource_visitor::recursion(glsl_type const*, char**, unsigned long, bool, glsl_type const*, glsl_interface_packing, bool, unsigned int, glsl_struct_field const*)
0000000000370ac0 00000000000000b4 t program_resource_visitor::process(glsl_type const*, char const*, bool)
0000000000370b80 0000000000000228 t program_resource_visitor::process(ir_variable*, glsl_type const*, bool)
0000000000370db0 000000000000001c t program_resource_visitor::process(ir_variable*, bool)
0000000000370dd0 000000000000005c t link_calculate_matrix_stride(glsl_type const*, bool, glsl_interface_packing)
0000000000370e30 00000000000004b8 t parcel_out_uniform_storage::set_and_process(ir_variable*)
00000000003712f0 0000000000000ea0 t link_assign_uniform_locations(gl_shader_program*, gl_context*)
0000000000372190 0000000000000288 t linker::set_opaque_binding(void*, gl_shader_program*, ir_variable const*, glsl_type const*, char const*, int*)
0000000000372420 00000000000000a8 t linker::copy_constant_to_storage(gl_constant_value*, ir_constant const*, glsl_base_type, unsigned int, unsigned int)
00000000003724d0 00000000000002c8 t linker::set_uniform_initializer(void*, gl_shader_program*, char const*, glsl_type const*, ir_constant*, unsigned int)
00000000003727a0 00000000000001b4 t link_set_uniform_initializers(gl_shader_program*, unsigned int)
0000000000372960 0000000000000008 t (anonymous namespace)::ubo_visitor::set_buffer_offset(unsigned int)
0000000000372970 0000000000000010 t (anonymous namespace)::count_block_size::visit_field(glsl_type const*, char const*, bool, glsl_type const*, glsl_interface_packing, bool)
0000000000372980 0000000000000068 t resize_block_array(glsl_type const*, uniform_block_array_elements*)
00000000003729f0 0000000000000188 t process_block_array_leaf(char const*, gl_uniform_block*, (anonymous namespace)::ubo_visitor*, gl_uniform_buffer_variable*, link_uniform_block_active const*, unsigned int*, unsigned int, unsigned int, gl_context*, gl_shader_program*)
0000000000372b80 0000000000000204 t (anonymous namespace)::ubo_visitor::visit_field(glsl_type const*, char const*, bool, glsl_type const*, glsl_interface_packing, bool)
0000000000372d90 0000000000000134 t process_block_array(uniform_block_array_elements*, char**, unsigned long, gl_uniform_block*, (anonymous namespace)::ubo_visitor*, gl_uniform_buffer_variable*, link_uniform_block_active const*, unsigned int*, unsigned int, gl_context*, gl_shader_program*, unsigned int)
0000000000372ed0 0000000000000068 t (anonymous namespace)::ubo_visitor::enter_record(glsl_type const*, char const*, bool, glsl_interface_packing)
0000000000372ed0 0000000000000068 t (anonymous namespace)::ubo_visitor::leave_record(glsl_type const*, char const*, bool, glsl_interface_packing)
0000000000372f40 00000000000001ac t create_buffer_blocks(void*, gl_context*, gl_shader_program*, gl_uniform_block**, unsigned int, hash_table*, unsigned int, bool) [clone .part.0]
00000000003730f0 0000000000000318 t link_uniform_blocks(void*, gl_context*, gl_shader_program*, gl_linked_shader*, gl_uniform_block**, unsigned int*, gl_uniform_block**, unsigned int*)
0000000000373410 000000000000023c t link_cross_validate_uniform_block(void*, gl_uniform_block**, unsigned int*, gl_uniform_block*)
0000000000373650 0000000000000090 t compute_variable_location_slot(ir_variable*, gl_shader_stage)
00000000003736e0 0000000000000028 t cmp_xfb_offset(void const*, void const*)
0000000000373710 0000000000000028 t (anonymous namespace)::varying_matches::match_comparator(void const*, void const*)
0000000000373740 0000000000000430 t check_location_aliasing(explicit_location_info (*) [4], ir_variable*, unsigned int, unsigned int, unsigned int, glsl_type const*, unsigned int, bool, bool, bool, gl_shader_program*, gl_shader_stage)
0000000000373b70 0000000000000060 t io_variable_cmp(void const*, void const*)
0000000000373bd0 0000000000000438 t cross_validate_types_and_qualifiers(gl_context*, gl_shader_program*, ir_variable const*, ir_variable const*, gl_shader_stage, gl_shader_stage)
0000000000374010 0000000000000094 t cross_validate_front_and_back_color(gl_context*, gl_shader_program*, ir_variable const*, ir_variable const*, ir_variable const*, gl_shader_stage, gl_shader_stage)
00000000003740b0 000000000000023c t create_xfb_varying_names(void*, glsl_type const*, char**, unsigned long, unsigned int*, char const*, glsl_type const*, char***)
00000000003742f0 00000000000000ec t canonicalize_shader_io(exec_list*, ir_variable_mode)
00000000003743e0 000000000000007c W tfeedback_candidate_generator::visit_field(glsl_type const*, char const*, bool, glsl_type const*, glsl_interface_packing, bool)
0000000000374460 0000000000000048 t (anonymous namespace)::varying_matches::xfb_comparator(void const*, void const*)
00000000003744b0 00000000000000d8 t remove_unused_shader_inputs_and_outputs(bool, gl_linked_shader*, ir_variable_mode) [clone .part.0]
0000000000374590 0000000000000048 t (anonymous namespace)::varying_matches::not_xfb_comparator(void const*, void const*)
00000000003745e0 000000000000029c t validate_explicit_variable_location(gl_context*, explicit_location_info (*) [4], ir_variable*, gl_shader_program*, gl_linked_shader*)
0000000000374880 0000000000000170 t reserved_varying_slot(gl_linked_shader*, ir_variable_mode)
00000000003749f0 00000000000004a4 t (anonymous namespace)::varying_matches::record(ir_variable*, ir_variable*) [clone .part.0]
0000000000374ea0 0000000000000148 t validate_first_and_last_interface_explicit_locations(gl_context*, gl_shader_program*, gl_shader_stage, gl_shader_stage)
0000000000374ff0 00000000000003ec t cross_validate_outputs_to_inputs(gl_context*, gl_shader_program*, gl_linked_shader*, gl_linked_shader*)
00000000003753e0 0000000000000214 t tfeedback_decl::init(gl_context*, void const*, char const*)
0000000000375600 0000000000000304 t tfeedback_decl::assign_location(gl_context*, gl_shader_program*)
0000000000375910 00000000000000c0 t tfeedback_decl::get_num_outputs() const
00000000003759d0 00000000000004b8 t tfeedback_decl::store(gl_context*, gl_shader_program*, gl_transform_feedback_info*, unsigned int, unsigned int, unsigned int, unsigned int**, bool*, bool, void const*) const
0000000000375e90 00000000000000c0 t tfeedback_decl::find_candidate(gl_shader_program*, hash_table*)
0000000000375f50 0000000000000110 t linker::populate_consumer_input_sets(void*, exec_list*, hash_table*, hash_table*, ir_variable**)
0000000000376060 00000000000000cc t linker::get_matching_input(void*, ir_variable const*, hash_table*, hash_table*, ir_variable**)
0000000000376130 0000000000001058 t assign_varying_locations(gl_context*, void*, gl_shader_program*, gl_linked_shader*, gl_linked_shader*, unsigned int, tfeedback_decl*, unsigned long)
0000000000377190 0000000000000c2c t link_varyings(gl_shader_program*, unsigned int, unsigned int, gl_context*, void*)
0000000000377dc0 0000000000000030 t (anonymous namespace)::loop_analysis::visit(ir_loop_jump*)
0000000000377df0 0000000000000028 t (anonymous namespace)::loop_analysis::visit_enter(ir_call*)
0000000000377e20 0000000000000024 t (anonymous namespace)::loop_analysis::visit_enter(ir_if*)
0000000000377e50 0000000000000024 t (anonymous namespace)::loop_analysis::visit_leave(ir_if*)
0000000000377e80 0000000000000028 t (anonymous namespace)::loop_analysis::visit_enter(ir_assignment*)
0000000000377eb0 0000000000000010 t (anonymous namespace)::loop_analysis::visit_leave(ir_assignment*)
0000000000377ec0 000000000000000c W loop_variable_state::_ralloc_destructor(void*)
0000000000377ed0 0000000000000088 W examine_rhs::visit(ir_dereference_variable*)
0000000000377f60 0000000000000198 t (anonymous namespace)::loop_analysis::visit(ir_dereference_variable*)
0000000000378100 000000000000002c t loop_state::~loop_state()
0000000000378100 000000000000002c T loop_state::~loop_state()
0000000000378130 00000000000000cc t loop_state::insert(ir_loop*)
0000000000378200 0000000000000040 t (anonymous namespace)::loop_analysis::visit_enter(ir_loop*)
0000000000378240 0000000000000020 t loop_state::get(ir_loop const*)
0000000000378260 0000000000000038 t loop_variable_state::get(ir_variable const*)
00000000003782a0 000000000000009c t analyze_loop_variables(exec_list*)
0000000000378340 0000000000000b9c t (anonymous namespace)::loop_analysis::visit_leave(ir_loop*)
0000000000378ee0 0000000000000018 W loop_unroll_count::visit_enter(ir_assignment*)
0000000000378f00 0000000000000018 W loop_unroll_count::visit_enter(ir_expression*)
0000000000378f20 0000000000000014 W loop_unroll_count::visit_enter(ir_loop*)
0000000000378f40 00000000000001e8 W loop_unroll_count::visit_enter(ir_dereference_array*)
0000000000379130 00000000000001c0 t (anonymous namespace)::loop_unroll_visitor::complex_unroll(ir_loop*, int, bool, bool, bool)
00000000003792f0 000000000000025c t (anonymous namespace)::loop_unroll_visitor::simple_unroll(ir_loop*, int)
0000000000379550 000000000000055c t (anonymous namespace)::loop_unroll_visitor::visit_leave(ir_loop*)
0000000000379ab0 0000000000000064 t unroll_loops(exec_list*, loop_state*, gl_shader_compiler_options const*)
0000000000379b20 0000000000000058 t (anonymous namespace)::lower_builtins_visitor::visit_leave(ir_call*)
0000000000379b80 0000000000000050 t lower_builtins(exec_list*)
0000000000379bd0 0000000000000008 t (anonymous namespace)::lower_const_array_visitor::visit_enter(ir_texture*)
0000000000379be0 000000000000013c t (anonymous namespace)::lower_const_array_visitor::handle_rvalue(ir_rvalue**)
0000000000379d20 00000000000000c8 t lower_const_arrays_to_uniforms(exec_list*, unsigned int, unsigned int)
0000000000379df0 000000000000009c t (anonymous namespace)::lower_cs_derived_visitor::add_system_value(int, glsl_type const*, char const*)
0000000000379e90 00000000000001cc t (anonymous namespace)::lower_cs_derived_visitor::find_sysvals() [clone .part.0]
000000000037a060 00000000000003b8 t (anonymous namespace)::lower_cs_derived_visitor::visit(ir_dereference_variable*)
000000000037a420 0000000000000098 t lower_cs_derived(gl_linked_shader*)
000000000037a4c0 00000000000000cc t (anonymous namespace)::lower_discard_flow_visitor::generate_discard_break()
000000000037a590 000000000000004c t (anonymous namespace)::lower_discard_flow_visitor::visit_enter(ir_loop*)
000000000037a5e0 00000000000000d8 t (anonymous namespace)::lower_discard_flow_visitor::visit_enter(ir_discard*)
000000000037a6c0 00000000000000d0 t (anonymous namespace)::lower_discard_flow_visitor::visit_enter(ir_function_signature*)
000000000037a790 0000000000000068 t (anonymous namespace)::lower_discard_flow_visitor::visit(ir_loop_jump*)
000000000037a800 00000000000000b0 t lower_discard_flow(exec_list*)
000000000037a8b0 0000000000000004 t (anonymous namespace)::lower_distance_visitor_counter::handle_rvalue(ir_rvalue**)
000000000037a8c0 0000000000000138 t (anonymous namespace)::lower_distance_visitor_counter::visit(ir_variable*)
000000000037aa00 00000000000000a8 t (anonymous namespace)::lower_distance_visitor::is_distance_vec8(ir_rvalue*)
000000000037aab0 00000000000000a4 t (anonymous namespace)::lower_distance_visitor::fix_lhs(ir_assignment*) [clone .part.0]
000000000037ab60 00000000000001b4 t (anonymous namespace)::lower_distance_visitor::visit(ir_variable*)
000000000037ad20 0000000000000478 t (anonymous namespace)::lower_distance_visitor::handle_rvalue(ir_rvalue**)
000000000037b1a0 0000000000000224 t (anonymous namespace)::lower_distance_visitor::visit_leave(ir_assignment*)
000000000037b3d0 000000000000016c t lower_clip_cull_distance(gl_shader_program*, gl_linked_shader*)
000000000037b540 00000000000002a8 t (anonymous namespace)::lower_distance_visitor::visit_leave(ir_call*)
000000000037b7f0 00000000000000e4 t (anonymous namespace)::lower_instructions_visitor::_imm_fp(void*, glsl_type const*, double, unsigned int) [clone .constprop.0] [clone .isra.0]
000000000037b8e0 0000000000000078 t (anonymous namespace)::lower_instructions_visitor::_carry(ir_builder::operand, ir_builder::operand) [clone .isra.0]
000000000037b960 0000000000000070 t (anonymous namespace)::lower_instructions_visitor::div_to_mul_rcp(ir_expression*)
000000000037b9d0 000000000000005c t (anonymous namespace)::lower_instructions_visitor::dfloor_to_dfrac(ir_expression*)
000000000037ba30 00000000000002fc t (anonymous namespace)::lower_instructions_visitor::mod_to_floor(ir_expression*)
000000000037bd30 000000000000023c t (anonymous namespace)::lower_instructions_visitor::int_div_to_mul_rcp(ir_expression*)
000000000037bf70 0000000000000290 t (anonymous namespace)::lower_instructions_visitor::double_dot_to_fma(ir_expression*)
000000000037c200 00000000000001e8 t (anonymous namespace)::lower_instructions_visitor::dceil_to_dfrac(ir_expression*)
000000000037c3f0 0000000000000318 t (anonymous namespace)::lower_instructions_visitor::dfrexp_exp_to_arith(ir_expression*)
000000000037c710 0000000000000308 t (anonymous namespace)::lower_instructions_visitor::dtrunc_to_dfrac(ir_expression*)
000000000037ca20 0000000000000428 t (anonymous namespace)::lower_instructions_visitor::dround_even_to_dfrac(ir_expression*)
000000000037ce50 000000000000058c t (anonymous namespace)::lower_instructions_visitor::dfrexp_sig_to_arith(ir_expression*)
000000000037d3e0 0000000000000404 t (anonymous namespace)::lower_instructions_visitor::extract_to_shifts(ir_expression*)
000000000037d7f0 0000000000000474 t (anonymous namespace)::lower_instructions_visitor::bit_count_to_math(ir_expression*)
000000000037dc70 0000000000000ba0 t (anonymous namespace)::lower_instructions_visitor::dldexp_to_arith(ir_expression*)
000000000037e810 0000000000000af4 t (anonymous namespace)::lower_instructions_visitor::ldexp_to_arith(ir_expression*)
000000000037f310 0000000000001380 t (anonymous namespace)::lower_instructions_visitor::imul_high_to_mul(ir_expression*)
0000000000380690 00000000000021e8 t (anonymous namespace)::lower_instructions_visitor::visit_leave(ir_expression*)
0000000000382880 0000000000000060 t lower_instructions(exec_list*, unsigned int)
00000000003828e0 0000000000000004 t (anonymous namespace)::ir_lower_jumps_visitor::visit(ir_discard*)
00000000003828f0 0000000000000004 t (anonymous namespace)::ir_lower_jumps_visitor::~ir_lower_jumps_visitor()
00000000003828f0 0000000000000004 t (anonymous namespace)::ir_lower_jumps_visitor::~ir_lower_jumps_visitor()
0000000000382900 0000000000000178 t (anonymous namespace)::ir_lower_jumps_visitor::create_lowered_break()
0000000000382a80 0000000000000284 t (anonymous namespace)::ir_lower_jumps_visitor::insert_lowered_return(ir_return*)
0000000000382d10 0000000000000008 t (anonymous namespace)::ir_lower_jumps_visitor::~ir_lower_jumps_visitor()
0000000000382d20 0000000000000040 t (anonymous namespace)::ir_lower_jumps_visitor::visit(ir_return*)
0000000000382d60 000000000000004c t (anonymous namespace)::ir_lower_jumps_visitor::visit(ir_loop_jump*)
0000000000382db0 0000000000000070 t (anonymous namespace)::ir_lower_jumps_visitor::visit(ir_function*)
0000000000382e20 00000000000001ec t (anonymous namespace)::ir_lower_jumps_visitor::visit(ir_function_signature*)
0000000000383010 0000000000000544 t (anonymous namespace)::ir_lower_jumps_visitor::visit(ir_loop*)
0000000000383560 0000000000000ab8 t (anonymous namespace)::ir_lower_jumps_visitor::visit(ir_if*)
0000000000384020 000000000000008c t do_lower_jumps(exec_list*, bool, bool, bool, bool, bool)
00000000003840b0 0000000000000094 T lower_packed_varyings_gs_splicer::visit_leave(ir_emit_vertex*)
0000000000384150 0000000000000094 T lower_packed_varyings_return_splicer::visit_leave(ir_return*)
00000000003841f0 00000000000011b0 t (anonymous namespace)::lower_packed_varyings_visitor::lower_rvalue(ir_rvalue*, unsigned int, ir_variable*, char const*, bool, unsigned int)
00000000003853a0 0000000000000530 t lower_packed_varyings(void*, unsigned int, unsigned char const*, ir_variable_mode, unsigned int, gl_linked_shader*, bool, bool, bool)
00000000003858d0 0000000000000144 t (anonymous namespace)::lower_packed_varyings_visitor::lower_arraylike(ir_rvalue*, unsigned int, unsigned int, ir_variable*, char const*, bool, unsigned int)
0000000000385a20 000000000000008c t process_array_ir(void*, ir_dereference_array*, ir_rvalue*)
0000000000385ab0 0000000000000060 t process_array_type(glsl_type const*, unsigned int)
0000000000385b10 0000000000000058 t (anonymous namespace)::flatten_named_interface_blocks_declarations::visit_leave(ir_expression*)
0000000000385b70 0000000000000170 t (anonymous namespace)::flatten_named_interface_blocks_declarations::handle_rvalue(ir_rvalue**)
0000000000385ce0 00000000000000c4 t (anonymous namespace)::flatten_named_interface_blocks_declarations::visit_leave(ir_assignment*)
0000000000385db0 00000000000003f0 t lower_named_interface_blocks(void*, gl_linked_shader*)
00000000003861a0 0000000000000008 t (anonymous namespace)::lower_precision_visitor::visit_enter(ir_texture*)
00000000003861a0 0000000000000008 t (anonymous namespace)::lower_precision_visitor::visit_enter(ir_dereference_array*)
00000000003861a0 0000000000000008 t (anonymous namespace)::lower_precision_visitor::visit_enter(ir_dereference_record*)
00000000003861a0 0000000000000008 t (anonymous namespace)::lower_precision_visitor::visit_enter(ir_call*)
00000000003861b0 00000000000000a4 t (anonymous namespace)::find_lowerable_rvalues_visitor::visit_leave(ir_assignment*)
0000000000386260 0000000000000070 t (anonymous namespace)::find_lowerable_rvalues_visitor::visit_enter(ir_expression*)
00000000003862d0 0000000000000058 t (anonymous namespace)::lower_precision_visitor::visit_leave(ir_expression*)
0000000000386330 0000000000000080 t (anonymous namespace)::convert_precision(int, ir_rvalue*)
00000000003863b0 00000000000000e8 t (anonymous namespace)::lower_precision_visitor::handle_rvalue(ir_rvalue**)
00000000003864a0 00000000000000c8 t (anonymous namespace)::find_precision_visitor::handle_rvalue(ir_rvalue**)
0000000000386570 0000000000000104 t (anonymous namespace)::find_lowerable_rvalues_visitor::visit_enter(ir_dereference_array*)
0000000000386680 00000000000001b4 t (anonymous namespace)::find_lowerable_rvalues_visitor::stack_enter(ir_instruction*, void*)
0000000000386840 000000000000008c t (anonymous namespace)::find_lowerable_rvalues_visitor::visit_enter(ir_texture*)
00000000003868d0 00000000000000f0 t (anonymous namespace)::find_lowerable_rvalues_visitor::visit_enter(ir_dereference_record*)
00000000003869c0 000000000000014c t (anonymous namespace)::find_lowerable_rvalues_visitor::visit_leave(ir_call*)
0000000000386b10 0000000000000150 t lower_precision(exec_list*)
0000000000386c60 000000000000016c t (anonymous namespace)::find_precision_visitor::visit_enter(ir_call*)
0000000000386dd0 0000000000000128 t void std::vector<ir_instruction*, std::allocator<ir_instruction*> >::_M_realloc_insert<ir_instruction* const&>(__gnu_cxx::__normal_iterator<ir_instruction**, std::vector<ir_instruction*, std::allocator<ir_instruction*> > >, ir_instruction* const&)
0000000000386f00 00000000000001e4 t (anonymous namespace)::find_lowerable_rvalues_visitor::pop_stack_entry()
00000000003870f0 0000000000000008 t (anonymous namespace)::find_lowerable_rvalues_visitor::stack_leave(ir_instruction*, void*)
0000000000387100 00000000000000ec t (anonymous namespace)::find_lowerable_rvalues_visitor::visit(ir_dereference_variable*)
00000000003871f0 0000000000000064 t (anonymous namespace)::find_lowerable_rvalues_visitor::visit(ir_constant*)
0000000000387260 0000000000000324 t (anonymous namespace)::lower_subroutine_visitor::visit_leave(ir_call*)
0000000000387590 0000000000000060 t lower_subroutine(exec_list*, _mesa_glsl_parse_state*)
00000000003875f0 0000000000000154 t (anonymous namespace)::lower_tess_level_visitor::handle_rvalue(ir_rvalue**)
0000000000387750 0000000000000150 t (anonymous namespace)::lower_tess_level_visitor::visit(ir_variable*)
00000000003878a0 00000000000000a8 t (anonymous namespace)::lower_tess_level_visitor::is_tess_level_array(ir_rvalue*)
0000000000387950 0000000000000120 t (anonymous namespace)::lower_tess_level_visitor::fix_lhs(ir_assignment*) [clone .part.0]
0000000000387a70 0000000000000238 t (anonymous namespace)::lower_tess_level_visitor::visit_leave(ir_assignment*)
0000000000387cb0 00000000000000a4 t lower_tess_level(gl_linked_shader*)
0000000000387d60 0000000000000288 t (anonymous namespace)::lower_tess_level_visitor::visit_leave(ir_call*)
0000000000387ff0 00000000000000e8 t (anonymous namespace)::ir_vec_index_to_swizzle_visitor::handle_rvalue(ir_rvalue**)
00000000003880e0 000000000000004c t do_vec_index_to_swizzle(exec_list*)
0000000000388130 0000000000000004 t (anonymous namespace)::vector_deref_visitor::~vector_deref_visitor()
0000000000388130 0000000000000004 t (anonymous namespace)::vector_deref_visitor::~vector_deref_visitor()
0000000000388140 0000000000000008 t (anonymous namespace)::vector_deref_visitor::~vector_deref_visitor()
0000000000388150 00000000000000e4 t (anonymous namespace)::vector_deref_visitor::handle_rvalue(ir_rvalue**)
0000000000388240 00000000000004e8 t (anonymous namespace)::vector_deref_visitor::visit_enter(ir_assignment*)
0000000000388730 000000000000007c t lower_vector_derefs(gl_linked_shader*)
00000000003887b0 0000000000000004 t (anonymous namespace)::vector_insert_visitor::~vector_insert_visitor()
00000000003887b0 0000000000000004 t (anonymous namespace)::vector_insert_visitor::~vector_insert_visitor()
00000000003887c0 0000000000000008 t (anonymous namespace)::vector_insert_visitor::~vector_insert_visitor()
00000000003887d0 0000000000000394 t (anonymous namespace)::vector_insert_visitor::handle_rvalue(ir_rvalue**)
0000000000388b70 0000000000000078 t lower_vector_insert(exec_list*, bool)
0000000000388bf0 000000000000024c t (anonymous namespace)::lower_vertex_id_visitor::visit(ir_dereference_variable*)
0000000000388e40 00000000000000dc t lower_vertex_id(gl_linked_shader*)
0000000000388f20 0000000000000010 t (anonymous namespace)::compute_shader_enabled(_mesa_glsl_parse_state const*)
0000000000388f30 00000000000000cc t (anonymous namespace)::lower_shared_reference_visitor::get_shared_offset(ir_variable const*)
0000000000389000 000000000000051c t (anonymous namespace)::lower_shared_reference_visitor::visit_enter(ir_call*)
0000000000389520 0000000000000254 t (anonymous namespace)::lower_shared_reference_visitor::visit_enter(ir_assignment*)
0000000000389780 00000000000005a4 t (anonymous namespace)::lower_shared_reference_visitor::insert_buffer_access(void*, ir_dereference*, glsl_type const*, ir_rvalue*, unsigned int, int)
0000000000389d30 000000000000023c t (anonymous namespace)::lower_shared_reference_visitor::handle_rvalue(ir_rvalue**)
0000000000389f70 00000000000000e0 t lower_shared_reference(gl_context*, gl_shader_program*, gl_linked_shader*)
000000000038a050 0000000000000044 t (anonymous namespace)::shader_storage_buffer_object(_mesa_glsl_parse_state const*)
000000000038a0a0 0000000000000080 t (anonymous namespace)::lower_ubo_reference_visitor::ssbo_access_params()
000000000038a120 000000000000052c t (anonymous namespace)::lower_ubo_reference_visitor::setup_for_load_or_store(void*, ir_variable*, ir_rvalue*, ir_rvalue**, unsigned int*, bool*, glsl_type const**, glsl_interface_packing)
000000000038a650 00000000000005bc t (anonymous namespace)::lower_ubo_reference_visitor::visit_enter(ir_call*)
000000000038ac10 000000000000028c t (anonymous namespace)::lower_ubo_reference_visitor::handle_rvalue(ir_rvalue**)
000000000038aea0 0000000000000040 t (anonymous namespace)::lower_ubo_reference_visitor::visit_enter(ir_texture*)
000000000038aee0 0000000000000348 t (anonymous namespace)::lower_ubo_reference_visitor::calculate_ssbo_unsized_array_length(ir_expression*)
000000000038b230 00000000000000a0 t (anonymous namespace)::lower_ubo_reference_visitor::visit_enter(ir_expression*)
000000000038b2d0 00000000000003c8 t (anonymous namespace)::lower_ubo_reference_visitor::ssbo_store(void*, ir_rvalue*, ir_rvalue*, unsigned int)
000000000038b6a0 0000000000000540 t (anonymous namespace)::lower_ubo_reference_visitor::insert_buffer_access(void*, ir_dereference*, glsl_type const*, ir_rvalue*, unsigned int, int)
000000000038bbe0 0000000000000684 t (anonymous namespace)::lower_ubo_reference_visitor::visit_enter(ir_assignment*)
000000000038c270 0000000000000074 t lower_ubo_reference(gl_linked_shader*, bool, bool)
000000000038c2f0 0000000000000094 t (anonymous namespace)::lower_xfb_var_splicer::visit_leave(ir_return*)
000000000038c390 000000000000007c t get_field_name(char const*)
000000000038c410 0000000000000200 t get_deref(void*, char const*, gl_linked_shader*, ir_dereference**, glsl_type const**)
000000000038c610 00000000000000d0 t (anonymous namespace)::lower_xfb_var_splicer::visit_leave(ir_function_signature*)
000000000038c6e0 0000000000000214 t lower_xfb_varying(void*, gl_linked_shader*, char const*)
000000000038c900 0000000000000004 t (anonymous namespace)::ir_algebraic_visitor::~ir_algebraic_visitor()
000000000038c900 0000000000000004 t (anonymous namespace)::ir_algebraic_visitor::~ir_algebraic_visitor()
000000000038c910 000000000000002c t (anonymous namespace)::ir_algebraic_visitor::visit_enter(ir_assignment*)
000000000038c940 000000000000001c t is_vec_negative_one(ir_constant*)
000000000038c960 0000000000000008 t (anonymous namespace)::ir_algebraic_visitor::~ir_algebraic_visitor()
000000000038c970 00000000000000d0 t is_greater_than_zero(ir_constant*)
000000000038ca40 00000000000000dc t is_less_than_one(ir_constant*)
000000000038cb20 000000000000026c t (anonymous namespace)::ir_algebraic_visitor::reassociate_constant(ir_expression*, int, ir_constant*, ir_expression*) [clone .part.0] [clone .isra.0]
000000000038cd90 0000000000000020 t (anonymous namespace)::ir_algebraic_visitor::reassociate_constant(ir_expression*, int, ir_constant*, ir_expression*) [clone .isra.0]
000000000038cdb0 0000000000000040 t ir_builder::operand::operand(ir_variable*)
000000000038cdb0 0000000000000040 W ir_builder::operand::operand(ir_variable*)
000000000038cdf0 0000000000000040 t ir_builder::deref::deref(ir_variable*)
000000000038cdf0 0000000000000040 W ir_builder::deref::deref(ir_variable*)
000000000038ce30 0000000000001d1c t (anonymous namespace)::ir_algebraic_visitor::handle_rvalue(ir_rvalue**)
000000000038eb50 0000000000000068 t do_algebraic(exec_list*, bool, gl_shader_compiler_options const*)
000000000038ebc0 0000000000000010 t (anonymous namespace)::ir_array_reference_visitor::visit_leave(ir_assignment*)
000000000038ebd0 0000000000000004 W ir_array_splitting_visitor::~ir_array_splitting_visitor()
000000000038ebd0 0000000000000004 W ir_array_splitting_visitor::~ir_array_splitting_visitor()
000000000038ebe0 0000000000000060 t (anonymous namespace)::ir_array_reference_visitor::visit_enter(ir_assignment*)
000000000038ec40 0000000000000020 t (anonymous namespace)::ir_array_reference_visitor::visit_enter(ir_function_signature*)
000000000038ec60 0000000000000008 W ir_array_splitting_visitor::~ir_array_splitting_visitor()
000000000038ec70 0000000000000120 t (anonymous namespace)::ir_array_reference_visitor::get_variable_entry(ir_variable*)
000000000038ed90 0000000000000040 t (anonymous namespace)::ir_array_reference_visitor::visit(ir_dereference_variable*)
000000000038edd0 0000000000000024 t (anonymous namespace)::ir_array_reference_visitor::visit(ir_variable*)
000000000038ee00 0000000000000074 t (anonymous namespace)::ir_array_reference_visitor::visit_enter(ir_dereference_array*)
000000000038ee80 0000000000000138 t ir_array_splitting_visitor::split_deref(ir_dereference**)
000000000038efc0 0000000000000048 T ir_array_splitting_visitor::handle_rvalue(ir_rvalue**)
000000000038f010 000000000000039c t optimize_split_arrays(exec_list*, bool)
000000000038f3b0 000000000000037c T ir_array_splitting_visitor::visit_leave(ir_assignment*)
000000000038f730 00000000000000c8 t (anonymous namespace)::opt_conditional_discard_visitor::visit_leave(ir_if*)
000000000038f800 000000000000004c t opt_conditional_discard(exec_list*)
000000000038f850 0000000000000004 t (anonymous namespace)::ir_constant_folding_visitor::~ir_constant_folding_visitor()
000000000038f850 0000000000000004 t (anonymous namespace)::ir_constant_folding_visitor::~ir_constant_folding_visitor()
000000000038f860 0000000000000008 t (anonymous namespace)::ir_constant_folding_visitor::~ir_constant_folding_visitor()
000000000038f870 0000000000000110 t ir_constant_fold(ir_rvalue**)
000000000038f980 0000000000000034 t (anonymous namespace)::ir_constant_folding_visitor::handle_rvalue(ir_rvalue**)
000000000038f9c0 000000000000008c t (anonymous namespace)::ir_constant_folding_visitor::visit_enter(ir_discard*)
000000000038fa50 000000000000018c t (anonymous namespace)::ir_constant_folding_visitor::visit_enter(ir_call*)
000000000038fbe0 00000000000000c4 t (anonymous namespace)::ir_constant_folding_visitor::visit_enter(ir_assignment*)
000000000038fcb0 0000000000000050 t do_constant_folding(exec_list*)
000000000038fd00 0000000000000008 t (anonymous namespace)::ir_constant_propagation_visitor::visit_enter(ir_function*)
000000000038fd10 00000000000002c0 t (anonymous namespace)::ir_constant_propagation_visitor::constant_propagation(ir_rvalue**)
000000000038ffd0 000000000000008c t (anonymous namespace)::ir_constant_propagation_visitor::visit_enter(ir_function_signature*)
0000000000390060 0000000000000134 t (anonymous namespace)::ir_constant_propagation_visitor::kill(ir_variable*, unsigned int)
00000000003901a0 000000000000013c t (anonymous namespace)::ir_constant_propagation_visitor::handle_loop(ir_loop*, bool)
00000000003902e0 000000000000003c t (anonymous namespace)::ir_constant_propagation_visitor::visit_enter(ir_loop*)
0000000000390320 00000000000000a8 t (anonymous namespace)::ir_constant_propagation_visitor::constant_folding(ir_rvalue**)
00000000003903d0 000000000000002c t (anonymous namespace)::ir_constant_propagation_visitor::handle_rvalue(ir_rvalue**)
0000000000390400 0000000000000138 t (anonymous namespace)::ir_constant_propagation_visitor::visit_leave(ir_assignment*)
0000000000390540 00000000000000f4 t (anonymous namespace)::ir_constant_propagation_visitor::handle_if_block(exec_list*, hash_table*, bool*) [clone .constprop.0]
0000000000390640 0000000000000124 t (anonymous namespace)::ir_constant_propagation_visitor::visit_enter(ir_call*)
0000000000390770 0000000000000124 t (anonymous namespace)::ir_constant_propagation_visitor::visit_enter(ir_if*)
00000000003908a0 00000000000000b4 t do_constant_propagation(exec_list*)
0000000000390960 0000000000000008 t (anonymous namespace)::ir_constant_variable_visitor::visit_enter(ir_dereference_variable*)
0000000000390970 0000000000000084 t (anonymous namespace)::ir_constant_variable_visitor::visit(ir_variable*)
0000000000390a00 0000000000000180 t (anonymous namespace)::ir_constant_variable_visitor::visit_enter(ir_call*)
0000000000390b80 00000000000000f4 t (anonymous namespace)::ir_constant_variable_visitor::visit_enter(ir_assignment*)
0000000000390c80 0000000000000108 t do_constant_variable(exec_list*)
0000000000390d90 0000000000000090 t do_constant_variable_unlinked(exec_list*)
0000000000390e20 0000000000000008 t (anonymous namespace)::ir_copy_propagation_elements_visitor::visit_leave(ir_swizzle*)
0000000000390e30 000000000000021c t (anonymous namespace)::ir_copy_propagation_elements_visitor::handle_rvalue(ir_rvalue**)
0000000000391050 000000000000009c t (anonymous namespace)::ir_copy_propagation_elements_visitor::visit(ir_dereference_variable*)
00000000003910f0 00000000000000bc t (anonymous namespace)::ir_copy_propagation_elements_visitor::handle_if_block(exec_list*, exec_list*, bool*) [clone .constprop.0]
00000000003911b0 00000000000000cc t (anonymous namespace)::ir_copy_propagation_elements_visitor::visit_enter(ir_function_signature*)
0000000000391280 0000000000000328 t (anonymous namespace)::ir_copy_propagation_elements_visitor::kill((anonymous namespace)::kill_entry*)
00000000003915b0 000000000000012c t (anonymous namespace)::ir_copy_propagation_elements_visitor::visit_enter(ir_if*)
00000000003916e0 0000000000000174 t (anonymous namespace)::ir_copy_propagation_elements_visitor::handle_loop(ir_loop*, bool)
0000000000391860 000000000000003c t (anonymous namespace)::ir_copy_propagation_elements_visitor::visit_enter(ir_loop*)
00000000003918a0 00000000000001a8 t (anonymous namespace)::ir_copy_propagation_elements_visitor::visit_enter(ir_call*)
0000000000391a50 000000000000085c t (anonymous namespace)::ir_copy_propagation_elements_visitor::visit_leave(ir_assignment*)
00000000003922b0 00000000000000dc t do_copy_propagation_elements(exec_list*)
0000000000392390 0000000000000148 t optimize_dead_builtin_variables(exec_list*, ir_variable_mode)
00000000003924e0 00000000000001b0 t (anonymous namespace)::replace_varyings_visitor::visit(ir_variable*)
0000000000392690 00000000000000b0 t (anonymous namespace)::varying_info_visitor::visit(ir_variable*)
0000000000392740 00000000000000d4 t (anonymous namespace)::varying_info_visitor::visit(ir_dereference_variable*)
0000000000392820 00000000000001f0 t (anonymous namespace)::varying_info_visitor::visit_enter(ir_dereference_array*)
0000000000392a10 00000000000002a4 t (anonymous namespace)::replace_varyings_visitor::handle_rvalue(ir_rvalue**)
0000000000392cc0 0000000000000064 t (anonymous namespace)::replace_varyings_visitor::visit_leave(ir_assignment*)
0000000000392d30 0000000000000464 t (anonymous namespace)::replace_varyings_visitor::replace_varyings_visitor(gl_linked_shader*, (anonymous namespace)::varying_info_visitor const*, unsigned int, unsigned int, bool)
0000000000392d30 0000000000000464 t (anonymous namespace)::replace_varyings_visitor::replace_varyings_visitor(gl_linked_shader*, (anonymous namespace)::varying_info_visitor const*, unsigned int, unsigned int, bool)
00000000003931a0 0000000000000434 t do_dead_builtin_varyings(gl_context*, gl_linked_shader*, gl_linked_shader*, unsigned int, tfeedback_decl*)
00000000003935e0 00000000000001cc t do_dead_code(exec_list*, bool)
00000000003937b0 0000000000000094 t do_dead_code_unlinked(exec_list*)
0000000000393850 000000000000002c t (anonymous namespace)::array_index_visit::visit_enter(ir_dereference_array*)
0000000000393880 0000000000000128 t (anonymous namespace)::kill_for_derefs_visitor::visit(ir_swizzle*)
00000000003939b0 0000000000000078 t (anonymous namespace)::kill_for_derefs_visitor::visit_leave(ir_emit_vertex*)
0000000000393a30 0000000000000464 t dead_code_local_basic_block(ir_instruction*, ir_instruction*, void*)
0000000000393ea0 00000000000000c4 t (anonymous namespace)::kill_for_derefs_visitor::visit(ir_dereference_variable*)
0000000000393f70 0000000000000028 t do_dead_code_local(exec_list*)
0000000000393fa0 0000000000000080 t (anonymous namespace)::ir_dead_functions_visitor::get_signature_entry(ir_function_signature*)
0000000000394020 0000000000000028 t (anonymous namespace)::ir_dead_functions_visitor::visit_enter(ir_call*)
0000000000394050 0000000000000048 t (anonymous namespace)::ir_dead_functions_visitor::visit_enter(ir_function_signature*)
00000000003940a0 0000000000000188 t do_dead_functions(exec_list*)
0000000000394230 0000000000000008 t (anonymous namespace)::nested_if_flattener::visit_enter(ir_assignment*)
0000000000394240 00000000000000fc t (anonymous namespace)::nested_if_flattener::visit_leave(ir_if*)
0000000000394340 000000000000004c t opt_flatten_nested_if_blocks(exec_list*)
0000000000394390 0000000000000178 t (anonymous namespace)::matrix_flipper::visit_enter(ir_expression*)
0000000000394510 00000000000000d4 t opt_flip_matrices(exec_list*)
00000000003945f0 0000000000000004 t (anonymous namespace)::ir_function_inlining_visitor::~ir_function_inlining_visitor()
00000000003945f0 0000000000000004 t (anonymous namespace)::ir_function_inlining_visitor::~ir_function_inlining_visitor()
0000000000394600 0000000000000008 t (anonymous namespace)::ir_function_inlining_visitor::visit_enter(ir_swizzle*)
0000000000394600 0000000000000008 t (anonymous namespace)::ir_function_inlining_visitor::visit_enter(ir_texture*)
0000000000394600 0000000000000008 t (anonymous namespace)::ir_function_inlining_visitor::visit_enter(ir_expression*)
0000000000394600 0000000000000008 t (anonymous namespace)::ir_function_inlining_visitor::visit_enter(ir_return*)
0000000000394610 0000000000000004 W ir_variable_replacement_visitor::~ir_variable_replacement_visitor()
0000000000394610 0000000000000004 W ir_variable_replacement_visitor::~ir_variable_replacement_visitor()
0000000000394620 0000000000000008 t (anonymous namespace)::ir_function_inlining_visitor::~ir_function_inlining_visitor()
0000000000394630 0000000000000008 W ir_variable_replacement_visitor::~ir_variable_replacement_visitor()
0000000000394640 0000000000000138 t (anonymous namespace)::ir_save_lvalue_visitor::visit_enter(ir_dereference_array*)
0000000000394780 00000000000000cc t replace_return_with_assignment(ir_instruction*, void*)
0000000000394850 00000000000000b0 T ir_variable_replacement_visitor::visit_leave(ir_expression*)
0000000000394900 0000000000000074 T ir_variable_replacement_visitor::visit_leave(ir_texture*)
0000000000394980 0000000000000088 T ir_variable_replacement_visitor::visit_leave(ir_dereference_array*)
0000000000394980 0000000000000088 T ir_variable_replacement_visitor::visit_leave(ir_dereference_record*)
0000000000394a10 0000000000000088 T ir_variable_replacement_visitor::visit_leave(ir_return*)
0000000000394aa0 000000000000004c t do_function_inlining(exec_list*)
0000000000394af0 000000000000055c t ir_call::generate_inline(ir_instruction*)
0000000000395050 0000000000000068 t (anonymous namespace)::ir_function_inlining_visitor::visit_enter(ir_call*)
00000000003950c0 0000000000000070 t ir_variable_replacement_visitor::replace_deref(ir_dereference**)
0000000000395130 00000000000000b8 T ir_variable_replacement_visitor::visit_leave(ir_call*)
00000000003951f0 00000000000000a0 T ir_variable_replacement_visitor::visit_leave(ir_assignment*)
0000000000395290 0000000000000008 t (anonymous namespace)::ir_if_simplification_visitor::visit_enter(ir_assignment*)
00000000003952a0 00000000000001e0 t (anonymous namespace)::ir_if_simplification_visitor::visit_leave(ir_if*)
0000000000395480 000000000000004c t do_if_simplification(exec_list*)
00000000003954d0 0000000000000250 t (anonymous namespace)::compare_components(ir_constant*, ir_constant*)
0000000000395720 000000000000028c t (anonymous namespace)::combine_constant(bool, ir_constant*, ir_constant*)
00000000003959b0 00000000000001b4 t (anonymous namespace)::get_range(ir_rvalue*)
0000000000395b70 0000000000000324 t (anonymous namespace)::ir_minmax_visitor::prune_expression(ir_expression*, (anonymous namespace)::minmax_range)
0000000000395ea0 00000000000000e0 t (anonymous namespace)::ir_minmax_visitor::handle_rvalue(ir_rvalue**)
0000000000395f80 0000000000000050 t do_minmax_prune(exec_list*)
0000000000395fd0 000000000000002c t (anonymous namespace)::ir_rebalance_visitor::visit_enter(ir_assignment*)
0000000000396000 0000000000000180 t handle_expression(ir_expression*)
0000000000396180 0000000000000064 t update_types(ir_instruction*, void*)
00000000003961f0 00000000000000a8 t (anonymous namespace)::ir_rebalance_visitor::handle_rvalue(ir_rvalue**)
00000000003962a0 0000000000000124 t is_reduction(ir_instruction*, void*)
00000000003963d0 000000000000004c t do_rebalance_tree(exec_list*)
0000000000396420 0000000000000008 t (anonymous namespace)::redundant_jumps_visitor::visit_enter(ir_assignment*)
0000000000396430 00000000000000d0 t (anonymous namespace)::redundant_jumps_visitor::visit_leave(ir_if*)
0000000000396500 0000000000000054 t (anonymous namespace)::redundant_jumps_visitor::visit_leave(ir_loop*)
0000000000396560 000000000000004c t optimize_redundant_jumps(exec_list*)
00000000003965b0 0000000000000008 t (anonymous namespace)::ir_structure_reference_visitor::visit_enter(ir_dereference_record*)
00000000003965c0 0000000000000004 t (anonymous namespace)::ir_structure_splitting_visitor::~ir_structure_splitting_visitor()
00000000003965c0 0000000000000004 t (anonymous namespace)::ir_structure_splitting_visitor::~ir_structure_splitting_visitor()
00000000003965d0 0000000000000020 t (anonymous namespace)::ir_structure_reference_visitor::visit_enter(ir_function_signature*)
00000000003965f0 0000000000000008 t (anonymous namespace)::ir_structure_splitting_visitor::~ir_structure_splitting_visitor()
0000000000396600 00000000000000d0 t (anonymous namespace)::ir_structure_reference_visitor::get_variable_entry(ir_variable*)
00000000003966d0 0000000000000024 t (anonymous namespace)::ir_structure_reference_visitor::visit(ir_variable*)
0000000000396700 000000000000004c t (anonymous namespace)::ir_structure_reference_visitor::visit_enter(ir_assignment*)
0000000000396750 0000000000000064 t (anonymous namespace)::ir_structure_reference_visitor::visit(ir_dereference_variable*)
00000000003967c0 00000000000000c0 t (anonymous namespace)::ir_structure_splitting_visitor::handle_rvalue(ir_rvalue**)
0000000000396880 0000000000000350 t (anonymous namespace)::ir_structure_splitting_visitor::visit_leave(ir_assignment*)
0000000000396bd0 0000000000000328 t do_structure_splitting(exec_list*)
0000000000396f00 00000000000001fc t (anonymous namespace)::ir_opt_swizzle_visitor::handle_rvalue(ir_rvalue**)
0000000000397100 0000000000000050 t optimize_swizzles(exec_list*)
0000000000397150 0000000000000008 t (anonymous namespace)::ir_tree_grafting_visitor::visit_enter(ir_loop*)
0000000000397160 0000000000000008 t (anonymous namespace)::ir_tree_grafting_visitor::visit_enter(ir_function*)
0000000000397160 0000000000000008 t (anonymous namespace)::ir_tree_grafting_visitor::visit_enter(ir_function_signature*)
0000000000397170 00000000000001ec t (anonymous namespace)::tree_grafting_basic_block(ir_instruction*, ir_instruction*, void*)
0000000000397360 0000000000000040 t (anonymous namespace)::ir_tree_grafting_visitor::check_graft(ir_instruction*, ir_variable*)
00000000003973a0 0000000000000064 t (anonymous namespace)::ir_tree_grafting_visitor::do_graft(ir_rvalue**)
0000000000397410 0000000000000020 t (anonymous namespace)::ir_tree_grafting_visitor::visit_enter(ir_if*)
0000000000397430 000000000000012c t (anonymous namespace)::ir_tree_grafting_visitor::visit_enter(ir_call*)
0000000000397560 000000000000001c t (anonymous namespace)::ir_tree_grafting_visitor::visit_enter(ir_swizzle*)
0000000000397580 00000000000000d4 t (anonymous namespace)::ir_tree_grafting_visitor::visit_enter(ir_texture*)
0000000000397660 0000000000000068 t (anonymous namespace)::ir_tree_grafting_visitor::visit_enter(ir_expression*)
00000000003976d0 0000000000000070 t (anonymous namespace)::ir_tree_grafting_visitor::visit_leave(ir_assignment*)
0000000000397740 000000000000002c t (anonymous namespace)::dereferences_variable_callback(ir_instruction*, void*)
0000000000397770 0000000000000064 t do_tree_grafting(exec_list*)
00000000003977e0 0000000000000098 t (anonymous namespace)::ir_vectorize_visitor::visit_enter(ir_swizzle*)
0000000000397880 0000000000000010 t (anonymous namespace)::ir_vectorize_visitor::visit_enter(ir_texture*)
0000000000397880 0000000000000010 t (anonymous namespace)::ir_vectorize_visitor::visit_enter(ir_dereference_array*)
0000000000397890 0000000000000048 t (anonymous namespace)::ir_vectorize_visitor::visit_enter(ir_expression*)
00000000003978e0 0000000000000134 t (anonymous namespace)::ir_vectorize_visitor::try_vectorize()
0000000000397a20 0000000000000058 t (anonymous namespace)::ir_vectorize_visitor::visit_enter(ir_if*)
0000000000397a80 00000000000000e8 t (anonymous namespace)::ir_vectorize_visitor::visit_enter(ir_assignment*)
0000000000397b70 0000000000000040 t (anonymous namespace)::ir_vectorize_visitor::visit_enter(ir_loop*)
0000000000397bb0 0000000000000154 t rewrite_swizzle(ir_instruction*, void*)
0000000000397d10 0000000000000064 t (anonymous namespace)::ir_vectorize_visitor::visit_leave(ir_assignment*)
0000000000397d80 0000000000000064 t do_vectorize(exec_list*)
0000000000397df0 0000000000000004 t (anonymous namespace)::ir_invariance_propagation_visitor::~ir_invariance_propagation_visitor()
0000000000397df0 0000000000000004 t (anonymous namespace)::ir_invariance_propagation_visitor::~ir_invariance_propagation_visitor()
0000000000397e00 0000000000000058 t (anonymous namespace)::ir_invariance_propagation_visitor::visit_enter(ir_assignment*)
0000000000397e60 0000000000000010 t (anonymous namespace)::ir_invariance_propagation_visitor::visit_leave(ir_assignment*)
0000000000397e70 0000000000000008 t (anonymous namespace)::ir_invariance_propagation_visitor::~ir_invariance_propagation_visitor()
0000000000397e80 0000000000000060 t (anonymous namespace)::ir_invariance_propagation_visitor::visit(ir_dereference_variable*)
0000000000397ee0 0000000000000058 t propagate_invariance(exec_list*)
0000000000397f40 0000000000000048 t string_to_uint_map_ctor
0000000000397f90 0000000000000074 t string_to_uint_map_dtor
0000000000398010 00000000000000c0 t yytnamerr(char*, char const*)
00000000003980d0 0000000000000280 t yysyntax_error(unsigned long*, char**, short*, int)
0000000000398350 0000000000000024 t _mesa_glsl_parse_state::has_shader_storage_buffer_objects() const [clone .part.0] [clone .isra.0]
0000000000398380 0000000000000038 t match_layout_qualifier(char const*, char const*, _mesa_glsl_parse_state*) [clone .isra.0]
00000000003983c0 000000000000004c t _mesa_glsl_parse_state::has_tessellation_shader() const
0000000000398410 0000000000007ec4 t _mesa_glsl_parse(_mesa_glsl_parse_state*)
00000000003a02e0 00000000000000f8 t yy_get_previous_state(void*)
00000000003a03e0 000000000000022c t literal_integer(char*, int, _mesa_glsl_parse_state*, YYSTYPE*, YYLTYPE*, int)
00000000003a0610 00000000000000b0 t classify_identifier(_mesa_glsl_parse_state*, char const*, unsigned int, YYSTYPE*)
00000000003a06c0 0000000000000030 t yy_fatal_error(char const*, void*) [clone .constprop.0]
00000000003a06f0 00000000000000a0 t _mesa_glsl_lexer_ensure_buffer_stack(void*)
00000000003a0790 00000000000000b4 t _mesa_glsl_lexer__switch_to_buffer(yy_buffer_state*, void*)
00000000003a0850 000000000000006c t _mesa_glsl_lexer__delete_buffer(yy_buffer_state*, void*)
00000000003a08c0 000000000000006c t _mesa_glsl_lexer__flush_buffer(yy_buffer_state*, void*)
00000000003a0930 000000000000007c t _mesa_glsl_lexer__init_buffer(yy_buffer_state*, __sFILE*, void*)
00000000003a09b0 000000000000007c t _mesa_glsl_lexer__create_buffer(__sFILE*, int, void*)
00000000003a0a30 00000000000000bc t _mesa_glsl_lexer_restart(__sFILE*, void*)
00000000003a0af0 000000000000d6a0 t _mesa_glsl_lexer_lex(YYSTYPE*, YYLTYPE*, void*)
00000000003ae190 000000000000008c t _mesa_glsl_lexer_pop_buffer_state(void*)
00000000003ae220 00000000000000bc t _mesa_glsl_lexer__scan_buffer(char*, unsigned long, void*)
00000000003ae2e0 00000000000000a4 t _mesa_glsl_lexer__scan_bytes(char const*, int, void*)
00000000003ae390 0000000000000098 t _mesa_glsl_lexer_lex_init_extra(_mesa_glsl_parse_state*, void**)
00000000003ae430 000000000000007c t _mesa_glsl_lexer_lex_destroy(void*)
00000000003ae4b0 000000000000003c t _mesa_glsl_lexer_ctor(_mesa_glsl_parse_state*, char const*)
00000000003ae4f0 0000000000000008 t _mesa_glsl_lexer_dtor(_mesa_glsl_parse_state*)
00000000003ae500 00000000000000d0 t glcpp_error
00000000003ae5d0 00000000000000bc t glcpp_warning
00000000003ae690 0000000000000330 t glcpp_preprocess
00000000003ae9c0 00000000000000e0 t yy_get_previous_state
00000000003aeaa0 0000000000000030 t yy_fatal_error.constprop.0
00000000003aead0 00000000000000a0 t glcpp_ensure_buffer_stack
00000000003aeb70 00000000000000b4 t glcpp__switch_to_buffer
00000000003aec30 000000000000006c t glcpp__delete_buffer
00000000003aeca0 000000000000006c t glcpp__flush_buffer
00000000003aed10 000000000000007c t glcpp__init_buffer
00000000003aed90 000000000000007c t glcpp__create_buffer
00000000003aee10 00000000000000bc t glcpp_restart
00000000003aeed0 0000000000002710 t glcpp_lex
00000000003b15e0 000000000000008c t glcpp_pop_buffer_state
00000000003b1670 00000000000000bc t glcpp__scan_buffer
00000000003b1730 00000000000000a4 t glcpp__scan_bytes
00000000003b17e0 0000000000000098 t glcpp_lex_init_extra
00000000003b1880 000000000000007c t glcpp_lex_destroy
00000000003b1900 0000000000000034 t glcpp_lex_set_source_string
00000000003b1940 00000000000000c0 t yytnamerr
00000000003b1a00 0000000000000280 t yysyntax_error
00000000003b1c80 0000000000000088 t yy_stack_print
00000000003b1d10 00000000000000d4 t _check_for_reserved_macro_name
00000000003b1df0 00000000000000b0 t _glcpp_parser_skip_stack_push_if
00000000003b1ea0 000000000000019c t _glcpp_parser_evaluate_defined_in_list
00000000003b2040 0000000000000124 t yy_symbol_print.constprop.0
00000000003b2170 0000000000000078 t yydestruct.isra.0
00000000003b21f0 0000000000000288 t _macro_equal
00000000003b2480 000000000000009c t glcpp_parser_copy_defines
00000000003b2520 00000000000000c8 t _define_object_macro
00000000003b25f0 0000000000000130 t _define_function_macro
00000000003b2720 00000000000000d0 t _token_list_copy
00000000003b27f0 00000000000000a0 t _token_list_create_with_one_ival
00000000003b2890 00000000000000b0 t add_builtin_define
00000000003b2940 0000000000000264 t _glcpp_parser_handle_version_declaration.part.0
00000000003b2bb0 00000000000001a4 t _token_print
00000000003b2d60 00000000000004b8 t _glcpp_parser_apply_pastes
00000000003b3220 0000000000000900 t _glcpp_parser_expand_token_list
00000000003b3b20 000000000000019c t _glcpp_parser_expand_and_lex_from
00000000003b3cc0 0000000000000108 t glcpp_parser_create
00000000003b3dd0 000000000000203c t glcpp_parser_parse
00000000003b5e10 0000000000000034 t glcpp_parser_destroy
00000000003b5e50 000000000000002c t glcpp_parser_resolve_implicit_version
00000000003b5e80 0000000000000060 T glsl_type::record_key_hash(void const*)
00000000003b5ee0 000000000000005c t hash_free_type_function(hash_entry*)
00000000003b5f40 0000000000000084 t glsl_type::glsl_type(unsigned int, glsl_base_type, unsigned int, unsigned int, char const*, unsigned int, bool)
00000000003b5f40 0000000000000084 T glsl_type::glsl_type(unsigned int, glsl_base_type, unsigned int, unsigned int, char const*, unsigned int, bool)
00000000003b5fd0 0000000000000074 t glsl_type::glsl_type(unsigned int, glsl_base_type, glsl_sampler_dim, bool, bool, glsl_base_type, char const*)
00000000003b5fd0 0000000000000074 T glsl_type::glsl_type(unsigned int, glsl_base_type, glsl_sampler_dim, bool, bool, glsl_base_type, char const*)
00000000003b6050 00000000000000d8 t glsl_type::glsl_type(glsl_struct_field const*, unsigned int, char const*, bool)
00000000003b6050 00000000000000d8 T glsl_type::glsl_type(glsl_struct_field const*, unsigned int, char const*, bool)
00000000003b6130 00000000000000e0 t glsl_type::glsl_type(glsl_struct_field const*, unsigned int, glsl_interface_packing, bool, char const*)
00000000003b6130 00000000000000e0 T glsl_type::glsl_type(glsl_struct_field const*, unsigned int, glsl_interface_packing, bool, char const*)
00000000003b6210 0000000000000008 t glsl_type::~glsl_type()
00000000003b6210 0000000000000008 T glsl_type::~glsl_type()
00000000003b6220 0000000000000088 t glsl_type::contains_sampler() const
00000000003b62b0 0000000000000078 t glsl_type::contains_array() const
00000000003b6330 000000000000009c t glsl_type::contains_integer() const
00000000003b63d0 0000000000000088 t glsl_type::contains_double() const
00000000003b6460 0000000000000098 t glsl_type::contains_opaque() const
00000000003b6500 0000000000000088 t glsl_type::contains_subroutine() const
00000000003b6590 00000000000000c4 t glsl_type::sampler_index() const
00000000003b6660 0000000000000088 t glsl_type::contains_image() const
00000000003b66f0 00000000000000fc t glsl_type::get_base_type() const
00000000003b67f0 0000000000000048 t glsl_type::get_scalar_type() const
00000000003b6840 000000000000003c t glsl_type_singleton_init_or_ref
00000000003b6880 00000000000000e4 t glsl_type_singleton_decref
00000000003b6970 0000000000000158 t glsl_type::glsl_type(glsl_type const*, unsigned int, unsigned int)
00000000003b6970 0000000000000158 T glsl_type::glsl_type(glsl_type const*, unsigned int, unsigned int)
00000000003b6ad0 00000000000000dc t glsl_type::vec(unsigned int)
00000000003b6bb0 00000000000000dc t glsl_type::f16vec(unsigned int)
00000000003b6c90 00000000000000dc t glsl_type::dvec(unsigned int)
00000000003b6d70 00000000000000dc t glsl_type::ivec(unsigned int)
00000000003b6e50 00000000000000dc t glsl_type::uvec(unsigned int)
00000000003b6f30 00000000000000dc t glsl_type::bvec(unsigned int)
00000000003b7010 00000000000000dc t glsl_type::i64vec(unsigned int)
00000000003b70f0 00000000000000dc t glsl_type::u64vec(unsigned int)
00000000003b71d0 00000000000000dc t glsl_type::i16vec(unsigned int)
00000000003b72b0 00000000000000dc t glsl_type::u16vec(unsigned int)
00000000003b7390 00000000000000dc t glsl_type::i8vec(unsigned int)
00000000003b7470 00000000000000dc t glsl_type::u8vec(unsigned int)
00000000003b7550 00000000000005a8 t glsl_type::get_instance(unsigned int, unsigned int, unsigned int, unsigned int, bool)
00000000003b7b00 00000000000003c0 t glsl_type::get_sampler_instance(glsl_sampler_dim, bool, bool, glsl_base_type)
00000000003b7ec0 0000000000000390 t glsl_type::get_image_instance(glsl_sampler_dim, bool, glsl_base_type)
00000000003b8250 00000000000000f8 t glsl_type::get_array_instance(glsl_type const*, unsigned int, unsigned int)
00000000003b8350 00000000000000c0 t glsl_type::compare_no_precision(glsl_type const*) const
00000000003b8410 0000000000000170 t glsl_type::record_compare(glsl_type const*, bool, bool, bool) const [clone .part.0]
00000000003b8580 000000000000007c T glsl_type::record_key_compare(void const*, void const*)
00000000003b8600 000000000000004c t glsl_type::record_compare(glsl_type const*, bool, bool, bool) const
00000000003b8650 0000000000000100 t glsl_type::get_struct_instance(glsl_struct_field const*, unsigned int, char const*, bool)
00000000003b8750 000000000000010c t glsl_type::get_interface_instance(glsl_struct_field const*, unsigned int, glsl_interface_packing, bool, char const*)
00000000003b8860 000000000000011c t glsl_type::get_subroutine_instance(char const*)
00000000003b8980 000000000000036c t glsl_type::get_mul_type(glsl_type const*, glsl_type const*)
00000000003b8cf0 00000000000000a4 t glsl_type::field_type(char const*) const
00000000003b8da0 0000000000000090 t glsl_type::field_index(char const*) const
00000000003b8e30 0000000000000138 t glsl_type::component_slots() const
00000000003b8f70 0000000000000154 t glsl_type::struct_location_offset(unsigned int) const
00000000003b90d0 00000000000000f0 t glsl_type::uniform_locations() const
00000000003b91c0 0000000000000138 t glsl_type::varying_count() const
00000000003b9300 00000000000001ac t glsl_type::can_implicitly_convert_to(glsl_type const*, _mesa_glsl_parse_state*) const
00000000003b94b0 0000000000000264 t glsl_type::std140_base_alignment(bool) const
00000000003b9720 0000000000000390 t glsl_type::std140_size(bool) const
00000000003b9ab0 00000000000001f0 t glsl_type::std430_base_alignment(bool) const
00000000003b9ca0 0000000000000310 t glsl_type::std430_size(bool) const
00000000003b9fb0 000000000000005c t glsl_type::std430_array_stride(bool) const
00000000003ba010 0000000000000160 t glsl_type::count_vec4_slots(bool, bool) const
00000000003ba170 0000000000000064 t glsl_type::coordinate_components() const
00000000003ba1e0 0000000000000378 t encode_type_to_blob
00000000003ba560 00000000000002a4 t decode_type_from_blob
00000000003ba810 0000000000000080 t _mesa_shader_stage_to_string
00000000003ba890 000000000000013c t cso_set_vertex_elements_direct
00000000003ba9d0 0000000000000114 t cso_single_sampler.part.0
00000000003baaf0 0000000000000078 t cso_init_vbuf.constprop.0
00000000003bab70 000000000000026c t sanitize_hash
00000000003bade0 000000000000016c t cso_set_vertex_buffers_direct
00000000003baf50 00000000000005a4 t cso_destroy_context
00000000003bb500 0000000000000138 t cso_create_context
00000000003bb640 0000000000000138 t cso_set_blend
00000000003bb780 0000000000000110 t cso_set_depth_stencil_alpha
00000000003bb890 0000000000000110 t cso_set_rasterizer
00000000003bb9a0 0000000000000028 t cso_set_fragment_shader_handle
00000000003bb9d0 0000000000000028 t cso_set_vertex_shader_handle
00000000003bba00 000000000000006c t cso_set_framebuffer
00000000003bba70 000000000000007c t cso_set_viewport
00000000003bbaf0 0000000000000054 t cso_set_viewport_dims
00000000003bbb50 0000000000000044 t cso_set_blend_color
00000000003bbba0 0000000000000028 t cso_set_sample_mask
00000000003bbbd0 000000000000002c t cso_set_min_samples
00000000003bbc00 000000000000002c t cso_set_stencil_ref
00000000003bbc30 000000000000008c t cso_set_render_condition
00000000003bbcc0 0000000000000030 t cso_set_geometry_shader_handle
00000000003bbcf0 0000000000000030 t cso_set_tessctrl_shader_handle
00000000003bbd20 0000000000000030 t cso_set_tesseval_shader_handle
00000000003bbd50 0000000000000030 t cso_set_compute_shader_handle
00000000003bbd80 0000000000000034 t cso_set_vertex_elements
00000000003bbdc0 000000000000001c t cso_set_vertex_buffers
00000000003bbde0 000000000000025c t cso_set_vertex_buffers_and_elements
00000000003bc040 00000000000000a0 t cso_set_samplers
00000000003bc0e0 00000000000001b4 t cso_set_sampler_views
00000000003bc2a0 0000000000000194 t cso_set_shader_images
00000000003bc440 0000000000000188 t cso_set_stream_outputs
00000000003bc5d0 0000000000000184 t cso_set_constant_buffer
00000000003bc760 00000000000000dc t cso_save_constant_buffer_slot0
00000000003bc840 000000000000019c t cso_restore_constant_buffer_slot0
00000000003bc9e0 00000000000004fc t cso_save_state
00000000003bcee0 000000000000084c t cso_restore_state
00000000003bd730 0000000000000020 t cso_draw_vbo
00000000003bd750 0000000000000068 t cso_draw_arrays
00000000003bd7c0 0000000000000064 t cso_draw_arrays_instanced
00000000003bd830 0000000000000278 t cso_data_rehash
00000000003bdab0 00000000000000c8 t cso_hash_insert
00000000003bdb80 0000000000000014 t cso_hash_init
00000000003bdba0 0000000000000070 t cso_hash_deinit
00000000003bdc10 0000000000000020 t cso_hash_iter_key
00000000003bdc30 0000000000000064 t cso_hash_data_next
00000000003bdca0 00000000000000cc t cso_hash_take
00000000003bdd70 0000000000000038 t cso_hash_first_node
00000000003bddb0 0000000000000008 t cso_hash_size
00000000003bddc0 00000000000000a4 t cso_hash_erase
00000000003bde70 0000000000000064 t cso_hash_contains
00000000003bdee0 0000000000000008 t tgsi_build_header
00000000003bdef0 0000000000000014 t tgsi_build_processor
00000000003bdf10 0000000000000024 t tgsi_default_full_declaration
00000000003bdf40 000000000000020c t tgsi_build_full_declaration
00000000003be150 0000000000000010 t tgsi_default_full_immediate
00000000003be160 00000000000000b8 t tgsi_build_full_immediate
00000000003be220 000000000000000c t tgsi_default_instruction
00000000003be230 0000000000000098 t tgsi_default_full_instruction
00000000003be2d0 0000000000000554 t tgsi_build_full_instruction
00000000003be830 0000000000000034 t tgsi_default_full_property
00000000003be870 00000000000000e0 t tgsi_build_full_property
00000000003be950 000000000000004c t tgsi_full_src_register_from_dst
00000000003be9a0 0000000000000090 t dump_ctx_printf
00000000003bea30 00000000000000b0 t _dump_writemask.part.0
00000000003beae0 0000000000000070 t prolog
00000000003beb50 000000000000029c t iter_immediate
00000000003bedf0 0000000000000228 t iter_property
00000000003bf020 0000000000000e3c t iter_instruction
00000000003bfe60 0000000000000a20 t iter_declaration
00000000003c0880 0000000000000070 t tgsi_dump_to_file
00000000003c08f0 0000000000000008 t tgsi_dump
00000000003c0900 0000000000000040 t transform_decl
00000000003c0940 0000000000000208 t transform_instr
00000000003c0b50 00000000000000c0 t tgsi_emulate
00000000003c0c10 0000000000000040 t tgsi_get_generic_gl_varying_index
00000000003c0c50 00000000000001d4 t tgsi_get_gl_varying_semantic
00000000003c0e30 00000000000000f0 t tgsi_get_sysval_semantic
00000000003c0f20 0000000000000028 t tgsi_get_opcode_info
00000000003c0f50 0000000000000024 t tgsi_get_opcode_name
00000000003c0f80 0000000000000134 t tgsi_iterate_shader
00000000003c10c0 0000000000000038 t tgsi_parse_init
00000000003c1100 0000000000000004 t tgsi_parse_free
00000000003c1110 0000000000000020 t tgsi_parse_end_of_tokens
00000000003c1130 000000000000042c t tgsi_parse_token
00000000003c1560 0000000000000054 t tgsi_dup_tokens
00000000003c15c0 0000000000000008 t tgsi_alloc_tokens
00000000003c15d0 0000000000000004 t tgsi_free_tokens
00000000003c15e0 0000000000000598 t scan_src_operand
00000000003c1b80 0000000000001048 t tgsi_scan_shader
00000000003c2bd0 0000000000000024 t tgsi_file_name
00000000003c2c00 0000000000000044 t emit_property
00000000003c2c50 0000000000000044 t emit_immediate
00000000003c2ca0 0000000000000044 t emit_declaration
00000000003c2cf0 0000000000000044 t emit_instruction
00000000003c2d40 00000000000002b0 t tgsi_transform_shader
00000000003c2ff0 0000000000000178 t match_or_expand_immediate
00000000003c3170 000000000000004c t tokens_error
00000000003c31c0 0000000000000104 t get_tokens
00000000003c32d0 00000000000000c0 t emit_decl_semantic
00000000003c3390 00000000000000ec t alloc_temporary
00000000003c3480 0000000000000230 t decl_immediate
00000000003c36b0 0000000000000018 t ureg_property
00000000003c36d0 0000000000000140 t ureg_DECL_fs_input_cyl_centroid_layout
00000000003c3810 0000000000000034 t ureg_DECL_fs_input_cyl_centroid
00000000003c3850 000000000000003c t ureg_DECL_vs_input
00000000003c3890 000000000000003c t ureg_DECL_input
00000000003c38d0 0000000000000114 t ureg_DECL_system_value
00000000003c39f0 0000000000000160 t ureg_DECL_output_layout
00000000003c3b50 0000000000000038 t ureg_DECL_output
00000000003c3b90 0000000000000040 t ureg_DECL_constant2D
00000000003c3bd0 0000000000000160 t ureg_DECL_constant
00000000003c3d30 00000000000000a0 t ureg_DECL_hw_atomic
00000000003c3dd0 0000000000000008 t ureg_DECL_temporary
00000000003c3de0 0000000000000008 t ureg_DECL_local_temporary
00000000003c3df0 00000000000000b4 t ureg_DECL_array_temporary
00000000003c3eb0 0000000000000024 t ureg_release_temporary
00000000003c3ee0 0000000000000048 t ureg_DECL_address
00000000003c3f30 00000000000000d0 t ureg_DECL_sampler
00000000003c4000 00000000000000b8 t ureg_DECL_sampler_view
00000000003c40c0 00000000000000bc t ureg_DECL_image
00000000003c4180 00000000000000a8 t ureg_DECL_buffer
00000000003c4230 000000000000002c t ureg_DECL_memory
00000000003c4260 000000000000004c t ureg_DECL_immediate
00000000003c42b0 000000000000003c t ureg_DECL_immediate_f64
00000000003c42f0 0000000000000008 t ureg_DECL_immediate_uint
00000000003c4300 0000000000000008 t ureg_DECL_immediate_int
00000000003c4310 000000000000003c t ureg_DECL_immediate_uint64
00000000003c4350 000000000000003c t ureg_DECL_immediate_int64
00000000003c4390 000000000000019c t ureg_emit_src
00000000003c4530 0000000000000158 t ureg_emit_dst
00000000003c4690 00000000000000a4 t ureg_emit_insn
00000000003c4740 000000000000011c t ureg_emit_texture
00000000003c4860 0000000000000038 t ureg_fixup_insn_size
00000000003c48a0 0000000000000170 t ureg_insn
00000000003c4a10 00000000000001fc t ureg_tex_insn
00000000003c4c10 0000000000000184 t ureg_memory_insn
00000000003c4da0 0000000000000afc t ureg_finalize
00000000003c58a0 0000000000000144 t ureg_create_shader
00000000003c59f0 0000000000000044 t ureg_get_tokens
00000000003c5a40 0000000000000004 t ureg_free_tokens
00000000003c5a50 00000000000000ec t ureg_create_with_screen
00000000003c5b40 0000000000000008 t ureg_create
00000000003c5b50 0000000000000008 t ureg_set_next_shader_processor
00000000003c5b60 000000000000007c t ureg_destroy
00000000003c5be0 0000000000000050 t tgsi_util_get_src_register_swizzle
00000000003c5c30 000000000000046c t tgsi_util_get_inst_usage_mask
00000000003c60a0 0000000000000028 t tgsi_util_get_src_from_ind
00000000003c60d0 0000000000000058 t util_bitmask_create
00000000003c6130 0000000000000100 t util_bitmask_set
00000000003c6230 000000000000003c t util_bitmask_clear
00000000003c6270 000000000000005c t util_bitmask_get
00000000003c62d0 000000000000009c t util_bitmask_get_next_index
00000000003c6370 0000000000000008 t util_bitmask_get_first_index
00000000003c6380 0000000000000030 t util_bitmask_destroy
00000000003c63b0 0000000000000250 t util_copy_framebuffer_state
00000000003c6600 00000000000000b8 t util_unreference_framebuffer_state
00000000003c66c0 000000000000007c t util_framebuffer_get_num_layers
00000000003c6740 000000000000009c t util_framebuffer_get_num_samples
00000000003c67e0 00000000000000d0 t util_sample_locations_flip_y
00000000003c68b0 00000000000002e8 t util_gen_mipmap
00000000003c6ba0 0000000000000240 t util_set_vertex_buffers_mask
00000000003c6de0 000000000000008c t util_set_vertex_buffers_count
00000000003c6e70 0000000000000008 t util_throttle_init
00000000003c6e80 0000000000000050 t util_throttle_deinit
00000000003c6ed0 000000000000024c t util_throttle_memory_usage
00000000003c7120 0000000000000010 t u_prim_name
00000000003c7130 00000000000000d8 t u_sampler_view_default_template
00000000003c7210 0000000000000198 t u_pipe_screen_get_param_defaults
00000000003c73b0 000000000000022c t util_make_vertex_passthrough_shader_with_so
00000000003c75e0 000000000000000c t util_make_vertex_passthrough_shader
00000000003c75f0 0000000000000034 t util_make_layered_clear_vertex_shader
00000000003c7630 000000000000009c t util_make_layered_clear_helper_vertex_shader
00000000003c76d0 000000000000009c t util_make_layered_clear_geometry_shader
00000000003c7770 00000000000000e0 t util_make_fragment_passthrough_shader
00000000003c7850 0000000000000124 t pipe_get_tile_raw
00000000003c7980 0000000000000770 t pipe_get_tile_rgba
00000000003c80f0 00000000000000a4 t upload_unmap_internal
00000000003c81a0 0000000000000088 t u_upload_create
00000000003c8230 0000000000000014 t u_upload_create_default
00000000003c8250 0000000000000008 t u_upload_unmap
00000000003c8260 0000000000000070 t u_upload_destroy
00000000003c82d0 000000000000039c t u_upload_alloc
00000000003c8670 0000000000000050 t u_upload_data
00000000003c86c0 0000000000000034 t u_vbuf_delete_vertex_elements
00000000003c8700 00000000000001e8 t u_vbuf_get_minmax_index_mapped
00000000003c88f0 0000000000000068 t u_vbuf_set_driver_vertex_buffers
00000000003c8960 0000000000000398 t u_vbuf_set_vertex_elements_internal
00000000003c8d00 00000000000009cc t u_vbuf_translate_begin
00000000003c96d0 0000000000000254 t u_vbuf_get_caps
00000000003c9930 00000000000000ac t u_vbuf_create
00000000003c99e0 0000000000000024 t u_vbuf_set_vertex_elements
00000000003c9a10 0000000000000008 t u_vbuf_unset_vertex_elements
00000000003c9a20 00000000000001a8 t u_vbuf_destroy
00000000003c9bd0 0000000000000594 t u_vbuf_set_vertex_buffers
00000000003ca170 00000000000000c4 t u_vbuf_get_minmax_index
00000000003ca240 00000000000008c0 t u_vbuf_draw_vbo
00000000003cab00 00000000000000c4 t u_vbuf_split_indexed_multidraw
00000000003cabd0 000000000000000c t u_vbuf_save_vertex_elements
00000000003cabe0 0000000000000048 t u_vbuf_restore_vertex_elements
00000000003cac30 00000000000000bc t u_vbuf_save_vertex_buffer0
00000000003cacf0 000000000000009c t u_vbuf_restore_vertex_buffer0
00000000003cad90 000000000000009c t nouveau_transfer_read
00000000003cae30 000000000000005c t nouveau_scratch_unref_bos
00000000003cae90 00000000000000e4 t nouveau_transfer_staging.isra.0
00000000003caf80 00000000000001ec t nouveau_scratch_more
00000000003cb170 00000000000000f8 t nouveau_buffer_destroy
00000000003cb270 000000000000013c t nouveau_buffer_cache.isra.0
00000000003cb3b0 0000000000000190 t nouveau_transfer_write
00000000003cb540 00000000000000dc t nouveau_buffer_transfer_flush_region
00000000003cb620 0000000000000160 t nouveau_buffer_transfer_unmap
00000000003cb780 0000000000000590 t nouveau_buffer_transfer_map
00000000003cbd10 0000000000000214 t nouveau_copy_buffer
00000000003cbf30 0000000000000174 t nouveau_resource_map_offset
00000000003cc0b0 0000000000000248 t nouveau_buffer_create
00000000003cc300 0000000000000258 t nouveau_buffer_invalidate
00000000003cc560 000000000000004c t nouveau_scratch_runout_release
00000000003cc5b0 00000000000000b8 t nouveau_scratch_data
00000000003cc670 0000000000000094 t nouveau_scratch_get
00000000003cc710 0000000000000064 t nouveau_fence_trigger_work
00000000003cc780 0000000000000058 t nouveau_fence_new
00000000003cc7e0 0000000000000060 t nouveau_fence_emit
00000000003cc840 00000000000000a8 t nouveau_fence_del
00000000003cc8f0 00000000000000ec t nouveau_fence_update
00000000003cc9e0 000000000000005c t nouveau_fence_signalled
00000000003cca40 00000000000000c0 t nouveau_fence_next
00000000003ccb00 0000000000000104 t nouveau_fence_kick
00000000003ccc10 0000000000000114 t nouveau_fence_wait
00000000003ccd30 0000000000000024 T nouveau_fence_unref_bo
00000000003ccd60 00000000000000d4 t nouveau_fence_work
00000000003cce40 0000000000000054 t nouveau_heap_init
00000000003ccea0 000000000000002c t nouveau_heap_destroy
00000000003cced0 00000000000000e8 t nouveau_heap_alloc
00000000003ccfc0 00000000000000b8 t nouveau_heap_free
00000000003cd080 00000000000002d8 t nouveau_mm_allocate
00000000003cd360 00000000000000dc t nouveau_mm_free
00000000003cd440 0000000000000004 T nouveau_mm_free_work
00000000003cd450 0000000000000078 t nouveau_mm_create
00000000003cd4d0 000000000000013c t nouveau_mm_destroy
00000000003cd610 000000000000000c t nouveau_screen_get_vendor
00000000003cd620 000000000000000c t nouveau_screen_get_device_vendor
00000000003cd630 0000000000000008 t nouveau_screen_get_disk_shader_cache
00000000003cd640 0000000000000060 t nouveau_screen_fence_ref
00000000003cd6a0 0000000000000040 t nouveau_screen_get_name
00000000003cd6e0 0000000000000050 t nouveau_screen_get_timestamp
00000000003cd730 000000000000002c t nouveau_set_debug_callback
00000000003cd760 0000000000000014 t nouveau_screen_fence_finish
00000000003cd780 0000000000000088 t nouveau_screen_bo_from_handle
00000000003cd810 0000000000000080 t nouveau_screen_bo_get_handle
00000000003cd890 000000000000027c t nouveau_screen_init
00000000003cdb10 0000000000000060 t nouveau_screen_fini
00000000003cdb70 0000000000000010 t nouveau_context_init
00000000003cdb80 0000000000000008 t nouveau_vp3_video_buffer_sampler_view_planes
00000000003cdb90 0000000000000008 t nouveau_vp3_video_buffer_sampler_view_components
00000000003cdba0 0000000000000008 t nouveau_vp3_video_buffer_surfaces
00000000003cdbb0 0000000000000004 t nouveau_vp3_decoder_flush
00000000003cdbc0 0000000000000004 t nouveau_vp3_decoder_begin_frame
00000000003cdbd0 00000000000000e4 t nouveau_vp3_decoder_destroy
00000000003cdcc0 00000000000000a4 t vp4_getpath
00000000003cdd70 0000000000000088 t vp3_getpath
00000000003cde00 00000000000001f8 t firmware_present
00000000003ce000 0000000000000004 t nouveau_vp3_decoder_end_frame
00000000003ce010 000000000000014c t nouveau_vp3_video_buffer_destroy
00000000003ce160 0000000000000320 t nouveau_vp3_video_buffer_create
00000000003ce480 0000000000000030 t nouveau_vp3_decoder_init_common
00000000003ce4b0 0000000000000200 t nouveau_vp3_load_firmware
00000000003ce6b0 0000000000000108 T nouveau_vp3_screen_get_video_param
00000000003ce7c0 0000000000000014 T nouveau_vp3_screen_video_supported
00000000003ce7e0 000000000000029c T nv50_clear_texture
00000000003cea80 0000000000001108 t nv50_blitter_make_fp
00000000003cfb90 0000000000000124 t nv50_blit_select_mode
00000000003cfcc0 000000000000021c t nv50_m2mf_rect_setup
00000000003cfee0 0000000000000570 t nv50_m2mf_transfer_rect
00000000003d0450 00000000000003a4 T nv50_miptree_transfer_map
00000000003d0800 000000000000012c T nv50_miptree_transfer_unmap
00000000003d0930 0000000000000078 T nvc0_compute_validate_globals
00000000003d09b0 0000000000000168 t nvc0_compute_validate_surfaces
00000000003d0b20 00000000000000e8 t nvc0_compute_validate_driverconst
00000000003d0c10 00000000000000ac t nvc0_compute_validate_samplers
00000000003d0cc0 0000000000000210 t nvc0_compute_validate_buffers
00000000003d0ed0 00000000000000fc t nvc0_compute_validate_textures
00000000003d0fd0 0000000000000330 t nvc0_compute_validate_constbufs
00000000003d1300 0000000000000684 t nvc0_screen_compute_setup
00000000003d1990 0000000000000120 t nvc0_update_compute_invocations_counter
00000000003d1ab0 00000000000008cc T nvc0_launch_grid
00000000003d2380 0000000000000008 t nvc0_get_device_reset_status
00000000003d2390 0000000000000044 T nvc0_default_kick_notify
00000000003d23e0 000000000000045c t nvc0_invalidate_resource_storage
00000000003d2840 0000000000000084 t nvc0_context_get_sample_position
00000000003d28d0 00000000000000bc t nvc0_flush
00000000003d2990 00000000000000bc t nvc0_texture_barrier
00000000003d2a50 000000000000013c t nvc0_emit_string_marker
00000000003d2b90 00000000000001d4 t nvc0_memory_barrier
00000000003d2d70 00000000000005a0 t nvc0_destroy
00000000003d3310 0000000000000448 T nvc0_create
00000000003d3760 0000000000000110 t nvc0_bufctx_fence
00000000003d3870 0000000000000054 t nvc0_get_sample_locations
00000000003d38d0 000000000000007c t nvc0_miptree_get_handle
00000000003d3950 00000000000006c0 t nvc0_miptree_create
00000000003d4010 00000000000000cc t nvc0_mt_zslice_offset
00000000003d40e0 0000000000000034 t nvc0_miptree_surface_new
00000000003d4120 00000000000000dc t nvc0_shader_input_address
00000000003d4200 00000000000003d8 t nvc0_program_assign_varying_slots
00000000003d45e0 0000000000000298 t nvc0_vtgp_gen_header
00000000003d4880 0000000000000198 t nvc0_program_upload_code
00000000003d4a20 00000000000000a8 t nvc0_tp_get_tess_mode.isra.0
00000000003d4ad0 0000000000000904 t nvc0_program_translate
00000000003d53e0 0000000000000088 t nvc0_program_library_upload
00000000003d5470 00000000000005c8 t nvc0_program_upload
00000000003d5a40 00000000000000c4 t nvc0_program_destroy
00000000003d5b10 0000000000000060 t nvc0_program_symbol_offset
00000000003d5b70 0000000000000084 t nvc0_program_init_tcp_empty
00000000003d5c00 0000000000000010 t nvc0_destroy_query
00000000003d5c10 0000000000000010 t nvc0_begin_query
00000000003d5c20 0000000000000020 t nvc0_end_query
00000000003d5c40 0000000000000010 t nvc0_get_query_result
00000000003d5c50 000000000000001c t nvc0_get_query_result_resource
00000000003d5c70 0000000000000004 t nvc0_set_active_query_state
00000000003d5c80 0000000000000050 t nvc0_create_query
00000000003d5cd0 00000000000002e0 t nvc0_render_condition
00000000003d5fb0 0000000000000098 T nvc0_screen_get_driver_query_info
00000000003d6050 00000000000000fc T nvc0_screen_get_driver_query_group_info
00000000003d6150 0000000000000064 t nvc0_init_query_functions
00000000003d61c0 00000000000000b0 t nvc0_hw_query_write_compute_invocations
00000000003d6270 00000000000002a4 t nvc0_hw_get_query_result
00000000003d6520 00000000000000b8 t nvc0_hw_query_get
00000000003d65e0 00000000000000bc t nvc0_hw_destroy_query
00000000003d66a0 000000000000010c t nvc0_hw_query_allocate
00000000003d67b0 00000000000003dc t nvc0_hw_end_query
00000000003d6b90 0000000000000364 t nvc0_hw_begin_query
00000000003d6f00 00000000000001a4 t nvc0_hw_create_query
00000000003d70b0 0000000000000090 t nvc0_hw_get_driver_query_info
00000000003d7140 0000000000000060 t nvc0_hw_query_pushbuf_submit
00000000003d71a0 000000000000010c t nvc0_hw_query_fifo_wait
00000000003d72b0 0000000000000658 t nvc0_hw_get_query_result_resource
00000000003d7910 000000000000007c t nvc0_hw_metric_begin_query
00000000003d7990 000000000000005c t nvc0_hw_metric_end_query
00000000003d79f0 0000000000000128 t sm20_hw_metric_calc_result
00000000003d7b20 00000000000001b0 t sm30_hw_metric_calc_result
00000000003d7cd0 00000000000002e0 t nvc0_hw_metric_get_query_result
00000000003d7fb0 0000000000000064 t nvc0_hw_metric_destroy_query
00000000003d8020 0000000000000068 t nvc0_hw_metric_get_num_queries
00000000003d8090 0000000000000240 t nvc0_hw_metric_create_query
00000000003d82d0 00000000000001a4 t nvc0_hw_metric_get_driver_query_info
00000000003d8480 0000000000000054 t nvc0_hw_sm_destroy_query
00000000003d84e0 000000000000012c t nvc0_hw_sm_query_get_cfg.isra.0
00000000003d8610 0000000000000534 t nvc0_hw_sm_begin_query
00000000003d8b50 00000000000004f8 t nvc0_hw_sm_end_query
00000000003d9050 0000000000000350 t nvc0_hw_sm_get_query_result
00000000003d93a0 0000000000000064 t nvc0_hw_sm_get_num_queries
00000000003d9410 00000000000000d0 t nvc0_hw_sm_create_query
00000000003d94e0 00000000000001a0 t nvc0_hw_sm_get_driver_query_info
00000000003d9680 0000000000000008 t nvc0_sw_create_query
00000000003d9690 0000000000000008 t nvc0_sw_get_driver_query_info
00000000003d96a0 0000000000000064 t nvc0_query_dmabuf_modifiers
00000000003d9710 0000000000000010 t nvc0_surface_create
00000000003d9720 0000000000000010 t nvc0_resource_create_with_modifiers
00000000003d9730 0000000000000038 t nvc0_resource_create
00000000003d9770 0000000000000034 t nvc0_resource_from_handle
00000000003d97b0 0000000000000060 t nvc0_init_resource_functions
00000000003d9810 0000000000000048 t nvc0_screen_init_resource_functions
00000000003d9860 0000000000000190 t nvc0_vertprog_validate
00000000003d99f0 000000000000042c T nvc0_fragprog_validate
00000000003d9e20 00000000000002b0 T nvc0_tctlprog_validate
00000000003da0d0 0000000000000324 t nvc0_tevlprog_validate
00000000003da400 00000000000002d0 t nvc0_gmtyprog_validate
00000000003da6d0 00000000000000e0 T nvc0_compprog_validate
00000000003da7b0 0000000000000130 T nvc0_layer_validate
00000000003da8e0 00000000000004e8 T nvc0_tfb_validate
00000000003dadd0 0000000000000014 t nvc0_blend_state_bind
00000000003dadf0 0000000000000014 t nvc0_rasterizer_state_bind
00000000003dae10 0000000000000014 t nvc0_zsa_state_bind
00000000003dae30 0000000000000014 t nvc0_vp_state_bind
00000000003dae50 0000000000000014 t nvc0_fp_state_bind
00000000003dae70 0000000000000014 t nvc0_gp_state_bind
00000000003dae90 0000000000000014 t nvc0_tcp_state_bind
00000000003daeb0 0000000000000014 t nvc0_tep_state_bind
00000000003daed0 0000000000000014 t nvc0_cp_state_bind
00000000003daef0 0000000000000020 t nvc0_set_blend_color
00000000003daf10 000000000000001c t nvc0_set_stencil_ref
00000000003daf30 0000000000000014 t nvc0_set_sample_mask
00000000003daf50 0000000000000020 t nvc0_set_min_samples
00000000003daf70 0000000000000038 t nvc0_set_polygon_stipple
00000000003dafb0 0000000000000028 t nvc0_set_tess_state
00000000003dafe0 0000000000000014 t nvc0_vertex_state_bind
00000000003db000 0000000000000008 t nvc0_blend_state_delete
00000000003db010 0000000000000168 t nvc0_set_vertex_buffers
00000000003db180 0000000000000054 t nvc0_set_window_rectangles
00000000003db1e0 000000000000005c t nvc0_set_sample_locations
00000000003db240 0000000000000038 t nvc0_set_clip_state
00000000003db280 00000000000000c0 t nvc0_set_viewport_states
00000000003db340 0000000000000060 t nvc0_set_scissor_states
00000000003db3a0 0000000000000054 t nvc0_set_framebuffer_state
00000000003db400 000000000000022c t nvc0_zsa_state_create
00000000003db630 00000000000003e8 t nvc0_rasterizer_state_create
00000000003dba20 00000000000000b0 t nvc0_cp_state_create
00000000003dbad0 00000000000000b4 t nvc0_sp_state_create
00000000003dbb90 0000000000000008 t nvc0_tep_state_create
00000000003dbba0 0000000000000008 t nvc0_tcp_state_create
00000000003dbbb0 0000000000000008 t nvc0_gp_state_create
00000000003dbbc0 0000000000000008 t nvc0_fp_state_create
00000000003dbbd0 0000000000000008 t nvc0_vp_state_create
00000000003dbbe0 0000000000000044 t nvc0_sp_state_delete
00000000003dbc30 00000000000000b0 t nvc0_sampler_state_delete
00000000003dbce0 00000000000000fc t nvc0_bind_sampler_states
00000000003dbde0 0000000000000008 t nvc0_zsa_state_delete
00000000003dbdf0 0000000000000008 t nvc0_rasterizer_state_delete
00000000003dbe00 0000000000000308 t nvc0_set_constant_buffer
00000000003dc110 00000000000000c4 t nvc0_so_target_save_offset
00000000003dc1e0 0000000000000560 t nvc0_blend_state_create
00000000003dc740 00000000000001cc t nvc0_set_compute_resources
00000000003dc910 000000000000021c t nvc0_set_transform_feedback_targets
00000000003dcb30 0000000000000350 t nvc0_set_sampler_views
00000000003dce80 0000000000000074 t nvc0_so_target_destroy
00000000003dcf00 00000000000000a8 t nvc0_sampler_view_destroy
00000000003dcfb0 000000000000029c t nvc0_set_global_bindings
00000000003dd250 0000000000000330 t nvc0_set_shader_buffers
00000000003dd580 000000000000014c t nvc0_so_target_create
00000000003dd6d0 00000000000004b0 t nvc0_set_shader_images
00000000003ddb80 0000000000000270 t nvc0_init_state_functions
00000000003dddf0 000000000000006c t nvc0_validate_driverconst
00000000003dde60 000000000000023c t nvc0_constbufs_validate
00000000003de0a0 0000000000000150 t nvc0_validate_scissor
00000000003de1f0 0000000000000248 t nvc0_validate_buffers
00000000003de440 0000000000000094 t nvc0_validate_tess_state
00000000003de4e0 0000000000000070 t nvc0_validate_sample_mask
00000000003de550 000000000000008c t nvc0_validate_stipple
00000000003de5e0 0000000000000080 t nvc0_validate_blend_colour
00000000003de660 0000000000000084 t nvc0_validate_zsa
00000000003de6f0 0000000000000084 t nvc0_validate_blend
00000000003de780 0000000000000084 t nvc0_validate_rasterizer
00000000003de810 00000000000000fc t nvc0_validate_min_samples
00000000003de910 00000000000000bc t nvc0_validate_stencil_ref
00000000003de9d0 00000000000003b0 t nvc0_validate_viewport
00000000003ded80 00000000000000d0 t nvc0_validate_fp_zsa_rast
00000000003dee50 00000000000000b8 t nvc0_validate_rast_fb
00000000003def10 00000000000001c0 t nvc0_validate_window_rects
00000000003df0d0 00000000000003c4 t gm200_validate_sample_locations
00000000003df4a0 000000000000016c t validate_sample_locations
00000000003df610 00000000000000e4 t nvc0_validate_zsa_fb
00000000003df700 00000000000002f8 t nvc0_validate_fbread
00000000003dfa00 00000000000002f4 t nvc0_validate_clip
00000000003dfd00 000000000000075c t nvc0_validate_fb
00000000003e0460 0000000000000200 t nvc0_state_validate
00000000003e0660 0000000000000068 t nvc0_state_validate_3d
00000000003e06d0 000000000000000c t nvc0_draw_vbo_kick_notify
00000000003e06e0 0000000000000170 t nvc0_set_constant_vertex_attrib
00000000003e0850 00000000000001a4 t nvc0_update_user_vbufs_shared
00000000003e0a00 0000000000000248 t nvc0_update_user_vbufs
00000000003e0c50 0000000000000030 T nvc0_vertex_state_delete
00000000003e0c80 00000000000003c0 T nvc0_vertex_state_create
00000000003e1040 00000000000008b8 T nvc0_vertex_arrays_validate
00000000003e1900 000000000000146c T nvc0_draw_vbo
00000000003e2d70 0000000000001c18 t nvc0_push_vbo
00000000003e4990 0000000000000200 t nvc0_push_vbo_indirect
00000000003e4b90 000000000000009c t nvc0_decoder_end_frame
00000000003e4c30 0000000000000014 t nvc0_decoder_decode_bitstream
00000000003e4c50 0000000000000010 t nvc0_decoder_begin_frame
00000000003e4c60 0000000000000838 T nvc0_create_decoder
00000000003e54a0 0000000000000008 T nvc0_video_buffer_create
00000000003e54b0 0000000000000214 t nvc0_decoder_setup_ppp
00000000003e56d0 0000000000000228 t nvc0_decoder_ppp
00000000003e5900 0000000000000574 t nvc0_decoder_vp
00000000003e5e80 0000000000000098 t grow_to_fit.part.0
00000000003e5f20 0000000000000010 t blob_init
00000000003e5f30 0000000000000014 t blob_init_fixed
00000000003e5f50 0000000000000100 t blob_write_bytes
00000000003e6050 000000000000007c t blob_write_uint32
00000000003e60d0 000000000000007c t blob_write_uint64
00000000003e6150 0000000000000038 t blob_overwrite_uint32
00000000003e6190 0000000000000038 t blob_write_string
00000000003e61d0 0000000000000014 t blob_reader_init
00000000003e61f0 0000000000000048 t blob_read_bytes
00000000003e6240 000000000000004c t blob_copy_bytes
00000000003e6290 0000000000000068 t blob_read_uint32
00000000003e6300 0000000000000068 t blob_read_uint64
00000000003e6370 000000000000006c t blob_read_string
00000000003e63e0 00000000000000e8 t _mesa_float_to_half
00000000003e64d0 0000000000000058 t _mesa_half_to_float
00000000003e6530 000000000000002c t _mesa_half_to_unorm8
00000000003e6560 0000000000000038 t _mesa_uint16_div_64k_to_half
00000000003e65a0 0000000000000048 t _mesa_sha1_format
00000000003e65f0 000000000000003c t os_time_get_nano
00000000003e6630 0000000000000038 t os_file_create_unique
00000000003e6670 0000000000000068 t os_log_message
00000000003e66e0 0000000000000004 t os_get_option
00000000003e66f0 0000000000000ff0 t SHA1Transform
00000000003e76e0 0000000000000038 t SHA1Init
00000000003e7720 00000000000000ec t SHA1Update
00000000003e7810 00000000000000b0 t SHA1Pad
00000000003e78c0 0000000000000060 t SHA1Final
00000000003e7920 00000000000000cc t util_format_unsigned_write_rgtc_encoded_channel
00000000003e79f0 00000000000000c4 t util_format_signed_write_rgtc_encoded_channel
00000000003e7ac0 000000000000011c t util_format_unsigned_fetch_texel_rgtc
00000000003e7be0 0000000000000b7c t util_format_unsigned_encode_rgtc_ubyte
00000000003e8760 0000000000000124 t util_format_signed_fetch_texel_rgtc
00000000003e8890 0000000000000b90 t util_format_signed_encode_rgtc_ubyte
00000000003e9420 00000000000000f4 t set_search
00000000003e9520 0000000000000168 t set_rehash
00000000003e9690 00000000000001c0 t set_search_or_add
00000000003e9850 000000000000008c t _mesa_set_create
00000000003e98e0 0000000000000084 t _mesa_set_clone
00000000003e9970 00000000000000c0 t _mesa_set_destroy
00000000003e9a30 0000000000000038 t _mesa_set_search
00000000003e9a70 0000000000000048 t _mesa_set_add
00000000003e9ac0 0000000000000024 t _mesa_set_remove
00000000003e9af0 000000000000005c t _mesa_set_remove_key
00000000003e9b50 000000000000004c t _mesa_set_next_entry
00000000003e9ba0 0000000000000014 t _mesa_pointer_set_create
00000000003e9bc0 000000000000006c t _mesa_string_buffer_create
00000000003e9c30 00000000000000c0 t _mesa_string_buffer_append_len
00000000003e9cf0 00000000000000ec t _mesa_string_buffer_vprintf
00000000003e9de0 000000000000006c t _mesa_string_buffer_printf
00000000003e9e50 000000000000002c t _mesa_locale_init
00000000003e9e80 000000000000000c t _mesa_locale_fini
00000000003e9e90 000000000000000c t _mesa_strtod
00000000003e9ea0 000000000000000c t _mesa_strtof
00000000003e9eb0 000000000000002c t util_cpu_detect_once
00000000003e9ee0 0000000000000014 t util_cpu_detect
00000000003e9f00 000000000000006c t write_bits
00000000003e9f70 00000000000006f8 t compress_rgba_unorm
00000000003ea670 00000000000006c4 t compress_rgb_float
00000000003ead40 0000000000000070 t count_anchors_before_texel
00000000003eadb0 0000000000000308 t extract_float_endpoints
00000000003eb0c0 0000000000000430 t extract_unorm_endpoints
00000000003eb4f0 0000000000000358 t fetch_rgb_float_from_block
00000000003eb850 0000000000000598 t decompress_rgb_float
00000000003ebdf0 00000000000004ec t fetch_rgba_unorm_from_block
00000000003ec2e0 00000000000006e0 t decompress_rgba_unorm
00000000003ec9c0 000000000000001c T util_format_bptc_rgba_unorm_unpack_rgba_8unorm
00000000003ec9e0 000000000000001c T util_format_bptc_rgba_unorm_pack_rgba_8unorm
00000000003eca00 00000000000000ac T util_format_bptc_rgba_unorm_unpack_rgba_float
00000000003ecab0 00000000000000ac T util_format_bptc_rgba_unorm_pack_rgba_float
00000000003ecb60 0000000000000078 T util_format_bptc_rgba_unorm_fetch_rgba_float
00000000003ecbe0 000000000000001c T util_format_bptc_srgba_unpack_rgba_8unorm
00000000003ecc00 000000000000001c T util_format_bptc_srgba_pack_rgba_8unorm
00000000003ecc20 00000000000000ac T util_format_bptc_srgba_unpack_rgba_float
00000000003eccd0 0000000000000020 T util_format_bptc_srgba_pack_rgba_float
00000000003eccf0 0000000000000084 T util_format_bptc_srgba_fetch_rgba_float
00000000003ecd80 00000000000000b0 T util_format_bptc_rgb_float_unpack_rgba_8unorm
00000000003ece30 000000000000001c T util_format_bptc_rgb_float_pack_rgba_8unorm
00000000003ece50 0000000000000020 T util_format_bptc_rgb_float_unpack_rgba_float
00000000003ece70 0000000000000020 T util_format_bptc_rgb_float_pack_rgba_float
00000000003ece90 000000000000002c T util_format_bptc_rgb_float_fetch_rgba_float
00000000003ecec0 00000000000000b0 T util_format_bptc_rgb_ufloat_unpack_rgba_8unorm
00000000003ecf70 000000000000001c T util_format_bptc_rgb_ufloat_pack_rgba_8unorm
00000000003ecf90 0000000000000020 T util_format_bptc_rgb_ufloat_unpack_rgba_float
00000000003ecfb0 0000000000000020 T util_format_bptc_rgb_ufloat_pack_rgba_float
00000000003ecfd0 000000000000002c T util_format_bptc_rgb_ufloat_fetch_rgba_float
00000000003ed000 000000000000013c t etc1_parse_block
00000000003ed140 00000000000000c8 t etc1_fetch_texel
00000000003ed210 0000000000000128 T util_format_etc1_rgb8_unpack_rgba_8unorm
00000000003ed340 0000000000000004 T util_format_etc1_rgb8_pack_rgba_8unorm
00000000003ed350 0000000000000134 T util_format_etc1_rgb8_unpack_rgba_float
00000000003ed490 0000000000000004 T util_format_etc1_rgb8_pack_rgba_float
00000000003ed4a0 0000000000000070 T util_format_etc1_rgb8_fetch_rgba_float
00000000003ed510 0000000000000040 T util_format_latc1_unorm_fetch_rgba_8unorm
00000000003ed550 0000000000000004 T util_format_latc1_unorm_unpack_rgba_8unorm
00000000003ed560 0000000000000004 T util_format_latc1_unorm_pack_rgba_8unorm
00000000003ed570 0000000000000168 T util_format_latc1_unorm_unpack_rgba_float
00000000003ed6e0 0000000000000004 T util_format_latc1_unorm_pack_rgba_float
00000000003ed6f0 0000000000000050 T util_format_latc1_unorm_fetch_rgba_float
00000000003ed740 0000000000000028 T util_format_latc1_snorm_fetch_rgba_8unorm
00000000003ed770 0000000000000028 T util_format_latc1_snorm_unpack_rgba_8unorm
00000000003ed7a0 0000000000000028 T util_format_latc1_snorm_pack_rgba_8unorm
00000000003ed7d0 0000000000000004 T util_format_latc1_snorm_pack_rgba_float
00000000003ed7e0 000000000000016c T util_format_latc1_snorm_unpack_rgba_float
00000000003ed950 0000000000000058 T util_format_latc1_snorm_fetch_rgba_float
00000000003ed9b0 0000000000000064 T util_format_latc2_unorm_fetch_rgba_8unorm
00000000003eda20 0000000000000004 T util_format_latc2_unorm_unpack_rgba_8unorm
00000000003eda30 0000000000000004 T util_format_latc2_unorm_pack_rgba_8unorm
00000000003eda40 0000000000000008 T util_format_latc2_unorm_pack_rgba_float
00000000003eda50 00000000000001e4 T util_format_latc2_unorm_unpack_rgba_float
00000000003edc40 0000000000000088 T util_format_latc2_unorm_fetch_rgba_float
00000000003edcd0 0000000000000028 T util_format_latc2_snorm_fetch_rgba_8unorm
00000000003edd00 0000000000000028 T util_format_latc2_snorm_unpack_rgba_8unorm
00000000003edd30 0000000000000028 T util_format_latc2_snorm_pack_rgba_8unorm
00000000003edd60 00000000000001e4 T util_format_latc2_snorm_unpack_rgba_float
00000000003edf50 0000000000000008 T util_format_latc2_snorm_pack_rgba_float
00000000003edf60 00000000000000a8 T util_format_latc2_snorm_fetch_rgba_float
00000000003ee010 0000000000000098 T util_format_r9g9b9e5_float_unpack_rgba_float
00000000003ee0b0 0000000000000268 T util_format_r9g9b9e5_float_pack_rgba_float
00000000003ee320 000000000000004c T util_format_r9g9b9e5_float_fetch_rgba_float
00000000003ee370 000000000000012c T util_format_r9g9b9e5_float_unpack_rgba_8unorm
00000000003ee4a0 0000000000000274 T util_format_r9g9b9e5_float_pack_rgba_8unorm
00000000003ee720 00000000000001e4 T util_format_r11g11b10_float_unpack_rgba_float
00000000003ee910 0000000000000218 T util_format_r11g11b10_float_pack_rgba_float
00000000003eeb30 000000000000018c T util_format_r11g11b10_float_fetch_rgba_float
00000000003eecc0 000000000000025c T util_format_r11g11b10_float_unpack_rgba_8unorm
00000000003eef20 0000000000000288 T util_format_r11g11b10_float_pack_rgba_8unorm
00000000003ef1b0 0000000000000004 T util_format_r1_unorm_unpack_rgba_float
00000000003ef1c0 0000000000000004 T util_format_r1_unorm_pack_rgba_float
00000000003ef1d0 0000000000000004 T util_format_r1_unorm_fetch_rgba_float
00000000003ef1e0 0000000000000004 T util_format_r1_unorm_unpack_rgba_8unorm
00000000003ef1f0 0000000000000004 T util_format_r1_unorm_pack_rgba_8unorm
00000000003ef200 00000000000000e0 T util_format_r8g8bx_snorm_unpack_rgba_float
00000000003ef2e0 0000000000000150 T util_format_r8g8bx_snorm_unpack_rgba_8unorm
00000000003ef430 00000000000000c8 T util_format_r8g8bx_snorm_pack_rgba_float
00000000003ef500 000000000000006c T util_format_r8g8bx_snorm_pack_rgba_8unorm
00000000003ef570 0000000000000090 T util_format_r8g8bx_snorm_fetch_rgba_float
00000000003ef600 0000000000000038 T util_format_rgtc1_unorm_fetch_rgba_8unorm
00000000003ef640 0000000000000138 t util_format_rgtc1_unorm_unpack_rgba_8unorm
00000000003ef780 0000000000000110 t util_format_rgtc1_unorm_pack_rgba_8unorm
00000000003ef890 0000000000000168 T util_format_rgtc1_unorm_unpack_rgba_float
00000000003efa00 0000000000000154 t util_format_rgtc1_unorm_pack_rgba_float
00000000003efb60 0000000000000054 T util_format_rgtc1_unorm_fetch_rgba_float
00000000003efbc0 0000000000000028 T util_format_rgtc1_snorm_fetch_rgba_8unorm
00000000003efbf0 0000000000000028 T util_format_rgtc1_snorm_unpack_rgba_8unorm
00000000003efc20 0000000000000028 T util_format_rgtc1_snorm_pack_rgba_8unorm
00000000003efc50 0000000000000128 t util_format_rgtc1_snorm_pack_rgba_float
00000000003efd80 000000000000016c T util_format_rgtc1_snorm_unpack_rgba_float
00000000003efef0 000000000000005c T util_format_rgtc1_snorm_fetch_rgba_float
00000000003eff50 0000000000000064 T util_format_rgtc2_unorm_fetch_rgba_8unorm
00000000003effc0 0000000000000158 t util_format_rgtc2_unorm_unpack_rgba_8unorm
00000000003f0120 0000000000000130 t util_format_rgtc2_unorm_pack_rgba_8unorm
00000000003f0250 00000000000001bc t util_format_rxtc2_unorm_pack_rgba_float
00000000003f0410 0000000000000008 T util_format_rgtc2_unorm_pack_rgba_float
00000000003f0420 00000000000001e8 T util_format_rgtc2_unorm_unpack_rgba_float
00000000003f0610 000000000000008c T util_format_rgtc2_unorm_fetch_rgba_float
00000000003f06a0 0000000000000028 T util_format_rgtc2_snorm_fetch_rgba_8unorm
00000000003f06d0 0000000000000028 T util_format_rgtc2_snorm_unpack_rgba_8unorm
00000000003f0700 0000000000000028 T util_format_rgtc2_snorm_pack_rgba_8unorm
00000000003f0730 00000000000001e8 T util_format_rgtc2_snorm_unpack_rgba_float
00000000003f0920 000000000000016c t util_format_rxtc2_snorm_pack_rgba_float
00000000003f0a90 0000000000000008 T util_format_rgtc2_snorm_pack_rgba_float
00000000003f0aa0 00000000000000ac T util_format_rgtc2_snorm_fetch_rgba_float
00000000003f0b50 00000000000001fc t dxt135_decode_imageblock
00000000003f0d50 0000000000000054 t fetch_2d_texel_rgb_dxt1
00000000003f0db0 0000000000000054 t fetch_2d_texel_rgba_dxt1
00000000003f0e10 000000000000008c t fetch_2d_texel_rgba_dxt3
00000000003f0ea0 0000000000000150 t fetch_2d_texel_rgba_dxt5
00000000003f0ff0 0000000000000c44 t encodedxtcolorblockfaster
00000000003f1c40 00000000000000cc t writedxt5encodedalphablock
00000000003f1d10 0000000000001268 t tx_compress_dxtn
00000000003f2f80 0000000000000018 T util_format_dxt1_rgb_fetch_rgba_8unorm
00000000003f2fa0 0000000000000018 T util_format_dxt1_rgba_fetch_rgba_8unorm
00000000003f2fc0 0000000000000018 T util_format_dxt3_rgba_fetch_rgba_8unorm
00000000003f2fe0 0000000000000018 T util_format_dxt5_rgba_fetch_rgba_8unorm
00000000003f3000 000000000000006c T util_format_dxt1_rgb_fetch_rgba_float
00000000003f3070 0000000000000074 T util_format_dxt1_rgba_fetch_rgba_float
00000000003f30f0 0000000000000074 T util_format_dxt3_rgba_fetch_rgba_float
00000000003f3170 0000000000000074 T util_format_dxt5_rgba_fetch_rgba_float
00000000003f31f0 0000000000000120 T util_format_dxt1_rgb_unpack_rgba_8unorm
00000000003f3310 0000000000000120 T util_format_dxt1_rgba_unpack_rgba_8unorm
00000000003f3430 0000000000000120 T util_format_dxt3_rgba_unpack_rgba_8unorm
00000000003f3550 0000000000000120 T util_format_dxt5_rgba_unpack_rgba_8unorm
00000000003f3670 0000000000000188 T util_format_dxt1_rgb_unpack_rgba_float
00000000003f3800 0000000000000188 T util_format_dxt1_rgba_unpack_rgba_float
00000000003f3990 0000000000000188 T util_format_dxt3_rgba_unpack_rgba_float
00000000003f3b20 0000000000000188 T util_format_dxt5_rgba_unpack_rgba_float
00000000003f3cb0 0000000000000134 T util_format_dxt1_rgb_pack_rgba_8unorm
00000000003f3df0 0000000000000134 T util_format_dxt1_rgba_pack_rgba_8unorm
00000000003f3f30 0000000000000134 T util_format_dxt3_rgba_pack_rgba_8unorm
00000000003f4070 0000000000000134 T util_format_dxt5_rgba_pack_rgba_8unorm
00000000003f41b0 00000000000001a4 T util_format_dxt1_rgb_pack_rgba_float
00000000003f4360 00000000000001a4 T util_format_dxt1_rgba_pack_rgba_float
00000000003f4510 00000000000001a4 T util_format_dxt3_rgba_pack_rgba_float
00000000003f46c0 00000000000001a4 T util_format_dxt5_rgba_pack_rgba_float
00000000003f4870 0000000000000064 T util_format_dxt1_srgb_fetch_rgba_8unorm
00000000003f48e0 0000000000000064 T util_format_dxt1_srgba_fetch_rgba_8unorm
00000000003f4950 0000000000000064 T util_format_dxt3_srgba_fetch_rgba_8unorm
00000000003f49c0 0000000000000064 T util_format_dxt5_srgba_fetch_rgba_8unorm
00000000003f4a30 0000000000000060 T util_format_dxt1_srgb_fetch_rgba_float
00000000003f4a90 0000000000000070 T util_format_dxt1_srgba_fetch_rgba_float
00000000003f4b00 0000000000000070 T util_format_dxt3_srgba_fetch_rgba_float
00000000003f4b70 0000000000000070 T util_format_dxt5_srgba_fetch_rgba_float
00000000003f4be0 0000000000000164 T util_format_dxt1_srgb_unpack_rgba_8unorm
00000000003f4d50 0000000000000164 T util_format_dxt1_srgba_unpack_rgba_8unorm
00000000003f4ec0 0000000000000164 T util_format_dxt3_srgba_unpack_rgba_8unorm
00000000003f5030 0000000000000164 T util_format_dxt5_srgba_unpack_rgba_8unorm
00000000003f51a0 000000000000018c T util_format_dxt1_srgb_unpack_rgba_float
00000000003f5330 000000000000018c T util_format_dxt1_srgba_unpack_rgba_float
00000000003f54c0 000000000000018c T util_format_dxt3_srgba_unpack_rgba_float
00000000003f5650 000000000000018c T util_format_dxt5_srgba_unpack_rgba_float
00000000003f57e0 000000000000014c T util_format_dxt1_srgb_pack_rgba_8unorm
00000000003f5930 000000000000014c T util_format_dxt1_srgba_pack_rgba_8unorm
00000000003f5a80 000000000000014c T util_format_dxt3_srgba_pack_rgba_8unorm
00000000003f5bd0 000000000000014c T util_format_dxt5_srgba_pack_rgba_8unorm
00000000003f5d20 00000000000001e8 T util_format_dxt1_srgb_pack_rgba_float
00000000003f5f10 00000000000001e8 T util_format_dxt1_srgba_pack_rgba_float
00000000003f6100 00000000000001e8 T util_format_dxt3_srgba_pack_rgba_float
00000000003f62f0 00000000000001e8 T util_format_dxt5_srgba_pack_rgba_float
00000000003f64e0 000000000000011c T util_format_r8g8_b8g8_unorm_unpack_rgba_float
00000000003f6600 00000000000000cc T util_format_r8g8_b8g8_unorm_unpack_rgba_8unorm
00000000003f66d0 00000000000001f8 T util_format_r8g8_b8g8_unorm_pack_rgba_float
00000000003f68d0 00000000000000ec T util_format_r8g8_b8g8_unorm_pack_rgba_8unorm
00000000003f69c0 000000000000004c T util_format_r8g8_b8g8_unorm_fetch_rgba_float
00000000003f6a10 0000000000000120 T util_format_g8r8_g8b8_unorm_unpack_rgba_float
00000000003f6b30 00000000000000cc T util_format_g8r8_g8b8_unorm_unpack_rgba_8unorm
00000000003f6c00 00000000000001f4 T util_format_g8r8_g8b8_unorm_pack_rgba_float
00000000003f6e00 00000000000000ec T util_format_g8r8_g8b8_unorm_pack_rgba_8unorm
00000000003f6ef0 0000000000000048 T util_format_g8r8_g8b8_unorm_fetch_rgba_float
00000000003f6f40 00000000000001cc T util_format_uyvy_unpack_rgba_float
00000000003f7110 0000000000000274 T util_format_uyvy_unpack_rgba_8unorm
00000000003f7390 000000000000043c T util_format_uyvy_pack_rgba_float
00000000003f77d0 0000000000000274 T util_format_uyvy_pack_rgba_8unorm
00000000003f7a50 00000000000000b8 T util_format_uyvy_fetch_rgba_float
00000000003f7b10 00000000000001cc T util_format_yuyv_unpack_rgba_float
00000000003f7ce0 0000000000000274 T util_format_yuyv_unpack_rgba_8unorm
00000000003f7f60 000000000000043c T util_format_yuyv_pack_rgba_float
00000000003f83a0 0000000000000278 T util_format_yuyv_pack_rgba_8unorm
00000000003f8620 00000000000000b4 T util_format_yuyv_fetch_rgba_float
00000000003f86e0 0000000000000004 T util_format_yv12_unpack_rgba_8unorm
00000000003f86f0 0000000000000004 T util_format_yv12_pack_rgba_8unorm
00000000003f8700 0000000000000004 T util_format_yv12_unpack_rgba_float
00000000003f8710 0000000000000004 T util_format_yv12_pack_rgba_float
00000000003f8720 0000000000000004 T util_format_yv12_fetch_rgba_float
00000000003f8730 0000000000000004 T util_format_yv16_unpack_rgba_8unorm
00000000003f8740 0000000000000004 T util_format_yv16_pack_rgba_8unorm
00000000003f8750 0000000000000004 T util_format_yv16_unpack_rgba_float
00000000003f8760 0000000000000004 T util_format_yv16_pack_rgba_float
00000000003f8770 0000000000000004 T util_format_yv16_fetch_rgba_float
00000000003f8780 0000000000000004 T util_format_iyuv_unpack_rgba_8unorm
00000000003f8790 0000000000000004 T util_format_iyuv_pack_rgba_8unorm
00000000003f87a0 0000000000000004 T util_format_iyuv_unpack_rgba_float
00000000003f87b0 0000000000000004 T util_format_iyuv_pack_rgba_float
00000000003f87c0 0000000000000004 T util_format_iyuv_fetch_rgba_float
00000000003f87d0 0000000000000004 T util_format_nv12_unpack_rgba_8unorm
00000000003f87e0 0000000000000004 T util_format_nv12_pack_rgba_8unorm
00000000003f87f0 0000000000000004 T util_format_nv12_unpack_rgba_float
00000000003f8800 0000000000000004 T util_format_nv12_pack_rgba_float
00000000003f8810 0000000000000004 T util_format_nv12_fetch_rgba_float
00000000003f8820 0000000000000004 T util_format_nv21_unpack_rgba_8unorm
00000000003f8830 0000000000000004 T util_format_nv21_pack_rgba_8unorm
00000000003f8840 0000000000000004 T util_format_nv21_unpack_rgba_float
00000000003f8850 0000000000000004 T util_format_nv21_pack_rgba_float
00000000003f8860 0000000000000004 T util_format_nv21_fetch_rgba_float
00000000003f8870 0000000000000004 T util_format_p010_unpack_rgba_8unorm
00000000003f8880 0000000000000004 T util_format_p010_pack_rgba_8unorm
00000000003f8890 0000000000000004 T util_format_p010_unpack_rgba_float
00000000003f88a0 0000000000000004 T util_format_p010_pack_rgba_float
00000000003f88b0 0000000000000004 T util_format_p010_fetch_rgba_float
00000000003f88c0 0000000000000004 T util_format_p016_unpack_rgba_8unorm
00000000003f88d0 0000000000000004 T util_format_p016_pack_rgba_8unorm
00000000003f88e0 0000000000000004 T util_format_p016_unpack_rgba_float
00000000003f88f0 0000000000000004 T util_format_p016_pack_rgba_float
00000000003f8900 0000000000000004 T util_format_p016_fetch_rgba_float
00000000003f8910 0000000000000004 T util_format_xyuv_unpack_rgba_float
00000000003f8920 0000000000000004 T util_format_xyuv_unpack_rgba_8unorm
00000000003f8930 0000000000000004 T util_format_xyuv_pack_rgba_float
00000000003f8940 0000000000000004 T util_format_xyuv_pack_rgba_8unorm
00000000003f8950 0000000000000004 T util_format_xyuv_fetch_rgba_float
00000000003f8960 0000000000000004 T util_format_ayuv_unpack_rgba_float
00000000003f8970 0000000000000004 T util_format_ayuv_unpack_rgba_8unorm
00000000003f8980 0000000000000004 T util_format_ayuv_pack_rgba_float
00000000003f8990 0000000000000004 T util_format_ayuv_pack_rgba_8unorm
00000000003f89a0 0000000000000004 T util_format_ayuv_fetch_rgba_float
00000000003f89b0 0000000000000004 T util_format_r8g8_r8b8_unorm_unpack_rgba_float
00000000003f89c0 0000000000000004 T util_format_r8g8_r8b8_unorm_unpack_rgba_8unorm
00000000003f89d0 0000000000000004 T util_format_r8g8_r8b8_unorm_pack_rgba_float
00000000003f89e0 0000000000000004 T util_format_r8g8_r8b8_unorm_pack_rgba_8unorm
00000000003f89f0 0000000000000004 T util_format_r8g8_r8b8_unorm_fetch_rgba_float
00000000003f8a00 0000000000000004 T util_format_g8r8_b8r8_unorm_unpack_rgba_float
00000000003f8a10 0000000000000004 T util_format_g8r8_b8r8_unorm_unpack_rgba_8unorm
00000000003f8a20 0000000000000004 T util_format_g8r8_b8r8_unorm_pack_rgba_float
00000000003f8a30 0000000000000004 T util_format_g8r8_b8r8_unorm_pack_rgba_8unorm
00000000003f8a40 0000000000000004 T util_format_g8r8_b8r8_unorm_fetch_rgba_float
00000000003f8a50 0000000000000074 T util_format_s8_uint_unpack_s_8uint
00000000003f8ad0 0000000000000074 T util_format_s8_uint_pack_s_8uint
00000000003f8b50 000000000000005c T util_format_z16_unorm_unpack_z_float
00000000003f8bb0 0000000000000060 T util_format_z16_unorm_pack_z_float
00000000003f8c10 0000000000000048 T util_format_z16_unorm_unpack_z_32unorm
00000000003f8c60 0000000000000048 T util_format_z16_unorm_pack_z_32unorm
00000000003f8cb0 0000000000000060 T util_format_z32_unorm_unpack_z_float
00000000003f8d10 0000000000000060 T util_format_z32_unorm_pack_z_float
00000000003f8d70 0000000000000074 T util_format_z32_unorm_unpack_z_32unorm
00000000003f8df0 0000000000000074 T util_format_z32_unorm_pack_z_32unorm
00000000003f8e70 0000000000000074 T util_format_z32_float_unpack_z_float
00000000003f8ef0 0000000000000074 T util_format_z32_float_pack_z_float
00000000003f8f70 0000000000000060 T util_format_z32_float_unpack_z_32unorm
00000000003f8fd0 0000000000000060 T util_format_z32_float_pack_z_32unorm
00000000003f9030 000000000000005c T util_format_z24_unorm_s8_uint_unpack_z_float
00000000003f9090 0000000000000068 T util_format_z24_unorm_s8_uint_pack_z_float
00000000003f9100 000000000000004c T util_format_z24_unorm_s8_uint_unpack_z_32unorm
00000000003f9150 0000000000000050 T util_format_z24_unorm_s8_uint_pack_z_32unorm
00000000003f91a0 0000000000000048 T util_format_z24_unorm_s8_uint_unpack_s_8uint
00000000003f91f0 0000000000000048 T util_format_z24_unorm_s8_uint_pack_s_8uint
00000000003f9240 000000000000005c T util_format_s8_uint_z24_unorm_unpack_z_float
00000000003f92a0 0000000000000068 T util_format_s8_uint_z24_unorm_pack_z_float
00000000003f9310 000000000000004c T util_format_s8_uint_z24_unorm_unpack_z_32unorm
00000000003f9360 000000000000004c T util_format_s8_uint_z24_unorm_pack_z_32unorm
00000000003f93b0 0000000000000044 T util_format_s8_uint_z24_unorm_unpack_s_8uint
00000000003f9400 0000000000000048 T util_format_s8_uint_z24_unorm_pack_s_8uint
00000000003f9450 000000000000005c T util_format_z24x8_unorm_unpack_z_float
00000000003f94b0 0000000000000064 T util_format_z24x8_unorm_pack_z_float
00000000003f9520 000000000000004c T util_format_z24x8_unorm_unpack_z_32unorm
00000000003f9570 0000000000000048 T util_format_z24x8_unorm_pack_z_32unorm
00000000003f95c0 000000000000005c T util_format_x8z24_unorm_unpack_z_float
00000000003f9620 0000000000000064 T util_format_x8z24_unorm_pack_z_float
00000000003f9690 000000000000004c T util_format_x8z24_unorm_unpack_z_32unorm
00000000003f96e0 0000000000000048 T util_format_x8z24_unorm_pack_z_32unorm
00000000003f9730 0000000000000048 T util_format_z32_float_s8x24_uint_unpack_z_float
00000000003f9780 0000000000000048 T util_format_z32_float_s8x24_uint_pack_z_float
00000000003f97d0 0000000000000064 T util_format_z32_float_s8x24_uint_unpack_z_32unorm
00000000003f9840 0000000000000060 T util_format_z32_float_s8x24_uint_pack_z_32unorm
00000000003f98a0 000000000000005c T util_format_z32_float_s8x24_uint_unpack_s_8uint
00000000003f9900 000000000000005c T util_format_z32_float_s8x24_uint_pack_s_8uint
00000000003f9960 0000000000000048 T util_format_x24s8_uint_unpack_s_8uint
00000000003f99b0 0000000000000048 T util_format_x24s8_uint_pack_s_8uint
00000000003f9a00 0000000000000044 T util_format_s8x24_uint_unpack_s_8uint
00000000003f9a50 0000000000000048 T util_format_s8x24_uint_pack_s_8uint
00000000003f9aa0 000000000000005c T util_format_x32_s8x24_uint_unpack_s_8uint
00000000003f9b00 000000000000005c T util_format_x32_s8x24_uint_pack_s_8uint
00000000003f9b60 00000000000002dc t (anonymous namespace)::add_uniform_to_shader::visit_field(glsl_type const*, char const*, bool, glsl_type const*, glsl_interface_packing, bool)
00000000003f9e40 00000000000000f4 t _mesa_generate_parameters_list_for_uniforms
00000000003f9f40 0000000000000408 t _mesa_associate_uniform_storage
00000000003fa350 000000000000024c t _mesa_glsl_link_shader
00000000003fa5a0 00000000000000f0 t get_src_arg_mask
00000000003fa690 0000000000000018 t compare_start
00000000003fa6b0 0000000000000078 t update_interval
00000000003fa730 000000000000019c t find_next_use
00000000003fa8d0 00000000000000ec t remove_instructions
00000000003fa9c0 000000000000022c t _mesa_remove_dead_code_global
00000000003fabf0 0000000000000198 t _mesa_simplify_cmp
00000000003fad90 0000000000000180 t _mesa_find_temp_intervals
00000000003faf10 000000000000039c t _mesa_reallocate_registers
00000000003fb2b0 0000000000000790 t _mesa_optimize_program
00000000003fba40 000000000000000c t _mesa_new_parameter_list
00000000003fba50 00000000000000d8 t _mesa_new_parameter_list_sized
00000000003fbb30 0000000000000068 t _mesa_free_parameter_list
00000000003fbba0 00000000000000c4 t _mesa_reserve_parameter_storage
00000000003fbc70 0000000000000274 t _mesa_add_parameter
00000000003fbef0 00000000000002b8 t _mesa_add_typed_unnamed_constant
00000000003fc1b0 00000000000000f4 t _mesa_add_sized_state_reference
00000000003fc2b0 000000000000000c t _mesa_add_state_reference
00000000003fc2c0 000000000000007c t binary
00000000003fc340 0000000000000188 t _mesa_register_file_name
00000000003fc4d0 0000000000000214 t reg_string
00000000003fc6f0 00000000000000e0 t _mesa_fprint_parameter_list.part.0
00000000003fc7d0 0000000000000268 t _mesa_swizzle_string
00000000003fca40 0000000000000068 t fprint_src_reg
00000000003fcab0 0000000000000084 t _mesa_writemask_string
00000000003fcb40 0000000000000170 t _mesa_fprint_alu_instruction
00000000003fccb0 0000000000000684 t _mesa_fprint_instruction_opt
00000000003fd340 0000000000000154 t _mesa_fprint_program_opt
00000000003fd4a0 0000000000000030 t _mesa_print_program
00000000003fd4d0 00000000000001b8 t _mesa_print_program_parameters
00000000003fd690 0000000000000038 t _mesa_print_parameter_list
00000000003fd6d0 0000000000000190 t _mesa_write_shader_to_file
00000000003fd860 0000000000000048 t _mesa_set_program_error
00000000003fd8b0 00000000000000c8 t _mesa_init_gl_program
00000000003fd980 0000000000000070 t _mesa_delete_program
00000000003fd9f0 0000000000000018 t _mesa_lookup_program
00000000003fda10 0000000000000094 t _mesa_reference_program_
00000000003fdab0 00000000000000e4 t _mesa_init_program
00000000003fdba0 00000000000000a0 t _mesa_free_program_data
00000000003fdc40 00000000000000a0 t _mesa_update_default_objects_program
00000000003fdce0 00000000000000f8 t _mesa_insert_instructions
00000000003fdde0 00000000000000e0 t _mesa_delete_instructions
00000000003fdec0 00000000000000f0 t _mesa_find_used_registers
00000000003fdfb0 0000000000000038 t _mesa_find_free_register
00000000003fdff0 00000000000000a0 t _mesa_get_min_invocations_per_fragment
00000000003fe090 0000000000000360 t _mesa_insert_mvp_code
00000000003fe3f0 00000000000003fc t _mesa_append_fog_code
00000000003fe7f0 0000000000000250 t _mesa_remove_output_reads
00000000003fea40 00000000000000d4 t _mesa_program_fragment_position_to_sysval
00000000003feb20 0000000000000ee8 t append_token
00000000003ffa10 0000000000000104 t _mesa_program_state_flags
00000000003ffb20 0000000000000778 t _mesa_program_state_string
00000000004002a0 0000000000001314 t _mesa_load_state_parameters
00000000004015c0 0000000000000098 t _mesa_symbol_table_pop_scope
0000000000401660 0000000000000058 t _mesa_symbol_table_push_scope
00000000004016c0 000000000000004c t _mesa_symbol_table_symbol_scope
0000000000401710 0000000000000028 t _mesa_symbol_table_find_symbol
0000000000401740 00000000000000e4 t _mesa_symbol_table_add_symbol
0000000000401830 0000000000000048 t _mesa_symbol_table_replace_symbol
0000000000401880 0000000000000088 t _mesa_symbol_table_ctor
0000000000401910 0000000000000044 t _mesa_symbol_table_dtor
0000000000401960 00000000000001cc t accum_scale_or_bias
0000000000401b30 000000000000030c t accum_or_load
0000000000401e40 0000000000000124 t _mesa_ClearAccum
0000000000401f70 00000000000001e8 t _mesa_clear_accum_buffer
0000000000402160 0000000000000010 t _mesa_init_accum
0000000000402170 0000000000000764 T _mesa_Accum
00000000004028e0 000000000000006c t VertexAttrib1NbvNV
0000000000402950 000000000000004c t VertexAttrib1bvNV
00000000004029a0 000000000000007c t VertexAttrib2NbvNV
0000000000402a20 0000000000000054 t VertexAttrib2bvNV
0000000000402a80 0000000000000094 t VertexAttrib3NbvNV
0000000000402b20 000000000000005c t VertexAttrib3bvNV
0000000000402b80 00000000000000a8 t VertexAttrib4NbvNV
0000000000402c30 0000000000000064 t VertexAttrib4bvNV
0000000000402ca0 0000000000000058 t VertexAttrib1NubvNV
0000000000402d00 000000000000004c t VertexAttrib1ubvNV
0000000000402d50 0000000000000060 t VertexAttrib2NubvNV
0000000000402db0 0000000000000054 t VertexAttrib2ubvNV
0000000000402e10 0000000000000068 t VertexAttrib3NubvNV
0000000000402e80 000000000000005c t VertexAttrib3ubvNV
0000000000402ee0 0000000000000070 t VertexAttrib4NubvNV
0000000000402f50 0000000000000064 t VertexAttrib4ubvNV
0000000000402fc0 000000000000006c t VertexAttrib1NsvNV
0000000000403030 000000000000004c t VertexAttrib1svNV
0000000000403080 000000000000007c t VertexAttrib2NsvNV
0000000000403100 0000000000000054 t VertexAttrib2svNV
0000000000403160 0000000000000094 t VertexAttrib3NsvNV
0000000000403200 000000000000005c t VertexAttrib3svNV
0000000000403260 00000000000000a8 t VertexAttrib4NsvNV
0000000000403310 0000000000000064 t VertexAttrib4svNV
0000000000403380 0000000000000060 t VertexAttrib1NusvNV
00000000004033e0 000000000000004c t VertexAttrib1usvNV
0000000000403430 000000000000006c t VertexAttrib2NusvNV
00000000004034a0 0000000000000054 t VertexAttrib2usvNV
0000000000403500 0000000000000078 t VertexAttrib3NusvNV
0000000000403580 000000000000005c t VertexAttrib3usvNV
00000000004035e0 0000000000000084 t VertexAttrib4NusvNV
0000000000403670 0000000000000064 t VertexAttrib4usvNV
00000000004036e0 0000000000000074 t VertexAttrib1NivNV
0000000000403760 000000000000004c t VertexAttrib1ivNV
00000000004037b0 000000000000008c t VertexAttrib2NivNV
0000000000403840 0000000000000050 t VertexAttrib2ivNV
0000000000403890 00000000000000a8 t VertexAttrib3NivNV
0000000000403940 0000000000000058 t VertexAttrib3ivNV
00000000004039a0 00000000000000c0 t VertexAttrib4NivNV
0000000000403a60 000000000000005c t VertexAttrib4ivNV
0000000000403ac0 0000000000000064 t VertexAttrib1NuivNV
0000000000403b30 000000000000004c t VertexAttrib1uivNV
0000000000403b80 0000000000000070 t VertexAttrib2NuivNV
0000000000403bf0 0000000000000050 t VertexAttrib2uivNV
0000000000403c40 0000000000000080 t VertexAttrib3NuivNV
0000000000403cc0 0000000000000058 t VertexAttrib3uivNV
0000000000403d20 000000000000008c t VertexAttrib4NuivNV
0000000000403db0 000000000000005c t VertexAttrib4uivNV
0000000000403e10 0000000000000044 t VertexAttrib1fvNV
0000000000403e60 0000000000000044 t VertexAttrib2fvNV
0000000000403eb0 0000000000000044 t VertexAttrib3fvNV
0000000000403f00 0000000000000044 t VertexAttrib4fvNV
0000000000403f50 0000000000000044 t VertexAttrib1dvNV
0000000000403fa0 0000000000000044 t VertexAttrib2dvNV
0000000000403ff0 0000000000000044 t VertexAttrib3dvNV
0000000000404040 0000000000000044 t VertexAttrib4dvNV
0000000000404090 000000000000006c t VertexAttrib1NbvARB
0000000000404100 000000000000004c t VertexAttrib1bvARB
0000000000404150 000000000000007c t VertexAttrib2NbvARB
00000000004041d0 0000000000000054 t VertexAttrib2bvARB
0000000000404230 0000000000000094 t VertexAttrib3NbvARB
00000000004042d0 000000000000005c t VertexAttrib3bvARB
0000000000404330 00000000000000a8 t VertexAttrib4NbvARB
00000000004043e0 0000000000000064 t VertexAttrib4bvARB
0000000000404450 0000000000000058 t VertexAttrib1NubvARB
00000000004044b0 000000000000004c t VertexAttrib1ubvARB
0000000000404500 0000000000000060 t VertexAttrib2NubvARB
0000000000404560 0000000000000054 t VertexAttrib2ubvARB
00000000004045c0 0000000000000068 t VertexAttrib3NubvARB
0000000000404630 000000000000005c t VertexAttrib3ubvARB
0000000000404690 0000000000000070 t VertexAttrib4NubvARB
0000000000404700 0000000000000064 t VertexAttrib4ubvARB
0000000000404770 000000000000006c t VertexAttrib1NsvARB
00000000004047e0 000000000000004c t VertexAttrib1svARB
0000000000404830 000000000000007c t VertexAttrib2NsvARB
00000000004048b0 0000000000000054 t VertexAttrib2svARB
0000000000404910 0000000000000094 t VertexAttrib3NsvARB
00000000004049b0 000000000000005c t VertexAttrib3svARB
0000000000404a10 00000000000000a8 t VertexAttrib4NsvARB
0000000000404ac0 0000000000000064 t VertexAttrib4svARB
0000000000404b30 0000000000000060 t VertexAttrib1NusvARB
0000000000404b90 000000000000004c t VertexAttrib1usvARB
0000000000404be0 000000000000006c t VertexAttrib2NusvARB
0000000000404c50 0000000000000054 t VertexAttrib2usvARB
0000000000404cb0 0000000000000078 t VertexAttrib3NusvARB
0000000000404d30 000000000000005c t VertexAttrib3usvARB
0000000000404d90 0000000000000084 t VertexAttrib4NusvARB
0000000000404e20 0000000000000064 t VertexAttrib4usvARB
0000000000404e90 0000000000000074 t VertexAttrib1NivARB
0000000000404f10 000000000000004c t VertexAttrib1ivARB
0000000000404f60 000000000000008c t VertexAttrib2NivARB
0000000000404ff0 0000000000000050 t VertexAttrib2ivARB
0000000000405040 00000000000000a8 t VertexAttrib3NivARB
00000000004050f0 0000000000000058 t VertexAttrib3ivARB
0000000000405150 00000000000000c0 t VertexAttrib4NivARB
0000000000405210 000000000000005c t VertexAttrib4ivARB
0000000000405270 0000000000000064 t VertexAttrib1NuivARB
00000000004052e0 000000000000004c t VertexAttrib1uivARB
0000000000405330 0000000000000070 t VertexAttrib2NuivARB
00000000004053a0 0000000000000050 t VertexAttrib2uivARB
00000000004053f0 0000000000000080 t VertexAttrib3NuivARB
0000000000405470 0000000000000058 t VertexAttrib3uivARB
00000000004054d0 000000000000008c t VertexAttrib4NuivARB
0000000000405560 000000000000005c t VertexAttrib4uivARB
00000000004055c0 0000000000000044 t VertexAttrib1fvARB
0000000000405610 0000000000000044 t VertexAttrib2fvARB
0000000000405660 0000000000000044 t VertexAttrib3fvARB
00000000004056b0 0000000000000044 t VertexAttrib4fvARB
0000000000405700 0000000000000044 t VertexAttrib1dvARB
0000000000405750 0000000000000044 t VertexAttrib2dvARB
00000000004057a0 0000000000000044 t VertexAttrib3dvARB
00000000004057f0 0000000000000044 t VertexAttrib4dvARB
0000000000405840 0000000000000048 t VertexAttribI1bv
0000000000405890 000000000000004c t VertexAttribI2bv
00000000004058e0 0000000000000050 t VertexAttribI3bv
0000000000405930 0000000000000044 t VertexAttribI4bv
0000000000405980 0000000000000048 t VertexAttribI1ubv
00000000004059d0 000000000000004c t VertexAttribI2ubv
0000000000405a20 0000000000000050 t VertexAttribI3ubv
0000000000405a70 0000000000000044 t VertexAttribI4ubv
0000000000405ac0 0000000000000048 t VertexAttribI1sv
0000000000405b10 000000000000004c t VertexAttribI2sv
0000000000405b60 0000000000000050 t VertexAttribI3sv
0000000000405bb0 0000000000000044 t VertexAttribI4sv
0000000000405c00 0000000000000048 t VertexAttribI1usv
0000000000405c50 000000000000004c t VertexAttribI2usv
0000000000405ca0 0000000000000050 t VertexAttribI3usv
0000000000405cf0 0000000000000044 t VertexAttribI4usv
0000000000405d40 0000000000000048 t VertexAttribI1iv
0000000000405d90 0000000000000050 t VertexAttribI2iv
0000000000405de0 0000000000000050 t VertexAttribI3iv
0000000000405e30 0000000000000044 t VertexAttribI4iv
0000000000405e80 0000000000000048 t VertexAttribI1uiv
0000000000405ed0 0000000000000050 t VertexAttribI2uiv
0000000000405f20 0000000000000050 t VertexAttribI3uiv
0000000000405f70 0000000000000044 t VertexAttribI4uiv
0000000000405fc0 0000000000000044 t VertexAttribL1dv
0000000000406010 0000000000000044 t VertexAttribL2dv
0000000000406060 0000000000000044 t VertexAttribL3dv
00000000004060b0 0000000000000044 t VertexAttribL4dv
0000000000406100 0000000000000374 t _mesa_array_element
0000000000406480 00000000000000b8 T _ae_ArrayElement
0000000000406540 000000000000000c t _mesa_install_arrayelt_vtxfmt
0000000000406550 0000000000000074 T _mesa_Color3b
00000000004065d0 0000000000000038 T _mesa_Color3d
0000000000406610 0000000000000080 T _mesa_Color3i
0000000000406690 0000000000000074 T _mesa_Color3s
0000000000406710 0000000000000060 T _mesa_Color3ui
0000000000406770 000000000000005c T _mesa_Color3us
00000000004067d0 000000000000004c T _mesa_Color3ub
0000000000406820 0000000000000078 T _mesa_Color3bv
00000000004068a0 0000000000000044 T _mesa_Color3dv
00000000004068f0 000000000000008c T _mesa_Color3iv
0000000000406980 0000000000000078 T _mesa_Color3sv
0000000000406a00 0000000000000068 T _mesa_Color3uiv
0000000000406a70 0000000000000060 T _mesa_Color3usv
0000000000406ad0 0000000000000050 T _mesa_Color3ubv
0000000000406b20 0000000000000088 T _mesa_Color4b
0000000000406bb0 0000000000000038 T _mesa_Color4d
0000000000406bf0 0000000000000098 T _mesa_Color4i
0000000000406c90 0000000000000088 T _mesa_Color4s
0000000000406d20 0000000000000068 T _mesa_Color4ui
0000000000406d90 0000000000000064 T _mesa_Color4us
0000000000406e00 0000000000000050 T _mesa_Color4ub
0000000000406e50 00000000000000a4 T _mesa_Color4iv
0000000000406f00 000000000000008c T _mesa_Color4bv
0000000000406f90 0000000000000044 T _mesa_Color4dv
0000000000406fe0 000000000000008c T _mesa_Color4sv
0000000000407070 0000000000000070 T _mesa_Color4uiv
00000000004070e0 0000000000000068 T _mesa_Color4usv
0000000000407150 0000000000000054 T _mesa_Color4ubv
00000000004071b0 0000000000000040 T _mesa_FogCoordd
00000000004071f0 0000000000000048 T _mesa_FogCoorddv
0000000000407240 000000000000002c T _mesa_Indexd
0000000000407270 0000000000000030 T _mesa_Indexi
00000000004072a0 0000000000000030 T _mesa_Indexs
00000000004072d0 0000000000000030 T _mesa_Indexub
0000000000407300 0000000000000034 T _mesa_Indexdv
0000000000407340 0000000000000034 T _mesa_Indexiv
0000000000407380 0000000000000034 T _mesa_Indexsv
00000000004073c0 0000000000000034 T _mesa_Indexubv
0000000000407400 0000000000000034 T _mesa_EdgeFlagv
0000000000407440 0000000000000074 T _mesa_Normal3b
00000000004074c0 0000000000000034 T _mesa_Normal3d
0000000000407500 0000000000000080 T _mesa_Normal3i
0000000000407580 0000000000000074 T _mesa_Normal3s
0000000000407600 0000000000000078 T _mesa_Normal3bv
0000000000407680 0000000000000040 T _mesa_Normal3dv
00000000004076c0 000000000000008c T _mesa_Normal3iv
0000000000407750 0000000000000078 T _mesa_Normal3sv
00000000004077d0 000000000000002c T _mesa_TexCoord1d
0000000000407800 0000000000000030 T _mesa_TexCoord1i
0000000000407830 0000000000000030 T _mesa_TexCoord1s
0000000000407860 0000000000000030 T _mesa_TexCoord2d
0000000000407890 0000000000000038 T _mesa_TexCoord2s
00000000004078d0 0000000000000034 T _mesa_TexCoord2i
0000000000407910 0000000000000034 T _mesa_TexCoord3d
0000000000407950 0000000000000038 T _mesa_TexCoord3i
0000000000407990 0000000000000040 T _mesa_TexCoord3s
00000000004079d0 0000000000000038 T _mesa_TexCoord4d
0000000000407a10 000000000000003c T _mesa_TexCoord4i
0000000000407a50 0000000000000048 T _mesa_TexCoord4s
0000000000407aa0 0000000000000034 T _mesa_TexCoord1dv
0000000000407ae0 0000000000000034 T _mesa_TexCoord1iv
0000000000407b20 0000000000000034 T _mesa_TexCoord1sv
0000000000407b60 0000000000000038 T _mesa_TexCoord2dv
0000000000407ba0 0000000000000038 T _mesa_TexCoord2iv
0000000000407be0 000000000000003c T _mesa_TexCoord2sv
0000000000407c20 0000000000000040 T _mesa_TexCoord3dv
0000000000407c60 0000000000000040 T _mesa_TexCoord3iv
0000000000407ca0 0000000000000044 T _mesa_TexCoord3sv
0000000000407cf0 0000000000000044 T _mesa_TexCoord4dv
0000000000407d40 0000000000000044 T _mesa_TexCoord4iv
0000000000407d90 000000000000004c T _mesa_TexCoord4sv
0000000000407de0 0000000000000030 T _mesa_Vertex2d
0000000000407e10 0000000000000034 T _mesa_Vertex2i
0000000000407e50 0000000000000038 T _mesa_Vertex2s
0000000000407e90 0000000000000034 T _mesa_Vertex3d
0000000000407ed0 0000000000000038 T _mesa_Vertex3i
0000000000407f10 0000000000000040 T _mesa_Vertex3s
0000000000407f50 0000000000000038 T _mesa_Vertex4d
0000000000407f90 000000000000003c T _mesa_Vertex4i
0000000000407fd0 0000000000000048 T _mesa_Vertex4s
0000000000408020 0000000000000038 T _mesa_Vertex2dv
0000000000408060 0000000000000038 T _mesa_Vertex2iv
00000000004080a0 000000000000003c T _mesa_Vertex2sv
00000000004080e0 0000000000000040 T _mesa_Vertex3dv
0000000000408120 0000000000000040 T _mesa_Vertex3iv
0000000000408160 0000000000000044 T _mesa_Vertex3sv
00000000004081b0 0000000000000044 T _mesa_Vertex4dv
0000000000408200 0000000000000044 T _mesa_Vertex4iv
0000000000408250 000000000000004c T _mesa_Vertex4sv
00000000004082a0 0000000000000038 T _mesa_MultiTexCoord1d
00000000004082e0 000000000000003c T _mesa_MultiTexCoord1dv
0000000000408320 0000000000000038 T _mesa_MultiTexCoord1i
0000000000408360 000000000000003c T _mesa_MultiTexCoord1iv
00000000004083a0 000000000000003c T _mesa_MultiTexCoord1s
00000000004083e0 000000000000003c T _mesa_MultiTexCoord1sv
0000000000408420 000000000000003c T _mesa_MultiTexCoord2d
0000000000408460 0000000000000040 T _mesa_MultiTexCoord2dv
00000000004084a0 000000000000003c T _mesa_MultiTexCoord2i
00000000004084e0 0000000000000040 T _mesa_MultiTexCoord2iv
0000000000408520 0000000000000044 T _mesa_MultiTexCoord2s
0000000000408570 0000000000000044 T _mesa_MultiTexCoord2sv
00000000004085c0 0000000000000040 T _mesa_MultiTexCoord3d
0000000000408600 0000000000000048 T _mesa_MultiTexCoord3dv
0000000000408650 0000000000000040 T _mesa_MultiTexCoord3i
0000000000408690 0000000000000048 T _mesa_MultiTexCoord3iv
00000000004086e0 000000000000004c T _mesa_MultiTexCoord3s
0000000000408730 000000000000004c T _mesa_MultiTexCoord3sv
0000000000408780 0000000000000040 T _mesa_MultiTexCoord4d
00000000004087c0 000000000000004c T _mesa_MultiTexCoord4dv
0000000000408810 0000000000000044 T _mesa_MultiTexCoord4i
0000000000408860 000000000000004c T _mesa_MultiTexCoord4iv
00000000004088b0 0000000000000054 T _mesa_MultiTexCoord4s
0000000000408910 0000000000000054 T _mesa_MultiTexCoord4sv
0000000000408970 0000000000000038 T _mesa_EvalCoord2dv
00000000004089b0 0000000000000030 T _mesa_EvalCoord2d
00000000004089e0 0000000000000034 T _mesa_EvalCoord1dv
0000000000408a20 000000000000002c T _mesa_EvalCoord1d
0000000000408a50 000000000000003c T _mesa_Materialf
0000000000408a90 0000000000000044 T _mesa_Materiali
0000000000408ae0 0000000000000138 T _mesa_Materialiv
0000000000408c20 0000000000000038 T _mesa_Rectd
0000000000408c60 0000000000000044 T _mesa_Rectdv
0000000000408cb0 0000000000000034 T _mesa_Rectfv
0000000000408cf0 000000000000003c T _mesa_Recti
0000000000408d30 0000000000000044 T _mesa_Rectiv
0000000000408d80 0000000000000048 T _mesa_Rects
0000000000408dd0 000000000000004c T _mesa_Rectsv
0000000000408e20 0000000000000088 T _mesa_SecondaryColor3b
0000000000408eb0 0000000000000048 T _mesa_SecondaryColor3d
0000000000408f00 00000000000000a4 T _mesa_SecondaryColor3i
0000000000408fb0 0000000000000088 T _mesa_SecondaryColor3s
0000000000409040 0000000000000074 T _mesa_SecondaryColor3ui
00000000004090c0 000000000000006c T _mesa_SecondaryColor3us
0000000000409130 000000000000005c T _mesa_SecondaryColor3ub
0000000000409190 000000000000008c T _mesa_SecondaryColor3bv
0000000000409220 0000000000000054 T _mesa_SecondaryColor3dv
0000000000409280 00000000000000a0 T _mesa_SecondaryColor3iv
0000000000409320 000000000000008c T _mesa_SecondaryColor3sv
00000000004093b0 0000000000000078 T _mesa_SecondaryColor3uiv
0000000000409430 0000000000000070 T _mesa_SecondaryColor3usv
00000000004094a0 0000000000000060 T _mesa_SecondaryColor3ubv
0000000000409500 000000000000004c T _mesa_VertexAttrib1sNV
0000000000409550 0000000000000048 T _mesa_VertexAttrib1dNV
00000000004095a0 0000000000000054 T _mesa_VertexAttrib2sNV
0000000000409600 000000000000004c T _mesa_VertexAttrib2dNV
0000000000409650 000000000000005c T _mesa_VertexAttrib3sNV
00000000004096b0 0000000000000054 T _mesa_VertexAttrib3dNV
0000000000409710 0000000000000064 T _mesa_VertexAttrib4sNV
0000000000409780 0000000000000054 T _mesa_VertexAttrib4dNV
00000000004097e0 0000000000000070 T _mesa_VertexAttrib4ubNV
0000000000409850 000000000000004c T _mesa_VertexAttrib1svNV
00000000004098a0 000000000000004c T _mesa_VertexAttrib1dvNV
00000000004098f0 0000000000000054 T _mesa_VertexAttrib2svNV
0000000000409950 0000000000000050 T _mesa_VertexAttrib2dvNV
00000000004099a0 000000000000005c t _mesa_VertexAttrib3svNV
0000000000409a00 0000000000000058 T _mesa_VertexAttrib3dvNV
0000000000409a60 0000000000000064 t _mesa_VertexAttrib4svNV
0000000000409ad0 000000000000005c T _mesa_VertexAttrib4dvNV
0000000000409b30 0000000000000070 t _mesa_VertexAttrib4ubvNV
0000000000409ba0 0000000000000080 T _mesa_VertexAttribs1fvNV
0000000000409c20 000000000000008c T _mesa_VertexAttribs2fvNV
0000000000409cb0 000000000000005c T _mesa_VertexAttribs3svNV
0000000000409d10 000000000000008c T _mesa_VertexAttribs3fvNV
0000000000409da0 000000000000005c T _mesa_VertexAttribs4svNV
0000000000409e00 0000000000000090 T _mesa_VertexAttribs4fvNV
0000000000409e90 000000000000005c T _mesa_VertexAttribs4ubvNV
0000000000409ef0 000000000000004c T _mesa_VertexAttrib1s
0000000000409f40 0000000000000048 T _mesa_VertexAttrib1d
0000000000409f90 0000000000000054 T _mesa_VertexAttrib2s
0000000000409ff0 000000000000004c T _mesa_VertexAttrib2d
000000000040a040 000000000000005c T _mesa_VertexAttrib3s
000000000040a0a0 0000000000000054 T _mesa_VertexAttrib3d
000000000040a100 0000000000000064 T _mesa_VertexAttrib4s
000000000040a170 0000000000000054 T _mesa_VertexAttrib4d
000000000040a1d0 000000000000004c T _mesa_VertexAttrib1sv
000000000040a220 000000000000004c T _mesa_VertexAttrib1dv
000000000040a270 0000000000000054 T _mesa_VertexAttrib2sv
000000000040a2d0 0000000000000050 T _mesa_VertexAttrib2dv
000000000040a320 000000000000005c T _mesa_VertexAttrib3sv
000000000040a380 0000000000000058 T _mesa_VertexAttrib3dv
000000000040a3e0 0000000000000064 T _mesa_VertexAttrib4sv
000000000040a450 000000000000005c T _mesa_VertexAttrib4dv
000000000040a4b0 0000000000000064 T _mesa_VertexAttrib4bv
000000000040a520 000000000000005c T _mesa_VertexAttrib4iv
000000000040a580 0000000000000064 T _mesa_VertexAttrib4ubv
000000000040a5f0 0000000000000064 T _mesa_VertexAttrib4usv
000000000040a660 000000000000005c T _mesa_VertexAttrib4uiv
000000000040a6c0 00000000000000a8 T _mesa_VertexAttrib4Nbv
000000000040a770 00000000000000a8 T _mesa_VertexAttrib4Nsv
000000000040a820 00000000000000c0 T _mesa_VertexAttrib4Niv
000000000040a8e0 0000000000000070 T _mesa_VertexAttrib4Nub
000000000040a950 0000000000000070 T _mesa_VertexAttrib4Nubv
000000000040a9c0 0000000000000084 T _mesa_VertexAttrib4Nusv
000000000040aa50 000000000000008c T _mesa_VertexAttrib4Nuiv
000000000040aae0 0000000000000048 T _mesa_VertexAttribI1iv
000000000040ab30 0000000000000048 T _mesa_VertexAttribI1uiv
000000000040ab80 0000000000000054 T _mesa_VertexAttribI4bv
000000000040abe0 0000000000000054 T _mesa_VertexAttribI4sv
000000000040ac40 0000000000000054 T _mesa_VertexAttribI4ubv
000000000040aca0 0000000000000054 T _mesa_VertexAttribI4usv
000000000040ad00 0000000000000084 T _mesa_VertexAttribs1dvNV
000000000040ad90 0000000000000084 T _mesa_VertexAttribs1svNV
000000000040ae20 0000000000000098 T _mesa_VertexAttribs2dvNV
000000000040aec0 0000000000000098 T _mesa_VertexAttribs3dvNV
000000000040af60 000000000000009c T _mesa_VertexAttribs2svNV
000000000040b000 00000000000000ac T _mesa_VertexAttribs4dvNV
000000000040b0b0 00000000000010cc t _mesa_loopback_init_api_table
000000000040c180 00000000000001c4 t lookup_or_create_program
000000000040c350 000000000000032c t set_program_string
000000000040c680 00000000000000b4 t get_local_param_pointer
000000000040c740 00000000000003ec t get_program_iv
000000000040cb30 0000000000000194 t program_local_parameters4fv
000000000040ccd0 00000000000001fc t _mesa_BindProgramARB
000000000040ced0 00000000000001bc T _mesa_DeleteProgramsARB
000000000040d090 0000000000000114 T _mesa_GenProgramsARB
000000000040d1b0 0000000000000084 T _mesa_IsProgramARB
000000000040d240 00000000000000a0 T _mesa_ProgramStringARB
000000000040d2e0 0000000000000060 T _mesa_NamedProgramStringEXT
000000000040d340 00000000000001d0 T _mesa_ProgramEnvParameter4dARB
000000000040d510 00000000000001c8 T _mesa_ProgramEnvParameter4dvARB
000000000040d6e0 00000000000001c0 T _mesa_ProgramEnvParameter4fARB
000000000040d8a0 00000000000001d8 T _mesa_ProgramEnvParameter4fvARB
000000000040da80 00000000000001a0 T _mesa_ProgramEnvParameters4fvEXT
000000000040dc20 00000000000000f0 T _mesa_GetProgramEnvParameterdvARB
000000000040dd10 00000000000000f0 T _mesa_GetProgramEnvParameterfvARB
000000000040de00 0000000000000178 t _mesa_ProgramLocalParameter4fARB
000000000040df80 0000000000000164 t _mesa_NamedProgramLocalParameter4fEXT
000000000040e0f0 000000000000000c T _mesa_ProgramLocalParameter4fvARB
000000000040e100 000000000000000c T _mesa_NamedProgramLocalParameter4fvEXT
000000000040e110 0000000000000098 T _mesa_ProgramLocalParameters4fvEXT
000000000040e1b0 0000000000000060 T _mesa_NamedProgramLocalParameters4fvEXT
000000000040e210 0000000000000188 T _mesa_ProgramLocalParameter4dARB
000000000040e3a0 0000000000000174 T _mesa_NamedProgramLocalParameter4dEXT
000000000040e520 000000000000001c T _mesa_ProgramLocalParameter4dvARB
000000000040e540 000000000000001c T _mesa_NamedProgramLocalParameter4dvEXT
000000000040e560 0000000000000134 T _mesa_GetProgramLocalParameterfvARB
000000000040e6a0 00000000000000fc T _mesa_GetNamedProgramLocalParameterfvEXT
000000000040e7a0 0000000000000138 T _mesa_GetProgramLocalParameterdvARB
000000000040e8e0 0000000000000100 T _mesa_GetNamedProgramLocalParameterdvEXT
000000000040e9e0 000000000000009c T _mesa_GetProgramivARB
000000000040ea80 00000000000000fc T _mesa_GetNamedProgramivEXT
000000000040eb80 00000000000000cc T _mesa_GetProgramStringARB
000000000040ec50 00000000000000b0 T _mesa_GetNamedProgramStringEXT
000000000040ed00 00000000000000e8 t gen_vertex_arrays.part.0
000000000040edf0 0000000000000050 t _mesa_new_vao
000000000040ee40 0000000000000078 t _mesa_delete_vao
000000000040eec0 00000000000000a0 t _mesa_reference_vao_
000000000040ef60 00000000000000a8 t _mesa_lookup_vao
000000000040f010 0000000000000140 t _mesa_lookup_vao_err
000000000040f150 0000000000000038 t _mesa_initialize_vao
000000000040f190 00000000000004e0 t _mesa_update_vao_derived_arrays
000000000040f670 0000000000000028 t _mesa_set_vao_immutable
000000000040f6a0 0000000000000054 t _mesa_all_varyings_in_vbos
000000000040f700 0000000000000060 t _mesa_all_buffers_are_unmapped
000000000040f760 00000000000000a8 t _mesa_vao_map_arrays
000000000040f810 000000000000007c t _mesa_vao_map
000000000040f890 0000000000000084 t _mesa_vao_unmap_arrays
000000000040f920 0000000000000048 t _mesa_vao_unmap
000000000040f970 00000000000000a4 t _mesa_BindVertexArray_no_error
000000000040fa20 0000000000000158 t delete_vertex_arrays
000000000040fb80 00000000000000c8 t _mesa_BindVertexArray
000000000040fc50 000000000000002c T _mesa_DeleteVertexArrays_no_error
000000000040fc80 0000000000000044 T _mesa_DeleteVertexArrays
000000000040fcd0 000000000000003c T _mesa_GenVertexArrays_no_error
000000000040fd10 0000000000000064 T _mesa_GenVertexArrays
000000000040fd80 000000000000003c T _mesa_CreateVertexArrays_no_error
000000000040fdc0 0000000000000064 T _mesa_CreateVertexArrays
000000000040fe30 0000000000000070 t _mesa_IsVertexArray
000000000040fea0 000000000000011c T _mesa_VertexArrayElementBuffer_no_error
000000000040ffc0 00000000000000e4 T _mesa_VertexArrayElementBuffer
00000000004100b0 00000000000000c4 T _mesa_GetVertexArrayiv
0000000000410180 00000000000000e8 t check_arith_arg
0000000000410270 000000000000005c t _mesa_delete_ati_fragment_shader.part.0
00000000004102d0 00000000000005f8 t _mesa_FragmentOpXATI
00000000004108d0 0000000000000034 t _mesa_new_ati_fragment_shader
0000000000410910 0000000000000018 t _mesa_delete_ati_fragment_shader
0000000000410930 0000000000000118 T _mesa_GenFragmentShadersATI
0000000000410a50 0000000000000174 t _mesa_BindFragmentShaderATI
0000000000410bd0 0000000000000168 T _mesa_DeleteFragmentShaderATI
0000000000410d40 0000000000000140 T _mesa_BeginFragmentShaderATI
0000000000410e80 0000000000000180 T _mesa_EndFragmentShaderATI
0000000000411000 0000000000000208 T _mesa_PassTexCoordATI
0000000000411210 0000000000000208 T _mesa_SampleMapATI
0000000000411420 0000000000000060 T _mesa_ColorFragmentOp1ATI
0000000000411480 0000000000000068 T _mesa_ColorFragmentOp2ATI
00000000004114f0 0000000000000074 T _mesa_ColorFragmentOp3ATI
0000000000411570 000000000000005c T _mesa_AlphaFragmentOp1ATI
00000000004115d0 000000000000005c T _mesa_AlphaFragmentOp2ATI
0000000000411630 0000000000000070 T _mesa_AlphaFragmentOp3ATI
00000000004116a0 0000000000000128 T _mesa_SetFragmentShaderConstantATI
00000000004117d0 0000000000000138 t copy_array_attrib
0000000000411910 00000000000000b4 t push_attrib
00000000004119d0 00000000000009b8 T _mesa_PushAttrib
0000000000412390 0000000000001ebc T _mesa_PopAttrib
0000000000414250 00000000000003e4 t _mesa_PushClientAttrib
0000000000414640 0000000000000380 T _mesa_PopClientAttrib
00000000004149c0 0000000000000324 t _mesa_ClientAttribDefaultEXT
0000000000414cf0 0000000000000024 T _mesa_PushClientAttribDefaultEXT
0000000000414d20 0000000000000128 t _mesa_free_attrib_data
0000000000414e50 0000000000000014 t _mesa_init_attrib
0000000000414e70 000000000000004c T _mesa_TextureBarrierNV
0000000000414ec0 000000000000003c T _mesa_MemoryBarrier
0000000000414f00 0000000000000054 T _mesa_MemoryBarrierByRegion_no_error
0000000000414f60 0000000000000084 T _mesa_MemoryBarrierByRegion
0000000000414ff0 000000000000004c T _mesa_BlendBarrier
0000000000415040 000000000000004c T _mesa_FramebufferFetchBarrierEXT
0000000000415090 0000000000000044 T _mesa_PrimitiveBoundingBox
00000000004150e0 000000000000002c t _mesa_init_bbox
0000000000415110 00000000000000e0 t legal_dst_factor
00000000004151f0 00000000000000b0 t update_uses_dual_src
00000000004152a0 0000000000000188 t blend_func_separate
0000000000415430 0000000000000090 t legal_src_factor
00000000004154c0 0000000000000154 t validate_blend_factors
0000000000415620 00000000000000bc t skip_blend_state_update
00000000004156e0 0000000000000268 t blend_equation_separate
0000000000415950 00000000000000a4 T _mesa_BlendFunc
0000000000415a00 0000000000000054 T _mesa_BlendFunc_no_error
0000000000415a60 00000000000000b8 t _mesa_BlendFuncSeparate
0000000000415b20 0000000000000058 T _mesa_BlendFuncSeparate_no_error
0000000000415b80 0000000000000118 t _mesa_BlendFuncSeparateiARB_no_error
0000000000415ca0 000000000000000c T _mesa_BlendFunciARB_no_error
0000000000415cb0 00000000000001a4 t _mesa_BlendFuncSeparateiARB
0000000000415e60 000000000000000c T _mesa_BlendFunciARB
0000000000415e70 00000000000002b8 t _mesa_BlendEquation
0000000000416130 00000000000001fc T _mesa_BlendEquationiARB_no_error
0000000000416330 00000000000002a8 T _mesa_BlendEquationiARB
00000000004165e0 0000000000000030 T _mesa_BlendEquationSeparate_no_error
0000000000416610 0000000000000030 t _mesa_BlendEquationSeparate
0000000000416640 00000000000000f8 T _mesa_BlendEquationSeparateiARB_no_error
0000000000416740 000000000000020c t _mesa_BlendEquationSeparateiARB
0000000000416950 00000000000001b4 t _mesa_BlendColor
0000000000416b10 0000000000000128 t _mesa_AlphaFunc
0000000000416c40 00000000000000fc t _mesa_LogicOp
0000000000416d40 00000000000000cc T _mesa_LogicOp_no_error
0000000000416e10 0000000000000088 t _mesa_IndexMask
0000000000416ea0 0000000000000138 t _mesa_ColorMask
0000000000416fe0 0000000000000128 t _mesa_ColorMaski
0000000000417110 00000000000001f8 t _mesa_ClampColor
0000000000417310 000000000000002c t _mesa_get_clamp_fragment_color
0000000000417340 000000000000002c t _mesa_get_clamp_read_color
0000000000417370 0000000000000054 t _mesa_update_clamp_fragment_color
00000000004173d0 0000000000000044 t _mesa_update_clamp_vertex_color
0000000000417420 00000000000000fc t _mesa_init_color
0000000000417520 0000000000000124 t validate_depth_buffer.isra.0
0000000000417650 0000000000000148 t validate_stencil_buffer.isra.0
00000000004177a0 00000000000001f8 t validate_color_buffer
00000000004179a0 0000000000000074 t _mesa_regions_overlap
0000000000417a20 0000000000000194 T _mesa_BlitFramebuffer_no_error
0000000000417bc0 0000000000000458 T _mesa_BlitFramebuffer
0000000000418020 00000000000001e4 T _mesa_BlitNamedFramebuffer_no_error
0000000000418210 00000000000004c0 T _mesa_BlitNamedFramebuffer
00000000004186d0 00000000000003c8 t get_buffer_target
0000000000418aa0 0000000000000048 t _mesa_delete_buffer_object
0000000000418af0 0000000000000128 t validate_buffer_storage
0000000000418c20 0000000000000110 t buffer_object_subdata_range_good
0000000000418d30 0000000000000130 t copy_buffer_sub_data
0000000000418e60 00000000000000d0 t map_buffer_range
0000000000418f30 00000000000000bc t buffer_page_commitment
0000000000418ff0 00000000000000e4 t _mesa_ClearBufferSubData_sw
00000000004190e0 00000000000001e4 t get_buffer_parameter
00000000004192d0 0000000000000080 t buffer_usage_warning
0000000000419350 00000000000000e0 t convert_clear_buffer_data
0000000000419430 0000000000000254 t clear_buffer_sub_data_error
0000000000419690 0000000000000084 t validate_and_unmap_buffer
0000000000419720 00000000000000d4 t flush_mapped_buffer_range
0000000000419800 0000000000000124 t create_buffers.part.0
0000000000419930 00000000000000dc t validate_buffer_sub_data
0000000000419a10 00000000000002f0 t validate_map_buffer_range.part.0
0000000000419d00 0000000000000068 t validate_map_buffer_range
0000000000419d70 0000000000000130 t clear_buffer_sub_data_no_error.constprop.0
0000000000419ea0 000000000000010c t buffer_data_no_error
0000000000419fb0 000000000000016c t buffer_storage
000000000041a120 000000000000020c t buffer_data_error
000000000041a330 0000000000000064 t _mesa_reference_buffer_object_
000000000041a3a0 0000000000000114 t bind_buffer
000000000041a4c0 00000000000000cc t bind_buffer_base_uniform_buffer
000000000041a590 00000000000000d0 t bind_buffer_base_shader_storage_buffer
000000000041a660 00000000000000cc t bind_buffer_base_atomic_buffer
000000000041a730 00000000000000a8 t _mesa_initialize_buffer_object
000000000041a7e0 0000000000000158 t _mesa_init_buffer_objects
000000000041a940 0000000000000314 t _mesa_free_buffer_objects
000000000041ac60 00000000000000e4 t _mesa_handle_bind_buffer_gen
000000000041ad50 00000000000000f4 t bind_buffer_object
000000000041ae50 000000000000057c t delete_buffers
000000000041b3d0 0000000000000068 t _mesa_update_default_objects_buffer_objects
000000000041b440 0000000000000018 t _mesa_lookup_bufferobj
000000000041b460 0000000000000080 t _mesa_lookup_bufferobj_err
000000000041b4e0 00000000000000bc t _mesa_multi_bind_lookup_bufferobj
000000000041b5a0 000000000000036c t bind_xfb_buffers
000000000041b910 0000000000000100 t set_buffer_multi_binding
000000000041ba10 00000000000002e0 t bind_uniform_buffers
000000000041bcf0 00000000000002e4 t bind_shader_storage_buffers
000000000041bfe0 00000000000002c4 t bind_atomic_buffers
000000000041c2b0 0000000000000060 t _mesa_buffer_unmap_all_mappings
000000000041c310 00000000000003e8 T _mesa_BindBuffer_no_error
000000000041c700 0000000000000074 t _mesa_BindBuffer
000000000041c780 000000000000002c T _mesa_DeleteBuffers_no_error
000000000041c7b0 0000000000000044 T _mesa_DeleteBuffers
000000000041c800 0000000000000034 T _mesa_GenBuffers_no_error
000000000041c840 000000000000005c T _mesa_GenBuffers
000000000041c8a0 0000000000000034 T _mesa_CreateBuffers_no_error
000000000041c8e0 000000000000005c T _mesa_CreateBuffers
000000000041c940 000000000000007c t _mesa_IsBuffer
000000000041c9c0 0000000000000070 T _mesa_BufferStorage_no_error
000000000041ca30 0000000000000110 T _mesa_BufferStorage
000000000041cb40 000000000000019c T _mesa_NamedBufferStorageEXT
000000000041cce0 00000000000001dc T _mesa_BufferStorageMemEXT
000000000041cec0 000000000000009c T _mesa_BufferStorageMemEXT_no_error
000000000041cf60 0000000000000090 T _mesa_NamedBufferStorage_no_error
000000000041cff0 0000000000000100 T _mesa_NamedBufferStorage
000000000041d0f0 00000000000001b0 T _mesa_NamedBufferStorageMemEXT
000000000041d2a0 00000000000000b8 T _mesa_NamedBufferStorageMemEXT_no_error
000000000041d360 000000000000005c T _mesa_BufferData_no_error
000000000041d3c0 00000000000000a4 T _mesa_BufferData
000000000041d470 0000000000000078 T _mesa_NamedBufferData_no_error
000000000041d4f0 00000000000000c0 T _mesa_NamedBufferData
000000000041d5b0 00000000000000d4 T _mesa_NamedBufferDataEXT
000000000041d690 0000000000000080 T _mesa_BufferSubData_no_error
000000000041d710 0000000000000128 T _mesa_BufferSubData
000000000041d840 00000000000000a4 T _mesa_NamedBufferSubData_no_error
000000000041d8f0 0000000000000124 T _mesa_NamedBufferSubData
000000000041da20 0000000000000120 T _mesa_NamedBufferSubDataEXT
000000000041db40 0000000000000104 T _mesa_GetBufferSubData
000000000041dc50 0000000000000100 T _mesa_GetNamedBufferSubData
000000000041dd50 0000000000000100 T _mesa_GetNamedBufferSubDataEXT
000000000041de50 0000000000000070 T _mesa_ClearBufferData_no_error
000000000041dec0 00000000000000c4 T _mesa_ClearBufferData
000000000041df90 00000000000000a4 T _mesa_ClearNamedBufferData_no_error
000000000041e040 00000000000000e4 T _mesa_ClearNamedBufferData
000000000041e130 000000000000014c T _mesa_ClearNamedBufferDataEXT
000000000041e280 0000000000000078 T _mesa_ClearBufferSubData_no_error
000000000041e300 00000000000000d4 T _mesa_ClearBufferSubData
000000000041e3e0 00000000000000ac T _mesa_ClearNamedBufferSubData_no_error
000000000041e490 00000000000000fc T _mesa_ClearNamedBufferSubData
000000000041e590 0000000000000164 T _mesa_ClearNamedBufferSubDataEXT
000000000041e700 0000000000000054 T _mesa_UnmapBuffer_no_error
000000000041e760 0000000000000090 T _mesa_UnmapBuffer
000000000041e7f0 0000000000000080 T _mesa_UnmapNamedBufferEXT_no_error
000000000041e870 00000000000000b8 T _mesa_UnmapNamedBufferEXT
000000000041e930 00000000000000bc T _mesa_GetBufferParameteriv
000000000041e9f0 00000000000000bc T _mesa_GetBufferParameteri64v
000000000041eab0 00000000000000bc T _mesa_GetNamedBufferParameteriv
000000000041eb70 00000000000000dc T _mesa_GetNamedBufferParameterivEXT
000000000041ec50 00000000000000bc T _mesa_GetNamedBufferParameteri64v
000000000041ed10 00000000000000ac T _mesa_GetBufferPointerv
000000000041edc0 00000000000000c0 T _mesa_GetNamedBufferPointerv
000000000041ee80 00000000000000cc T _mesa_GetNamedBufferPointervEXT
000000000041ef50 0000000000000080 T _mesa_CopyBufferSubData_no_error
000000000041efd0 00000000000000c0 T _mesa_CopyBufferSubData
000000000041f090 00000000000000f4 T _mesa_NamedCopyBufferSubDataEXT
000000000041f190 00000000000000b4 T _mesa_CopyNamedBufferSubData_no_error
000000000041f250 0000000000000128 T _mesa_CopyNamedBufferSubData
000000000041f380 0000000000000058 T _mesa_MapBufferRange_no_error
000000000041f3e0 000000000000013c T _mesa_MapBufferRange
000000000041f520 00000000000000fc T _mesa_MapNamedBufferRange_no_error
000000000041f620 0000000000000130 T _mesa_MapNamedBufferRangeEXT
000000000041f750 0000000000000138 T _mesa_MapNamedBufferRange
000000000041f890 000000000000007c T _mesa_MapBuffer_no_error
000000000041f910 00000000000001a4 T _mesa_MapBuffer
000000000041fac0 0000000000000098 T _mesa_MapNamedBuffer_no_error
000000000041fb60 00000000000001ac T _mesa_MapNamedBuffer
000000000041fd10 00000000000001b8 T _mesa_MapNamedBufferEXT
000000000041fed0 0000000000000064 T _mesa_FlushMappedBufferRange_no_error
000000000041ff40 0000000000000098 T _mesa_FlushMappedBufferRange
000000000041ffe0 0000000000000088 T _mesa_FlushMappedNamedBufferRange_no_error
0000000000420070 00000000000000a8 T _mesa_FlushMappedNamedBufferRange
0000000000420120 00000000000000c8 T _mesa_FlushMappedNamedBufferRangeEXT
00000000004201f0 00000000000002f0 T _mesa_BindBufferRange_no_error
00000000004204e0 00000000000003e8 T _mesa_BindBufferRange
00000000004208d0 0000000000000178 T _mesa_BindBufferBase
0000000000420a50 0000000000000100 T _mesa_BindBuffersRange
0000000000420b50 000000000000010c T _mesa_BindBuffersBase
0000000000420c60 0000000000000084 T _mesa_InvalidateBufferSubData_no_error
0000000000420cf0 0000000000000134 T _mesa_InvalidateBufferSubData
0000000000420e30 0000000000000074 T _mesa_InvalidateBufferData_no_error
0000000000420eb0 00000000000000cc T _mesa_InvalidateBufferData
0000000000420f80 00000000000000a4 T _mesa_BufferPageCommitmentARB
0000000000421030 00000000000000b4 T _mesa_NamedBufferPageCommitmentARB
00000000004210f0 00000000000000d0 T _mesa_NamedBufferPageCommitmentEXT
00000000004211c0 0000000000000194 t draw_buffer_enum_to_bitmask
0000000000421360 0000000000000078 t supported_buffer_bitmask
00000000004213e0 0000000000000178 t read_buffer_enum_to_index
0000000000421560 0000000000000198 t read_buffer_err
0000000000421700 000000000000003c t _mesa_back_to_front_if_single_buffered
0000000000421740 0000000000000404 t _mesa_drawbuffers
0000000000421b50 000000000000013c t draw_buffer_error
0000000000421c90 0000000000000034 t _mesa_DrawBuffer
0000000000421cd0 0000000000000080 T _mesa_FramebufferDrawBufferEXT
0000000000421d50 0000000000000080 T _mesa_NamedFramebufferDrawBuffer
0000000000421dd0 00000000000003c8 t draw_buffers_error
00000000004221a0 0000000000000038 t _mesa_DrawBuffers
00000000004221e0 0000000000000088 T _mesa_FramebufferDrawBuffersEXT
0000000000422270 0000000000000088 T _mesa_NamedFramebufferDrawBuffers
0000000000422300 0000000000000134 t draw_buffers_no_error.constprop.0
0000000000422440 0000000000000080 T _mesa_NamedFramebufferDrawBuffers_no_error
00000000004224c0 0000000000000030 T _mesa_DrawBuffers_no_error
00000000004224f0 00000000000000d0 t draw_buffer_no_error.constprop.0
00000000004225c0 0000000000000068 T _mesa_NamedFramebufferDrawBuffer_no_error
0000000000422630 000000000000002c T _mesa_DrawBuffer_no_error
0000000000422660 000000000000001c t _mesa_update_draw_buffers
0000000000422680 000000000000005c t _mesa_readbuffer
00000000004226e0 00000000000000f8 T _mesa_ReadBuffer_no_error
00000000004227e0 0000000000000034 t _mesa_ReadBuffer
0000000000422820 00000000000000f8 T _mesa_NamedFramebufferReadBuffer_no_error
0000000000422920 0000000000000080 T _mesa_FramebufferReadBufferEXT
00000000004229a0 0000000000000080 T _mesa_NamedFramebufferReadBuffer
0000000000422a20 000000000000018c t make_color_buffer_mask
0000000000422bb0 000000000000007c t color_buffer_writes_enabled
0000000000422c30 000000000000002c t _mesa_ClearIndex
0000000000422c60 0000000000000034 t _mesa_ClearColor
0000000000422ca0 0000000000000038 T _mesa_ClearColorIiEXT
0000000000422ce0 0000000000000038 T _mesa_ClearColorIuiEXT
0000000000422d20 000000000000019c T _mesa_Clear_no_error
0000000000422ec0 0000000000000258 T _mesa_Clear
0000000000423120 0000000000000130 T _mesa_ClearBufferiv_no_error
0000000000423250 00000000000001c8 t _mesa_ClearBufferiv
0000000000423420 0000000000000064 T _mesa_ClearNamedFramebufferiv
0000000000423490 00000000000000ec T _mesa_ClearBufferuiv_no_error
0000000000423580 0000000000000148 t _mesa_ClearBufferuiv
00000000004236d0 0000000000000064 T _mesa_ClearNamedFramebufferuiv
0000000000423740 000000000000013c T _mesa_ClearBufferfv_no_error
0000000000423880 00000000000001a0 t _mesa_ClearBufferfv
0000000000423a20 0000000000000064 T _mesa_ClearNamedFramebufferfv
0000000000423a90 00000000000000e4 T _mesa_ClearBufferfi_no_error
0000000000423b80 000000000000018c t _mesa_ClearBufferfi
0000000000423d10 0000000000000074 T _mesa_ClearNamedFramebufferfi
0000000000423d90 000000000000006c t _mesa_update_clip_plane
0000000000423e00 00000000000001fc t _mesa_ClipPlane
0000000000424000 0000000000000090 t _mesa_GetClipPlane
0000000000424090 000000000000002c T _mesa_ColorTable
00000000004240c0 000000000000002c T _mesa_ColorSubTable
00000000004240f0 000000000000002c T _mesa_CopyColorTable
0000000000424120 000000000000002c T _mesa_CopyColorSubTable
0000000000424150 000000000000002c T _mesa_GetnColorTableARB
0000000000424180 000000000000002c T _mesa_GetColorTable
00000000004241b0 000000000000002c T _mesa_ColorTableParameterfv
00000000004241e0 000000000000002c T _mesa_ColorTableParameteriv
0000000000424210 000000000000002c T _mesa_GetColorTableParameterfv
0000000000424240 000000000000002c T _mesa_GetColorTableParameteriv
0000000000424270 00000000000000a8 t check_valid_to_compute
0000000000424320 0000000000000088 T _mesa_DispatchCompute_no_error
00000000004243b0 000000000000014c T _mesa_DispatchCompute
0000000000424500 000000000000007c T _mesa_DispatchComputeIndirect_no_error
0000000000424580 000000000000019c T _mesa_DispatchComputeIndirect
0000000000424720 0000000000000094 T _mesa_DispatchComputeGroupSizeARB_no_error
00000000004247c0 0000000000000204 T _mesa_DispatchComputeGroupSizeARB
00000000004249d0 00000000000000a0 T _mesa_BeginConditionalRender_no_error
0000000000424a70 00000000000001a4 T _mesa_BeginConditionalRender
0000000000424c20 0000000000000068 T _mesa_EndConditionalRender_no_error
0000000000424c90 00000000000000a8 T _mesa_EndConditionalRender
0000000000424d40 0000000000000174 t _mesa_check_conditional_render
0000000000424ec0 0000000000000124 T _mesa_ConservativeRasterParameteriNV_no_error
0000000000424ff0 00000000000001ec T _mesa_ConservativeRasterParameteriNV
00000000004251e0 0000000000000120 T _mesa_ConservativeRasterParameterfNV_no_error
0000000000425300 00000000000001e0 T _mesa_ConservativeRasterParameterfNV
00000000004254e0 0000000000000018 t _mesa_init_conservative_raster
0000000000425500 000000000000002c T _mesa_ConvolutionFilter1D
0000000000425530 000000000000002c T _mesa_ConvolutionFilter2D
0000000000425560 000000000000002c T _mesa_ConvolutionParameterf
0000000000425590 000000000000002c T _mesa_ConvolutionParameterfv
00000000004255c0 000000000000002c T _mesa_ConvolutionParameteri
00000000004255f0 000000000000002c T _mesa_ConvolutionParameteriv
0000000000425620 000000000000002c T _mesa_CopyConvolutionFilter1D
0000000000425650 000000000000002c T _mesa_CopyConvolutionFilter2D
0000000000425680 000000000000002c T _mesa_GetnConvolutionFilterARB
00000000004256b0 000000000000002c T _mesa_GetConvolutionFilter
00000000004256e0 000000000000002c T _mesa_GetConvolutionParameterfv
0000000000425710 000000000000002c T _mesa_GetConvolutionParameteriv
0000000000425740 000000000000002c T _mesa_GetnSeparableFilterARB
0000000000425770 000000000000002c T _mesa_GetSeparableFilter
00000000004257a0 000000000000002c T _mesa_SeparableFilter2D
00000000004257d0 0000000000000160 t copy_image_subdata
0000000000425930 00000000000001bc t check_region_bounds
0000000000425af0 0000000000000398 t prepare_target_err
0000000000425e90 00000000000000a4 t prepare_target
0000000000425f40 0000000000000224 t compressed_format_compatible.part.0
0000000000426170 0000000000000110 T _mesa_CopyImageSubData_no_error
0000000000426280 0000000000000490 T _mesa_CopyImageSubData
0000000000426710 00000000000003a0 T _mesa_CopyImageSubDataNV
0000000000426ab0 0000000000000378 t _mesa_validated_multidrawelements
0000000000426e30 00000000000000e8 t _mesa_exec_Rectf
0000000000426f20 0000000000000060 t skip_validated_draw
0000000000426f80 0000000000000124 T _mesa_MultiDrawElements
00000000004270b0 0000000000000178 T _mesa_MultiDrawElementsBaseVertex
0000000000427230 0000000000000298 t _mesa_exec_MultiDrawArrays
00000000004274d0 00000000000000c0 t _mesa_validated_drawrangeelements
0000000000427590 0000000000000284 t _mesa_DrawRangeElementsBaseVertex
0000000000427820 0000000000000008 T _mesa_DrawRangeElements
0000000000427830 0000000000000150 T _mesa_DrawElements
0000000000427980 0000000000000160 T _mesa_DrawElementsBaseVertex
0000000000427ae0 00000000000000c8 t _mesa_draw_arrays.constprop.0
0000000000427bb0 00000000000001dc t _mesa_draw_transform_feedback
0000000000427d90 000000000000011c T _mesa_DrawArrays
0000000000427eb0 0000000000000114 T _mesa_EvalMesh1
0000000000427fd0 0000000000000330 T _mesa_EvalMesh2
0000000000428300 0000000000000128 T _mesa_DrawArraysInstancedARB
0000000000428430 0000000000000138 t _mesa_DrawArraysInstancedBaseInstance
0000000000428570 0000000000000160 T _mesa_DrawElementsInstancedARB
00000000004286d0 0000000000000164 T _mesa_DrawElementsInstancedBaseVertex
0000000000428840 0000000000000164 T _mesa_DrawElementsInstancedBaseInstance
00000000004289b0 0000000000000174 t _mesa_DrawElementsInstancedBaseVertexBaseInstance
0000000000428b30 0000000000000048 T _mesa_DrawTransformFeedback
0000000000428b80 0000000000000054 T _mesa_DrawTransformFeedbackStream
0000000000428be0 0000000000000054 T _mesa_DrawTransformFeedbackInstanced
0000000000428c40 0000000000000058 T _mesa_DrawTransformFeedbackStreamInstanced
0000000000428ca0 00000000000001ac T _mesa_DrawArraysIndirect
0000000000428e50 0000000000000224 t _mesa_DrawElementsIndirect
0000000000429080 00000000000001e0 T _mesa_MultiDrawArraysIndirect
0000000000429260 000000000000024c T _mesa_MultiDrawElementsIndirect
00000000004294b0 0000000000000178 T _mesa_MultiDrawArraysIndirectCountARB
0000000000429630 00000000000001b0 T _mesa_MultiDrawElementsIndirectCountARB
00000000004297e0 0000000000000124 t _mesa_initialize_exec_dispatch
0000000000429910 00000000000000b8 T _mesa_MultiModeDrawArraysIBM
00000000004299d0 00000000000000c0 T _mesa_MultiModeDrawElementsIBM
0000000000429a90 0000000000000360 T _mesa_DrawPixels
0000000000429df0 00000000000002c4 T _mesa_CopyPixels
000000000042a0c0 00000000000002f4 T _mesa_Bitmap
000000000042a3c0 00000000000000e0 t draw_texture
000000000042a4a0 0000000000000104 t _mesa_DrawTexfOES
000000000042a5b0 0000000000000030 t _mesa_DrawTexfvOES
000000000042a5e0 0000000000000038 T _mesa_DrawTexiOES
000000000042a620 0000000000000044 T _mesa_DrawTexivOES
000000000042a670 0000000000000048 T _mesa_DrawTexsOES
000000000042a6c0 000000000000004c T _mesa_DrawTexsvOES
000000000042a710 00000000000000b0 t enable_texture
000000000042a7c0 00000000000002dc t client_state
000000000042aaa0 00000000000000a4 t client_state_i.part.0
000000000042ab50 0000000000000060 t _mesa_update_derived_primitive_restart_state
000000000042abb0 0000000000000030 t _mesa_EnableClientState
000000000042abe0 00000000000000d0 T _mesa_EnableVertexArrayEXT
000000000042acb0 000000000000007c T _mesa_EnableClientStateiEXT
000000000042ad30 0000000000000030 t _mesa_DisableClientState
000000000042ad60 00000000000000d0 T _mesa_DisableVertexArrayEXT
000000000042ae30 000000000000007c T _mesa_DisableClientStateiEXT
000000000042aeb0 00000000000000d8 t _mesa_set_multisample
000000000042af90 00000000000000a4 t _mesa_set_framebuffer_srgb
000000000042b040 00000000000026e8 t _mesa_set_enable
000000000042d730 0000000000000028 T _mesa_Enable
000000000042d760 0000000000000028 t _mesa_Disable
000000000042d790 00000000000003a8 t _mesa_set_enablei
000000000042db40 0000000000000030 T _mesa_Disablei
000000000042db70 0000000000000030 T _mesa_Enablei
000000000042dba0 0000000000001340 t _mesa_IsEnabled
000000000042eee0 00000000000001ec T _mesa_IsEnabledi
000000000042f0d0 0000000000000008 t _mesa_delete_memory_object
000000000042f0e0 0000000000000080 t lookup_memory_object_err
000000000042f160 0000000000000008 t _mesa_initialize_memory_object
000000000042f170 0000000000000134 T _mesa_DeleteMemoryObjectsEXT
000000000042f2b0 0000000000000078 T _mesa_IsMemoryObjectEXT
000000000042f330 0000000000000164 T _mesa_CreateMemoryObjectsEXT
000000000042f4a0 00000000000000fc T _mesa_MemoryObjectParameterivEXT
000000000042f5a0 00000000000000cc T _mesa_GetMemoryObjectParameterivEXT
000000000042f670 0000000000000104 T _mesa_TexStorageMem2DEXT
000000000042f780 0000000000000114 T _mesa_TexStorageMem2DMultisampleEXT
000000000042f8a0 0000000000000104 T _mesa_TexStorageMem3DEXT
000000000042f9b0 0000000000000118 T _mesa_TexStorageMem3DMultisampleEXT
000000000042fad0 0000000000000100 T _mesa_TextureStorageMem2DEXT
000000000042fbd0 000000000000010c T _mesa_TextureStorageMem2DMultisampleEXT
000000000042fce0 0000000000000108 T _mesa_TextureStorageMem3DEXT
000000000042fdf0 0000000000000118 T _mesa_TextureStorageMem3DMultisampleEXT
000000000042ff10 00000000000000fc T _mesa_TexStorageMem1DEXT
0000000000430010 00000000000000f8 T _mesa_TextureStorageMem1DEXT
0000000000430110 000000000000001c t _mesa_delete_semaphore_object
0000000000430130 0000000000000008 t _mesa_initialize_semaphore_object
0000000000430140 0000000000000114 T _mesa_GenSemaphoresEXT
0000000000430260 0000000000000144 T _mesa_DeleteSemaphoresEXT
00000000004303b0 0000000000000078 T _mesa_IsSemaphoreEXT
0000000000430430 000000000000005c T _mesa_SemaphoreParameterui64vEXT
0000000000430490 000000000000005c T _mesa_GetSemaphoreParameterui64vEXT
00000000004304f0 00000000000001fc T _mesa_WaitSemaphoreEXT
00000000004306f0 00000000000001fc T _mesa_SignalSemaphoreEXT
00000000004308f0 00000000000000e8 T _mesa_ImportMemoryFdEXT
00000000004309e0 0000000000000158 T _mesa_ImportSemaphoreFdEXT
0000000000430b40 00000000000000a4 t get_current_attrib(texenv_fragment_program*, unsigned int)
0000000000430bf0 0000000000000068 t get_gl_Color(texenv_fragment_program*)
0000000000430c60 0000000000000524 t load_texture(texenv_fragment_program*, unsigned int) [clone .part.0]
0000000000431190 0000000000000040 t load_texenv_source(texenv_fragment_program*, unsigned int, unsigned int)
00000000004311d0 0000000000000654 t emit_combine(texenv_fragment_program*, unsigned int, unsigned int, unsigned int, gl_tex_env_argument const*)
0000000000431830 0000000000001270 t _mesa_get_fixed_func_fragment_program
0000000000432aa0 0000000000000084 t get_temp
0000000000432b30 0000000000000210 t emit_op3fn.constprop.0
0000000000432d40 0000000000000090 t make_temp
0000000000432dd0 00000000000000b8 t emit_matrix_transform_vec4
0000000000432e90 0000000000000074 t get_identity_param
0000000000432f10 000000000000007c t register_input
0000000000432f90 0000000000000080 t get_material
0000000000433010 0000000000000064 t emit_passthrough
0000000000433080 0000000000000128 t get_lightprod
00000000004331b0 0000000000000150 t get_scenecolor
0000000000433300 00000000000000a8 t emit_degenerate_lit
00000000004333b0 00000000000000ec t emit_normalize_vec3
00000000004334a0 0000000000000264 t get_transformed_normal
0000000000433710 0000000000000194 t emit_transpose_matrix_transform_vec4
00000000004338b0 0000000000000194 t get_eye_position
0000000000433a50 0000000000000078 t get_eye_position_normalized
0000000000433ad0 0000000000000148 t get_eye_position_z
0000000000433c20 00000000000003ec t calculate_light_attenuation
0000000000434010 0000000000002c1c t _mesa_get_fixed_func_vertex_program
0000000000436c30 0000000000000068 t _set_default_response
0000000000436ca0 000000000000024c t _mesa_query_internal_format_default
0000000000436ef0 0000000000001870 t _mesa_GetInternalformativ
0000000000438760 0000000000000190 T _mesa_GetInternalformati64v
00000000004388f0 0000000000000100 t convert_ubyte_rgba_to_bgra
00000000004389f0 0000000000006194 t convert_float
000000000043eb90 0000000000007698 t convert_half_float
0000000000446230 0000000000007d64 t convert_int
000000000044dfa0 0000000000008ac8 t convert_byte
0000000000456a70 0000000000008928 t convert_ushort
000000000045f3a0 0000000000008a2c t convert_ubyte
0000000000467dd0 0000000000007590 t convert_uint
000000000046f360 0000000000000090 t _mesa_compute_rgba2base2rgba_component_mapping
000000000046f3f0 0000000000008c84 t _mesa_swizzle_and_convert
0000000000478080 0000000000000e98 t _mesa_format_convert
0000000000478f20 000000000000007c t get_value_size
0000000000478fa0 0000000000001330 t find_value_indexed
000000000047a2d0 0000000000001f44 t find_value
000000000047c220 00000000000002f4 T _mesa_GetBooleanv
000000000047c520 00000000000002dc t _mesa_GetFloatv
000000000047c800 0000000000000344 t _mesa_GetIntegerv
000000000047cb50 0000000000000368 T _mesa_GetInteger64v
000000000047cec0 00000000000002c8 T _mesa_GetDoublev
000000000047d190 0000000000000198 T _mesa_GetUnsignedBytevEXT
000000000047d330 00000000000000e4 T _mesa_GetBooleani_v
000000000047d420 0000000000000188 T _mesa_GetIntegeri_v
000000000047d5b0 00000000000000dc T _mesa_GetInteger64i_v
000000000047d690 00000000000001f0 T _mesa_GetFloati_v
000000000047d880 0000000000000200 T _mesa_GetDoublei_v
000000000047da80 0000000000000148 T _mesa_GetUnsignedBytei_vEXT
000000000047dbd0 00000000000004c0 T _mesa_GetFixedv
000000000047e090 0000000000000148 t _mesa_is_valid_generate_texture_mipmap_target
000000000047e1e0 00000000000000f0 t _mesa_is_valid_generate_texture_mipmap_internalformat
000000000047e2d0 0000000000000220 t validate_params_and_generate_mipmap
000000000047e4f0 000000000000012c T _mesa_GenerateMipmap_no_error
000000000047e620 0000000000000234 T _mesa_GenerateMipmap
000000000047e860 000000000000012c T _mesa_GenerateTextureMipmap_no_error
000000000047e990 0000000000000040 T _mesa_GenerateTextureMipmap
000000000047e9d0 0000000000000048 T _mesa_GenerateTextureMipmapEXT
000000000047ea20 000000000000004c T _mesa_GenerateMultiTexMipmapEXT
000000000047ea70 000000000000005c t _mesa_spirv_module_reference
000000000047ead0 0000000000000094 t _mesa_shader_spirv_data_reference
000000000047eb70 0000000000000100 t _mesa_spirv_shader_binary
000000000047ec70 000000000000022c t _mesa_spirv_link_shaders
000000000047eea0 0000000000000040 T _mesa_SpecializeShaderARB
000000000047eee0 000000000000002c T _mesa_GetnMinmaxARB
000000000047ef10 000000000000002c T _mesa_GetMinmax
000000000047ef40 000000000000002c T _mesa_GetnHistogramARB
000000000047ef70 000000000000002c T _mesa_GetHistogram
000000000047efa0 000000000000002c T _mesa_GetHistogramParameterfv
000000000047efd0 000000000000002c T _mesa_GetHistogramParameteriv
000000000047f000 000000000000002c T _mesa_GetMinmaxParameterfv
000000000047f030 000000000000002c T _mesa_GetMinmaxParameteriv
000000000047f060 000000000000002c T _mesa_Histogram
000000000047f090 000000000000002c T _mesa_Minmax
000000000047f0c0 000000000000002c T _mesa_ResetHistogram
000000000047f0f0 000000000000002c T _mesa_ResetMinmax
000000000047f120 00000000000001e8 t float3_to_rgb9e5
000000000047f310 0000000000000040 t rgb9e5_to_float3
000000000047f350 0000000000000184 t float3_to_r11g11b10f
000000000047f4e0 000000000000017c t r11g11b10f_to_float3
000000000047f660 0000000000001978 t do_row
0000000000480fe0 00000000000000f4 t make_1d_mipmap
00000000004810e0 0000000000000450 t make_2d_mipmap
0000000000481530 0000000000000050 t _mesa_compute_num_levels
0000000000481580 0000000000003424 t _mesa_generate_mipmap_level
00000000004849b0 00000000000000a0 t _mesa_next_mipmap_level_size
0000000000484a50 0000000000000208 t _mesa_prepare_mipmap_levels
0000000000484c60 0000000000000924 t _mesa_generate_mipmap
0000000000485590 0000000000000254 t get_label_pointer
00000000004857f0 000000000000008c t copy_label
0000000000485880 00000000000000f8 t set_label
0000000000485980 000000000000009c T _mesa_ObjectLabel
0000000000485a20 00000000000000b4 T _mesa_GetObjectLabel
0000000000485ae0 00000000000000b8 T _mesa_ObjectPtrLabel
0000000000485ba0 00000000000000f4 T _mesa_GetObjectPtrLabel
0000000000485ca0 0000000000000228 T _mesa_ObjectPurgeableAPPLE
0000000000485ed0 0000000000000210 T _mesa_ObjectUnpurgeableAPPLE
00000000004860e0 0000000000000178 T _mesa_GetObjectParameterivAPPLE
0000000000486260 00000000000000bc t write_program_payload
0000000000486320 000000000000007c t _mesa_get_program_binary_length
00000000004863a0 0000000000000148 t _mesa_get_program_binary
00000000004864f0 00000000000001f8 t _mesa_program_binary
00000000004866f0 000000000000025c t supported_interface_enum
0000000000486950 00000000000004c8 T _mesa_GetProgramInterfaceiv
0000000000486e20 000000000000015c T _mesa_GetProgramResourceIndex
0000000000486f80 0000000000000110 T _mesa_GetProgramResourceName
0000000000487090 00000000000000e4 T _mesa_GetProgramResourceiv
0000000000487180 00000000000002a4 T _mesa_GetProgramResourceLocation
0000000000487430 00000000000000cc T _mesa_GetProgramResourceLocationIndex
0000000000487500 0000000000000174 T _mesa_QueryMatrixxOES
0000000000487680 0000000000000058 t _context_lost_GetQueryObjectuiv
00000000004876e0 0000000000000068 t _context_lost_GetSynciv
0000000000487750 0000000000000038 t context_lost_nop_handler
0000000000487790 00000000000000fc t _mesa_set_context_lost_dispatch
0000000000487890 00000000000000dc T _mesa_GetGraphicsResetStatusARB
0000000000487970 0000000000000088 T _mesa_new_sampler_object
0000000000487a00 00000000000000e4 t create_samplers.part.0
0000000000487af0 000000000000009c t sampler_parameter_error_check
0000000000487b90 00000000000000b4 t set_sampler_cube_map_seamless
0000000000487c50 000000000000016c t set_sampler_wrap_r
0000000000487dc0 000000000000016c t set_sampler_wrap_t
0000000000487f30 000000000000016c t set_sampler_wrap_s
00000000004880a0 0000000000000018 t _mesa_lookup_samplerobj
00000000004880c0 00000000000000c0 t _mesa_reference_sampler_object_
0000000000488180 0000000000000190 t delete_samplers
0000000000488310 0000000000000038 T _mesa_GenSamplers_no_error
0000000000488350 0000000000000060 T _mesa_GenSamplers
00000000004883b0 0000000000000038 T _mesa_CreateSamplers_no_error
00000000004883f0 0000000000000060 T _mesa_CreateSamplers
0000000000488450 000000000000002c T _mesa_DeleteSamplers_no_error
0000000000488480 0000000000000044 T _mesa_DeleteSamplers
00000000004884d0 0000000000000070 T _mesa_IsSampler
0000000000488540 00000000000000b0 t _mesa_bind_sampler
00000000004885f0 00000000000000d4 T _mesa_BindSampler_no_error
00000000004886d0 00000000000000b0 T _mesa_BindSampler
0000000000488780 00000000000001c0 T _mesa_BindSamplers_no_error
0000000000488940 000000000000024c T _mesa_BindSamplers
0000000000488b90 0000000000000520 T _mesa_SamplerParameteri
00000000004890b0 00000000000004fc T _mesa_SamplerParameterf
00000000004895b0 000000000000062c T _mesa_SamplerParameteriv
0000000000489be0 00000000000005b0 T _mesa_SamplerParameterfv
000000000048a190 00000000000005bc T _mesa_SamplerParameterIiv
000000000048a750 00000000000005bc T _mesa_SamplerParameterIuiv
000000000048ad10 000000000000027c T _mesa_GetSamplerParameteriv
000000000048af90 0000000000000254 T _mesa_GetSamplerParameterfv
000000000048b1f0 0000000000000240 T _mesa_GetSamplerParameterIiv
000000000048b430 0000000000000240 T _mesa_GetSamplerParameterIuiv
000000000048b670 0000000000000010 t _mesa_init_sampler_object_functions
000000000048b680 0000000000000150 t unpack_quint_block(int, unsigned int, unsigned char*)
000000000048b7d0 0000000000000074 t Block::decode_void_extent(InputBitVector)
000000000048b850 0000000000000178 t Block::decode_block_mode(InputBitVector)
000000000048b9d0 0000000000000798 t Block::decode_cem(InputBitVector)
000000000048c170 00000000000005a4 t Block::unpack_colour_endpoints(InputBitVector)
000000000048c720 000000000000059c t Block::decode_colour_endpoints()
000000000048ccc0 0000000000000690 t Block::unpack_weights(InputBitVector)
000000000048d350 00000000000001f0 t Block::unquantise_weights()
000000000048d540 0000000000000294 t Block::compute_infill_weights(int, int, int)
000000000048d7e0 00000000000002c8 t Block::unquantise_colour_endpoints()
000000000048dab0 00000000000006c0 t Block::write_decoded(Decoder const&, unsigned short*)
000000000048e170 0000000000000270 t Block::calculate_from_weights()
000000000048e3e0 0000000000000104 t Block::calculate_colour_endpoints_size()
000000000048e4f0 00000000000002c0 t Block::decode(Decoder const&, InputBitVector)
000000000048e7b0 00000000000000d4 t Decoder::decode(unsigned char const*, unsigned short*) const
000000000048e890 00000000000001d0 t _mesa_unpack_astc_2d_ldr
000000000048ea60 0000000000000088 t _mesa_cpal_compressed_size
000000000048eaf0 0000000000000390 t _mesa_cpal_compressed_teximage2d
000000000048ee80 00000000000001c8 t get_texenvi
000000000048f050 00000000000001cc t _mesa_gettexenviv_indexed
000000000048f220 0000000000000c1c t _mesa_texenvfv_indexed
000000000048fe40 0000000000000230 t _mesa_gettexenvfv_indexed
0000000000490070 0000000000000038 t _mesa_TexEnvfv
00000000004900b0 0000000000000044 t _mesa_TexEnvf
0000000000490100 000000000000004c t _mesa_TexEnvi
0000000000490150 00000000000000dc T _mesa_TexEnviv
0000000000490230 000000000000004c T _mesa_MultiTexEnvfEXT
0000000000490280 0000000000000040 T _mesa_MultiTexEnvfvEXT
00000000004902c0 0000000000000050 T _mesa_MultiTexEnviEXT
0000000000490310 00000000000000f4 T _mesa_MultiTexEnvivEXT
0000000000490410 000000000000003c t _mesa_GetTexEnvfv
0000000000490450 000000000000000c T _mesa_GetMultiTexEnvfvEXT
0000000000490460 000000000000003c T _mesa_GetTexEnviv
00000000004904a0 000000000000000c T _mesa_GetMultiTexEnvivEXT
00000000004904b0 0000000000000418 t texgenfv
00000000004908d0 0000000000000198 t gettexgendv
0000000000490a70 00000000000001bc t gettexgenfv
0000000000490c30 000000000000019c t gettexgeniv
0000000000490dd0 0000000000000044 t _mesa_TexGenfv
0000000000490e20 0000000000000014 T _mesa_MultiTexGenfvEXT
0000000000490e40 00000000000000a4 T _mesa_TexGeniv
0000000000490ef0 0000000000000084 T _mesa_MultiTexGenivEXT
0000000000490f80 0000000000000054 T _mesa_TexGend
0000000000490fe0 0000000000000038 T _mesa_MultiTexGendEXT
0000000000491020 0000000000000104 t _es_TexGenf
0000000000491130 00000000000000a4 T _mesa_TexGendv
00000000004911e0 0000000000000084 T _mesa_MultiTexGendvEXT
0000000000491270 0000000000000050 T _mesa_TexGenf
00000000004912c0 0000000000000034 T _mesa_MultiTexGenfEXT
0000000000491300 0000000000000058 t _mesa_TexGeni
0000000000491360 0000000000000038 T _mesa_MultiTexGeniEXT
00000000004913a0 0000000000000044 T _mesa_GetTexGendv
00000000004913f0 0000000000000014 T _mesa_GetMultiTexGendvEXT
0000000000491410 0000000000000044 T _mesa_GetTexGenfv
0000000000491460 0000000000000014 T _mesa_GetMultiTexGenfvEXT
0000000000491480 0000000000000044 t _mesa_GetTexGeniv
00000000004914d0 0000000000000014 T _mesa_GetMultiTexGenivEXT
00000000004914f0 00000000000000c8 t legal_getteximage_target
00000000004915c0 0000000000000120 t pbo_error_check
00000000004916e0 00000000000001b8 t teximage_error_check
00000000004918a0 0000000000000478 t dimensions_error_check
0000000000491d20 0000000000000128 t common_error_check.part.0
0000000000491e50 000000000000025c t getcompressedteximage_error_check.part.0
00000000004920b0 00000000000003e0 t get_compressed_texture_image.constprop.0
0000000000492490 0000000000000258 t get_texture_image.constprop.0
00000000004926f0 0000000000000154 t getteximage_error_check
0000000000492850 000000000000013c t _get_texture_image
0000000000492990 0000000000000104 t _mesa_base_pack_format
0000000000492aa0 00000000000010b8 t _mesa_GetTexSubImage_sw
0000000000493b60 0000000000000110 T _mesa_GetnTexImageARB
0000000000493c70 000000000000010c T _mesa_GetTexImage
0000000000493d80 00000000000000f0 T _mesa_GetTextureImage
0000000000493e70 00000000000000f8 T _mesa_GetTextureImageEXT
0000000000493f70 00000000000001d4 T _mesa_GetMultiTexImageEXT
0000000000494150 0000000000000238 T _mesa_GetTextureSubImage
0000000000494390 000000000000019c T _mesa_GetnCompressedTexImageARB
0000000000494530 000000000000019c T _mesa_GetCompressedTexImage
00000000004946d0 0000000000000178 T _mesa_GetCompressedTextureImageEXT
0000000000494850 0000000000000178 T _mesa_GetCompressedMultiTexImageEXT
00000000004949d0 000000000000018c T _mesa_GetCompressedTextureImage
0000000000494b60 0000000000000144 T _mesa_GetCompressedTextureSubImage
0000000000494cb0 00000000000000a0 t is_texparameteri_target_valid
0000000000494d50 0000000000000198 t validate_texture_wrap_mode
0000000000494ef0 0000000000000834 t get_tex_level_parameteriv
0000000000495730 0000000000000858 t get_tex_parameteriv
0000000000495f90 00000000000009e8 t get_tex_parameterfv
0000000000496980 000000000000053c t set_tex_parameterf
0000000000496ec0 0000000000000d4c t set_tex_parameteri
0000000000497c10 0000000000000014 t _mesa_target_allows_setting_sampler_parameters
0000000000497c30 0000000000000228 t _mesa_texture_parameterf
0000000000497e60 00000000000001f8 t _mesa_texture_parameterfv
0000000000498060 0000000000000154 t _mesa_texture_parameteri
00000000004981c0 0000000000000198 t _mesa_texture_parameteriv
0000000000498360 00000000000000d8 t _mesa_texture_parameterIiv
0000000000498440 00000000000000d8 t _mesa_texture_parameterIuiv
0000000000498520 0000000000000084 t _mesa_TexParameterf
00000000004985b0 0000000000000084 t _mesa_TexParameterfv
0000000000498640 0000000000000084 t _mesa_TexParameteri
00000000004986d0 0000000000000084 T _mesa_TexParameteriv
0000000000498760 0000000000000084 T _mesa_TexParameterIiv
00000000004987f0 0000000000000084 T _mesa_TexParameterIuiv
0000000000498880 00000000000000b4 T _mesa_TextureParameterfvEXT
0000000000498940 00000000000000b4 T _mesa_TextureParameterfv
0000000000498a00 00000000000000b4 T _mesa_MultiTexParameterfvEXT
0000000000498ac0 00000000000000c4 T _mesa_TextureParameterfEXT
0000000000498b90 00000000000000c4 T _mesa_MultiTexParameterfEXT
0000000000498c60 00000000000000c4 T _mesa_TextureParameterf
0000000000498d30 00000000000000b4 T _mesa_TextureParameteriEXT
0000000000498df0 00000000000000b4 T _mesa_MultiTexParameteriEXT
0000000000498eb0 00000000000000b4 T _mesa_TextureParameteri
0000000000498f70 00000000000000b4 T _mesa_TextureParameterivEXT
0000000000499030 00000000000000b4 T _mesa_MultiTexParameterivEXT
00000000004990f0 00000000000000b4 T _mesa_TextureParameteriv
00000000004991b0 00000000000000b4 T _mesa_TextureParameterIiv
0000000000499270 0000000000000080 T _mesa_TextureParameterIivEXT
00000000004992f0 0000000000000080 T _mesa_MultiTexParameterIivEXT
0000000000499370 00000000000000b4 T _mesa_TextureParameterIuiv
0000000000499430 0000000000000080 T _mesa_TextureParameterIuivEXT
00000000004994b0 0000000000000080 T _mesa_MultiTexParameterIuivEXT
0000000000499530 000000000000025c t _mesa_legal_get_tex_level_parameter_target
0000000000499790 00000000000000d4 T _mesa_GetTexLevelParameterfv
0000000000499870 00000000000000d8 T _mesa_GetTexLevelParameteriv
0000000000499950 00000000000000d8 T _mesa_GetTextureLevelParameterfv
0000000000499a30 00000000000000e0 T _mesa_GetTextureLevelParameterfvEXT
0000000000499b10 00000000000000e0 T _mesa_GetMultiTexLevelParameterfvEXT
0000000000499bf0 00000000000000d8 T _mesa_GetTextureLevelParameteriv
0000000000499cd0 00000000000000e0 T _mesa_GetTextureLevelParameterivEXT
0000000000499db0 00000000000000e0 T _mesa_GetMultiTexLevelParameterivEXT
0000000000499e90 0000000000000084 t _mesa_GetTexParameterfv
0000000000499f20 0000000000000084 T _mesa_GetTexParameteriv
0000000000499fb0 00000000000000b0 T _mesa_GetTexParameterIiv
000000000049a060 00000000000000b0 T _mesa_GetTexParameterIuiv
000000000049a110 00000000000000b4 T _mesa_GetTextureParameterfvEXT
000000000049a1d0 00000000000000b4 T _mesa_GetMultiTexParameterfvEXT
000000000049a290 00000000000000b4 T _mesa_GetTextureParameterfv
000000000049a350 00000000000000b4 T _mesa_GetTextureParameterivEXT
000000000049a410 00000000000000b4 T _mesa_GetMultiTexParameterivEXT
000000000049a4d0 00000000000000b4 T _mesa_GetTextureParameteriv
000000000049a590 00000000000000e0 T _mesa_GetTextureParameterIiv
000000000049a670 00000000000000ac T _mesa_GetTextureParameterIivEXT
000000000049a720 00000000000000ac T _mesa_GetMultiTexParameterIivEXT
000000000049a7d0 00000000000000e0 T _mesa_GetTextureParameterIuiv
000000000049a8b0 00000000000000ac T _mesa_GetTextureParameterIuivEXT
000000000049a960 00000000000000ac T _mesa_GetMultiTexParameterIuivEXT
000000000049aa10 0000000000000228 t register_surface.part.0
000000000049ac40 00000000000000b4 T _mesa_VDPAUInitNV
000000000049ad00 0000000000000078 T _mesa_VDPAUFiniNV
000000000049ad80 0000000000000094 T _mesa_VDPAURegisterVideoSurfaceNV
000000000049ae20 0000000000000094 T _mesa_VDPAURegisterOutputSurfaceNV
000000000049aec0 000000000000006c T _mesa_VDPAUIsSurfaceNV
000000000049af30 00000000000000fc T _mesa_VDPAUUnregisterSurfaceNV
000000000049b030 0000000000000104 T _mesa_VDPAUGetSurfaceivNV
000000000049b140 00000000000000c4 T _mesa_VDPAUSurfaceAccessNV
000000000049b210 000000000000022c T _mesa_VDPAUMapSurfacesNV
000000000049b440 00000000000001e8 t _mesa_VDPAUUnmapSurfacesNV
000000000049b630 0000000000000070 t unregister_surface
000000000049b6a0 000000000000087c t install_vtxfmt
000000000049bf20 0000000000000048 t _mesa_install_exec_vtxfmt
000000000049bf70 0000000000000020 t _mesa_install_save_vtxfmt
000000000049bf90 0000000000000044 t _mesa_initialize_vbo_vtxfmt
000000000049bfe0 0000000000000008 T _mesa_AlphaFuncx
000000000049bff0 000000000000002c T _mesa_ClearColorx
000000000049c020 0000000000000008 T _mesa_ClearDepthx
000000000049c030 0000000000000040 T _mesa_ClipPlanef
000000000049c070 0000000000000048 T _mesa_ClipPlanex
000000000049c0c0 000000000000002c T _mesa_Color4x
000000000049c0f0 000000000000001c T _mesa_DepthRangex
000000000049c110 0000000000000034 T _mesa_DrawTexxOES
000000000049c150 0000000000000048 T _mesa_DrawTexxvOES
000000000049c1a0 0000000000000020 T _mesa_Fogx
000000000049c1c0 00000000000000c4 T _mesa_Fogxv
000000000049c290 000000000000001c T _mesa_Frustumf
000000000049c2b0 000000000000003c T _mesa_Frustumx
000000000049c2f0 0000000000000048 T _mesa_GetClipPlanef
000000000049c340 000000000000004c T _mesa_GetClipPlanex
000000000049c390 00000000000000d4 T _mesa_GetLightxv
000000000049c470 00000000000000fc T _mesa_GetMaterialxv
000000000049c570 0000000000000220 T _mesa_GetTexEnvxv
000000000049c790 0000000000000004 T _mesa_GetTexGenxvOES
000000000049c7a0 0000000000000114 T _mesa_GetTexParameterxv
000000000049c8c0 0000000000000008 T _mesa_LightModelx
000000000049c8d0 00000000000000ac T _mesa_LightModelxv
000000000049c980 0000000000000008 T _mesa_Lightx
000000000049c990 00000000000000e8 T _mesa_Lightxv
000000000049ca80 0000000000000008 T _mesa_LineWidthx
000000000049ca90 000000000000004c T _mesa_LoadMatrixx
000000000049cae0 000000000000007c T _mesa_Materialx
000000000049cb60 0000000000000110 T _mesa_Materialxv
000000000049cc70 000000000000004c T _mesa_MultMatrixx
000000000049ccc0 000000000000002c T _mesa_MultiTexCoord4x
000000000049ccf0 0000000000000024 T _mesa_Normal3x
000000000049cd20 000000000000001c T _mesa_Orthof
000000000049cd40 000000000000003c T _mesa_Orthox
000000000049cd80 0000000000000008 T _mesa_PointParameterx
000000000049cd90 00000000000000a8 T _mesa_PointParameterxv
000000000049ce40 0000000000000008 T _mesa_PointSizex
000000000049ce50 000000000000001c T _mesa_PolygonOffsetx
000000000049ce70 000000000000002c T _mesa_Rotatex
000000000049cea0 0000000000000010 T _mesa_SampleCoveragex
000000000049ceb0 0000000000000024 T _mesa_Scalex
000000000049cee0 0000000000000140 T _mesa_TexEnvx
000000000049d020 00000000000001a0 T _mesa_TexEnvxv
000000000049d1c0 0000000000000008 T _mesa_TexGenxOES
000000000049d1d0 000000000000000c T _mesa_TexGenxvOES
000000000049d1e0 0000000000000024 T _mesa_TexParameterx
000000000049d210 0000000000000130 T _mesa_TexParameterxv
000000000049d340 0000000000000024 T _mesa_Translatex
000000000049d370 00000000000000f8 t _math_horner_bezier_curve
000000000049d470 00000000000001cc t _math_horner_bezier_surf
000000000049d640 0000000000000d44 t _math_de_casteljau_surf
000000000049e390 000000000000002c t _math_init_eval
000000000049e3c0 000000000000002c t vbo_minmax_cache_key_equal
000000000049e3f0 0000000000000008 t vbo_minmax_cache_delete_entry
000000000049e400 0000000000000008 t vbo_minmax_cache_hash
000000000049e410 0000000000000030 t vbo_delete_minmax_cache
000000000049e440 00000000000001c0 t vbo_get_minmax_index_mapped
000000000049e600 00000000000004b0 t vbo_get_minmax_indices
000000000049eab0 000000000000006c t util_format_linear_float_to_srgb_8unorm
000000000049eb20 0000000000000080 t pack_ubyte_rgb_float16
000000000049eba0 000000000000003c t _mesa_float_to_unorm
000000000049ebe0 0000000000000044 t _mesa_float_to_snorm
000000000049ec30 0000000000000070 t _mesa_unorm_to_unorm.constprop.0
000000000049eca0 0000000000000184 t float3_to_r11g11b10f
000000000049ee30 00000000000000d0 t pack_float_rgb_snorm16
000000000049ef00 0000000000000034 t pack_ubyte_rgb_snorm16
000000000049ef40 00000000000000e0 t pack_float_a1r5g5b5_unorm
000000000049f020 00000000000000e8 t pack_float_r4g4b4a4_unorm
000000000049f110 00000000000000e8 t pack_float_a4b4g4r4_unorm
000000000049f200 00000000000000e8 t pack_float_b4g4r4a4_unorm
000000000049f2f0 00000000000000f4 t pack_float_r8g8b8a8_unorm
000000000049f3f0 00000000000000f4 t pack_float_a8r8g8b8_unorm
000000000049f4f0 00000000000000f4 t pack_float_b8g8r8a8_unorm
000000000049f5f0 00000000000000f4 t pack_float_a8b8g8r8_unorm
000000000049f6f0 0000000000000060 t pack_ubyte_b2g3r3_unorm
000000000049f750 0000000000000064 t pack_ubyte_r8g8b8x8_snorm
000000000049f7c0 0000000000000064 t pack_ubyte_x8b8g8r8_snorm
000000000049f830 0000000000000064 t pack_ubyte_b5g5r5x1_unorm
000000000049f8a0 0000000000000068 t pack_ubyte_x1b5g5r5_unorm
000000000049f910 0000000000000020 t pack_ubyte_r8g8b8x8_unorm
000000000049f930 0000000000000020 t pack_ubyte_b8g8r8x8_unorm
000000000049f950 0000000000000064 t pack_ubyte_b4g4r4x4_unorm
000000000049f9c0 0000000000000020 t pack_ubyte_x8b8g8r8_unorm
000000000049f9e0 0000000000000020 t pack_ubyte_x8r8g8b8_unorm
000000000049fa00 0000000000000038 t pack_ubyte_b10g10r10x2_unorm
000000000049fa40 0000000000000038 t pack_ubyte_r10g10b10x2_unorm
000000000049fa80 0000000000000034 t pack_ubyte_rgba_unorm16
000000000049fac0 0000000000000044 t pack_ubyte_rgba_snorm16
000000000049fb10 0000000000000080 t pack_ubyte_r4g4b4a4_unorm
000000000049fb90 0000000000000080 t pack_ubyte_a4b4g4r4_unorm
000000000049fc10 0000000000000078 t pack_ubyte_b5g5r5a1_unorm
000000000049fc90 0000000000000078 t pack_ubyte_a1b5g5r5_unorm
000000000049fd10 0000000000000078 t pack_ubyte_a1r5g5b5_unorm
000000000049fd90 0000000000000080 t pack_ubyte_b4g4r4a4_unorm
000000000049fe10 0000000000000080 t pack_ubyte_a4r4g4b4_unorm
000000000049fe90 0000000000000080 t pack_ubyte_a8b8g8r8_snorm
000000000049ff10 0000000000000078 t pack_ubyte_r5g5b5a1_unorm
000000000049ff90 0000000000000080 t pack_ubyte_r8g8b8a8_snorm
00000000004a0010 000000000000000c t pack_ubyte_r8g8b8a8_unorm
00000000004a0020 0000000000000028 t pack_ubyte_a8r8g8b8_unorm
00000000004a0050 0000000000000010 t pack_ubyte_a8b8g8r8_unorm
00000000004a0060 0000000000000028 t pack_ubyte_b8g8r8a8_unorm
00000000004a0090 0000000000000058 t pack_ubyte_a2r10g10b10_unorm
00000000004a00f0 0000000000000058 t pack_ubyte_b10g10r10a2_unorm
00000000004a0150 0000000000000058 t pack_ubyte_a2b10g10r10_unorm
00000000004a01b0 0000000000000058 t pack_ubyte_r10g10b10a2_unorm
00000000004a0210 00000000000000fc t pack_float_a2b10g10r10_unorm
00000000004a0310 00000000000000fc t pack_float_a2r10g10b10_unorm
00000000004a0410 00000000000000fc t pack_float_r10g10b10a2_unorm
00000000004a0510 00000000000000fc t pack_float_b10g10r10a2_unorm
00000000004a0610 0000000000002b8c t _mesa_pack_ubyte_rgba_row
00000000004a31a0 00000000000014cc t _mesa_pack_uint_rgba_row
00000000004a4670 0000000000003048 t _mesa_pack_float_rgba_row
00000000004a76c0 000000000000009c t _mesa_pack_ubyte_stencil_row
00000000004a7760 0000000000000040 t transform_decl
00000000004a77a0 00000000000007dc t transform_instr
00000000004a7f80 0000000000001994 t st_translate_atifs_program
00000000004a9920 0000000000000210 t st_init_atifs_prog
00000000004a9b30 00000000000000a0 t st_fixup_atifs
00000000004a9bd0 0000000000000200 t check_program_state
00000000004a9dd0 0000000000000004 t st_init_atoms
00000000004a9de0 0000000000000004 t st_destroy_atoms
00000000004a9df0 0000000000000278 t st_validate_state
00000000004aa070 00000000000000cc T st_update_clip
00000000004aa140 00000000000000e4 t st_bind_ubos
00000000004aa230 0000000000000214 t st_upload_constants
00000000004aa450 0000000000000008 T st_update_vs_constants
00000000004aa460 0000000000000008 T st_update_fs_constants
00000000004aa470 0000000000000010 T st_update_gs_constants
00000000004aa480 0000000000000010 T st_update_tcs_constants
00000000004aa490 0000000000000010 T st_update_tes_constants
00000000004aa4a0 0000000000000010 T st_update_cs_constants
00000000004aa4b0 0000000000000018 T st_bind_vs_ubos
00000000004aa4d0 0000000000000018 T st_bind_fs_ubos
00000000004aa4f0 0000000000000018 T st_bind_gs_ubos
00000000004aa510 0000000000000018 T st_bind_tcs_ubos
00000000004aa530 0000000000000018 T st_bind_tes_ubos
00000000004aa550 0000000000000018 T st_bind_cs_ubos
00000000004aa570 0000000000000008 t st_compare_func_to_pipe
00000000004aa580 0000000000000578 T st_update_depth_stencil_alpha
00000000004aab00 0000000000000410 T st_update_framebuffer_state
00000000004aaf10 00000000000001bc t st_convert_image
00000000004ab0d0 0000000000000164 t st_bind_images.part.0
00000000004ab240 0000000000000078 t st_convert_image_from_unit
00000000004ab2c0 000000000000002c T st_bind_vs_images
00000000004ab2f0 000000000000002c T st_bind_fs_images
00000000004ab320 000000000000002c T st_bind_gs_images
00000000004ab350 000000000000002c T st_bind_tcs_images
00000000004ab380 000000000000002c T st_bind_tes_images
00000000004ab3b0 000000000000002c T st_bind_cs_images
00000000004ab3e0 000000000000023c t update_sample_locations
00000000004ab620 00000000000000ac T st_update_sample_state
00000000004ab6d0 0000000000000048 T st_update_sample_shading
00000000004ab720 00000000000005e8 T st_update_pixel_transfer
00000000004abd10 0000000000000778 T st_update_rasterizer
00000000004ac490 000000000000031c t st_convert_sampler
00000000004ac7b0 0000000000000084 t st_convert_sampler_from_unit
00000000004ac840 0000000000000288 t update_shader_samplers
00000000004acad0 000000000000001c T st_update_vertex_samplers
00000000004acaf0 0000000000000024 T st_update_tessctrl_samplers
00000000004acb20 0000000000000024 T st_update_tesseval_samplers
00000000004acb50 0000000000000024 T st_update_geometry_samplers
00000000004acb80 000000000000001c T st_update_fragment_samplers
00000000004acba0 0000000000000024 T st_update_compute_samplers
00000000004acbd0 00000000000001b4 T st_update_scissor
00000000004acd90 00000000000001a8 T st_update_window_rectangles
00000000004acf40 0000000000000134 t st_update_common_program
00000000004ad080 0000000000000470 T st_update_fp
00000000004ad4f0 00000000000001e0 T st_update_vp
00000000004ad6d0 0000000000000040 T st_update_gp
00000000004ad710 0000000000000040 T st_update_tcp
00000000004ad750 0000000000000040 T st_update_tep
00000000004ad790 0000000000000040 T st_update_cp
00000000004ad7d0 00000000000000f8 T st_update_polygon_stipple
00000000004ad8d0 0000000000000160 t st_bind_ssbos
00000000004ada30 0000000000000018 T st_bind_vs_ssbos
00000000004ada50 0000000000000018 T st_bind_fs_ssbos
00000000004ada70 0000000000000018 T st_bind_gs_ssbos
00000000004ada90 0000000000000018 T st_bind_tcs_ssbos
00000000004adab0 0000000000000018 T st_bind_tes_ssbos
00000000004adad0 0000000000000018 T st_bind_cs_ssbos
00000000004adaf0 0000000000000030 T st_update_tess
00000000004adb20 0000000000000100 t st_update_single_texture
00000000004adc20 000000000000047c t update_textures
00000000004ae0a0 00000000000000a4 t update_textures_local
00000000004ae150 0000000000000028 T st_update_vertex_textures
00000000004ae180 0000000000000018 T st_update_fragment_textures
00000000004ae1a0 000000000000001c T st_update_geometry_textures
00000000004ae1c0 000000000000001c T st_update_tessctrl_textures
00000000004ae1e0 000000000000001c T st_update_tesseval_textures
00000000004ae200 000000000000001c T st_update_compute_textures
00000000004ae220 0000000000000130 T st_update_viewport
00000000004ae350 00000000000003ac t transform_instr
00000000004ae700 00000000000000b8 t st_get_bitmap_shader
00000000004ae7c0 00000000000008a8 t st_BlitFramebuffer
00000000004af070 0000000000000010 t st_init_blit_functions
00000000004af080 00000000000000ec t buffer_target_to_bind_flags
00000000004af170 0000000000000088 t buffer_usage
00000000004af200 0000000000000040 t st_bufferobj_invalidate
00000000004af240 0000000000000064 t st_bufferobj_flush_mapped_range
00000000004af2b0 000000000000006c t st_bufferobj_unmap
00000000004af320 000000000000006c t st_copy_buffer_subdata
00000000004af390 000000000000007c t st_bufferobj_page_commitment
00000000004af410 000000000000004c t st_clear_buffer_subdata
00000000004af460 0000000000000050 t st_bufferobj_alloc
00000000004af4b0 000000000000004c t st_bufferobj_subdata
00000000004af500 000000000000009c t st_bufferobj_get_subdata
00000000004af5a0 0000000000000080 t st_bufferobj_free
00000000004af620 0000000000000370 t st_bufferobj_data
00000000004af990 0000000000000354 t st_bufferobj_data_mem
00000000004afcf0 0000000000000074 t st_access_flags_to_transfer_flags
00000000004afd70 00000000000000cc t st_bufferobj_map_range
00000000004afe40 00000000000000c8 t st_init_bufferobject_functions
00000000004aff10 000000000000097c t st_Clear
00000000004b0890 0000000000000030 t st_init_clear
00000000004b08c0 000000000000007c t st_destroy_clear
00000000004b0940 0000000000000010 t st_init_clear_functions
00000000004b0950 00000000000001d0 t st_dispatch_compute_common
00000000004b0b20 000000000000000c t st_dispatch_compute_group_size
00000000004b0b30 000000000000001c t st_dispatch_compute_indirect
00000000004b0b50 0000000000000010 t st_dispatch_compute
00000000004b0b60 0000000000000028 t st_init_compute_functions
00000000004b0b90 0000000000000038 t st_EndConditionalRender
00000000004b0bd0 0000000000000088 t st_BeginConditionalRender
00000000004b0c60 000000000000001c t st_init_cond_render_functions
00000000004b0c80 0000000000000304 t get_canonical_format
00000000004b0f90 00000000000000c4 t canonical_format_from_bits
00000000004b1060 00000000000000a0 t same_size_and_swizzle
00000000004b1100 000000000000018c t swizzled_copy
00000000004b1290 00000000000004c8 t handle_complex_copy
00000000004b1760 0000000000000750 t st_CopyImageSubData
00000000004b1eb0 0000000000000010 t st_init_copy_image_functions
00000000004b1ec0 00000000000007f4 t transform_instr
00000000004b26c0 00000000000000ec t st_get_drawpix_shader
00000000004b27b0 0000000000000858 t st_DrawTex
00000000004b3010 0000000000000010 t st_init_drawtex_functions
00000000004b3020 0000000000000074 t st_destroy_drawtex
00000000004b30a0 00000000000003a0 t st_get_egl_image
00000000004b3440 0000000000000368 t st_bind_egl_image
00000000004b37b0 00000000000000d4 t st_egl_image_target_tex_storage
00000000004b3890 00000000000000d4 t st_egl_image_target_texture_2d
00000000004b3970 00000000000001d0 t st_egl_image_target_renderbuffer_storage
00000000004b3b40 0000000000000028 t st_init_eglimage_functions
00000000004b3b70 0000000000000060 t st_import_memoryobj_fd
00000000004b3bd0 0000000000000004 t st_memoryobj_free
00000000004b3be0 0000000000000050 t st_memoryobj_alloc
00000000004b3c30 0000000000000028 t st_init_memoryobject_functions
00000000004b3c60 00000000000000b4 t st_GetProgrammableSampleCaps
00000000004b3d20 000000000000009c t st_GetSamplePosition
00000000004b3dc0 000000000000001c t st_init_msaa_functions
00000000004b3de0 0000000000000090 t st_EndPerfMonitor
00000000004b3e70 00000000000000dc t st_IsPerfMonitorResultAvailable
00000000004b3f50 00000000000001dc t st_GetPerfMonitorResult
00000000004b4130 00000000000000a0 t reset_perf_monitor
00000000004b41d0 0000000000000034 t st_DeletePerfMonitor
00000000004b4210 000000000000000c t st_NewPerfMonitor
00000000004b4220 000000000000033c t st_BeginPerfMonitor
00000000004b4560 0000000000000080 t st_ResetPerfMonitor
00000000004b45e0 0000000000000324 t st_InitPerfMonitorGroups
00000000004b4910 0000000000000044 t st_have_perfmon
00000000004b4960 000000000000007c t st_destroy_perfmon
00000000004b49e0 0000000000000064 t st_init_perfmon_functions
00000000004b4a50 0000000000000018 t st_InitPerfQueryInfo
00000000004b4a70 0000000000000018 t st_GetPerfQueryInfo
00000000004b4a90 0000000000000018 t st_DeletePerfQuery
00000000004b4ab0 0000000000000028 t st_BeginPerfQuery
00000000004b4ae0 0000000000000018 t st_EndPerfQuery
00000000004b4b00 0000000000000018 t st_WaitPerfQuery
00000000004b4b20 0000000000000028 t st_IsPerfQueryReady
00000000004b4b50 000000000000001c t st_GetPerfQueryData
00000000004b4b70 0000000000000018 t st_NewPerfQueryObject
00000000004b4b90 000000000000006c t st_GetPerfCounterInfo
00000000004b4c00 0000000000000068 t st_have_perfquery
00000000004b4c70 000000000000007c t st_init_perfquery_functions
00000000004b4cf0 0000000000000038 t st_new_ati_fs
00000000004b4d30 0000000000000024 t st_max_shader_compiler_threads
00000000004b4d60 00000000000000a0 t st_get_shader_program_completion_status
00000000004b4e00 00000000000000d8 t st_program_string_notify
00000000004b4ee0 0000000000000048 t st_delete_program
00000000004b4f30 0000000000000070 t st_new_program
00000000004b4fa0 0000000000000050 t st_init_program_functions
00000000004b4ff0 0000000000000030 t st_GetTimestamp
00000000004b5020 00000000000001c0 t st_StoreQueryResult
00000000004b51e0 00000000000001d8 t get_query_result
00000000004b53c0 0000000000000034 t st_CheckQuery
00000000004b5400 0000000000000054 t st_WaitQuery
00000000004b5460 00000000000000d0 t st_EndQuery
00000000004b5530 0000000000000044 t st_NewQueryObject
00000000004b5580 000000000000006c t st_DeleteQuery
00000000004b55f0 00000000000003b8 t st_BeginQuery
00000000004b59b0 0000000000000064 t st_init_query_functions
00000000004b5a20 0000000000000214 t blit_to_staging
00000000004b5c40 0000000000000ef0 t st_ReadPixels
00000000004b6b30 0000000000000010 t st_init_readpixels_functions
00000000004b6b40 0000000000000048 t st_get_string
00000000004b6b90 0000000000000010 t st_init_string_functions
00000000004b6ba0 0000000000000020 t st_import_semaphoreobj_fd
00000000004b6bc0 00000000000000d0 t st_server_signal_semaphore
00000000004b6c90 00000000000000c8 t st_server_wait_semaphore
00000000004b6d60 0000000000000004 t st_semaphoreobj_free
00000000004b6d70 0000000000000050 t st_semaphoreobj_alloc
00000000004b6dc0 0000000000000040 t st_init_semaphoreobject_functions
00000000004b6e00 0000000000000030 t st_fence_sync
00000000004b6e30 00000000000000ac t st_server_wait_sync
00000000004b6ee0 00000000000000f4 t st_client_wait_sync
00000000004b6fe0 000000000000000c t st_check_sync
00000000004b6ff0 0000000000000050 t st_delete_sync_object
00000000004b7040 0000000000000038 t st_new_sync_object
00000000004b7080 000000000000004c t st_init_syncobj_functions
00000000004b70d0 000000000000001c t st_TextureBarrier
00000000004b70f0 000000000000001c t st_FramebufferFetchBarrier
00000000004b7110 00000000000000b4 t st_MemoryBarrier
00000000004b71d0 0000000000000028 t st_init_texture_barrier_functions
00000000004b7200 00000000000000e0 t st_viewport
00000000004b72e0 0000000000000010 t st_init_viewport_functions
00000000004b72f0 0000000000000034 t st_resume_transform_feedback
00000000004b7330 000000000000001c t st_pause_transform_feedback
00000000004b7350 000000000000003c t st_new_transform_feedback
00000000004b7390 00000000000000d0 t st_end_transform_feedback
00000000004b7460 00000000000000c0 t st_delete_transform_feedback
00000000004b7520 0000000000000158 t st_begin_transform_feedback
00000000004b7680 0000000000000018 t st_transform_feedback_draw_init
00000000004b76a0 000000000000004c t st_init_xformfb_functions
00000000004b76f0 000000000000032c T st_link_shader
00000000004b7a20 0000000000000004 T glsl_to_tgsi_visitor::visit(ir_function_signature*)
00000000004b7a30 0000000000000158 t shrink_array_declarations(inout_decl*, unsigned int, unsigned long*, unsigned long, unsigned int*)
00000000004b7b90 0000000000000028 W ir_control_flow_info_visitor::visit_enter(ir_call*)
00000000004b7bc0 0000000000000028 W ir_control_flow_info_visitor::visit_enter(ir_return*)
00000000004b7bf0 00000000000000c0 t add_buffer_to_load_and_stores(glsl_to_tgsi_instruction*, st_src_reg*, exec_list*, ir_constant*)
00000000004b7cb0 0000000000000164 T glsl_to_tgsi_visitor::visit(ir_swizzle*)
00000000004b7e20 000000000000002c W ir_control_flow_info_visitor::visit_enter(ir_function*)
00000000004b7e50 0000000000000044 T glsl_to_tgsi_visitor::~glsl_to_tgsi_visitor()
00000000004b7e50 0000000000000044 T glsl_to_tgsi_visitor::~glsl_to_tgsi_visitor()
00000000004b7ea0 0000000000000010 t var_destroy(hash_entry*)
00000000004b7eb0 0000000000000098 T glsl_to_tgsi_visitor::visit(ir_function*)
00000000004b7f50 000000000000008c t mark_array_io(inout_decl*, unsigned int, unsigned long*, unsigned long, unsigned int*) [clone .constprop.0]
00000000004b7fe0 000000000000009c t fail_link(gl_shader_program*, char const*, ...) [clone .constprop.0]
00000000004b8080 0000000000000050 T glsl_to_tgsi_visitor::~glsl_to_tgsi_visitor()
00000000004b80d0 0000000000000098 t type_has_array_or_matrix(glsl_type const*)
00000000004b8170 00000000000000dc t is_inout_array(unsigned int, ir_variable*, bool*)
00000000004b8250 0000000000000094 t emit_immediate(st_translate*, gl_constant_value*, unsigned int, int) [clone .isra.0]
00000000004b82f0 0000000000000240 t dst_register(st_translate*, gl_register_file, unsigned int, unsigned int)
00000000004b8530 0000000000000c4c t emit_wpos(st_context*, st_translate*, gl_program const*, ureg_program*, int)
00000000004b9180 0000000000000c2c t translate_src(st_translate*, st_src_reg const*)
00000000004b9db0 00000000000000c0 t translate_addr(st_translate*, st_src_reg const*, unsigned int)
00000000004b9e70 0000000000000014 t swizzle_for_size(int)
00000000004b9e90 0000000000000928 t glsl_to_tgsi_visitor::get_opcode(tgsi_opcode, st_dst_reg, st_src_reg, st_src_reg)
00000000004ba7c0 0000000000000218 t glsl_to_tgsi_visitor::add_constant(gl_register_file, gl_constant_value*, int, unsigned int, unsigned short*)
00000000004ba9e0 0000000000000070 t glsl_to_tgsi_visitor::st_src_reg_for_float(float)
00000000004baa50 00000000000000e4 t glsl_to_tgsi_visitor::st_src_reg_for_type(glsl_base_type, int)
00000000004bab40 0000000000000164 t glsl_to_tgsi_visitor::get_temp(glsl_type const*)
00000000004bacb0 00000000000001c0 t glsl_to_tgsi_visitor::reladdr_to_temp(ir_instruction*, st_src_reg*, int*)
00000000004bae70 0000000000000a84 t glsl_to_tgsi_visitor::emit_asm(ir_instruction*, tgsi_opcode, st_dst_reg, st_dst_reg, st_src_reg, st_src_reg, st_src_reg, st_src_reg)
00000000004bb900 00000000000000ec t glsl_to_tgsi_visitor::emit_asm(ir_instruction*, tgsi_opcode, st_dst_reg, st_src_reg, st_src_reg, st_src_reg, st_src_reg)
00000000004bb9f0 00000000000000d4 t glsl_to_tgsi_visitor::emit_dp(ir_instruction*, st_dst_reg, st_src_reg, st_src_reg, unsigned int)
00000000004bbad0 00000000000001cc t glsl_to_tgsi_visitor::emit_scalar(ir_instruction*, tgsi_opcode, st_dst_reg, st_src_reg, st_src_reg)
00000000004bbca0 0000000000000128 t glsl_to_tgsi_visitor::emit_arl(ir_instruction*, st_dst_reg, st_src_reg)
00000000004bbdd0 00000000000002f8 t glsl_to_tgsi_visitor::visit(ir_variable*) [clone .part.0]
00000000004bc0d0 0000000000000040 T glsl_to_tgsi_visitor::visit(ir_variable*)
00000000004bc110 0000000000000130 T glsl_to_tgsi_visitor::visit(ir_loop*)
00000000004bc240 000000000000014c T glsl_to_tgsi_visitor::visit(ir_loop_jump*)
00000000004bc390 0000000000000234 t glsl_to_tgsi_visitor::try_emit_mad(ir_expression*, int)
00000000004bc5d0 00000000000001e0 t glsl_to_tgsi_visitor::try_emit_mad_for_and_not(ir_expression*, int)
00000000004bc7b0 0000000000000b1c T glsl_to_tgsi_visitor::visit(ir_constant*)
00000000004bd2d0 00000000000000b8 T glsl_to_tgsi_visitor::visit(ir_return*)
00000000004bd390 00000000000002b0 T glsl_to_tgsi_visitor::visit(ir_discard*)
00000000004bd640 00000000000000b8 T glsl_to_tgsi_visitor::visit(ir_demote*)
00000000004bd700 0000000000000214 T glsl_to_tgsi_visitor::visit(ir_if*)
00000000004bd920 00000000000000d0 T glsl_to_tgsi_visitor::visit(ir_emit_vertex*)
00000000004bd9f0 00000000000000d0 T glsl_to_tgsi_visitor::visit(ir_end_primitive*)
00000000004bdac0 00000000000000b8 T glsl_to_tgsi_visitor::visit(ir_barrier*)
00000000004bdb80 00000000000058cc t glsl_to_tgsi_visitor::visit_expression(ir_expression*, st_src_reg*)
00000000004c3450 00000000000001a4 T glsl_to_tgsi_visitor::visit(ir_expression*)
00000000004c3600 00000000000001d8 t glsl_to_tgsi_visitor::process_move_condition(ir_rvalue*)
00000000004c37e0 000000000000040c t glsl_to_tgsi_visitor::emit_block_mov(ir_assignment*, glsl_type const*, st_dst_reg*, st_src_reg*, st_src_reg*, bool)
00000000004c3bf0 0000000000000430 T glsl_to_tgsi_visitor::visit(ir_assignment*)
00000000004c4020 0000000000000640 t glsl_to_tgsi_visitor::visit_ssbo_intrinsic(ir_call*)
00000000004c4660 00000000000002a8 t glsl_to_tgsi_visitor::visit_membar_intrinsic(ir_call*)
00000000004c4910 0000000000000504 t glsl_to_tgsi_visitor::visit_shared_intrinsic(ir_call*)
00000000004c4e20 0000000000000200 t glsl_to_tgsi_visitor::visit_generic_intrinsic(ir_call*, tgsi_opcode)
00000000004c5020 00000000000003fc t glsl_to_tgsi_visitor::calc_deref_offsets(ir_dereference*, unsigned int*, unsigned short*, st_src_reg*, unsigned int*)
00000000004c5420 0000000000000180 t glsl_to_tgsi_visitor::get_deref_offsets(ir_dereference*, unsigned int*, unsigned int*, unsigned short*, st_src_reg*, bool)
00000000004c55a0 0000000000000a6c t glsl_to_tgsi_visitor::visit_atomic_counter_intrinsic(ir_call*)
00000000004c6010 0000000000000c98 t glsl_to_tgsi_visitor::visit_image_intrinsic(ir_call*)
00000000004c6cb0 00000000000000fc T glsl_to_tgsi_visitor::visit(ir_call*)
00000000004c6db0 0000000000000154 t glsl_to_tgsi_visitor::canonicalize_gather_offset(st_src_reg)
00000000004c6f10 0000000000001784 T glsl_to_tgsi_visitor::visit(ir_texture*)
00000000004c86a0 00000000000002a4 t glsl_to_tgsi_visitor::handle_bound_deref(ir_dereference*)
00000000004c8950 000000000000070c T glsl_to_tgsi_visitor::visit(ir_dereference_variable*)
00000000004c9060 0000000000000508 T glsl_to_tgsi_visitor::visit(ir_dereference_array*)
00000000004c9570 0000000000000154 T glsl_to_tgsi_visitor::visit(ir_dereference_record*)
00000000004c96d0 00000000000000e8 t glsl_to_tgsi_visitor::glsl_to_tgsi_visitor()
00000000004c96d0 00000000000000e8 T glsl_to_tgsi_visitor::glsl_to_tgsi_visitor()
00000000004c97c0 0000000000000080 t free_glsl_to_tgsi_visitor
00000000004c9840 000000000000024c t glsl_to_tgsi_visitor::simplify_cmp()
00000000004c9a90 0000000000000354 t glsl_to_tgsi_visitor::rename_temp_registers(rename_reg_pair*)
00000000004c9df0 00000000000000d8 t glsl_to_tgsi_visitor::get_first_temp_write(int*)
00000000004c9ed0 000000000000052c t glsl_to_tgsi_visitor::copy_propagate()
00000000004ca400 0000000000000690 t glsl_to_tgsi_visitor::eliminate_dead_code()
00000000004caa90 00000000000001b8 t glsl_to_tgsi_visitor::merge_two_dsts()
00000000004cac50 000000000000016c t glsl_to_tgsi_visitor::merge_registers()
00000000004cadc0 00000000000000e0 t glsl_to_tgsi_visitor::renumber_registers()
00000000004caea0 0000000000000084 t void test_indirect_access<st_src_reg>(st_src_reg const&, bool*)
00000000004caf30 00000000000000a0 t void remap_array<st_src_reg>(st_src_reg&, int const*, bool const*)
00000000004cafd0 00000000000004e8 t glsl_to_tgsi_visitor::split_arrays()
00000000004cb4c0 000000000000095c t st_link_tgsi
00000000004cbe20 000000000000006c t void std::__unguarded_linear_insert<inout_decl*, __gnu_cxx::__ops::_Val_comp_iter<sort_inout_decls> >(inout_decl*, __gnu_cxx::__ops::_Val_comp_iter<sort_inout_decls>)
00000000004cbe90 00000000000000bc t void std::__insertion_sort<inout_decl*, __gnu_cxx::__ops::_Iter_comp_iter<sort_inout_decls> >(inout_decl*, inout_decl*, __gnu_cxx::__ops::_Iter_comp_iter<sort_inout_decls>)
00000000004cbf50 0000000000000158 t void std::__adjust_heap<inout_decl*, long, inout_decl, __gnu_cxx::__ops::_Iter_comp_iter<sort_inout_decls> >(inout_decl*, long, long, inout_decl, __gnu_cxx::__ops::_Iter_comp_iter<sort_inout_decls>)
00000000004cc0b0 0000000000000114 t void std::__heap_select<inout_decl*, __gnu_cxx::__ops::_Iter_comp_iter<sort_inout_decls> >(inout_decl*, inout_decl*, inout_decl*, __gnu_cxx::__ops::_Iter_comp_iter<sort_inout_decls>)
00000000004cc1d0 00000000000001e8 t void std::__introsort_loop<inout_decl*, long, __gnu_cxx::__ops::_Iter_comp_iter<sort_inout_decls> >(inout_decl*, inout_decl*, long, __gnu_cxx::__ops::_Iter_comp_iter<sort_inout_decls>)
00000000004cc3c0 00000000000023fc t st_translate_program
00000000004ce7c0 0000000000000014 t tgsi_array_merge::sort_by_begin(array_live_range const&, array_live_range const&)
00000000004ce7e0 000000000000001c t array_live_range::array_live_range()
00000000004ce7e0 000000000000001c T array_live_range::array_live_range()
00000000004ce800 0000000000000020 t array_live_range::array_live_range(unsigned int, unsigned int)
00000000004ce800 0000000000000020 T array_live_range::array_live_range(unsigned int, unsigned int)
00000000004ce820 0000000000000008 t array_live_range::set_live_range(int, int)
00000000004ce830 0000000000000018 t array_live_range::set_access_mask(int)
00000000004ce850 0000000000000060 t array_live_range::merge(array_live_range*, array_live_range*)
00000000004ce8b0 00000000000000b8 t array_live_range::interleave_into(array_live_range*)
00000000004ce970 0000000000000064 t tgsi_array_merge::array_remapping::init_from(array_live_range const&)
00000000004ce9e0 0000000000000570 t tgsi_array_merge::remap_arrays(int, unsigned int*, exec_list*, tgsi_array_merge::array_remapping*)
00000000004cef50 000000000000013c t void std::__move_median_to_first<array_live_range*, __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(array_live_range const&, array_live_range const&)> >(array_live_range*, array_live_range*, array_live_range*, array_live_range*, __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(array_live_range const&, array_live_range const&)>)
00000000004cf090 0000000000000080 t void std::__unguarded_linear_insert<array_live_range*, __gnu_cxx::__ops::_Val_comp_iter<bool (*)(array_live_range const&, array_live_range const&)> >(array_live_range*, __gnu_cxx::__ops::_Val_comp_iter<bool (*)(array_live_range const&, array_live_range const&)>)
00000000004cf110 00000000000000cc t void std::__insertion_sort<array_live_range*, __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(array_live_range const&, array_live_range const&)> >(array_live_range*, array_live_range*, __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(array_live_range const&, array_live_range const&)>)
00000000004cf1e0 00000000000001cc t void std::__adjust_heap<array_live_range*, long, array_live_range, __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(array_live_range const&, array_live_range const&)> >(array_live_range*, long, long, array_live_range, __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(array_live_range const&, array_live_range const&)>)
00000000004cf3b0 0000000000000150 t void std::__heap_select<array_live_range*, __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(array_live_range const&, array_live_range const&)> >(array_live_range*, array_live_range*, array_live_range*, __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(array_live_range const&, array_live_range const&)>)
00000000004cf500 00000000000001d0 t void std::__introsort_loop<array_live_range*, long, __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(array_live_range const&, array_live_range const&)> >(array_live_range*, array_live_range*, long, __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(array_live_range const&, array_live_range const&)>)
00000000004cf6d0 0000000000000398 t tgsi_array_merge::get_array_remapping(int, array_live_range*, tgsi_array_merge::array_remapping*)
00000000004cfa70 00000000000000f4 t merge_arrays(int, unsigned int*, exec_list*, array_live_range*)
00000000004cfb70 00000000000000b0 t dup_reladdr(st_src_reg const*)
00000000004cfc20 0000000000000128 t st_src_reg::st_src_reg(gl_register_file, int, glsl_type const*, int, unsigned int)
00000000004cfc20 0000000000000128 T st_src_reg::st_src_reg(gl_register_file, int, glsl_type const*, int, unsigned int)
00000000004cfd50 0000000000000030 t st_src_reg::st_src_reg(gl_register_file, int, glsl_base_type)
00000000004cfd50 0000000000000030 T st_src_reg::st_src_reg(gl_register_file, int, glsl_base_type)
00000000004cfd80 0000000000000034 t st_src_reg::st_src_reg(gl_register_file, int, glsl_base_type, int)
00000000004cfd80 0000000000000034 T st_src_reg::st_src_reg(gl_register_file, int, glsl_base_type, int)
00000000004cfdc0 0000000000000020 t st_src_reg::reset()
00000000004cfde0 0000000000000020 t st_src_reg::st_src_reg()
00000000004cfde0 0000000000000020 T st_src_reg::st_src_reg()
00000000004cfe00 00000000000000f8 t st_src_reg::operator=(st_src_reg const&)
00000000004cff00 00000000000000e0 t st_src_reg::st_src_reg(st_src_reg const&)
00000000004cff00 00000000000000e0 T st_src_reg::st_src_reg(st_src_reg const&)
00000000004cffe0 0000000000000100 t st_src_reg::st_src_reg(st_dst_reg)
00000000004cffe0 0000000000000100 T st_src_reg::st_src_reg(st_dst_reg)
00000000004d00e0 0000000000000128 t st_src_reg::get_abs()
00000000004d0210 00000000000000f8 t st_dst_reg::st_dst_reg(st_src_reg)
00000000004d0210 00000000000000f8 T st_dst_reg::st_dst_reg(st_src_reg)
00000000004d0310 000000000000002c t st_dst_reg::st_dst_reg(gl_register_file, int, glsl_base_type, int)
00000000004d0310 000000000000002c T st_dst_reg::st_dst_reg(gl_register_file, int, glsl_base_type, int)
00000000004d0340 000000000000002c t st_dst_reg::st_dst_reg(gl_register_file, int, glsl_base_type)
00000000004d0340 000000000000002c T st_dst_reg::st_dst_reg(gl_register_file, int, glsl_base_type)
00000000004d0370 000000000000001c t st_dst_reg::st_dst_reg()
00000000004d0370 000000000000001c T st_dst_reg::st_dst_reg()
00000000004d0390 00000000000000e0 t st_dst_reg::st_dst_reg(st_dst_reg const&)
00000000004d0390 00000000000000e0 T st_dst_reg::st_dst_reg(st_dst_reg const&)
00000000004d0470 0000000000000108 t st_dst_reg::operator=(st_dst_reg const&)
00000000004d0580 00000000000000d0 t (anonymous namespace)::temp_comp_access::record_read(int, (anonymous namespace)::prog_scope*)
00000000004d0650 000000000000007c t (anonymous namespace)::array_access::record_access(int, (anonymous namespace)::prog_scope*, int)
00000000004d06d0 0000000000000170 t (anonymous namespace)::access_recorder::record_read(st_src_reg const&, int, (anonymous namespace)::prog_scope*)
00000000004d0840 0000000000000124 t void std::__adjust_heap<(anonymous namespace)::register_merge_record*, long, (anonymous namespace)::register_merge_record, __gnu_cxx::__ops::_Iter_less_iter>((anonymous namespace)::register_merge_record*, long, long, (anonymous namespace)::register_merge_record, __gnu_cxx::__ops::_Iter_less_iter) [clone .constprop.0]
00000000004d0970 00000000000000e4 t void std::__insertion_sort<(anonymous namespace)::register_merge_record*, __gnu_cxx::__ops::_Iter_less_iter>((anonymous namespace)::register_merge_record*, (anonymous namespace)::register_merge_record*, __gnu_cxx::__ops::_Iter_less_iter) [clone .constprop.0]
00000000004d0a60 0000000000000218 t void std::__introsort_loop<(anonymous namespace)::register_merge_record*, long, __gnu_cxx::__ops::_Iter_less_iter>((anonymous namespace)::register_merge_record*, (anonymous namespace)::register_merge_record*, long, __gnu_cxx::__ops::_Iter_less_iter) [clone .constprop.0]
00000000004d0c80 00000000000001e0 t (anonymous namespace)::temp_comp_access::record_ifelse_write((anonymous namespace)::prog_scope const&)
00000000004d0e60 00000000000000f0 t (anonymous namespace)::temp_comp_access::record_write(int, (anonymous namespace)::prog_scope*)
00000000004d0f50 0000000000000d40 t get_temp_registers_required_live_ranges(void*, exec_list*, int, register_live_range*, int, array_live_range*)
00000000004d1c90 0000000000000254 t get_temp_registers_remapping(void*, int, register_live_range const*, rename_reg_pair*)
00000000004d1ef0 000000000000007c t swizzle_4v
00000000004d1f70 00000000000002cc t src_register
00000000004d2240 00000000000001bc t translate_src
00000000004d2400 0000000000000bf0 t emit_wpos
00000000004d2ff0 000000000000008c t st_translate_texture_target
00000000004d3080 0000000000000020 t st_translate_texture_type
00000000004d30a0 000000000000191c t st_translate_mesa_program
00000000004d49c0 0000000000000088 T ast_array_specifier::print() const
00000000004d4a50 00000000000008a8 t _mesa_ast_array_index_to_hir(void*, _mesa_glsl_parse_state*, ir_rvalue*, ir_rvalue*, YYLTYPE&, YYLTYPE&)
00000000004d5300 0000000000000058 T ast_expression_bin::print() const
00000000004d5360 0000000000000010 t ast_expression::operator_string(ast_operators)
00000000004d5370 0000000000000030 t ast_expression_bin::ast_expression_bin(int, ast_expression*, ast_expression*)
00000000004d5370 0000000000000030 T ast_expression_bin::ast_expression_bin(int, ast_expression*, ast_expression*)
00000000004d53a0 000000000000005c T ast_function_expression::has_sequence_subexpression() const
00000000004d5400 0000000000000894 t convert_component(ir_rvalue*, glsl_type const*)
00000000004d5ca0 00000000000000d8 t implicitly_convert_component(ir_rvalue*&, glsl_base_type, _mesa_glsl_parse_state*)
00000000004d5d80 0000000000000190 t match_subroutine_by_name(char const*, exec_list*, _mesa_glsl_parse_state*, ir_variable**)
00000000004d5f10 000000000000015c t generate_array_index(void*, exec_list*, _mesa_glsl_parse_state*, YYLTYPE, ast_expression const*, ast_expression*, char const**, exec_list*)
00000000004d6070 000000000000008c t function_exists(_mesa_glsl_parse_state*, glsl_symbol_table*, char const*)
00000000004d6100 000000000000015c t copy_index_derefs_to_temps(ir_instruction*, void*)
00000000004d6260 00000000000000fc t process_parameters(exec_list*, exec_list*, exec_list*, _mesa_glsl_parse_state*) [clone .constprop.0]
00000000004d6360 00000000000002d0 t process_record_constructor(exec_list*, glsl_type const*, YYLTYPE*, exec_list*, _mesa_glsl_parse_state*)
00000000004d6630 00000000000003c8 t process_array_constructor(exec_list*, glsl_type const*, YYLTYPE*, exec_list*, _mesa_glsl_parse_state*)
00000000004d6a00 0000000000000580 T ast_aggregate_initializer::hir(exec_list*, _mesa_glsl_parse_state*)
00000000004d6f80 00000000000000cc t prototype_string(glsl_type const*, char const*, exec_list*)
00000000004d7050 00000000000000c0 t print_function_prototypes(_mesa_glsl_parse_state*, YYLTYPE*, ir_function*)
00000000004d7110 00000000000002e0 t ast_function_expression::handle_method(exec_list*, _mesa_glsl_parse_state*)
00000000004d73f0 00000000000029bc T ast_function_expression::hir(exec_list*, _mesa_glsl_parse_state*)
00000000004d9db0 0000000000000010 W read_from_write_only_variable_visitor::visit_enter(ir_expression*)
00000000004d9dc0 0000000000000008 T ast_node::has_sequence_subexpression() const
00000000004d9dd0 0000000000000004 T ast_node::set_is_lhs(bool)
00000000004d9de0 0000000000000100 T ast_expression::has_sequence_subexpression() const
00000000004d9ee0 0000000000000014 t compare_case_value(void const*, void const*)
00000000004d9f00 0000000000000008 t key_contents(void const*)
00000000004d9f10 0000000000000048 W interface_block_usage_visitor::visit(ir_dereference_variable*)
00000000004d9f60 0000000000000010 T ast_warnings_toggle::hir(exec_list*, _mesa_glsl_parse_state*)
00000000004d9f70 0000000000000128 t remove_per_vertex_blocks(exec_list*, _mesa_glsl_parse_state*, ir_variable_mode)
00000000004da0a0 00000000000000b8 t validate_layout_qualifier_vertex_count(_mesa_glsl_parse_state*, YYLTYPE, ir_variable*, unsigned int, unsigned int*, char const*)
00000000004da160 00000000000000ac t handle_tess_shader_input_decl(_mesa_glsl_parse_state*, YYLTYPE, ir_variable*)
00000000004da210 00000000000000f8 t get_scalar_boolean_operand(exec_list*, _mesa_glsl_parse_state*, ast_expression*, int, char const*, bool*)
00000000004da310 00000000000001a4 t validate_xfb_offset_qualifier(YYLTYPE*, _mesa_glsl_parse_state*, int, glsl_type const*, unsigned int)
00000000004da4c0 0000000000000154 T ast_gs_input_layout::hir(exec_list*, _mesa_glsl_parse_state*)
00000000004da620 0000000000000104 t handle_tess_ctrl_shader_output_decl(_mesa_glsl_parse_state*, YYLTYPE, ir_variable*)
00000000004da730 0000000000000160 T ast_tcs_output_layout::hir(exec_list*, _mesa_glsl_parse_state*)
00000000004da890 00000000000002e8 T ast_cs_input_layout::hir(exec_list*, _mesa_glsl_parse_state*)
00000000004dab80 000000000000005c t is_varying_var(ir_variable*, gl_shader_stage)
00000000004dabe0 00000000000000a8 t validate_storage_for_sampler_image_types(ir_variable*, _mesa_glsl_parse_state*, YYLTYPE*)
00000000004dac90 0000000000000288 t process_array_type(YYLTYPE*, glsl_type const*, ast_array_specifier*, _mesa_glsl_parse_state*)
00000000004daf20 0000000000000100 t constant_one_for_inc_dec(void*, glsl_type const*) [clone .isra.0]
00000000004db020 000000000000007c W read_from_write_only_variable_visitor::visit(ir_dereference_variable*)
00000000004db0a0 00000000000001c8 t shift_result_type(glsl_type const*, glsl_type const*, ast_operators, _mesa_glsl_parse_state*, YYLTYPE*)
00000000004db270 00000000000000a8 t validate_identifier(char const*, YYLTYPE, _mesa_glsl_parse_state*)
00000000004db320 00000000000002a8 t validate_interpolation_qualifier(_mesa_glsl_parse_state*, YYLTYPE*, glsl_interp_mode, ast_type_qualifier const*, glsl_type const*, ir_variable_mode)
00000000004db5d0 00000000000003c8 t select_gles_precision(unsigned int, glsl_type const*, _mesa_glsl_parse_state*, YYLTYPE*)
00000000004db9a0 000000000000090c t apply_type_qualifier_to_variable(ast_type_qualifier const*, ir_variable*, _mesa_glsl_parse_state*, YYLTYPE*, bool)
00000000004dc2b0 00000000000000e0 t is_allowed_invariant(ir_variable*, _mesa_glsl_parse_state*)
00000000004dc390 000000000000023c t apply_implicit_conversion(glsl_type const*, ir_rvalue*&, _mesa_glsl_parse_state*)
00000000004dc5d0 00000000000001e0 t modulus_result_type(ir_rvalue*&, ir_rvalue*&, _mesa_glsl_parse_state*, YYLTYPE*)
00000000004dc7b0 00000000000002ac t bit_logic_result_type(ir_rvalue*&, ir_rvalue*&, ast_operators, _mesa_glsl_parse_state*, YYLTYPE*)
00000000004dca60 0000000000000234 t arithmetic_result_type(ir_rvalue*&, ir_rvalue*&, bool, _mesa_glsl_parse_state*, YYLTYPE*)
00000000004dcca0 00000000000002b4 t validate_assignment(_mesa_glsl_parse_state*, YYLTYPE, ir_rvalue*, ir_rvalue*, bool)
00000000004dcf60 0000000000000230 t apply_explicit_binding(_mesa_glsl_parse_state*, YYLTYPE*, ir_variable*, glsl_type const*, ast_type_qualifier const*) [clone .part.0]
00000000004dd190 0000000000000404 t do_comparison(void*, int, ir_rvalue*, ir_rvalue*)
00000000004dd5a0 0000000000000478 t do_assignment(exec_list*, _mesa_glsl_parse_state*, char const*, ir_rvalue*, ir_rvalue*, ir_rvalue**, bool, bool, YYLTYPE)
00000000004dda20 000000000000008c T ast_expression::set_is_lhs(bool)
00000000004ddab0 0000000000000514 t _mesa_ast_to_hir(exec_list*, _mesa_glsl_parse_state*)
00000000004ddfd0 0000000000000008 T ast_node::hir(exec_list*, _mesa_glsl_parse_state*)
00000000004ddfe0 0000000000000010 T ast_function_expression::hir_no_rvalue(exec_list*, _mesa_glsl_parse_state*)
00000000004ddff0 0000000000000010 T ast_aggregate_initializer::hir_no_rvalue(exec_list*, _mesa_glsl_parse_state*)
00000000004de000 0000000000000108 t check_builtin_array_max_size(char const*, unsigned int, YYLTYPE, _mesa_glsl_parse_state*)
00000000004de110 0000000000000464 t get_variable_being_redeclared(ir_variable**, YYLTYPE, _mesa_glsl_parse_state*, bool, bool*)
00000000004de580 000000000000214c t ast_expression::do_hir(exec_list*, _mesa_glsl_parse_state*, bool)
00000000004e06d0 0000000000000008 T ast_expression::hir(exec_list*, _mesa_glsl_parse_state*)
00000000004e06e0 0000000000000008 T ast_expression::hir_no_rvalue(exec_list*, _mesa_glsl_parse_state*)
00000000004e06f0 0000000000000030 T ast_expression_statement::hir(exec_list*, _mesa_glsl_parse_state*)
00000000004e0720 00000000000000a8 T ast_compound_statement::hir(exec_list*, _mesa_glsl_parse_state*)
00000000004e07d0 000000000000008c t ast_type_specifier::glsl_type(char const**, _mesa_glsl_parse_state*) const
00000000004e0860 000000000000105c t ast_process_struct_or_iface_block_members(exec_list*, _mesa_glsl_parse_state*, exec_list*, glsl_struct_field**, bool, glsl_matrix_layout, bool, ir_variable_mode, ast_type_qualifier*, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int)
00000000004e18c0 00000000000013fc T ast_interface_block::hir(exec_list*, _mesa_glsl_parse_state*)
00000000004e2cc0 0000000000002b4c T ast_declarator_list::hir(exec_list*, _mesa_glsl_parse_state*)
00000000004e5810 00000000000002cc T ast_parameter_declarator::hir(exec_list*, _mesa_glsl_parse_state*)
00000000004e5ae0 00000000000000e8 t ast_parameter_declarator::parameters_to_hir(exec_list*, bool, exec_list*, _mesa_glsl_parse_state*)
00000000004e5bd0 0000000000000b4c T ast_function::hir(exec_list*, _mesa_glsl_parse_state*)
00000000004e6720 0000000000000198 T ast_function_definition::hir(exec_list*, _mesa_glsl_parse_state*)
00000000004e68c0 00000000000000a4 T ast_demote_statement::hir(exec_list*, _mesa_glsl_parse_state*)
00000000004e6970 0000000000000170 T ast_selection_statement::hir(exec_list*, _mesa_glsl_parse_state*)
00000000004e6ae0 00000000000001c4 t ast_switch_statement::test_to_hir(exec_list*, _mesa_glsl_parse_state*)
00000000004e6cb0 0000000000000030 T ast_switch_body::hir(exec_list*, _mesa_glsl_parse_state*)
00000000004e6ce0 0000000000000344 T ast_case_statement_list::hir(exec_list*, _mesa_glsl_parse_state*)
00000000004e7030 000000000000010c T ast_case_statement::hir(exec_list*, _mesa_glsl_parse_state*)
00000000004e7140 0000000000000068 T ast_case_label_list::hir(exec_list*, _mesa_glsl_parse_state*)
00000000004e71b0 0000000000000444 T ast_case_label::hir(exec_list*, _mesa_glsl_parse_state*)
00000000004e7600 000000000000016c t ast_iteration_statement::condition_to_hir(exec_list*, _mesa_glsl_parse_state*)
00000000004e7770 0000000000000538 T ast_jump_statement::hir(exec_list*, _mesa_glsl_parse_state*)
00000000004e7cb0 0000000000000460 T ast_switch_statement::hir(exec_list*, _mesa_glsl_parse_state*)
00000000004e8110 000000000000015c T ast_iteration_statement::hir(exec_list*, _mesa_glsl_parse_state*)
00000000004e8270 0000000000000188 T ast_type_specifier::hir(exec_list*, _mesa_glsl_parse_state*)
00000000004e8400 0000000000000234 T ast_struct_specifier::hir(exec_list*, _mesa_glsl_parse_state*)
00000000004e8640 0000000000000064 T ast_type_specifier::print() const
00000000004e86b0 000000000000009c t ast_fully_specified_type::has_qualifiers(_mesa_glsl_parse_state*) const
00000000004e8750 0000000000000010 t ast_type_qualifier::has_interpolation() const
00000000004e8760 0000000000000040 t ast_type_qualifier::has_layout() const
00000000004e87a0 0000000000000014 t ast_type_qualifier::has_storage() const
00000000004e87c0 0000000000000010 t ast_type_qualifier::has_auxiliary_storage() const
00000000004e87d0 0000000000000010 t ast_type_qualifier::has_memory() const
00000000004e87e0 0000000000000020 t ast_type_qualifier::is_subroutine_decl() const
00000000004e8800 000000000000099c t ast_type_qualifier::merge_qualifier(YYLTYPE*, _mesa_glsl_parse_state*, ast_type_qualifier const&, bool, bool)
00000000004e91a0 0000000000000160 t ast_type_qualifier::validate_out_qualifier(YYLTYPE*, _mesa_glsl_parse_state*)
00000000004e9300 00000000000000d0 t ast_type_qualifier::merge_into_out_qualifier(YYLTYPE*, _mesa_glsl_parse_state*, ast_node*&)
00000000004e93d0 000000000000028c t ast_type_qualifier::validate_in_qualifier(YYLTYPE*, _mesa_glsl_parse_state*)
00000000004e9660 0000000000000358 t ast_type_qualifier::merge_into_in_qualifier(YYLTYPE*, _mesa_glsl_parse_state*, ast_node*&)
00000000004e99c0 0000000000000668 t ast_type_qualifier::validate_flags(YYLTYPE*, _mesa_glsl_parse_state*, ast_type_qualifier const&, char const*, char const*)
00000000004ea030 00000000000001b4 t ast_layout_expression::process_qualifier_constant(_mesa_glsl_parse_state*, char const*, unsigned int*, bool)
00000000004ea1f0 0000000000000114 t process_qualifier_constant(_mesa_glsl_parse_state*, YYLTYPE*, char const*, ast_expression*, unsigned int*)
00000000004ea310 0000000000000194 t ast_type_qualifier::push_to_global(YYLTYPE*, _mesa_glsl_parse_state*)
00000000004ea4b0 0000000000000c44 t _mesa_glsl_initialize_types
00000000004eb100 0000000000000100 t (anonymous namespace)::builtin_variable_generator::add_variable(char const*, glsl_type const*, int, ir_variable_mode, int)
00000000004eb200 00000000000000e0 t (anonymous namespace)::builtin_variable_generator::add_index_variable(char const*, glsl_type const*, int, ir_variable_mode, int, int) [clone .constprop.0] [clone .isra.0]
00000000004eb2e0 00000000000000c8 t (anonymous namespace)::builtin_variable_generator::add_const_ivec3(char const*, int, int, int) [clone .isra.0]
00000000004eb3b0 000000000000008c t (anonymous namespace)::builtin_variable_generator::add_const(char const*, int, int) [clone .isra.0]
00000000004eb440 0000000000000204 t (anonymous namespace)::builtin_variable_generator::add_uniform(glsl_type const*, int, char const*) [clone .isra.0]
00000000004eb650 0000000000000114 t (anonymous namespace)::builtin_variable_generator::add_varying(int, glsl_type const*, int, char const*)
00000000004eb770 0000000000000e60 t (anonymous namespace)::builtin_variable_generator::generate_constants()
00000000004ec5d0 00000000000020c0 t _mesa_glsl_initialize_variables(exec_list*, _mesa_glsl_parse_state*)
00000000004ee690 0000000000000170 t _mesa_ast_field_selection_to_hir(ast_expression const*, exec_list*, _mesa_glsl_parse_state*)
00000000004ee800 0000000000000040 t free_entry(hash_entry*)
00000000004ee840 0000000000000020 T ir_array_refcount_visitor::visit_enter(ir_function_signature*)
00000000004ee860 0000000000000050 t ir_array_refcount_visitor::ir_array_refcount_visitor()
00000000004ee860 0000000000000050 T ir_array_refcount_visitor::ir_array_refcount_visitor()
00000000004ee8b0 000000000000003c t ir_array_refcount_visitor::~ir_array_refcount_visitor()
00000000004ee8b0 000000000000003c T ir_array_refcount_visitor::~ir_array_refcount_visitor()
00000000004ee8f0 00000000000000d8 t ir_array_refcount_entry::ir_array_refcount_entry(ir_variable*)
00000000004ee8f0 00000000000000d8 T ir_array_refcount_entry::ir_array_refcount_entry(ir_variable*)
00000000004ee9d0 00000000000000b0 T ir_array_refcount_visitor::visit(ir_dereference_variable*)
00000000004eea80 00000000000001b8 T ir_array_refcount_visitor::visit_enter(ir_dereference_array*)
00000000004eec40 0000000000000074 t ir_array_refcount_visitor::get_variable_entry(ir_variable*)
00000000004eecc0 000000000000017c t call_for_basic_blocks(exec_list*, void (*)(ir_instruction*, ir_instruction*, void*), void*)
00000000004eee40 0000000000000018 T ir_function_can_inline_visitor::visit_enter(ir_return*)
00000000004eee60 00000000000000a8 t can_inline(ir_call*)
00000000004eef10 0000000000000010 t (anonymous namespace)::has_recursion_visitor::visit_leave(ir_function_signature*)
00000000004eef20 0000000000000100 t (anonymous namespace)::has_recursion_visitor::visit_enter(ir_call*)
00000000004ef020 000000000000005c t destroy_links(exec_list*, (anonymous namespace)::function*) [clone .isra.0]
00000000004ef080 00000000000000dc t remove_unlinked_functions(void const*, void*, void*)
00000000004ef160 00000000000000a4 t (anonymous namespace)::has_recursion_visitor::visit_enter(ir_function_signature*)
00000000004ef210 0000000000000170 t detect_recursion_unlinked(_mesa_glsl_parse_state*, exec_list*)
00000000004ef380 0000000000000158 t detect_recursion_linked(gl_shader_program*, exec_list*)
00000000004ef4e0 0000000000000064 t ir_rvalue_visitor::visit_leave(ir_expression*)
00000000004ef550 0000000000000024 T ir_rvalue_visitor::visit_leave(ir_swizzle*)
00000000004ef550 0000000000000024 T ir_rvalue_visitor::visit_leave(ir_dereference_record*)
00000000004ef580 0000000000000024 T ir_rvalue_visitor::visit_leave(ir_discard*)
00000000004ef580 0000000000000024 T ir_rvalue_visitor::visit_leave(ir_emit_vertex*)
00000000004ef580 0000000000000024 T ir_rvalue_visitor::visit_leave(ir_end_primitive*)
00000000004ef580 0000000000000024 T ir_rvalue_visitor::visit_leave(ir_if*)
00000000004ef580 0000000000000024 T ir_rvalue_visitor::visit_leave(ir_return*)
00000000004ef5b0 0000000000000064 T ir_rvalue_enter_visitor::visit_enter(ir_expression*)
00000000004ef620 0000000000000024 T ir_rvalue_enter_visitor::visit_enter(ir_swizzle*)
00000000004ef620 0000000000000024 T ir_rvalue_enter_visitor::visit_enter(ir_dereference_record*)
00000000004ef650 0000000000000024 T ir_rvalue_enter_visitor::visit_enter(ir_discard*)
00000000004ef650 0000000000000024 T ir_rvalue_enter_visitor::visit_enter(ir_emit_vertex*)
00000000004ef650 0000000000000024 T ir_rvalue_enter_visitor::visit_enter(ir_end_primitive*)
00000000004ef650 0000000000000024 T ir_rvalue_enter_visitor::visit_enter(ir_if*)
00000000004ef650 0000000000000024 T ir_rvalue_enter_visitor::visit_enter(ir_return*)
00000000004ef680 0000000000000048 t ir_rvalue_visitor::visit_leave(ir_assignment*)
00000000004ef6d0 0000000000000048 t ir_rvalue_enter_visitor::visit_enter(ir_assignment*)
00000000004ef720 000000000000005c T ir_rvalue_visitor::visit_leave(ir_dereference_array*)
00000000004ef780 000000000000005c T ir_rvalue_enter_visitor::visit_enter(ir_dereference_array*)
00000000004ef7e0 0000000000000064 t ir_rvalue_base_visitor::rvalue_visit(ir_expression*)
00000000004ef850 000000000000010c t ir_rvalue_base_visitor::rvalue_visit(ir_texture*)
00000000004ef960 0000000000000004 T ir_rvalue_visitor::visit_leave(ir_texture*)
00000000004ef970 0000000000000004 T ir_rvalue_enter_visitor::visit_enter(ir_texture*)
00000000004ef980 0000000000000048 t ir_rvalue_base_visitor::rvalue_visit(ir_assignment*)
00000000004ef9d0 00000000000000b4 t ir_rvalue_base_visitor::rvalue_visit(ir_call*)
00000000004efa90 0000000000000004 T ir_rvalue_visitor::visit_leave(ir_call*)
00000000004efaa0 0000000000000004 t ir_rvalue_enter_visitor::visit_enter(ir_call*)
00000000004efab0 0000000000000180 t mark(gl_program*, ir_variable*, int, int, gl_shader_stage)
00000000004efc30 000000000000001c t (anonymous namespace)::ir_set_program_inouts_visitor::visit_enter(ir_discard*)
00000000004efc50 0000000000000024 t (anonymous namespace)::ir_set_program_inouts_visitor::visit_enter(ir_texture*)
00000000004efc80 0000000000000020 t (anonymous namespace)::ir_set_program_inouts_visitor::visit_enter(ir_function_signature*)
00000000004efca0 00000000000000f4 t (anonymous namespace)::ir_set_program_inouts_visitor::mark_whole_variable(ir_variable*)
00000000004efda0 0000000000000040 t (anonymous namespace)::ir_set_program_inouts_visitor::visit(ir_dereference_variable*)
00000000004efde0 0000000000000058 t is_multiple_vertices(gl_shader_stage, ir_variable*)
00000000004efe40 00000000000001b0 t (anonymous namespace)::ir_set_program_inouts_visitor::try_mark_partial_variable(ir_variable*, ir_rvalue*)
00000000004efff0 00000000000000f4 t (anonymous namespace)::ir_set_program_inouts_visitor::visit_enter(ir_dereference_array*)
00000000004f00f0 0000000000000088 t do_set_program_inouts(exec_list*, gl_program*, gl_shader_stage)
00000000004f0180 0000000000000068 t free_entry(hash_entry*)
00000000004f01f0 0000000000000020 T ir_variable_refcount_visitor::visit_enter(ir_function_signature*)
00000000004f0210 0000000000000088 T ir_variable_refcount_visitor::visit(ir_variable*)
00000000004f02a0 0000000000000048 t ir_variable_refcount_visitor::ir_variable_refcount_visitor()
00000000004f02a0 0000000000000048 T ir_variable_refcount_visitor::ir_variable_refcount_visitor()
00000000004f02f0 000000000000003c t ir_variable_refcount_visitor::~ir_variable_refcount_visitor()
00000000004f02f0 000000000000003c T ir_variable_refcount_visitor::~ir_variable_refcount_visitor()
00000000004f0330 000000000000008c t ir_variable_refcount_visitor::get_variable_entry(ir_variable*)
00000000004f03c0 0000000000000064 T ir_variable_refcount_visitor::visit(ir_dereference_variable*)
00000000004f0430 0000000000000090 T ir_variable_refcount_visitor::visit_leave(ir_assignment*)
00000000004f04c0 0000000000000158 t process_block(void*, hash_table*, ir_variable*)
00000000004f0620 0000000000000074 T link_uniform_block_active_visitor::visit(ir_dereference_variable*)
00000000004f06a0 00000000000001ac t process_arrays(void*, ir_dereference_array*, link_uniform_block_active*)
00000000004f0850 0000000000000120 T link_uniform_block_active_visitor::visit_enter(ir_dereference_array*)
00000000004f0970 0000000000000180 T link_uniform_block_active_visitor::visit(ir_variable*)
00000000004f0af0 00000000000000a0 t deref_output(ir_variable*)
00000000004f0b90 0000000000000068 t is_mode(ir_variable*, gl_advanced_blend_mode)
00000000004f0c00 0000000000000090 t lumv3(ir_variable*)
00000000004f0c90 00000000000000a8 t maxv3(ir_variable*)
00000000004f0d40 00000000000000a8 t minv3(ir_variable*)
00000000004f0df0 00000000000004f0 t set_lum(ir_builder::ir_factory*, ir_variable*, ir_variable*, ir_variable*)
00000000004f12e0 0000000000000234 t set_lum_sat(ir_builder::ir_factory*, ir_variable*, ir_variable*, ir_variable*, ir_variable*)
00000000004f1520 0000000000001a38 t calc_blend_result(ir_builder::ir_factory, ir_variable*, ir_variable*, ir_rvalue*, unsigned int)
00000000004f2f60 000000000000048c t lower_blend_equation_advanced(gl_linked_shader*, bool)
00000000004f33f0 0000000000000594 t lower_buffer_access::lower_buffer_access::emit_access(void*, bool, ir_dereference*, ir_variable*, unsigned int, bool, glsl_type const*, glsl_interface_packing, unsigned int)
00000000004f3990 0000000000000154 t lower_buffer_access::lower_buffer_access::is_dereferenced_thing_row_major(ir_rvalue const*)
00000000004f3af0 0000000000000438 t lower_buffer_access::lower_buffer_access::setup_buffer_access(void*, ir_rvalue*, ir_rvalue**, unsigned int*, bool*, glsl_type const**, glsl_struct_field const**, glsl_interface_packing)
00000000004f3f30 00000000000000b0 t replace_discard(void*, ir_variable*, ir_discard*)
00000000004f3fe0 0000000000000208 t (anonymous namespace)::lower_discard_visitor::visit_leave(ir_if*)
00000000004f41f0 0000000000000050 t lower_discard(exec_list*)
00000000004f4240 0000000000000018 t (anonymous namespace)::ir_if_to_cond_assign_visitor::visit_enter(ir_if*)
00000000004f4260 00000000000001c0 t move_block_to_cond_assign(void*, ir_if*, ir_rvalue*, exec_list*, set*)
00000000004f4420 000000000000031c t (anonymous namespace)::ir_if_to_cond_assign_visitor::visit_leave(ir_if*)
00000000004f4740 0000000000000134 t check_ir_node(ir_instruction*, void*)
00000000004f4880 00000000000000a8 t lower_if_to_cond_assign(gl_shader_stage, exec_list*, unsigned int, unsigned int)
00000000004f4930 000000000000017c t lower_64bit_integer_instructions(exec_list*, unsigned int)
00000000004f4ab0 0000000000000190 t lower_64bit::expand_source(ir_builder::ir_factory&, ir_rvalue*, ir_variable**)
00000000004f4c40 0000000000000108 t lower_64bit::compact_destination(ir_builder::ir_factory&, glsl_type const*, ir_variable**)
00000000004f4d50 00000000000002d8 t lower_64bit::lower_op_to_function_call(ir_instruction*, ir_expression*, ir_function_signature*)
00000000004f5030 0000000000000120 t (anonymous namespace)::lower_64bit_visitor::handle_op(ir_expression*, char const*, ir_function_signature* (*)(void*, bool (*)(_mesa_glsl_parse_state const*)))
00000000004f5150 0000000000000140 t (anonymous namespace)::lower_64bit_visitor::handle_rvalue(ir_rvalue**)
00000000004f5290 0000000000000064 t mat_op_to_vec_predicate(ir_instruction*)
00000000004f5300 00000000000000a4 t (anonymous namespace)::ir_mat_op_to_vec_visitor::get_column(ir_dereference*, int)
00000000004f53b0 0000000000000114 t (anonymous namespace)::ir_mat_op_to_vec_visitor::do_mul_mat_scalar(ir_dereference*, ir_dereference*, ir_dereference*)
00000000004f54d0 0000000000000b38 t (anonymous namespace)::ir_mat_op_to_vec_visitor::visit_leave(ir_assignment*)
00000000004f6010 0000000000000064 t do_mat_op_to_vec(exec_list*)
00000000004f6080 00000000000001c8 T lower_offset_array_visitor::handle_rvalue(ir_rvalue**)
00000000004f6250 000000000000004c t lower_offset_arrays(exec_list*)
00000000004f62a0 0000000000000004 t (anonymous namespace)::lower_packing_builtins_visitor::~lower_packing_builtins_visitor()
00000000004f62a0 0000000000000004 t (anonymous namespace)::lower_packing_builtins_visitor::~lower_packing_builtins_visitor()
00000000004f62b0 0000000000000008 t (anonymous namespace)::lower_packing_builtins_visitor::~lower_packing_builtins_visitor()
00000000004f62c0 00000000000001c0 t (anonymous namespace)::lower_packing_builtins_visitor::unpack_uint_to_uvec2(ir_rvalue*)
00000000004f6480 0000000000000210 t (anonymous namespace)::lower_packing_builtins_visitor::pack_uvec2_to_uint(ir_rvalue*)
00000000004f6690 0000000000000410 t (anonymous namespace)::lower_packing_builtins_visitor::unpack_half_1x16_nosign(ir_rvalue*, ir_rvalue*)
00000000004f6aa0 0000000000000510 t (anonymous namespace)::lower_packing_builtins_visitor::pack_half_1x16_nosign(ir_rvalue*, ir_rvalue*, ir_rvalue*)
00000000004f6fb0 00000000000003f0 t (anonymous namespace)::lower_packing_builtins_visitor::pack_uvec4_to_uint(ir_rvalue*)
00000000004f73a0 0000000000000438 t (anonymous namespace)::lower_packing_builtins_visitor::unpack_uint_to_uvec4(ir_rvalue*)
00000000004f77e0 000000000000143c t (anonymous namespace)::lower_packing_builtins_visitor::handle_rvalue(ir_rvalue**)
00000000004f8c20 0000000000000078 t lower_packing_builtins(exec_list*, int)
00000000004f8ca0 0000000000000078 t (anonymous namespace)::deref_replacer::handle_rvalue(ir_rvalue**)
00000000004f8d20 000000000000005c t (anonymous namespace)::find_variable_index::visit_enter(ir_dereference_array*)
00000000004f8d80 0000000000000150 t (anonymous namespace)::assignment_generator::generate(unsigned int, ir_rvalue*, ir_builder::ir_factory&) const
00000000004f8ed0 0000000000000130 t compare_index_block(ir_builder::ir_factory&, ir_variable*, unsigned int, unsigned int)
00000000004f9000 0000000000000284 t (anonymous namespace)::switch_generator::generate(unsigned int, unsigned int, ir_builder::ir_factory&)
00000000004f9290 00000000000002ac t (anonymous namespace)::variable_index_to_cond_assign_visitor::convert_dereference_array(ir_dereference_array*, ir_assignment*, ir_dereference*)
00000000004f9540 00000000000001a8 t (anonymous namespace)::variable_index_to_cond_assign_visitor::handle_rvalue(ir_rvalue**)
00000000004f96f0 00000000000001a0 t (anonymous namespace)::variable_index_to_cond_assign_visitor::visit_leave(ir_assignment*)
00000000004f9890 00000000000000a0 t lower_variable_index_to_cond_assign(gl_shader_stage, exec_list*, bool, bool, bool, bool)
00000000004f9930 0000000000000254 t (anonymous namespace)::ir_vec_index_to_cond_assign_visitor::convert_vec_index_to_cond_assign(void*, ir_rvalue*, ir_rvalue*, glsl_type const*) [clone .constprop.0]
00000000004f9b90 00000000000000e8 t (anonymous namespace)::ir_vec_index_to_cond_assign_visitor::convert_vector_extract_to_cond_assign(ir_rvalue*)
00000000004f9c80 0000000000000030 t (anonymous namespace)::ir_vec_index_to_cond_assign_visitor::visit_enter(ir_if*)
00000000004f9cb0 0000000000000030 t (anonymous namespace)::ir_vec_index_to_cond_assign_visitor::visit_enter(ir_return*)
00000000004f9ce0 000000000000009c t (anonymous namespace)::ir_vec_index_to_cond_assign_visitor::visit_enter(ir_call*)
00000000004f9d80 0000000000000044 t (anonymous namespace)::ir_vec_index_to_cond_assign_visitor::visit_leave(ir_assignment*)
00000000004f9dd0 0000000000000030 t (anonymous namespace)::ir_vec_index_to_cond_assign_visitor::visit_enter(ir_swizzle*)
00000000004f9e00 000000000000005c t (anonymous namespace)::ir_vec_index_to_cond_assign_visitor::visit_enter(ir_expression*)
00000000004f9e60 0000000000000050 t do_vec_index_to_cond_assign(exec_list*)
00000000004f9eb0 00000000000003bc t (anonymous namespace)::lower_vector_visitor::handle_rvalue(ir_rvalue**)
00000000004fa270 0000000000000060 t lower_quadop_vector(exec_list*, bool)
00000000004fa2d0 0000000000000008 t hash_table_var_hash(void const*)
00000000004fa2e0 000000000000007c t copy(void*, ir_variable*, ir_variable*)
00000000004fa360 0000000000000104 t (anonymous namespace)::output_read_remover::visit(ir_dereference_variable*)
00000000004fa470 000000000000008c t (anonymous namespace)::output_read_remover::visit_leave(ir_emit_vertex*)
00000000004fa470 000000000000008c t (anonymous namespace)::output_read_remover::visit_leave(ir_return*)
00000000004fa500 00000000000000b8 t (anonymous namespace)::output_read_remover::visit_leave(ir_function_signature*)
00000000004fa5c0 0000000000000094 t lower_output_reads(unsigned int, exec_list*)
00000000004fa660 0000000000000170 t write_uniform_remap_table(blob*, unsigned int, gl_uniform_storage*, gl_uniform_storage**)
00000000004fa7d0 0000000000000044 t write_hash_table_entry(char const*, unsigned int, void*)
00000000004fa820 00000000000000d0 t write_buffer_block(blob*, gl_uniform_block*)
00000000004fa8f0 0000000000000104 t read_uniform_remap_table(blob_reader*, gl_shader_program*, unsigned int*, gl_uniform_storage*)
00000000004faa00 000000000000015c t read_buffer_block(blob_reader*, gl_uniform_block*, gl_shader_program*)
00000000004fab60 00000000000000c8 t write_hash_table(blob*, string_to_uint_map*)
00000000004fac30 00000000000000b4 t read_hash_table(blob_reader*, string_to_uint_map*)
00000000004facf0 0000000000000f40 t serialize_glsl_program
00000000004fbc30 0000000000001218 t deserialize_glsl_program
00000000004fce50 0000000000000100 t sanitize_cb
00000000004fcf50 0000000000000038 t cso_construct_key
00000000004fcf90 0000000000000060 t cso_insert_state
00000000004fcff0 00000000000000cc t cso_hash_find_data_from_template
00000000004fd0c0 0000000000000100 t cso_find_state_template
00000000004fd1c0 0000000000000064 t cso_cache_create
00000000004fd230 00000000000001f4 t cso_cache_delete
00000000004fd430 0000000000000008 t cso_cache_set_sanitize_callback
00000000004fd440 0000000000000040 t eat_opt_white
00000000004fd480 0000000000000088 t str_match_nocase_whole
00000000004fd510 00000000000000b4 t parse_int
00000000004fd5d0 00000000000000cc t parse_register_file_bracket
00000000004fd6a0 000000000000012c t parse_optional_swizzle
00000000004fd7d0 0000000000000170 t parse_opt_writemask
00000000004fd940 00000000000004a8 t parse_register_bracket
00000000004fddf0 0000000000000214 t parse_register_dcl_bracket
00000000004fe010 0000000000000f28 t parse_instruction
00000000004fef40 0000000000001c48 t tgsi_text_translate
0000000000500b90 0000000000000004 t translate_create
0000000000500ba0 0000000000000030 t translate_cache_create
0000000000500bd0 0000000000000074 t translate_cache_destroy
0000000000500c50 0000000000000094 t translate_cache_find
0000000000500cf0 0000000000000024 t emit_R64G64B64A64_FLOAT
0000000000500d20 0000000000000020 t emit_R64G64B64_FLOAT
0000000000500d40 0000000000000014 t emit_R64G64_FLOAT
0000000000500d60 0000000000000010 t emit_R64_FLOAT
0000000000500d70 000000000000001c t emit_R32G32B32A32_FLOAT
0000000000500d90 000000000000001c t emit_R32G32B32_FLOAT
0000000000500db0 0000000000000014 t emit_R32G32_FLOAT
0000000000500dd0 000000000000000c t emit_R32_FLOAT
0000000000500de0 0000000000000020 t emit_R32G32B32A32_USCALED
0000000000500e00 0000000000000020 t emit_R32G32B32_USCALED
0000000000500e20 0000000000000014 t emit_R32G32_USCALED
0000000000500e40 0000000000000010 t emit_R32_USCALED
0000000000500e50 0000000000000020 t emit_R32G32B32A32_SSCALED
0000000000500e70 0000000000000020 t emit_R32G32B32_SSCALED
0000000000500e90 0000000000000014 t emit_R32G32_SSCALED
0000000000500eb0 0000000000000010 t emit_R32_SSCALED
0000000000500ec0 0000000000000020 t emit_R32G32B32A32_UNORM
0000000000500ee0 0000000000000020 t emit_R32G32B32_UNORM
0000000000500f00 0000000000000014 t emit_R32G32_UNORM
0000000000500f20 0000000000000010 t emit_R32_UNORM
0000000000500f30 0000000000000020 t emit_R32G32B32A32_SNORM
0000000000500f50 0000000000000020 t emit_R32G32B32_SNORM
0000000000500f70 0000000000000014 t emit_R32G32_SNORM
0000000000500f90 0000000000000010 t emit_R32_SNORM
0000000000500fa0 0000000000000020 t emit_R16G16B16A16_USCALED
0000000000500fc0 0000000000000024 t emit_R16G16B16_USCALED
0000000000500ff0 0000000000000018 t emit_R16G16_USCALED
0000000000501010 0000000000000010 t emit_R16_USCALED
0000000000501020 0000000000000020 t emit_R16G16B16A16_SSCALED
0000000000501040 0000000000000024 t emit_R16G16B16_SSCALED
0000000000501070 0000000000000018 t emit_R16G16_SSCALED
0000000000501090 0000000000000010 t emit_R16_SSCALED
00000000005010a0 0000000000000030 t emit_R16G16B16A16_UNORM
00000000005010d0 000000000000003c t emit_R16G16B16_UNORM
0000000000501110 000000000000002c t emit_R16G16_UNORM
0000000000501140 0000000000000020 t emit_R16_UNORM
0000000000501160 0000000000000030 t emit_R16G16B16A16_SNORM
0000000000501190 000000000000003c t emit_R16G16B16_SNORM
00000000005011d0 000000000000002c t emit_R16G16_SNORM
0000000000501200 0000000000000020 t emit_R16_SNORM
0000000000501220 0000000000000020 t emit_R8G8B8A8_USCALED
0000000000501240 0000000000000028 t emit_R8G8B8_USCALED
0000000000501270 000000000000001c t emit_R8G8_USCALED
0000000000501290 0000000000000010 t emit_R8_USCALED
00000000005012a0 000000000000002c t emit_R8G8B8A8_UNORM
00000000005012d0 000000000000002c t emit_R8G8B8_UNORM
0000000000501300 000000000000002c t emit_R8G8_UNORM
0000000000501330 000000000000001c t emit_R8_UNORM
0000000000501350 000000000000002c t emit_R8G8B8A8_SNORM
0000000000501380 000000000000002c t emit_R8G8B8_SNORM
00000000005013b0 000000000000002c t emit_R8G8_SNORM
00000000005013e0 000000000000001c t emit_R8_SNORM
0000000000501400 000000000000001c t emit_R32G32B32A32_UINT
0000000000501420 000000000000001c t emit_R32G32B32_UINT
0000000000501440 0000000000000014 t emit_R32G32_UINT
0000000000501460 000000000000000c t emit_R32_UINT
0000000000501470 000000000000001c t emit_R16G16B16A16_UINT
0000000000501490 0000000000000018 t emit_R16G16B16_UINT
00000000005014b0 0000000000000010 t emit_R16G16_UINT
00000000005014c0 000000000000000c t emit_R16_UINT
00000000005014d0 000000000000001c t emit_R8G8B8A8_UINT
00000000005014f0 000000000000001c t emit_R8G8B8_UINT
0000000000501510 0000000000000014 t emit_R8G8_UINT
0000000000501530 000000000000000c t emit_R8_UINT
0000000000501540 000000000000001c t emit_R32G32B32A32_SINT
0000000000501560 000000000000001c t emit_R32G32B32_SINT
0000000000501580 0000000000000014 t emit_R32G32_SINT
00000000005015a0 000000000000000c t emit_R32_SINT
00000000005015b0 000000000000001c t emit_R16G16B16A16_SINT
00000000005015d0 0000000000000018 t emit_R16G16B16_SINT
00000000005015f0 0000000000000010 t emit_R16G16_SINT
0000000000501600 000000000000000c t emit_R16_SINT
0000000000501610 000000000000001c t emit_R8G8B8A8_SINT
0000000000501630 000000000000001c t emit_R8G8B8_SINT
0000000000501650 0000000000000014 t emit_R8G8_SINT
0000000000501670 000000000000000c t emit_R8_SINT
0000000000501680 000000000000004c t emit_A8R8G8B8_UNORM
00000000005016d0 000000000000004c t emit_B8G8R8A8_UNORM
0000000000501720 0000000000000104 t emit_B10G10R10A2_UNORM
0000000000501830 00000000000000d0 t emit_B10G10R10A2_USCALED
0000000000501900 0000000000000104 t emit_B10G10R10A2_SNORM
0000000000501a10 00000000000000e0 t emit_B10G10R10A2_SSCALED
0000000000501af0 0000000000000104 t emit_R10G10B10A2_UNORM
0000000000501c00 00000000000000d0 t emit_R10G10B10A2_USCALED
0000000000501cd0 0000000000000104 t emit_R10G10B10A2_SNORM
0000000000501de0 00000000000000e0 t emit_R10G10B10A2_SSCALED
0000000000501ec0 0000000000000004 t emit_NULL
0000000000501ed0 000000000000004c t generic_set_buffer
0000000000501f20 0000000000000004 t generic_release
0000000000501f30 0000000000000168 t generic_run_elts
00000000005020a0 0000000000000168 t generic_run_elts16
0000000000502210 0000000000000168 t generic_run_elts8
0000000000502380 0000000000000160 t generic_run
00000000005024e0 0000000000000044 t emit_R16G16B16A16_FLOAT
0000000000502530 0000000000000044 t emit_R16G16B16_FLOAT
0000000000502580 0000000000000038 t emit_R16G16_FLOAT
00000000005025c0 0000000000000028 t emit_R16_FLOAT
00000000005025f0 0000000000000010 t emit_R8_SSCALED
0000000000502600 0000000000000020 t emit_R8G8B8A8_SSCALED
0000000000502620 0000000000000028 t emit_R8G8B8_SSCALED
0000000000502650 000000000000001c t emit_R8G8_SSCALED
0000000000502670 0000000000000700 t translate_generic_create
0000000000502d70 00000000000000c0 t util_draw_vertex_buffer
0000000000502e30 00000000000000a4 T u_default_buffer_subdata
0000000000502ee0 00000000000000bc T u_default_texture_subdata
0000000000502fa0 0000000000000008 T u_default_resource_get_handle
0000000000502fb0 0000000000000004 T u_default_transfer_flush_region
0000000000502fc0 0000000000000018 T u_resource_get_handle_vtbl
0000000000502fe0 0000000000000010 T u_resource_destroy_vtbl
0000000000502ff0 0000000000000010 T u_transfer_map_vtbl
0000000000503000 0000000000000014 T u_transfer_flush_region_vtbl
0000000000503020 0000000000000014 T u_transfer_unmap_vtbl
0000000000503040 0000000000000008 t vl_create_decoder
0000000000503050 0000000000000008 t vl_video_buffer_is_format_supported
0000000000503060 0000000000000008 t vl_video_buffer_create
0000000000503070 0000000000000024 t nv50_miptree_get_handle
00000000005030a0 00000000000000a4 T nv50_miptree_destroy
0000000000503150 00000000000000a0 t nv50_tex_choose_tile_dims_helper
00000000005031f0 0000000000000100 t nv50_miptree_init_layout_linear
00000000005032f0 000000000000010c t nv50_miptree_from_handle
0000000000503400 000000000000014c t nv50_surface_from_miptree
0000000000503550 0000000000000010 T nv50_invalidate_resource
0000000000503560 0000000000000068 T nv50_surface_destroy
00000000005035d0 0000000000000158 t nv50_surface_from_buffer
0000000000503730 0000000000000384 T nv50_sampler_state_create
0000000000503ac0 0000000000000004 W nv50_ir::Iterator::reset()
0000000000503ad0 0000000000000008 W nv50_ir::Value::isUniform() const
0000000000503ae0 0000000000000050 W nv50_ir::Target::parseDriverInfo(nv50_ir_prog_info const*)
0000000000503b30 0000000000000018 T nv50_ir::Symbol::isUniform() const
0000000000503b50 0000000000000028 T nv50_ir::ImmediateValue::equals(nv50_ir::Value const*, bool) const
0000000000503b80 0000000000000070 t _debug_printf
0000000000503bf0 0000000000000058 T nv50_ir::Value::equals(nv50_ir::Value const*, bool) const
0000000000503c50 0000000000000080 T nv50_ir::Symbol::equals(nv50_ir::Value const*, bool) const
0000000000503cd0 0000000000000094 t nv50_ir::Value::interfers(nv50_ir::Value const*) const [clone .part.0]
0000000000503d70 00000000000000a8 T nv50_ir::Value::interfers(nv50_ir::Value const*) const
0000000000503e20 00000000000000c4 W nv50_ir::LValue::~LValue()
0000000000503e20 00000000000000c4 W nv50_ir::LValue::~LValue()
0000000000503ef0 00000000000000c4 W nv50_ir::Symbol::~Symbol()
0000000000503ef0 00000000000000c4 W nv50_ir::Symbol::~Symbol()
0000000000503fc0 00000000000000c4 W nv50_ir::ImmediateValue::~ImmediateValue()
0000000000503fc0 00000000000000c4 W nv50_ir::ImmediateValue::~ImmediateValue()
0000000000504090 00000000000000c0 W nv50_ir::LValue::~LValue()
0000000000504150 00000000000000c0 W nv50_ir::ImmediateValue::~ImmediateValue()
0000000000504210 00000000000000c0 W nv50_ir::Symbol::~Symbol()
00000000005042d0 0000000000000198 T nv50_ir::LValue::isUniform() const
0000000000504470 0000000000000048 t nv50_ir::Modifier::Modifier(nv50_ir::operation)
0000000000504470 0000000000000048 T nv50_ir::Modifier::Modifier(nv50_ir::operation)
00000000005044c0 0000000000000034 t nv50_ir::Modifier::operator*(nv50_ir::Modifier) const
0000000000504500 00000000000001e8 t nv50_ir::ValueRef::getImmediate(nv50_ir::ImmediateValue&) const
00000000005046f0 0000000000000060 t nv50_ir::ValueDef::ValueDef(nv50_ir::Value*)
00000000005046f0 0000000000000060 T nv50_ir::ValueDef::ValueDef(nv50_ir::Value*)
0000000000504750 000000000000005c t nv50_ir::ValueDef::ValueDef(nv50_ir::ValueDef const&)
0000000000504750 000000000000005c T nv50_ir::ValueDef::ValueDef(nv50_ir::ValueDef const&)
00000000005047b0 00000000000000fc t nv50_ir::ValueDef::set(nv50_ir::Value*)
00000000005048b0 0000000000000008 t nv50_ir::ValueDef::~ValueDef()
00000000005048b0 0000000000000008 T nv50_ir::ValueDef::~ValueDef()
00000000005048c0 000000000000010c t std::deque<nv50_ir::ValueDef, std::allocator<nv50_ir::ValueDef> >::_M_destroy_data_aux(std::_Deque_iterator<nv50_ir::ValueDef, nv50_ir::ValueDef&, nv50_ir::ValueDef*>, std::_Deque_iterator<nv50_ir::ValueDef, nv50_ir::ValueDef&, nv50_ir::ValueDef*>) [clone .isra.0]
00000000005049d0 0000000000000214 t nv50_ir::ValueDef::mayReplace(nv50_ir::ValueRef const&)
0000000000504bf0 000000000000005c T nv50_ir::Value::Value()
0000000000504bf0 000000000000005c t nv50_ir::Value::Value()
0000000000504c50 0000000000000144 t nv50_ir::LValue::LValue(nv50_ir::Function*, nv50_ir::DataFile)
0000000000504c50 0000000000000144 T nv50_ir::LValue::LValue(nv50_ir::Function*, nv50_ir::DataFile)
0000000000504da0 000000000000014c t nv50_ir::LValue::LValue(nv50_ir::Function*, nv50_ir::LValue*)
0000000000504da0 000000000000014c T nv50_ir::LValue::LValue(nv50_ir::Function*, nv50_ir::LValue*)
0000000000504ef0 000000000000012c t nv50_ir::Symbol::Symbol(nv50_ir::Program*, nv50_ir::DataFile, unsigned char)
0000000000504ef0 000000000000012c T nv50_ir::Symbol::Symbol(nv50_ir::Program*, nv50_ir::DataFile, unsigned char)
0000000000505020 000000000000013c t nv50_ir::ImmediateValue::ImmediateValue(nv50_ir::Program*, unsigned int)
0000000000505020 000000000000013c T nv50_ir::ImmediateValue::ImmediateValue(nv50_ir::Program*, unsigned int)
0000000000505160 000000000000013c t nv50_ir::ImmediateValue::ImmediateValue(nv50_ir::Program*, float)
0000000000505160 000000000000013c T nv50_ir::ImmediateValue::ImmediateValue(nv50_ir::Program*, float)
00000000005052a0 0000000000000134 t nv50_ir::ImmediateValue::ImmediateValue(nv50_ir::Program*, double)
00000000005052a0 0000000000000134 T nv50_ir::ImmediateValue::ImmediateValue(nv50_ir::Program*, double)
00000000005053e0 00000000000000e4 t nv50_ir::ImmediateValue::isInteger(int) const
00000000005054d0 0000000000000070 t nv50_ir::ImmediateValue::isNegative() const
0000000000505540 0000000000000038 t nv50_ir::ImmediateValue::isPow2() const
0000000000505580 00000000000000b4 t nv50_ir::ImmediateValue::applyLog2()
0000000000505640 0000000000000134 t nv50_ir::ImmediateValue::compare(nv50_ir::CondCode, float) const
0000000000505780 0000000000000340 t nv50_ir::Instruction::defCount(unsigned int, bool) const
0000000000505ac0 0000000000000340 t nv50_ir::Instruction::srcCount(unsigned int, bool) const
0000000000505e00 0000000000000408 t nv50_ir::Instruction::canCommuteDefSrc(nv50_ir::Instruction const*) const
0000000000506210 0000000000000408 t nv50_ir::Instruction::canCommuteDefDef(nv50_ir::Instruction const*) const
0000000000506620 0000000000000058 t nv50_ir::Instruction::isCommutationLegal(nv50_ir::Instruction const*) const
0000000000506680 00000000000002b0 t nv50_ir::TexInstruction::translateImgFormat(pipe_format)
0000000000506930 0000000000000134 t nv50_ir::Program::Program(nv50_ir::Program::Type, nv50_ir::Target*)
0000000000506930 0000000000000134 T nv50_ir::Program::Program(nv50_ir::Program::Type, nv50_ir::Target*)
0000000000506a70 00000000000000ac t nv50_ir::Program::releaseInstruction(nv50_ir::Instruction*)
0000000000506b20 0000000000000088 t nv50_ir::Program::releaseValue(nv50_ir::Value*)
0000000000506bb0 0000000000000114 t std::_Deque_base<nv50_ir::ValueDef, std::allocator<nv50_ir::ValueDef> >::_M_initialize_map(unsigned long)
0000000000506cd0 0000000000000114 t std::_Deque_base<nv50_ir::ValueRef, std::allocator<nv50_ir::ValueRef> >::_M_initialize_map(unsigned long)
0000000000506df0 0000000000000164 t nv50_ir::Instruction::Instruction(nv50_ir::Function*, nv50_ir::operation, nv50_ir::DataType)
0000000000506df0 0000000000000164 t nv50_ir::Instruction::Instruction(nv50_ir::Function*, nv50_ir::operation, nv50_ir::DataType)
0000000000506f60 0000000000000038 t nv50_ir::CmpInstruction::CmpInstruction(nv50_ir::Function*, nv50_ir::operation)
0000000000506f60 0000000000000038 T nv50_ir::CmpInstruction::CmpInstruction(nv50_ir::Function*, nv50_ir::operation)
0000000000506fa0 00000000000000c8 t nv50_ir::FlowInstruction::FlowInstruction(nv50_ir::Function*, nv50_ir::operation, void*)
0000000000506fa0 00000000000000c8 T nv50_ir::FlowInstruction::FlowInstruction(nv50_ir::Function*, nv50_ir::operation, void*)
0000000000507070 00000000000000ec t nv50_ir::TexInstruction::TexInstruction(nv50_ir::Function*, nv50_ir::operation)
0000000000507070 00000000000000ec T nv50_ir::TexInstruction::TexInstruction(nv50_ir::Function*, nv50_ir::operation)
0000000000507160 0000000000000340 t std::deque<nv50_ir::ValueDef, std::allocator<nv50_ir::ValueDef> >::_M_default_append(unsigned long)
00000000005074a0 0000000000000350 t nv50_ir::Instruction::setDef(int, nv50_ir::Value*)
00000000005077f0 0000000000000348 t std::deque<nv50_ir::ValueRef, std::allocator<nv50_ir::ValueRef> >::_M_default_append(unsigned long)
0000000000507b40 00000000000001b0 t std::_Hashtable<nv50_ir::ValueRef*, nv50_ir::ValueRef*, std::allocator<nv50_ir::ValueRef*>, std::__detail::_Identity, std::equal_to<nv50_ir::ValueRef*>, std::hash<nv50_ir::ValueRef*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_insert_unique_node(unsigned long, unsigned long, std::__detail::_Hash_node<nv50_ir::ValueRef*, false>*, unsigned long)
0000000000507cf0 00000000000001c8 t nv50_ir::ValueRef::set(nv50_ir::Value*)
0000000000507ec0 0000000000000010 t nv50_ir::ValueRef::ValueRef(nv50_ir::Value*)
0000000000507ec0 0000000000000010 T nv50_ir::ValueRef::ValueRef(nv50_ir::Value*)
0000000000507ed0 0000000000000008 t nv50_ir::ValueRef::~ValueRef()
0000000000507ed0 0000000000000008 T nv50_ir::ValueRef::~ValueRef()
0000000000507ee0 0000000000000040 t nv50_ir::ValueRef::set(nv50_ir::ValueRef const&)
0000000000507f20 00000000000000cc t nv50_ir::ValueDef::replace(nv50_ir::ValueRef const&, bool)
0000000000507ff0 000000000000010c t std::deque<nv50_ir::ValueRef, std::allocator<nv50_ir::ValueRef> >::_M_destroy_data_aux(std::_Deque_iterator<nv50_ir::ValueRef, nv50_ir::ValueRef&, nv50_ir::ValueRef*>, std::_Deque_iterator<nv50_ir::ValueRef, nv50_ir::ValueRef&, nv50_ir::ValueRef*>) [clone .isra.0]
0000000000508100 0000000000000350 t nv50_ir::Instruction::setSrc(int, nv50_ir::Value*)
0000000000508450 00000000000000e8 t nv50_ir::Instruction::setSrc(int, nv50_ir::ValueRef const&)
0000000000508540 0000000000000370 t nv50_ir::Instruction::setIndirect(int, int, nv50_ir::Value*)
00000000005088b0 000000000000020c t nv50_ir::Instruction::setPredicate(nv50_ir::CondCode, nv50_ir::Value*)
0000000000508ac0 0000000000000074 t nv50_ir::Instruction::putExtraSources(int, nv50_ir::Value**)
0000000000508b40 0000000000000154 t nv50_ir::TexInstruction::setIndirectR(nv50_ir::Value*)
0000000000508ca0 0000000000000154 t nv50_ir::TexInstruction::setIndirectS(nv50_ir::Value*)
0000000000508e00 000000000000037c t nv50_ir::Instruction::swapSources(int, int)
0000000000509180 0000000000000714 t nv50_ir::Instruction::moveSources(int, int)
00000000005098a0 000000000000052c t nv50_ir::Instruction::~Instruction()
00000000005098a0 000000000000052c t nv50_ir::Instruction::~Instruction()
0000000000509dd0 0000000000000028 T nv50_ir::Instruction::~Instruction()
0000000000509e00 00000000000000fc t nv50_ir::TexInstruction::~TexInstruction()
0000000000509e00 00000000000000fc T nv50_ir::TexInstruction::~TexInstruction()
0000000000509f00 0000000000000028 T nv50_ir::TexInstruction::~TexInstruction()
0000000000509f30 0000000000000010 W nv50_ir::FlowInstruction::~FlowInstruction()
0000000000509f30 0000000000000010 W nv50_ir::FlowInstruction::~FlowInstruction()
0000000000509f40 0000000000000034 W nv50_ir::FlowInstruction::~FlowInstruction()
0000000000509f80 0000000000000010 W nv50_ir::CmpInstruction::~CmpInstruction()
0000000000509f80 0000000000000010 W nv50_ir::CmpInstruction::~CmpInstruction()
0000000000509f90 0000000000000034 W nv50_ir::CmpInstruction::~CmpInstruction()
0000000000509fd0 0000000000000048 t nv50_ir::ValueRef::ValueRef(nv50_ir::ValueRef const&)
0000000000509fd0 0000000000000048 T nv50_ir::ValueRef::ValueRef(nv50_ir::ValueRef const&)
000000000050a020 00000000000003f0 t nv50_ir::Instruction::takeExtraSources(int, nv50_ir::Value**)
000000000050a410 00000000000000a8 W std::_Rb_tree<void const*, std::pair<void const* const, void*>, std::_Select1st<std::pair<void const* const, void*> >, std::less<void const*>, std::allocator<std::pair<void const* const, void*> > >::_M_get_insert_unique_pos(void const* const&)
000000000050a4c0 0000000000000114 W std::_Rb_tree<void const*, std::pair<void const* const, void*>, std::_Select1st<std::pair<void const* const, void*> >, std::less<void const*>, std::allocator<std::pair<void const* const, void*> > >::_M_get_insert_hint_unique_pos(std::_Rb_tree_const_iterator<std::pair<void const* const, void*> >, void const* const&)
000000000050a5e0 00000000000000c0 t std::_Rb_tree_iterator<std::pair<void const* const, void*> > std::_Rb_tree<void const*, std::pair<void const* const, void*>, std::_Select1st<std::pair<void const* const, void*> >, std::less<void const*>, std::allocator<std::pair<void const* const, void*> > >::_M_emplace_hint_unique<std::piecewise_construct_t const&, std::tuple<void const* const&>, std::tuple<> >(std::_Rb_tree_const_iterator<std::pair<void const* const, void*> >, std::piecewise_construct_t const&, std::tuple<void const* const&>&&, std::tuple<>&&) [clone .isra.0]
000000000050a6a0 00000000000000ac W nv50_ir::DeepClonePolicy<nv50_ir::Function>::insert(void const*, void*)
000000000050a750 00000000000000a0 W nv50_ir::DeepClonePolicy<nv50_ir::Function>::lookup(void*)
000000000050a7f0 00000000000002d8 T nv50_ir::ImmediateValue::clone(nv50_ir::ClonePolicy<nv50_ir::Function>&) const
000000000050aad0 00000000000002e0 T nv50_ir::Symbol::clone(nv50_ir::ClonePolicy<nv50_ir::Function>&) const
000000000050adb0 00000000000002f8 T nv50_ir::LValue::clone(nv50_ir::ClonePolicy<nv50_ir::Function>&) const
000000000050b0b0 0000000000000848 t nv50_ir::Instruction::clone(nv50_ir::ClonePolicy<nv50_ir::Function>&, nv50_ir::Instruction*) const
000000000050b900 0000000000000274 T nv50_ir::TexInstruction::clone(nv50_ir::ClonePolicy<nv50_ir::Function>&, nv50_ir::Instruction*) const
000000000050bb80 000000000000017c T nv50_ir::CmpInstruction::clone(nv50_ir::ClonePolicy<nv50_ir::Function>&, nv50_ir::Instruction*) const
000000000050bd00 00000000000002a8 T nv50_ir::FlowInstruction::clone(nv50_ir::ClonePolicy<nv50_ir::Function>&, nv50_ir::Instruction*) const
000000000050bfb0 0000000000000440 t nv50_ir::Program::~Program()
000000000050bfb0 0000000000000440 T nv50_ir::Program::~Program()
000000000050c3f0 00000000000002a4 t nv50_ir_generate_code
000000000050c6a0 0000000000000008 W nv50_ir::Pass::visit(nv50_ir::Function*)
000000000050c6b0 0000000000000008 W nv50_ir::Pass::visit(nv50_ir::BasicBlock*)
000000000050c6c0 0000000000000008 W nv50_ir::Pass::visit(nv50_ir::Instruction*)
000000000050c6d0 00000000000000f8 t std::deque<nv50_ir::ValueRef, std::allocator<nv50_ir::ValueRef> >::_M_destroy_data_aux(std::_Deque_iterator<nv50_ir::ValueRef, nv50_ir::ValueRef&, nv50_ir::ValueRef*>, std::_Deque_iterator<nv50_ir::ValueRef, nv50_ir::ValueRef&, nv50_ir::ValueRef*>) [clone .isra.0]
000000000050c7d0 00000000000000f8 t std::deque<nv50_ir::ValueDef, std::allocator<nv50_ir::ValueDef> >::_M_destroy_data_aux(std::_Deque_iterator<nv50_ir::ValueDef, nv50_ir::ValueDef&, nv50_ir::ValueDef*>, std::_Deque_iterator<nv50_ir::ValueDef, nv50_ir::ValueDef&, nv50_ir::ValueDef*>) [clone .isra.0]
000000000050c8d0 000000000000027c t nv50_ir::Function::Function(nv50_ir::Program*, char const*, unsigned int)
000000000050c8d0 000000000000027c T nv50_ir::Function::Function(nv50_ir::Program*, char const*, unsigned int)
000000000050cb50 000000000000012c t nv50_ir::BasicBlock::BasicBlock(nv50_ir::Function*)
000000000050cb50 000000000000012c T nv50_ir::BasicBlock::BasicBlock(nv50_ir::Function*)
000000000050cc80 000000000000002c t nv50_ir::BasicBlock::idom() const
000000000050ccb0 0000000000000068 t nv50_ir::BasicBlock::insertBefore(nv50_ir::Instruction*, nv50_ir::Instruction*)
000000000050cd20 00000000000000a8 t nv50_ir::BasicBlock::insertHead(nv50_ir::Instruction*)
000000000050cdd0 00000000000000c0 t nv50_ir::BasicBlock::insertTail(nv50_ir::Instruction*)
000000000050ce90 000000000000005c t nv50_ir::BasicBlock::insertAfter(nv50_ir::Instruction*, nv50_ir::Instruction*)
000000000050cef0 00000000000000c8 t nv50_ir::BasicBlock::remove(nv50_ir::Instruction*)
000000000050cfc0 0000000000000088 t nv50_ir::BasicBlock::permuteAdjacent(nv50_ir::Instruction*, nv50_ir::Instruction*)
000000000050d050 00000000000000e8 t nv50_ir::BasicBlock::splitCommon(nv50_ir::Instruction*, nv50_ir::BasicBlock*, bool)
000000000050d140 0000000000000064 t nv50_ir::BasicBlock::splitBefore(nv50_ir::Instruction*, bool)
000000000050d1b0 000000000000006c t nv50_ir::BasicBlock::splitAfter(nv50_ir::Instruction*, bool)
000000000050d220 0000000000000050 t nv50_ir::BasicBlock::dominatedBy(nv50_ir::BasicBlock*)
000000000050d270 0000000000000090 t nv50_ir::BasicBlock::initiatesSimpleConditional() const
000000000050d300 000000000000002c t nv50_ir::Function::setEntry(nv50_ir::BasicBlock*)
000000000050d330 0000000000000020 t nv50_ir::Function::setExit(nv50_ir::BasicBlock*)
000000000050d350 0000000000000198 t nv50_ir::Function::orderInstructions(nv50_ir::ArrayList&)
000000000050d4f0 00000000000000d0 t nv50_ir::Function::buildLiveSets()
000000000050d5c0 00000000000000d0 t nv50_ir::Function::buildDefSets()
000000000050d690 0000000000000198 t nv50_ir::Pass::doRun(nv50_ir::Function*, bool, bool)
000000000050d830 0000000000000010 t nv50_ir::Pass::run(nv50_ir::Function*, bool, bool)
000000000050d840 00000000000000d8 t nv50_ir::Pass::doRun(nv50_ir::Program*, bool, bool)
000000000050d920 000000000000000c t nv50_ir::Pass::run(nv50_ir::Program*, bool, bool)
000000000050d930 00000000000000c0 t std::_Rb_tree_iterator<std::pair<void const* const, void*> > std::_Rb_tree<void const*, std::pair<void const* const, void*>, std::_Select1st<std::pair<void const* const, void*> >, std::less<void const*>, std::allocator<std::pair<void const* const, void*> > >::_M_emplace_hint_unique<std::piecewise_construct_t const&, std::tuple<void const* const&>, std::tuple<> >(std::_Rb_tree_const_iterator<std::pair<void const* const, void*> >, std::piecewise_construct_t const&, std::tuple<void const* const&>&&, std::tuple<>&&) [clone .isra.0]
000000000050d9f0 0000000000000230 t nv50_ir::BasicBlock::clone(nv50_ir::ClonePolicy<nv50_ir::Function>&) const
000000000050dc20 0000000000000584 t nv50_ir::Function::~Function()
000000000050dc20 0000000000000584 T nv50_ir::Function::~Function()
000000000050e1b0 0000000000000008 t (anonymous namespace)::Converter::BindArgumentsPass::visit(nv50_ir::BasicBlock*)
000000000050e1c0 0000000000000070 t _debug_printf
000000000050e230 000000000000006c t (anonymous namespace)::Converter::adjustTempIndex(int, int&, int&) const [clone .isra.0]
000000000050e2a0 0000000000000140 t std::_Rb_tree<int, std::pair<int const, std::pair<int, int> >, std::_Select1st<std::pair<int const, std::pair<int, int> > >, std::less<int>, std::allocator<std::pair<int const, std::pair<int, int> > > >::_M_erase(std::_Rb_tree_node<std::pair<int const, std::pair<int, int> > >*) [clone .isra.0]
000000000050e3e0 0000000000000140 t std::_Rb_tree<void const*, std::pair<void const* const, void*>, std::_Select1st<std::pair<void const* const, void*> >, std::less<void const*>, std::allocator<std::pair<void const* const, void*> > >::_M_erase(std::_Rb_tree_node<std::pair<void const* const, void*> >*) [clone .isra.0]
000000000050e520 0000000000000140 t std::_Rb_tree<int, int, std::_Identity<int>, std::less<int>, std::allocator<int> >::_M_erase(std::_Rb_tree_node<int>*) [clone .isra.0]
000000000050e660 0000000000000140 t std::_Rb_tree<nv50_ir::BuildUtil::Location, nv50_ir::BuildUtil::Location, std::_Identity<nv50_ir::BuildUtil::Location>, std::less<nv50_ir::BuildUtil::Location>, std::allocator<nv50_ir::BuildUtil::Location> >::_M_erase(std::_Rb_tree_node<nv50_ir::BuildUtil::Location>*) [clone .isra.0]
000000000050e7a0 0000000000000140 t std::_Rb_tree<nv50_ir::Value*, std::pair<nv50_ir::Value* const, nv50_ir::BuildUtil::Location>, std::_Select1st<std::pair<nv50_ir::Value* const, nv50_ir::BuildUtil::Location> >, std::less<nv50_ir::Value*>, std::allocator<std::pair<nv50_ir::Value* const, nv50_ir::BuildUtil::Location> > >::_M_erase(std::_Rb_tree_node<std::pair<nv50_ir::Value* const, nv50_ir::BuildUtil::Location> >*) [clone .isra.0]
000000000050e8e0 0000000000000140 t std::_Rb_tree<nv50_ir::BuildUtil::Location, std::pair<nv50_ir::BuildUtil::Location const, nv50_ir::Value*>, std::_Select1st<std::pair<nv50_ir::BuildUtil::Location const, nv50_ir::Value*> >, std::less<nv50_ir::BuildUtil::Location>, std::allocator<std::pair<nv50_ir::BuildUtil::Location const, nv50_ir::Value*> > >::_M_erase(std::_Rb_tree_node<std::pair<nv50_ir::BuildUtil::Location const, nv50_ir::Value*> >*) [clone .isra.0]
000000000050ea20 0000000000000094 t std::_Rb_tree<unsigned int, std::pair<unsigned int const, nv50_ir::ConverterCommon::Subroutine>, std::_Select1st<std::pair<unsigned int const, nv50_ir::ConverterCommon::Subroutine> >, std::less<unsigned int>, std::allocator<std::pair<unsigned int const, nv50_ir::ConverterCommon::Subroutine> > >::_M_erase(std::_Rb_tree_node<std::pair<unsigned int const, nv50_ir::ConverterCommon::Subroutine> >*) [clone .isra.0]
000000000050eac0 0000000000000140 t std::_Rb_tree<int, std::pair<int const, int>, std::_Select1st<std::pair<int const, int> >, std::less<int>, std::allocator<std::pair<int const, int> > >::_M_erase(std::_Rb_tree_node<std::pair<int const, int> >*) [clone .isra.0]
000000000050ec00 0000000000000188 t (anonymous namespace)::Converter::shiftAddress(nv50_ir::Value*)
000000000050ed90 00000000000002d4 t (anonymous namespace)::Converter::makeSym(unsigned int, int, int, int, unsigned int)
000000000050f070 000000000000008c t (anonymous namespace)::Converter::srcToSym(tgsi::Instruction::SrcRegister, int)
000000000050f100 0000000000000258 t (anonymous namespace)::Converter::storeDst(tgsi::Instruction::DstRegister, int, nv50_ir::Value*, nv50_ir::Value*)
000000000050f360 00000000000006a4 t (anonymous namespace)::Converter::handleFBFETCH(nv50_ir::Value**)
000000000050fa10 0000000000000114 t nv50_ir::MemoryPool::allocate()
000000000050fb30 0000000000000140 t nv50_ir::BuildUtil::getScratch(int, nv50_ir::DataFile)
000000000050fc70 0000000000000154 t nv50_ir::BuildUtil::getSSA(int, nv50_ir::DataFile)
000000000050fdd0 0000000000000d60 t (anonymous namespace)::Converter::fetchSrc(tgsi::Instruction::SrcRegister, int, nv50_ir::Value*)
0000000000510b30 00000000000009a8 t (anonymous namespace)::Converter::fetchSrc(int, int)
00000000005114e0 0000000000000204 t (anonymous namespace)::Converter::buildDot(int)
00000000005116f0 00000000000001dc t nv50_ir::BuildUtil::mkOp(nv50_ir::operation, nv50_ir::DataType, nv50_ir::Value*)
00000000005118d0 0000000000000058 t tgsi::Instruction::texOffsetMask() const
0000000000511930 00000000000001e0 t tgsi::Instruction::srcMask(unsigned int) const
0000000000511b10 0000000000000198 t tgsi::Instruction::inferDstType() const
0000000000511cb0 0000000000000098 t tgsi::Instruction::getSetCond() const
0000000000511d50 000000000000005c t tgsi::Instruction::checkDstSrcAliasing() const
0000000000511db0 00000000000000a0 t tgsi::Source::Source(nv50_ir_prog_info*)
0000000000511db0 00000000000000a0 T tgsi::Source::Source(nv50_ir_prog_info*)
0000000000511e50 0000000000000148 t tgsi::Source::~Source()
0000000000511e50 0000000000000148 T tgsi::Source::~Source()
0000000000511fa0 0000000000000184 t tgsi::Source::scanProperty(tgsi_full_property const*)
0000000000512130 0000000000000050 t tgsi::Source::scanImmediate(tgsi_full_immediate const*)
0000000000512180 0000000000000084 t tgsi::Instruction::getTexture(tgsi::Source const*, int) const
0000000000512210 0000000000000204 t (anonymous namespace)::Converter::setTexRS(nv50_ir::TexInstruction*, unsigned int&, int, int)
0000000000512420 00000000000001f8 t (anonymous namespace)::Converter::handleTXQ(nv50_ir::Value**, nv50_ir::TexQuery, int)
0000000000512620 00000000000003f4 t (anonymous namespace)::Converter::handleTXF(nv50_ir::Value**, int, int) [clone .constprop.0]
0000000000512a20 00000000000000e4 t std::_Rb_tree<nv50_ir::BuildUtil::Location, std::pair<nv50_ir::BuildUtil::Location const, nv50_ir::Value*>, std::_Select1st<std::pair<nv50_ir::BuildUtil::Location const, nv50_ir::Value*> >, std::less<nv50_ir::BuildUtil::Location>, std::allocator<std::pair<nv50_ir::BuildUtil::Location const, nv50_ir::Value*> > >::find(nv50_ir::BuildUtil::Location const&) const
0000000000512b10 0000000000000190 t std::vector<tgsi::Source::TextureView, std::allocator<tgsi::Source::TextureView> >::_M_default_append(unsigned long)
0000000000512ca0 0000000000000188 W std::vector<int, std::allocator<int> >::_M_default_append(unsigned long)
0000000000512e30 0000000000000190 t std::vector<tgsi::Source::MemoryFile, std::allocator<tgsi::Source::MemoryFile> >::_M_default_append(unsigned long)
0000000000512fc0 0000000000000134 W std::pair<std::_Rb_tree_iterator<std::pair<int const, int> >, bool> std::_Rb_tree<int, std::pair<int const, int>, std::_Select1st<std::pair<int const, int> >, std::less<int>, std::allocator<std::pair<int const, int> > >::_M_emplace_unique<std::pair<int, int> >(std::pair<int, int>&&)
0000000000513100 0000000000000188 t std::vector<nv50_ir::Value*, std::allocator<nv50_ir::Value*> >::_M_default_append(unsigned long)
0000000000513290 00000000000005f0 W std::vector<bool, std::allocator<bool> >::_M_fill_insert(std::_Bit_iterator, unsigned long, bool)
0000000000513880 00000000000000a8 W std::_Rb_tree<int, std::pair<int const, std::pair<int, int> >, std::_Select1st<std::pair<int const, std::pair<int, int> > >, std::less<int>, std::allocator<std::pair<int const, std::pair<int, int> > > >::_M_get_insert_unique_pos(int const&)
0000000000513930 0000000000000114 W std::_Rb_tree<int, std::pair<int const, std::pair<int, int> >, std::_Select1st<std::pair<int const, std::pair<int, int> > >, std::less<int>, std::allocator<std::pair<int const, std::pair<int, int> > > >::_M_get_insert_hint_unique_pos(std::_Rb_tree_const_iterator<std::pair<int const, std::pair<int, int> > >, int const&)
0000000000513a50 00000000000000cc W std::pair<std::_Rb_tree_iterator<std::pair<int const, std::pair<int, int> > >, bool> std::_Rb_tree<int, std::pair<int const, std::pair<int, int> >, std::_Select1st<std::pair<int const, std::pair<int, int> > >, std::less<int>, std::allocator<std::pair<int const, std::pair<int, int> > > >::_M_emplace_unique<std::pair<int, std::pair<unsigned int, unsigned int> > >(std::pair<int, std::pair<unsigned int, unsigned int> >&&)
0000000000513b20 0000000000000aa4 t tgsi::Source::scanDeclaration(tgsi_full_declaration const*)
00000000005145d0 00000000000000a8 W std::_Rb_tree<int, int, std::_Identity<int>, std::less<int>, std::allocator<int> >::_M_get_insert_unique_pos(int const&)
0000000000514680 00000000000000bc W std::pair<std::_Rb_tree_iterator<int>, bool> std::_Rb_tree<int, int, std::_Identity<int>, std::less<int>, std::allocator<int> >::_M_insert_unique<int>(int&&)
0000000000514740 0000000000000278 t tgsi::Source::scanInstructionSrc(tgsi::Instruction const&, tgsi::Instruction::SrcRegister const&, unsigned int)
00000000005149c0 00000000000004b4 t tgsi::Source::scanInstruction(tgsi_full_instruction const*)
0000000000514e80 00000000000005a8 t tgsi::Source::scanSource()
0000000000515430 0000000000000128 t void std::vector<nv50_ir::Value*, std::allocator<nv50_ir::Value*> >::_M_realloc_insert<nv50_ir::Value*>(__gnu_cxx::__normal_iterator<nv50_ir::Value**, std::vector<nv50_ir::Value*, std::allocator<nv50_ir::Value*> > >, nv50_ir::Value*&&)
0000000000515560 000000000000015c t (anonymous namespace)::Converter::getImageCoords(std::vector<nv50_ir::Value*, std::allocator<nv50_ir::Value*> >&, int)
00000000005156c0 0000000000000680 t (anonymous namespace)::Converter::handleLOAD(nv50_ir::Value**)
0000000000515d40 0000000000000654 t (anonymous namespace)::Converter::handleSTORE()
00000000005163a0 00000000000000e4 t std::_Rb_tree<nv50_ir::BuildUtil::Location, nv50_ir::BuildUtil::Location, std::_Identity<nv50_ir::BuildUtil::Location>, std::less<nv50_ir::BuildUtil::Location>, std::allocator<nv50_ir::BuildUtil::Location> >::find(nv50_ir::BuildUtil::Location const&) const
0000000000516490 0000000000000c04 t (anonymous namespace)::Converter::BindArgumentsPass::visit(nv50_ir::Function*)
00000000005170a0 00000000000000c0 t std::_Rb_tree_iterator<std::pair<void const* const, void*> > std::_Rb_tree<void const*, std::pair<void const* const, void*>, std::_Select1st<std::pair<void const* const, void*> >, std::less<void const*>, std::allocator<std::pair<void const* const, void*> > >::_M_emplace_hint_unique<std::piecewise_construct_t const&, std::tuple<void const* const&>, std::tuple<> >(std::_Rb_tree_const_iterator<std::pair<void const* const, void*> >, std::piecewise_construct_t const&, std::tuple<void const* const&>&&, std::tuple<>&&) [clone .isra.0]
0000000000517160 00000000000002a8 t nv50_ir::cloneForward(nv50_ir::Function*, nv50_ir::Instruction*)
0000000000517410 0000000000000e44 t (anonymous namespace)::Converter::handleTEX(nv50_ir::Value**, int, int, int, int, int, int)
0000000000518260 0000000000008704 t nv50_ir::Program::makeFromTGSI(nv50_ir_prog_info*)
0000000000520970 0000000000000010 W nv50_ir::DFSIterator::end() const
0000000000520980 0000000000000018 W nv50_ir::DFSIterator::next()
00000000005209a0 0000000000000010 W nv50_ir::DFSIterator::get() const
00000000005209b0 0000000000000008 W nv50_ir::DFSIterator::reset()
00000000005209c0 0000000000000010 W nv50_ir::CFGIterator::get() const
00000000005209d0 0000000000000010 W nv50_ir::CFGIterator::end() const
00000000005209e0 0000000000000018 W nv50_ir::CFGIterator::next()
0000000000520a00 0000000000000008 W nv50_ir::CFGIterator::reset()
0000000000520a10 0000000000000010 W nv50_ir::CFGIterator::~CFGIterator()
0000000000520a10 0000000000000010 W nv50_ir::CFGIterator::~CFGIterator()
0000000000520a20 0000000000000030 W nv50_ir::CFGIterator::~CFGIterator()
0000000000520a50 0000000000000010 W nv50_ir::DFSIterator::~DFSIterator()
0000000000520a50 0000000000000010 W nv50_ir::DFSIterator::~DFSIterator()
0000000000520a60 0000000000000030 W nv50_ir::DFSIterator::~DFSIterator()
0000000000520a90 0000000000000078 t _debug_printf.constprop.0
0000000000520b10 0000000000000014 t nv50_ir::Graph::Graph()
0000000000520b10 0000000000000014 t nv50_ir::Graph::Graph()
0000000000520b30 0000000000000034 t nv50_ir::Graph::insert(nv50_ir::Graph::Node*)
0000000000520b70 0000000000000094 t nv50_ir::Graph::Edge::unlink()
0000000000520c10 0000000000000010 t nv50_ir::Graph::Node::Node(void*)
0000000000520c10 0000000000000010 t nv50_ir::Graph::Node::Node(void*)
0000000000520c20 000000000000006c t nv50_ir::Graph::Node::detach(nv50_ir::Graph::Node*)
0000000000520c90 0000000000000088 t nv50_ir::Graph::Node::cut()
0000000000520d20 00000000000004b8 t nv50_ir::DFSIterator::search(nv50_ir::Graph::Node*, bool, int)
00000000005211e0 0000000000000114 t nv50_ir::Graph::iteratorDFS(bool)
0000000000521300 0000000000000078 t nv50_ir::Graph::~Graph()
0000000000521300 0000000000000078 t nv50_ir::Graph::~Graph()
0000000000521380 0000000000000028 T nv50_ir::Graph::~Graph()
00000000005213b0 000000000000024c t nv50_ir::CFGIterator::search(nv50_ir::Graph::Node*, int)
0000000000521600 00000000000000e4 t nv50_ir::Graph::iteratorCFG()
00000000005216f0 0000000000000118 t nv50_ir::Graph::classifyDFS(nv50_ir::Graph::Node*, int&)
0000000000521810 00000000000000a8 t nv50_ir::Graph::classifyEdges()
00000000005218c0 0000000000000114 t nv50_ir::Graph::Node::attach(nv50_ir::Graph::Node*, nv50_ir::Graph::Edge::Type)
00000000005219e0 00000000000002b0 t nv50_ir::Graph::findLightestPathWeight(nv50_ir::Graph::Node*, nv50_ir::Graph::Node*, std::vector<int, std::allocator<int> > const&)
0000000000521c90 0000000000000008 W nv50_ir::Target::isPostMultiplySupported(nv50_ir::operation, float, int&) const
0000000000521ca0 0000000000000040 T nv50_ir::FlatteningPass::visit(nv50_ir::Function*)
0000000000521ce0 0000000000000008 W nv50_ir::ShallowClonePolicy<nv50_ir::Function>::lookup(void*)
0000000000521cf0 0000000000000004 W nv50_ir::ShallowClonePolicy<nv50_ir::Function>::insert(void const*, void*)
0000000000521d00 00000000000001b8 t nv50_ir::Instruction::isActionEqual(nv50_ir::Instruction const*) const [clone .part.0]
0000000000521ec0 0000000000000078 t _debug_printf.constprop.0
0000000000521f40 0000000000000140 t std::_Rb_tree<void const*, std::pair<void const* const, void*>, std::_Select1st<std::pair<void const* const, void*> >, std::less<void const*>, std::allocator<std::pair<void const* const, void*> > >::_M_erase(std::_Rb_tree_node<std::pair<void const* const, void*> >*) [clone .isra.0]
0000000000522080 000000000000012c t nv50_ir::post_ra_dead(nv50_ir::Instruction*)
00000000005221b0 00000000000000c4 W nv50_ir::Value::~Value()
00000000005221b0 00000000000000c4 t nv50_ir::Value::~Value()
0000000000522280 00000000000000c0 W nv50_ir::Value::~Value()
0000000000522340 0000000000000058 t nv50_ir::Value::getUniqueInsn() const
00000000005223a0 00000000000000b8 t nv50_ir::Instruction::getPredicate() const
0000000000522460 0000000000000190 t nv50_ir::Instruction::isDead() const
00000000005225f0 000000000000010c t nv50_ir::Modifier::applyTo(nv50_ir::ImmediateValue&) const
0000000000522700 00000000000001b4 W nv50_ir::Value::Value(nv50_ir::Value const&)
0000000000522700 00000000000001b4 t nv50_ir::Value::Value(nv50_ir::Value const&)
00000000005228c0 0000000000000098 t nv50_ir::ConstantFolding::opnd3(nv50_ir::Instruction*, nv50_ir::ImmediateValue&)
0000000000522960 0000000000000078 t nv50_ir::MemoryOpt::reset()
00000000005229e0 000000000000014c t nv50_ir::MemoryOpt::getList(nv50_ir::Instruction const*)
0000000000522b30 0000000000000148 t nv50_ir::FlatteningPass::tryPropagateBranch(nv50_ir::BasicBlock*)
0000000000522c80 00000000000005c0 t nv50_ir::Program::optimizeSSA(int)
0000000000523240 000000000000007c t nv50_ir::Program::optimizePostRA(int)
00000000005232c0 0000000000000098 t std::_Deque_iterator<nv50_ir::ValueRef, nv50_ir::ValueRef&, nv50_ir::ValueRef*>::operator[](long) const
0000000000523360 00000000000001a8 t nv50_ir::AlgebraicOpt::handleSLCT(nv50_ir::Instruction*)
0000000000523510 0000000000000150 t nv50_ir::updateLdStOffset(nv50_ir::Instruction*, int, nv50_ir::Function*)
0000000000523660 0000000000000088 t nv50_ir::Instruction::srcExists(unsigned int) const
00000000005236f0 0000000000000068 t nv50_ir::LoadPropagation::isAttribOrSharedLoad(nv50_ir::Instruction*)
0000000000523760 0000000000000294 t nv50_ir::ConstantFolding::expr(nv50_ir::Instruction*, nv50_ir::ImmediateValue&, nv50_ir::ImmediateValue&, nv50_ir::ImmediateValue&)
0000000000523a00 00000000000001a0 t nv50_ir::ConstantFolding::unary(nv50_ir::Instruction*, nv50_ir::ImmediateValue const&)
0000000000523ba0 0000000000000398 t nv50_ir::ConstantFolding::createMul(nv50_ir::DataType, nv50_ir::Value*, nv50_ir::Value*, long, nv50_ir::Value*)
0000000000523f40 000000000000029c t nv50_ir::AlgebraicOpt::handleABS(nv50_ir::Instruction*)
00000000005241e0 000000000000020c t nv50_ir::AlgebraicOpt::handleRCP(nv50_ir::Instruction*)
00000000005243f0 00000000000001c4 t nv50_ir::AlgebraicOpt::handleCVT_CVT(nv50_ir::Instruction*)
00000000005245c0 00000000000000e0 t nv50_ir::LoadPropagation::isImmdLoad(nv50_ir::Instruction*)
00000000005246a0 000000000000083c T nv50_ir::IndirectPropagation::visit(nv50_ir::BasicBlock*)
0000000000524ee0 00000000000001d0 t nv50_ir::ConstantFolding::findOriginForTestWithZero(nv50_ir::Value*)
00000000005250b0 00000000000004f8 t nv50_ir::AlgebraicOpt::tryADDToMADOrSAD(nv50_ir::Instruction*, nv50_ir::operation)
00000000005255b0 00000000000001d8 t nv50_ir::AlgebraicOpt::handleADD(nv50_ir::Instruction*)
0000000000525790 000000000000044c t nv50_ir::AlgebraicOpt::handleCVT_EXTBF(nv50_ir::Instruction*)
0000000000525be0 0000000000000304 t nv50_ir::AlgebraicOpt::handleSUCLAMP(nv50_ir::Instruction*)
0000000000525ef0 00000000000002d0 t nv50_ir::LateAlgebraicOpt::tryADDToSHLADD(nv50_ir::Instruction*)
00000000005261c0 0000000000000188 t nv50_ir::LateAlgebraicOpt::handleADD(nv50_ir::Instruction*)
0000000000526350 00000000000001cc t nv50_ir::MemoryOpt::addRecord(nv50_ir::Instruction*)
0000000000526520 0000000000000258 t nv50_ir::MemoryOpt::Record::overlaps(nv50_ir::Instruction const*) const
0000000000526780 0000000000000104 t nv50_ir::MemoryOpt::lockStores(nv50_ir::Instruction*)
0000000000526890 0000000000000178 t nv50_ir::MemoryOpt::purgeRecords(nv50_ir::Instruction*, nv50_ir::DataFile)
0000000000526a10 00000000000004cc t nv50_ir::MemoryOpt::combineSt(nv50_ir::MemoryOpt::Record*, nv50_ir::Instruction*)
0000000000526ee0 00000000000002cc t nv50_ir::MemoryOpt::findRecord(nv50_ir::Instruction const*, bool, bool&) const
00000000005271b0 0000000000000134 t nv50_ir::FlatteningPass::removeFlow(nv50_ir::Instruction*)
00000000005272f0 0000000000000714 t nv50_ir::MemoryOpt::replaceStFromSt(nv50_ir::Instruction*, nv50_ir::MemoryOpt::Record*)
0000000000527a10 0000000000000348 t nv50_ir::LoadPropagation::checkSwapSrc01(nv50_ir::Instruction*)
0000000000527d60 00000000000004e0 T nv50_ir::LoadPropagation::visit(nv50_ir::BasicBlock*)
0000000000528240 0000000000000260 t nv50_ir::LateAlgebraicOpt::handleMULMAD(nv50_ir::Instruction*) [clone .part.0]
00000000005284a0 000000000000008c T nv50_ir::LateAlgebraicOpt::visit(nv50_ir::Instruction*)
0000000000528530 0000000000000248 t nv50_ir::FlatteningPass::isConstantCondition(nv50_ir::Value*)
0000000000528780 0000000000000098 t std::_Deque_iterator<nv50_ir::ValueDef, nv50_ir::ValueDef&, nv50_ir::ValueDef*>::operator[](long) const
0000000000528820 0000000000000088 t nv50_ir::Instruction::defExists(unsigned int) const
00000000005288b0 0000000000000444 T nv50_ir::ModifierFolding::visit(nv50_ir::BasicBlock*)
0000000000528d00 00000000000002a4 t nv50_ir::AlgebraicOpt::handleCVT_NEG(nv50_ir::Instruction*)
0000000000528fb0 0000000000000398 t nv50_ir::Split64BitOpPreRA::split64MulMad(nv50_ir::Function*, nv50_ir::Instruction*, nv50_ir::DataType)
0000000000529350 0000000000000078 T nv50_ir::Split64BitOpPreRA::visit(nv50_ir::BasicBlock*)
00000000005293d0 0000000000000520 t nv50_ir::MemoryOpt::combineLd(nv50_ir::MemoryOpt::Record*, nv50_ir::Instruction*)
00000000005298f0 00000000000001b4 t nv50_ir::Instruction::isNop() const
0000000000529ab0 0000000000000184 t nv50_ir::FlatteningPass::predicateInstructions(nv50_ir::BasicBlock*, nv50_ir::Value*, nv50_ir::CondCode)
0000000000529c40 00000000000001ec T nv50_ir::CopyPropagation::visit(nv50_ir::BasicBlock*)
0000000000529e30 00000000000001d4 T nv50_ir::MergeSplits::visit(nv50_ir::BasicBlock*)
000000000052a010 000000000000023c t nv50_ir::AlgebraicOpt::handleMINMAX(nv50_ir::Instruction*)
000000000052a250 00000000000003f8 t nv50_ir::ConstantFolding::tryCollapseChainedMULs(nv50_ir::Instruction*, int, nv50_ir::ImmediateValue&)
000000000052a650 00000000000028b8 t nv50_ir::ConstantFolding::opnd(nv50_ir::Instruction*, nv50_ir::ImmediateValue&, int)
000000000052cf10 00000000000002e0 t nv50_ir::AlgebraicOpt::handleNEG(nv50_ir::Instruction*)
000000000052d1f0 0000000000000278 t nv50_ir::AlgebraicOpt::handleEXTBF_RDSV(nv50_ir::Instruction*)
000000000052d470 0000000000000328 t nv50_ir::PostRaLoadPropagation::handleMADforNV50(nv50_ir::Instruction*)
000000000052d7a0 0000000000000294 t nv50_ir::PostRaLoadPropagation::handleMADforNVC0(nv50_ir::Instruction*)
000000000052da40 0000000000000054 T nv50_ir::PostRaLoadPropagation::visit(nv50_ir::Instruction*)
000000000052daa0 0000000000000930 t nv50_ir::ConstantFolding::expr(nv50_ir::Instruction*, nv50_ir::ImmediateValue&, nv50_ir::ImmediateValue&)
000000000052e3d0 00000000000005e8 T nv50_ir::ConstantFolding::visit(nv50_ir::BasicBlock*)
000000000052e9c0 0000000000000578 t nv50_ir::MemoryOpt::replaceLdFromSt(nv50_ir::Instruction*, nv50_ir::MemoryOpt::Record*)
000000000052ef40 00000000000005a0 t nv50_ir::MemoryOpt::replaceLdFromLd(nv50_ir::Instruction*, nv50_ir::MemoryOpt::Record*)
000000000052f4e0 000000000000044c t nv50_ir::MemoryOpt::runOpt(nv50_ir::BasicBlock*)
000000000052f930 0000000000000044 T nv50_ir::MemoryOpt::visit(nv50_ir::BasicBlock*)
000000000052f980 000000000000060c t nv50_ir::FlatteningPass::tryPredicateConditional(nv50_ir::BasicBlock*)
000000000052ff90 000000000000015c T nv50_ir::FlatteningPass::visit(nv50_ir::BasicBlock*)
00000000005300f0 0000000000000910 t nv50_ir::DeadCodeElim::checkSplitLoad(nv50_ir::Instruction*)
0000000000530a00 00000000000002bc T nv50_ir::DeadCodeElim::visit(nv50_ir::BasicBlock*)
0000000000530cc0 0000000000000654 t nv50_ir::Instruction::isResultEqual(nv50_ir::Instruction const*) const
0000000000531320 000000000000040c T nv50_ir::GlobalCSE::visit(nv50_ir::BasicBlock*)
0000000000531730 00000000000008f8 T nv50_ir::LocalCSE::visit(nv50_ir::BasicBlock*)
0000000000532030 00000000000000c0 t std::_Rb_tree_iterator<std::pair<void const* const, void*> > std::_Rb_tree<void const*, std::pair<void const* const, void*>, std::_Select1st<std::pair<void const* const, void*> >, std::less<void const*>, std::allocator<std::pair<void const* const, void*> > >::_M_emplace_hint_unique<std::piecewise_construct_t const&, std::tuple<void const* const&>, std::tuple<> >(std::_Rb_tree_const_iterator<std::pair<void const* const, void*> >, std::piecewise_construct_t const&, std::tuple<void const* const&>&&, std::tuple<>&&) [clone .isra.0]
00000000005320f0 000000000000049c t nv50_ir::AlgebraicOpt::handleLOGOP(nv50_ir::Instruction*)
0000000000532590 00000000000001b0 T nv50_ir::AlgebraicOpt::visit(nv50_ir::BasicBlock*)
0000000000532740 0000000000000070 t _debug_printf
00000000005327b0 0000000000000174 t nv50_ir::Modifier::print(char*, unsigned long) const
0000000000532930 00000000000001e4 T nv50_ir::LValue::print(char*, unsigned long, nv50_ir::DataType) const
0000000000532b20 0000000000000230 T nv50_ir::ImmediateValue::print(char*, unsigned long, nv50_ir::DataType) const
0000000000532d50 0000000000000270 t nv50_ir::Symbol::print(char*, unsigned long, nv50_ir::Value*, nv50_ir::Value*, nv50_ir::DataType) const
0000000000532fc0 0000000000000010 T nv50_ir::Symbol::print(char*, unsigned long, nv50_ir::DataType) const
0000000000532fd0 0000000000001420 t nv50_ir::Instruction::print() const
00000000005343f0 0000000000000040 t nv50_ir::value_cmp(nv50_ir::ValueRef*, nv50_ir::ValueRef*)
0000000000534430 0000000000000070 t _debug_printf
00000000005344a0 0000000000000168 t nv50_ir::RegAlloc::InsertConstraintsPass::isScalarTexGM107(nv50_ir::TexInstruction*) [clone .part.0]
0000000000534610 00000000000001d8 t nv50_ir::GCRA::checkInterference(nv50_ir::GCRA::RIG_Node const*, nv50_ir::Graph::EdgeIterator&) [clone .isra.0]
00000000005347f0 0000000000000134 t nv50_ir::isShortRegOp(nv50_ir::Instruction*) [clone .part.0]
0000000000534930 00000000000000a0 t nv50_ir::RegisterSet::init(nv50_ir::Target const*)
00000000005349d0 0000000000000068 t nv50_ir::RegisterSet::RegisterSet(nv50_ir::Target const*)
00000000005349d0 0000000000000068 T nv50_ir::RegisterSet::RegisterSet(nv50_ir::Target const*)
0000000000534a40 0000000000000074 t nv50_ir::RegisterSet::testOccupy(nv50_ir::DataFile, int, unsigned int)
0000000000534ac0 0000000000001304 T nv50_ir::RegAlloc::ArgumentMovesPass::visit(nv50_ir::BasicBlock*)
0000000000535dd0 00000000000000a0 t nv50_ir::RegAlloc::BuildIntervalsPass::addLiveRange(nv50_ir::Value*, nv50_ir::BasicBlock const*, int)
0000000000535e70 00000000000005c4 t nv50_ir::RegAlloc::buildLiveSets(nv50_ir::BasicBlock*)
0000000000536440 00000000000000d4 t nv50_ir::RegAlloc::BuildIntervalsPass::collectLiveValues(nv50_ir::BasicBlock*)
0000000000536520 000000000000097c T nv50_ir::RegAlloc::BuildIntervalsPass::visit(nv50_ir::BasicBlock*)
0000000000536ea0 0000000000000310 t nv50_ir::GCRA::RIG_Node::init(nv50_ir::RegisterSet const&, nv50_ir::LValue*)
00000000005371b0 000000000000034c t nv50_ir::GCRA::coalesceValues(nv50_ir::Value*, nv50_ir::Value*, bool)
0000000000537500 0000000000000428 t nv50_ir::GCRA::makeCompound(nv50_ir::Instruction*, bool)
0000000000537930 0000000000000178 t nv50_ir::GCRA::GCRA(nv50_ir::Function*, nv50_ir::SpillCodeInserter&)
0000000000537930 0000000000000178 T nv50_ir::GCRA::GCRA(nv50_ir::Function*, nv50_ir::SpillCodeInserter&)
0000000000537ab0 0000000000000570 t nv50_ir::GCRA::buildRIG(nv50_ir::ArrayList&)
0000000000538020 000000000000018c t nv50_ir::GCRA::calculateSpillWeights()
00000000005381b0 0000000000000098 t nv50_ir::GCRA::simplifyEdge(nv50_ir::GCRA::RIG_Node*, nv50_ir::GCRA::RIG_Node*)
0000000000538250 0000000000000270 t nv50_ir::GCRA::simplifyNode(nv50_ir::GCRA::RIG_Node*)
00000000005384c0 0000000000000144 t nv50_ir::GCRA::simplify()
0000000000538610 0000000000000370 t nv50_ir::SpillCodeInserter::assignSlot(nv50_ir::Interval const&, unsigned int)
0000000000538980 0000000000000348 t nv50_ir::GCRA::selectRegisters()
0000000000538cd0 0000000000000080 t nv50_ir::SpillCodeInserter::offsetSlot(nv50_ir::Value*, nv50_ir::LValue const*)
0000000000538d50 0000000000000770 t nv50_ir::SpillCodeInserter::spill(nv50_ir::Instruction*, nv50_ir::Value*, nv50_ir::LValue*)
00000000005394c0 000000000000075c t nv50_ir::SpillCodeInserter::unspill(nv50_ir::Instruction*, nv50_ir::LValue*, nv50_ir::Value*)
0000000000539c20 000000000000056c t nv50_ir::GCRA::resolveSplitsAndMerges()
000000000053a190 0000000000000328 t nv50_ir::GCRA::cleanup(bool)
000000000053a4c0 00000000000001a0 t nv50_ir::RegAlloc::InsertConstraintsPass::textureMask(nv50_ir::TexInstruction*)
000000000053a660 0000000000000154 t nv50_ir::RegAlloc::InsertConstraintsPass::addHazard(nv50_ir::Instruction*, nv50_ir::ValueRef const*)
000000000053a7c0 00000000000007dc t nv50_ir::RegAlloc::InsertConstraintsPass::condenseDefs(nv50_ir::Instruction*, int, int)
000000000053afa0 0000000000000138 t nv50_ir::RegAlloc::InsertConstraintsPass::condenseDefs(nv50_ir::Instruction*)
000000000053b0e0 0000000000000584 t nv50_ir::RegAlloc::InsertConstraintsPass::condenseSrcs(nv50_ir::Instruction*, int, int)
000000000053b670 0000000000000114 t nv50_ir::RegAlloc::InsertConstraintsPass::handleScalarTexGM107(nv50_ir::TexInstruction*)
000000000053b790 00000000000004e8 t nv50_ir::RegAlloc::InsertConstraintsPass::texConstraintGM107(nv50_ir::TexInstruction*)
000000000053bc80 0000000000000398 t nv50_ir::RegAlloc::InsertConstraintsPass::texConstraintNVE0(nv50_ir::TexInstruction*)
000000000053c020 00000000000001c0 t nv50_ir::RegAlloc::InsertConstraintsPass::texConstraintNVC0(nv50_ir::TexInstruction*)
000000000053c1e0 0000000000000d04 t nv50_ir::GCRA::doCoalesce(nv50_ir::ArrayList&, unsigned int)
000000000053cef0 0000000000000110 t nv50_ir::GCRA::coalesce(nv50_ir::ArrayList&)
000000000053d000 0000000000000c04 t nv50_ir::RegAlloc::InsertConstraintsPass::insertConstraintMove(nv50_ir::Instruction*, int)
000000000053dc10 00000000000004cc t nv50_ir::RegAlloc::InsertConstraintsPass::insertConstraintMoves()
000000000053e0e0 0000000000000090 t nv50_ir::RegAlloc::InsertConstraintsPass::exec(nv50_ir::Function*)
000000000053e170 00000000000008dc t nv50_ir::RegAlloc::InsertConstraintsPass::texConstraintNV50(nv50_ir::TexInstruction*)
000000000053ea50 0000000000000450 T nv50_ir::RegAlloc::InsertConstraintsPass::visit(nv50_ir::BasicBlock*)
000000000053eea0 000000000000006c W std::_Deque_base<nv50_ir::BasicBlock*, std::allocator<nv50_ir::BasicBlock*> >::~_Deque_base()
000000000053eea0 000000000000006c t std::_Deque_base<nv50_ir::BasicBlock*, std::allocator<nv50_ir::BasicBlock*> >::~_Deque_base()
000000000053ef10 000000000000007c t std::_Hashtable<std::pair<nv50_ir::Instruction*, nv50_ir::BasicBlock*>, std::pair<std::pair<nv50_ir::Instruction*, nv50_ir::BasicBlock*> const, nv50_ir::Value*>, std::allocator<std::pair<std::pair<nv50_ir::Instruction*, nv50_ir::BasicBlock*> const, nv50_ir::Value*> >, std::__detail::_Select1st, std::equal_to<std::pair<nv50_ir::Instruction*, nv50_ir::BasicBlock*> >, nv50_ir::PhiMapHash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::_M_find_before_node(unsigned long, std::pair<nv50_ir::Instruction*, nv50_ir::BasicBlock*> const&, unsigned long) const
000000000053ef90 0000000000000244 t std::pair<std::__detail::_Node_iterator<std::pair<std::pair<nv50_ir::Instruction*, nv50_ir::BasicBlock*> const, nv50_ir::Value*>, false, true>, bool> std::_Hashtable<std::pair<nv50_ir::Instruction*, nv50_ir::BasicBlock*>, std::pair<std::pair<nv50_ir::Instruction*, nv50_ir::BasicBlock*> const, nv50_ir::Value*>, std::allocator<std::pair<std::pair<nv50_ir::Instruction*, nv50_ir::BasicBlock*> const, nv50_ir::Value*> >, std::__detail::_Select1st, std::equal_to<std::pair<nv50_ir::Instruction*, nv50_ir::BasicBlock*> >, nv50_ir::PhiMapHash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::_M_emplace<std::pair<std::pair<nv50_ir::Instruction*, nv50_ir::BasicBlock*>, nv50_ir::Value*> >(std::integral_constant<bool, true>, std::pair<std::pair<nv50_ir::Instruction*, nv50_ir::BasicBlock*>, nv50_ir::Value*>&&) [clone .isra.0]
000000000053f1e0 0000000000000710 t nv50_ir::RegAlloc::PhiMovesPass::splitEdges(nv50_ir::BasicBlock*)
000000000053f8f0 000000000000065c T nv50_ir::RegAlloc::PhiMovesPass::visit(nv50_ir::BasicBlock*)
000000000053ff50 00000000000000d0 t void std::__insertion_sort<__gnu_cxx::__normal_iterator<nv50_ir::ValueRef**, std::vector<nv50_ir::ValueRef*, std::allocator<nv50_ir::ValueRef*> > >, __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(nv50_ir::ValueRef*, nv50_ir::ValueRef*)> >(__gnu_cxx::__normal_iterator<nv50_ir::ValueRef**, std::vector<nv50_ir::ValueRef*, std::allocator<nv50_ir::ValueRef*> > >, __gnu_cxx::__normal_iterator<nv50_ir::ValueRef**, std::vector<nv50_ir::ValueRef*, std::allocator<nv50_ir::ValueRef*> > >, __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(nv50_ir::ValueRef*, nv50_ir::ValueRef*)>)
0000000000540020 0000000000000180 t void std::__adjust_heap<__gnu_cxx::__normal_iterator<nv50_ir::ValueRef**, std::vector<nv50_ir::ValueRef*, std::allocator<nv50_ir::ValueRef*> > >, long, nv50_ir::ValueRef*, __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(nv50_ir::ValueRef*, nv50_ir::ValueRef*)> >(__gnu_cxx::__normal_iterator<nv50_ir::ValueRef**, std::vector<nv50_ir::ValueRef*, std::allocator<nv50_ir::ValueRef*> > >, long, long, nv50_ir::ValueRef*, __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(nv50_ir::ValueRef*, nv50_ir::ValueRef*)>)
00000000005401a0 0000000000000208 t void std::__introsort_loop<__gnu_cxx::__normal_iterator<nv50_ir::ValueRef**, std::vector<nv50_ir::ValueRef*, std::allocator<nv50_ir::ValueRef*> > >, long, __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(nv50_ir::ValueRef*, nv50_ir::ValueRef*)> >(__gnu_cxx::__normal_iterator<nv50_ir::ValueRef**, std::vector<nv50_ir::ValueRef*, std::allocator<nv50_ir::ValueRef*> > >, __gnu_cxx::__normal_iterator<nv50_ir::ValueRef**, std::vector<nv50_ir::ValueRef*, std::allocator<nv50_ir::ValueRef*> > >, long, __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(nv50_ir::ValueRef*, nv50_ir::ValueRef*)>)
00000000005403b0 00000000000006f4 t nv50_ir::SpillCodeInserter::run(std::__cxx11::list<std::pair<nv50_ir::Value*, nv50_ir::Value*>, std::allocator<std::pair<nv50_ir::Value*, nv50_ir::Value*> > > const&)
0000000000540ab0 00000000000004e4 t nv50_ir::GCRA::allocateRegisters(nv50_ir::ArrayList&)
0000000000540fa0 0000000000000230 t nv50_ir::GCRA::~GCRA()
0000000000540fa0 0000000000000230 T nv50_ir::GCRA::~GCRA()
00000000005411d0 00000000000003d4 t nv50_ir::RegAlloc::execFunc()
00000000005415b0 00000000000000d4 t nv50_ir::RegAlloc::exec()
0000000000541690 000000000000005c t nv50_ir::Program::registerAllocation()
00000000005416f0 0000000000000010 W nv50_ir::DominatorTree::~DominatorTree()
00000000005416f0 0000000000000010 W nv50_ir::DominatorTree::~DominatorTree()
0000000000541700 0000000000000034 W nv50_ir::DominatorTree::~DominatorTree()
0000000000541740 0000000000000090 t nv50_ir::DominatorTree::buildDFS(nv50_ir::Graph::Node*)
00000000005417d0 00000000000000ac t nv50_ir::DominatorTree::squash(int)
0000000000541880 000000000000036c t nv50_ir::DominatorTree::build()
0000000000541bf0 0000000000000154 t nv50_ir::DominatorTree::DominatorTree(nv50_ir::Graph*)
0000000000541bf0 0000000000000154 T nv50_ir::DominatorTree::DominatorTree(nv50_ir::Graph*)
0000000000541d50 000000000000017c t nv50_ir::DominatorTree::findDominanceFrontiers()
0000000000541ed0 00000000000004e8 t nv50_ir::Function::buildLiveSetsPreSSA(nv50_ir::BasicBlock*, int)
00000000005423c0 00000000000001e0 t nv50_ir::Function::buildDefSetsPreSSA(nv50_ir::BasicBlock*, int)
00000000005425a0 0000000000000078 t nv50_ir::RenamePass::RenamePass(nv50_ir::Function*)
00000000005425a0 0000000000000078 T nv50_ir::RenamePass::RenamePass(nv50_ir::Function*)
0000000000542620 0000000000000074 t nv50_ir::RenamePass::~RenamePass()
0000000000542620 0000000000000074 T nv50_ir::RenamePass::~RenamePass()
00000000005426a0 00000000000002f8 t nv50_ir::RenamePass::mkUndefined(nv50_ir::Value*)
00000000005429a0 0000000000000dac t nv50_ir::RenamePass::search(nv50_ir::BasicBlock*)
0000000000543750 0000000000000544 t nv50_ir::Function::convertToSSA()
0000000000543ca0 00000000000000a4 t nv50_ir::Program::convertToSSA()
0000000000543d50 0000000000000070 t _debug_printf
0000000000543dc0 00000000000000c0 t nv50_ir::CodeEmitter::prepareEmission(nv50_ir::Function*)
0000000000543e80 0000000000000390 T nv50_ir::CodeEmitter::prepareEmission(nv50_ir::BasicBlock*)
0000000000544210 0000000000000164 T nv50_ir::CodeEmitter::prepareEmission(nv50_ir::Program*)
0000000000544380 0000000000000048 t nv50_ir::Target::create(unsigned int)
00000000005443d0 0000000000000018 t nv50_ir::Target::destroy(nv50_ir::Target*)
00000000005443f0 0000000000000014 T nv50_ir::CodeEmitter::CodeEmitter(nv50_ir::Target const*)
00000000005443f0 0000000000000014 t nv50_ir::CodeEmitter::CodeEmitter(nv50_ir::Target const*)
0000000000544410 00000000000000ec t nv50_ir::Program::emitSymbolTable(nv50_ir_prog_info*)
0000000000544500 000000000000023c t nv50_ir::Program::emitBinary(nv50_ir_prog_info*)
0000000000544740 00000000000000fc t nv50_ir::CodeEmitter::addReloc(nv50_ir::RelocEntry::Type, int, unsigned int, unsigned int, int)
0000000000544840 00000000000000ec t nv50_ir::CodeEmitter::addInterp(int, int, void (*)(nv50_ir::FixupEntry const*, unsigned int*, nv50_ir::FixupData const&))
0000000000544930 00000000000000c0 t nv50_ir_relocate_code
00000000005449f0 0000000000000084 t nv50_ir_apply_fixups
0000000000544a80 000000000000008c t nv50_ir_get_target_library
0000000000544b10 000000000000000c W nv50_ir::DLList::Iterator::get() const
0000000000544b20 0000000000000010 W nv50_ir::DLList::Iterator::end() const
0000000000544b30 0000000000000004 W nv50_ir::DLList::Iterator::~Iterator()
0000000000544b30 0000000000000004 W nv50_ir::DLList::Iterator::~Iterator()
0000000000544b40 0000000000000030 t nv50_ir::DLList::Iterator::erase()
0000000000544b70 0000000000000008 W nv50_ir::DLList::Iterator::~Iterator()
0000000000544b80 0000000000000068 t nv50_ir::DLList::Iterator::insert(void*)
0000000000544bf0 0000000000000070 t _debug_printf
0000000000544c60 000000000000007c W nv50_ir::DLList::Iterator::next()
0000000000544ce0 0000000000000048 t nv50_ir::DLList::clear()
0000000000544d30 0000000000000090 t nv50_ir::Stack::moveTo(nv50_ir::Stack&)
0000000000544dc0 0000000000000038 t nv50_ir::Interval::~Interval()
0000000000544dc0 0000000000000038 T nv50_ir::Interval::~Interval()
0000000000544e00 000000000000003c t nv50_ir::Interval::clear()
0000000000544e40 0000000000000184 t nv50_ir::Interval::extend(int, int)
0000000000544fd0 0000000000000040 t nv50_ir::Interval::Interval(nv50_ir::Interval const&)
0000000000544fd0 0000000000000040 T nv50_ir::Interval::Interval(nv50_ir::Interval const&)
0000000000545010 0000000000000090 t nv50_ir::Interval::overlaps(nv50_ir::Interval const&) const
00000000005450a0 0000000000000038 t nv50_ir::Interval::insert(nv50_ir::Interval const&)
00000000005450e0 0000000000000058 t nv50_ir::Interval::unify(nv50_ir::Interval&)
0000000000545140 000000000000006c t nv50_ir::Interval::print() const
00000000005451b0 0000000000000048 t nv50_ir::BitSet::andNot(nv50_ir::BitSet const&)
0000000000545200 0000000000000048 t nv50_ir::BitSet::operator|=(nv50_ir::BitSet const&)
0000000000545250 00000000000000c8 t nv50_ir::BitSet::allocate(unsigned int, bool)
0000000000545320 0000000000000058 t nv50_ir::BitSet::popCount() const
0000000000545380 0000000000000050 t nv50_ir::BitSet::fill(unsigned int)
00000000005453d0 0000000000000068 t nv50_ir::BitSet::setOr(nv50_ir::BitSet*, nv50_ir::BitSet*)
0000000000545440 0000000000000210 t nv50_ir::BitSet::findFreeRange(unsigned int, unsigned int) const
0000000000545650 0000000000000018 T nv50_ir::TargetGM107::getBuiltinCode(unsigned int const**, unsigned int*) const
0000000000545670 0000000000000010 T nv50_ir::TargetGM107::getBuiltinOffset(int) const
0000000000545680 000000000000006c T nv50_ir::TargetGM107::isOpSupported(nv50_ir::operation, nv50_ir::DataType) const
00000000005456f0 0000000000000058 T nv50_ir::TargetGM107::isReuseSupported(nv50_ir::Instruction const*) const
0000000000545750 0000000000000008 T nv50_ir::TargetGM107::canDualIssue(nv50_ir::Instruction const*, nv50_ir::Instruction const*) const
0000000000545760 000000000000000c T nv50_ir::TargetGM107::isCS2RSV(nv50_ir::SVSemantic) const
0000000000545770 0000000000000004 W nv50_ir::TargetGM107::~TargetGM107()
0000000000545770 0000000000000004 W nv50_ir::TargetGM107::~TargetGM107()
0000000000545780 0000000000000004 T nv50_ir::TargetGM107::getCodeEmitter(nv50_ir::Program::Type)
0000000000545790 0000000000000008 W nv50_ir::TargetGM107::~TargetGM107()
00000000005457a0 0000000000000118 T nv50_ir::TargetGM107::runLegalizePass(nv50_ir::Program*, nv50_ir::CGStage) const
00000000005458c0 00000000000002a4 T nv50_ir::TargetGM107::getReadLatency(nv50_ir::Instruction const*) const
0000000000545b70 0000000000000330 T nv50_ir::TargetGM107::isBarrierRequired(nv50_ir::Instruction const*) const
0000000000545ea0 0000000000000338 T nv50_ir::TargetGM107::getLatency(nv50_ir::Instruction const*) const
00000000005461e0 0000000000000040 t nv50_ir::getTargetGM107(unsigned int)
0000000000546220 000000000000006c T nv50_ir::TargetNVC0::getBuiltinCode(unsigned int const**, unsigned int*) const
0000000000546290 0000000000000054 T nv50_ir::TargetNVC0::getBuiltinOffset(int) const
00000000005462f0 0000000000000150 t nv50_ir::TargetNVC0::initProps(nv50_ir::opProperties const*, int)
0000000000546440 00000000000002f4 t nv50_ir::TargetNVC0::initOpInfo()
0000000000546740 0000000000000034 T nv50_ir::TargetNVC0::TargetNVC0(unsigned int)
0000000000546740 0000000000000034 t nv50_ir::TargetNVC0::TargetNVC0(unsigned int)
0000000000546780 00000000000000c8 T nv50_ir::TargetNVC0::getFileSize(nv50_ir::DataFile) const
0000000000546850 0000000000000018 T nv50_ir::TargetNVC0::getFileUnit(nv50_ir::DataFile) const
0000000000546870 00000000000000f0 T nv50_ir::TargetNVC0::getSVAddress(nv50_ir::DataFile, nv50_ir::Symbol const*) const
0000000000546960 00000000000007bc T nv50_ir::TargetNVC0::insnCanLoad(nv50_ir::Instruction const*, int, nv50_ir::Instruction const*) const
0000000000547120 00000000000000ec T nv50_ir::TargetNVC0::insnCanLoadOffset(nv50_ir::Instruction const*, int, int) const
0000000000547210 0000000000000084 T nv50_ir::TargetNVC0::isAccessSupported(nv50_ir::DataFile, nv50_ir::DataType) const
00000000005472a0 0000000000000034 T nv50_ir::TargetNVC0::isOpSupported(nv50_ir::operation, nv50_ir::DataType) const
00000000005472e0 0000000000000324 T nv50_ir::TargetNVC0::isModSupported(nv50_ir::Instruction const*, int, nv50_ir::Modifier) const
0000000000547610 00000000000000c8 T nv50_ir::TargetNVC0::mayPredicate(nv50_ir::Instruction const*, nv50_ir::Value const*) const
00000000005476e0 0000000000000134 T nv50_ir::TargetNVC0::isSatSupported(nv50_ir::Instruction const*) const
0000000000547820 0000000000000078 T nv50_ir::TargetNVC0::isPostMultiplySupported(nv50_ir::operation, float, int&) const
00000000005478a0 0000000000000170 T nv50_ir::TargetNVC0::getLatency(nv50_ir::Instruction const*) const
0000000000547a10 0000000000000090 T nv50_ir::TargetNVC0::getThroughput(nv50_ir::Instruction const*) const
0000000000547aa0 00000000000002ec T nv50_ir::TargetNVC0::canDualIssue(nv50_ir::Instruction const*, nv50_ir::Instruction const*) const
0000000000547d90 000000000000005c t nvc0_decoder_bsp_begin
0000000000547df0 00000000000001d8 t nvc0_decoder_bsp_next
0000000000547fd0 00000000000003a0 t nvc0_decoder_bsp_end
0000000000548370 0000000000000040 t util_hash_crc32
00000000005483b0 00000000000001ec t _mesa_parse_arb_fragment_program
00000000005485a0 0000000000000140 t _mesa_parse_arb_vertex_program
00000000005486e0 00000000000000d0 t clear_cache
00000000005487b0 0000000000000094 t rehash
0000000000548850 000000000000005c t _mesa_new_program_cache
00000000005488b0 0000000000000030 t _mesa_delete_program_cache
00000000005488e0 0000000000000030 t _mesa_delete_shader_cache
0000000000548910 00000000000000f0 t _mesa_search_program_cache
0000000000548a00 0000000000000120 t _mesa_program_cache_insert
0000000000548b20 0000000000000120 t _mesa_shader_cache_insert
0000000000548c40 00000000000000c0 t _mesa_init_instructions
0000000000548d00 000000000000002c t _mesa_copy_instructions
0000000000548d30 000000000000001c t _mesa_num_inst_src_regs
0000000000548d50 000000000000001c t _mesa_num_inst_dst_regs
0000000000548d70 0000000000000060 t _mesa_opcode_string
0000000000548dd0 0000000000000080 t get_value.isra.0
0000000000548e50 0000000000000708 t _mesa_constant_fold
0000000000549560 00000000000000c0 t yytnamerr
0000000000549620 0000000000000280 t yysyntax_error
00000000005498a0 00000000000000a0 t asm_instruction_set_operands
0000000000549940 0000000000000084 t add_state_reference
00000000005499d0 0000000000000108 t initialize_symbol_from_state
0000000000549ae0 0000000000000100 t initialize_symbol_from_param
0000000000549be0 00000000000000ec t make_error_string
0000000000549cd0 00000000000000a4 t yyerror
0000000000549d80 0000000000000088 t validate_inputs
0000000000549e10 0000000000000150 t declare_variable
0000000000549f60 00000000000000ac t asm_instruction_ctor.constprop.0
000000000054a010 0000000000003184 t yyparse.isra.0
000000000054d1a0 0000000000000340 t _mesa_parse_arb_program
000000000054d4e0 00000000000000a4 t init_velement_64bit
000000000054d590 00000000000004e4 T st_update_array
000000000054da80 0000000000000140 t st_bind_atomics
000000000054dbc0 00000000000000c8 t st_bind_hw_atomic_buffers.part.0
000000000054dc90 0000000000000018 T st_bind_vs_atomics
000000000054dcb0 0000000000000018 T st_bind_fs_atomics
000000000054dcd0 0000000000000018 T st_bind_gs_atomics
000000000054dcf0 0000000000000018 T st_bind_tcs_atomics
000000000054dd10 0000000000000018 T st_bind_tes_atomics
000000000054dd30 0000000000000024 T st_bind_cs_atomics
000000000054dd60 0000000000000010 T st_bind_hw_atomic_buffers
000000000054dd70 0000000000000198 t translate_blend
000000000054df10 00000000000004c8 T st_update_blend
000000000054e3e0 0000000000000034 T st_update_blend_color
000000000054e420 0000000000000004 W ir_expression_flattening_visitor::~ir_expression_flattening_visitor()
000000000054e420 0000000000000004 W ir_expression_flattening_visitor::~ir_expression_flattening_visitor()
000000000054e430 0000000000000008 W ir_expression_flattening_visitor::~ir_expression_flattening_visitor()
000000000054e440 0000000000000134 T ir_expression_flattening_visitor::handle_rvalue(ir_rvalue**)
000000000054e580 000000000000007c t do_expression_flattening(exec_list*, bool (*)(ir_instruction*))
000000000054e600 0000000000000024 t prolog
000000000054e630 000000000000008c t report_error
000000000054e6c0 00000000000000b4 t iter_immediate
000000000054e780 0000000000000070 t regs_hash_destroy
000000000054e7f0 0000000000000074 t iter_property
000000000054e870 0000000000000090 t report_warning.constprop.0
000000000054e900 00000000000001ec t check_register_usage.isra.0
000000000054eaf0 00000000000002e8 t iter_instruction
000000000054ede0 000000000000010c t epilog
000000000054eef0 00000000000000a0 t check_and_declare
000000000054ef90 00000000000001c8 t iter_declaration
000000000054f160 000000000000010c t tgsi_sanity_check
000000000054f270 0000000000000070 t nouveau_vp3_bsp_begin
000000000054f2e0 0000000000000090 t nouveau_vp3_bsp_next
000000000054f370 000000000000034c t nouveau_vp3_bsp_end
000000000054f6c0 00000000000000fc t nouveau_vp3_handle_references
000000000054f7c0 00000000000001a4 t nouveau_vp3_fill_picparm_mpeg4_vp
000000000054f970 0000000000000478 t nouveau_vp3_fill_picparm_h264_vp
000000000054fdf0 00000000000005fc t nouveau_vp3_vp_caps
00000000005503f0 0000000000000140 t std::_Rb_tree<void const*, std::pair<void const* const, void*>, std::_Select1st<std::pair<void const* const, void*> >, std::less<void const*>, std::allocator<std::pair<void const* const, void*> > >::_M_erase(std::_Rb_tree_node<std::pair<void const* const, void*> >*) [clone .isra.0]
0000000000550530 0000000000000038 t nv50_ir::BuildUtil::BuildUtil()
0000000000550530 0000000000000038 T nv50_ir::BuildUtil::BuildUtil()
0000000000550570 000000000000003c T nv50_ir::BuildUtil::BuildUtil(nv50_ir::Program*)
0000000000550570 000000000000003c t nv50_ir::BuildUtil::BuildUtil(nv50_ir::Program*)
00000000005505b0 0000000000000228 t nv50_ir::BuildUtil::mkOp1(nv50_ir::operation, nv50_ir::DataType, nv50_ir::Value*, nv50_ir::Value*)
00000000005507e0 0000000000000240 t nv50_ir::BuildUtil::mkOp2(nv50_ir::operation, nv50_ir::DataType, nv50_ir::Value*, nv50_ir::Value*, nv50_ir::Value*)
0000000000550a20 0000000000000284 t nv50_ir::BuildUtil::mkOp3(nv50_ir::operation, nv50_ir::DataType, nv50_ir::Value*, nv50_ir::Value*, nv50_ir::Value*, nv50_ir::Value*)
0000000000550cb0 0000000000000230 t nv50_ir::BuildUtil::mkLoad(nv50_ir::DataType, nv50_ir::Value*, nv50_ir::Symbol*, nv50_ir::Value*)
0000000000550ee0 0000000000000238 t nv50_ir::BuildUtil::mkStore(nv50_ir::operation, nv50_ir::DataType, nv50_ir::Symbol*, nv50_ir::Value*, nv50_ir::Value*)
0000000000551120 00000000000001dc t nv50_ir::BuildUtil::mkFetch(nv50_ir::Value*, nv50_ir::DataType, nv50_ir::DataFile, int, nv50_ir::Value*, nv50_ir::Value*)
0000000000551300 00000000000001dc t nv50_ir::BuildUtil::mkInterp(unsigned int, nv50_ir::Value*, int, nv50_ir::Value*)
00000000005514e0 0000000000000210 t nv50_ir::BuildUtil::mkMov(nv50_ir::Value*, nv50_ir::Value*, nv50_ir::DataType)
00000000005516f0 0000000000000418 t nv50_ir::BuildUtil::mkMovToReg(int, nv50_ir::Value*)
0000000000551b10 0000000000000420 t nv50_ir::BuildUtil::mkMovFromReg(nv50_ir::Value*, int)
0000000000551f30 0000000000000234 t nv50_ir::BuildUtil::mkCvt(nv50_ir::operation, nv50_ir::DataType, nv50_ir::Value*, nv50_ir::DataType, nv50_ir::Value*)
0000000000552170 0000000000000288 t nv50_ir::BuildUtil::mkCmp(nv50_ir::operation, nv50_ir::CondCode, nv50_ir::DataType, nv50_ir::Value*, nv50_ir::DataType, nv50_ir::Value*, nv50_ir::Value*, nv50_ir::Value*)
0000000000552400 00000000000002a0 t nv50_ir::BuildUtil::mkTex(nv50_ir::operation, nv50_ir::TexTarget, unsigned short, unsigned short, std::vector<nv50_ir::Value*, std::allocator<nv50_ir::Value*> > const&, std::vector<nv50_ir::Value*, std::allocator<nv50_ir::Value*> > const&)
00000000005526a0 0000000000000044 t nv50_ir::BuildUtil::mkQuadop(unsigned char, nv50_ir::Value*, unsigned char, nv50_ir::Value*, nv50_ir::Value*)
00000000005526f0 0000000000000568 t nv50_ir::BuildUtil::mkSplit(nv50_ir::Value**, unsigned char, nv50_ir::Value*)
0000000000552c60 0000000000000218 t nv50_ir::BuildUtil::mkFlow(nv50_ir::operation, void*, nv50_ir::CondCode, nv50_ir::Value*)
0000000000552e80 00000000000004c4 t nv50_ir::BuildUtil::mkClobber(nv50_ir::DataFile, unsigned int, int)
0000000000553350 000000000000021c t nv50_ir::BuildUtil::mkImm(unsigned int)
0000000000553570 0000000000000008 t nv50_ir::BuildUtil::mkImm(float)
0000000000553580 000000000000015c t nv50_ir::BuildUtil::mkImm(double)
00000000005536e0 0000000000000170 t nv50_ir::BuildUtil::loadImm(nv50_ir::Value*, float)
0000000000553850 0000000000000298 t nv50_ir::BuildUtil::loadImm(nv50_ir::Value*, double)
0000000000553af0 0000000000000170 t nv50_ir::BuildUtil::loadImm(nv50_ir::Value*, unsigned int)
0000000000553c60 0000000000000180 t nv50_ir::BuildUtil::mkSymbol(nv50_ir::DataFile, signed char, nv50_ir::DataType, unsigned int)
0000000000553de0 0000000000000198 t nv50_ir::BuildUtil::mkSysVal(nv50_ir::SVSemantic, unsigned int)
0000000000553f80 000000000000019c t nv50_ir::BuildUtil::DataArray::setup(unsigned int, unsigned int, unsigned int, int, int, int, nv50_ir::DataFile, signed char)
0000000000554120 00000000000001a0 t nv50_ir::BuildUtil::DataArray::mkSymbol(int, int)
00000000005542c0 0000000000000138 t std::pair<std::_Rb_tree_iterator<std::pair<nv50_ir::Value* const, nv50_ir::BuildUtil::Location> >, bool> std::_Rb_tree<nv50_ir::Value*, std::pair<nv50_ir::Value* const, nv50_ir::BuildUtil::Location>, std::_Select1st<std::pair<nv50_ir::Value* const, nv50_ir::BuildUtil::Location> >, std::less<nv50_ir::Value*>, std::allocator<std::pair<nv50_ir::Value* const, nv50_ir::BuildUtil::Location> > >::_M_emplace_unique<std::pair<nv50_ir::Value*, nv50_ir::BuildUtil::Location> >(std::pair<nv50_ir::Value*, nv50_ir::BuildUtil::Location>&&)
0000000000554400 0000000000000158 t std::_Rb_tree<nv50_ir::BuildUtil::Location, std::pair<nv50_ir::BuildUtil::Location const, nv50_ir::Value*>, std::_Select1st<std::pair<nv50_ir::BuildUtil::Location const, nv50_ir::Value*> >, std::less<nv50_ir::BuildUtil::Location>, std::allocator<std::pair<nv50_ir::BuildUtil::Location const, nv50_ir::Value*> > >::_M_get_insert_unique_pos(nv50_ir::BuildUtil::Location const&)
0000000000554560 000000000000011c t std::pair<std::_Rb_tree_iterator<std::pair<nv50_ir::BuildUtil::Location const, nv50_ir::Value*> >, bool> std::_Rb_tree<nv50_ir::BuildUtil::Location, std::pair<nv50_ir::BuildUtil::Location const, nv50_ir::Value*>, std::_Select1st<std::pair<nv50_ir::BuildUtil::Location const, nv50_ir::Value*> >, std::less<nv50_ir::BuildUtil::Location>, std::allocator<std::pair<nv50_ir::BuildUtil::Location const, nv50_ir::Value*> > >::_M_emplace_unique<std::pair<nv50_ir::BuildUtil::Location, nv50_ir::Value*> >(std::pair<nv50_ir::BuildUtil::Location, nv50_ir::Value*>&&)
0000000000554680 0000000000000358 t nv50_ir::BuildUtil::DataArray::acquire(nv50_ir::bimap<nv50_ir::BuildUtil::Location, nv50_ir::Value*>&, int, int)
00000000005549e0 000000000000054c t nv50_ir::BuildUtil::DataArray::load(nv50_ir::bimap<nv50_ir::BuildUtil::Location, nv50_ir::Value*>&, int, int, nv50_ir::Value*)
0000000000554f30 0000000000000328 t nv50_ir::BuildUtil::DataArray::store(nv50_ir::bimap<nv50_ir::BuildUtil::Location, nv50_ir::Value*>&, int, int, nv50_ir::Value*, nv50_ir::Value*)
0000000000555260 00000000000000c0 t std::_Rb_tree_iterator<std::pair<void const* const, void*> > std::_Rb_tree<void const*, std::pair<void const* const, void*>, std::_Select1st<std::pair<void const* const, void*> >, std::less<void const*>, std::allocator<std::pair<void const* const, void*> > >::_M_emplace_hint_unique<std::piecewise_construct_t const&, std::tuple<void const* const&>, std::tuple<> >(std::_Rb_tree_const_iterator<std::pair<void const* const, void*> >, std::piecewise_construct_t const&, std::tuple<void const* const&>&&, std::tuple<>&&) [clone .isra.0]
0000000000555320 0000000000000b2c t nv50_ir::BuildUtil::split64BitOpPostRA(nv50_ir::Function*, nv50_ir::Instruction*, nv50_ir::Value*, nv50_ir::Value*)
0000000000555e50 00000000000000c8 t std::_Rb_tree_node<std::pair<nv50_ir::BuildUtil::Location const, nv50_ir::Value*> >* std::_Rb_tree<nv50_ir::BuildUtil::Location, std::pair<nv50_ir::BuildUtil::Location const, nv50_ir::Value*>, std::_Select1st<std::pair<nv50_ir::BuildUtil::Location const, nv50_ir::Value*> >, std::less<nv50_ir::BuildUtil::Location>, std::allocator<std::pair<nv50_ir::BuildUtil::Location const, nv50_ir::Value*> > >::_M_copy<false, std::_Rb_tree<nv50_ir::BuildUtil::Location, std::pair<nv50_ir::BuildUtil::Location const, nv50_ir::Value*>, std::_Select1st<std::pair<nv50_ir::BuildUtil::Location const, nv50_ir::Value*> >, std::less<nv50_ir::BuildUtil::Location>, std::allocator<std::pair<nv50_ir::BuildUtil::Location const, nv50_ir::Value*> > >::_Alloc_node>(std::_Rb_tree_node<std::pair<nv50_ir::BuildUtil::Location const, nv50_ir::Value*> >*, std::_Rb_tree_node_base*, std::_Rb_tree<nv50_ir::BuildUtil::Location, std::pair<nv50_ir::BuildUtil::Location const, nv50_ir::Value*>, std::_Select1st<std::pair<nv50_ir::BuildUtil::Location const, nv50_ir::Value*> >, std::less<nv50_ir::BuildUtil::Location>, std::allocator<std::pair<nv50_ir::BuildUtil::Location const, nv50_ir::Value*> > >::_Alloc_node&) [clone .isra.0]
0000000000555f20 00000000000000c8 t std::_Rb_tree_node<std::pair<nv50_ir::Value* const, nv50_ir::BuildUtil::Location> >* std::_Rb_tree<nv50_ir::Value*, std::pair<nv50_ir::Value* const, nv50_ir::BuildUtil::Location>, std::_Select1st<std::pair<nv50_ir::Value* const, nv50_ir::BuildUtil::Location> >, std::less<nv50_ir::Value*>, std::allocator<std::pair<nv50_ir::Value* const, nv50_ir::BuildUtil::Location> > >::_M_copy<false, std::_Rb_tree<nv50_ir::Value*, std::pair<nv50_ir::Value* const, nv50_ir::BuildUtil::Location>, std::_Select1st<std::pair<nv50_ir::Value* const, nv50_ir::BuildUtil::Location> >, std::less<nv50_ir::Value*>, std::allocator<std::pair<nv50_ir::Value* const, nv50_ir::BuildUtil::Location> > >::_Alloc_node>(std::_Rb_tree_node<std::pair<nv50_ir::Value* const, nv50_ir::BuildUtil::Location> >*, std::_Rb_tree_node_base*, std::_Rb_tree<nv50_ir::Value*, std::pair<nv50_ir::Value* const, nv50_ir::BuildUtil::Location>, std::_Select1st<std::pair<nv50_ir::Value* const, nv50_ir::BuildUtil::Location> >, std::less<nv50_ir::Value*>, std::allocator<std::pair<nv50_ir::Value* const, nv50_ir::BuildUtil::Location> > >::_Alloc_node&) [clone .isra.0]
0000000000555ff0 0000000000000140 t std::_Rb_tree<nv50_ir::Value*, std::pair<nv50_ir::Value* const, nv50_ir::BuildUtil::Location>, std::_Select1st<std::pair<nv50_ir::Value* const, nv50_ir::BuildUtil::Location> >, std::less<nv50_ir::Value*>, std::allocator<std::pair<nv50_ir::Value* const, nv50_ir::BuildUtil::Location> > >::_M_erase(std::_Rb_tree_node<std::pair<nv50_ir::Value* const, nv50_ir::BuildUtil::Location> >*) [clone .isra.0]
0000000000556130 0000000000000140 t std::_Rb_tree<nv50_ir::BuildUtil::Location, std::pair<nv50_ir::BuildUtil::Location const, nv50_ir::Value*>, std::_Select1st<std::pair<nv50_ir::BuildUtil::Location const, nv50_ir::Value*> >, std::less<nv50_ir::BuildUtil::Location>, std::allocator<std::pair<nv50_ir::BuildUtil::Location const, nv50_ir::Value*> > >::_M_erase(std::_Rb_tree_node<std::pair<nv50_ir::BuildUtil::Location const, nv50_ir::Value*> >*) [clone .isra.0]
0000000000556270 000000000000003c T nv50_ir::ConverterCommon::ConverterCommon(nv50_ir::Program*, nv50_ir_prog_info*)
0000000000556270 000000000000003c t nv50_ir::ConverterCommon::ConverterCommon(nv50_ir::Program*, nv50_ir_prog_info*)
00000000005562b0 0000000000000080 t nv50_ir::ConverterCommon::translateInterpMode(nv50_ir_varying const*, nv50_ir::operation&)
0000000000556330 0000000000000414 t nv50_ir::ConverterCommon::handleUserClipPlanes()
0000000000556750 000000000000025c t std::pair<std::_Rb_tree_iterator<std::pair<unsigned int const, nv50_ir::ConverterCommon::Subroutine> >, bool> std::_Rb_tree<unsigned int, std::pair<unsigned int const, nv50_ir::ConverterCommon::Subroutine>, std::_Select1st<std::pair<unsigned int const, nv50_ir::ConverterCommon::Subroutine> >, std::less<unsigned int>, std::allocator<std::pair<unsigned int const, nv50_ir::ConverterCommon::Subroutine> > >::_M_emplace_unique<std::pair<unsigned int, nv50_ir::ConverterCommon::Subroutine> >(std::pair<unsigned int, nv50_ir::ConverterCommon::Subroutine>&&)
00000000005569b0 0000000000000160 t nv50_ir::ConverterCommon::getSubroutine(unsigned int)
0000000000556b10 0000000000000130 t nv50_ir::ConverterCommon::getSubroutine(nv50_ir::Function*)
0000000000556c40 000000000000002c t nv50_ir::selpFlip(nv50_ir::FixupEntry const*, unsigned int*, nv50_ir::FixupData const&)
0000000000556c70 00000000000000a0 t nv50_ir::interpApply(nv50_ir::FixupEntry const*, unsigned int*, nv50_ir::FixupData const&)
0000000000556d10 0000000000000008 T nv50_ir::CodeEmitterGM107::getMinEncodingSize(nv50_ir::Instruction const*) const
0000000000556d20 0000000000000004 W nv50_ir::CodeEmitterGM107::~CodeEmitterGM107()
0000000000556d20 0000000000000004 W nv50_ir::CodeEmitterGM107::~CodeEmitterGM107()
0000000000556d30 0000000000000070 t _debug_printf
0000000000556da0 0000000000000008 W nv50_ir::CodeEmitterGM107::~CodeEmitterGM107()
0000000000556db0 0000000000000064 T nv50_ir::CodeEmitterGM107::prepareEmission(nv50_ir::Function*)
0000000000556e20 0000000000000160 T nv50_ir::CodeEmitterGM107::prepareEmission(nv50_ir::Program*)
0000000000556f80 0000000000000048 t nv50_ir::CodeEmitterGM107::emitGPR(int, nv50_ir::ValueRef const&) [clone .isra.0]
0000000000556fd0 0000000000000048 t nv50_ir::CodeEmitterGM107::emitGPR(int, nv50_ir::ValueDef const&) [clone .isra.0]
0000000000557020 00000000000000b8 t nv50_ir::CodeEmitterGM107::emitIMMD(int, int, nv50_ir::ValueRef const&) [clone .isra.0]
00000000005570e0 00000000000000ac t nv50_ir::CodeEmitterGM107::emitLDSTs(int, nv50_ir::DataType)
0000000000557190 0000000000000078 t nv50_ir::CodeEmitterGM107::emitSUTarget()
0000000000557210 0000000000000074 t nv50_ir::SchedDataCalculatorGM107::recordWr(nv50_ir::Value const*, int, int)
0000000000557290 00000000000000a4 t nv50_ir::SchedDataCalculatorGM107::checkRd(nv50_ir::Value const*, int, int&) const
0000000000557340 0000000000000150 t nv50_ir::SchedDataCalculatorGM107::commitInsn(nv50_ir::Instruction const*, int)
0000000000557490 000000000000013c t nv50_ir::SchedDataCalculatorGM107::calcDelay(nv50_ir::Instruction const*, int) const
00000000005575d0 0000000000000174 t nv50_ir::SchedDataCalculatorGM107::setDelay(nv50_ir::Instruction*, int, nv50_ir::Instruction const*)
0000000000557750 0000000000000294 t nv50_ir::SchedDataCalculatorGM107::needWrDepBar(nv50_ir::Instruction const*) const
00000000005579f0 0000000000000064 t nv50_ir::TargetGM107::createCodeEmitterGM107(nv50_ir::Program::Type)
0000000000557a60 0000000000000080 t nv50_ir::CodeEmitterGM107::emitPred()
0000000000557ae0 0000000000000054 t nv50_ir::CodeEmitterGM107::emitDEPBAR()
0000000000557b40 000000000000015c t nv50_ir::CodeEmitterGM107::emitSUHandle(int)
0000000000557ca0 0000000000000128 t nv50_ir::CodeEmitterGM107::emitSUSTx()
0000000000557dd0 0000000000000128 t nv50_ir::CodeEmitterGM107::emitISBERD()
0000000000557f00 00000000000000ec t nv50_ir::CodeEmitterGM107::emitCBUF(int, int, int, int, int, nv50_ir::ValueRef const&) [clone .constprop.0]
0000000000557ff0 00000000000000f4 t nv50_ir::CodeEmitterGM107::emitSTS()
00000000005580f0 0000000000000104 t nv50_ir::CodeEmitterGM107::emitTEXs(int)
0000000000558200 0000000000000118 t nv50_ir::CodeEmitterGM107::emitSTL()
0000000000558320 0000000000000124 t nv50_ir::CodeEmitterGM107::emitPRET()
0000000000558450 0000000000000124 t nv50_ir::CodeEmitterGM107::emitSSY()
0000000000558580 0000000000000124 t nv50_ir::CodeEmitterGM107::emitPBK()
00000000005586b0 0000000000000124 t nv50_ir::CodeEmitterGM107::emitPCNT()
00000000005587e0 000000000000016c t nv50_ir::CodeEmitterGM107::emitRED()
0000000000558950 0000000000000170 t nv50_ir::CodeEmitterGM107::emitST()
0000000000558ac0 0000000000000180 t nv50_ir::CodeEmitterGM107::emitAST()
0000000000558c40 000000000000016c t nv50_ir::CodeEmitterGM107::emitCCTL()
0000000000558db0 00000000000001b4 t nv50_ir::CodeEmitterGM107::emitCAL()
0000000000558f70 00000000000001e0 t nv50_ir::CodeEmitterGM107::emitBRA()
0000000000559150 0000000000000200 t nv50_ir::CodeEmitterGM107::emitBAR()
0000000000559350 000000000000007c t nv50_ir::CodeEmitterGM107::emitCONT()
00000000005593d0 000000000000007c t nv50_ir::CodeEmitterGM107::emitEXIT()
0000000000559450 000000000000007c t nv50_ir::CodeEmitterGM107::emitRET()
00000000005594d0 000000000000007c t nv50_ir::CodeEmitterGM107::emitBRK()
0000000000559550 000000000000007c t nv50_ir::CodeEmitterGM107::emitSYNC()
00000000005595d0 000000000000007c t nv50_ir::CodeEmitterGM107::emitKIL()
0000000000559650 0000000000000070 t nv50_ir::CodeEmitterGM107::emitMEMBAR()
00000000005596c0 000000000000014c t nv50_ir::CodeEmitterGM107::emitPSETP()
0000000000559810 0000000000000344 t nv50_ir::CodeEmitterGM107::emitMOV()
0000000000559b60 0000000000000178 t nv50_ir::CodeEmitterGM107::emitS2R()
0000000000559ce0 0000000000000178 t nv50_ir::CodeEmitterGM107::emitCS2R()
0000000000559e60 00000000000002f8 t nv50_ir::CodeEmitterGM107::emitF2F()
000000000055a160 00000000000002c0 t nv50_ir::CodeEmitterGM107::emitF2I()
000000000055a420 00000000000002a8 t nv50_ir::CodeEmitterGM107::emitI2F()
000000000055a6d0 00000000000002a4 t nv50_ir::CodeEmitterGM107::emitI2I()
000000000055a980 0000000000000218 t nv50_ir::CodeEmitterGM107::emitSEL()
000000000055aba0 000000000000024c t nv50_ir::CodeEmitterGM107::emitDADD()
000000000055adf0 0000000000000214 t nv50_ir::CodeEmitterGM107::emitDMUL()
000000000055b010 00000000000002d4 t nv50_ir::CodeEmitterGM107::emitDFMA()
000000000055b2f0 0000000000000254 t nv50_ir::CodeEmitterGM107::emitDMNMX()
000000000055b550 00000000000002bc t nv50_ir::CodeEmitterGM107::emitDSET()
000000000055b810 000000000000031c t nv50_ir::CodeEmitterGM107::emitFADD()
000000000055bb30 00000000000002dc t nv50_ir::CodeEmitterGM107::emitFMUL()
000000000055be10 0000000000000440 t nv50_ir::CodeEmitterGM107::emitFFMA()
000000000055c250 000000000000017c t nv50_ir::CodeEmitterGM107::emitMUFU()
000000000055c3d0 0000000000000234 t nv50_ir::CodeEmitterGM107::emitFMNMX()
000000000055c610 00000000000001bc t nv50_ir::CodeEmitterGM107::emitRRO()
000000000055c7d0 00000000000002c8 t nv50_ir::CodeEmitterGM107::emitFCMP()
000000000055caa0 00000000000002cc t nv50_ir::CodeEmitterGM107::emitFSET()
000000000055cd70 000000000000016c t nv50_ir::CodeEmitterGM107::emitFSWZADD()
000000000055cee0 00000000000002a0 t nv50_ir::CodeEmitterGM107::emitLOP()
000000000055d180 00000000000001e0 t nv50_ir::CodeEmitterGM107::emitNOT()
000000000055d360 00000000000002b8 t nv50_ir::CodeEmitterGM107::emitIADD()
000000000055d620 00000000000002cc t nv50_ir::CodeEmitterGM107::emitIMUL()
000000000055d8f0 00000000000002ec t nv50_ir::CodeEmitterGM107::emitIMAD()
000000000055dbe0 0000000000000220 t nv50_ir::CodeEmitterGM107::emitISCADD()
000000000055de00 0000000000000310 t nv50_ir::CodeEmitterGM107::emitXMAD()
000000000055e110 00000000000001e0 t nv50_ir::CodeEmitterGM107::emitIMNMX()
000000000055e2f0 00000000000002d8 t nv50_ir::CodeEmitterGM107::emitICMP()
000000000055e5d0 0000000000000298 t nv50_ir::CodeEmitterGM107::emitISET()
000000000055e870 00000000000001b8 t nv50_ir::CodeEmitterGM107::emitSHL()
000000000055ea30 00000000000001e0 t nv50_ir::CodeEmitterGM107::emitSHR()
000000000055ec10 00000000000001f8 t nv50_ir::CodeEmitterGM107::emitSHF()
000000000055ee10 000000000000018c t nv50_ir::CodeEmitterGM107::emitPOPC()
000000000055efa0 000000000000025c t nv50_ir::CodeEmitterGM107::emitBFI()
000000000055f200 00000000000001d0 t nv50_ir::CodeEmitterGM107::emitBFE()
000000000055f3d0 00000000000001b0 t nv50_ir::CodeEmitterGM107::emitFLO()
000000000055f580 0000000000000124 t nv50_ir::CodeEmitterGM107::emitLDC()
000000000055f6b0 0000000000000114 t nv50_ir::CodeEmitterGM107::emitLDL()
000000000055f7d0 00000000000000f0 t nv50_ir::CodeEmitterGM107::emitLDS()
000000000055f8c0 0000000000000170 t nv50_ir::CodeEmitterGM107::emitLD()
000000000055fa30 0000000000000288 t nv50_ir::CodeEmitterGM107::emitIPA()
000000000055fcc0 00000000000001e8 t nv50_ir::CodeEmitterGM107::emitATOM()
000000000055feb0 0000000000000190 t nv50_ir::CodeEmitterGM107::emitATOMS()
0000000000560040 00000000000000c8 t nv50_ir::CodeEmitterGM107::emitPIXLD()
0000000000560110 00000000000001e4 t nv50_ir::CodeEmitterGM107::emitTEX()
0000000000560300 00000000000001a4 t nv50_ir::CodeEmitterGM107::emitTLD()
00000000005604b0 00000000000001d4 t nv50_ir::CodeEmitterGM107::emitTLD4()
0000000000560690 0000000000000180 t nv50_ir::CodeEmitterGM107::emitTXD()
0000000000560810 000000000000017c t nv50_ir::CodeEmitterGM107::emitTMML()
0000000000560990 0000000000000144 t nv50_ir::CodeEmitterGM107::emitTXQ()
0000000000560ae0 00000000000001bc t nv50_ir::CodeEmitterGM107::emitOUT()
0000000000560ca0 0000000000000148 t nv50_ir::CodeEmitterGM107::emitSULDx()
0000000000560df0 00000000000001c4 t nv50_ir::CodeEmitterGM107::emitSUREDx()
0000000000560fc0 00000000000001a8 t nv50_ir::CodeEmitterGM107::emitALD()
0000000000561170 000000000000014c t nv50_ir::CodeEmitterGM107::emitAL2P()
00000000005612c0 00000000000001c8 t nv50_ir::SchedDataCalculatorGM107::doesInsnWriteTo(nv50_ir::Instruction const*, nv50_ir::Value const*) const
0000000000561490 0000000000000190 t nv50_ir::SchedDataCalculatorGM107::findFirstDef(nv50_ir::Instruction const*) const
0000000000561620 0000000000000478 t nv50_ir::SchedDataCalculatorGM107::setReuseFlag(nv50_ir::Instruction*)
0000000000561aa0 00000000000003b4 t nv50_ir::CodeEmitterGM107::emitVOTE()
0000000000561e60 00000000000003c8 t nv50_ir::SchedDataCalculatorGM107::needRdDepBar(nv50_ir::Instruction const*) const
0000000000562230 0000000000000330 t nv50_ir::SchedDataCalculatorGM107::findFirstUse(nv50_ir::Instruction const*) const
0000000000562560 000000000000047c t nv50_ir::SchedDataCalculatorGM107::insertBarriers(nv50_ir::BasicBlock*)
00000000005629e0 000000000000051c T nv50_ir::SchedDataCalculatorGM107::visit(nv50_ir::BasicBlock*)
0000000000562f00 000000000000020c t nv50_ir::CodeEmitterGM107::emitSHFL()
0000000000563110 000000000000030c t nv50_ir::CodeEmitterGM107::emitISETP()
0000000000563420 00000000000003bc t nv50_ir::CodeEmitterGM107::emitTEXS()
00000000005637e0 000000000000033c t nv50_ir::CodeEmitterGM107::emitDSETP()
0000000000563b20 0000000000000350 t nv50_ir::CodeEmitterGM107::emitFSETP()
0000000000563e70 0000000000000b08 T nv50_ir::CodeEmitterGM107::emitInstruction(nv50_ir::Instruction*)
0000000000564980 0000000000000250 t std::vector<nv50_ir::SchedDataCalculatorGM107::RegScores, std::allocator<nv50_ir::SchedDataCalculatorGM107::RegScores> >::_M_default_append(unsigned long)
0000000000564bd0 0000000000000134 T nv50_ir::SchedDataCalculatorGM107::visit(nv50_ir::Function*)
0000000000564d10 0000000000000140 t std::_Rb_tree<void const*, std::pair<void const* const, void*>, std::_Select1st<std::pair<void const* const, void*> >, std::less<void const*>, std::allocator<std::pair<void const* const, void*> > >::_M_erase(std::_Rb_tree_node<std::pair<void const* const, void*> >*) [clone .isra.0]
0000000000564e50 0000000000000574 t nv50_ir::GM107LegalizeSSA::handlePFETCH(nv50_ir::Instruction*)
00000000005653d0 000000000000014c t nv50_ir::GM107LegalizeSSA::handleLOAD(nv50_ir::Instruction*)
0000000000565520 000000000000003c T nv50_ir::GM107LegalizeSSA::visit(nv50_ir::Instruction*)
0000000000565560 00000000000003a0 t nv50_ir::GM107LoweringPass::handleDFDX(nv50_ir::Instruction*)
0000000000565900 00000000000005fc t nv50_ir::GM107LoweringPass::handlePFETCH(nv50_ir::Instruction*)
0000000000565f00 0000000000000294 t nv50_ir::GM107LoweringPass::handlePOPCNT(nv50_ir::Instruction*)
00000000005661a0 00000000000005f8 t nv50_ir::GM107LoweringPass::handleSUQ(nv50_ir::TexInstruction*)
00000000005667a0 00000000000000c0 t std::_Rb_tree_iterator<std::pair<void const* const, void*> > std::_Rb_tree<void const*, std::pair<void const* const, void*>, std::_Select1st<std::pair<void const* const, void*> >, std::less<void const*>, std::allocator<std::pair<void const* const, void*> > >::_M_emplace_hint_unique<std::piecewise_construct_t const&, std::tuple<void const* const&>, std::tuple<> >(std::_Rb_tree_const_iterator<std::pair<void const* const, void*> >, std::piecewise_construct_t const&, std::tuple<void const* const&>&&, std::tuple<>&&) [clone .isra.0]
0000000000566860 0000000000001c5c T nv50_ir::GM107LoweringPass::handleManualTXD(nv50_ir::TexInstruction*)
00000000005684c0 00000000000000d4 T nv50_ir::GM107LoweringPass::visit(nv50_ir::Instruction*)
00000000005685a0 0000000000000014 T nv50_ir::NVC0LegalizeSSA::visit(nv50_ir::Function*)
00000000005685c0 0000000000000008 T nv50_ir::NVC0LoweringPass::visit(nv50_ir::BasicBlock*)
00000000005685d0 00000000000000c8 t nv50_ir::getSrcType(nv50_ir::TexInstruction::ImgFormatDesc const*, int)
00000000005686a0 0000000000000070 t _debug_printf
0000000000568710 00000000000000d8 T nv50_ir::NVC0LoweringPass::visit(nv50_ir::Function*)
00000000005687f0 000000000000011c T nv50_ir::TargetNVC0::runLegalizePass(nv50_ir::Program*, nv50_ir::CGStage) const
0000000000568910 0000000000000140 t std::_Rb_tree<void const*, std::pair<void const* const, void*>, std::_Select1st<std::pair<void const* const, void*> >, std::less<void const*>, std::allocator<std::pair<void const* const, void*> > >::_M_erase(std::_Rb_tree_node<std::pair<void const* const, void*> >*) [clone .isra.0]
0000000000568a50 0000000000000140 t nv50_ir::Instruction::getIndirect(int, int) const
0000000000568b90 00000000000000b8 t nv50_ir::TexInstruction::getIndirectR() const
0000000000568c50 0000000000000220 t nv50_ir::NVC0LegalizeSSA::handleRCPRSQLib(nv50_ir::Instruction*, nv50_ir::Value**)
0000000000568e70 0000000000000270 t nv50_ir::NVC0LegalizeSSA::handleRCPRSQ(nv50_ir::Instruction*)
00000000005690e0 0000000000000278 t nv50_ir::NVC0LegalizeSSA::handleTEXLOD(nv50_ir::TexInstruction*)
0000000000569360 00000000000002a8 t nv50_ir::NVC0LegalizeSSA::handleSET(nv50_ir::CmpInstruction*)
0000000000569610 0000000000000030 t nv50_ir::NVC0LegalizePostRA::NVC0LegalizePostRA(nv50_ir::Program const*)
0000000000569610 0000000000000030 T nv50_ir::NVC0LegalizePostRA::NVC0LegalizePostRA(nv50_ir::Program const*)
0000000000569640 000000000000014c t nv50_ir::NVC0LegalizePostRA::addTexUse(std::__cxx11::list<nv50_ir::NVC0LegalizePostRA::TexUse, std::allocator<nv50_ir::NVC0LegalizePostRA::TexUse> >&, nv50_ir::Instruction*, nv50_ir::Instruction const*)
0000000000569790 00000000000000f8 t nv50_ir::NVC0LegalizePostRA::propagateJoin(nv50_ir::BasicBlock*)
0000000000569890 000000000000003c T nv50_ir::NVC0LoweringPass::NVC0LoweringPass(nv50_ir::Program*)
0000000000569890 000000000000003c t nv50_ir::NVC0LoweringPass::NVC0LoweringPass(nv50_ir::Program*)
00000000005698d0 00000000000001fc t nv50_ir::NVC0LoweringPass::loadTexHandle(nv50_ir::Value*, unsigned int)
0000000000569ad0 00000000000001ec t nv50_ir::NVC0LoweringPass::loadResInfo64(nv50_ir::Value*, unsigned int, unsigned short)
0000000000569cc0 00000000000001f0 t nv50_ir::NVC0LoweringPass::loadResLength32(nv50_ir::Value*, unsigned int, unsigned short)
0000000000569eb0 00000000000002dc t nv50_ir::NVC0LoweringPass::loadSuInfo32(nv50_ir::Value*, int, unsigned int, bool)
000000000056a190 00000000000002d0 t nv50_ir::NVC0LoweringPass::readTessCoord(nv50_ir::LValue*, int)
000000000056a460 00000000000001fc t nv50_ir::NVC0LoweringPass::handleDIV(nv50_ir::Instruction*)
000000000056a660 00000000000002cc t nv50_ir::NVC0LoweringPass::handleMOD(nv50_ir::Instruction*)
000000000056a930 00000000000002e4 t nv50_ir::NVC0LoweringPass::handlePOW(nv50_ir::Instruction*)
000000000056ac20 0000000000000320 t nv50_ir::NVC0LoweringPass::calculateSampleOffset(nv50_ir::Value*)
000000000056af40 0000000000000168 t nv50_ir::NVC0LoweringPass::checkPredicate(nv50_ir::Instruction*)
000000000056b0b0 0000000000000250 t std::unordered_set<nv50_ir::BasicBlock const*, std::hash<nv50_ir::BasicBlock const*>, std::equal_to<nv50_ir::BasicBlock const*>, std::allocator<nv50_ir::BasicBlock const*> >::insert(nv50_ir::BasicBlock const* const&)
000000000056b300 000000000000017c t nv50_ir::NVC0LegalizePostRA::replaceCvt(nv50_ir::Instruction*)
000000000056b480 00000000000000ec t nv50_ir::NVC0LegalizePostRA::tryReplaceContWithBra(nv50_ir::BasicBlock*)
000000000056b570 0000000000000288 t nv50_ir::NVC0LegalizePostRA::replaceZero(nv50_ir::Instruction*)
000000000056b800 0000000000000390 T nv50_ir::NVC0LegalizePostRA::visit(nv50_ir::BasicBlock*)
000000000056bb90 0000000000000234 t nv50_ir::NVC0LoweringPass::handleSQRT(nv50_ir::Instruction*) [clone .part.0]
000000000056bdd0 0000000000000148 t nv50_ir::NVC0LoweringPass::handlePIXLD(nv50_ir::Instruction*)
000000000056bf20 00000000000002c0 t nv50_ir::NVC0LoweringPass::handleOUT(nv50_ir::Instruction*)
000000000056c1e0 0000000000000704 t nv50_ir::NVC0LoweringPass::insertOOBSurfaceOpResult(nv50_ir::TexInstruction*)
000000000056c8f0 0000000000000320 t nv50_ir::NVC0LoweringPass::handleTXQ(nv50_ir::TexInstruction*)
000000000056cc10 00000000000002cc t nv50_ir::NVC0LoweringPass::handleCasExch(nv50_ir::Instruction*, bool)
000000000056cee0 000000000000040c t nv50_ir::NVC0LegalizePostRA::findFirstUsesBB(int, int, nv50_ir::Instruction*, nv50_ir::Instruction const*, std::__cxx11::list<nv50_ir::NVC0LegalizePostRA::TexUse, std::allocator<nv50_ir::NVC0LegalizePostRA::TexUse> >&, std::unordered_set<nv50_ir::BasicBlock const*, std::hash<nv50_ir::BasicBlock const*>, std::equal_to<nv50_ir::BasicBlock const*>, std::allocator<nv50_ir::BasicBlock const*> >&)
000000000056d2f0 0000000000000138 t nv50_ir::NVC0LegalizePostRA::findFirstUses(nv50_ir::Instruction*, std::__cxx11::list<nv50_ir::NVC0LegalizePostRA::TexUse, std::allocator<nv50_ir::NVC0LegalizePostRA::TexUse> >&)
000000000056d430 0000000000000330 t nv50_ir::NVC0LoweringPass::handleBUFQ(nv50_ir::Instruction*)
000000000056d760 00000000000002a4 t nv50_ir::NVC0LoweringPass::handleWRSV(nv50_ir::Instruction*)
000000000056da10 0000000000000c7c t nv50_ir::NVC0LoweringPass::handleTEX(nv50_ir::TexInstruction*)
000000000056e690 00000000000003a8 t nv50_ir::NVC0LoweringPass::handleTXD(nv50_ir::TexInstruction*)
000000000056ea40 000000000000040c t nv50_ir::NVC0LegalizeSSA::handleDIV(nv50_ir::Instruction*)
000000000056ee50 000000000000052c t nv50_ir::NVC0LegalizeSSA::handleShift(nv50_ir::Instruction*)
000000000056f380 0000000000000170 T nv50_ir::NVC0LegalizeSSA::visit(nv50_ir::BasicBlock*)
000000000056f4f0 000000000000060c t nv50_ir::NVC0LoweringPass::handleSharedATOMNVE4(nv50_ir::Instruction*)
000000000056fb00 0000000000000504 t nv50_ir::NVC0LoweringPass::handleSharedATOM(nv50_ir::Instruction*)
0000000000570010 00000000000002d8 t nv50_ir::NVC0LoweringPass::loadMsAdjInfo32(nv50_ir::TexInstruction::Target, unsigned int, int, nv50_ir::Value*, bool)
00000000005702f0 00000000000003a0 t nv50_ir::NVC0LoweringPass::adjustCoordinatesMS(nv50_ir::TexInstruction*)
0000000000570690 0000000000000360 t nv50_ir::NVC0LoweringPass::handleSUQ(nv50_ir::TexInstruction*)
00000000005709f0 0000000000000d90 t nv50_ir::NVC0LoweringPass::processSurfaceCoordsNVE4(nv50_ir::TexInstruction*)
0000000000571780 0000000000000730 t nv50_ir::NVC0LoweringPass::convertSurfaceFormat(nv50_ir::TexInstruction*, nv50_ir::Instruction**)
0000000000571eb0 0000000000000594 t nv50_ir::NVC0LoweringPass::processSurfaceCoordsNVC0(nv50_ir::TexInstruction*)
0000000000572450 00000000000009b4 t nv50_ir::NVC0LoweringPass::handleRDSV(nv50_ir::Instruction*)
0000000000572e10 000000000000016c t nv50_ir::NVC0LoweringPass::handleEXPORT(nv50_ir::Instruction*)
0000000000572f80 00000000000008bc t nv50_ir::NVC0LoweringPass::handleLDST(nv50_ir::Instruction*)
0000000000573840 0000000000000328 t nv50_ir::NVC0LoweringPass::handleSurfaceOpNVE4(nv50_ir::TexInstruction*)
0000000000573b70 00000000000003a8 t nv50_ir::NVC0LoweringPass::handleSurfaceOpNVC0(nv50_ir::TexInstruction*)
0000000000573f20 0000000000000344 t nv50_ir::NVC0LoweringPass::handleTXLQ(nv50_ir::TexInstruction*)
0000000000574270 0000000000000640 t nv50_ir::NVC0LoweringPass::handleATOM(nv50_ir::Instruction*)
00000000005748b0 0000000000000284 W std::vector<int, std::allocator<int> >::_M_fill_insert(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, unsigned long, int const&)
0000000000574b40 0000000000000128 t void std::vector<nv50_ir::Instruction*, std::allocator<nv50_ir::Instruction*> >::_M_realloc_insert<nv50_ir::Instruction* const&>(__gnu_cxx::__normal_iterator<nv50_ir::Instruction**, std::vector<nv50_ir::Instruction*, std::allocator<nv50_ir::Instruction*> > >, nv50_ir::Instruction* const&)
0000000000574c70 00000000000001a4 t void std::vector<nv50_ir::NVC0LegalizePostRA::TexUse, std::allocator<nv50_ir::NVC0LegalizePostRA::TexUse> >::_M_realloc_insert<nv50_ir::NVC0LegalizePostRA::TexUse const&>(__gnu_cxx::__normal_iterator<nv50_ir::NVC0LegalizePostRA::TexUse*, std::vector<nv50_ir::NVC0LegalizePostRA::TexUse, std::allocator<nv50_ir::NVC0LegalizePostRA::TexUse> > >, nv50_ir::NVC0LegalizePostRA::TexUse const&)
0000000000574e20 0000000000000284 t std::vector<nv50_ir::NVC0LegalizePostRA::Limits, std::allocator<nv50_ir::NVC0LegalizePostRA::Limits> >::_M_fill_insert(__gnu_cxx::__normal_iterator<nv50_ir::NVC0LegalizePostRA::Limits*, std::vector<nv50_ir::NVC0LegalizePostRA::Limits, std::allocator<nv50_ir::NVC0LegalizePostRA::Limits> > >, unsigned long, nv50_ir::NVC0LegalizePostRA::Limits const&)
00000000005750b0 0000000000000118 t std::vector<nv50_ir::NVC0LegalizePostRA::Limits, std::allocator<nv50_ir::NVC0LegalizePostRA::Limits> >::_M_default_append(unsigned long)
00000000005751d0 0000000000000e1c t nv50_ir::NVC0LegalizePostRA::insertTextureBarriers(nv50_ir::Function*)
0000000000575ff0 000000000000030c T nv50_ir::NVC0LegalizePostRA::visit(nv50_ir::Function*)
0000000000576300 00000000000000c0 t std::_Rb_tree_iterator<std::pair<void const* const, void*> > std::_Rb_tree<void const*, std::pair<void const* const, void*>, std::_Select1st<std::pair<void const* const, void*> >, std::less<void const*>, std::allocator<std::pair<void const* const, void*> > >::_M_emplace_hint_unique<std::piecewise_construct_t const&, std::tuple<void const* const&>, std::tuple<> >(std::_Rb_tree_const_iterator<std::pair<void const* const, void*> >, std::piecewise_construct_t const&, std::tuple<void const* const&>&&, std::tuple<>&&) [clone .isra.0]
00000000005763c0 00000000000002a8 t nv50_ir::cloneForward(nv50_ir::Function*, nv50_ir::Instruction*)
0000000000576670 0000000000001258 T nv50_ir::NVC0LoweringPass::handleManualTXD(nv50_ir::TexInstruction*)
00000000005778d0 0000000000000f24 t nv50_ir::NVC0LoweringPass::processSurfaceCoordsGM107(nv50_ir::TexInstruction*, nv50_ir::Instruction**)
0000000000578800 0000000000000094 t nv50_ir::NVC0LoweringPass::handleSurfaceOpGM107(nv50_ir::TexInstruction*)
00000000005788a0 0000000000000480 t nv50_ir::NVC0LoweringPass::visit(nv50_ir::Instruction*)
0000000000578d20 0000000000000044 t _mesa_combine_swizzles
0000000000578d70 0000000000000470 t _mesa_layout_parameters
00000000005791e0 0000000000000088 t _mesa_parse_instruction_suffix
0000000000579270 0000000000000054 t _mesa_ARBvp_parse_option
00000000005792d0 00000000000002d8 t _mesa_ARBfp_parse_option
00000000005795b0 00000000000000e0 t yy_get_previous_state
0000000000579690 0000000000000030 t yy_fatal_error.constprop.0
00000000005796c0 00000000000000a0 t _mesa_program_lexer_ensure_buffer_stack
0000000000579760 00000000000000b4 t _mesa_program_lexer__switch_to_buffer
0000000000579820 000000000000006c t _mesa_program_lexer__delete_buffer
0000000000579890 000000000000006c t _mesa_program_lexer__flush_buffer
0000000000579900 0000000000000098 t _mesa_program_lexer__init_buffer
00000000005799a0 000000000000007c t _mesa_program_lexer__create_buffer
0000000000579a20 00000000000000bc t _mesa_program_lexer_restart
0000000000579ae0 00000000000046e4 t _mesa_program_lexer_lex
000000000057e1d0 000000000000008c t _mesa_program_lexer_pop_buffer_state
000000000057e260 00000000000000bc t _mesa_program_lexer__scan_buffer
000000000057e320 00000000000000a4 t _mesa_program_lexer__scan_bytes
000000000057e3d0 0000000000000098 t _mesa_program_lexer_lex_init_extra
000000000057e470 000000000000007c t _mesa_program_lexer_lex_destroy
000000000057e4f0 0000000000000044 t _mesa_program_lexer_ctor
000000000057e540 0000000000000004 t _mesa_program_lexer_dtor
000000000057e550 0000000000000004 T _glapi_check_multithread
000000000057e560 0000000000000004 T _glapi_set_context
000000000057e570 0000000000000004 T _glapi_set_dispatch
000000000057e580 0000000000000008 T _glapi_get_dispatch_table_size
000000000057e590 00000000000001a4 T _glapi_add_dispatch
000000000057e740 000000000000006c T _glapi_get_proc_address
000000000057e7b0 0000000000000014 t stub_compare
000000000057e7d0 0000000000000014 t stub_init_once
000000000057e7f0 000000000000001c t stub_find_public
000000000057e810 0000000000000100 t stub_find_dynamic
000000000057e910 0000000000000050 t stub_fix_dynamic
000000000057e960 0000000000000008 t stub_get_slot
000000000057e970 0000000000000018 t stub_get_addr
000000000057e990 00000000000000a8 t noop_generic
000000000057ea40 0000000000000004 t u_current_init
000000000057ea50 0000000000000024 t u_current_set_context
000000000057ea80 0000000000000020 T _glapi_get_context
000000000057eaa0 0000000000000040 t u_current_set_table
000000000057eae0 0000000000000034 T shared_dispatch_stub_0
000000000057eb20 0000000000000028 T shared_dispatch_stub_1
000000000057eb50 0000000000000034 T shared_dispatch_stub_2
000000000057eb90 0000000000000034 T shared_dispatch_stub_3
000000000057ebd0 0000000000000034 T shared_dispatch_stub_4
000000000057ec10 0000000000000034 T shared_dispatch_stub_5
000000000057ec50 0000000000000034 T shared_dispatch_stub_6
000000000057ec90 0000000000000034 T shared_dispatch_stub_7
000000000057ecd0 0000000000000034 T shared_dispatch_stub_8
000000000057ed10 0000000000000034 T shared_dispatch_stub_9
000000000057ed50 0000000000000034 T shared_dispatch_stub_10
000000000057ed90 0000000000000028 T shared_dispatch_stub_11
000000000057edc0 0000000000000034 T shared_dispatch_stub_12
000000000057ee00 0000000000000028 T shared_dispatch_stub_13
000000000057ee30 0000000000000034 T shared_dispatch_stub_14
000000000057ee70 0000000000000034 T shared_dispatch_stub_15
000000000057eeb0 0000000000000034 T shared_dispatch_stub_16
000000000057eef0 0000000000000034 T shared_dispatch_stub_17
000000000057ef30 0000000000000034 T shared_dispatch_stub_18
000000000057ef70 0000000000000034 T shared_dispatch_stub_19
000000000057efb0 0000000000000034 T shared_dispatch_stub_20
000000000057eff0 0000000000000034 T shared_dispatch_stub_21
000000000057f030 0000000000000034 T shared_dispatch_stub_22
000000000057f070 0000000000000034 T shared_dispatch_stub_23
000000000057f0b0 0000000000000034 T shared_dispatch_stub_24
000000000057f0f0 0000000000000034 T shared_dispatch_stub_25
000000000057f130 0000000000000034 T shared_dispatch_stub_26
000000000057f170 0000000000000028 T shared_dispatch_stub_27
000000000057f1a0 0000000000000034 T shared_dispatch_stub_28
000000000057f1e0 0000000000000028 T shared_dispatch_stub_29
000000000057f210 0000000000000034 T shared_dispatch_stub_30
000000000057f250 0000000000000034 T shared_dispatch_stub_31
000000000057f290 0000000000000034 T shared_dispatch_stub_32
000000000057f2d0 0000000000000034 T shared_dispatch_stub_33
000000000057f310 0000000000000034 T shared_dispatch_stub_34
000000000057f350 0000000000000034 T shared_dispatch_stub_35
000000000057f390 0000000000000034 T shared_dispatch_stub_36
000000000057f3d0 0000000000000034 T shared_dispatch_stub_37
000000000057f410 0000000000000034 T shared_dispatch_stub_38
000000000057f450 0000000000000034 T shared_dispatch_stub_39
000000000057f490 0000000000000034 T shared_dispatch_stub_40
000000000057f4d0 0000000000000034 T shared_dispatch_stub_41
000000000057f510 0000000000000034 T shared_dispatch_stub_42
000000000057f550 0000000000000028 T shared_dispatch_stub_43
000000000057f580 0000000000000028 T shared_dispatch_stub_44
000000000057f5b0 0000000000000034 T shared_dispatch_stub_45
000000000057f5f0 0000000000000028 T shared_dispatch_stub_46
000000000057f620 0000000000000034 T shared_dispatch_stub_47
000000000057f660 0000000000000034 T shared_dispatch_stub_48
000000000057f6a0 0000000000000034 T shared_dispatch_stub_49
000000000057f6e0 0000000000000034 T shared_dispatch_stub_50
000000000057f720 0000000000000034 T shared_dispatch_stub_51
000000000057f760 0000000000000034 T shared_dispatch_stub_52
000000000057f7a0 0000000000000034 T shared_dispatch_stub_53
000000000057f7e0 0000000000000028 T shared_dispatch_stub_54
000000000057f810 0000000000000034 T shared_dispatch_stub_55
000000000057f850 0000000000000028 T shared_dispatch_stub_56
000000000057f880 0000000000000034 T shared_dispatch_stub_57
000000000057f8c0 0000000000000034 T shared_dispatch_stub_58
000000000057f900 0000000000000034 T shared_dispatch_stub_59
000000000057f940 0000000000000034 T shared_dispatch_stub_60
000000000057f980 0000000000000034 T shared_dispatch_stub_61
000000000057f9c0 0000000000000028 T shared_dispatch_stub_62
000000000057f9f0 0000000000000034 T shared_dispatch_stub_63
000000000057fa30 0000000000000028 T shared_dispatch_stub_64
000000000057fa60 0000000000000034 T shared_dispatch_stub_65
000000000057faa0 0000000000000034 T shared_dispatch_stub_66
000000000057fae0 0000000000000034 T shared_dispatch_stub_67
000000000057fb20 0000000000000034 T shared_dispatch_stub_68
000000000057fb60 0000000000000034 T shared_dispatch_stub_69
000000000057fba0 0000000000000028 T shared_dispatch_stub_70
000000000057fbd0 0000000000000034 T shared_dispatch_stub_71
000000000057fc10 0000000000000028 T shared_dispatch_stub_72
000000000057fc40 0000000000000034 T shared_dispatch_stub_73
000000000057fc80 0000000000000034 T shared_dispatch_stub_74
000000000057fcc0 0000000000000034 T shared_dispatch_stub_75
000000000057fd00 0000000000000034 T shared_dispatch_stub_76
000000000057fd40 0000000000000034 T shared_dispatch_stub_77
000000000057fd80 0000000000000028 T shared_dispatch_stub_78
000000000057fdb0 0000000000000034 T shared_dispatch_stub_79
000000000057fdf0 0000000000000028 T shared_dispatch_stub_80
000000000057fe20 0000000000000034 T shared_dispatch_stub_81
000000000057fe60 0000000000000034 T shared_dispatch_stub_82
000000000057fea0 0000000000000034 T shared_dispatch_stub_83
000000000057fee0 0000000000000034 T shared_dispatch_stub_84
000000000057ff20 0000000000000034 T shared_dispatch_stub_85
000000000057ff60 0000000000000028 T shared_dispatch_stub_86
000000000057ff90 0000000000000034 T shared_dispatch_stub_87
000000000057ffd0 0000000000000028 T shared_dispatch_stub_88
0000000000580000 0000000000000034 T shared_dispatch_stub_89
0000000000580040 0000000000000034 T shared_dispatch_stub_90
0000000000580080 0000000000000034 T shared_dispatch_stub_91
00000000005800c0 0000000000000034 T shared_dispatch_stub_92
0000000000580100 0000000000000034 T shared_dispatch_stub_93
0000000000580140 0000000000000028 T shared_dispatch_stub_94
0000000000580170 0000000000000034 T shared_dispatch_stub_95
00000000005801b0 0000000000000028 T shared_dispatch_stub_96
00000000005801e0 0000000000000034 T shared_dispatch_stub_97
0000000000580220 0000000000000034 T shared_dispatch_stub_98
0000000000580260 0000000000000034 T shared_dispatch_stub_99
00000000005802a0 0000000000000034 T shared_dispatch_stub_100
00000000005802e0 0000000000000034 T shared_dispatch_stub_101
0000000000580320 0000000000000028 T shared_dispatch_stub_102
0000000000580350 0000000000000034 T shared_dispatch_stub_103
0000000000580390 0000000000000028 T shared_dispatch_stub_104
00000000005803c0 0000000000000034 T shared_dispatch_stub_105
0000000000580400 0000000000000034 T shared_dispatch_stub_106
0000000000580440 0000000000000034 T shared_dispatch_stub_107
0000000000580480 0000000000000034 T shared_dispatch_stub_108
00000000005804c0 0000000000000034 T shared_dispatch_stub_109
0000000000580500 0000000000000028 T shared_dispatch_stub_110
0000000000580530 0000000000000034 T shared_dispatch_stub_111
0000000000580570 0000000000000028 T shared_dispatch_stub_112
00000000005805a0 0000000000000034 T shared_dispatch_stub_113
00000000005805e0 0000000000000034 T shared_dispatch_stub_114
0000000000580620 0000000000000034 T shared_dispatch_stub_115
0000000000580660 0000000000000034 T shared_dispatch_stub_116
00000000005806a0 0000000000000034 T shared_dispatch_stub_117
00000000005806e0 0000000000000028 T shared_dispatch_stub_118
0000000000580710 0000000000000034 T shared_dispatch_stub_119
0000000000580750 0000000000000028 T shared_dispatch_stub_120
0000000000580780 0000000000000034 T shared_dispatch_stub_121
00000000005807c0 0000000000000034 T shared_dispatch_stub_122
0000000000580800 0000000000000034 T shared_dispatch_stub_123
0000000000580840 0000000000000034 T shared_dispatch_stub_124
0000000000580880 0000000000000034 T shared_dispatch_stub_125
00000000005808c0 0000000000000028 T shared_dispatch_stub_126
00000000005808f0 0000000000000034 T shared_dispatch_stub_127
0000000000580930 0000000000000028 T shared_dispatch_stub_128
0000000000580960 0000000000000034 T shared_dispatch_stub_129
00000000005809a0 0000000000000034 T shared_dispatch_stub_130
00000000005809e0 0000000000000034 T shared_dispatch_stub_131
0000000000580a20 0000000000000034 T shared_dispatch_stub_132
0000000000580a60 0000000000000034 T shared_dispatch_stub_133
0000000000580aa0 0000000000000028 T shared_dispatch_stub_134
0000000000580ad0 0000000000000034 T shared_dispatch_stub_135
0000000000580b10 0000000000000028 T shared_dispatch_stub_136
0000000000580b40 0000000000000034 T shared_dispatch_stub_137
0000000000580b80 0000000000000034 T shared_dispatch_stub_138
0000000000580bc0 0000000000000034 T shared_dispatch_stub_139
0000000000580c00 0000000000000034 T shared_dispatch_stub_140
0000000000580c40 0000000000000034 T shared_dispatch_stub_141
0000000000580c80 0000000000000028 T shared_dispatch_stub_142
0000000000580cb0 0000000000000034 T shared_dispatch_stub_143
0000000000580cf0 0000000000000028 T shared_dispatch_stub_144
0000000000580d20 0000000000000034 T shared_dispatch_stub_145
0000000000580d60 0000000000000034 T shared_dispatch_stub_146
0000000000580da0 0000000000000034 T shared_dispatch_stub_147
0000000000580de0 0000000000000034 T shared_dispatch_stub_148
0000000000580e20 0000000000000034 T shared_dispatch_stub_149
0000000000580e60 0000000000000034 T shared_dispatch_stub_150
0000000000580ea0 0000000000000034 T shared_dispatch_stub_151
0000000000580ee0 0000000000000034 T shared_dispatch_stub_152
0000000000580f20 0000000000000034 T shared_dispatch_stub_153
0000000000580f60 0000000000000034 T shared_dispatch_stub_154
0000000000580fa0 0000000000000034 T shared_dispatch_stub_155
0000000000580fe0 0000000000000034 T shared_dispatch_stub_156
0000000000581020 0000000000000034 T shared_dispatch_stub_157
0000000000581060 0000000000000034 T shared_dispatch_stub_158
00000000005810a0 0000000000000034 T shared_dispatch_stub_159
00000000005810e0 0000000000000034 T shared_dispatch_stub_160
0000000000581120 0000000000000034 T shared_dispatch_stub_161
0000000000581160 0000000000000034 T shared_dispatch_stub_162
00000000005811a0 0000000000000034 T shared_dispatch_stub_163
00000000005811e0 0000000000000034 T shared_dispatch_stub_164
0000000000581220 0000000000000034 T shared_dispatch_stub_165
0000000000581260 0000000000000034 T shared_dispatch_stub_166
00000000005812a0 0000000000000034 T shared_dispatch_stub_167
00000000005812e0 0000000000000028 T shared_dispatch_stub_168
0000000000581310 0000000000000034 T shared_dispatch_stub_169
0000000000581350 0000000000000034 T shared_dispatch_stub_170
0000000000581390 0000000000000034 T shared_dispatch_stub_171
00000000005813d0 0000000000000034 T shared_dispatch_stub_172
0000000000581410 0000000000000028 T shared_dispatch_stub_173
0000000000581440 0000000000000034 T shared_dispatch_stub_174
0000000000581480 0000000000000034 T shared_dispatch_stub_175
00000000005814c0 0000000000000034 T shared_dispatch_stub_176
0000000000581500 0000000000000034 T shared_dispatch_stub_177
0000000000581540 0000000000000034 T shared_dispatch_stub_178
0000000000581580 0000000000000034 T shared_dispatch_stub_179
00000000005815c0 0000000000000034 T shared_dispatch_stub_180
0000000000581600 0000000000000034 T shared_dispatch_stub_181
0000000000581640 0000000000000034 T shared_dispatch_stub_182
0000000000581680 0000000000000034 T shared_dispatch_stub_183
00000000005816c0 0000000000000034 T shared_dispatch_stub_184
0000000000581700 0000000000000034 T shared_dispatch_stub_185
0000000000581740 0000000000000034 T shared_dispatch_stub_186
0000000000581780 0000000000000034 T shared_dispatch_stub_187
00000000005817c0 0000000000000034 T shared_dispatch_stub_188
0000000000581800 0000000000000034 T shared_dispatch_stub_189
0000000000581840 0000000000000034 T shared_dispatch_stub_190
0000000000581880 0000000000000034 T shared_dispatch_stub_191
00000000005818c0 0000000000000034 T shared_dispatch_stub_192
0000000000581900 0000000000000034 T shared_dispatch_stub_193
0000000000581940 0000000000000034 T shared_dispatch_stub_194
0000000000581980 0000000000000034 T shared_dispatch_stub_195
00000000005819c0 0000000000000034 T shared_dispatch_stub_196
0000000000581a00 0000000000000028 T shared_dispatch_stub_197
0000000000581a30 0000000000000034 T shared_dispatch_stub_198
0000000000581a70 0000000000000028 T shared_dispatch_stub_199
0000000000581aa0 0000000000000028 T shared_dispatch_stub_200
0000000000581ad0 0000000000000034 T shared_dispatch_stub_201
0000000000581b10 0000000000000034 T shared_dispatch_stub_202
0000000000581b50 0000000000000034 T shared_dispatch_stub_203
0000000000581b90 0000000000000028 T shared_dispatch_stub_204
0000000000581bc0 0000000000000028 T shared_dispatch_stub_205
0000000000581bf0 0000000000000028 T shared_dispatch_stub_206
0000000000581c20 0000000000000034 T shared_dispatch_stub_207
0000000000581c60 0000000000000028 T shared_dispatch_stub_208
0000000000581c90 0000000000000034 T shared_dispatch_stub_209
0000000000581cd0 0000000000000034 T shared_dispatch_stub_210
0000000000581d10 0000000000000034 T shared_dispatch_stub_211
0000000000581d50 0000000000000034 T shared_dispatch_stub_212
0000000000581d90 0000000000000034 T shared_dispatch_stub_213
0000000000581dd0 0000000000000034 T shared_dispatch_stub_214
0000000000581e10 0000000000000034 T shared_dispatch_stub_215
0000000000581e50 0000000000000028 T shared_dispatch_stub_216
0000000000581e80 0000000000000028 T shared_dispatch_stub_217
0000000000581eb0 0000000000000028 T shared_dispatch_stub_218
0000000000581ee0 0000000000000034 T shared_dispatch_stub_219
0000000000581f20 0000000000000034 T shared_dispatch_stub_220
0000000000581f60 0000000000000034 T shared_dispatch_stub_221
0000000000581fa0 0000000000000034 T shared_dispatch_stub_222
0000000000581fe0 0000000000000034 T shared_dispatch_stub_223
0000000000582020 0000000000000034 T shared_dispatch_stub_224
0000000000582060 0000000000000034 T shared_dispatch_stub_225
00000000005820a0 0000000000000034 T shared_dispatch_stub_226
00000000005820e0 0000000000000034 T shared_dispatch_stub_227
0000000000582120 0000000000000028 T shared_dispatch_stub_228
0000000000582150 0000000000000034 T shared_dispatch_stub_229
0000000000582190 0000000000000028 T shared_dispatch_stub_230
00000000005821c0 0000000000000034 T shared_dispatch_stub_231
0000000000582200 0000000000000028 T shared_dispatch_stub_232
0000000000582230 0000000000000034 T shared_dispatch_stub_233
0000000000582270 0000000000000028 T shared_dispatch_stub_234
00000000005822a0 0000000000000034 T shared_dispatch_stub_235
00000000005822e0 0000000000000034 T shared_dispatch_stub_236
0000000000582320 0000000000000034 T shared_dispatch_stub_237
0000000000582360 0000000000000034 T shared_dispatch_stub_238
00000000005823a0 0000000000000034 T shared_dispatch_stub_239
00000000005823e0 0000000000000034 T shared_dispatch_stub_240
0000000000582420 0000000000000034 T shared_dispatch_stub_241
0000000000582460 0000000000000034 T shared_dispatch_stub_242
00000000005824a0 0000000000000034 T shared_dispatch_stub_243
00000000005824e0 0000000000000034 T shared_dispatch_stub_244
0000000000582520 0000000000000034 T shared_dispatch_stub_245
0000000000582560 0000000000000028 T shared_dispatch_stub_246
0000000000582590 0000000000000034 T shared_dispatch_stub_247
00000000005825d0 0000000000000034 T shared_dispatch_stub_248
0000000000582610 0000000000000034 T shared_dispatch_stub_249
0000000000582650 0000000000000034 T shared_dispatch_stub_250
0000000000582690 0000000000000034 T shared_dispatch_stub_251
00000000005826d0 0000000000000034 T shared_dispatch_stub_252
0000000000582710 0000000000000034 T shared_dispatch_stub_253
0000000000582750 0000000000000034 T shared_dispatch_stub_254
0000000000582790 0000000000000034 T shared_dispatch_stub_255
00000000005827d0 0000000000000034 T shared_dispatch_stub_256
0000000000582810 0000000000000034 T shared_dispatch_stub_257
0000000000582850 0000000000000034 T shared_dispatch_stub_258
0000000000582890 0000000000000034 T shared_dispatch_stub_259
00000000005828d0 0000000000000034 T shared_dispatch_stub_260
0000000000582910 0000000000000028 T shared_dispatch_stub_261
0000000000582940 0000000000000034 T shared_dispatch_stub_262
0000000000582980 0000000000000034 T shared_dispatch_stub_263
00000000005829c0 0000000000000034 T shared_dispatch_stub_264
0000000000582a00 0000000000000034 T shared_dispatch_stub_265
0000000000582a40 0000000000000034 T shared_dispatch_stub_266
0000000000582a80 0000000000000034 T shared_dispatch_stub_267
0000000000582ac0 0000000000000034 T shared_dispatch_stub_268
0000000000582b00 0000000000000034 T shared_dispatch_stub_269
0000000000582b40 0000000000000034 T shared_dispatch_stub_270
0000000000582b80 0000000000000034 T shared_dispatch_stub_271
0000000000582bc0 0000000000000034 T shared_dispatch_stub_272
0000000000582c00 0000000000000034 T shared_dispatch_stub_273
0000000000582c40 0000000000000034 T shared_dispatch_stub_274
0000000000582c80 0000000000000034 T shared_dispatch_stub_275
0000000000582cc0 0000000000000034 T shared_dispatch_stub_276
0000000000582d00 0000000000000034 T shared_dispatch_stub_277
0000000000582d40 0000000000000034 T shared_dispatch_stub_278
0000000000582d80 0000000000000034 T shared_dispatch_stub_279
0000000000582dc0 0000000000000034 T shared_dispatch_stub_280
0000000000582e00 0000000000000034 T shared_dispatch_stub_281
0000000000582e40 0000000000000034 T shared_dispatch_stub_282
0000000000582e80 0000000000000034 T shared_dispatch_stub_283
0000000000582ec0 0000000000000034 T shared_dispatch_stub_284
0000000000582f00 0000000000000034 T shared_dispatch_stub_285
0000000000582f40 0000000000000034 T shared_dispatch_stub_286
0000000000582f80 0000000000000034 T shared_dispatch_stub_287
0000000000582fc0 0000000000000028 T shared_dispatch_stub_288
0000000000582ff0 0000000000000028 T shared_dispatch_stub_289
0000000000583020 0000000000000028 T shared_dispatch_stub_290
0000000000583050 0000000000000034 T shared_dispatch_stub_291
0000000000583090 0000000000000034 T shared_dispatch_stub_292
00000000005830d0 0000000000000034 T shared_dispatch_stub_293
0000000000583110 0000000000000034 T shared_dispatch_stub_294
0000000000583150 0000000000000034 T shared_dispatch_stub_295
0000000000583190 0000000000000028 T shared_dispatch_stub_296
00000000005831c0 0000000000000028 T shared_dispatch_stub_297
00000000005831f0 0000000000000028 T shared_dispatch_stub_298
0000000000583220 0000000000000028 T shared_dispatch_stub_299
0000000000583250 0000000000000028 T shared_dispatch_stub_300
0000000000583280 0000000000000028 T shared_dispatch_stub_301
00000000005832b0 0000000000000028 T shared_dispatch_stub_302
00000000005832e0 0000000000000028 T shared_dispatch_stub_303
0000000000583310 0000000000000028 T shared_dispatch_stub_304
0000000000583340 0000000000000034 T shared_dispatch_stub_305
0000000000583380 0000000000000034 T shared_dispatch_stub_306
00000000005833c0 0000000000000034 T shared_dispatch_stub_307
0000000000583400 0000000000000034 T shared_dispatch_stub_308
0000000000583440 0000000000000034 T shared_dispatch_stub_309
0000000000583480 0000000000000034 T shared_dispatch_stub_310
00000000005834c0 0000000000000034 T shared_dispatch_stub_311
0000000000583500 0000000000000034 T shared_dispatch_stub_312
0000000000583540 0000000000000034 T shared_dispatch_stub_313
0000000000583580 0000000000000034 T shared_dispatch_stub_314
00000000005835c0 0000000000000034 T shared_dispatch_stub_315
0000000000583600 0000000000000034 T shared_dispatch_stub_316
0000000000583640 0000000000000034 T shared_dispatch_stub_317
0000000000583680 0000000000000034 T shared_dispatch_stub_318
00000000005836c0 0000000000000028 T shared_dispatch_stub_319
00000000005836f0 0000000000000034 T shared_dispatch_stub_320
0000000000583730 0000000000000034 T shared_dispatch_stub_321
0000000000583770 0000000000000034 T shared_dispatch_stub_322
00000000005837b0 0000000000000034 T shared_dispatch_stub_323
00000000005837f0 0000000000000034 T shared_dispatch_stub_324
0000000000583830 0000000000000034 T shared_dispatch_stub_325
0000000000583870 0000000000000034 T shared_dispatch_stub_326
00000000005838b0 0000000000000034 T shared_dispatch_stub_327
00000000005838f0 0000000000000034 T shared_dispatch_stub_328
0000000000583930 0000000000000034 T shared_dispatch_stub_329
0000000000583970 0000000000000034 T shared_dispatch_stub_330
00000000005839b0 0000000000000034 T shared_dispatch_stub_331
00000000005839f0 0000000000000034 T shared_dispatch_stub_332
0000000000583a30 0000000000000034 T shared_dispatch_stub_333
0000000000583a70 0000000000000028 T shared_dispatch_stub_334
0000000000583aa0 0000000000000034 T shared_dispatch_stub_335
0000000000583ae0 0000000000000028 T shared_dispatch_stub_336
0000000000583b10 0000000000000034 T shared_dispatch_stub_337
0000000000583b50 0000000000000034 T shared_dispatch_stub_338
0000000000583b90 0000000000000034 T shared_dispatch_stub_339
0000000000583bd0 0000000000000034 T shared_dispatch_stub_340
0000000000583c10 0000000000000034 T shared_dispatch_stub_341
0000000000583c50 0000000000000034 T shared_dispatch_stub_342
0000000000583c90 0000000000000034 T shared_dispatch_stub_343
0000000000583cd0 0000000000000034 T shared_dispatch_stub_344
0000000000583d10 0000000000000034 T shared_dispatch_stub_345
0000000000583d50 0000000000000034 T shared_dispatch_stub_346
0000000000583d90 0000000000000034 T shared_dispatch_stub_347
0000000000583dd0 0000000000000034 T shared_dispatch_stub_348
0000000000583e10 0000000000000034 T shared_dispatch_stub_349
0000000000583e50 0000000000000034 T shared_dispatch_stub_350
0000000000583e90 0000000000000034 T shared_dispatch_stub_351
0000000000583ed0 0000000000000034 T shared_dispatch_stub_352
0000000000583f10 0000000000000034 T shared_dispatch_stub_353
0000000000583f50 0000000000000034 T shared_dispatch_stub_354
0000000000583f90 0000000000000034 T shared_dispatch_stub_355
0000000000583fd0 0000000000000034 T shared_dispatch_stub_356
0000000000584010 0000000000000034 T shared_dispatch_stub_357
0000000000584050 0000000000000034 T shared_dispatch_stub_358
0000000000584090 0000000000000034 T shared_dispatch_stub_359
00000000005840d0 0000000000000034 T shared_dispatch_stub_360
0000000000584110 0000000000000034 T shared_dispatch_stub_361
0000000000584150 0000000000000034 T shared_dispatch_stub_362
0000000000584190 0000000000000034 T shared_dispatch_stub_363
00000000005841d0 0000000000000034 T shared_dispatch_stub_364
0000000000584210 0000000000000034 T shared_dispatch_stub_365
0000000000584250 0000000000000034 T shared_dispatch_stub_366
0000000000584290 0000000000000034 T shared_dispatch_stub_367
00000000005842d0 0000000000000034 T shared_dispatch_stub_368
0000000000584310 0000000000000034 T shared_dispatch_stub_369
0000000000584350 0000000000000034 T shared_dispatch_stub_370
0000000000584390 0000000000000034 T shared_dispatch_stub_371
00000000005843d0 0000000000000034 T shared_dispatch_stub_372
0000000000584410 0000000000000034 T shared_dispatch_stub_373
0000000000584450 0000000000000034 T shared_dispatch_stub_374
0000000000584490 0000000000000034 T shared_dispatch_stub_375
00000000005844d0 0000000000000034 T shared_dispatch_stub_376
0000000000584510 0000000000000034 T shared_dispatch_stub_377
0000000000584550 0000000000000034 T shared_dispatch_stub_378
0000000000584590 0000000000000034 T shared_dispatch_stub_379
00000000005845d0 0000000000000034 T shared_dispatch_stub_380
0000000000584610 0000000000000034 T shared_dispatch_stub_381
0000000000584650 0000000000000034 T shared_dispatch_stub_382
0000000000584690 0000000000000034 T shared_dispatch_stub_383
00000000005846d0 0000000000000034 T shared_dispatch_stub_384
0000000000584710 0000000000000034 T shared_dispatch_stub_385
0000000000584750 0000000000000034 T shared_dispatch_stub_386
0000000000584790 0000000000000034 T shared_dispatch_stub_387
00000000005847d0 0000000000000034 T shared_dispatch_stub_388
0000000000584810 0000000000000034 T shared_dispatch_stub_389
0000000000584850 0000000000000034 T shared_dispatch_stub_390
0000000000584890 0000000000000034 T shared_dispatch_stub_391
00000000005848d0 0000000000000034 T shared_dispatch_stub_392
0000000000584910 0000000000000034 T shared_dispatch_stub_393
0000000000584950 0000000000000034 T shared_dispatch_stub_394
0000000000584990 0000000000000034 T shared_dispatch_stub_395
00000000005849d0 0000000000000034 T shared_dispatch_stub_396
0000000000584a10 0000000000000034 T shared_dispatch_stub_397
0000000000584a50 0000000000000034 T shared_dispatch_stub_398
0000000000584a90 0000000000000034 T shared_dispatch_stub_399
0000000000584ad0 0000000000000034 T shared_dispatch_stub_400
0000000000584b10 0000000000000034 T shared_dispatch_stub_401
0000000000584b50 0000000000000034 T shared_dispatch_stub_402
0000000000584b90 0000000000000034 T shared_dispatch_stub_403
0000000000584bd0 0000000000000034 T shared_dispatch_stub_404
0000000000584c10 0000000000000034 T shared_dispatch_stub_405
0000000000584c50 0000000000000034 T shared_dispatch_stub_406
0000000000584c90 0000000000000034 T shared_dispatch_stub_407
0000000000584cd0 0000000000000034 T shared_dispatch_stub_408
0000000000584d10 0000000000000034 T shared_dispatch_stub_409
0000000000584d50 0000000000000034 T shared_dispatch_stub_410
0000000000584d90 0000000000000034 T shared_dispatch_stub_411
0000000000584dd0 0000000000000034 T shared_dispatch_stub_412
0000000000584e10 0000000000000034 T shared_dispatch_stub_413
0000000000584e50 0000000000000034 T shared_dispatch_stub_414
0000000000584e90 0000000000000034 T shared_dispatch_stub_415
0000000000584ed0 0000000000000034 T shared_dispatch_stub_416
0000000000584f10 0000000000000034 T shared_dispatch_stub_417
0000000000584f50 0000000000000034 T shared_dispatch_stub_418
0000000000584f90 0000000000000034 T shared_dispatch_stub_419
0000000000584fd0 0000000000000034 T shared_dispatch_stub_420
0000000000585010 0000000000000034 T shared_dispatch_stub_421
0000000000585050 0000000000000028 T shared_dispatch_stub_422
0000000000585080 0000000000000034 T shared_dispatch_stub_423
00000000005850c0 0000000000000034 T shared_dispatch_stub_424
0000000000585100 0000000000000034 T shared_dispatch_stub_425
0000000000585140 0000000000000034 T shared_dispatch_stub_426
0000000000585180 0000000000000034 T shared_dispatch_stub_427
00000000005851c0 0000000000000034 T shared_dispatch_stub_428
0000000000585200 0000000000000034 T shared_dispatch_stub_429
0000000000585240 0000000000000034 T shared_dispatch_stub_430
0000000000585280 0000000000000028 T shared_dispatch_stub_431
00000000005852b0 0000000000000034 T shared_dispatch_stub_432
00000000005852f0 0000000000000034 T shared_dispatch_stub_433
0000000000585330 0000000000000034 T shared_dispatch_stub_434
0000000000585370 0000000000000034 T shared_dispatch_stub_435
00000000005853b0 0000000000000034 T shared_dispatch_stub_436
00000000005853f0 0000000000000034 T shared_dispatch_stub_437
0000000000585430 0000000000000034 T shared_dispatch_stub_438
0000000000585470 0000000000000034 T shared_dispatch_stub_439
00000000005854b0 0000000000000034 T shared_dispatch_stub_440
00000000005854f0 0000000000000034 T shared_dispatch_stub_441
0000000000585530 0000000000000034 T shared_dispatch_stub_442
0000000000585570 0000000000000034 T shared_dispatch_stub_443
00000000005855b0 0000000000000028 T shared_dispatch_stub_444
00000000005855e0 0000000000000034 T shared_dispatch_stub_445
0000000000585620 0000000000000028 T shared_dispatch_stub_446
0000000000585650 0000000000000034 T shared_dispatch_stub_447
0000000000585690 0000000000000034 T shared_dispatch_stub_448
00000000005856d0 0000000000000034 T shared_dispatch_stub_449
0000000000585710 0000000000000034 T shared_dispatch_stub_450
0000000000585750 0000000000000034 T shared_dispatch_stub_451
0000000000585790 0000000000000028 T shared_dispatch_stub_452
00000000005857c0 0000000000000034 T shared_dispatch_stub_453
0000000000585800 0000000000000028 T shared_dispatch_stub_454
0000000000585830 0000000000000034 T shared_dispatch_stub_455
0000000000585870 0000000000000034 T shared_dispatch_stub_456
00000000005858b0 0000000000000034 T shared_dispatch_stub_457
00000000005858f0 0000000000000034 T shared_dispatch_stub_458
0000000000585930 0000000000000034 T shared_dispatch_stub_459
0000000000585970 0000000000000034 T shared_dispatch_stub_460
00000000005859b0 0000000000000034 T shared_dispatch_stub_461
00000000005859f0 0000000000000034 T shared_dispatch_stub_462
0000000000585a30 0000000000000034 T shared_dispatch_stub_463
0000000000585a70 0000000000000034 T shared_dispatch_stub_464
0000000000585ab0 0000000000000034 T shared_dispatch_stub_465
0000000000585af0 0000000000000034 T shared_dispatch_stub_466
0000000000585b30 0000000000000034 T shared_dispatch_stub_467
0000000000585b70 0000000000000034 T shared_dispatch_stub_468
0000000000585bb0 0000000000000034 T shared_dispatch_stub_469
0000000000585bf0 0000000000000034 T shared_dispatch_stub_470
0000000000585c30 0000000000000034 T shared_dispatch_stub_471
0000000000585c70 0000000000000034 T shared_dispatch_stub_472
0000000000585cb0 0000000000000034 T shared_dispatch_stub_473
0000000000585cf0 0000000000000034 T shared_dispatch_stub_474
0000000000585d30 0000000000000034 T shared_dispatch_stub_475
0000000000585d70 0000000000000034 T shared_dispatch_stub_476
0000000000585db0 0000000000000034 T shared_dispatch_stub_477
0000000000585df0 0000000000000034 T shared_dispatch_stub_478
0000000000585e30 0000000000000034 T shared_dispatch_stub_479
0000000000585e70 0000000000000034 T shared_dispatch_stub_480
0000000000585eb0 0000000000000034 T shared_dispatch_stub_481
0000000000585ef0 0000000000000034 T shared_dispatch_stub_482
0000000000585f30 0000000000000028 T shared_dispatch_stub_483
0000000000585f60 0000000000000034 T shared_dispatch_stub_484
0000000000585fa0 0000000000000034 T shared_dispatch_stub_485
0000000000585fe0 0000000000000034 T shared_dispatch_stub_486
0000000000586020 0000000000000034 T shared_dispatch_stub_487
0000000000586060 0000000000000034 T shared_dispatch_stub_488
00000000005860a0 0000000000000034 T shared_dispatch_stub_489
00000000005860e0 0000000000000034 T shared_dispatch_stub_490
0000000000586120 0000000000000034 T shared_dispatch_stub_491
0000000000586160 0000000000000034 T shared_dispatch_stub_492
00000000005861a0 0000000000000034 T shared_dispatch_stub_493
00000000005861e0 0000000000000034 T shared_dispatch_stub_494
0000000000586220 0000000000000034 T shared_dispatch_stub_495
0000000000586260 0000000000000034 T shared_dispatch_stub_496
00000000005862a0 0000000000000034 T shared_dispatch_stub_497
00000000005862e0 0000000000000034 T shared_dispatch_stub_498
0000000000586320 0000000000000034 T shared_dispatch_stub_499
0000000000586360 0000000000000034 T shared_dispatch_stub_500
00000000005863a0 0000000000000034 T shared_dispatch_stub_501
00000000005863e0 0000000000000034 T shared_dispatch_stub_502
0000000000586420 0000000000000034 T shared_dispatch_stub_503
0000000000586460 0000000000000034 T shared_dispatch_stub_504
00000000005864a0 0000000000000034 T shared_dispatch_stub_505
00000000005864e0 0000000000000034 T shared_dispatch_stub_506
0000000000586520 0000000000000034 T shared_dispatch_stub_507
0000000000586560 0000000000000034 T shared_dispatch_stub_508
00000000005865a0 0000000000000034 T shared_dispatch_stub_509
00000000005865e0 0000000000000034 T shared_dispatch_stub_510
0000000000586620 0000000000000034 T shared_dispatch_stub_511
0000000000586660 0000000000000034 T shared_dispatch_stub_512
00000000005866a0 0000000000000034 T shared_dispatch_stub_513
00000000005866e0 0000000000000034 T shared_dispatch_stub_514
0000000000586720 0000000000000034 T shared_dispatch_stub_515
0000000000586760 0000000000000034 T shared_dispatch_stub_516
00000000005867a0 0000000000000034 T shared_dispatch_stub_517
00000000005867e0 0000000000000034 T shared_dispatch_stub_518
0000000000586820 0000000000000034 T shared_dispatch_stub_519
0000000000586860 0000000000000034 T shared_dispatch_stub_520
00000000005868a0 0000000000000034 T shared_dispatch_stub_521
00000000005868e0 0000000000000034 T shared_dispatch_stub_522
0000000000586920 0000000000000034 T shared_dispatch_stub_523
0000000000586960 0000000000000034 T shared_dispatch_stub_524
00000000005869a0 0000000000000034 T shared_dispatch_stub_525
00000000005869e0 0000000000000034 T shared_dispatch_stub_526
0000000000586a20 0000000000000034 T shared_dispatch_stub_527
0000000000586a60 0000000000000034 T shared_dispatch_stub_528
0000000000586aa0 0000000000000034 T shared_dispatch_stub_529
0000000000586ae0 0000000000000034 T shared_dispatch_stub_530
0000000000586b20 0000000000000034 T shared_dispatch_stub_531
0000000000586b60 0000000000000034 T shared_dispatch_stub_532
0000000000586ba0 0000000000000034 T shared_dispatch_stub_533
0000000000586be0 0000000000000034 T shared_dispatch_stub_534
0000000000586c20 0000000000000034 T shared_dispatch_stub_535
0000000000586c60 0000000000000034 T shared_dispatch_stub_536
0000000000586ca0 0000000000000034 T shared_dispatch_stub_537
0000000000586ce0 0000000000000034 T shared_dispatch_stub_538
0000000000586d20 0000000000000034 T shared_dispatch_stub_539
0000000000586d60 0000000000000034 T shared_dispatch_stub_540
0000000000586da0 0000000000000034 T shared_dispatch_stub_541
0000000000586de0 0000000000000034 T shared_dispatch_stub_542
0000000000586e20 0000000000000034 T shared_dispatch_stub_543
0000000000586e60 0000000000000034 T shared_dispatch_stub_544
0000000000586ea0 0000000000000034 T shared_dispatch_stub_545
0000000000586ee0 0000000000000034 T shared_dispatch_stub_546
0000000000586f20 0000000000000034 T shared_dispatch_stub_547
0000000000586f60 0000000000000034 T shared_dispatch_stub_548
0000000000586fa0 0000000000000034 T shared_dispatch_stub_549
0000000000586fe0 0000000000000034 T shared_dispatch_stub_550
0000000000587020 0000000000000034 T shared_dispatch_stub_551
0000000000587060 0000000000000034 T shared_dispatch_stub_552
00000000005870a0 0000000000000034 T shared_dispatch_stub_553
00000000005870e0 0000000000000034 T shared_dispatch_stub_554
0000000000587120 0000000000000034 T shared_dispatch_stub_555
0000000000587160 0000000000000034 T shared_dispatch_stub_556
00000000005871a0 0000000000000034 T shared_dispatch_stub_557
00000000005871e0 0000000000000034 T shared_dispatch_stub_558
0000000000587220 0000000000000034 T shared_dispatch_stub_559
0000000000587260 0000000000000034 T shared_dispatch_stub_560
00000000005872a0 0000000000000034 T shared_dispatch_stub_561
00000000005872e0 0000000000000034 T shared_dispatch_stub_562
0000000000587320 0000000000000034 T shared_dispatch_stub_563
0000000000587360 0000000000000034 T shared_dispatch_stub_564
00000000005873a0 0000000000000034 T shared_dispatch_stub_565
00000000005873e0 0000000000000034 T shared_dispatch_stub_566
0000000000587420 0000000000000034 T shared_dispatch_stub_567
0000000000587460 0000000000000034 T shared_dispatch_stub_568
00000000005874a0 0000000000000034 T shared_dispatch_stub_569
00000000005874e0 0000000000000034 T shared_dispatch_stub_570
0000000000587520 0000000000000034 T shared_dispatch_stub_571
0000000000587560 0000000000000034 T shared_dispatch_stub_572
00000000005875a0 0000000000000034 T shared_dispatch_stub_573
00000000005875e0 0000000000000034 T shared_dispatch_stub_574
0000000000587620 0000000000000034 T shared_dispatch_stub_575
0000000000587660 0000000000000034 T shared_dispatch_stub_576
00000000005876a0 0000000000000034 T shared_dispatch_stub_577
00000000005876e0 0000000000000034 T shared_dispatch_stub_578
0000000000587720 0000000000000034 T shared_dispatch_stub_579
0000000000587760 0000000000000034 T shared_dispatch_stub_580
00000000005877a0 0000000000000034 T shared_dispatch_stub_581
00000000005877e0 0000000000000034 T shared_dispatch_stub_582
0000000000587820 0000000000000028 T shared_dispatch_stub_583
0000000000587850 0000000000000028 T shared_dispatch_stub_584
0000000000587880 0000000000000034 T shared_dispatch_stub_585
00000000005878c0 0000000000000034 T shared_dispatch_stub_586
0000000000587900 0000000000000034 T shared_dispatch_stub_587
0000000000587940 0000000000000034 T shared_dispatch_stub_588
0000000000587980 0000000000000034 T shared_dispatch_stub_589
00000000005879c0 0000000000000034 T shared_dispatch_stub_590
0000000000587a00 0000000000000034 T shared_dispatch_stub_591
0000000000587a40 0000000000000034 T shared_dispatch_stub_592
0000000000587a80 0000000000000034 T shared_dispatch_stub_593
0000000000587ac0 0000000000000034 T shared_dispatch_stub_594
0000000000587b00 0000000000000034 T shared_dispatch_stub_595
0000000000587b40 0000000000000034 T shared_dispatch_stub_596
0000000000587b80 0000000000000034 T shared_dispatch_stub_597
0000000000587bc0 0000000000000034 T shared_dispatch_stub_598
0000000000587c00 0000000000000034 T shared_dispatch_stub_599
0000000000587c40 0000000000000034 T shared_dispatch_stub_600
0000000000587c80 0000000000000034 T shared_dispatch_stub_601
0000000000587cc0 0000000000000034 T shared_dispatch_stub_602
0000000000587d00 0000000000000034 T shared_dispatch_stub_603
0000000000587d40 0000000000000034 T shared_dispatch_stub_604
0000000000587d80 0000000000000034 T shared_dispatch_stub_605
0000000000587dc0 0000000000000034 T shared_dispatch_stub_606
0000000000587e00 0000000000000034 T shared_dispatch_stub_607
0000000000587e40 0000000000000034 T shared_dispatch_stub_608
0000000000587e80 0000000000000034 T shared_dispatch_stub_609
0000000000587ec0 0000000000000034 T shared_dispatch_stub_610
0000000000587f00 0000000000000034 T shared_dispatch_stub_611
0000000000587f40 0000000000000034 T shared_dispatch_stub_612
0000000000587f80 0000000000000034 T shared_dispatch_stub_613
0000000000587fc0 0000000000000034 T shared_dispatch_stub_614
0000000000588000 0000000000000034 T shared_dispatch_stub_615
0000000000588040 0000000000000034 T shared_dispatch_stub_616
0000000000588080 0000000000000034 T shared_dispatch_stub_617
00000000005880c0 0000000000000034 T shared_dispatch_stub_618
0000000000588100 0000000000000034 T shared_dispatch_stub_619
0000000000588140 0000000000000028 T shared_dispatch_stub_620
0000000000588170 0000000000000034 T shared_dispatch_stub_621
00000000005881b0 0000000000000034 T shared_dispatch_stub_622
00000000005881f0 0000000000000034 T shared_dispatch_stub_623
0000000000588230 0000000000000034 T shared_dispatch_stub_624
0000000000588270 0000000000000034 T shared_dispatch_stub_625
00000000005882b0 0000000000000034 T shared_dispatch_stub_626
00000000005882f0 0000000000000034 T shared_dispatch_stub_627
0000000000588330 0000000000000034 T shared_dispatch_stub_628
0000000000588370 0000000000000034 T shared_dispatch_stub_629
00000000005883b0 0000000000000034 T shared_dispatch_stub_630
00000000005883f0 0000000000000034 T shared_dispatch_stub_631
0000000000588430 0000000000000034 T shared_dispatch_stub_632
0000000000588470 0000000000000034 T shared_dispatch_stub_633
00000000005884b0 0000000000000034 T shared_dispatch_stub_634
00000000005884f0 0000000000000034 T shared_dispatch_stub_635
0000000000588530 0000000000000034 T shared_dispatch_stub_636
0000000000588570 0000000000000034 T shared_dispatch_stub_637
00000000005885b0 0000000000000034 T shared_dispatch_stub_638
00000000005885f0 0000000000000034 T shared_dispatch_stub_639
0000000000588630 0000000000000034 T shared_dispatch_stub_640
0000000000588670 0000000000000034 T shared_dispatch_stub_641
00000000005886b0 0000000000000034 T shared_dispatch_stub_642
00000000005886f0 0000000000000034 T shared_dispatch_stub_643
0000000000588730 0000000000000034 T shared_dispatch_stub_644
0000000000588770 0000000000000034 T shared_dispatch_stub_645
00000000005887b0 0000000000000034 T shared_dispatch_stub_646
00000000005887f0 0000000000000034 T shared_dispatch_stub_647
0000000000588830 0000000000000034 T shared_dispatch_stub_648
0000000000588870 0000000000000034 T shared_dispatch_stub_649
00000000005888b0 0000000000000028 T shared_dispatch_stub_650
00000000005888e0 0000000000000034 T shared_dispatch_stub_651
0000000000588920 0000000000000034 T shared_dispatch_stub_652
0000000000588960 0000000000000034 T shared_dispatch_stub_653
00000000005889a0 0000000000000034 T shared_dispatch_stub_654
00000000005889e0 0000000000000034 T shared_dispatch_stub_655
0000000000588a20 0000000000000034 T shared_dispatch_stub_656
0000000000588a60 0000000000000034 T shared_dispatch_stub_657
0000000000588aa0 0000000000000034 T shared_dispatch_stub_658
0000000000588ae0 0000000000000034 T shared_dispatch_stub_659
0000000000588b20 0000000000000034 T shared_dispatch_stub_660
0000000000588b60 0000000000000034 T shared_dispatch_stub_661
0000000000588ba0 0000000000000034 T shared_dispatch_stub_662
0000000000588be0 0000000000000034 T shared_dispatch_stub_663
0000000000588c20 0000000000000034 T shared_dispatch_stub_664
0000000000588c60 0000000000000034 T shared_dispatch_stub_665
0000000000588ca0 0000000000000034 T shared_dispatch_stub_666
0000000000588ce0 0000000000000034 T shared_dispatch_stub_667
0000000000588d20 0000000000000034 T shared_dispatch_stub_668
0000000000588d60 0000000000000034 T shared_dispatch_stub_669
0000000000588da0 0000000000000034 T shared_dispatch_stub_670
0000000000588de0 0000000000000034 T shared_dispatch_stub_671
0000000000588e20 0000000000000034 T shared_dispatch_stub_672
0000000000588e60 0000000000000034 T shared_dispatch_stub_673
0000000000588ea0 0000000000000034 T shared_dispatch_stub_674
0000000000588ee0 0000000000000034 T shared_dispatch_stub_675
0000000000588f20 0000000000000034 T shared_dispatch_stub_676
0000000000588f60 0000000000000034 T shared_dispatch_stub_677
0000000000588fa0 0000000000000034 T shared_dispatch_stub_678
0000000000588fe0 0000000000000034 T shared_dispatch_stub_679
0000000000589020 0000000000000034 T shared_dispatch_stub_680
0000000000589060 0000000000000034 T shared_dispatch_stub_681
00000000005890a0 0000000000000034 T shared_dispatch_stub_682
00000000005890e0 0000000000000034 T shared_dispatch_stub_683
0000000000589120 0000000000000034 T shared_dispatch_stub_684
0000000000589160 0000000000000034 T shared_dispatch_stub_685
00000000005891a0 0000000000000034 T shared_dispatch_stub_686
00000000005891e0 0000000000000034 T shared_dispatch_stub_687
0000000000589220 0000000000000034 T shared_dispatch_stub_688
0000000000589260 0000000000000034 T shared_dispatch_stub_689
00000000005892a0 0000000000000034 T shared_dispatch_stub_690
00000000005892e0 0000000000000034 T shared_dispatch_stub_691
0000000000589320 0000000000000034 T shared_dispatch_stub_692
0000000000589360 0000000000000034 T shared_dispatch_stub_693
00000000005893a0 0000000000000034 T shared_dispatch_stub_694
00000000005893e0 0000000000000034 T shared_dispatch_stub_695
0000000000589420 0000000000000034 T shared_dispatch_stub_696
0000000000589460 0000000000000034 T shared_dispatch_stub_697
00000000005894a0 0000000000000034 T shared_dispatch_stub_698
00000000005894e0 0000000000000034 T shared_dispatch_stub_699
0000000000589520 0000000000000034 T shared_dispatch_stub_700
0000000000589560 0000000000000034 T shared_dispatch_stub_701
00000000005895a0 0000000000000034 T shared_dispatch_stub_702
00000000005895e0 0000000000000034 T shared_dispatch_stub_703
0000000000589620 0000000000000034 T shared_dispatch_stub_704
0000000000589660 0000000000000034 T shared_dispatch_stub_705
00000000005896a0 0000000000000034 T shared_dispatch_stub_706
00000000005896e0 0000000000000034 T shared_dispatch_stub_707
0000000000589720 0000000000000034 T shared_dispatch_stub_708
0000000000589760 0000000000000034 T shared_dispatch_stub_709
00000000005897a0 0000000000000034 T shared_dispatch_stub_710
00000000005897e0 0000000000000034 T shared_dispatch_stub_711
0000000000589820 0000000000000034 T shared_dispatch_stub_712
0000000000589860 0000000000000034 T shared_dispatch_stub_713
00000000005898a0 0000000000000034 T shared_dispatch_stub_714
00000000005898e0 0000000000000034 T shared_dispatch_stub_715
0000000000589920 0000000000000034 T shared_dispatch_stub_716
0000000000589960 0000000000000034 T shared_dispatch_stub_717
00000000005899a0 0000000000000034 T shared_dispatch_stub_718
00000000005899e0 0000000000000034 T shared_dispatch_stub_719
0000000000589a20 0000000000000034 T shared_dispatch_stub_720
0000000000589a60 0000000000000034 T shared_dispatch_stub_721
0000000000589aa0 0000000000000034 T shared_dispatch_stub_722
0000000000589ae0 0000000000000034 T shared_dispatch_stub_723
0000000000589b20 0000000000000034 T shared_dispatch_stub_724
0000000000589b60 0000000000000034 T shared_dispatch_stub_725
0000000000589ba0 0000000000000034 T shared_dispatch_stub_726
0000000000589be0 0000000000000034 T shared_dispatch_stub_727
0000000000589c20 0000000000000034 T shared_dispatch_stub_728
0000000000589c60 0000000000000034 T shared_dispatch_stub_729
0000000000589ca0 0000000000000034 T shared_dispatch_stub_730
0000000000589ce0 0000000000000034 T shared_dispatch_stub_731
0000000000589d20 0000000000000034 T shared_dispatch_stub_732
0000000000589d60 0000000000000034 T shared_dispatch_stub_733
0000000000589da0 0000000000000034 T shared_dispatch_stub_734
0000000000589de0 0000000000000034 T shared_dispatch_stub_735
0000000000589e20 0000000000000034 T shared_dispatch_stub_736
0000000000589e60 0000000000000034 T shared_dispatch_stub_737
0000000000589ea0 0000000000000034 T shared_dispatch_stub_738
0000000000589ee0 0000000000000034 T shared_dispatch_stub_739
0000000000589f20 0000000000000034 T shared_dispatch_stub_740
0000000000589f60 0000000000000034 T shared_dispatch_stub_741
0000000000589fa0 0000000000000034 T shared_dispatch_stub_742
0000000000589fe0 0000000000000034 T shared_dispatch_stub_743
000000000058a020 0000000000000034 T shared_dispatch_stub_744
000000000058a060 0000000000000034 T shared_dispatch_stub_745
000000000058a0a0 0000000000000034 T shared_dispatch_stub_746
000000000058a0e0 0000000000000034 T shared_dispatch_stub_747
000000000058a120 0000000000000034 T shared_dispatch_stub_748
000000000058a160 0000000000000034 T shared_dispatch_stub_749
000000000058a1a0 0000000000000034 T shared_dispatch_stub_750
000000000058a1e0 0000000000000034 T shared_dispatch_stub_751
000000000058a220 0000000000000034 T shared_dispatch_stub_752
000000000058a260 0000000000000034 T shared_dispatch_stub_753
000000000058a2a0 0000000000000034 T shared_dispatch_stub_754
000000000058a2e0 0000000000000034 T shared_dispatch_stub_755
000000000058a320 0000000000000034 T shared_dispatch_stub_756
000000000058a360 0000000000000034 T shared_dispatch_stub_757
000000000058a3a0 0000000000000034 T shared_dispatch_stub_758
000000000058a3e0 0000000000000034 T shared_dispatch_stub_759
000000000058a420 0000000000000034 T shared_dispatch_stub_760
000000000058a460 0000000000000034 T shared_dispatch_stub_761
000000000058a4a0 0000000000000034 T shared_dispatch_stub_762
000000000058a4e0 0000000000000034 T shared_dispatch_stub_763
000000000058a520 0000000000000034 T shared_dispatch_stub_764
000000000058a560 0000000000000034 T shared_dispatch_stub_765
000000000058a5a0 0000000000000034 T shared_dispatch_stub_766
000000000058a5e0 0000000000000034 T shared_dispatch_stub_767
000000000058a620 0000000000000034 T shared_dispatch_stub_768
000000000058a660 0000000000000034 T shared_dispatch_stub_769
000000000058a6a0 0000000000000034 T shared_dispatch_stub_770
000000000058a6e0 0000000000000034 T shared_dispatch_stub_771
000000000058a720 0000000000000034 T shared_dispatch_stub_772
000000000058a760 0000000000000034 T shared_dispatch_stub_773
000000000058a7a0 0000000000000034 T shared_dispatch_stub_774
000000000058a7e0 0000000000000034 T shared_dispatch_stub_775
000000000058a820 0000000000000034 T shared_dispatch_stub_776
000000000058a860 0000000000000034 T shared_dispatch_stub_777
000000000058a8a0 0000000000000034 T shared_dispatch_stub_778
000000000058a8e0 0000000000000034 T shared_dispatch_stub_779
000000000058a920 0000000000000034 T shared_dispatch_stub_780
000000000058a960 0000000000000034 T shared_dispatch_stub_781
000000000058a9a0 0000000000000034 T shared_dispatch_stub_782
000000000058a9e0 0000000000000034 T shared_dispatch_stub_783
000000000058aa20 0000000000000034 T shared_dispatch_stub_784
000000000058aa60 0000000000000034 T shared_dispatch_stub_785
000000000058aaa0 0000000000000034 T shared_dispatch_stub_786
000000000058aae0 0000000000000034 T shared_dispatch_stub_787
000000000058ab20 0000000000000034 T shared_dispatch_stub_788
000000000058ab60 0000000000000034 T shared_dispatch_stub_789
000000000058aba0 0000000000000034 T shared_dispatch_stub_790
000000000058abe0 0000000000000034 T shared_dispatch_stub_791
000000000058ac20 0000000000000034 T shared_dispatch_stub_792
000000000058ac60 0000000000000034 T shared_dispatch_stub_793
000000000058aca0 0000000000000034 T shared_dispatch_stub_794
000000000058ace0 0000000000000034 T shared_dispatch_stub_795
000000000058ad20 0000000000000034 T shared_dispatch_stub_796
000000000058ad60 0000000000000034 T shared_dispatch_stub_797
000000000058ada0 0000000000000034 T shared_dispatch_stub_798
000000000058ade0 0000000000000034 T shared_dispatch_stub_799
000000000058ae20 0000000000000034 T shared_dispatch_stub_800
000000000058ae60 0000000000000034 T shared_dispatch_stub_801
000000000058aea0 0000000000000034 T shared_dispatch_stub_802
000000000058aee0 0000000000000034 T shared_dispatch_stub_803
000000000058af20 0000000000000034 T shared_dispatch_stub_804
000000000058af60 0000000000000034 T shared_dispatch_stub_805
000000000058afa0 0000000000000034 T shared_dispatch_stub_806
000000000058afe0 0000000000000028 T shared_dispatch_stub_807
000000000058b010 0000000000000028 T shared_dispatch_stub_808
000000000058b040 0000000000000034 T shared_dispatch_stub_809
000000000058b080 0000000000000034 T shared_dispatch_stub_810
000000000058b0c0 0000000000000034 T shared_dispatch_stub_811
000000000058b100 0000000000000034 T shared_dispatch_stub_812
000000000058b140 0000000000000028 T shared_dispatch_stub_813
000000000058b170 0000000000000028 T shared_dispatch_stub_814
000000000058b1a0 0000000000000034 T shared_dispatch_stub_815
000000000058b1e0 0000000000000028 T shared_dispatch_stub_816
000000000058b210 0000000000000034 T shared_dispatch_stub_817
000000000058b250 0000000000000034 T shared_dispatch_stub_818
000000000058b290 0000000000000034 T shared_dispatch_stub_819
000000000058b2d0 0000000000000034 T shared_dispatch_stub_820
000000000058b310 0000000000000034 T shared_dispatch_stub_821
000000000058b350 0000000000000034 T shared_dispatch_stub_822
000000000058b390 0000000000000034 T shared_dispatch_stub_823
000000000058b3d0 0000000000000034 T shared_dispatch_stub_824
000000000058b410 0000000000000034 T shared_dispatch_stub_825
000000000058b450 0000000000000034 T shared_dispatch_stub_826
000000000058b490 0000000000000034 T shared_dispatch_stub_827
000000000058b4d0 0000000000000034 T shared_dispatch_stub_828
000000000058b510 0000000000000034 T shared_dispatch_stub_829
000000000058b550 0000000000000034 T shared_dispatch_stub_830
000000000058b590 0000000000000034 T shared_dispatch_stub_831
000000000058b5d0 0000000000000034 T shared_dispatch_stub_832
000000000058b610 0000000000000034 T shared_dispatch_stub_833
000000000058b650 0000000000000034 T shared_dispatch_stub_834
000000000058b690 0000000000000034 T shared_dispatch_stub_835
000000000058b6d0 0000000000000034 T shared_dispatch_stub_836
000000000058b710 0000000000000034 T shared_dispatch_stub_837
000000000058b750 0000000000000034 T shared_dispatch_stub_838
000000000058b790 0000000000000034 T shared_dispatch_stub_839
000000000058b7d0 0000000000000034 T shared_dispatch_stub_840
000000000058b810 0000000000000028 T shared_dispatch_stub_841
000000000058b840 0000000000000034 T shared_dispatch_stub_842
000000000058b880 0000000000000034 T shared_dispatch_stub_843
000000000058b8c0 0000000000000034 T shared_dispatch_stub_844
000000000058b900 0000000000000034 T shared_dispatch_stub_845
000000000058b940 0000000000000034 T shared_dispatch_stub_846
000000000058b980 0000000000000034 T shared_dispatch_stub_847
000000000058b9c0 0000000000000034 T shared_dispatch_stub_848
000000000058ba00 0000000000000034 T shared_dispatch_stub_849
000000000058ba40 0000000000000034 T shared_dispatch_stub_850
000000000058ba80 0000000000000034 T shared_dispatch_stub_851
000000000058bac0 0000000000000034 T shared_dispatch_stub_852
000000000058bb00 0000000000000034 T shared_dispatch_stub_853
000000000058bb40 0000000000000034 T shared_dispatch_stub_854
000000000058bb80 0000000000000034 T shared_dispatch_stub_855
000000000058bbc0 0000000000000034 T shared_dispatch_stub_856
000000000058bc00 0000000000000034 T shared_dispatch_stub_857
000000000058bc40 0000000000000034 T shared_dispatch_stub_858
000000000058bc80 0000000000000034 T shared_dispatch_stub_859
000000000058bcc0 0000000000000034 T shared_dispatch_stub_860
000000000058bd00 0000000000000034 T shared_dispatch_stub_861
000000000058bd40 0000000000000034 T shared_dispatch_stub_862
000000000058bd80 0000000000000034 T shared_dispatch_stub_863
000000000058bdc0 0000000000000034 T shared_dispatch_stub_864
000000000058be00 0000000000000034 T shared_dispatch_stub_865
000000000058be40 0000000000000034 T shared_dispatch_stub_866
000000000058be80 0000000000000034 T shared_dispatch_stub_867
000000000058bec0 0000000000000034 T shared_dispatch_stub_868
000000000058bf00 0000000000000034 T shared_dispatch_stub_869
000000000058bf40 0000000000000034 T shared_dispatch_stub_870
000000000058bf80 0000000000000034 T shared_dispatch_stub_871
000000000058bfc0 0000000000000034 T shared_dispatch_stub_872
000000000058c000 0000000000000034 T shared_dispatch_stub_873
000000000058c040 0000000000000034 T shared_dispatch_stub_874
000000000058c080 0000000000000034 T shared_dispatch_stub_875
000000000058c0c0 0000000000000034 T shared_dispatch_stub_876
000000000058c100 0000000000000034 T shared_dispatch_stub_877
000000000058c140 0000000000000034 T shared_dispatch_stub_878
000000000058c180 0000000000000034 T shared_dispatch_stub_879
000000000058c1c0 0000000000000034 T shared_dispatch_stub_880
000000000058c200 0000000000000034 T shared_dispatch_stub_881
000000000058c240 0000000000000034 T shared_dispatch_stub_882
000000000058c280 0000000000000034 T shared_dispatch_stub_883
000000000058c2c0 0000000000000034 T shared_dispatch_stub_884
000000000058c300 0000000000000034 T shared_dispatch_stub_885
000000000058c340 0000000000000034 T shared_dispatch_stub_886
000000000058c380 0000000000000034 T shared_dispatch_stub_887
000000000058c3c0 0000000000000034 T shared_dispatch_stub_888
000000000058c400 0000000000000034 T shared_dispatch_stub_889
000000000058c440 0000000000000034 T shared_dispatch_stub_890
000000000058c480 0000000000000034 T shared_dispatch_stub_891
000000000058c4c0 0000000000000034 T shared_dispatch_stub_892
000000000058c500 0000000000000034 T shared_dispatch_stub_893
000000000058c540 0000000000000034 T shared_dispatch_stub_894
000000000058c580 0000000000000034 T shared_dispatch_stub_895
000000000058c5c0 0000000000000034 T shared_dispatch_stub_896
000000000058c600 0000000000000034 T shared_dispatch_stub_897
000000000058c640 0000000000000034 T shared_dispatch_stub_898
000000000058c680 0000000000000034 T shared_dispatch_stub_899
000000000058c6c0 0000000000000034 T shared_dispatch_stub_900
000000000058c700 0000000000000034 T shared_dispatch_stub_901
000000000058c740 0000000000000034 T shared_dispatch_stub_902
000000000058c780 0000000000000034 T shared_dispatch_stub_903
000000000058c7c0 0000000000000034 T shared_dispatch_stub_904
000000000058c800 0000000000000034 T shared_dispatch_stub_905
000000000058c840 0000000000000034 T shared_dispatch_stub_906
000000000058c880 0000000000000034 T shared_dispatch_stub_907
000000000058c8c0 0000000000000034 T shared_dispatch_stub_908
000000000058c900 0000000000000034 T shared_dispatch_stub_909
000000000058c940 0000000000000034 T shared_dispatch_stub_910
000000000058c980 0000000000000034 T shared_dispatch_stub_911
000000000058c9c0 0000000000000034 T shared_dispatch_stub_912
000000000058ca00 0000000000000034 T shared_dispatch_stub_913
000000000058ca40 0000000000000034 T shared_dispatch_stub_914
000000000058ca80 0000000000000034 T shared_dispatch_stub_915
000000000058cac0 0000000000000034 T shared_dispatch_stub_916
000000000058cb00 0000000000000034 T shared_dispatch_stub_917
000000000058cb40 0000000000000034 T shared_dispatch_stub_918
000000000058cb80 0000000000000034 T shared_dispatch_stub_919
000000000058cbc0 0000000000000034 T shared_dispatch_stub_920
000000000058cc00 0000000000000034 T shared_dispatch_stub_921
000000000058cc40 0000000000000034 T shared_dispatch_stub_922
000000000058cc80 0000000000000034 T shared_dispatch_stub_923
000000000058ccc0 0000000000000034 T shared_dispatch_stub_924
000000000058cd00 0000000000000034 T shared_dispatch_stub_925
000000000058cd40 0000000000000034 T shared_dispatch_stub_926
000000000058cd80 0000000000000034 T shared_dispatch_stub_927
000000000058cdc0 0000000000000034 T shared_dispatch_stub_928
000000000058ce00 0000000000000034 T shared_dispatch_stub_929
000000000058ce40 0000000000000034 T shared_dispatch_stub_930
000000000058ce80 0000000000000034 T shared_dispatch_stub_931
000000000058cec0 0000000000000034 T shared_dispatch_stub_932
000000000058cf00 0000000000000034 T shared_dispatch_stub_933
000000000058cf40 0000000000000034 T shared_dispatch_stub_934
000000000058cf80 0000000000000034 T shared_dispatch_stub_935
000000000058cfc0 0000000000000034 T shared_dispatch_stub_936
000000000058d000 0000000000000034 T shared_dispatch_stub_937
000000000058d040 0000000000000034 T shared_dispatch_stub_938
000000000058d080 0000000000000034 T shared_dispatch_stub_939
000000000058d0c0 0000000000000034 T shared_dispatch_stub_940
000000000058d100 0000000000000034 T shared_dispatch_stub_941
000000000058d140 0000000000000034 T shared_dispatch_stub_942
000000000058d180 0000000000000034 T shared_dispatch_stub_943
000000000058d1c0 0000000000000034 T shared_dispatch_stub_944
000000000058d200 0000000000000034 T shared_dispatch_stub_945
000000000058d240 0000000000000034 T shared_dispatch_stub_946
000000000058d280 0000000000000034 T shared_dispatch_stub_947
000000000058d2c0 0000000000000034 T shared_dispatch_stub_948
000000000058d300 0000000000000034 T shared_dispatch_stub_949
000000000058d340 0000000000000034 T shared_dispatch_stub_950
000000000058d380 0000000000000034 T shared_dispatch_stub_951
000000000058d3c0 0000000000000034 T shared_dispatch_stub_952
000000000058d400 0000000000000034 T shared_dispatch_stub_953
000000000058d440 0000000000000034 T shared_dispatch_stub_954
000000000058d480 0000000000000034 T shared_dispatch_stub_955
000000000058d4c0 0000000000000034 T shared_dispatch_stub_956
000000000058d500 0000000000000034 T shared_dispatch_stub_957
000000000058d540 0000000000000034 T shared_dispatch_stub_958
000000000058d580 0000000000000034 T shared_dispatch_stub_959
000000000058d5c0 0000000000000034 T shared_dispatch_stub_960
000000000058d600 0000000000000034 T shared_dispatch_stub_961
000000000058d640 0000000000000034 T shared_dispatch_stub_962
000000000058d680 0000000000000034 T shared_dispatch_stub_963
000000000058d6c0 0000000000000034 T shared_dispatch_stub_964
000000000058d700 0000000000000034 T shared_dispatch_stub_965
000000000058d740 0000000000000034 T shared_dispatch_stub_966
000000000058d780 0000000000000034 T shared_dispatch_stub_967
000000000058d7c0 0000000000000034 T shared_dispatch_stub_968
000000000058d800 0000000000000034 T shared_dispatch_stub_969
000000000058d840 0000000000000034 T shared_dispatch_stub_970
000000000058d880 0000000000000034 T shared_dispatch_stub_971
000000000058d8c0 0000000000000034 T shared_dispatch_stub_972
000000000058d900 0000000000000034 T shared_dispatch_stub_973
000000000058d940 0000000000000034 T shared_dispatch_stub_974
000000000058d980 0000000000000034 T shared_dispatch_stub_975
000000000058d9c0 0000000000000034 T shared_dispatch_stub_976
000000000058da00 0000000000000034 T shared_dispatch_stub_977
000000000058da40 0000000000000034 T shared_dispatch_stub_978
000000000058da80 0000000000000034 T shared_dispatch_stub_979
000000000058dac0 0000000000000034 T shared_dispatch_stub_980
000000000058db00 0000000000000034 T shared_dispatch_stub_981
000000000058db40 0000000000000034 T shared_dispatch_stub_982
000000000058db80 0000000000000034 T shared_dispatch_stub_983
000000000058dbc0 0000000000000034 T shared_dispatch_stub_984
000000000058dc00 0000000000000034 T shared_dispatch_stub_985
000000000058dc40 0000000000000034 T shared_dispatch_stub_986
000000000058dc80 0000000000000034 T shared_dispatch_stub_987
000000000058dcc0 0000000000000034 T shared_dispatch_stub_988
000000000058dd00 0000000000000034 T shared_dispatch_stub_989
000000000058dd40 0000000000000034 T shared_dispatch_stub_990
000000000058dd80 0000000000000034 T shared_dispatch_stub_991
000000000058ddc0 0000000000000034 T shared_dispatch_stub_992
000000000058de00 0000000000000034 T shared_dispatch_stub_993
000000000058de40 0000000000000034 T shared_dispatch_stub_994
000000000058de80 0000000000000034 T shared_dispatch_stub_995
000000000058dec0 0000000000000034 T shared_dispatch_stub_996
000000000058df00 0000000000000034 T shared_dispatch_stub_997
000000000058df40 0000000000000034 T shared_dispatch_stub_998
000000000058df80 0000000000000034 T shared_dispatch_stub_999
000000000058dfc0 0000000000000034 T shared_dispatch_stub_1000
000000000058e000 0000000000000034 T shared_dispatch_stub_1001
000000000058e040 0000000000000034 T shared_dispatch_stub_1002
000000000058e080 0000000000000034 T shared_dispatch_stub_1003
000000000058e0c0 0000000000000034 T shared_dispatch_stub_1004
000000000058e100 0000000000000034 T shared_dispatch_stub_1005
000000000058e140 0000000000000034 T shared_dispatch_stub_1006
000000000058e180 0000000000000034 T shared_dispatch_stub_1007
000000000058e1c0 0000000000000034 T shared_dispatch_stub_1008
000000000058e200 0000000000000034 T shared_dispatch_stub_1009
000000000058e240 0000000000000034 T shared_dispatch_stub_1010
000000000058e280 0000000000000034 T shared_dispatch_stub_1011
000000000058e2c0 0000000000000034 T shared_dispatch_stub_1012
000000000058e300 0000000000000034 T shared_dispatch_stub_1013
000000000058e340 0000000000000034 T shared_dispatch_stub_1014
000000000058e380 0000000000000034 T shared_dispatch_stub_1015
000000000058e3c0 0000000000000034 T shared_dispatch_stub_1016
000000000058e400 0000000000000034 T shared_dispatch_stub_1017
000000000058e440 0000000000000034 T shared_dispatch_stub_1018
000000000058e480 0000000000000034 T shared_dispatch_stub_1019
000000000058e4c0 0000000000000034 T shared_dispatch_stub_1020
000000000058e500 0000000000000034 T shared_dispatch_stub_1021
000000000058e540 0000000000000034 T shared_dispatch_stub_1022
000000000058e580 0000000000000034 T shared_dispatch_stub_1023
000000000058e5c0 0000000000000034 T shared_dispatch_stub_1024
000000000058e600 0000000000000034 T shared_dispatch_stub_1025
000000000058e640 0000000000000034 T shared_dispatch_stub_1026
000000000058e680 0000000000000034 T shared_dispatch_stub_1027
000000000058e6c0 0000000000000034 T shared_dispatch_stub_1028
000000000058e700 0000000000000034 T shared_dispatch_stub_1029
000000000058e740 0000000000000034 T shared_dispatch_stub_1030
000000000058e780 0000000000000034 T shared_dispatch_stub_1031
000000000058e7c0 0000000000000034 T shared_dispatch_stub_1032
000000000058e800 0000000000000034 T shared_dispatch_stub_1033
000000000058e840 0000000000000034 T shared_dispatch_stub_1034
000000000058e880 0000000000000034 T shared_dispatch_stub_1035
000000000058e8c0 0000000000000034 T shared_dispatch_stub_1036
000000000058e900 0000000000000034 T shared_dispatch_stub_1037
000000000058e940 0000000000000034 T shared_dispatch_stub_1038
000000000058e980 0000000000000034 T shared_dispatch_stub_1039
000000000058e9c0 0000000000000034 T shared_dispatch_stub_1040
000000000058ea00 0000000000000034 T shared_dispatch_stub_1041
000000000058ea40 0000000000000034 T shared_dispatch_stub_1042
000000000058ea80 0000000000000034 T shared_dispatch_stub_1043
000000000058eac0 0000000000000034 T shared_dispatch_stub_1044
000000000058eb00 0000000000000034 T shared_dispatch_stub_1045
000000000058eb40 0000000000000034 T shared_dispatch_stub_1046
000000000058eb80 0000000000000034 T shared_dispatch_stub_1047
000000000058ebc0 0000000000000034 T shared_dispatch_stub_1048
000000000058ec00 0000000000000034 T shared_dispatch_stub_1049
000000000058ec40 0000000000000034 T shared_dispatch_stub_1050
000000000058ec80 0000000000000034 T shared_dispatch_stub_1051
000000000058ecc0 0000000000000034 T shared_dispatch_stub_1052
000000000058ed00 0000000000000034 T shared_dispatch_stub_1053
000000000058ed40 0000000000000034 T shared_dispatch_stub_1054
000000000058ed80 0000000000000034 T shared_dispatch_stub_1055
000000000058edc0 0000000000000034 T shared_dispatch_stub_1056
000000000058ee00 0000000000000034 T shared_dispatch_stub_1057
000000000058ee40 0000000000000034 T shared_dispatch_stub_1058
000000000058ee80 0000000000000034 T shared_dispatch_stub_1059
000000000058eec0 0000000000000034 T shared_dispatch_stub_1060
000000000058ef00 0000000000000034 T shared_dispatch_stub_1061
000000000058ef40 0000000000000034 T shared_dispatch_stub_1062
000000000058ef80 0000000000000034 T shared_dispatch_stub_1063
000000000058efc0 0000000000000034 T shared_dispatch_stub_1064
000000000058f000 0000000000000034 T shared_dispatch_stub_1065
000000000058f040 0000000000000034 T shared_dispatch_stub_1066
000000000058f080 0000000000000034 T shared_dispatch_stub_1067
000000000058f0c0 0000000000000034 T shared_dispatch_stub_1068
000000000058f100 0000000000000028 T shared_dispatch_stub_1069
000000000058f130 0000000000000034 T shared_dispatch_stub_1070
000000000058f170 0000000000000034 T shared_dispatch_stub_1071
000000000058f1b0 0000000000000034 T shared_dispatch_stub_1072
000000000058f1f0 0000000000000034 T shared_dispatch_stub_1073
000000000058f230 0000000000000034 T shared_dispatch_stub_1074
000000000058f270 0000000000000034 T shared_dispatch_stub_1075
000000000058f2b0 0000000000000034 T shared_dispatch_stub_1076
000000000058f2f0 0000000000000034 T shared_dispatch_stub_1077
000000000058f330 0000000000000034 T shared_dispatch_stub_1078
000000000058f370 0000000000000028 T shared_dispatch_stub_1079
000000000058f3a0 0000000000000034 T shared_dispatch_stub_1080
000000000058f3e0 0000000000000034 T shared_dispatch_stub_1081
000000000058f420 0000000000000034 T shared_dispatch_stub_1082
000000000058f460 0000000000000034 T shared_dispatch_stub_1083
000000000058f4a0 0000000000000034 T shared_dispatch_stub_1084
000000000058f4e0 0000000000000034 T shared_dispatch_stub_1085
000000000058f520 0000000000000034 T shared_dispatch_stub_1086
000000000058f560 0000000000000034 T shared_dispatch_stub_1087
000000000058f5a0 0000000000000034 T shared_dispatch_stub_1088
000000000058f5e0 0000000000000034 T shared_dispatch_stub_1089
000000000058f620 0000000000000034 T shared_dispatch_stub_1090
000000000058f660 0000000000000034 T shared_dispatch_stub_1091
000000000058f6a0 0000000000000034 T shared_dispatch_stub_1092
000000000058f6e0 0000000000000034 T shared_dispatch_stub_1093
000000000058f720 0000000000000034 T shared_dispatch_stub_1094
000000000058f760 0000000000000034 T shared_dispatch_stub_1095
000000000058f7a0 0000000000000034 T shared_dispatch_stub_1096
000000000058f7e0 0000000000000034 T shared_dispatch_stub_1097
000000000058f820 0000000000000034 T shared_dispatch_stub_1098
000000000058f860 0000000000000034 T shared_dispatch_stub_1099
000000000058f8a0 0000000000000034 T shared_dispatch_stub_1100
000000000058f8e0 0000000000000034 T shared_dispatch_stub_1101
000000000058f920 0000000000000034 T shared_dispatch_stub_1102
000000000058f960 0000000000000034 T shared_dispatch_stub_1103
000000000058f9a0 0000000000000034 T shared_dispatch_stub_1104
000000000058f9e0 0000000000000034 T shared_dispatch_stub_1105
000000000058fa20 0000000000000034 T shared_dispatch_stub_1106
000000000058fa60 0000000000000034 T shared_dispatch_stub_1107
000000000058faa0 0000000000000034 T shared_dispatch_stub_1108
000000000058fae0 0000000000000034 T shared_dispatch_stub_1109
000000000058fb20 0000000000000034 T shared_dispatch_stub_1110
000000000058fb60 0000000000000034 T shared_dispatch_stub_1111
000000000058fba0 0000000000000034 T shared_dispatch_stub_1112
000000000058fbe0 0000000000000034 T shared_dispatch_stub_1113
000000000058fc20 0000000000000034 T shared_dispatch_stub_1114
000000000058fc60 0000000000000034 T shared_dispatch_stub_1115
000000000058fca0 0000000000000034 T shared_dispatch_stub_1116
000000000058fce0 0000000000000034 T shared_dispatch_stub_1117
000000000058fd20 0000000000000034 T shared_dispatch_stub_1118
000000000058fd60 0000000000000034 T shared_dispatch_stub_1119
000000000058fda0 0000000000000034 T shared_dispatch_stub_1120
000000000058fde0 0000000000000034 T shared_dispatch_stub_1121
000000000058fe20 0000000000000034 T shared_dispatch_stub_1122
000000000058fe60 0000000000000034 T shared_dispatch_stub_1123
000000000058fea0 0000000000000034 T shared_dispatch_stub_1124
000000000058fee0 0000000000000034 T shared_dispatch_stub_1125
000000000058ff20 0000000000000034 T shared_dispatch_stub_1126
000000000058ff60 0000000000000034 T shared_dispatch_stub_1127
000000000058ffa0 0000000000000034 T shared_dispatch_stub_1128
000000000058ffe0 0000000000000034 T shared_dispatch_stub_1129
0000000000590020 0000000000000034 T shared_dispatch_stub_1130
0000000000590060 0000000000000034 T shared_dispatch_stub_1131
00000000005900a0 0000000000000034 T shared_dispatch_stub_1132
00000000005900e0 0000000000000034 T shared_dispatch_stub_1133
0000000000590120 0000000000000034 T shared_dispatch_stub_1134
0000000000590160 0000000000000034 T shared_dispatch_stub_1135
00000000005901a0 0000000000000034 T shared_dispatch_stub_1136
00000000005901e0 0000000000000034 T shared_dispatch_stub_1137
0000000000590220 0000000000000034 T shared_dispatch_stub_1138
0000000000590260 0000000000000034 T shared_dispatch_stub_1139
00000000005902a0 0000000000000034 T shared_dispatch_stub_1140
00000000005902e0 0000000000000034 T shared_dispatch_stub_1141
0000000000590320 0000000000000034 T shared_dispatch_stub_1142
0000000000590360 0000000000000034 T shared_dispatch_stub_1143
00000000005903a0 0000000000000034 T shared_dispatch_stub_1144
00000000005903e0 0000000000000034 T shared_dispatch_stub_1145
0000000000590420 0000000000000034 T shared_dispatch_stub_1146
0000000000590460 0000000000000034 T shared_dispatch_stub_1147
00000000005904a0 0000000000000034 T shared_dispatch_stub_1148
00000000005904e0 0000000000000034 T shared_dispatch_stub_1149
0000000000590520 0000000000000034 T shared_dispatch_stub_1150
0000000000590560 0000000000000034 T shared_dispatch_stub_1151
00000000005905a0 0000000000000034 T shared_dispatch_stub_1152
00000000005905e0 0000000000000034 T shared_dispatch_stub_1153
0000000000590620 0000000000000034 T shared_dispatch_stub_1154
0000000000590660 0000000000000034 T shared_dispatch_stub_1155
00000000005906a0 0000000000000034 T shared_dispatch_stub_1156
00000000005906e0 0000000000000028 T shared_dispatch_stub_1157
0000000000590710 0000000000000034 T shared_dispatch_stub_1158
0000000000590750 0000000000000034 T shared_dispatch_stub_1159
0000000000590790 0000000000000034 T shared_dispatch_stub_1160
00000000005907d0 0000000000000034 T shared_dispatch_stub_1161
0000000000590810 0000000000000034 T shared_dispatch_stub_1162
0000000000590850 0000000000000034 T shared_dispatch_stub_1163
0000000000590890 0000000000000034 T shared_dispatch_stub_1164
00000000005908d0 0000000000000034 T shared_dispatch_stub_1165
0000000000590910 0000000000000034 T shared_dispatch_stub_1166
0000000000590950 0000000000000034 T shared_dispatch_stub_1167
0000000000590990 0000000000000034 T shared_dispatch_stub_1168
00000000005909d0 0000000000000028 T shared_dispatch_stub_1169
0000000000590a00 0000000000000034 T shared_dispatch_stub_1170
0000000000590a40 0000000000000028 T shared_dispatch_stub_1171
0000000000590a70 0000000000000034 T shared_dispatch_stub_1172
0000000000590ab0 0000000000000034 T shared_dispatch_stub_1173
0000000000590af0 0000000000000028 T shared_dispatch_stub_1174
0000000000590b20 0000000000000034 T shared_dispatch_stub_1175
0000000000590b60 0000000000000028 T shared_dispatch_stub_1176
0000000000590b90 0000000000000028 T shared_dispatch_stub_1177
0000000000590bc0 0000000000000034 T shared_dispatch_stub_1178
0000000000590c00 0000000000000028 T shared_dispatch_stub_1179
0000000000590c30 0000000000000034 T shared_dispatch_stub_1180
0000000000590c70 0000000000000034 T shared_dispatch_stub_1181
0000000000590cb0 0000000000000034 T shared_dispatch_stub_1182
0000000000590cf0 0000000000000034 T shared_dispatch_stub_1183
0000000000590d30 0000000000000034 T shared_dispatch_stub_1184
0000000000590d70 0000000000000034 T shared_dispatch_stub_1185
0000000000590db0 0000000000000034 T shared_dispatch_stub_1186
0000000000590df0 0000000000000034 T shared_dispatch_stub_1187
0000000000590e30 0000000000000034 T shared_dispatch_stub_1188
0000000000590e70 0000000000000034 T shared_dispatch_stub_1189
0000000000590eb0 0000000000000034 T shared_dispatch_stub_1190
0000000000590ef0 0000000000000034 T shared_dispatch_stub_1191
0000000000590f30 0000000000000034 T shared_dispatch_stub_1192
0000000000590f70 0000000000000034 T shared_dispatch_stub_1193
0000000000590fb0 0000000000000034 T shared_dispatch_stub_1194
0000000000590ff0 0000000000000034 T shared_dispatch_stub_1195
0000000000591030 0000000000000034 T shared_dispatch_stub_1196
0000000000591070 0000000000000034 T shared_dispatch_stub_1197
00000000005910b0 0000000000000034 T shared_dispatch_stub_1198
00000000005910f0 0000000000000034 T shared_dispatch_stub_1199
0000000000591130 0000000000000034 T shared_dispatch_stub_1200
0000000000591170 0000000000000034 T shared_dispatch_stub_1201
00000000005911b0 0000000000000034 T shared_dispatch_stub_1202
00000000005911f0 0000000000000034 T shared_dispatch_stub_1203
0000000000591230 0000000000000034 T shared_dispatch_stub_1204
0000000000591270 0000000000000034 T shared_dispatch_stub_1205
00000000005912b0 0000000000000034 T shared_dispatch_stub_1206
00000000005912f0 0000000000000034 T shared_dispatch_stub_1207
0000000000591330 0000000000000034 T shared_dispatch_stub_1208
0000000000591370 0000000000000034 T shared_dispatch_stub_1209
00000000005913b0 0000000000000034 T shared_dispatch_stub_1210
00000000005913f0 0000000000000034 T shared_dispatch_stub_1211
0000000000591430 0000000000000034 T shared_dispatch_stub_1212
0000000000591470 0000000000000034 T shared_dispatch_stub_1213
00000000005914b0 0000000000000034 T shared_dispatch_stub_1214
00000000005914f0 0000000000000034 T shared_dispatch_stub_1215
0000000000591530 0000000000000034 T shared_dispatch_stub_1216
0000000000591570 0000000000000034 T shared_dispatch_stub_1217
00000000005915b0 0000000000000034 T shared_dispatch_stub_1218
00000000005915f0 0000000000000034 T shared_dispatch_stub_1219
0000000000591630 0000000000000034 T shared_dispatch_stub_1220
0000000000591670 0000000000000034 T shared_dispatch_stub_1221
00000000005916b0 0000000000000034 T shared_dispatch_stub_1222
00000000005916f0 0000000000000034 T shared_dispatch_stub_1223
0000000000591730 0000000000000034 T shared_dispatch_stub_1224
0000000000591770 0000000000000034 T shared_dispatch_stub_1225
00000000005917b0 0000000000000034 T shared_dispatch_stub_1226
00000000005917f0 0000000000000034 T shared_dispatch_stub_1227
0000000000591830 0000000000000034 T shared_dispatch_stub_1228
0000000000591870 0000000000000034 T shared_dispatch_stub_1229
00000000005918b0 0000000000000034 T shared_dispatch_stub_1230
00000000005918f0 0000000000000034 T shared_dispatch_stub_1231
0000000000591930 0000000000000034 T shared_dispatch_stub_1232
0000000000591970 0000000000000034 T shared_dispatch_stub_1233
00000000005919b0 0000000000000034 T shared_dispatch_stub_1234
00000000005919f0 0000000000000034 T shared_dispatch_stub_1235
0000000000591a30 0000000000000034 T shared_dispatch_stub_1236
0000000000591a70 0000000000000034 T shared_dispatch_stub_1237
0000000000591ab0 0000000000000034 T shared_dispatch_stub_1238
0000000000591af0 0000000000000034 T shared_dispatch_stub_1239
0000000000591b30 0000000000000034 T shared_dispatch_stub_1240
0000000000591b70 0000000000000034 T shared_dispatch_stub_1241
0000000000591bb0 0000000000000034 T shared_dispatch_stub_1242
0000000000591bf0 0000000000000034 T shared_dispatch_stub_1243
0000000000591c30 0000000000000034 T shared_dispatch_stub_1244
0000000000591c70 0000000000000034 T shared_dispatch_stub_1245
0000000000591cb0 0000000000000034 T shared_dispatch_stub_1246
0000000000591cf0 0000000000000034 T shared_dispatch_stub_1247
0000000000591d30 0000000000000034 T shared_dispatch_stub_1248
0000000000591d70 0000000000000028 T shared_dispatch_stub_1249
0000000000591da0 0000000000000034 T shared_dispatch_stub_1250
0000000000591de0 0000000000000034 T shared_dispatch_stub_1251
0000000000591e20 0000000000000034 T shared_dispatch_stub_1252
0000000000591e60 0000000000000034 T shared_dispatch_stub_1253
0000000000591ea0 0000000000000034 T shared_dispatch_stub_1254
0000000000591ee0 0000000000000028 T shared_dispatch_stub_1255
0000000000591f10 0000000000000034 T shared_dispatch_stub_1256
0000000000591f50 0000000000000034 T shared_dispatch_stub_1257
0000000000591f90 0000000000000034 T shared_dispatch_stub_1258
0000000000591fd0 0000000000000034 T shared_dispatch_stub_1259
0000000000592010 0000000000000034 T shared_dispatch_stub_1260
0000000000592050 0000000000000034 T shared_dispatch_stub_1261
0000000000592090 0000000000000034 T shared_dispatch_stub_1262
00000000005920d0 0000000000000034 T shared_dispatch_stub_1263
0000000000592110 0000000000000034 T shared_dispatch_stub_1264
0000000000592150 0000000000000034 T shared_dispatch_stub_1265
0000000000592190 0000000000000034 T shared_dispatch_stub_1266
00000000005921d0 0000000000000034 T shared_dispatch_stub_1267
0000000000592210 0000000000000034 T shared_dispatch_stub_1268
0000000000592250 0000000000000028 T shared_dispatch_stub_1269
0000000000592280 0000000000000034 T shared_dispatch_stub_1270
00000000005922c0 0000000000000034 T shared_dispatch_stub_1271
0000000000592300 0000000000000034 T shared_dispatch_stub_1272
0000000000592340 0000000000000028 T shared_dispatch_stub_1273
0000000000592370 0000000000000034 T shared_dispatch_stub_1274
00000000005923b0 0000000000000034 T shared_dispatch_stub_1275
00000000005923f0 0000000000000034 T shared_dispatch_stub_1276
0000000000592430 0000000000000034 T shared_dispatch_stub_1277
0000000000592470 0000000000000034 T shared_dispatch_stub_1278
00000000005924b0 0000000000000034 T shared_dispatch_stub_1279
00000000005924f0 0000000000000034 T shared_dispatch_stub_1280
0000000000592530 0000000000000034 T shared_dispatch_stub_1281
0000000000592570 0000000000000034 T shared_dispatch_stub_1282
00000000005925b0 0000000000000034 T shared_dispatch_stub_1283
00000000005925f0 0000000000000034 T shared_dispatch_stub_1284
0000000000592630 0000000000000034 T shared_dispatch_stub_1285
0000000000592670 0000000000000034 T shared_dispatch_stub_1286
00000000005926b0 0000000000000034 T shared_dispatch_stub_1287
00000000005926f0 0000000000000034 T shared_dispatch_stub_1288
0000000000592730 0000000000000034 T shared_dispatch_stub_1289
0000000000592770 0000000000000034 T shared_dispatch_stub_1290
00000000005927b0 0000000000000034 T shared_dispatch_stub_1291
00000000005927f0 0000000000000034 T shared_dispatch_stub_1292
0000000000592830 0000000000000034 T shared_dispatch_stub_1293
0000000000592870 0000000000000034 T shared_dispatch_stub_1294
00000000005928b0 0000000000000034 T shared_dispatch_stub_1295
00000000005928f0 0000000000000034 T shared_dispatch_stub_1296
0000000000592930 0000000000000034 T shared_dispatch_stub_1297
0000000000592970 0000000000000034 T shared_dispatch_stub_1298
00000000005929b0 0000000000000034 T shared_dispatch_stub_1299
00000000005929f0 0000000000000034 T shared_dispatch_stub_1300
0000000000592a30 0000000000000034 T shared_dispatch_stub_1301
0000000000592a70 0000000000000034 T shared_dispatch_stub_1302
0000000000592ab0 0000000000000034 T shared_dispatch_stub_1303
0000000000592af0 0000000000000034 T shared_dispatch_stub_1304
0000000000592b30 0000000000000034 T shared_dispatch_stub_1305
0000000000592b70 0000000000000034 T shared_dispatch_stub_1306
0000000000592bb0 0000000000000034 T shared_dispatch_stub_1307
0000000000592bf0 0000000000000034 T shared_dispatch_stub_1308
0000000000592c30 0000000000000034 T shared_dispatch_stub_1309
0000000000592c70 0000000000000034 T shared_dispatch_stub_1310
0000000000592cb0 0000000000000034 T shared_dispatch_stub_1311
0000000000592cf0 0000000000000034 T shared_dispatch_stub_1312
0000000000592d30 0000000000000028 T shared_dispatch_stub_1313
0000000000592d60 0000000000000028 T shared_dispatch_stub_1314
0000000000592d90 0000000000000034 T shared_dispatch_stub_1315
0000000000592dd0 0000000000000034 T shared_dispatch_stub_1316
0000000000592e10 0000000000000034 T shared_dispatch_stub_1317
0000000000592e50 0000000000000034 T shared_dispatch_stub_1318
0000000000592e90 0000000000000034 T shared_dispatch_stub_1319
0000000000592ed0 0000000000000034 T shared_dispatch_stub_1320
0000000000592f10 0000000000000034 T shared_dispatch_stub_1321
0000000000592f50 0000000000000034 T shared_dispatch_stub_1322
0000000000592f90 0000000000000034 T shared_dispatch_stub_1323
0000000000592fd0 0000000000000034 T shared_dispatch_stub_1324
0000000000593010 0000000000000034 T shared_dispatch_stub_1325
0000000000593050 0000000000000034 T shared_dispatch_stub_1326
0000000000593090 0000000000000034 T shared_dispatch_stub_1327
00000000005930d0 0000000000000034 T shared_dispatch_stub_1328
0000000000593110 0000000000000034 T shared_dispatch_stub_1329
0000000000593150 0000000000000034 T shared_dispatch_stub_1330
0000000000593190 0000000000000034 T shared_dispatch_stub_1331
00000000005931d0 0000000000000034 T shared_dispatch_stub_1332
0000000000593210 0000000000000034 T shared_dispatch_stub_1333
0000000000593250 0000000000000028 T shared_dispatch_stub_1334
0000000000593280 0000000000000034 T shared_dispatch_stub_1335
00000000005932c0 0000000000000034 T shared_dispatch_stub_1336
0000000000593300 0000000000000034 T shared_dispatch_stub_1337
0000000000593340 0000000000000034 T shared_dispatch_stub_1338
0000000000593380 0000000000000034 T shared_dispatch_stub_1339
00000000005933c0 0000000000000034 T shared_dispatch_stub_1340
0000000000593400 0000000000000034 T shared_dispatch_stub_1341
0000000000593440 0000000000000034 T shared_dispatch_stub_1342
0000000000593480 0000000000000034 T shared_dispatch_stub_1343
00000000005934c0 0000000000000034 T shared_dispatch_stub_1344
0000000000593500 0000000000000034 T shared_dispatch_stub_1345
0000000000593540 0000000000000034 T shared_dispatch_stub_1346
0000000000593580 0000000000000034 T shared_dispatch_stub_1347
00000000005935c0 0000000000000034 T shared_dispatch_stub_1348
0000000000593600 0000000000000034 T shared_dispatch_stub_1349
0000000000593640 0000000000000034 T shared_dispatch_stub_1350
0000000000593680 0000000000000034 T shared_dispatch_stub_1351
00000000005936c0 0000000000000034 T shared_dispatch_stub_1352
0000000000593700 0000000000000034 T shared_dispatch_stub_1353
0000000000593740 0000000000000034 T shared_dispatch_stub_1354
0000000000593780 0000000000000034 T shared_dispatch_stub_1355
00000000005937c0 0000000000000034 T shared_dispatch_stub_1356
0000000000593800 0000000000000034 T shared_dispatch_stub_1357
0000000000593840 0000000000000034 T shared_dispatch_stub_1358
0000000000593880 0000000000000034 T shared_dispatch_stub_1359
00000000005938c0 0000000000000034 T shared_dispatch_stub_1360
0000000000593900 0000000000000034 T shared_dispatch_stub_1361
0000000000593940 0000000000000034 T shared_dispatch_stub_1362
0000000000593980 0000000000000034 T shared_dispatch_stub_1363
00000000005939c0 0000000000000034 T shared_dispatch_stub_1364
0000000000593a00 0000000000000034 T shared_dispatch_stub_1365
0000000000593a40 0000000000000034 T shared_dispatch_stub_1366
0000000000593a80 0000000000000028 T shared_dispatch_stub_1367
0000000000593ab0 0000000000000034 T shared_dispatch_stub_1368
0000000000593af0 0000000000000034 T shared_dispatch_stub_1369
0000000000593b30 0000000000000034 T shared_dispatch_stub_1370
0000000000593b70 0000000000000034 T shared_dispatch_stub_1371
0000000000593bb0 0000000000000034 T shared_dispatch_stub_1372
0000000000593bf0 0000000000000034 T shared_dispatch_stub_1373
0000000000593c30 0000000000000034 T shared_dispatch_stub_1374
0000000000593c70 0000000000000034 T shared_dispatch_stub_1375
0000000000593cb0 0000000000000034 T shared_dispatch_stub_1376
0000000000593cf0 0000000000000034 T shared_dispatch_stub_1377
0000000000593d30 0000000000000034 T shared_dispatch_stub_1378
0000000000593d70 0000000000000034 T shared_dispatch_stub_1379
0000000000593db0 0000000000000034 T shared_dispatch_stub_1380
0000000000593df0 0000000000000034 T shared_dispatch_stub_1381
0000000000593e30 0000000000000028 T shared_dispatch_stub_1382
0000000000593e60 0000000000000034 T shared_dispatch_stub_1383
0000000000593ea0 0000000000000034 T shared_dispatch_stub_1384
0000000000593ee0 0000000000000034 T shared_dispatch_stub_1385
0000000000593f20 0000000000000034 T shared_dispatch_stub_1386
0000000000593f60 0000000000000034 T shared_dispatch_stub_1387
0000000000593fa0 0000000000000034 T shared_dispatch_stub_1388
0000000000593fe0 0000000000000034 T shared_dispatch_stub_1389
0000000000594020 0000000000000034 T shared_dispatch_stub_1390
0000000000594060 0000000000000034 T shared_dispatch_stub_1391
00000000005940a0 0000000000000034 T shared_dispatch_stub_1392
00000000005940e0 0000000000000034 T shared_dispatch_stub_1393
0000000000594120 0000000000000034 T shared_dispatch_stub_1394
0000000000594160 0000000000000028 T shared_dispatch_stub_1395
0000000000594190 0000000000000034 T shared_dispatch_stub_1396
00000000005941d0 0000000000000034 T shared_dispatch_stub_1397
0000000000594210 0000000000000034 T shared_dispatch_stub_1398
0000000000594250 0000000000000034 T shared_dispatch_stub_1399
0000000000594290 0000000000000034 T shared_dispatch_stub_1400
00000000005942d0 0000000000000034 T shared_dispatch_stub_1401
0000000000594310 0000000000000034 T shared_dispatch_stub_1402
0000000000594350 0000000000000034 T shared_dispatch_stub_1403
0000000000594390 0000000000000034 T shared_dispatch_stub_1404
00000000005943d0 0000000000000034 T shared_dispatch_stub_1405
0000000000594410 0000000000000034 T shared_dispatch_stub_1406
0000000000594450 0000000000000034 T shared_dispatch_stub_1407
0000000000594490 0000000000000034 T shared_dispatch_stub_1408
00000000005944d0 0000000000000034 T shared_dispatch_stub_1409
0000000000594510 0000000000000034 T shared_dispatch_stub_1410
0000000000594550 0000000000000034 T shared_dispatch_stub_1411
0000000000594590 0000000000000034 T shared_dispatch_stub_1412
00000000005945d0 0000000000000034 T shared_dispatch_stub_1413
0000000000594610 0000000000000034 T shared_dispatch_stub_1414
0000000000594650 0000000000000034 T shared_dispatch_stub_1415
0000000000594690 0000000000000034 T shared_dispatch_stub_1416
00000000005946d0 0000000000000034 T shared_dispatch_stub_1417
0000000000594710 0000000000000028 T shared_dispatch_stub_1418
0000000000594740 0000000000000028 T shared_dispatch_stub_1419
0000000000594770 0000000000000034 T shared_dispatch_stub_1420
00000000005947b0 0000000000000034 T shared_dispatch_stub_1421
00000000005947f0 0000000000000034 T shared_dispatch_stub_1422
0000000000594830 0000000000000034 T shared_dispatch_stub_1423
0000000000594870 0000000000000034 T shared_dispatch_stub_1424
00000000005948b0 0000000000000034 T shared_dispatch_stub_1425
00000000005948f0 0000000000000034 T shared_dispatch_stub_1426
0000000000594930 0000000000000034 T shared_dispatch_stub_1427
0000000000594970 0000000000000034 T shared_dispatch_stub_1428
00000000005949b0 0000000000000034 T shared_dispatch_stub_1429
00000000005949f0 0000000000000034 T shared_dispatch_stub_1430
0000000000594a30 0000000000000034 T shared_dispatch_stub_1431
0000000000594a70 0000000000000034 T shared_dispatch_stub_1432
0000000000594ab0 0000000000000034 T shared_dispatch_stub_1433
0000000000594af0 0000000000000034 T shared_dispatch_stub_1434
0000000000594b30 0000000000000034 T shared_dispatch_stub_1435
0000000000594b70 0000000000000034 T shared_dispatch_stub_1436
0000000000594bb0 0000000000000034 T shared_dispatch_stub_1437
0000000000594bf0 0000000000000034 T shared_dispatch_stub_1438
0000000000594c30 0000000000000034 T shared_dispatch_stub_1439
0000000000594c70 0000000000000034 T shared_dispatch_stub_1440
0000000000594cb0 0000000000000034 T shared_dispatch_stub_1441
0000000000594cf0 0000000000000034 T shared_dispatch_stub_1442
0000000000594d30 0000000000000034 T shared_dispatch_stub_1443
0000000000594d70 0000000000000034 T shared_dispatch_stub_1444
0000000000594db0 0000000000000034 T shared_dispatch_stub_1445
0000000000594df0 0000000000000034 T shared_dispatch_stub_1446
0000000000594e30 0000000000000034 T shared_dispatch_stub_1447
0000000000594e70 0000000000000034 T shared_dispatch_stub_1448
0000000000594eb0 0000000000000034 T shared_dispatch_stub_1449
0000000000594ef0 0000000000000034 T shared_dispatch_stub_1450
0000000000594f30 0000000000000034 T shared_dispatch_stub_1451
0000000000594f70 0000000000000034 T shared_dispatch_stub_1452
0000000000594fb0 0000000000000034 T shared_dispatch_stub_1453
0000000000594ff0 0000000000000034 T shared_dispatch_stub_1454
0000000000595030 0000000000000034 T shared_dispatch_stub_1455
0000000000595070 0000000000000034 T shared_dispatch_stub_1456
00000000005950b0 0000000000000034 T shared_dispatch_stub_1457
00000000005950f0 0000000000000034 T shared_dispatch_stub_1458
0000000000595130 0000000000000034 T shared_dispatch_stub_1459
0000000000595170 0000000000000034 T shared_dispatch_stub_1460
00000000005951b0 0000000000000034 T shared_dispatch_stub_1461
00000000005951f0 0000000000000034 T shared_dispatch_stub_1462
0000000000595230 0000000000000034 T shared_dispatch_stub_1463
0000000000595270 0000000000000034 T shared_dispatch_stub_1464
00000000005952b0 0000000000000034 T shared_dispatch_stub_1465
00000000005952f0 0000000000000034 T shared_dispatch_stub_1466
0000000000595330 0000000000000034 T shared_dispatch_stub_1467
0000000000595370 0000000000000034 T shared_dispatch_stub_1468
00000000005953b0 0000000000000034 T shared_dispatch_stub_1469
00000000005953f0 0000000000000034 T shared_dispatch_stub_1470
0000000000595430 0000000000000034 T shared_dispatch_stub_1471
0000000000595470 0000000000000034 T shared_dispatch_stub_1472
00000000005954b0 0000000000000034 T shared_dispatch_stub_1473
00000000005954f0 0000000000000034 T shared_dispatch_stub_1474
0000000000595530 0000000000000034 T shared_dispatch_stub_1475
0000000000595570 0000000000000034 T shared_dispatch_stub_1476
00000000005955b0 0000000000000034 T shared_dispatch_stub_1477
00000000005955f0 0000000000000034 T shared_dispatch_stub_1478
0000000000595630 0000000000000034 T shared_dispatch_stub_1479
0000000000595670 0000000000000034 T shared_dispatch_stub_1480
00000000005956b0 0000000000000034 T shared_dispatch_stub_1481
00000000005956f0 0000000000000034 T shared_dispatch_stub_1482
0000000000595730 0000000000000034 T shared_dispatch_stub_1483
0000000000595770 0000000000000034 T shared_dispatch_stub_1484
00000000005957b0 0000000000000034 T shared_dispatch_stub_1485
00000000005957f0 0000000000000034 T shared_dispatch_stub_1486
0000000000595830 0000000000000034 T shared_dispatch_stub_1487
0000000000595870 0000000000000034 T shared_dispatch_stub_1488
00000000005958b0 0000000000000034 T shared_dispatch_stub_1489
00000000005958f0 0000000000000034 T shared_dispatch_stub_1490
0000000000595930 0000000000000034 T shared_dispatch_stub_1491
0000000000595970 0000000000000034 T shared_dispatch_stub_1492
00000000005959b0 0000000000000034 T shared_dispatch_stub_1493
00000000005959f0 0000000000000034 T shared_dispatch_stub_1494
0000000000595a30 0000000000000034 T shared_dispatch_stub_1495
0000000000595a70 0000000000000034 T shared_dispatch_stub_1496
0000000000595ab0 0000000000000034 T shared_dispatch_stub_1497
0000000000595af0 0000000000000034 T shared_dispatch_stub_1498
0000000000595b30 0000000000000034 T shared_dispatch_stub_1499
0000000000595b70 0000000000000034 T shared_dispatch_stub_1500
0000000000595bb0 0000000000000034 T shared_dispatch_stub_1501
0000000000595bf0 0000000000000034 T shared_dispatch_stub_1502
0000000000595c30 0000000000000034 T shared_dispatch_stub_1503
0000000000595c70 0000000000000034 T shared_dispatch_stub_1504
0000000000595cb0 0000000000000034 T shared_dispatch_stub_1505
0000000000595cf0 0000000000000034 T shared_dispatch_stub_1506
0000000000595d30 0000000000000034 T shared_dispatch_stub_1507
0000000000595d70 0000000000000034 T shared_dispatch_stub_1508
0000000000595db0 0000000000000034 T shared_dispatch_stub_1509
0000000000595df0 0000000000000034 T shared_dispatch_stub_1510
0000000000595e30 0000000000000034 T shared_dispatch_stub_1511
0000000000595e70 0000000000000034 T shared_dispatch_stub_1512
0000000000595eb0 0000000000000034 T shared_dispatch_stub_1513
0000000000595ef0 0000000000000034 T shared_dispatch_stub_1514
0000000000595f30 0000000000000034 T shared_dispatch_stub_1515
0000000000595f70 0000000000000034 T shared_dispatch_stub_1516
0000000000595fb0 0000000000000034 T shared_dispatch_stub_1517
0000000000595ff0 0000000000000034 T shared_dispatch_stub_1518
0000000000596030 0000000000000034 T shared_dispatch_stub_1519
0000000000596070 0000000000000034 T shared_dispatch_stub_1520
00000000005960b0 0000000000000034 T shared_dispatch_stub_1521
00000000005960f0 0000000000000034 T shared_dispatch_stub_1522
0000000000596130 0000000000000034 T shared_dispatch_stub_1523
0000000000596170 0000000000000034 T shared_dispatch_stub_1524
00000000005961b0 0000000000000034 T shared_dispatch_stub_1525
00000000005961f0 0000000000000034 T shared_dispatch_stub_1526
0000000000596230 0000000000000034 T shared_dispatch_stub_1527
0000000000596270 0000000000000034 T shared_dispatch_stub_1528
00000000005962b0 0000000000000034 T shared_dispatch_stub_1529
00000000005962f0 0000000000000034 T shared_dispatch_stub_1530
0000000000596330 0000000000000034 T shared_dispatch_stub_1531
0000000000596370 0000000000000034 T shared_dispatch_stub_1532
00000000005963b0 0000000000000034 T shared_dispatch_stub_1533
00000000005963f0 0000000000000034 T shared_dispatch_stub_1534
0000000000596430 0000000000000034 T shared_dispatch_stub_1535
0000000000596470 0000000000000034 T shared_dispatch_stub_1536
00000000005964b0 0000000000000034 T shared_dispatch_stub_1537
00000000005964f0 0000000000000034 T shared_dispatch_stub_1538
0000000000596530 0000000000000034 T shared_dispatch_stub_1539
0000000000596570 0000000000000034 T shared_dispatch_stub_1540
00000000005965b0 0000000000000034 T shared_dispatch_stub_1541
00000000005965f0 0000000000000034 T shared_dispatch_stub_1542
0000000000596630 0000000000000034 T shared_dispatch_stub_1543
0000000000596670 0000000000000034 T shared_dispatch_stub_1544
00000000005966b0 0000000000000034 T shared_dispatch_stub_1545
00000000005966f0 0000000000000034 T shared_dispatch_stub_1546
0000000000596730 0000000000000034 T shared_dispatch_stub_1547
0000000000596770 0000000000000034 T shared_dispatch_stub_1548
00000000005967b0 0000000000000034 T shared_dispatch_stub_1549
00000000005967f0 0000000000000034 T shared_dispatch_stub_1550
0000000000596830 0000000000000034 T shared_dispatch_stub_1551
0000000000596870 0000000000000034 T shared_dispatch_stub_1552
00000000005968b0 0000000000000034 T shared_dispatch_stub_1553
00000000005968f0 0000000000000034 T shared_dispatch_stub_1554
0000000000596930 0000000000000034 T shared_dispatch_stub_1555
0000000000596970 0000000000000034 T shared_dispatch_stub_1556
00000000005969b0 0000000000000034 T shared_dispatch_stub_1557
00000000005969f0 0000000000000034 T shared_dispatch_stub_1558
0000000000596a30 0000000000000034 T shared_dispatch_stub_1559
0000000000596a70 0000000000000034 T shared_dispatch_stub_1560
0000000000596ab0 0000000000000034 T shared_dispatch_stub_1561
0000000000596af0 0000000000000034 T shared_dispatch_stub_1562
0000000000596b30 0000000000000034 T shared_dispatch_stub_1563
0000000000596b70 0000000000000034 T shared_dispatch_stub_1564
0000000000596bb0 0000000000000034 T shared_dispatch_stub_1565
0000000000596bf0 0000000000000034 T shared_dispatch_stub_1566
0000000000596c30 0000000000000034 T shared_dispatch_stub_1567
0000000000596c70 0000000000000034 T shared_dispatch_stub_1568
0000000000596cb0 0000000000000034 T shared_dispatch_stub_1569
0000000000596cf0 0000000000000034 T shared_dispatch_stub_1570
0000000000596d30 0000000000000034 T shared_dispatch_stub_1571
0000000000596d70 0000000000000034 T shared_dispatch_stub_1572
0000000000596db0 0000000000000034 T shared_dispatch_stub_1573
0000000000596df0 0000000000000034 T shared_dispatch_stub_1574
0000000000596e30 0000000000000034 T shared_dispatch_stub_1575
0000000000596e70 0000000000000034 T shared_dispatch_stub_1576
0000000000596eb0 0000000000000034 T shared_dispatch_stub_1577
0000000000596ef0 0000000000000034 T shared_dispatch_stub_1578
0000000000596f30 0000000000000034 T shared_dispatch_stub_1579
0000000000596f70 0000000000000034 T shared_dispatch_stub_1580
0000000000596fb0 0000000000000034 T shared_dispatch_stub_1581
0000000000596ff0 0000000000000034 T shared_dispatch_stub_1582
0000000000597030 0000000000000034 T shared_dispatch_stub_1583
0000000000597070 0000000000000034 T shared_dispatch_stub_1584
00000000005970b0 0000000000000034 T shared_dispatch_stub_1585
00000000005970f0 0000000000000034 T shared_dispatch_stub_1586
0000000000597130 0000000000000034 T shared_dispatch_stub_1587
0000000000597170 0000000000000034 T shared_dispatch_stub_1588
00000000005971b0 0000000000000034 T shared_dispatch_stub_1589
00000000005971f0 0000000000000034 T shared_dispatch_stub_1590
0000000000597230 0000000000000034 T shared_dispatch_stub_1591
0000000000597270 0000000000000034 T shared_dispatch_stub_1592
00000000005972b0 0000000000000034 T shared_dispatch_stub_1593
00000000005972f0 0000000000000034 T shared_dispatch_stub_1594
0000000000597330 0000000000000034 T shared_dispatch_stub_1595
0000000000597370 0000000000000034 T shared_dispatch_stub_1596
00000000005973b0 0000000000000034 T shared_dispatch_stub_1597
00000000005973f0 0000000000000034 T shared_dispatch_stub_1598
0000000000597430 0000000000000034 T shared_dispatch_stub_1599
0000000000597470 0000000000000034 T shared_dispatch_stub_1600
00000000005974b0 0000000000000034 T shared_dispatch_stub_1601
00000000005974f0 0000000000000034 T shared_dispatch_stub_1602
0000000000597530 0000000000000034 T shared_dispatch_stub_1603
0000000000597570 0000000000000034 T shared_dispatch_stub_1604
00000000005975b0 0000000000000034 T shared_dispatch_stub_1605
00000000005975f0 0000000000000034 T shared_dispatch_stub_1606
0000000000597630 0000000000000034 T shared_dispatch_stub_1607
0000000000597670 0000000000000034 T shared_dispatch_stub_1608
00000000005976b0 0000000000000034 T shared_dispatch_stub_1609
00000000005976f0 0000000000000004 T entry_patch_public
0000000000597700 0000000000000010 t entry_get_public
0000000000597710 0000000000000008 t entry_generate
0000000000597720 0000000000000004 t entry_patch
0000000000597730 0000000000000078 T nouveau_bufctx_new
00000000005977b0 000000000000005c T nouveau_bufctx_reset
0000000000597810 0000000000000074 T nouveau_bufctx_del
0000000000597890 0000000000000090 T nouveau_bufctx_refn
0000000000597920 0000000000000008 T nouveau_object_mclass
0000000000597930 0000000000000098 T nouveau_object_new
00000000005979d0 0000000000000044 T nouveau_object_del
0000000000597a20 0000000000000028 T nouveau_drm_del
0000000000597a50 0000000000000050 T nouveau_drm_new
0000000000597aa0 0000000000000100 T nouveau_device_new
0000000000597ba0 0000000000000050 T nouveau_device_del
0000000000597bf0 0000000000000034 T nouveau_getparam
0000000000597c30 000000000000011c T nouveau_client_new
0000000000597d50 0000000000000088 T nouveau_client_del
0000000000597de0 0000000000000184 T nouveau_bo_new
0000000000597f70 0000000000000104 T nouveau_bo_name_ref
0000000000598080 0000000000000010 T nouveau_bo_name_get
0000000000598090 00000000000000d0 T nouveau_bo_ref
0000000000598160 0000000000000008 T nouveau_bo_prime_handle_ref
0000000000598170 0000000000000008 T nouveau_bo_set_prime
0000000000598180 0000000000000014 T nouveau_bo_get_syncpoint
00000000005981a0 000000000000009c T nouveau_bo_wait
0000000000598240 000000000000000c T nouveau_bo_map
0000000000598250 0000000000000008 T nouveau_bo_unmap
0000000000598260 0000000000000098 t pushbuf_refn_fail
0000000000598300 0000000000000118 T nouveau_pushbuf_del
0000000000598420 0000000000000280 T nouveau_pushbuf_new
00000000005986a0 0000000000000010 T nouveau_pushbuf_bufctx
00000000005986b0 00000000000000c4 T nouveau_pushbuf_data
00000000005986b0 00000000000000c4 t nouveau_pushbuf_data.localalias
0000000000598780 0000000000000254 t pushbuf_submit.isra.0
00000000005989e0 000000000000012c t pushbuf_flush.isra.0
0000000000598b10 0000000000000128 t pushbuf_kref
0000000000598c40 00000000000001b0 t pushbuf_validate
0000000000598df0 0000000000000238 T nouveau_pushbuf_space
0000000000599030 00000000000000cc T nouveau_pushbuf_refn
0000000000599100 0000000000000008 T nouveau_pushbuf_validate
0000000000599110 0000000000000040 T nouveau_pushbuf_kick
0000000000599150 000000000000004c T cli_map_free
00000000005991a0 0000000000000058 T cli_kref_get
0000000000599200 0000000000000058 T cli_push_get
0000000000599260 0000000000000110 T cli_kref_set
0000000000599380 0000000000000004 T operator delete(void*, unsigned long)
00000000005993a0 0000000000000004 T operator delete[](void*)
00000000005993c0 0000000000000004 T operator delete[](void*, unsigned long)
00000000005993e0 000000000000000c W __gnu_cxx::__concurrence_lock_error::what() const
0000000000599400 000000000000000c W __gnu_cxx::__concurrence_unlock_error::what() const
0000000000599420 000000000000000c W __gnu_cxx::__concurrence_broadcast_error::what() const
0000000000599440 000000000000000c W __gnu_cxx::__concurrence_wait_error::what() const
0000000000599460 000000000000001c t (anonymous namespace)::init()
0000000000599480 000000000000001c t (anonymous namespace)::init_static_cond()
00000000005994a0 0000000000000014 W __gnu_cxx::__concurrence_lock_error::~__concurrence_lock_error()
00000000005994a0 0000000000000014 W __gnu_cxx::__concurrence_lock_error::~__concurrence_lock_error()
00000000005994c0 0000000000000038 W __gnu_cxx::__concurrence_lock_error::~__concurrence_lock_error()
0000000000599500 0000000000000014 W __gnu_cxx::__concurrence_wait_error::~__concurrence_wait_error()
0000000000599500 0000000000000014 W __gnu_cxx::__concurrence_wait_error::~__concurrence_wait_error()
0000000000599520 0000000000000038 W __gnu_cxx::__concurrence_wait_error::~__concurrence_wait_error()
0000000000599560 0000000000000014 W __gnu_cxx::__concurrence_unlock_error::~__concurrence_unlock_error()
0000000000599560 0000000000000014 W __gnu_cxx::__concurrence_unlock_error::~__concurrence_unlock_error()
0000000000599580 0000000000000038 W __gnu_cxx::__concurrence_unlock_error::~__concurrence_unlock_error()
00000000005995c0 0000000000000014 W __gnu_cxx::__concurrence_broadcast_error::~__concurrence_broadcast_error()
00000000005995c0 0000000000000014 W __gnu_cxx::__concurrence_broadcast_error::~__concurrence_broadcast_error()
00000000005995e0 0000000000000038 W __gnu_cxx::__concurrence_broadcast_error::~__concurrence_broadcast_error()
0000000000599620 000000000000014c T __cxa_guard_acquire
0000000000599780 0000000000000088 T __cxa_guard_release
0000000000599820 0000000000000068 T operator new(unsigned long)
00000000005998a0 0000000000000004 T operator new[](unsigned long)
00000000005998c0 0000000000000014 T __cxxabiv1::__si_class_type_info::~__si_class_type_info()
00000000005998c0 0000000000000014 T __cxxabiv1::__si_class_type_info::~__si_class_type_info()
00000000005998e0 0000000000000028 T __cxxabiv1::__si_class_type_info::~__si_class_type_info()
0000000000599920 000000000000015c T __cxxabiv1::__si_class_type_info::__do_dyncast(long, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const
0000000000599a80 000000000000008c T __cxxabiv1::__si_class_type_info::__do_find_public_src(long, void const*, __cxxabiv1::__class_type_info const*, void const*) const
0000000000599b20 0000000000000064 T __cxxabiv1::__si_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const
0000000000599ba0 0000000000000004 T std::type_info::~type_info()
0000000000599ba0 0000000000000004 T std::type_info::~type_info()
0000000000599bc0 0000000000000008 T std::type_info::__is_pointer_p() const
0000000000599bc0 0000000000000008 T std::type_info::__is_function_p() const
0000000000599be0 0000000000000568 T std::ios_base::Init::Init()
0000000000599be0 0000000000000568 T std::ios_base::Init::Init()
000000000059a160 0000000000000088 T std::ios_base::Init::~Init()
000000000059a160 0000000000000088 T std::ios_base::Init::~Init()
000000000059a200 0000000000000034 T std::__detail::_List_node_base::_M_transfer(std::__detail::_List_node_base*, std::__detail::_List_node_base*)
000000000059a240 0000000000000014 T std::__detail::_List_node_base::_M_hook(std::__detail::_List_node_base*)
000000000059a260 0000000000000010 T std::__detail::_List_node_base::_M_unhook()
000000000059a280 0000000000000004 T std::locale::facet::~facet()
000000000059a280 0000000000000004 T std::locale::facet::~facet()
000000000059a2a0 000000000000003c T std::locale::facet::~facet()
000000000059a2a0 000000000000003c t std::locale::facet::~facet() [clone .localalias]
000000000059a2e0 0000000000000024 T std::locale::facet::_S_initialize_once()
000000000059a320 0000000000000030 T std::locale::locale(std::locale const&)
000000000059a320 0000000000000030 T std::locale::locale(std::locale const&)
000000000059a360 0000000000000008 T std::locale::locale(std::locale::_Impl*)
000000000059a360 0000000000000008 T std::locale::locale(std::locale::_Impl*)
000000000059a380 0000000000000050 T std::locale::facet::_S_get_c_locale()
000000000059a3e0 000000000000000c T std::locale::facet::_S_get_c_name()
000000000059a400 00000000000001b8 T std::locale::_Impl::~_Impl()
000000000059a400 00000000000001b8 T std::locale::_Impl::~_Impl()
000000000059a5c0 00000000000000ac T std::locale::operator=(std::locale const&)
000000000059a680 000000000000005c T std::locale::~locale()
000000000059a680 000000000000005c T std::locale::~locale()
000000000059a6e0 0000000000000048 T std::locale::id::_M_id() const
000000000059a740 00000000000004d4 T std::locale::_Impl::_M_install_facet(std::locale::id const*, std::locale::facet const*)
000000000059ac20 000000000000025c T std::locale::_Impl::_M_install_cache(std::locale::facet const*, unsigned long)
000000000059ae80 0000000000000050 T std::_Rb_tree_increment(std::_Rb_tree_node_base*)
000000000059aee0 0000000000000050 T std::_Rb_tree_increment(std::_Rb_tree_node_base const*)
000000000059af40 0000000000000064 T std::_Rb_tree_decrement(std::_Rb_tree_node_base*)
000000000059afc0 000000000000029c T std::_Rb_tree_insert_and_rebalance(bool, std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, std::_Rb_tree_node_base&)
000000000059b260 0000000000000024 t std::__facet_shims::(anonymous namespace)::collate_shim<char>::do_compare(char const*, char const*, char const*, char const*) const
000000000059b2a0 0000000000000058 t std::__facet_shims::(anonymous namespace)::time_get_shim<char>::do_get_year(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, tm*) const
000000000059b300 0000000000000058 t std::__facet_shims::(anonymous namespace)::time_get_shim<char>::do_get_monthname(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, tm*) const
000000000059b360 0000000000000058 t std::__facet_shims::(anonymous namespace)::time_get_shim<char>::do_get_weekday(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, tm*) const
000000000059b3c0 0000000000000058 t std::__facet_shims::(anonymous namespace)::time_get_shim<char>::do_get_date(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, tm*) const
000000000059b420 0000000000000058 t std::__facet_shims::(anonymous namespace)::time_get_shim<char>::do_get_time(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, tm*) const
000000000059b480 0000000000000010 t std::__facet_shims::(anonymous namespace)::time_get_shim<char>::do_date_order() const
000000000059b4a0 00000000000000a0 t std::__facet_shims::(anonymous namespace)::money_get_shim<char>::do_get(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, bool, std::ios_base&, std::_Ios_Iostate&, long double&) const
000000000059b540 0000000000000030 t std::__facet_shims::(anonymous namespace)::money_put_shim<char>::do_put(std::ostreambuf_iterator<char, std::char_traits<char> >, bool, std::ios_base&, char, long double) const
000000000059b580 0000000000000014 t std::__facet_shims::(anonymous namespace)::messages_shim<char>::do_close(int) const
000000000059b5a0 000000000000001c t std::__facet_shims::(anonymous namespace)::messages_shim<char>::do_open(std::string const&, std::locale const&) const
000000000059b5c0 0000000000000024 t std::__facet_shims::(anonymous namespace)::collate_shim<wchar_t>::do_compare(wchar_t const*, wchar_t const*, wchar_t const*, wchar_t const*) const
000000000059b600 0000000000000058 t std::__facet_shims::(anonymous namespace)::time_get_shim<wchar_t>::do_get_year(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, tm*) const
000000000059b660 0000000000000058 t std::__facet_shims::(anonymous namespace)::time_get_shim<wchar_t>::do_get_monthname(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, tm*) const
000000000059b6c0 0000000000000058 t std::__facet_shims::(anonymous namespace)::time_get_shim<wchar_t>::do_get_weekday(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, tm*) const
000000000059b720 0000000000000058 t std::__facet_shims::(anonymous namespace)::time_get_shim<wchar_t>::do_get_date(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, tm*) const
000000000059b780 0000000000000058 t std::__facet_shims::(anonymous namespace)::time_get_shim<wchar_t>::do_get_time(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, tm*) const
000000000059b7e0 0000000000000010 t std::__facet_shims::(anonymous namespace)::time_get_shim<wchar_t>::do_date_order() const
000000000059b800 00000000000000a0 t std::__facet_shims::(anonymous namespace)::money_get_shim<wchar_t>::do_get(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, bool, std::ios_base&, std::_Ios_Iostate&, long double&) const
000000000059b8a0 0000000000000028 t std::__facet_shims::(anonymous namespace)::money_put_shim<wchar_t>::do_put(std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, bool, std::ios_base&, wchar_t, long double) const
000000000059b8e0 0000000000000014 t std::__facet_shims::(anonymous namespace)::messages_shim<wchar_t>::do_close(int) const
000000000059b900 000000000000001c t std::__facet_shims::(anonymous namespace)::messages_shim<wchar_t>::do_open(std::string const&, std::locale const&) const
000000000059b920 00000000000000d4 t wchar_t* std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_S_construct<wchar_t const*>(wchar_t const*, wchar_t const*, std::allocator<wchar_t> const&, std::forward_iterator_tag) [clone .isra.0]
000000000059ba00 00000000000000b8 t char* std::string::_S_construct<char const*>(char const*, char const*, std::allocator<char> const&, std::forward_iterator_tag) [clone .isra.0]
000000000059bac0 0000000000000094 t std::__facet_shims::(anonymous namespace)::collate_shim<wchar_t>::do_transform(wchar_t const*, wchar_t const*) const
000000000059bb60 00000000000000a0 t std::__facet_shims::(anonymous namespace)::messages_shim<wchar_t>::do_get(int, int, int, std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> > const&) const
000000000059bc00 0000000000000094 t std::__facet_shims::(anonymous namespace)::collate_shim<char>::do_transform(char const*, char const*) const
000000000059bca0 00000000000000a0 t std::__facet_shims::(anonymous namespace)::messages_shim<char>::do_get(int, int, int, std::string const&) const
000000000059bd40 000000000000011c t std::__facet_shims::(anonymous namespace)::money_put_shim<wchar_t>::do_put(std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, bool, std::ios_base&, wchar_t, std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> > const&) const
000000000059be60 000000000000011c t std::__facet_shims::(anonymous namespace)::money_put_shim<char>::do_put(std::ostreambuf_iterator<char, std::char_traits<char> >, bool, std::ios_base&, char, std::string const&) const
000000000059bf80 0000000000000050 t void std::__facet_shims::(anonymous namespace)::__destroy_string<wchar_t>(void*)
000000000059bfe0 0000000000000050 t void std::__facet_shims::(anonymous namespace)::__destroy_string<char>(void*)
000000000059c040 0000000000000054 t std::__facet_shims::(anonymous namespace)::messages_shim<char>::~messages_shim()
000000000059c040 0000000000000054 t std::__facet_shims::(anonymous namespace)::messages_shim<char>::~messages_shim()
000000000059c0a0 0000000000000054 t std::__facet_shims::(anonymous namespace)::messages_shim<wchar_t>::~messages_shim()
000000000059c0a0 0000000000000054 t std::__facet_shims::(anonymous namespace)::messages_shim<wchar_t>::~messages_shim()
000000000059c100 0000000000000064 t std::__facet_shims::(anonymous namespace)::money_get_shim<char>::~money_get_shim()
000000000059c100 0000000000000064 t std::__facet_shims::(anonymous namespace)::money_get_shim<char>::~money_get_shim()
000000000059c180 0000000000000064 t std::__facet_shims::(anonymous namespace)::money_put_shim<char>::~money_put_shim()
000000000059c180 0000000000000064 t std::__facet_shims::(anonymous namespace)::money_put_shim<char>::~money_put_shim()
000000000059c200 0000000000000064 t std::__facet_shims::(anonymous namespace)::money_get_shim<wchar_t>::~money_get_shim()
000000000059c200 0000000000000064 t std::__facet_shims::(anonymous namespace)::money_get_shim<wchar_t>::~money_get_shim()
000000000059c280 0000000000000064 t std::__facet_shims::(anonymous namespace)::money_put_shim<wchar_t>::~money_put_shim()
000000000059c280 0000000000000064 t std::__facet_shims::(anonymous namespace)::money_put_shim<wchar_t>::~money_put_shim()
000000000059c300 0000000000000064 t std::__facet_shims::(anonymous namespace)::time_get_shim<char>::~time_get_shim()
000000000059c300 0000000000000064 t std::__facet_shims::(anonymous namespace)::time_get_shim<char>::~time_get_shim()
000000000059c380 0000000000000064 t std::__facet_shims::(anonymous namespace)::time_get_shim<wchar_t>::~time_get_shim()
000000000059c380 0000000000000064 t std::__facet_shims::(anonymous namespace)::time_get_shim<wchar_t>::~time_get_shim()
000000000059c400 000000000000005c t std::__facet_shims::(anonymous namespace)::messages_shim<char>::~messages_shim()
000000000059c460 000000000000005c t std::__facet_shims::(anonymous namespace)::messages_shim<wchar_t>::~messages_shim()
000000000059c4c0 0000000000000058 t std::__facet_shims::(anonymous namespace)::numpunct_shim<char>::~numpunct_shim()
000000000059c4c0 0000000000000058 t std::__facet_shims::(anonymous namespace)::numpunct_shim<char>::~numpunct_shim()
000000000059c520 0000000000000058 t std::__facet_shims::(anonymous namespace)::numpunct_shim<wchar_t>::~numpunct_shim()
000000000059c520 0000000000000058 t std::__facet_shims::(anonymous namespace)::numpunct_shim<wchar_t>::~numpunct_shim()
000000000059c580 000000000000006c t std::__facet_shims::(anonymous namespace)::money_get_shim<char>::~money_get_shim()
000000000059c600 000000000000006c t std::__facet_shims::(anonymous namespace)::money_put_shim<char>::~money_put_shim()
000000000059c680 000000000000006c t std::__facet_shims::(anonymous namespace)::money_get_shim<wchar_t>::~money_get_shim()
000000000059c700 000000000000006c t std::__facet_shims::(anonymous namespace)::money_put_shim<wchar_t>::~money_put_shim()
000000000059c780 000000000000006c t std::__facet_shims::(anonymous namespace)::time_get_shim<char>::~time_get_shim()
000000000059c800 000000000000006c t std::__facet_shims::(anonymous namespace)::time_get_shim<wchar_t>::~time_get_shim()
000000000059c880 000000000000006c t std::__facet_shims::(anonymous namespace)::collate_shim<char>::~collate_shim()
000000000059c880 000000000000006c t std::__facet_shims::(anonymous namespace)::collate_shim<char>::~collate_shim()
000000000059c900 000000000000006c t std::__facet_shims::(anonymous namespace)::collate_shim<wchar_t>::~collate_shim()
000000000059c900 000000000000006c t std::__facet_shims::(anonymous namespace)::collate_shim<wchar_t>::~collate_shim()
000000000059c980 0000000000000060 t std::__facet_shims::(anonymous namespace)::numpunct_shim<char>::~numpunct_shim()
000000000059c9e0 0000000000000060 t std::__facet_shims::(anonymous namespace)::numpunct_shim<wchar_t>::~numpunct_shim()
000000000059ca40 0000000000000074 t std::__facet_shims::(anonymous namespace)::collate_shim<char>::~collate_shim()
000000000059cac0 0000000000000074 t std::__facet_shims::(anonymous namespace)::collate_shim<wchar_t>::~collate_shim()
000000000059cb40 0000000000000064 t std::__facet_shims::(anonymous namespace)::moneypunct_shim<char, true>::~moneypunct_shim()
000000000059cb40 0000000000000064 t std::__facet_shims::(anonymous namespace)::moneypunct_shim<char, true>::~moneypunct_shim()
000000000059cbc0 0000000000000064 t std::__facet_shims::(anonymous namespace)::moneypunct_shim<char, false>::~moneypunct_shim()
000000000059cbc0 0000000000000064 t std::__facet_shims::(anonymous namespace)::moneypunct_shim<char, false>::~moneypunct_shim()
000000000059cc40 0000000000000064 t std::__facet_shims::(anonymous namespace)::moneypunct_shim<wchar_t, true>::~moneypunct_shim()
000000000059cc40 0000000000000064 t std::__facet_shims::(anonymous namespace)::moneypunct_shim<wchar_t, true>::~moneypunct_shim()
000000000059ccc0 0000000000000064 t std::__facet_shims::(anonymous namespace)::moneypunct_shim<wchar_t, false>::~moneypunct_shim()
000000000059ccc0 0000000000000064 t std::__facet_shims::(anonymous namespace)::moneypunct_shim<wchar_t, false>::~moneypunct_shim()
000000000059cd40 000000000000006c t std::__facet_shims::(anonymous namespace)::moneypunct_shim<char, true>::~moneypunct_shim()
000000000059cdc0 000000000000006c t std::__facet_shims::(anonymous namespace)::moneypunct_shim<char, false>::~moneypunct_shim()
000000000059ce40 000000000000006c t std::__facet_shims::(anonymous namespace)::moneypunct_shim<wchar_t, true>::~moneypunct_shim()
000000000059cec0 000000000000006c t std::__facet_shims::(anonymous namespace)::moneypunct_shim<wchar_t, false>::~moneypunct_shim()
000000000059cf40 0000000000000140 t std::__facet_shims::(anonymous namespace)::money_get_shim<wchar_t>::do_get(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, bool, std::ios_base&, std::_Ios_Iostate&, std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >&) const
000000000059d080 0000000000000140 t std::__facet_shims::(anonymous namespace)::money_get_shim<char>::do_get(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, bool, std::ios_base&, std::_Ios_Iostate&, std::string&) const
000000000059d1c0 000000000000002c W std::locale::facet::_M_remove_reference() const
000000000059d200 0000000000000208 W void std::__facet_shims::__numpunct_fill_cache<char>(std::integral_constant<bool, false>, std::locale::facet const*, std::__numpunct_cache<char>*)
000000000059d420 0000000000000260 W void std::__facet_shims::__numpunct_fill_cache<wchar_t>(std::integral_constant<bool, false>, std::locale::facet const*, std::__numpunct_cache<wchar_t>*)
000000000059d680 0000000000000024 W int std::__facet_shims::__collate_compare<char>(std::integral_constant<bool, false>, std::locale::facet const*, char const*, char const*, char const*, char const*)
000000000059d6c0 0000000000000024 W int std::__facet_shims::__collate_compare<wchar_t>(std::integral_constant<bool, false>, std::locale::facet const*, wchar_t const*, wchar_t const*, wchar_t const*, wchar_t const*)
000000000059d700 0000000000000100 W void std::__facet_shims::__collate_transform<char>(std::integral_constant<bool, false>, std::locale::facet const*, std::__facet_shims::__any_string&, char const*, char const*)
000000000059d800 0000000000000100 W void std::__facet_shims::__collate_transform<wchar_t>(std::integral_constant<bool, false>, std::locale::facet const*, std::__facet_shims::__any_string&, wchar_t const*, wchar_t const*)
000000000059d900 00000000000002cc W void std::__facet_shims::__moneypunct_fill_cache<char, true>(std::integral_constant<bool, false>, std::locale::facet const*, std::__moneypunct_cache<char, true>*)
000000000059dbe0 00000000000002cc W void std::__facet_shims::__moneypunct_fill_cache<char, false>(std::integral_constant<bool, false>, std::locale::facet const*, std::__moneypunct_cache<char, false>*)
000000000059dec0 0000000000000340 W void std::__facet_shims::__moneypunct_fill_cache<wchar_t, true>(std::integral_constant<bool, false>, std::locale::facet const*, std::__moneypunct_cache<wchar_t, true>*)
000000000059e200 0000000000000340 W void std::__facet_shims::__moneypunct_fill_cache<wchar_t, false>(std::integral_constant<bool, false>, std::locale::facet const*, std::__moneypunct_cache<wchar_t, false>*)
000000000059e540 00000000000000b4 W int std::__facet_shims::__messages_open<char>(std::integral_constant<bool, false>, std::locale::facet const*, char const*, unsigned long, std::locale const&)
000000000059e600 00000000000000b4 W int std::__facet_shims::__messages_open<wchar_t>(std::integral_constant<bool, false>, std::locale::facet const*, char const*, unsigned long, std::locale const&)
000000000059e6c0 0000000000000184 W void std::__facet_shims::__messages_get<char>(std::integral_constant<bool, false>, std::locale::facet const*, std::__facet_shims::__any_string&, int, int, int, char const*, unsigned long)
000000000059e860 0000000000000184 W void std::__facet_shims::__messages_get<wchar_t>(std::integral_constant<bool, false>, std::locale::facet const*, std::__facet_shims::__any_string&, int, int, int, wchar_t const*, unsigned long)
000000000059ea00 0000000000000018 W void std::__facet_shims::__messages_close<char>(std::integral_constant<bool, false>, std::locale::facet const*, int)
000000000059ea20 0000000000000018 W void std::__facet_shims::__messages_close<wchar_t>(std::integral_constant<bool, false>, std::locale::facet const*, int)
000000000059ea40 0000000000000014 W std::time_base::dateorder std::__facet_shims::__time_get_dateorder<char>(std::integral_constant<bool, false>, std::locale::facet const*)
000000000059ea60 0000000000000014 W std::time_base::dateorder std::__facet_shims::__time_get_dateorder<wchar_t>(std::integral_constant<bool, false>, std::locale::facet const*)
000000000059ea80 00000000000000a4 W std::istreambuf_iterator<char, std::char_traits<char> > std::__facet_shims::__time_get<char>(std::integral_constant<bool, false>, std::locale::facet const*, std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, tm*, char)
000000000059eb40 00000000000000a4 W std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::__facet_shims::__time_get<wchar_t>(std::integral_constant<bool, false>, std::locale::facet const*, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, tm*, char)
000000000059ec00 0000000000000198 W std::istreambuf_iterator<char, std::char_traits<char> > std::__facet_shims::__money_get<char>(std::integral_constant<bool, false>, std::locale::facet const*, std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, bool, std::ios_base&, std::_Ios_Iostate&, long double*, std::__facet_shims::__any_string*)
000000000059eda0 0000000000000198 W std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::__facet_shims::__money_get<wchar_t>(std::integral_constant<bool, false>, std::locale::facet const*, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, bool, std::ios_base&, std::_Ios_Iostate&, long double*, std::__facet_shims::__any_string*)
000000000059ef40 0000000000000140 W std::ostreambuf_iterator<char, std::char_traits<char> > std::__facet_shims::__money_put<char>(std::integral_constant<bool, false>, std::locale::facet const*, std::ostreambuf_iterator<char, std::char_traits<char> >, bool, std::ios_base&, char, long double, std::__facet_shims::__any_string const*)
000000000059f080 0000000000000140 W std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::__facet_shims::__money_put<wchar_t>(std::integral_constant<bool, false>, std::locale::facet const*, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, bool, std::ios_base&, wchar_t, long double, std::__facet_shims::__any_string const*)
000000000059f1c0 0000000000000988 T std::locale::facet::_M_cow_shim(std::locale::id const*) const
000000000059fb60 0000000000000090 W std::string::copy(char*, unsigned long, unsigned long) const
000000000059fc00 0000000000000034 W std::string::swap(std::string&)
000000000059fc40 0000000000000038 W std::string::find_first_not_of(char, unsigned long) const
000000000059fc80 0000000000000080 W std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator<char> const&)
000000000059fd00 000000000000009c W std::string::_S_construct(unsigned long, char, std::allocator<char> const&)
000000000059fda0 0000000000000004 W std::string::_Rep::_M_destroy(std::allocator<char> const&)
000000000059fdc0 00000000000001ec W std::string::_M_mutate(unsigned long, unsigned long, unsigned long)
000000000059ffc0 0000000000000058 W std::string::_M_leak_hard()
00000000005a0020 0000000000000018 W std::string::_M_leak()
00000000005a0040 000000000000009c W std::string::_M_replace_aux(unsigned long, unsigned long, unsigned long, char)
00000000005a00e0 0000000000000078 W std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long)
00000000005a0160 0000000000000130 W std::string::assign(char const*, unsigned long)
00000000005a02a0 00000000000000ac W std::string::_Rep::_M_clone(std::allocator<char> const&, unsigned long)
00000000005a0360 00000000000000c0 W std::string::reserve(unsigned long)
00000000005a0420 00000000000000d4 W std::string::append(std::string const&)
00000000005a0500 0000000000000134 W std::string::append(char const*, unsigned long)
00000000005a0640 00000000000000f4 W std::string::append(unsigned long, char)
00000000005a0740 0000000000000054 W std::string::resize(unsigned long, char)
00000000005a07a0 000000000000009c W std::string::push_back(char)
00000000005a0840 0000000000000094 W std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::copy(wchar_t*, unsigned long, unsigned long) const
00000000005a08e0 0000000000000034 W std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::swap(std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >&)
00000000005a0920 0000000000000094 W std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_Rep::_S_create(unsigned long, unsigned long, std::allocator<wchar_t> const&)
00000000005a09c0 00000000000000a4 W std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_S_construct(unsigned long, wchar_t, std::allocator<wchar_t> const&)
00000000005a0a80 0000000000000004 W std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_Rep::_M_destroy(std::allocator<wchar_t> const&)
00000000005a0aa0 00000000000001fc W std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_M_mutate(unsigned long, unsigned long, unsigned long)
00000000005a0ca0 0000000000000058 W std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_M_leak_hard()
00000000005a0d00 000000000000009c W std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_M_replace_aux(unsigned long, unsigned long, unsigned long, wchar_t)
00000000005a0da0 000000000000007c W std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_M_replace_safe(unsigned long, unsigned long, wchar_t const*, unsigned long)
00000000005a0e20 000000000000010c W std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::assign(wchar_t const*, unsigned long)
00000000005a0f40 00000000000000b0 W std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_Rep::_M_clone(std::allocator<wchar_t> const&, unsigned long)
00000000005a1000 00000000000000c0 W std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::reserve(unsigned long)
00000000005a10c0 00000000000000dc W std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::append(std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> > const&)
00000000005a11a0 0000000000000144 W std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::append(wchar_t const*, unsigned long)
00000000005a1300 00000000000000f4 W std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::append(unsigned long, wchar_t)
00000000005a1400 000000000000004c W std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::resize(unsigned long, wchar_t)
00000000005a1460 0000000000000094 W std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::push_back(wchar_t)
00000000005a1500 0000000000000008 W std::ctype<char>::do_narrow(char, char) const
00000000005a1520 0000000000000048 T std::ctype<char>::~ctype()
00000000005a1520 0000000000000048 T std::ctype<char>::~ctype()
00000000005a1580 0000000000000044 T std::ctype<wchar_t>::~ctype()
00000000005a1580 0000000000000044 T std::ctype<wchar_t>::~ctype()
00000000005a15e0 0000000000000024 T std::ctype<char>::~ctype()
00000000005a1620 0000000000000024 T std::ctype<wchar_t>::~ctype()
00000000005a1660 0000000000000034 W std::ctype<char>::do_narrow(char const*, char const*, char, char*) const
00000000005a16a0 0000000000000034 W std::ctype<char>::do_widen(char const*, char const*, char*) const
00000000005a16e0 0000000000000158 T std::ctype<char>::_M_widen_init() const
00000000005a1840 000000000000006c T std::ctype<wchar_t>::ctype(unsigned long)
00000000005a1840 000000000000006c T std::ctype<wchar_t>::ctype(unsigned long)
00000000005a18c0 0000000000000020 T std::ctype<char>::do_toupper(char) const
00000000005a18c0 0000000000000020 t std::ctype<char>::do_toupper(char) const [clone .localalias]
00000000005a18e0 0000000000000018 T std::ctype<char>::do_tolower(char) const
00000000005a18e0 0000000000000018 t std::ctype<char>::do_tolower(char) const [clone .localalias]
00000000005a1900 0000000000000010 T std::ctype<char>::classic_table()
00000000005a1920 00000000000000bc T std::ctype<char>::ctype(char const*, bool, unsigned long)
00000000005a1920 00000000000000bc T std::ctype<char>::ctype(char const*, bool, unsigned long)
00000000005a19e0 0000000000000094 T std::ctype<char>::do_toupper(char*, char const*) const
00000000005a1a80 0000000000000090 T std::ctype<char>::do_tolower(char*, char const*) const
00000000005a1b20 0000000000000088 T std::ctype<wchar_t>::do_is(char, wchar_t) const
00000000005a1b20 0000000000000088 t std::ctype<wchar_t>::do_is(char, wchar_t) const [clone .localalias]
00000000005a1bc0 0000000000000110 T std::ctype<wchar_t>::_M_convert_to_wmask(char) const
00000000005a1ce0 0000000000000008 T std::ctype<wchar_t>::do_toupper(wchar_t) const
00000000005a1d00 0000000000000068 T std::ctype<wchar_t>::do_toupper(wchar_t*, wchar_t const*) const
00000000005a1d80 0000000000000008 T std::ctype<wchar_t>::do_tolower(wchar_t) const
00000000005a1da0 0000000000000068 T std::ctype<wchar_t>::do_tolower(wchar_t*, wchar_t const*) const
00000000005a1e20 00000000000000bc T std::ctype<wchar_t>::do_is(wchar_t const*, wchar_t const*, char*) const
00000000005a1ee0 00000000000000d0 T std::ctype<wchar_t>::do_scan_is(char, wchar_t const*, wchar_t const*) const
00000000005a1fc0 00000000000000e4 T std::ctype<wchar_t>::do_scan_not(char, wchar_t const*, wchar_t const*) const
00000000005a20c0 000000000000000c T std::ctype<wchar_t>::do_widen(char) const
00000000005a20e0 0000000000000034 T std::ctype<wchar_t>::do_widen(char const*, char const*, wchar_t*) const
00000000005a2120 000000000000005c T std::ctype<wchar_t>::do_narrow(wchar_t, char) const
00000000005a2180 00000000000000ec T std::ctype<wchar_t>::do_narrow(wchar_t const*, wchar_t const*, char, char*) const
00000000005a2280 00000000000000c8 T std::ctype<wchar_t>::_M_initialize_ctype()
00000000005a2360 0000000000000024 t std::__facet_shims::(anonymous namespace)::collate_shim<char>::do_compare(char const*, char const*, char const*, char const*) const
00000000005a23a0 0000000000000058 t std::__facet_shims::(anonymous namespace)::time_get_shim<char>::do_get_year(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, tm*) const
00000000005a2400 0000000000000058 t std::__facet_shims::(anonymous namespace)::time_get_shim<char>::do_get_monthname(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, tm*) const
00000000005a2460 0000000000000058 t std::__facet_shims::(anonymous namespace)::time_get_shim<char>::do_get_weekday(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, tm*) const
00000000005a24c0 0000000000000058 t std::__facet_shims::(anonymous namespace)::time_get_shim<char>::do_get_date(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, tm*) const
00000000005a2520 0000000000000058 t std::__facet_shims::(anonymous namespace)::time_get_shim<char>::do_get_time(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, tm*) const
00000000005a2580 0000000000000010 t std::__facet_shims::(anonymous namespace)::time_get_shim<char>::do_date_order() const
00000000005a25a0 00000000000000a0 t std::__facet_shims::(anonymous namespace)::money_get_shim<char>::do_get(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, bool, std::ios_base&, std::_Ios_Iostate&, long double&) const
00000000005a2640 0000000000000030 t std::__facet_shims::(anonymous namespace)::money_put_shim<char>::do_put(std::ostreambuf_iterator<char, std::char_traits<char> >, bool, std::ios_base&, char, long double) const
00000000005a2680 0000000000000014 t std::__facet_shims::(anonymous namespace)::messages_shim<char>::do_close(int) const
00000000005a26a0 0000000000000018 t std::__facet_shims::(anonymous namespace)::messages_shim<char>::do_open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::locale const&) const
00000000005a26c0 0000000000000024 t std::__facet_shims::(anonymous namespace)::collate_shim<wchar_t>::do_compare(wchar_t const*, wchar_t const*, wchar_t const*, wchar_t const*) const
00000000005a2700 0000000000000058 t std::__facet_shims::(anonymous namespace)::time_get_shim<wchar_t>::do_get_year(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, tm*) const
00000000005a2760 0000000000000058 t std::__facet_shims::(anonymous namespace)::time_get_shim<wchar_t>::do_get_monthname(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, tm*) const
00000000005a27c0 0000000000000058 t std::__facet_shims::(anonymous namespace)::time_get_shim<wchar_t>::do_get_weekday(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, tm*) const
00000000005a2820 0000000000000058 t std::__facet_shims::(anonymous namespace)::time_get_shim<wchar_t>::do_get_date(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, tm*) const
00000000005a2880 0000000000000058 t std::__facet_shims::(anonymous namespace)::time_get_shim<wchar_t>::do_get_time(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, tm*) const
00000000005a28e0 0000000000000010 t std::__facet_shims::(anonymous namespace)::time_get_shim<wchar_t>::do_date_order() const
00000000005a2900 00000000000000a0 t std::__facet_shims::(anonymous namespace)::money_get_shim<wchar_t>::do_get(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, bool, std::ios_base&, std::_Ios_Iostate&, long double&) const
00000000005a29a0 0000000000000028 t std::__facet_shims::(anonymous namespace)::money_put_shim<wchar_t>::do_put(std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, bool, std::ios_base&, wchar_t, long double) const
00000000005a29e0 0000000000000014 t std::__facet_shims::(anonymous namespace)::messages_shim<wchar_t>::do_close(int) const
00000000005a2a00 0000000000000018 t std::__facet_shims::(anonymous namespace)::messages_shim<wchar_t>::do_open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::locale const&) const
00000000005a2a20 00000000000000ac t void std::__cxx11::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_M_construct<wchar_t const*>(wchar_t const*, wchar_t const*, std::forward_iterator_tag) [clone .isra.0]
00000000005a2ae0 00000000000000bc t void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*, std::forward_iterator_tag) [clone .isra.0]
00000000005a2ba0 00000000000000d8 t std::__facet_shims::(anonymous namespace)::money_put_shim<char>::do_put(std::ostreambuf_iterator<char, std::char_traits<char> >, bool, std::ios_base&, char, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const
00000000005a2c80 00000000000000bc t void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag) [clone .isra.0]
00000000005a2d40 00000000000000ac t void std::__cxx11::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_M_construct<wchar_t*>(wchar_t*, wchar_t*, std::forward_iterator_tag) [clone .isra.0]
00000000005a2e00 00000000000000dc t std::__facet_shims::(anonymous namespace)::money_put_shim<wchar_t>::do_put(std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, bool, std::ios_base&, wchar_t, std::__cxx11::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> > const&) const
00000000005a2ee0 00000000000000b0 t std::__facet_shims::(anonymous namespace)::messages_shim<char>::do_get(int, int, int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const
00000000005a2fa0 00000000000000a8 t std::__facet_shims::(anonymous namespace)::collate_shim<wchar_t>::do_transform(wchar_t const*, wchar_t const*) const
00000000005a3060 00000000000000b0 t std::__facet_shims::(anonymous namespace)::messages_shim<wchar_t>::do_get(int, int, int, std::__cxx11::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> > const&) const
00000000005a3120 00000000000000a8 t std::__facet_shims::(anonymous namespace)::collate_shim<char>::do_transform(char const*, char const*) const
00000000005a31e0 0000000000000018 t void std::__facet_shims::(anonymous namespace)::__destroy_string<wchar_t>(void*)
00000000005a3200 0000000000000018 t void std::__facet_shims::(anonymous namespace)::__destroy_string<char>(void*)
00000000005a3220 0000000000000054 t std::__facet_shims::(anonymous namespace)::messages_shim<char>::~messages_shim()
00000000005a3220 0000000000000054 t std::__facet_shims::(anonymous namespace)::messages_shim<char>::~messages_shim()
00000000005a3280 0000000000000054 t std::__facet_shims::(anonymous namespace)::messages_shim<wchar_t>::~messages_shim()
00000000005a3280 0000000000000054 t std::__facet_shims::(anonymous namespace)::messages_shim<wchar_t>::~messages_shim()
00000000005a32e0 0000000000000064 t std::__facet_shims::(anonymous namespace)::money_get_shim<char>::~money_get_shim()
00000000005a32e0 0000000000000064 t std::__facet_shims::(anonymous namespace)::money_get_shim<char>::~money_get_shim()
00000000005a3360 0000000000000064 t std::__facet_shims::(anonymous namespace)::money_put_shim<char>::~money_put_shim()
00000000005a3360 0000000000000064 t std::__facet_shims::(anonymous namespace)::money_put_shim<char>::~money_put_shim()
00000000005a33e0 0000000000000064 t std::__facet_shims::(anonymous namespace)::money_get_shim<wchar_t>::~money_get_shim()
00000000005a33e0 0000000000000064 t std::__facet_shims::(anonymous namespace)::money_get_shim<wchar_t>::~money_get_shim()
00000000005a3460 0000000000000064 t std::__facet_shims::(anonymous namespace)::money_put_shim<wchar_t>::~money_put_shim()
00000000005a3460 0000000000000064 t std::__facet_shims::(anonymous namespace)::money_put_shim<wchar_t>::~money_put_shim()
00000000005a34e0 0000000000000064 t std::__facet_shims::(anonymous namespace)::time_get_shim<char>::~time_get_shim()
00000000005a34e0 0000000000000064 t std::__facet_shims::(anonymous namespace)::time_get_shim<char>::~time_get_shim()
00000000005a3560 0000000000000064 t std::__facet_shims::(anonymous namespace)::time_get_shim<wchar_t>::~time_get_shim()
00000000005a3560 0000000000000064 t std::__facet_shims::(anonymous namespace)::time_get_shim<wchar_t>::~time_get_shim()
00000000005a35e0 000000000000005c t std::__facet_shims::(anonymous namespace)::messages_shim<char>::~messages_shim()
00000000005a3640 000000000000005c t std::__facet_shims::(anonymous namespace)::messages_shim<wchar_t>::~messages_shim()
00000000005a36a0 0000000000000058 t std::__facet_shims::(anonymous namespace)::numpunct_shim<char>::~numpunct_shim()
00000000005a36a0 0000000000000058 t std::__facet_shims::(anonymous namespace)::numpunct_shim<char>::~numpunct_shim()
00000000005a3700 0000000000000058 t std::__facet_shims::(anonymous namespace)::numpunct_shim<wchar_t>::~numpunct_shim()
00000000005a3700 0000000000000058 t std::__facet_shims::(anonymous namespace)::numpunct_shim<wchar_t>::~numpunct_shim()
00000000005a3760 000000000000006c t std::__facet_shims::(anonymous namespace)::money_get_shim<char>::~money_get_shim()
00000000005a37e0 000000000000006c t std::__facet_shims::(anonymous namespace)::money_put_shim<char>::~money_put_shim()
00000000005a3860 000000000000006c t std::__facet_shims::(anonymous namespace)::money_get_shim<wchar_t>::~money_get_shim()
00000000005a38e0 000000000000006c t std::__facet_shims::(anonymous namespace)::money_put_shim<wchar_t>::~money_put_shim()
00000000005a3960 000000000000006c t std::__facet_shims::(anonymous namespace)::time_get_shim<char>::~time_get_shim()
00000000005a39e0 000000000000006c t std::__facet_shims::(anonymous namespace)::time_get_shim<wchar_t>::~time_get_shim()
00000000005a3a60 000000000000006c t std::__facet_shims::(anonymous namespace)::collate_shim<char>::~collate_shim()
00000000005a3a60 000000000000006c t std::__facet_shims::(anonymous namespace)::collate_shim<char>::~collate_shim()
00000000005a3ae0 000000000000006c t std::__facet_shims::(anonymous namespace)::collate_shim<wchar_t>::~collate_shim()
00000000005a3ae0 000000000000006c t std::__facet_shims::(anonymous namespace)::collate_shim<wchar_t>::~collate_shim()
00000000005a3b60 0000000000000060 t std::__facet_shims::(anonymous namespace)::numpunct_shim<char>::~numpunct_shim()
00000000005a3bc0 0000000000000060 t std::__facet_shims::(anonymous namespace)::numpunct_shim<wchar_t>::~numpunct_shim()
00000000005a3c20 0000000000000074 t std::__facet_shims::(anonymous namespace)::collate_shim<char>::~collate_shim()
00000000005a3ca0 0000000000000074 t std::__facet_shims::(anonymous namespace)::collate_shim<wchar_t>::~collate_shim()
00000000005a3d20 0000000000000064 t std::__facet_shims::(anonymous namespace)::moneypunct_shim<char, true>::~moneypunct_shim()
00000000005a3d20 0000000000000064 t std::__facet_shims::(anonymous namespace)::moneypunct_shim<char, true>::~moneypunct_shim()
00000000005a3da0 0000000000000064 t std::__facet_shims::(anonymous namespace)::moneypunct_shim<char, false>::~moneypunct_shim()
00000000005a3da0 0000000000000064 t std::__facet_shims::(anonymous namespace)::moneypunct_shim<char, false>::~moneypunct_shim()
00000000005a3e20 0000000000000064 t std::__facet_shims::(anonymous namespace)::moneypunct_shim<wchar_t, true>::~moneypunct_shim()
00000000005a3e20 0000000000000064 t std::__facet_shims::(anonymous namespace)::moneypunct_shim<wchar_t, true>::~moneypunct_shim()
00000000005a3ea0 0000000000000064 t std::__facet_shims::(anonymous namespace)::moneypunct_shim<wchar_t, false>::~moneypunct_shim()
00000000005a3ea0 0000000000000064 t std::__facet_shims::(anonymous namespace)::moneypunct_shim<wchar_t, false>::~moneypunct_shim()
00000000005a3f20 000000000000006c t std::__facet_shims::(anonymous namespace)::moneypunct_shim<char, true>::~moneypunct_shim()
00000000005a3fa0 000000000000006c t std::__facet_shims::(anonymous namespace)::moneypunct_shim<char, false>::~moneypunct_shim()
00000000005a4020 000000000000006c t std::__facet_shims::(anonymous namespace)::moneypunct_shim<wchar_t, true>::~moneypunct_shim()
00000000005a40a0 000000000000006c t std::__facet_shims::(anonymous namespace)::moneypunct_shim<wchar_t, false>::~moneypunct_shim()
00000000005a4120 00000000000001b4 t std::__facet_shims::(anonymous namespace)::money_get_shim<wchar_t>::do_get(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, bool, std::ios_base&, std::_Ios_Iostate&, std::__cxx11::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >&) const
00000000005a42e0 0000000000000224 t std::__facet_shims::(anonymous namespace)::money_get_shim<char>::do_get(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, bool, std::ios_base&, std::_Ios_Iostate&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&) const
00000000005a4520 0000000000000180 W void std::__facet_shims::__numpunct_fill_cache<char>(std::integral_constant<bool, true>, std::locale::facet const*, std::__numpunct_cache<char>*)
00000000005a46a0 00000000000001d0 W void std::__facet_shims::__numpunct_fill_cache<wchar_t>(std::integral_constant<bool, true>, std::locale::facet const*, std::__numpunct_cache<wchar_t>*)
00000000005a4880 0000000000000024 W int std::__facet_shims::__collate_compare<char>(std::integral_constant<bool, true>, std::locale::facet const*, char const*, char const*, char const*, char const*)
00000000005a48c0 0000000000000024 W int std::__facet_shims::__collate_compare<wchar_t>(std::integral_constant<bool, true>, std::locale::facet const*, wchar_t const*, wchar_t const*, wchar_t const*, wchar_t const*)
00000000005a4900 0000000000000098 W void std::__facet_shims::__collate_transform<char>(std::integral_constant<bool, true>, std::locale::facet const*, std::__facet_shims::__any_string&, char const*, char const*)
00000000005a49a0 0000000000000098 W void std::__facet_shims::__collate_transform<wchar_t>(std::integral_constant<bool, true>, std::locale::facet const*, std::__facet_shims::__any_string&, wchar_t const*, wchar_t const*)
00000000005a4a40 0000000000000218 W void std::__facet_shims::__moneypunct_fill_cache<char, true>(std::integral_constant<bool, true>, std::locale::facet const*, std::__moneypunct_cache<char, true>*)
00000000005a4c60 0000000000000218 W void std::__facet_shims::__moneypunct_fill_cache<char, false>(std::integral_constant<bool, true>, std::locale::facet const*, std::__moneypunct_cache<char, false>*)
00000000005a4e80 0000000000000284 W void std::__facet_shims::__moneypunct_fill_cache<wchar_t, true>(std::integral_constant<bool, true>, std::locale::facet const*, std::__moneypunct_cache<wchar_t, true>*)
00000000005a5120 0000000000000284 W void std::__facet_shims::__moneypunct_fill_cache<wchar_t, false>(std::integral_constant<bool, true>, std::locale::facet const*, std::__moneypunct_cache<wchar_t, false>*)
00000000005a53c0 000000000000009c W int std::__facet_shims::__messages_open<char>(std::integral_constant<bool, true>, std::locale::facet const*, char const*, unsigned long, std::locale const&)
00000000005a5460 000000000000009c W int std::__facet_shims::__messages_open<wchar_t>(std::integral_constant<bool, true>, std::locale::facet const*, char const*, unsigned long, std::locale const&)
00000000005a5500 0000000000000114 W void std::__facet_shims::__messages_get<char>(std::integral_constant<bool, true>, std::locale::facet const*, std::__facet_shims::__any_string&, int, int, int, char const*, unsigned long)
00000000005a5620 0000000000000114 W void std::__facet_shims::__messages_get<wchar_t>(std::integral_constant<bool, true>, std::locale::facet const*, std::__facet_shims::__any_string&, int, int, int, wchar_t const*, unsigned long)
00000000005a5740 0000000000000018 W void std::__facet_shims::__messages_close<char>(std::integral_constant<bool, true>, std::locale::facet const*, int)
00000000005a5760 0000000000000018 W void std::__facet_shims::__messages_close<wchar_t>(std::integral_constant<bool, true>, std::locale::facet const*, int)
00000000005a5780 0000000000000014 W std::time_base::dateorder std::__facet_shims::__time_get_dateorder<char>(std::integral_constant<bool, true>, std::locale::facet const*)
00000000005a57a0 0000000000000014 W std::time_base::dateorder std::__facet_shims::__time_get_dateorder<wchar_t>(std::integral_constant<bool, true>, std::locale::facet const*)
00000000005a57c0 00000000000000a4 W std::istreambuf_iterator<char, std::char_traits<char> > std::__facet_shims::__time_get<char>(std::integral_constant<bool, true>, std::locale::facet const*, std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, tm*, char)
00000000005a5880 00000000000000a4 W std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::__facet_shims::__time_get<wchar_t>(std::integral_constant<bool, true>, std::locale::facet const*, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, tm*, char)
00000000005a5940 0000000000000128 W std::istreambuf_iterator<char, std::char_traits<char> > std::__facet_shims::__money_get<char>(std::integral_constant<bool, true>, std::locale::facet const*, std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, bool, std::ios_base&, std::_Ios_Iostate&, long double*, std::__facet_shims::__any_string*)
00000000005a5a80 0000000000000128 W std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::__facet_shims::__money_get<wchar_t>(std::integral_constant<bool, true>, std::locale::facet const*, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, bool, std::ios_base&, std::_Ios_Iostate&, long double*, std::__facet_shims::__any_string*)
00000000005a5bc0 0000000000000120 W std::ostreambuf_iterator<char, std::char_traits<char> > std::__facet_shims::__money_put<char>(std::integral_constant<bool, true>, std::locale::facet const*, std::ostreambuf_iterator<char, std::char_traits<char> >, bool, std::ios_base&, char, long double, std::__facet_shims::__any_string const*)
00000000005a5ce0 0000000000000120 W std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::__facet_shims::__money_put<wchar_t>(std::integral_constant<bool, true>, std::locale::facet const*, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, bool, std::ios_base&, wchar_t, long double, std::__facet_shims::__any_string const*)
00000000005a5e00 0000000000000988 T std::locale::facet::_M_sso_shim(std::locale::id const*) const
00000000005a67a0 000000000000000c W std::__cxx11::moneypunct<wchar_t, false>::do_decimal_point() const
00000000005a67c0 000000000000000c W std::__cxx11::moneypunct<wchar_t, false>::do_thousands_sep() const
00000000005a67e0 000000000000000c W std::__cxx11::moneypunct<wchar_t, false>::do_frac_digits() const
00000000005a6800 000000000000000c W std::__cxx11::moneypunct<wchar_t, false>::do_pos_format() const
00000000005a6820 000000000000000c W std::__cxx11::moneypunct<wchar_t, false>::do_neg_format() const
00000000005a6840 000000000000000c W std::__cxx11::moneypunct<wchar_t, true>::do_decimal_point() const
00000000005a6860 000000000000000c W std::__cxx11::moneypunct<wchar_t, true>::do_thousands_sep() const
00000000005a6880 000000000000000c W std::__cxx11::moneypunct<wchar_t, true>::do_frac_digits() const
00000000005a68a0 000000000000000c W std::__cxx11::moneypunct<wchar_t, true>::do_pos_format() const
00000000005a68c0 000000000000000c W std::__cxx11::moneypunct<wchar_t, true>::do_neg_format() const
00000000005a68e0 000000000000000c W std::__cxx11::numpunct<wchar_t>::do_decimal_point() const
00000000005a6900 000000000000000c W std::__cxx11::numpunct<wchar_t>::do_thousands_sep() const
00000000005a6920 0000000000000008 W std::__cxx11::time_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::do_date_order() const
00000000005a6940 0000000000000008 W std::__cxx11::messages<wchar_t>::do_open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::locale const&) const
00000000005a6960 0000000000000004 W std::__cxx11::messages<wchar_t>::do_close(int) const
00000000005a6980 0000000000000024 W std::__cxx11::collate<wchar_t>::do_hash(wchar_t const*, wchar_t const*) const
00000000005a69c0 0000000000000014 W std::__cxx11::money_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::~money_get()
00000000005a69c0 0000000000000014 W std::__cxx11::money_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::~money_get()
00000000005a69e0 0000000000000034 W std::__cxx11::money_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::~money_get()
00000000005a6a20 0000000000000014 W std::__cxx11::money_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::~money_put()
00000000005a6a20 0000000000000014 W std::__cxx11::money_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::~money_put()
00000000005a6a40 0000000000000034 W std::__cxx11::money_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::~money_put()
00000000005a6a80 0000000000000014 W std::__cxx11::time_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::~time_get()
00000000005a6a80 0000000000000014 W std::__cxx11::time_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::~time_get()
00000000005a6aa0 0000000000000034 W std::__cxx11::time_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::~time_get()
00000000005a6ae0 0000000000000034 W std::__cxx11::messages<wchar_t>::~messages()
00000000005a6ae0 0000000000000034 W std::__cxx11::messages<wchar_t>::~messages()
00000000005a6b20 0000000000000024 W std::__cxx11::messages<wchar_t>::~messages()
00000000005a6b60 0000000000000034 W std::__cxx11::collate<wchar_t>::~collate()
00000000005a6b60 0000000000000034 W std::__cxx11::collate<wchar_t>::~collate()
00000000005a6ba0 00000000000000ac t void std::__cxx11::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_M_construct<wchar_t const*>(wchar_t const*, wchar_t const*, std::forward_iterator_tag) [clone .isra.0]
00000000005a6c60 000000000000003c W std::__cxx11::collate<wchar_t>::~collate()
00000000005a6ca0 00000000000000ec W std::__cxx11::numpunct<wchar_t>::do_grouping() const
00000000005a6da0 00000000000000ec W std::__cxx11::moneypunct<wchar_t, false>::do_grouping() const
00000000005a6ea0 00000000000000ec W std::__cxx11::moneypunct<wchar_t, true>::do_grouping() const
00000000005a6fa0 000000000000005c W std::__cxx11::moneypunct<wchar_t, false>::do_curr_symbol() const
00000000005a7000 000000000000005c W std::__cxx11::moneypunct<wchar_t, false>::do_positive_sign() const
00000000005a7060 000000000000005c W std::__cxx11::moneypunct<wchar_t, false>::do_negative_sign() const
00000000005a70c0 000000000000005c W std::__cxx11::moneypunct<wchar_t, true>::do_curr_symbol() const
00000000005a7120 000000000000005c W std::__cxx11::moneypunct<wchar_t, true>::do_positive_sign() const
00000000005a7180 000000000000005c W std::__cxx11::moneypunct<wchar_t, true>::do_negative_sign() const
00000000005a71e0 000000000000005c W std::__cxx11::numpunct<wchar_t>::do_truename() const
00000000005a7240 000000000000005c W std::__cxx11::numpunct<wchar_t>::do_falsename() const
00000000005a72a0 000000000000011c W std::__cxx11::collate<wchar_t>::do_compare(wchar_t const*, wchar_t const*, wchar_t const*, wchar_t const*) const
00000000005a73c0 0000000000000210 W std::__cxx11::collate<wchar_t>::do_transform(wchar_t const*, wchar_t const*) const
00000000005a75e0 0000000000000150 W std::__convert_from_v(int* const&, char*, int, char const*, ...)
00000000005a7740 00000000000012ac W std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::__cxx11::money_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract<true>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&) const
00000000005a8a00 00000000000012ac W std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::__cxx11::money_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract<false>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&) const
00000000005a9cc0 00000000000000c4 W std::__cxx11::money_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::do_get(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, bool, std::ios_base&, std::_Ios_Iostate&, long double&) const
00000000005a9da0 0000000000000144 W std::__cxx11::money_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::do_get(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, bool, std::ios_base&, std::_Ios_Iostate&, std::__cxx11::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >&) const
00000000005a9f00 00000000000006bc W std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::__cxx11::money_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_insert<true>(std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, wchar_t, std::__cxx11::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> > const&) const
00000000005aa5c0 00000000000006bc W std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::__cxx11::money_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_insert<false>(std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, wchar_t, std::__cxx11::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> > const&) const
00000000005aac80 00000000000001bc W std::__cxx11::money_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::do_put(std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, bool, std::ios_base&, wchar_t, long double) const
00000000005aae40 0000000000000020 W std::__cxx11::money_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::do_put(std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, bool, std::ios_base&, wchar_t, std::__cxx11::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> > const&) const
00000000005aae60 0000000000000288 W std::__cxx11::time_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_num(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, int&, int, int, unsigned long, std::ios_base&, std::_Ios_Iostate&) const
00000000005ab100 00000000000005fc W std::__cxx11::time_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::do_get_year(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, tm*) const
00000000005ab700 0000000000000c48 W std::__cxx11::time_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_name(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, int&, wchar_t const**, unsigned long, std::ios_base&, std::_Ios_Iostate&) const
00000000005ac360 0000000000000538 W std::__cxx11::time_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_wday_or_month(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, int&, wchar_t const**, unsigned long, std::ios_base&, std::_Ios_Iostate&) const
00000000005ac8a0 0000000000000220 W std::__cxx11::time_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::do_get_weekday(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, tm*) const
00000000005acac0 0000000000000228 W std::__cxx11::time_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::do_get_monthname(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, tm*) const
00000000005acd00 0000000000000058 W std::__cxx11::messages<wchar_t>::messages(unsigned long)
00000000005acd00 0000000000000058 W std::__cxx11::messages<wchar_t>::messages(unsigned long)
00000000005acd60 0000000000000064 W std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >::_M_get() const
00000000005acde0 00000000000018d8 W std::__cxx11::time_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_via_format(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, tm*, wchar_t const*, std::__time_get_state&) const
00000000005acde0 00000000000018d8 t std::__cxx11::time_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_via_format(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, tm*, wchar_t const*, std::__time_get_state&) const [clone .localalias]
00000000005ae6c0 00000000000001b8 W std::__cxx11::time_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::do_get_time(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, tm*) const
00000000005ae880 00000000000001b8 W std::__cxx11::time_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::do_get_date(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, tm*) const
00000000005aea40 00000000000001cc W std::__cxx11::time_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::do_get(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, tm*, char, char) const
00000000005aec20 0000000000000014 W __gnu_cxx::stdio_sync_filebuf<char, std::char_traits<char> >::~stdio_sync_filebuf()
00000000005aec20 0000000000000014 W __gnu_cxx::stdio_sync_filebuf<char, std::char_traits<char> >::~stdio_sync_filebuf()
00000000005aec40 0000000000000034 W __gnu_cxx::stdio_sync_filebuf<char, std::char_traits<char> >::~stdio_sync_filebuf()
00000000005aec80 0000000000000014 W __gnu_cxx::stdio_sync_filebuf<wchar_t, std::char_traits<wchar_t> >::~stdio_sync_filebuf()
00000000005aec80 0000000000000014 W __gnu_cxx::stdio_sync_filebuf<wchar_t, std::char_traits<wchar_t> >::~stdio_sync_filebuf()
00000000005aeca0 0000000000000034 W __gnu_cxx::stdio_sync_filebuf<wchar_t, std::char_traits<wchar_t> >::~stdio_sync_filebuf()
00000000005aece0 0000000000000028 W __gnu_cxx::stdio_sync_filebuf<char, std::char_traits<char> >::uflow()
00000000005aed20 0000000000000028 W __gnu_cxx::stdio_sync_filebuf<char, std::char_traits<char> >::underflow()
00000000005aed60 0000000000000060 W __gnu_cxx::stdio_sync_filebuf<char, std::char_traits<char> >::pbackfail(int)
00000000005aedc0 0000000000000008 W __gnu_cxx::stdio_sync_filebuf<char, std::char_traits<char> >::sync()
00000000005aede0 0000000000000008 W __gnu_cxx::stdio_sync_filebuf<wchar_t, std::char_traits<wchar_t> >::sync()
00000000005aee00 0000000000000064 W __gnu_cxx::stdio_sync_filebuf<char, std::char_traits<char> >::seekoff(long, std::_Ios_Seekdir, std::_Ios_Openmode)
00000000005aee80 0000000000000064 W __gnu_cxx::stdio_sync_filebuf<wchar_t, std::char_traits<wchar_t> >::seekoff(long, std::_Ios_Seekdir, std::_Ios_Openmode)
00000000005aef00 0000000000000028 W __gnu_cxx::stdio_sync_filebuf<wchar_t, std::char_traits<wchar_t> >::uflow()
00000000005aef40 000000000000007c W __gnu_cxx::stdio_sync_filebuf<wchar_t, std::char_traits<wchar_t> >::xsgetn(wchar_t*, long)
00000000005aefc0 0000000000000028 W __gnu_cxx::stdio_sync_filebuf<wchar_t, std::char_traits<wchar_t> >::underflow()
00000000005af000 0000000000000060 W __gnu_cxx::stdio_sync_filebuf<wchar_t, std::char_traits<wchar_t> >::pbackfail(unsigned int)
00000000005af060 0000000000000064 W __gnu_cxx::stdio_sync_filebuf<wchar_t, std::char_traits<wchar_t> >::xsputn(wchar_t const*, long)
00000000005af0e0 0000000000000014 W __gnu_cxx::stdio_sync_filebuf<char, std::char_traits<char> >::xsputn(char const*, long)
00000000005af100 0000000000000048 W __gnu_cxx::stdio_sync_filebuf<char, std::char_traits<char> >::xsgetn(char*, long)
00000000005af160 0000000000000038 W __gnu_cxx::stdio_sync_filebuf<wchar_t, std::char_traits<wchar_t> >::overflow(unsigned int)
00000000005af1a0 0000000000000038 W __gnu_cxx::stdio_sync_filebuf<char, std::char_traits<char> >::overflow(int)
00000000005af1e0 0000000000000074 W __gnu_cxx::stdio_sync_filebuf<wchar_t, std::char_traits<wchar_t> >::seekpos(std::fpos<_mbstate_t>, std::_Ios_Openmode)
00000000005af260 0000000000000074 W __gnu_cxx::stdio_sync_filebuf<char, std::char_traits<char> >::seekpos(std::fpos<_mbstate_t>, std::_Ios_Openmode)
00000000005af2e0 00000000000000c0 T std::__detail::_Prime_rehash_policy::_M_next_bkt(unsigned long) const
00000000005af3a0 000000000000009c T std::__detail::_Prime_rehash_policy::_M_need_rehash(unsigned long, unsigned long, unsigned long) const
00000000005af440 0000000000000014 W std::basic_ios<char, std::char_traits<char> >::~basic_ios()
00000000005af440 0000000000000014 W std::basic_ios<char, std::char_traits<char> >::~basic_ios()
00000000005af460 0000000000000014 W std::basic_ios<wchar_t, std::char_traits<wchar_t> >::~basic_ios()
00000000005af460 0000000000000014 W std::basic_ios<wchar_t, std::char_traits<wchar_t> >::~basic_ios()
00000000005af480 0000000000000034 W std::basic_ios<char, std::char_traits<char> >::~basic_ios()
00000000005af4c0 0000000000000034 W std::basic_ios<wchar_t, std::char_traits<wchar_t> >::~basic_ios()
00000000005af500 0000000000000038 W std::basic_ios<char, std::char_traits<char> >::clear(std::_Ios_Iostate)
00000000005af540 0000000000000024 W std::basic_ios<char, std::char_traits<char> >::_M_setstate(std::_Ios_Iostate)
00000000005af580 000000000000007c W std::basic_ios<char, std::char_traits<char> >::_M_cache_locale(std::locale const&)
00000000005af600 0000000000000048 W std::basic_ios<char, std::char_traits<char> >::init(std::basic_streambuf<char, std::char_traits<char> >*)
00000000005af660 0000000000000038 W std::basic_ios<wchar_t, std::char_traits<wchar_t> >::clear(std::_Ios_Iostate)
00000000005af6a0 0000000000000024 W std::basic_ios<wchar_t, std::char_traits<wchar_t> >::_M_setstate(std::_Ios_Iostate)
00000000005af6e0 000000000000007c W std::basic_ios<wchar_t, std::char_traits<wchar_t> >::_M_cache_locale(std::locale const&)
00000000005af760 000000000000004c W std::basic_ios<wchar_t, std::char_traits<wchar_t> >::init(std::basic_streambuf<wchar_t, std::char_traits<wchar_t> >*)
00000000005af7c0 0000000000000060 T std::ios_base::ios_base()
00000000005af7c0 0000000000000060 T std::ios_base::ios_base()
00000000005af820 0000000000000068 T std::ios_base::_M_call_callbacks(std::ios_base::event)
00000000005af8a0 0000000000000054 T std::ios_base::_M_dispose_callbacks()
00000000005af900 000000000000005c T std::ios_base::~ios_base()
00000000005af900 000000000000005c T std::ios_base::~ios_base()
00000000005af960 0000000000000024 T std::ios_base::~ios_base()
00000000005af9a0 000000000000002c W std::basic_istream<char, std::char_traits<char> >::~basic_istream()
00000000005af9cc 0000000000000034 W virtual thunk to std::basic_istream<char, std::char_traits<char> >::~basic_istream()
00000000005afa00 0000000000000048 W std::basic_istream<char, std::char_traits<char> >::~basic_istream()
00000000005afa48 0000000000000050 W virtual thunk to std::basic_istream<char, std::char_traits<char> >::~basic_istream()
00000000005afaa0 000000000000002c W std::basic_istream<wchar_t, std::char_traits<wchar_t> >::~basic_istream()
00000000005afacc 0000000000000034 W virtual thunk to std::basic_istream<wchar_t, std::char_traits<wchar_t> >::~basic_istream()
00000000005afb00 0000000000000048 W std::basic_istream<wchar_t, std::char_traits<wchar_t> >::~basic_istream()
00000000005afb48 0000000000000050 W virtual thunk to std::basic_istream<wchar_t, std::char_traits<wchar_t> >::~basic_istream()
00000000005afba0 000000000000000c W std::moneypunct<char, false>::do_decimal_point() const
00000000005afbc0 000000000000000c W std::moneypunct<char, false>::do_thousands_sep() const
00000000005afbe0 000000000000000c W std::moneypunct<char, false>::do_frac_digits() const
00000000005afc00 000000000000000c W std::moneypunct<char, false>::do_pos_format() const
00000000005afc20 000000000000000c W std::moneypunct<char, false>::do_neg_format() const
00000000005afc40 000000000000000c W std::moneypunct<char, true>::do_decimal_point() const
00000000005afc60 000000000000000c W std::moneypunct<char, true>::do_thousands_sep() const
00000000005afc80 000000000000000c W std::moneypunct<char, true>::do_frac_digits() const
00000000005afca0 000000000000000c W std::moneypunct<char, true>::do_pos_format() const
00000000005afcc0 000000000000000c W std::moneypunct<char, true>::do_neg_format() const
00000000005afce0 000000000000000c W std::numpunct<char>::do_decimal_point() const
00000000005afd00 000000000000000c W std::numpunct<char>::do_thousands_sep() const
00000000005afd20 0000000000000008 W std::time_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::do_date_order() const
00000000005afd40 0000000000000008 W std::messages<char>::do_open(std::string const&, std::locale const&) const
00000000005afd60 0000000000000004 W std::messages<char>::do_close(int) const
00000000005afd80 0000000000000024 W std::collate<char>::do_hash(char const*, char const*) const
00000000005afdc0 0000000000000014 W std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::~num_get()
00000000005afdc0 0000000000000014 W std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::~num_get()
00000000005afde0 0000000000000014 W std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::~num_put()
00000000005afde0 0000000000000014 W std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::~num_put()
00000000005afe00 0000000000000014 W std::money_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::~money_get()
00000000005afe00 0000000000000014 W std::money_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::~money_get()
00000000005afe20 0000000000000014 W std::money_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::~money_put()
00000000005afe20 0000000000000014 W std::money_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::~money_put()
00000000005afe40 0000000000000014 W std::__timepunct_cache<char>::~__timepunct_cache()
00000000005afe40 0000000000000014 W std::__timepunct_cache<char>::~__timepunct_cache()
00000000005afe60 0000000000000014 W std::time_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::~time_put()
00000000005afe60 0000000000000014 W std::time_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::~time_put()
00000000005afe80 0000000000000014 W std::time_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::~time_get()
00000000005afe80 0000000000000014 W std::time_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::~time_get()
00000000005afea0 0000000000000034 W std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::~num_get()
00000000005afee0 0000000000000034 W std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::~num_put()
00000000005aff20 0000000000000034 W std::money_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::~money_get()
00000000005aff60 0000000000000034 W std::money_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::~money_put()
00000000005affa0 0000000000000024 W std::__timepunct_cache<char>::~__timepunct_cache()
00000000005affe0 0000000000000034 W std::time_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::~time_put()
00000000005b0020 0000000000000034 W std::time_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::~time_get()
00000000005b0060 0000000000000068 W std::__moneypunct_cache<char, false>::~__moneypunct_cache()
00000000005b0060 0000000000000068 W std::__moneypunct_cache<char, false>::~__moneypunct_cache()
00000000005b00e0 0000000000000024 W std::__moneypunct_cache<char, false>::~__moneypunct_cache()
00000000005b0120 0000000000000068 W std::__moneypunct_cache<char, true>::~__moneypunct_cache()
00000000005b0120 0000000000000068 W std::__moneypunct_cache<char, true>::~__moneypunct_cache()
00000000005b01a0 0000000000000024 W std::__moneypunct_cache<char, true>::~__moneypunct_cache()
00000000005b01e0 000000000000005c W std::__numpunct_cache<char>::~__numpunct_cache()
00000000005b01e0 000000000000005c W std::__numpunct_cache<char>::~__numpunct_cache()
00000000005b0240 0000000000000024 W std::__numpunct_cache<char>::~__numpunct_cache()
00000000005b0280 0000000000000034 W std::messages<char>::~messages()
00000000005b0280 0000000000000034 W std::messages<char>::~messages()
00000000005b02c0 0000000000000024 W std::messages<char>::~messages()
00000000005b0300 0000000000000034 W std::collate<char>::~collate()
00000000005b0300 0000000000000034 W std::collate<char>::~collate()
00000000005b0340 0000000000000068 W std::__timepunct<char>::~__timepunct()
00000000005b0340 0000000000000068 W std::__timepunct<char>::~__timepunct()
00000000005b03c0 0000000000000024 W std::__timepunct<char>::~__timepunct()
00000000005b0400 0000000000000028 t std::basic_streambuf<char, std::char_traits<char> >::sbumpc() [clone .isra.0]
00000000005b0440 0000000000000058 t std::ctype<char>::widen(char) const [clone .part.0]
00000000005b04a0 00000000000000a0 t std::ctype<char>::widen(char const*, char const*, char*) const [clone .isra.0]
00000000005b0540 00000000000000b8 t char* std::string::_S_construct<char const*>(char const*, char const*, std::allocator<char> const&, std::forward_iterator_tag) [clone .isra.0]
00000000005b0600 0000000000000050 t std::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string() [clone .isra.0]
00000000005b0660 000000000000003c W std::collate<char>::~collate()
00000000005b06a0 0000000000000164 W std::time_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::do_put(std::ostreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, char, tm const*, char, char) const
00000000005b0820 00000000000000d8 W std::moneypunct<char, false>::do_grouping() const
00000000005b0900 00000000000000d8 W std::moneypunct<char, false>::do_curr_symbol() const
00000000005b09e0 00000000000000d8 W std::moneypunct<char, false>::do_positive_sign() const
00000000005b0ac0 00000000000000d8 W std::moneypunct<char, false>::do_negative_sign() const
00000000005b0ba0 00000000000000d8 W std::moneypunct<char, true>::do_grouping() const
00000000005b0c80 00000000000000d8 W std::moneypunct<char, true>::do_curr_symbol() const
00000000005b0d60 00000000000000d8 W std::moneypunct<char, true>::do_positive_sign() const
00000000005b0e40 00000000000000d8 W std::moneypunct<char, true>::do_negative_sign() const
00000000005b0f20 00000000000000d8 W std::numpunct<char>::do_grouping() const
00000000005b1000 00000000000000d8 W std::numpunct<char>::do_truename() const
00000000005b10e0 00000000000000d8 W std::numpunct<char>::do_falsename() const
00000000005b11c0 000000000000018c W std::collate<char>::do_compare(char const*, char const*, char const*, char const*) const
00000000005b1360 00000000000001fc W std::collate<char>::do_transform(char const*, char const*) const
00000000005b1560 000000000000007c W std::ctype<char>::narrow(char, char) const
00000000005b15e0 0000000000000558 W std::__moneypunct_cache<char, false>::_M_cache(std::locale const&)
00000000005b1b40 0000000000000558 W std::__moneypunct_cache<char, true>::_M_cache(std::locale const&)
00000000005b20a0 0000000000000494 W std::__numpunct_cache<char>::_M_cache(std::locale const&)
00000000005b2540 00000000000000e4 t std::__use_cache<std::__numpunct_cache<char> >::operator()(std::locale const&) const [clone .isra.0]
00000000005b2640 0000000000000068 W std::__timepunct<char>::__timepunct(std::__timepunct_cache<char>*, unsigned long)
00000000005b2640 0000000000000068 W std::__timepunct<char>::__timepunct(std::__timepunct_cache<char>*, unsigned long)
00000000005b26c0 00000000000002c4 W std::time_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_num(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, int&, int, int, unsigned long, std::ios_base&, std::_Ios_Iostate&) const
00000000005b29a0 0000000000000058 W std::messages<char>::messages(unsigned long)
00000000005b29a0 0000000000000058 W std::messages<char>::messages(unsigned long)
00000000005b2a00 000000000000014c W char* std::__add_grouping<char>(char*, char, char const*, unsigned long, char const*, char const*)
00000000005b2b60 00000000000000bc W std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::_M_group_float(char const*, unsigned long, char, char const*, char*, char*, int&) const
00000000005b2c20 0000000000000050 W std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::_M_group_int(char const*, unsigned long, char, std::ios_base&, char*, char*, int&) const
00000000005b2c80 000000000000056c W std::ostreambuf_iterator<char, std::char_traits<char> > std::money_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::_M_insert<true>(std::ostreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, char, std::string const&) const
00000000005b3200 000000000000056c W std::ostreambuf_iterator<char, std::char_traits<char> > std::money_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::_M_insert<false>(std::ostreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, char, std::string const&) const
00000000005b3780 0000000000000294 W std::money_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::do_put(std::ostreambuf_iterator<char, std::char_traits<char> >, bool, std::ios_base&, char, long double) const
00000000005b3a20 0000000000000020 W std::money_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::do_put(std::ostreambuf_iterator<char, std::char_traits<char> >, bool, std::ios_base&, char, std::string const&) const
00000000005b3a40 00000000000002ec W std::__pad<char, std::char_traits<char> >::_S_pad(std::ios_base&, char, char*, char const*, long, long)
00000000005b3d40 000000000000003c W std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::_M_pad(char, long, std::ios_base&, char*, char const*, int&) const
00000000005b3d80 0000000000000408 W std::ostreambuf_iterator<char, std::char_traits<char> > std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::_M_insert_float<double>(std::ostreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, char, char, double) const
00000000005b41a0 0000000000000008 W std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::do_put(std::ostreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, char, double) const
00000000005b41c0 0000000000000410 W std::ostreambuf_iterator<char, std::char_traits<char> > std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::_M_insert_float<long double>(std::ostreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, char, char, long double) const
00000000005b45e0 0000000000000008 W std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::do_put(std::ostreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, char, long double) const
00000000005b4600 00000000000000a4 W int std::__int_to_char<char, unsigned long>(char*, unsigned long, char const*, std::_Ios_Fmtflags, bool)
00000000005b46c0 0000000000000218 W std::ostreambuf_iterator<char, std::char_traits<char> > std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::_M_insert_int<long>(std::ostreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, char, long) const
00000000005b48e0 0000000000000004 W std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::do_put(std::ostreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, char, long) const
00000000005b4900 000000000000019c W std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::do_put(std::ostreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, char, bool) const
00000000005b4aa0 00000000000001cc W std::ostreambuf_iterator<char, std::char_traits<char> > std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::_M_insert_int<unsigned long>(std::ostreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, char, unsigned long) const
00000000005b4c80 0000000000000004 W std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::do_put(std::ostreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, char, unsigned long) const
00000000005b4ca0 0000000000000050 W std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::do_put(std::ostreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, char, void const*) const
00000000005b4d00 00000000000000a4 W int std::__int_to_char<char, unsigned long long>(char*, unsigned long long, char const*, std::_Ios_Fmtflags, bool)
00000000005b4dc0 0000000000000218 W std::ostreambuf_iterator<char, std::char_traits<char> > std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::_M_insert_int<long long>(std::ostreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, char, long long) const
00000000005b4fe0 0000000000000004 W std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::do_put(std::ostreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, char, long long) const
00000000005b5000 00000000000001cc W std::ostreambuf_iterator<char, std::char_traits<char> > std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::_M_insert_int<unsigned long long>(std::ostreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, char, unsigned long long) const
00000000005b51e0 0000000000000004 W std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::do_put(std::ostreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, char, unsigned long long) const
00000000005b5200 00000000000000e8 W std::istreambuf_iterator<char, std::char_traits<char> >::equal(std::istreambuf_iterator<char, std::char_traits<char> > const&) const
00000000005b5300 000000000000006c W std::istreambuf_iterator<char, std::char_traits<char> >::_M_get() const
00000000005b5380 0000000000000be4 W std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_float(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const
00000000005b5f80 00000000000001c8 W std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::do_get(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, float&) const
00000000005b6160 00000000000001c8 W std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::do_get(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, double&) const
00000000005b6340 00000000000001c8 W std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::do_get(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, long double&) const
00000000005b6520 000000000000092c W std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<long>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, long&) const
00000000005b6e60 0000000000000458 W std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::do_get(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, bool&) const
00000000005b72c0 0000000000000004 W std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::do_get(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, long&) const
00000000005b72e0 0000000000000a44 W std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<unsigned short>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, unsigned short&) const
00000000005b7d40 0000000000000004 W std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::do_get(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, unsigned short&) const
00000000005b7d60 0000000000000a10 W std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<unsigned int>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, unsigned int&) const
00000000005b8780 0000000000000004 W std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::do_get(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, unsigned int&) const
00000000005b87a0 0000000000000a54 W std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<unsigned long>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, unsigned long&) const
00000000005b9200 0000000000000004 W std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::do_get(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, unsigned long&) const
00000000005b9220 000000000000005c W std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::do_get(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, void*&) const
00000000005b9280 000000000000092c W std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<long long>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, long long&) const
00000000005b9bc0 0000000000000004 W std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::do_get(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, long long&) const
00000000005b9be0 000000000000099c W std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<unsigned long long>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, unsigned long long&) const
00000000005ba580 0000000000000004 W std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::do_get(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, unsigned long long&) const
00000000005ba5a0 00000000000002bc W std::time_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::do_get_year(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, tm*) const
00000000005ba860 00000000000009e4 W std::time_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_name(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, int&, char const**, unsigned long, std::ios_base&, std::_Ios_Iostate&) const
00000000005bb260 00000000000003d8 W std::time_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_wday_or_month(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, int&, char const**, unsigned long, std::ios_base&, std::_Ios_Iostate&) const
00000000005bb640 0000000000000208 W std::time_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::do_get_weekday(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, tm*) const
00000000005bb860 0000000000000210 W std::time_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::do_get_monthname(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, tm*) const
00000000005bba80 00000000000010d8 W std::time_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_via_format(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, tm*, char const*, std::__time_get_state&) const
00000000005bba80 00000000000010d8 t std::time_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_via_format(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, tm*, char const*, std::__time_get_state&) const [clone .localalias]
00000000005bcb60 000000000000019c W std::time_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::do_get_time(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, tm*) const
00000000005bcd00 000000000000019c W std::time_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::do_get_date(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, tm*) const
00000000005bcea0 0000000000000ef0 W std::istreambuf_iterator<char, std::char_traits<char> > std::money_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract<true>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const
00000000005bdda0 0000000000000ef0 W std::istreambuf_iterator<char, std::char_traits<char> > std::money_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract<false>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const
00000000005beca0 00000000000000f0 W std::money_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::do_get(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, bool, std::ios_base&, std::_Ios_Iostate&, long double&) const
00000000005beda0 0000000000000200 W std::money_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::do_get(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, bool, std::ios_base&, std::_Ios_Iostate&, std::string&) const
00000000005befa0 0000000000000af8 T std::locale::_Impl::_Impl(unsigned long)
00000000005befa0 0000000000000af8 T std::locale::_Impl::_Impl(unsigned long)
00000000005bfaa0 0000000000000064 T std::locale::_S_initialize_once()
00000000005bfb20 000000000000003c T std::locale::_S_initialize()
00000000005bfb60 0000000000000100 T std::locale::locale()
00000000005bfb60 0000000000000100 T std::locale::locale()
00000000005bfc60 0000000000000028 W std::basic_ostream<char, std::char_traits<char> >::~basic_ostream()
00000000005bfc88 0000000000000034 W virtual thunk to std::basic_ostream<char, std::char_traits<char> >::~basic_ostream()
00000000005bfcc0 0000000000000044 W std::basic_ostream<char, std::char_traits<char> >::~basic_ostream()
00000000005bfd04 0000000000000050 W virtual thunk to std::basic_ostream<char, std::char_traits<char> >::~basic_ostream()
00000000005bfd60 0000000000000028 W std::basic_ostream<wchar_t, std::char_traits<wchar_t> >::~basic_ostream()
00000000005bfd88 0000000000000034 W virtual thunk to std::basic_ostream<wchar_t, std::char_traits<wchar_t> >::~basic_ostream()
00000000005bfdc0 0000000000000044 W std::basic_ostream<wchar_t, std::char_traits<wchar_t> >::~basic_ostream()
00000000005bfe04 0000000000000050 W virtual thunk to std::basic_ostream<wchar_t, std::char_traits<wchar_t> >::~basic_ostream()
00000000005bfe60 0000000000000078 W std::ostream::sentry::~sentry()
00000000005bfe60 0000000000000078 W std::ostream::sentry::~sentry()
00000000005bfee0 000000000000015c W std::ostream::flush()
00000000005c0040 0000000000000088 W std::ostream::sentry::sentry(std::ostream&)
00000000005c0040 0000000000000088 W std::ostream::sentry::sentry(std::ostream&)
00000000005c00e0 0000000000000174 W std::ostream::put(char)
00000000005c0260 0000000000000414 W std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)
00000000005c0680 0000000000000068 W std::basic_ostream<char, std::char_traits<char> >& std::operator<< <std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*)
00000000005c0700 0000000000000078 W std::basic_ostream<wchar_t, std::char_traits<wchar_t> >::sentry::~sentry()
00000000005c0700 0000000000000078 W std::basic_ostream<wchar_t, std::char_traits<wchar_t> >::sentry::~sentry()
00000000005c0780 000000000000015c W std::basic_ostream<wchar_t, std::char_traits<wchar_t> >::flush()
00000000005c08e0 0000000000000088 W std::basic_ostream<wchar_t, std::char_traits<wchar_t> >::sentry::sentry(std::basic_ostream<wchar_t, std::char_traits<wchar_t> >&)
00000000005c08e0 0000000000000088 W std::basic_ostream<wchar_t, std::char_traits<wchar_t> >::sentry::sentry(std::basic_ostream<wchar_t, std::char_traits<wchar_t> >&)
00000000005c0980 0000000000000004 W std::basic_streambuf<char, std::char_traits<char> >::imbue(std::locale const&)
00000000005c09a0 0000000000000004 W std::basic_streambuf<char, std::char_traits<char> >::setbuf(char*, long)
00000000005c09c0 000000000000000c W std::basic_streambuf<char, std::char_traits<char> >::seekoff(long, std::_Ios_Seekdir, std::_Ios_Openmode)
00000000005c09e0 000000000000000c W std::basic_streambuf<char, std::char_traits<char> >::seekpos(std::fpos<_mbstate_t>, std::_Ios_Openmode)
00000000005c0a00 0000000000000008 W std::basic_streambuf<char, std::char_traits<char> >::sync()
00000000005c0a20 0000000000000008 W std::basic_streambuf<char, std::char_traits<char> >::showmanyc()
00000000005c0a40 0000000000000008 W std::basic_streambuf<char, std::char_traits<char> >::underflow()
00000000005c0a60 0000000000000008 W std::basic_streambuf<char, std::char_traits<char> >::pbackfail(int)
00000000005c0a80 0000000000000008 W std::basic_streambuf<char, std::char_traits<char> >::overflow(int)
00000000005c0aa0 0000000000000004 W std::basic_streambuf<wchar_t, std::char_traits<wchar_t> >::imbue(std::locale const&)
00000000005c0ac0 0000000000000004 W std::basic_streambuf<wchar_t, std::char_traits<wchar_t> >::setbuf(wchar_t*, long)
00000000005c0ae0 000000000000000c W std::basic_streambuf<wchar_t, std::char_traits<wchar_t> >::seekoff(long, std::_Ios_Seekdir, std::_Ios_Openmode)
00000000005c0b00 000000000000000c W std::basic_streambuf<wchar_t, std::char_traits<wchar_t> >::seekpos(std::fpos<_mbstate_t>, std::_Ios_Openmode)
00000000005c0b20 0000000000000008 W std::basic_streambuf<wchar_t, std::char_traits<wchar_t> >::sync()
00000000005c0b40 0000000000000008 W std::basic_streambuf<wchar_t, std::char_traits<wchar_t> >::showmanyc()
00000000005c0b60 0000000000000008 W std::basic_streambuf<wchar_t, std::char_traits<wchar_t> >::underflow()
00000000005c0b80 0000000000000008 W std::basic_streambuf<wchar_t, std::char_traits<wchar_t> >::pbackfail(unsigned int)
00000000005c0ba0 0000000000000008 W std::basic_streambuf<wchar_t, std::char_traits<wchar_t> >::overflow(unsigned int)
00000000005c0bc0 0000000000000014 W std::basic_streambuf<char, std::char_traits<char> >::~basic_streambuf()
00000000005c0bc0 0000000000000014 W std::basic_streambuf<char, std::char_traits<char> >::~basic_streambuf()
00000000005c0be0 0000000000000014 W std::basic_streambuf<wchar_t, std::char_traits<wchar_t> >::~basic_streambuf()
00000000005c0be0 0000000000000014 W std::basic_streambuf<wchar_t, std::char_traits<wchar_t> >::~basic_streambuf()
00000000005c0c00 0000000000000034 W std::basic_streambuf<char, std::char_traits<char> >::~basic_streambuf()
00000000005c0c40 0000000000000034 W std::basic_streambuf<wchar_t, std::char_traits<wchar_t> >::~basic_streambuf()
00000000005c0c80 00000000000000c8 W std::basic_streambuf<wchar_t, std::char_traits<wchar_t> >::xsputn(wchar_t const*, long)
00000000005c0d60 00000000000000c8 W std::basic_streambuf<char, std::char_traits<char> >::xsputn(char const*, long)
00000000005c0e40 0000000000000064 W std::basic_streambuf<wchar_t, std::char_traits<wchar_t> >::uflow()
00000000005c0ec0 0000000000000064 W std::basic_streambuf<char, std::char_traits<char> >::uflow()
00000000005c0f40 000000000000010c W std::basic_streambuf<char, std::char_traits<char> >::xsgetn(char*, long)
00000000005c1060 0000000000000114 W std::basic_streambuf<wchar_t, std::char_traits<wchar_t> >::xsgetn(wchar_t*, long)
00000000005c1180 000000000000005c W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned long&, unsigned long)
00000000005c11e0 0000000000000018 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_dispose()
00000000005c1200 0000000000000098 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct(unsigned long, char)
00000000005c12a0 0000000000000124 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_mutate(unsigned long, unsigned long, char const*, unsigned long)
00000000005c13e0 000000000000008c W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_erase(unsigned long, unsigned long)
00000000005c1480 00000000000000b0 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::reserve(unsigned long)
00000000005c1540 0000000000000138 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_replace_aux(unsigned long, unsigned long, unsigned long, char)
00000000005c1680 0000000000000038 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::resize(unsigned long, char)
00000000005c16c0 000000000000019c W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_replace(unsigned long, unsigned long, char const*, unsigned long)
00000000005c1860 00000000000000bc W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_append(char const*, unsigned long)
00000000005c1920 0000000000000090 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::copy(char*, unsigned long, unsigned long) const
00000000005c19c0 000000000000018c W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::swap(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
00000000005c1b60 0000000000000044 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::find_first_not_of(char, unsigned long) const
00000000005c1bc0 0000000000000010 T std::_V2::error_category::default_error_condition(int) const
00000000005c1be0 0000000000000050 T std::_V2::error_category::equivalent(int, std::error_condition const&) const
00000000005c1c40 0000000000000024 T std::_V2::error_category::equivalent(std::error_code const&, int) const
00000000005c1c80 0000000000000014 T std::system_error::~system_error()
00000000005c1c80 0000000000000014 T std::system_error::~system_error()
00000000005c1ca0 0000000000000024 T std::system_error::~system_error()
00000000005c1ce0 0000000000000068 T std::_V2::error_category::_M_message[abi:cxx11](int) const
00000000005c1d60 0000000000000004 T std::_V2::error_category::~error_category()
00000000005c1d60 0000000000000004 T std::_V2::error_category::~error_category()
00000000005c1d80 000000000000000c W std::moneypunct<wchar_t, false>::do_decimal_point() const
00000000005c1da0 000000000000000c W std::moneypunct<wchar_t, false>::do_thousands_sep() const
00000000005c1dc0 000000000000000c W std::moneypunct<wchar_t, false>::do_frac_digits() const
00000000005c1de0 000000000000000c W std::moneypunct<wchar_t, false>::do_pos_format() const
00000000005c1e00 000000000000000c W std::moneypunct<wchar_t, false>::do_neg_format() const
00000000005c1e20 000000000000000c W std::moneypunct<wchar_t, true>::do_decimal_point() const
00000000005c1e40 000000000000000c W std::moneypunct<wchar_t, true>::do_thousands_sep() const
00000000005c1e60 000000000000000c W std::moneypunct<wchar_t, true>::do_frac_digits() const
00000000005c1e80 000000000000000c W std::moneypunct<wchar_t, true>::do_pos_format() const
00000000005c1ea0 000000000000000c W std::moneypunct<wchar_t, true>::do_neg_format() const
00000000005c1ec0 000000000000000c W std::numpunct<wchar_t>::do_decimal_point() const
00000000005c1ee0 000000000000000c W std::numpunct<wchar_t>::do_thousands_sep() const
00000000005c1f00 0000000000000008 W std::time_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::do_date_order() const
00000000005c1f20 0000000000000008 W std::messages<wchar_t>::do_open(std::string const&, std::locale const&) const
00000000005c1f40 0000000000000004 W std::messages<wchar_t>::do_close(int) const
00000000005c1f60 0000000000000024 W std::collate<wchar_t>::do_hash(wchar_t const*, wchar_t const*) const
00000000005c1fa0 0000000000000014 W std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::~num_get()
00000000005c1fa0 0000000000000014 W std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::~num_get()
00000000005c1fc0 0000000000000014 W std::num_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::~num_put()
00000000005c1fc0 0000000000000014 W std::num_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::~num_put()
00000000005c1fe0 0000000000000014 W std::money_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::~money_get()
00000000005c1fe0 0000000000000014 W std::money_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::~money_get()
00000000005c2000 0000000000000014 W std::money_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::~money_put()
00000000005c2000 0000000000000014 W std::money_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::~money_put()
00000000005c2020 0000000000000014 W std::__timepunct_cache<wchar_t>::~__timepunct_cache()
00000000005c2020 0000000000000014 W std::__timepunct_cache<wchar_t>::~__timepunct_cache()
00000000005c2040 0000000000000014 W std::time_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::~time_put()
00000000005c2040 0000000000000014 W std::time_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::~time_put()
00000000005c2060 0000000000000014 W std::time_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::~time_get()
00000000005c2060 0000000000000014 W std::time_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::~time_get()
00000000005c2080 0000000000000034 W std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::~num_get()
00000000005c20c0 0000000000000034 W std::num_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::~num_put()
00000000005c2100 0000000000000034 W std::money_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::~money_get()
00000000005c2140 0000000000000034 W std::money_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::~money_put()
00000000005c2180 0000000000000024 W std::__timepunct_cache<wchar_t>::~__timepunct_cache()
00000000005c21c0 0000000000000034 W std::time_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::~time_put()
00000000005c2200 0000000000000034 W std::time_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::~time_get()
00000000005c2240 0000000000000068 W std::__moneypunct_cache<wchar_t, false>::~__moneypunct_cache()
00000000005c2240 0000000000000068 W std::__moneypunct_cache<wchar_t, false>::~__moneypunct_cache()
00000000005c22c0 0000000000000024 W std::__moneypunct_cache<wchar_t, false>::~__moneypunct_cache()
00000000005c2300 0000000000000068 W std::__moneypunct_cache<wchar_t, true>::~__moneypunct_cache()
00000000005c2300 0000000000000068 W std::__moneypunct_cache<wchar_t, true>::~__moneypunct_cache()
00000000005c2380 0000000000000024 W std::__moneypunct_cache<wchar_t, true>::~__moneypunct_cache()
00000000005c23c0 000000000000005c W std::__numpunct_cache<wchar_t>::~__numpunct_cache()
00000000005c23c0 000000000000005c W std::__numpunct_cache<wchar_t>::~__numpunct_cache()
00000000005c2420 0000000000000024 W std::__numpunct_cache<wchar_t>::~__numpunct_cache()
00000000005c2460 0000000000000034 W std::messages<wchar_t>::~messages()
00000000005c2460 0000000000000034 W std::messages<wchar_t>::~messages()
00000000005c24a0 0000000000000024 W std::messages<wchar_t>::~messages()
00000000005c24e0 0000000000000034 W std::collate<wchar_t>::~collate()
00000000005c24e0 0000000000000034 W std::collate<wchar_t>::~collate()
00000000005c2520 0000000000000068 W std::__timepunct<wchar_t>::~__timepunct()
00000000005c2520 0000000000000068 W std::__timepunct<wchar_t>::~__timepunct()
00000000005c25a0 0000000000000024 W std::__timepunct<wchar_t>::~__timepunct()
00000000005c25e0 0000000000000028 t std::basic_streambuf<wchar_t, std::char_traits<wchar_t> >::sbumpc() [clone .isra.0]
00000000005c2620 00000000000000b8 t char* std::string::_S_construct<char const*>(char const*, char const*, std::allocator<char> const&, std::forward_iterator_tag) [clone .isra.0]
00000000005c26e0 00000000000000d4 t wchar_t* std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_S_construct<wchar_t const*>(wchar_t const*, wchar_t const*, std::allocator<wchar_t> const&, std::forward_iterator_tag) [clone .isra.0]
00000000005c27c0 000000000000003c W std::collate<wchar_t>::~collate()
00000000005c2800 00000000000000d8 W std::moneypunct<wchar_t, false>::do_grouping() const
00000000005c28e0 00000000000000d8 W std::moneypunct<wchar_t, true>::do_grouping() const
00000000005c29c0 00000000000000d8 W std::numpunct<wchar_t>::do_grouping() const
00000000005c2aa0 000000000000018c W std::collate<wchar_t>::do_compare(wchar_t const*, wchar_t const*, wchar_t const*, wchar_t const*) const
00000000005c2c40 0000000000000140 W std::time_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::do_put(std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, wchar_t, tm const*, char, char) const
00000000005c2d80 00000000000000ec W std::moneypunct<wchar_t, false>::do_curr_symbol() const
00000000005c2e80 00000000000000ec W std::moneypunct<wchar_t, false>::do_positive_sign() const
00000000005c2f80 00000000000000ec W std::moneypunct<wchar_t, false>::do_negative_sign() const
00000000005c3080 00000000000000ec W std::moneypunct<wchar_t, true>::do_curr_symbol() const
00000000005c3180 00000000000000ec W std::moneypunct<wchar_t, true>::do_positive_sign() const
00000000005c3280 00000000000000ec W std::moneypunct<wchar_t, true>::do_negative_sign() const
00000000005c3380 00000000000000ec W std::numpunct<wchar_t>::do_truename() const
00000000005c3480 00000000000000ec W std::numpunct<wchar_t>::do_falsename() const
00000000005c3580 0000000000000214 W std::collate<wchar_t>::do_transform(wchar_t const*, wchar_t const*) const
00000000005c37a0 000000000000058c W std::__moneypunct_cache<wchar_t, false>::_M_cache(std::locale const&)
00000000005c3d40 000000000000058c W std::__moneypunct_cache<wchar_t, true>::_M_cache(std::locale const&)
00000000005c42e0 0000000000000468 W std::__numpunct_cache<wchar_t>::_M_cache(std::locale const&)
00000000005c4760 00000000000000e4 t std::__use_cache<std::__numpunct_cache<wchar_t> >::operator()(std::locale const&) const [clone .isra.0]
00000000005c4860 0000000000000068 W std::__timepunct<wchar_t>::__timepunct(std::__timepunct_cache<wchar_t>*, unsigned long)
00000000005c4860 0000000000000068 W std::__timepunct<wchar_t>::__timepunct(std::__timepunct_cache<wchar_t>*, unsigned long)
00000000005c48e0 0000000000000288 W std::time_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_num(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, int&, int, int, unsigned long, std::ios_base&, std::_Ios_Iostate&) const
00000000005c4b80 0000000000000058 W std::messages<wchar_t>::messages(unsigned long)
00000000005c4b80 0000000000000058 W std::messages<wchar_t>::messages(unsigned long)
00000000005c4be0 0000000000000150 W wchar_t* std::__add_grouping<wchar_t>(wchar_t*, wchar_t, char const*, unsigned long, wchar_t const*, wchar_t const*)
00000000005c4d40 00000000000000c8 W std::num_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_group_float(char const*, unsigned long, wchar_t, wchar_t const*, wchar_t*, wchar_t*, int&) const
00000000005c4e20 0000000000000054 W std::num_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_group_int(char const*, unsigned long, wchar_t, std::ios_base&, wchar_t*, wchar_t*, int&) const
00000000005c4e80 00000000000005d8 W std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::money_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_insert<true>(std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, wchar_t, std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> > const&) const
00000000005c5460 00000000000005d8 W std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::money_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_insert<false>(std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, wchar_t, std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> > const&) const
00000000005c5a40 000000000000021c W std::money_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::do_put(std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, bool, std::ios_base&, wchar_t, long double) const
00000000005c5c60 0000000000000020 W std::money_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::do_put(std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, bool, std::ios_base&, wchar_t, std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> > const&) const
00000000005c5c80 0000000000000200 W std::__pad<wchar_t, std::char_traits<wchar_t> >::_S_pad(std::ios_base&, wchar_t, wchar_t*, wchar_t const*, long, long)
00000000005c5e80 000000000000003c W std::num_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_pad(wchar_t, long, std::ios_base&, wchar_t*, wchar_t const*, int&) const
00000000005c5ec0 0000000000000368 W std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_insert_float<double>(std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, wchar_t, char, double) const
00000000005c6240 0000000000000008 W std::num_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::do_put(std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, wchar_t, double) const
00000000005c6260 0000000000000360 W std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_insert_float<long double>(std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, wchar_t, char, long double) const
00000000005c65c0 0000000000000008 W std::num_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::do_put(std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, wchar_t, long double) const
00000000005c65e0 00000000000000a8 W int std::__int_to_char<wchar_t, unsigned long>(wchar_t*, unsigned long, wchar_t const*, std::_Ios_Fmtflags, bool)
00000000005c66a0 0000000000000218 W std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_insert_int<long>(std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, wchar_t, long) const
00000000005c68c0 0000000000000004 W std::num_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::do_put(std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, wchar_t, long) const
00000000005c68e0 000000000000019c W std::num_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::do_put(std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, wchar_t, bool) const
00000000005c6a80 00000000000001cc W std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_insert_int<unsigned long>(std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, wchar_t, unsigned long) const
00000000005c6c60 0000000000000004 W std::num_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::do_put(std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, wchar_t, unsigned long) const
00000000005c6c80 0000000000000050 W std::num_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::do_put(std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, wchar_t, void const*) const
00000000005c6ce0 00000000000000a8 W int std::__int_to_char<wchar_t, unsigned long long>(wchar_t*, unsigned long long, wchar_t const*, std::_Ios_Fmtflags, bool)
00000000005c6da0 0000000000000218 W std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_insert_int<long long>(std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, wchar_t, long long) const
00000000005c6fc0 0000000000000004 W std::num_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::do_put(std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, wchar_t, long long) const
00000000005c6fe0 00000000000001cc W std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_insert_int<unsigned long long>(std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, wchar_t, unsigned long long) const
00000000005c71c0 0000000000000004 W std::num_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::do_put(std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, wchar_t, unsigned long long) const
00000000005c71e0 0000000000000110 W std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >::equal(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > const&) const
00000000005c7300 0000000000000b84 W std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_float(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const
00000000005c7ea0 00000000000001e0 W std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::do_get(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, float&) const
00000000005c8080 00000000000001e0 W std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::do_get(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, double&) const
00000000005c8260 00000000000001e0 W std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::do_get(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, long double&) const
00000000005c8440 0000000000000958 W std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<long>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, long&) const
00000000005c8da0 0000000000000440 W std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::do_get(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, bool&) const
00000000005c91e0 0000000000000004 W std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::do_get(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, long&) const
00000000005c9200 0000000000000ab0 W std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<unsigned short>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, unsigned short&) const
00000000005c9cc0 0000000000000004 W std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::do_get(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, unsigned short&) const
00000000005c9ce0 0000000000000954 W std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<unsigned int>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, unsigned int&) const
00000000005ca640 0000000000000004 W std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::do_get(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, unsigned int&) const
00000000005ca660 00000000000009a4 W std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<unsigned long>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, unsigned long&) const
00000000005cb020 0000000000000004 W std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::do_get(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, unsigned long&) const
00000000005cb040 000000000000005c W std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::do_get(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, void*&) const
00000000005cb0a0 0000000000000958 W std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<long long>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, long long&) const
00000000005cba00 0000000000000004 W std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::do_get(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, long long&) const
00000000005cba20 00000000000009a4 W std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<unsigned long long>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, unsigned long long&) const
00000000005cc3e0 0000000000000004 W std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::do_get(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, unsigned long long&) const
00000000005cc400 00000000000002ec W std::time_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::do_get_year(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, tm*) const
00000000005cc700 00000000000009e8 W std::time_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_name(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, int&, wchar_t const**, unsigned long, std::ios_base&, std::_Ios_Iostate&) const
00000000005cd100 00000000000004b0 W std::time_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_wday_or_month(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, int&, wchar_t const**, unsigned long, std::ios_base&, std::_Ios_Iostate&) const
00000000005cd5c0 0000000000000220 W std::time_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::do_get_weekday(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, tm*) const
00000000005cd7e0 0000000000000228 W std::time_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::do_get_monthname(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, tm*) const
00000000005cda20 0000000000001370 W std::time_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_via_format(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, tm*, wchar_t const*, std::__time_get_state&) const
00000000005cda20 0000000000001370 t std::time_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_via_format(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, tm*, wchar_t const*, std::__time_get_state&) const [clone .localalias]
00000000005ceda0 00000000000001b8 W std::time_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::do_get_time(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, tm*) const
00000000005cef60 00000000000001b8 W std::time_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::do_get_date(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, tm*) const
00000000005cf120 0000000000001030 W std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::money_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract<true>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const
00000000005d0160 0000000000001030 W std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::money_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract<false>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const
00000000005d11a0 00000000000000f0 W std::money_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::do_get(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, bool, std::ios_base&, std::_Ios_Iostate&, long double&) const
00000000005d12a0 0000000000000198 W std::money_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::do_get(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, bool, std::ios_base&, std::_Ios_Iostate&, std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >&) const
00000000005d1440 0000000000000068 W std::__cxx11::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_M_create(unsigned long&, unsigned long)
00000000005d14c0 0000000000000018 W std::__cxx11::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_M_dispose()
00000000005d14e0 0000000000000090 W std::__cxx11::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_M_construct(unsigned long, wchar_t)
00000000005d1580 0000000000000134 W std::__cxx11::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_M_mutate(unsigned long, unsigned long, wchar_t const*, unsigned long)
00000000005d16c0 00000000000000b8 W std::__cxx11::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::reserve(unsigned long)
00000000005d1780 0000000000000144 W std::__cxx11::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_M_replace_aux(unsigned long, unsigned long, unsigned long, wchar_t)
00000000005d18e0 0000000000000038 W std::__cxx11::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::resize(unsigned long, wchar_t)
00000000005d1920 00000000000001a0 W std::__cxx11::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_M_replace(unsigned long, unsigned long, wchar_t const*, unsigned long)
00000000005d1ac0 00000000000000c4 W std::__cxx11::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_M_append(wchar_t const*, unsigned long)
00000000005d1ba0 0000000000000094 W std::__cxx11::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::copy(wchar_t*, unsigned long, unsigned long) const
00000000005d1c40 000000000000000c T std::bad_alloc::what() const
00000000005d1c60 0000000000000014 T std::bad_alloc::~bad_alloc()
00000000005d1c60 0000000000000014 T std::bad_alloc::~bad_alloc()
00000000005d1c80 0000000000000028 T std::bad_alloc::~bad_alloc()
00000000005d1cc0 000000000000000c T std::bad_array_new_length::what() const
00000000005d1ce0 0000000000000014 T std::bad_array_new_length::~bad_array_new_length()
00000000005d1ce0 0000000000000014 T std::bad_array_new_length::~bad_array_new_length()
00000000005d1d00 0000000000000028 T std::bad_array_new_length::~bad_array_new_length()
00000000005d1d40 000000000000000c T std::bad_cast::what() const
00000000005d1d60 0000000000000014 T std::bad_cast::~bad_cast()
00000000005d1d60 0000000000000014 T std::bad_cast::~bad_cast()
00000000005d1d80 0000000000000028 T std::bad_cast::~bad_cast()
00000000005d1dc0 0000000000000068 T __cxxabiv1::__class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void**) const
00000000005d1e40 0000000000000010 T __cxxabiv1::__class_type_info::__do_find_public_src(long, void const*, __cxxabiv1::__class_type_info const*, void const*) const
00000000005d1e60 0000000000000014 T __cxxabiv1::__class_type_info::~__class_type_info()
00000000005d1e60 0000000000000014 T __cxxabiv1::__class_type_info::~__class_type_info()
00000000005d1e80 0000000000000028 T __cxxabiv1::__class_type_info::~__class_type_info()
00000000005d1ec0 0000000000000078 T __cxxabiv1::__class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const
00000000005d1f40 00000000000000b8 T __cxxabiv1::__class_type_info::__do_catch(std::type_info const*, void**, unsigned int) const
00000000005d2000 00000000000000ec T __cxxabiv1::__class_type_info::__do_dyncast(long, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const
00000000005d2100 0000000000000004 T operator delete(void*)
00000000005d2120 00000000000001a4 T __dynamic_cast
00000000005d22e0 0000000000000110 t (anonymous namespace)::pool::free(void*) [clone .constprop.0]
00000000005d2400 00000000000000cc t (anonymous namespace)::pool::allocate(unsigned long) [clone .constprop.0]
00000000005d24e0 0000000000000058 T __cxa_allocate_exception
00000000005d2540 000000000000002c T __cxa_free_exception
00000000005d2580 000000000000009c T __cxa_begin_catch
00000000005d2620 0000000000000098 T __cxa_end_catch
00000000005d26c0 0000000000000020 T std::uncaught_exception()
00000000005d26e0 0000000000000004 T std::exception::~exception()
00000000005d26e0 0000000000000004 T std::exception::~exception()
00000000005d2700 0000000000000014 T std::bad_exception::~bad_exception()
00000000005d2700 0000000000000014 T std::bad_exception::~bad_exception()
00000000005d2720 000000000000000c T std::bad_exception::what() const
00000000005d2740 0000000000000028 T std::bad_exception::~bad_exception()
00000000005d2780 0000000000000044 t eh_globals_dtor(void*)
00000000005d27e0 0000000000000038 T __cxa_get_globals_fast
00000000005d2820 0000000000000078 T __cxa_get_globals
00000000005d28a0 000000000000007c t get_adjusted_ptr(std::type_info const*, std::type_info const*, void**)
00000000005d2920 0000000000000138 t read_encoded_value_with_base(unsigned char, unsigned long, unsigned char const*, unsigned long*)
00000000005d2a60 000000000000005c t base_of_encoded_value(unsigned char, _Unwind_Context*)
00000000005d2ac0 0000000000000110 t check_exception_spec(lsda_header_info*, std::type_info const*, void*, long)
00000000005d2be0 00000000000000e8 t parse_lsda_header(_Unwind_Context*, unsigned char const*, lsda_header_info*)
00000000005d2ce0 00000000000005f0 T __gxx_personality_v0
00000000005d32e0 00000000000000ec T __cxa_call_unexpected
00000000005d33e0 0000000000000018 T __cxxabiv1::__terminate(void (*)())
00000000005d3400 0000000000000010 T std::get_terminate()
00000000005d3420 0000000000000010 T __cxxabiv1::__unexpected(void (*)())
00000000005d3440 0000000000000010 T std::get_unexpected()
00000000005d3460 0000000000000064 t __gxx_exception_cleanup(_Unwind_Reason_Code, _Unwind_Exception*)
00000000005d34e0 0000000000000058 T __cxa_init_primary_exception
00000000005d3540 0000000000000060 T __cxa_throw
00000000005d35a0 0000000000000070 T __cxa_rethrow
00000000005d3620 0000000000000010 T std::get_new_handler()
00000000005d3640 0000000000000024 T operator new[](unsigned long, std::nothrow_t const&)
00000000005d3680 0000000000000014 T __cxxabiv1::__vmi_class_type_info::~__vmi_class_type_info()
00000000005d3680 0000000000000014 T __cxxabiv1::__vmi_class_type_info::~__vmi_class_type_info()
00000000005d36a0 0000000000000028 T __cxxabiv1::__vmi_class_type_info::~__vmi_class_type_info()
00000000005d36e0 0000000000000114 T __cxxabiv1::__vmi_class_type_info::__do_find_public_src(long, void const*, __cxxabiv1::__class_type_info const*, void const*) const
00000000005d3800 0000000000000618 T __cxxabiv1::__vmi_class_type_info::__do_dyncast(long, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const
00000000005d3e20 0000000000000224 T __cxxabiv1::__vmi_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const
00000000005d4060 0000000000000070 t std::(anonymous namespace)::__set_C_locale()
00000000005d40e0 00000000000000d0 T void std::__convert_to_v<float>(char const*, float&, std::_Ios_Iostate&, int* const&)
00000000005d41c0 00000000000000d8 T void std::__convert_to_v<double>(char const*, double&, std::_Ios_Iostate&, int* const&)
00000000005d42a0 0000000000000108 T void std::__convert_to_v<long double>(char const*, long double&, std::_Ios_Iostate&, int* const&)
00000000005d43c0 0000000000000030 T std::locale::facet::_S_create_c_locale(int*&, char const*, int*)
00000000005d4400 0000000000000008 T std::locale::facet::_S_destroy_c_locale(int*&)
00000000005d4420 0000000000000010 T std::codecvt<char, char, _mbstate_t>::do_in(_mbstate_t&, char const*, char const*, char const*&, char*, char*, char*&) const
00000000005d4420 0000000000000010 T std::codecvt<char, char, _mbstate_t>::do_out(_mbstate_t&, char const*, char const*, char const*&, char*, char*, char*&) const
00000000005d4440 000000000000000c T std::codecvt<char, char, _mbstate_t>::do_unshift(_mbstate_t&, char*, char*, char*&) const
00000000005d4440 000000000000000c T std::codecvt<wchar_t, char, _mbstate_t>::do_unshift(_mbstate_t&, char*, char*, char*&) const
00000000005d4460 0000000000000008 T std::codecvt<char, char, _mbstate_t>::do_encoding() const
00000000005d4460 0000000000000008 T std::codecvt<char, char, _mbstate_t>::do_max_length() const
00000000005d4480 0000000000000008 T std::codecvt<char, char, _mbstate_t>::do_always_noconv() const
00000000005d44a0 0000000000000010 T std::codecvt<char, char, _mbstate_t>::do_length(_mbstate_t&, char const*, char const*, unsigned long) const
00000000005d44c0 0000000000000008 T std::codecvt<wchar_t, char, _mbstate_t>::do_always_noconv() const
00000000005d44e0 0000000000000068 T std::codecvt<char, char, _mbstate_t>::~codecvt()
00000000005d44e0 0000000000000068 T std::codecvt<char, char, _mbstate_t>::~codecvt()
00000000005d4560 000000000000003c T std::codecvt<char, char, _mbstate_t>::~codecvt()
00000000005d45a0 0000000000000068 T std::codecvt<wchar_t, char, _mbstate_t>::~codecvt()
00000000005d45a0 0000000000000068 T std::codecvt<wchar_t, char, _mbstate_t>::~codecvt()
00000000005d4620 000000000000003c T std::codecvt<wchar_t, char, _mbstate_t>::~codecvt()
00000000005d4660 0000000000000064 T std::codecvt<char, char, _mbstate_t>::codecvt(unsigned long)
00000000005d4660 0000000000000064 T std::codecvt<char, char, _mbstate_t>::codecvt(unsigned long)
00000000005d46e0 0000000000000064 T std::codecvt<wchar_t, char, _mbstate_t>::codecvt(unsigned long)
00000000005d46e0 0000000000000064 T std::codecvt<wchar_t, char, _mbstate_t>::codecvt(unsigned long)
00000000005d4760 00000000000001c0 T std::codecvt<wchar_t, char, _mbstate_t>::do_out(_mbstate_t&, wchar_t const*, wchar_t const*, wchar_t const*&, char*, char*, char*&) const
00000000005d4920 00000000000000f4 T std::codecvt<wchar_t, char, _mbstate_t>::do_in(_mbstate_t&, char const*, char const*, char const*&, wchar_t*, wchar_t*, wchar_t*&) const
00000000005d4a20 000000000000002c T std::codecvt<wchar_t, char, _mbstate_t>::do_encoding() const
00000000005d4a60 0000000000000024 T std::codecvt<wchar_t, char, _mbstate_t>::do_max_length() const
00000000005d4aa0 00000000000000a4 T std::codecvt<wchar_t, char, _mbstate_t>::do_length(_mbstate_t&, char const*, char const*, unsigned long) const
00000000005d4b60 0000000000000028 T std::__cxx11::collate<char>::_M_compare(char const*, char const*) const
00000000005d4ba0 0000000000000010 T std::__cxx11::collate<char>::_M_transform(char*, char const*, unsigned long) const
00000000005d4bc0 0000000000000028 T std::__cxx11::collate<wchar_t>::_M_compare(wchar_t const*, wchar_t const*) const
00000000005d4c00 0000000000000010 T std::__cxx11::collate<wchar_t>::_M_transform(wchar_t*, wchar_t const*, unsigned long) const
00000000005d4c20 0000000000000028 T std::collate<char>::_M_compare(char const*, char const*) const
00000000005d4c60 0000000000000010 T std::collate<char>::_M_transform(char*, char const*, unsigned long) const
00000000005d4c80 0000000000000028 T std::collate<wchar_t>::_M_compare(wchar_t const*, wchar_t const*) const
00000000005d4cc0 0000000000000010 T std::collate<wchar_t>::_M_transform(wchar_t*, wchar_t const*, unsigned long) const
00000000005d4ce0 0000000000000050 T std::ios_base::_M_init()
00000000005d4d40 00000000000000b0 t std::(anonymous namespace)::day_of_the_week(int, int, int)
00000000005d4e00 00000000000000dc T std::__num_base::_S_format_float(std::ios_base const&, char*, char)
00000000005d4ee0 00000000000000a0 T std::__verify_grouping_impl(char const*, unsigned long, char const*, unsigned long)
00000000005d4f80 000000000000002c T std::__verify_grouping(char const*, unsigned long, std::string const&)
00000000005d4fc0 00000000000003dc T std::__time_get_state::_M_finalize_state(tm*)
00000000005d53a0 00000000000000d0 T std::__cxx11::messages<char>::do_get(int, int, int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const
00000000005d5480 00000000000000c8 T std::__cxx11::messages<wchar_t>::do_get(int, int, int, std::__cxx11::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> > const&) const
00000000005d5560 0000000000000080 T std::messages<char>::do_get(int, int, int, std::string const&) const
00000000005d55e0 0000000000000080 T std::messages<wchar_t>::do_get(int, int, int, std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> > const&) const
00000000005d5660 0000000000000028 T std::__verify_grouping(char const*, unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
00000000005d56a0 00000000000000f0 T std::__cxx11::moneypunct<char, true>::_M_initialize_moneypunct(int*, char const*)
00000000005d57a0 00000000000000f0 T std::__cxx11::moneypunct<char, false>::_M_initialize_moneypunct(int*, char const*)
00000000005d58a0 000000000000005c T std::__cxx11::moneypunct<char, true>::~moneypunct()
00000000005d58a0 000000000000005c T std::__cxx11::moneypunct<char, true>::~moneypunct()
00000000005d5900 000000000000003c T std::__cxx11::moneypunct<char, true>::~moneypunct()
00000000005d5940 000000000000005c T std::__cxx11::moneypunct<char, false>::~moneypunct()
00000000005d5940 000000000000005c T std::__cxx11::moneypunct<char, false>::~moneypunct()
00000000005d59a0 000000000000003c T std::__cxx11::moneypunct<char, false>::~moneypunct()
00000000005d59e0 00000000000000ec T std::__cxx11::moneypunct<wchar_t, true>::_M_initialize_moneypunct(int*, char const*)
00000000005d5ae0 00000000000000ec T std::__cxx11::moneypunct<wchar_t, false>::_M_initialize_moneypunct(int*, char const*)
00000000005d5be0 000000000000005c T std::__cxx11::moneypunct<wchar_t, true>::~moneypunct()
00000000005d5be0 000000000000005c T std::__cxx11::moneypunct<wchar_t, true>::~moneypunct()
00000000005d5c40 000000000000003c T std::__cxx11::moneypunct<wchar_t, true>::~moneypunct()
00000000005d5c80 000000000000005c T std::__cxx11::moneypunct<wchar_t, false>::~moneypunct()
00000000005d5c80 000000000000005c T std::__cxx11::moneypunct<wchar_t, false>::~moneypunct()
00000000005d5ce0 000000000000003c T std::__cxx11::moneypunct<wchar_t, false>::~moneypunct()
00000000005d5d20 00000000000000f0 T std::moneypunct<char, true>::_M_initialize_moneypunct(int*, char const*)
00000000005d5e20 00000000000000f0 T std::moneypunct<char, false>::_M_initialize_moneypunct(int*, char const*)
00000000005d5f20 000000000000009c T std::moneypunct<char, true>::~moneypunct()
00000000005d5f20 000000000000009c T std::moneypunct<char, true>::~moneypunct()
00000000005d5fc0 000000000000003c T std::moneypunct<char, true>::~moneypunct()
00000000005d6000 000000000000009c T std::moneypunct<char, false>::~moneypunct()
00000000005d6000 000000000000009c T std::moneypunct<char, false>::~moneypunct()
00000000005d60a0 000000000000003c T std::moneypunct<char, false>::~moneypunct()
00000000005d60e0 00000000000000ec T std::moneypunct<wchar_t, true>::_M_initialize_moneypunct(int*, char const*)
00000000005d61e0 00000000000000ec T std::moneypunct<wchar_t, false>::_M_initialize_moneypunct(int*, char const*)
00000000005d62e0 000000000000009c T std::moneypunct<wchar_t, true>::~moneypunct()
00000000005d62e0 000000000000009c T std::moneypunct<wchar_t, true>::~moneypunct()
00000000005d6380 000000000000003c T std::moneypunct<wchar_t, true>::~moneypunct()
00000000005d63c0 000000000000009c T std::moneypunct<wchar_t, false>::~moneypunct()
00000000005d63c0 000000000000009c T std::moneypunct<wchar_t, false>::~moneypunct()
00000000005d6460 000000000000003c T std::moneypunct<wchar_t, false>::~moneypunct()
00000000005d64a0 0000000000000108 T std::__cxx11::numpunct<char>::_M_initialize_numpunct(int*)
00000000005d65c0 000000000000005c T std::__cxx11::numpunct<char>::~numpunct()
00000000005d65c0 000000000000005c T std::__cxx11::numpunct<char>::~numpunct()
00000000005d6620 000000000000003c T std::__cxx11::numpunct<char>::~numpunct()
00000000005d6660 00000000000000f0 T std::__cxx11::numpunct<wchar_t>::_M_initialize_numpunct(int*)
00000000005d6760 000000000000005c T std::__cxx11::numpunct<wchar_t>::~numpunct()
00000000005d6760 000000000000005c T std::__cxx11::numpunct<wchar_t>::~numpunct()
00000000005d67c0 000000000000003c T std::__cxx11::numpunct<wchar_t>::~numpunct()
00000000005d6800 0000000000000108 T std::numpunct<char>::_M_initialize_numpunct(int*)
00000000005d6920 000000000000009c T std::numpunct<char>::~numpunct()
00000000005d6920 000000000000009c T std::numpunct<char>::~numpunct()
00000000005d69c0 000000000000003c T std::numpunct<char>::~numpunct()
00000000005d6a00 00000000000000f0 T std::numpunct<wchar_t>::_M_initialize_numpunct(int*)
00000000005d6b00 000000000000009c T std::numpunct<wchar_t>::~numpunct()
00000000005d6b00 000000000000009c T std::numpunct<wchar_t>::~numpunct()
00000000005d6ba0 000000000000003c T std::numpunct<wchar_t>::~numpunct()
00000000005d6be0 0000000000000008 T std::logic_error::what() const
00000000005d6be0 0000000000000008 T std::runtime_error::what() const
00000000005d6c00 0000000000000070 T std::logic_error::~logic_error()
00000000005d6c00 0000000000000070 T std::logic_error::~logic_error()
00000000005d6c80 0000000000000024 T std::logic_error::~logic_error()
00000000005d6cc0 0000000000000014 T std::length_error::~length_error()
00000000005d6cc0 0000000000000014 T std::length_error::~length_error()
00000000005d6ce0 0000000000000024 T std::length_error::~length_error()
00000000005d6d20 0000000000000014 T std::out_of_range::~out_of_range()
00000000005d6d20 0000000000000014 T std::out_of_range::~out_of_range()
00000000005d6d40 0000000000000024 T std::out_of_range::~out_of_range()
00000000005d6d80 0000000000000070 T std::runtime_error::~runtime_error()
00000000005d6d80 0000000000000070 T std::runtime_error::~runtime_error()
00000000005d6e00 0000000000000024 T std::runtime_error::~runtime_error()
00000000005d6e40 00000000000000c4 T std::__timepunct<char>::_M_put(char*, unsigned long, char const*, tm const*) const
00000000005d6f20 0000000000000248 T std::__timepunct<char>::_M_initialize_timepunct(int*)
00000000005d7180 00000000000000c4 T std::__timepunct<wchar_t>::_M_put(wchar_t*, unsigned long, wchar_t const*, tm const*) const
00000000005d7260 0000000000000248 T std::__timepunct<wchar_t>::_M_initialize_timepunct(int*)
00000000005d74c0 000000000000000c T std::__codecvt_utf8_base<char32_t>::do_unshift(_mbstate_t&, char*, char*, char*&) const
00000000005d74c0 000000000000000c T std::__codecvt_utf8_base<char16_t>::do_unshift(_mbstate_t&, char*, char*, char*&) const
00000000005d74c0 000000000000000c T std::__codecvt_utf8_base<wchar_t>::do_unshift(_mbstate_t&, char*, char*, char*&) const
00000000005d74c0 000000000000000c T std::__codecvt_utf16_base<char32_t>::do_unshift(_mbstate_t&, char*, char*, char*&) const
00000000005d74c0 000000000000000c T std::__codecvt_utf16_base<char16_t>::do_unshift(_mbstate_t&, char*, char*, char*&) const
00000000005d74c0 000000000000000c T std::__codecvt_utf16_base<wchar_t>::do_unshift(_mbstate_t&, char*, char*, char*&) const
00000000005d74c0 000000000000000c T std::__codecvt_utf8_utf16_base<char32_t>::do_unshift(_mbstate_t&, char*, char*, char*&) const
00000000005d74c0 000000000000000c T std::__codecvt_utf8_utf16_base<char16_t>::do_unshift(_mbstate_t&, char*, char*, char*&) const
00000000005d74c0 000000000000000c T std::__codecvt_utf8_utf16_base<wchar_t>::do_unshift(_mbstate_t&, char*, char*, char*&) const
00000000005d74c0 000000000000000c T std::codecvt<char32_t, char, _mbstate_t>::do_unshift(_mbstate_t&, char*, char*, char*&) const
00000000005d74c0 000000000000000c T std::codecvt<char16_t, char, _mbstate_t>::do_unshift(_mbstate_t&, char*, char*, char*&) const
00000000005d74e0 0000000000000008 T std::__codecvt_utf8_base<char32_t>::do_encoding() const
00000000005d74e0 0000000000000008 T std::__codecvt_utf8_base<char16_t>::do_encoding() const
00000000005d74e0 0000000000000008 T std::__codecvt_utf8_base<wchar_t>::do_encoding() const
00000000005d74e0 0000000000000008 T std::__codecvt_utf16_base<char32_t>::do_encoding() const
00000000005d74e0 0000000000000008 T std::__codecvt_utf16_base<char16_t>::do_encoding() const
00000000005d74e0 0000000000000008 T std::__codecvt_utf16_base<wchar_t>::do_encoding() const
00000000005d74e0 0000000000000008 T std::__codecvt_utf8_utf16_base<char32_t>::do_encoding() const
00000000005d74e0 0000000000000008 T std::__codecvt_utf8_utf16_base<char16_t>::do_encoding() const
00000000005d74e0 0000000000000008 T std::__codecvt_utf8_utf16_base<wchar_t>::do_encoding() const
00000000005d74e0 0000000000000008 T std::codecvt<char32_t, char, _mbstate_t>::do_encoding() const
00000000005d74e0 0000000000000008 T std::codecvt<char32_t, char8_t, _mbstate_t>::do_encoding() const
00000000005d74e0 0000000000000008 T std::codecvt<char16_t, char, _mbstate_t>::do_encoding() const
00000000005d74e0 0000000000000008 T std::codecvt<char16_t, char8_t, _mbstate_t>::do_encoding() const
00000000005d7500 0000000000000008 T std::__codecvt_utf8_base<char32_t>::do_always_noconv() const
00000000005d7500 0000000000000008 T std::__codecvt_utf8_base<char16_t>::do_always_noconv() const
00000000005d7500 0000000000000008 T std::__codecvt_utf8_base<wchar_t>::do_always_noconv() const
00000000005d7500 0000000000000008 T std::__codecvt_utf16_base<char32_t>::do_always_noconv() const
00000000005d7500 0000000000000008 T std::__codecvt_utf16_base<char16_t>::do_always_noconv() const
00000000005d7500 0000000000000008 T std::__codecvt_utf16_base<wchar_t>::do_always_noconv() const
00000000005d7500 0000000000000008 T std::__codecvt_utf8_utf16_base<char32_t>::do_always_noconv() const
00000000005d7500 0000000000000008 T std::__codecvt_utf8_utf16_base<char16_t>::do_always_noconv() const
00000000005d7500 0000000000000008 T std::__codecvt_utf8_utf16_base<wchar_t>::do_always_noconv() const
00000000005d7500 0000000000000008 T std::codecvt<char32_t, char, _mbstate_t>::do_always_noconv() const
00000000005d7500 0000000000000008 T std::codecvt<char32_t, char8_t, _mbstate_t>::do_always_noconv() const
00000000005d7500 0000000000000008 T std::codecvt<char16_t, char, _mbstate_t>::do_always_noconv() const
00000000005d7500 0000000000000008 T std::codecvt<char16_t, char8_t, _mbstate_t>::do_always_noconv() const
00000000005d7520 0000000000000008 T std::codecvt<char32_t, char, _mbstate_t>::do_max_length() const
00000000005d7520 0000000000000008 T std::codecvt<char32_t, char8_t, _mbstate_t>::do_max_length() const
00000000005d7520 0000000000000008 T std::codecvt<char16_t, char, _mbstate_t>::do_max_length() const
00000000005d7520 0000000000000008 T std::codecvt<char16_t, char8_t, _mbstate_t>::do_max_length() const
00000000005d7540 000000000000000c T std::codecvt<char32_t, char8_t, _mbstate_t>::do_unshift(_mbstate_t&, char8_t*, char8_t*, char8_t*&) const
00000000005d7540 000000000000000c T std::codecvt<char16_t, char8_t, _mbstate_t>::do_unshift(_mbstate_t&, char8_t*, char8_t*, char8_t*&) const
00000000005d7560 0000000000000140 t bool std::(anonymous namespace)::write_utf8_code_point<char>(std::(anonymous namespace)::range<char, true>&, char32_t)
00000000005d76a0 00000000000001a8 t char32_t std::(anonymous namespace)::read_utf8_code_point<char>(std::(anonymous namespace)::range<char const, true>&, unsigned long)
00000000005d7860 000000000000011c t bool std::(anonymous namespace)::write_utf8_code_point<char8_t>(std::(anonymous namespace)::range<char8_t, true>&, char32_t)
00000000005d7980 00000000000001a8 t char32_t std::(anonymous namespace)::read_utf8_code_point<char8_t>(std::(anonymous namespace)::range<char8_t const, true>&, unsigned long)
00000000005d7b40 0000000000000014 T std::codecvt<char16_t, char, _mbstate_t>::~codecvt()
00000000005d7b40 0000000000000014 T std::codecvt<char16_t, char, _mbstate_t>::~codecvt()
00000000005d7b60 0000000000000014 T std::codecvt<char32_t, char, _mbstate_t>::~codecvt()
00000000005d7b60 0000000000000014 T std::codecvt<char32_t, char, _mbstate_t>::~codecvt()
00000000005d7b80 0000000000000014 T std::codecvt<char16_t, char8_t, _mbstate_t>::~codecvt()
00000000005d7b80 0000000000000014 T std::codecvt<char16_t, char8_t, _mbstate_t>::~codecvt()
00000000005d7ba0 0000000000000014 T std::codecvt<char32_t, char8_t, _mbstate_t>::~codecvt()
00000000005d7ba0 0000000000000014 T std::codecvt<char32_t, char8_t, _mbstate_t>::~codecvt()
00000000005d7bc0 0000000000000024 T std::codecvt<char16_t, char, _mbstate_t>::~codecvt()
00000000005d7c00 0000000000000024 T std::codecvt<char32_t, char, _mbstate_t>::~codecvt()
00000000005d7c40 0000000000000024 T std::codecvt<char16_t, char8_t, _mbstate_t>::~codecvt()
00000000005d7c80 0000000000000024 T std::codecvt<char32_t, char8_t, _mbstate_t>::~codecvt()
00000000005d7cc0 000000000000005c T std::codecvt<char32_t, char8_t, _mbstate_t>::do_length(_mbstate_t&, char8_t const*, char8_t const*, unsigned long) const
00000000005d7d20 00000000000000a4 T std::codecvt<char32_t, char8_t, _mbstate_t>::do_in(_mbstate_t&, char8_t const*, char8_t const*, char8_t const*&, char32_t*, char32_t*, char32_t*&) const
00000000005d7de0 0000000000000090 T std::codecvt<char32_t, char8_t, _mbstate_t>::do_out(_mbstate_t&, char32_t const*, char32_t const*, char32_t const*&, char8_t*, char8_t*, char8_t*&) const
00000000005d7e80 00000000000000a8 T std::codecvt<char16_t, char8_t, _mbstate_t>::do_length(_mbstate_t&, char8_t const*, char8_t const*, unsigned long) const
00000000005d7f40 00000000000000cc T std::codecvt<char16_t, char8_t, _mbstate_t>::do_out(_mbstate_t&, char16_t const*, char16_t const*, char16_t const*&, char8_t*, char8_t*, char8_t*&) const
00000000005d8020 0000000000000188 t std::codecvt_base::result std::(anonymous namespace)::utf16_out<char16_t, char>(std::(anonymous namespace)::range<char16_t const, true>&, std::(anonymous namespace)::range<char, true>&, unsigned long, std::codecvt_mode, std::(anonymous namespace)::surrogates)
00000000005d81c0 0000000000000050 T std::codecvt<char16_t, char, _mbstate_t>::do_out(_mbstate_t&, char16_t const*, char16_t const*, char16_t const*&, char*, char*, char*&) const
00000000005d8220 0000000000000130 t std::codecvt_base::result std::(anonymous namespace)::utf16_in<char, char16_t>(std::(anonymous namespace)::range<char const, true>&, std::(anonymous namespace)::range<char16_t, true>&, unsigned long, std::codecvt_mode)
00000000005d8360 0000000000000054 T std::codecvt<char16_t, char, _mbstate_t>::do_in(_mbstate_t&, char const*, char const*, char const*&, char16_t*, char16_t*, char16_t*&) const
00000000005d83c0 000000000000005c T std::codecvt<char32_t, char, _mbstate_t>::do_length(_mbstate_t&, char const*, char const*, unsigned long) const
00000000005d8420 00000000000000f8 T std::codecvt<char16_t, char8_t, _mbstate_t>::do_in(_mbstate_t&, char8_t const*, char8_t const*, char8_t const*&, char16_t*, char16_t*, char16_t*&) const
00000000005d8520 00000000000000a4 T std::codecvt<char32_t, char, _mbstate_t>::do_in(_mbstate_t&, char const*, char const*, char const*&, char32_t*, char32_t*, char32_t*&) const
00000000005d85e0 0000000000000090 T std::codecvt<char32_t, char, _mbstate_t>::do_out(_mbstate_t&, char32_t const*, char32_t const*, char32_t const*&, char*, char*, char*&) const
00000000005d8680 00000000000000a8 T std::codecvt<char16_t, char, _mbstate_t>::do_length(_mbstate_t&, char const*, char const*, unsigned long) const
00000000005d8740 00000000000006cc T std::locale::_Impl::_M_init_extra(std::locale::facet**)
00000000005d8e20 00000000000000f0 T std::logic_error::logic_error(char const*)
00000000005d8e20 00000000000000f0 T std::logic_error::logic_error(char const*)
00000000005d8f20 0000000000000030 T std::length_error::length_error(char const*)
00000000005d8f20 0000000000000030 T std::length_error::length_error(char const*)
00000000005d8f60 0000000000000030 T std::out_of_range::out_of_range(char const*)
00000000005d8f60 0000000000000030 T std::out_of_range::out_of_range(char const*)
00000000005d8fa0 00000000000000f0 T std::runtime_error::runtime_error(char const*)
00000000005d8fa0 00000000000000f0 T std::runtime_error::runtime_error(char const*)
00000000005d90a0 00000000000000c8 T std::__cow_string::__cow_string(char const*, unsigned long)
00000000005d90a0 00000000000000c8 T std::__cow_string::__cow_string(char const*, unsigned long)
00000000005d9180 0000000000000014 T std::ios_base::failure[abi:cxx11]::~failure()
00000000005d9180 0000000000000014 T std::ios_base::failure[abi:cxx11]::~failure()
00000000005d91a0 0000000000000024 T std::ios_base::failure[abi:cxx11]::~failure()
00000000005d91e0 0000000000000004 T std::ios_base::failure[abi:cxx11]::what() const
00000000005d9200 0000000000000014 T std::__iosfail_type_info::~__iosfail_type_info()
00000000005d9200 0000000000000014 T std::__iosfail_type_info::~__iosfail_type_info()
00000000005d9220 0000000000000024 T std::__iosfail_type_info::~__iosfail_type_info()
00000000005d9260 0000000000000060 T std::__iosfail_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void**) const
00000000005d92c0 0000000000000034 W std::__ios_failure::~__ios_failure()
00000000005d92c0 0000000000000034 W std::__ios_failure::~__ios_failure()
00000000005d9300 000000000000003c W std::__ios_failure::~__ios_failure()
00000000005d9340 00000000000001d4 T std::ios_base::failure[abi:cxx11]::failure(char const*, std::error_code const&)
00000000005d9340 00000000000001d4 T std::ios_base::failure[abi:cxx11]::failure(char const*, std::error_code const&)
00000000005d9520 000000000000000c W std::__cxx11::moneypunct<char, false>::do_decimal_point() const
00000000005d9540 000000000000000c W std::__cxx11::moneypunct<char, false>::do_thousands_sep() const
00000000005d9560 000000000000000c W std::__cxx11::moneypunct<char, false>::do_frac_digits() const
00000000005d9580 000000000000000c W std::__cxx11::moneypunct<char, false>::do_pos_format() const
00000000005d95a0 000000000000000c W std::__cxx11::moneypunct<char, false>::do_neg_format() const
00000000005d95c0 000000000000000c W std::__cxx11::moneypunct<char, true>::do_decimal_point() const
00000000005d95e0 000000000000000c W std::__cxx11::moneypunct<char, true>::do_thousands_sep() const
00000000005d9600 000000000000000c W std::__cxx11::moneypunct<char, true>::do_frac_digits() const
00000000005d9620 000000000000000c W std::__cxx11::moneypunct<char, true>::do_pos_format() const
00000000005d9640 000000000000000c W std::__cxx11::moneypunct<char, true>::do_neg_format() const
00000000005d9660 000000000000000c W std::__cxx11::numpunct<char>::do_decimal_point() const
00000000005d9680 000000000000000c W std::__cxx11::numpunct<char>::do_thousands_sep() const
00000000005d96a0 0000000000000008 W std::__cxx11::time_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::do_date_order() const
00000000005d96c0 0000000000000008 W std::__cxx11::messages<char>::do_open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::locale const&) const
00000000005d96e0 0000000000000004 W std::__cxx11::messages<char>::do_close(int) const
00000000005d9700 0000000000000024 W std::__cxx11::collate<char>::do_hash(char const*, char const*) const
00000000005d9740 0000000000000014 W std::__cxx11::money_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::~money_get()
00000000005d9740 0000000000000014 W std::__cxx11::money_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::~money_get()
00000000005d9760 0000000000000034 W std::__cxx11::money_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::~money_get()
00000000005d97a0 0000000000000014 W std::__cxx11::money_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::~money_put()
00000000005d97a0 0000000000000014 W std::__cxx11::money_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::~money_put()
00000000005d97c0 0000000000000034 W std::__cxx11::money_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::~money_put()
00000000005d9800 0000000000000014 W std::__cxx11::time_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::~time_get()
00000000005d9800 0000000000000014 W std::__cxx11::time_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::~time_get()
00000000005d9820 0000000000000034 W std::__cxx11::time_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::~time_get()
00000000005d9860 0000000000000034 W std::__cxx11::messages<char>::~messages()
00000000005d9860 0000000000000034 W std::__cxx11::messages<char>::~messages()
00000000005d98a0 0000000000000024 W std::__cxx11::messages<char>::~messages()
00000000005d98e0 0000000000000034 W std::__cxx11::collate<char>::~collate()
00000000005d98e0 0000000000000034 W std::__cxx11::collate<char>::~collate()
00000000005d9920 00000000000000bc t void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag) [clone .isra.0]
00000000005d99e0 000000000000003c W std::__cxx11::collate<char>::~collate()
00000000005d9a20 0000000000000058 W std::__cxx11::moneypunct<char, false>::do_grouping() const
00000000005d9a80 0000000000000058 W std::__cxx11::moneypunct<char, false>::do_curr_symbol() const
00000000005d9ae0 0000000000000058 W std::__cxx11::moneypunct<char, false>::do_positive_sign() const
00000000005d9b40 0000000000000058 W std::__cxx11::moneypunct<char, false>::do_negative_sign() const
00000000005d9ba0 0000000000000058 W std::__cxx11::moneypunct<char, true>::do_grouping() const
00000000005d9c00 0000000000000058 W std::__cxx11::moneypunct<char, true>::do_curr_symbol() const
00000000005d9c60 0000000000000058 W std::__cxx11::moneypunct<char, true>::do_positive_sign() const
00000000005d9cc0 0000000000000058 W std::__cxx11::moneypunct<char, true>::do_negative_sign() const
00000000005d9d20 0000000000000058 W std::__cxx11::numpunct<char>::do_grouping() const
00000000005d9d80 0000000000000058 W std::__cxx11::numpunct<char>::do_truename() const
00000000005d9de0 0000000000000058 W std::__cxx11::numpunct<char>::do_falsename() const
00000000005d9e40 000000000000011c W std::__cxx11::collate<char>::do_compare(char const*, char const*, char const*, char const*) const
00000000005d9f60 00000000000001ec W std::__cxx11::collate<char>::do_transform(char const*, char const*) const
00000000005da160 000000000000121c W std::istreambuf_iterator<char, std::char_traits<char> > std::__cxx11::money_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract<true>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&) const
00000000005db380 000000000000121c W std::istreambuf_iterator<char, std::char_traits<char> > std::__cxx11::money_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract<false>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&) const
00000000005dc5a0 00000000000000c4 W std::__cxx11::money_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::do_get(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, bool, std::ios_base&, std::_Ios_Iostate&, long double&) const
00000000005dc680 00000000000001b4 W std::__cxx11::money_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::do_get(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, bool, std::ios_base&, std::_Ios_Iostate&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&) const
00000000005dc840 0000000000000694 W std::ostreambuf_iterator<char, std::char_traits<char> > std::__cxx11::money_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::_M_insert<true>(std::ostreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, char, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const
00000000005dcee0 0000000000000694 W std::ostreambuf_iterator<char, std::char_traits<char> > std::__cxx11::money_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::_M_insert<false>(std::ostreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, char, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const
00000000005dd580 0000000000000224 W std::__cxx11::money_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::do_put(std::ostreambuf_iterator<char, std::char_traits<char> >, bool, std::ios_base&, char, long double) const
00000000005dd7c0 0000000000000020 W std::__cxx11::money_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::do_put(std::ostreambuf_iterator<char, std::char_traits<char> >, bool, std::ios_base&, char, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const
00000000005dd7e0 00000000000002c4 W std::__cxx11::time_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_num(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, int&, int, int, unsigned long, std::ios_base&, std::_Ios_Iostate&) const
00000000005ddac0 00000000000008ac W std::__cxx11::time_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::do_get_year(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, tm*) const
00000000005de380 0000000000000bf4 W std::__cxx11::time_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_name(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, int&, char const**, unsigned long, std::ios_base&, std::_Ios_Iostate&) const
00000000005def80 00000000000005a8 W std::__cxx11::time_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_wday_or_month(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, int&, char const**, unsigned long, std::ios_base&, std::_Ios_Iostate&) const
00000000005df540 0000000000000208 W std::__cxx11::time_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::do_get_weekday(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, tm*) const
00000000005df760 0000000000000210 W std::__cxx11::time_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::do_get_monthname(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, tm*) const
00000000005df980 0000000000000058 W std::__cxx11::messages<char>::messages(unsigned long)
00000000005df980 0000000000000058 W std::__cxx11::messages<char>::messages(unsigned long)
00000000005df9e0 0000000000001e04 W std::__cxx11::time_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_via_format(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, tm*, char const*, std::__time_get_state&) const
00000000005df9e0 0000000000001e04 t std::__cxx11::time_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_via_format(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, tm*, char const*, std::__time_get_state&) const [clone .localalias]
00000000005e1800 000000000000019c W std::__cxx11::time_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::do_get_time(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, tm*) const
00000000005e19a0 000000000000019c W std::__cxx11::time_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::do_get_date(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, tm*) const
00000000005e1b40 00000000000001e0 W std::__cxx11::time_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::do_get(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, tm*, char, char) const
00000000005e1d20 0000000000000008 T std::__cow_string::__cow_string(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
00000000005e1d20 0000000000000008 T std::__cow_string::__cow_string(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
00000000005e1d40 0000000000000048 T std::runtime_error::runtime_error(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
00000000005e1d40 0000000000000048 T std::runtime_error::runtime_error(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
00000000005e1da0 000000000000000c t (anonymous namespace)::io_error_category::name() const
00000000005e1dc0 0000000000000010 t (anonymous namespace)::io_error_category::~io_error_category()
00000000005e1dc0 0000000000000010 t (anonymous namespace)::io_error_category::~io_error_category()
00000000005e1de0 0000000000000030 t (anonymous namespace)::io_error_category::~io_error_category()
00000000005e1e20 0000000000000094 t (anonymous namespace)::io_error_category::message[abi:cxx11](int) const
00000000005e1ec0 000000000000000c T std::iostream_category()
00000000005e1ee0 0000000000000008 T std::ios_base::failure::what() const
00000000005e1f00 0000000000000070 T std::ios_base::failure::~failure()
00000000005e1f00 0000000000000070 T std::ios_base::failure::~failure()
00000000005e1f00 0000000000000070 t std::ios_base::failure::~failure() [clone .localalias]
00000000005e1f80 0000000000000024 T std::ios_base::failure::~failure()
00000000005e1fc0 00000000000000b0 T std::ios_base::failure::failure(std::string const&)
00000000005e1fc0 00000000000000b0 T std::ios_base::failure::failure(std::string const&)
00000000005e2080 000000000000011c T std::__construct_ios_failure(void*, char const*)
00000000005e21a0 0000000000000090 T std::__destroy_ios_failure(void*)
00000000005e2240 0000000000000050 T std::__is_ios_failure_handler(__cxxabiv1::__class_type_info const*)
00000000005e2290 0000000000000138 t _get_next_page
00000000005e23d0 00000000000000f0 t _initial_pcmoffset
00000000005e24c0 0000000000000094 t _seek_helper
00000000005e2560 0000000000000094 t _make_decode_ready
00000000005e2600 0000000000000170 t _get_prev_page_serial
00000000005e2770 0000000000000330 t _fetch_headers
00000000005e2aa0 0000000000000490 t _bisect_forward_serialno
00000000005e2f30 00000000000002f8 t _fetch_and_process_packet.constprop.11
00000000005e3230 0000000000000100 T ov_clear
00000000005e3330 0000000000000220 t _ov_open1
00000000005e3550 00000000000000a8 T ov_pcm_total
00000000005e3600 00000000000000c8 T ov_time_total
00000000005e36d0 0000000000000414 T ov_raw_seek
00000000005e3af0 0000000000000140 t _open_seekable2
00000000005e3c30 0000000000000090 T ov_open_callbacks
00000000005e3cc0 0000000000000084 T rescale64
00000000005e3d50 000000000000068c T ov_pcm_seek_page
00000000005e43e0 000000000000034c T ov_pcm_seek
00000000005e4730 0000000000000128 T ov_time_seek
00000000005e4860 000000000000001c T ov_pcm_tell
00000000005e4880 0000000000000060 T ov_info
00000000005e48e0 000000000000005c T ov_comment
00000000005e4940 00000000000001bc T ov_read
00000000005e4b00 0000000000000034 T vorbis_block_init
00000000005e4b40 000000000000008c T _vorbis_block_alloc
00000000005e4bd0 0000000000000094 T _vorbis_block_ripcord
00000000005e4c70 0000000000000058 T vorbis_block_clear
00000000005e4cd0 0000000000000054 T vorbis_synthesis_restart
00000000005e4d30 000000000000012c T vorbis_dsp_clear
00000000005e4e60 0000000000000290 T vorbis_synthesis_init
00000000005e50f0 000000000000047c T vorbis_synthesis_blockin
00000000005e5570 0000000000000070 T vorbis_synthesis_pcmout
00000000005e55e0 0000000000000030 T vorbis_synthesis_read
00000000005e5610 00000000000000b4 T _vorbis_window
00000000005e56d0 000000000000015c T _vorbis_apply_window
00000000005e5830 0000000000000210 t _vorbis_synthesis1
00000000005e5a40 0000000000000008 T vorbis_synthesis
00000000005e5a50 0000000000000008 T vorbis_synthesis_trackonly
00000000005e5a60 0000000000000098 T vorbis_packet_blocksize
00000000005e5b00 000000000000000c T vorbis_comment_init
00000000005e5b10 0000000000000088 T vorbis_comment_clear
00000000005e5ba0 0000000000000018 T vorbis_info_blocksize
00000000005e5bc0 0000000000000038 T vorbis_info_init
00000000005e5c00 00000000000001b0 T vorbis_info_clear
00000000005e5db0 00000000000000cc T vorbis_synthesis_idheader
00000000005e5e80 0000000000000738 T vorbis_synthesis_headerin
00000000005e65c0 0000000000000044 t bitreverse
00000000005e6610 0000000000000410 T vorbis_staticbook_unpack
00000000005e6a20 000000000000016c T vorbis_book_decode
00000000005e6b90 0000000000000418 T vorbis_book_decodevs_add
00000000005e6fb0 0000000000000388 T vorbis_book_decodev_add
00000000005e7340 0000000000000394 T vorbis_book_decodev_set
00000000005e76e0 0000000000000390 T vorbis_book_decodevv_add
00000000005e7a70 0000000000000044 t bitreverse
00000000005e7ac0 0000000000000020 t sort32a
00000000005e7ae0 000000000000001c T _ilog
00000000005e7b00 000000000000023c T _make_words
00000000005e7d40 00000000000000b8 T _book_maptype1_quantvals
00000000005e7e00 00000000000006e8 T _book_unquantize
00000000005e84f0 0000000000000038 T vorbis_staticbook_destroy
00000000005e8530 0000000000000070 T vorbis_book_clear
00000000005e85a0 0000000000000468 T vorbis_book_init_decode
00000000005e8a10 0000000000000018 t icomp
00000000005e8a30 00000000000001e0 t floor1_inverse2
00000000005e8c10 000000000000031c t floor1_inverse1
00000000005e8f30 000000000000000c t floor1_free_look
00000000005e8f40 000000000000000c t floor1_free_info
00000000005e8f50 0000000000000230 t floor1_look
00000000005e9180 0000000000000380 t floor1_unpack
00000000005e9500 000000000000019c t floor0_inverse1
00000000005e96a0 000000000000000c t floor0_free_info
00000000005e96b0 0000000000000148 t floor0_unpack
00000000005e9800 0000000000000040 t floor0_free_look
00000000005e9840 0000000000000238 t floor0_look
00000000005e9a80 00000000000004dc T vorbis_lsp_to_curve
00000000005e9f60 0000000000000074 t floor0_inverse2
00000000005e9fe0 000000000000000c T res0_free_info
00000000005e9ff0 0000000000000244 T res0_unpack
00000000005ea240 0000000000000274 T res0_look
00000000005ea4c0 000000000000034c t _01inverse
00000000005ea810 000000000000004c T res0_inverse
00000000005ea860 000000000000004c T res1_inverse
00000000005ea8b0 000000000000025c T res2_inverse
00000000005eab10 0000000000000098 T res0_free_look
00000000005eabb0 000000000000042c t mapping0_inverse
00000000005eafe0 000000000000000c t mapping0_free_info
00000000005eaff0 0000000000000180 t mapping0_look
00000000005eb170 0000000000000264 t mapping0_unpack
00000000005eb3e0 00000000000000a0 t mapping0_free_look
00000000005eb480 00000000000019ac T mdct_backward
00000000005ece30 00000000000000f4 t _os_update_crc
00000000005ecf30 0000000000000114 t _packetout
00000000005ed050 000000000000000c T ogg_page_version
00000000005ed060 0000000000000010 T ogg_page_continued
00000000005ed070 0000000000000010 T ogg_page_bos
00000000005ed080 0000000000000010 T ogg_page_eos
00000000005ed090 000000000000000c T ogg_page_granulepos
00000000005ed0a0 000000000000000c T ogg_page_serialno
00000000005ed0b0 000000000000000c T ogg_page_pageno
00000000005ed0c0 0000000000000040 T ogg_page_packets
00000000005ed100 000000000000001c T ogg_stream_check
00000000005ed120 0000000000000060 T ogg_stream_clear
00000000005ed180 00000000000000a4 T ogg_stream_init
00000000005ed230 0000000000000090 t _os_body_expand
00000000005ed2c0 00000000000000a4 t _os_lacing_expand
00000000005ed370 0000000000000084 T ogg_page_checksum_set
00000000005ed400 0000000000000014 T ogg_sync_init
00000000005ed420 0000000000000040 T ogg_sync_clear
00000000005ed460 000000000000000c T ogg_sync_check
00000000005ed470 00000000000000f0 T ogg_sync_buffer
00000000005ed560 000000000000004c T ogg_sync_wrote
00000000005ed5b0 0000000000000190 T ogg_sync_pageseek
00000000005ed740 000000000000039c T ogg_stream_pagein
00000000005edae0 0000000000000034 T ogg_sync_reset
00000000005edb20 000000000000004c T ogg_stream_reset
00000000005edb70 0000000000000050 T ogg_stream_reset_serialno
00000000005edbc0 0000000000000044 T ogg_stream_packetout
00000000005edc10 0000000000000044 T ogg_stream_packetpeek
00000000005edc60 0000000000000014 T oggpack_readinit
00000000005edc80 00000000000000f8 T oggpack_look
00000000005edd80 000000000000006c T oggpack_adv
00000000005eddf0 000000000000012c T oggpack_read
00000000005edf20 0000000000000020 T oggpack_bytes
00000000005edf40 0000000000000190 t conv_s16_to_s32
00000000005ee0d0 0000000000000280 t cap_fit
00000000005ee350 0000000000000184 t enc_chan_fit
00000000005ee4e0 0000000000000020 T mpg123_rates
00000000005ee500 0000000000000050 T mpg123_encsize
00000000005ee550 0000000000000c30 T INT123_frame_output_format
00000000005ef180 000000000000007c T mpg123_fmt_none
00000000005ef200 000000000000003c T mpg123_format_none
00000000005ef240 00000000000002c8 T mpg123_fmt_all
00000000005ef510 000000000000033c T mpg123_fmt2
00000000005ef850 0000000000000010 T mpg123_fmt
00000000005ef860 000000000000003c T mpg123_format
00000000005ef8a0 0000000000000010 T INT123_invalidate_format
00000000005ef8b0 0000000000000018 T INT123_decoder_synth_bytes
00000000005ef8d0 0000000000000018 T INT123_samples_to_bytes
00000000005ef8f0 0000000000000018 T INT123_bytes_to_samples
00000000005ef910 0000000000000044 T INT123_outblock_bytes
00000000005ef960 0000000000000700 T swap_endian
00000000005f0060 0000000000001620 T INT123_postprocess_buffer
00000000005f1680 00000000000000e4 t decode_the_frame
00000000005f1770 0000000000000154 t frame_buffercheck.part.0.constprop.0
00000000005f18d0 0000000000000008 T mpg123_init
00000000005f18e0 0000000000000004 T mpg123_exit
00000000005f18f0 0000000000000090 T mpg123_parnew
00000000005f1980 0000000000000010 T mpg123_new
00000000005f1990 00000000000001e4 T INT123_decode_update
00000000005f1b80 00000000000001b8 t get_next_frame
00000000005f1d40 0000000000000100 t do_the_seek
00000000005f1e40 0000000000000064 T mpg123_feed
00000000005f1eb0 000000000000019c T mpg123_decode
00000000005f2050 0000000000000018 T mpg123_read
00000000005f2070 000000000000008c T mpg123_getformat2
00000000005f2100 0000000000000008 T mpg123_getformat
00000000005f2110 00000000000000d8 T mpg123_tell
00000000005f21f0 00000000000001e0 T mpg123_scan
00000000005f23d0 00000000000001f4 T mpg123_seek
00000000005f25d0 0000000000000064 T mpg123_close
00000000005f2640 0000000000000058 T mpg123_open_handle
00000000005f26a0 000000000000004c T mpg123_replace_reader_handle
00000000005f26f0 0000000000000028 T mpg123_delete
00000000005f2720 0000000000000080 T mpg123_plain_strerror
00000000005f27a0 0000000000000018 T mpg123_errcode
00000000005f27c0 0000000000000010 T mpg123_strerror
00000000005f27d0 0000000000000014 T INT123_fi_init
00000000005f27f0 0000000000000028 T INT123_fi_exit
00000000005f2820 00000000000001a0 T INT123_fi_resize
00000000005f29c0 0000000000000194 T INT123_fi_add
00000000005f2b60 0000000000000010 T INT123_fi_reset
00000000005f2b70 0000000000000008 T INT123_init_icy
00000000005f2b80 0000000000000020 T INT123_clear_icy
00000000005f2ba0 0000000000000018 T INT123_reset_icy
00000000005f2bc0 00000000000001c4 T INT123_ntom_val
00000000005f2d90 000000000000015c T INT123_synth_ntom_set_step
00000000005f2ef0 000000000000001c T INT123_ntom_set_ntom
00000000005f2f10 000000000000002c T INT123_ntom_frame_outsamples
00000000005f2f40 0000000000000170 T INT123_ntom_frmouts
00000000005f30b0 0000000000000130 T INT123_ntom_ins2outs
00000000005f31e0 000000000000012c T INT123_ntom_frameoff
00000000005f3310 000000000000000c T mpg123_init_string
00000000005f3320 0000000000000028 T mpg123_free_string
00000000005f3350 0000000000000094 T mpg123_resize_string
00000000005f33f0 000000000000002c T mpg123_grow_string
00000000005f3420 000000000000006c T mpg123_move_string
00000000005f3490 0000000000000050 T mpg123_same_string
00000000005f34e0 0000000000000010 T INT123_safe_realloc
00000000005f34f0 000000000000073c t decode_header
00000000005f3c30 0000000000000094 t forget_head_shift
00000000005f3cd0 00000000000000a4 t getbits.constprop.0
00000000005f3d80 0000000000000018 T INT123_frame_freq
00000000005f3da0 00000000000000bc T INT123_set_pointer
00000000005f3e60 0000000000000024 T INT123_compute_bpf
00000000005f3e90 0000000000001a54 T INT123_read_frame
00000000005f58f0 00000000000000ec t frame_fuzzy_find.constprop.0
00000000005f59e0 000000000000006c T mpg123_reset_eq
00000000005f5a50 00000000000000e0 T INT123_frame_outbuffer
00000000005f5b30 00000000000000a8 T INT123_frame_index_setup
00000000005f5be0 000000000000015c T INT123_frame_buffers
00000000005f5d40 0000000000000084 T INT123_frame_buffers_reset
00000000005f5dd0 0000000000000068 T INT123_frame_fill_toc
00000000005f5e40 00000000000000ac T INT123_frame_exit
00000000005f5ef0 00000000000000cc T INT123_frame_index_find
00000000005f5fc0 000000000000006c T INT123_frame_ins2outs
00000000005f6030 0000000000000080 T INT123_frame_outs
00000000005f60b0 0000000000000078 T INT123_frame_expect_outsamples
00000000005f6130 0000000000000080 T INT123_frame_offset
00000000005f61b0 0000000000000060 T INT123_frame_gapless_init
00000000005f6210 0000000000000154 t frame_fixed_reset
00000000005f6370 00000000000001a4 T INT123_frame_init_par
00000000005f6520 000000000000003c T INT123_frame_reset
00000000005f6560 0000000000000058 T INT123_frame_gapless_realinit
00000000005f65c0 00000000000000cc T INT123_frame_gapless_update
00000000005f6690 0000000000000118 T INT123_frame_set_frameseek
00000000005f67b0 0000000000000020 T INT123_frame_skip
00000000005f67d0 0000000000000088 T INT123_frame_set_seek
00000000005f6860 0000000000000150 T INT123_do_rva
00000000005f69b0 0000000000000180 t next_text
00000000005f6b30 0000000000000250 t promote_framename
00000000005f6d80 00000000000006fc t convert_utf16bom
00000000005f7480 0000000000000328 t convert_latin1
00000000005f77b0 0000000000000064 t convert_utf8
00000000005f7820 0000000000000364 t add_id3_text
00000000005f7b90 0000000000000044 T INT123_init_id3
00000000005f7be0 00000000000002e8 T INT123_exit_id3
00000000005f7ed0 0000000000000018 T INT123_reset_id3
00000000005f7ef0 0000000000000200 T INT123_id3_to_utf8
00000000005f80f0 0000000000000134 t store_id3_text.part.0
00000000005f8230 0000000000000120 T store_id3v2
00000000005f8350 00000000000021d0 T INT123_parse_new_id3
00000000005fa520 0000000000000050 t synth_stereo_wrap
00000000005fa570 0000000000000008 T INT123_defdec
00000000005fa580 0000000000000020 T INT123_decclass
00000000005fa5a0 0000000000000368 T INT123_set_synth_functions
00000000005fa910 0000000000000124 T INT123_dectype
00000000005faa40 0000000000000114 T INT123_frame_cpu_opt
00000000005fab60 0000000000000008 t nix_lseek
00000000005fab70 00000000000000bc t plain_fullread
00000000005fac30 0000000000000050 t generic_head_read
00000000005fac80 0000000000000054 t generic_head_shift
00000000005face0 000000000000002c t generic_read_frame_body
00000000005fad10 000000000000003c t generic_tell
00000000005fad50 000000000000004c t feed_skip_bytes
00000000005fada0 0000000000000008 t feed_seek_frame
00000000005fadb0 0000000000000014 t bad_init
00000000005fadd0 0000000000000004 t bad_close
00000000005fade0 0000000000000014 t bad_fullread
00000000005fae00 0000000000000014 t bad_head_read
00000000005fae20 0000000000000014 t bad_skip_bytes
00000000005fae40 0000000000000014 t bad_read_frame_body
00000000005fae60 0000000000000014 t bad_back_bytes
00000000005fae80 0000000000000014 t bad_tell
00000000005faea0 0000000000000038 t plain_read
00000000005faee0 0000000000000154 t bc_give
00000000005fb040 0000000000000024 t feed_read
00000000005fb070 000000000000013c t bc_add
00000000005fb1b0 0000000000000398 t icy_fullread
00000000005fb550 000000000000020c t buffered_fullread
00000000005fb760 00000000000000e4 t stream_seek_frame
00000000005fb850 0000000000000004 t posix_lseek
00000000005fb860 0000000000000004 t posix_read
00000000005fb870 00000000000000d4 t buffered_forget
00000000005fb950 0000000000000034 t io_seek
00000000005fb990 0000000000000070 t stream_rewind
00000000005fba00 000000000000012c t stream_skip_bytes
00000000005fbb30 000000000000004c t stream_back_bytes
00000000005fbb80 00000000000002ec t default_init
00000000005fbe70 0000000000000014 t bad_head_shift
00000000005fbe90 0000000000000014 t bad_seek_frame
00000000005fbeb0 0000000000000004 t bad_rewind
00000000005fbec0 00000000000002dc t bc_fill_pool.isra.0
00000000005fc1a0 000000000000004c t feed_init
00000000005fc1f0 0000000000000078 t bc_reset
00000000005fc270 0000000000000064 t stream_close
00000000005fc2e0 0000000000000064 t feed_back_bytes
00000000005fc350 0000000000000008 T INT123_bc_poolsize
00000000005fc360 0000000000000024 T INT123_bc_prepare
00000000005fc390 00000000000000e4 T INT123_bc_cleanup
00000000005fc480 0000000000000058 T INT123_feed_more
00000000005fc4e0 0000000000000050 T INT123_open_bad
00000000005fc530 000000000000009c T INT123_open_stream_handle
00000000005fc5d0 00000000000002e4 T INT123_make_decode_tables
00000000005fc8c0 0000000000000a84 T INT123_make_conv16to8_table
00000000005fd350 00000000000000c0 t getbits
00000000005fd410 0000000000002318 T INT123_do_layer1
00000000005ff730 00000000000000c0 t getbits
00000000005ff7f0 0000000000000120 T INT123_init_layer12_stuff
00000000005ff910 0000000000000064 T INT123_init_layer12_table
00000000005ff980 0000000000001b34 T INT123_do_layer2
00000000006014c0 00000000000002bc t III_get_scale_factors_2
0000000000601780 00000000000003b8 t dct12
0000000000601b40 00000000000000c0 t getbits
0000000000601c00 00000000000017a4 t III_dequantize_sample
00000000006033b0 00000000000013c4 t III_get_scale_factors_1.isra.0
0000000000604780 0000000000000028 T INT123_init_layer3_gainpow2
00000000006047b0 0000000000000478 T INT123_init_layer3_stuff
0000000000604c30 0000000000000554 T INT123_dct36
0000000000605190 00000000000035d8 T INT123_do_layer3
0000000000608770 00000000000003bc T INT123_synth_1to1_8bit
0000000000608b30 00000000000000bc T INT123_synth_1to1_8bit_mono
0000000000608bf0 000000000000008c T INT123_synth_1to1_8bit_m2s
0000000000608c80 0000000000000140 T INT123_synth_1to1_8bit_wrap
0000000000608dc0 000000000000011c T INT123_synth_1to1_8bit_wrap_mono
0000000000608ee0 0000000000000198 T INT123_synth_1to1_8bit_wrap_m2s
0000000000609080 00000000000003bc T INT123_synth_2to1_8bit
0000000000609440 00000000000000d4 T INT123_synth_2to1_8bit_mono
0000000000609520 00000000000000bc T INT123_synth_2to1_8bit_m2s
00000000006095e0 0000000000000490 T INT123_synth_4to1_8bit
0000000000609a70 0000000000000094 T INT123_synth_4to1_8bit_mono
0000000000609b10 000000000000007c T INT123_synth_4to1_8bit_m2s
0000000000609b90 00000000000008d0 T INT123_synth_ntom_8bit
000000000060a460 000000000000015c T INT123_synth_ntom_8bit_mono
000000000060a5c0 0000000000000148 T INT123_synth_ntom_8bit_m2s
000000000060a710 0000000000000394 T INT123_synth_1to1
000000000060aab0 00000000000000bc T INT123_synth_1to1_mono
000000000060ab70 000000000000008c T INT123_synth_1to1_m2s
000000000060ac00 0000000000000394 T INT123_synth_2to1
000000000060afa0 00000000000000d4 T INT123_synth_2to1_mono
000000000060b080 00000000000000bc T INT123_synth_2to1_m2s
000000000060b140 0000000000000874 T INT123_synth_4to1
000000000060b9c0 0000000000000094 T INT123_synth_4to1_mono
000000000060ba60 000000000000007c T INT123_synth_4to1_m2s
000000000060bae0 0000000000000be4 T INT123_synth_ntom
000000000060c6d0 0000000000000158 T INT123_synth_ntom_mono
000000000060c830 000000000000013c T INT123_synth_ntom_m2s
000000000060c970 00000000000003bc T INT123_synth_1to1_s32
000000000060cd30 00000000000000bc T INT123_synth_1to1_s32_mono
000000000060cdf0 000000000000008c T INT123_synth_1to1_s32_m2s
000000000060ce80 00000000000003bc T INT123_synth_2to1_s32
000000000060d240 00000000000000d4 T INT123_synth_2to1_s32_mono
000000000060d320 00000000000000bc T INT123_synth_2to1_s32_m2s
000000000060d3e0 00000000000008d4 T INT123_synth_4to1_s32
000000000060dcc0 0000000000000094 T INT123_synth_4to1_s32_mono
000000000060dd60 000000000000007c T INT123_synth_4to1_s32_m2s
000000000060dde0 0000000000000c1c T INT123_synth_ntom_s32
000000000060ea00 0000000000000158 T INT123_synth_ntom_s32_mono
000000000060eb60 000000000000013c T INT123_synth_ntom_s32_m2s
000000000060eca0 000000000000035c T INT123_synth_1to1_real
000000000060f000 00000000000000bc T INT123_synth_1to1_real_mono
000000000060f0c0 000000000000008c T INT123_synth_1to1_real_m2s
000000000060f150 000000000000035c T INT123_synth_2to1_real
000000000060f4b0 00000000000000d4 T INT123_synth_2to1_real_mono
000000000060f590 00000000000000bc T INT123_synth_2to1_real_m2s
000000000060f650 000000000000064c T INT123_synth_4to1_real
000000000060fca0 0000000000000094 T INT123_synth_4to1_real_mono
000000000060fd40 000000000000007c T INT123_synth_4to1_real_m2s
000000000060fdc0 0000000000000598 T INT123_synth_ntom_real
0000000000610360 0000000000000158 T INT123_synth_ntom_real_mono
00000000006104c0 000000000000013c T INT123_synth_ntom_real_m2s
0000000000610600 0000000000000004 T INT123_compat_close
0000000000610610 0000000000000610 T INT123_dct64
0000000000610c20 00000000000000b8 T INT123_do_equalizer
0000000000610ce0 00000000000000f0 t ModPlug::UpdateSettings(bool)
0000000000610dd0 00000000000000a4 T ModPlug_Load
0000000000610e80 0000000000000044 T ModPlug_Unload
0000000000610ed0 0000000000000020 T ModPlug_Read
0000000000610ef0 0000000000000008 T ModPlug_SetMasterVolume
0000000000610f00 0000000000000078 T ModPlug_Seek
0000000000610f80 0000000000000024 T ModPlug_GetSettings
0000000000610fb0 000000000000002c T ModPlug_SetSettings
0000000000610fe0 000000000000000c t _muldiv(long, long, long)
0000000000610ff0 0000000000000010 t _muldivr(long, long, long)
0000000000611000 000000000000010c T CSoundFile::InitPlayer(bool)
0000000000611110 00000000000000d8 T CSoundFile::FadeSong(unsigned int)
00000000006111f0 0000000000000058 T CSoundFile::GlobalFadeSong(unsigned int)
0000000000611250 00000000000002a8 T CSoundFile::ProcessRow()
0000000000611500 0000000000001588 T CSoundFile::ReadNote()
0000000000612a90 00000000000003fc T CSoundFile::Read(void*, unsigned int)
0000000000612e90 0000000000000130 T CSoundFile::CSoundFile()
0000000000612e90 0000000000000130 T CSoundFile::CSoundFile()
0000000000612fc0 0000000000000040 T CSoundFile::AllocatePattern(unsigned int, unsigned int)
0000000000613000 000000000000000c T CSoundFile::FreePattern(void*)
0000000000613010 0000000000000028 T CSoundFile::AllocateSample(unsigned int)
0000000000613040 0000000000000010 T CSoundFile::FreeSample(void*)
0000000000613050 0000000000000144 T CSoundFile::Destroy()
00000000006131a0 0000000000000004 T CSoundFile::~CSoundFile()
00000000006131a0 0000000000000004 T CSoundFile::~CSoundFile()
00000000006131b0 0000000000000128 T CSoundFile::ResetMidiCfg()
00000000006132e0 0000000000000790 T CSoundFile::Create(unsigned char const*, unsigned int)
0000000000613a70 00000000000000b4 T CSoundFile::SetWaveConfig(unsigned int, unsigned int, unsigned int, bool)
0000000000613b30 0000000000000030 T CSoundFile::SetMixConfig(unsigned int, unsigned int)
0000000000613b60 000000000000005c T CSoundFile::SetResamplingMode(unsigned int)
0000000000613bc0 0000000000000078 T CSoundFile::SetMasterVolume(unsigned int, bool)
0000000000613c40 0000000000000050 T CSoundFile::GetMaxPosition() const
0000000000613c90 0000000000000210 T CSoundFile::SetCurrentPos(unsigned int)
0000000000613ea0 0000000000000344 T CSoundFile::AdjustSampleLoop(_MODINSTRUMENT*)
00000000006141f0 0000000000000948 T CSoundFile::ReadSample(_MODINSTRUMENT*, unsigned int, char const*, unsigned int)
0000000000614b40 000000000000003c T CSoundFile::TransposeToFrequency(int, int)
0000000000614b80 0000000000000034 T CSoundFile::FrequencyToTranspose(unsigned int)
0000000000614bc0 0000000000000060 T CSoundFile::FrequencyToTranspose(_MODINSTRUMENT*)
0000000000614c20 0000000000000118 T CSoundFile::SetPatternName(unsigned int, char const*)
0000000000614d40 0000000000000184 T CSoundFile::DetectUnusedSamples(bool*)
0000000000614ed0 00000000000000a8 T CSoundFile::DestroySample(unsigned int)
0000000000614f80 0000000000000804 T CSoundFile::GetLength(bool, bool)
0000000000615790 00000000000003c0 T CSoundFile::InstrumentChange(_MODCHANNEL*, unsigned int, bool, bool, bool)
0000000000615b50 00000000000000e8 T CSoundFile::GetNNAChannel(unsigned int) const
0000000000615c40 00000000000000ac T CSoundFile::FinePortamentoUp(_MODCHANNEL*, unsigned int)
0000000000615cf0 00000000000000b0 T CSoundFile::FinePortamentoDown(_MODCHANNEL*, unsigned int)
0000000000615da0 00000000000000a8 T CSoundFile::ExtraFinePortamentoUp(_MODCHANNEL*, unsigned int)
0000000000615e50 00000000000000b0 T CSoundFile::ExtraFinePortamentoDown(_MODCHANNEL*, unsigned int)
0000000000615f00 000000000000012c T CSoundFile::TonePortamento(_MODCHANNEL*, unsigned int)
0000000000616030 0000000000000030 T CSoundFile::Vibrato(_MODCHANNEL*, unsigned int)
0000000000616060 000000000000002c T CSoundFile::FineVibrato(_MODCHANNEL*, unsigned int)
0000000000616090 000000000000002c T CSoundFile::Panbrello(_MODCHANNEL*, unsigned int)
00000000006160c0 00000000000000cc T CSoundFile::PanningSlide(_MODCHANNEL*, unsigned int)
0000000000616190 000000000000004c T CSoundFile::FineVolumeUp(_MODCHANNEL*, unsigned int)
00000000006161e0 0000000000000044 T CSoundFile::FineVolumeDown(_MODCHANNEL*, unsigned int)
0000000000616230 00000000000000f8 T CSoundFile::VolumeSlide(_MODCHANNEL*, unsigned int)
0000000000616330 0000000000000030 T CSoundFile::Tremolo(_MODCHANNEL*, unsigned int)
0000000000616360 00000000000000b8 T CSoundFile::ChannelVolSlide(_MODCHANNEL*, unsigned int)
0000000000616420 0000000000000134 T CSoundFile::ExtendedChannelEffect(_MODCHANNEL*, unsigned int)
0000000000616560 0000000000000398 T CSoundFile::ProcessMidiMacro(unsigned int, char const*, unsigned int)
0000000000616900 00000000000000d8 T CSoundFile::DoFreqSlide(_MODCHANNEL*, int)
00000000006169e0 0000000000000070 T CSoundFile::PortamentoUp(_MODCHANNEL*, unsigned int)
0000000000616a50 0000000000000070 T CSoundFile::PortamentoDown(_MODCHANNEL*, unsigned int)
0000000000616ac0 000000000000003c T CSoundFile::NoteCut(unsigned int, unsigned int)
0000000000616b00 0000000000000104 T CSoundFile::KeyOff(unsigned int)
0000000000616c10 000000000000046c T CSoundFile::CheckNNA(unsigned int, unsigned int, int, bool)
0000000000617080 000000000000005c T CSoundFile::SetTempo(unsigned int)
00000000006170e0 0000000000000084 T CSoundFile::PatternLoop(_MODCHANNEL*, unsigned int)
0000000000617170 00000000000000c0 T CSoundFile::GlobalVolSlide(unsigned int)
0000000000617230 0000000000000118 T CSoundFile::IsSongFinished(unsigned int, unsigned int) const
0000000000617350 00000000000000cc T CSoundFile::SetSpeed(unsigned int)
0000000000617420 000000000000017c T CSoundFile::IsValidBackwardJump(unsigned int, unsigned int, unsigned int, unsigned int) const
00000000006175a0 00000000000001dc T CSoundFile::GetPeriodFromNote(unsigned int, int, unsigned int) const
0000000000617780 00000000000007c8 T CSoundFile::NoteChange(unsigned int, int, bool, bool)
0000000000617f50 00000000000002dc T CSoundFile::RetrigNote(unsigned int, unsigned int)
0000000000618230 000000000000027c T CSoundFile::ExtendedMODCommands(unsigned int, unsigned int)
00000000006184b0 000000000000048c T CSoundFile::ExtendedS3MCommands(unsigned int, unsigned int)
0000000000618940 0000000000000e20 T CSoundFile::ProcessEffects()
0000000000619760 000000000000011c T CSoundFile::GetNoteFromPeriod(unsigned int) const
0000000000619880 00000000000000c4 T CSoundFile::GetFreqFromPeriod(unsigned int, unsigned int, int) const
0000000000619950 0000000000000090 T CSoundFile::CutOffToFrequency(unsigned int, int) const
00000000006199e0 00000000000000ec T CSoundFile::SetupChannelFilter(_MODCHANNEL*, bool, int) const
0000000000619ad0 0000000000000528 T CSoundFile::InitializeDSP(bool)
000000000061a000 0000000000000554 T CSoundFile::ProcessStereoDSP(int)
000000000061a560 0000000000000060 T CSoundFile::SetReverbParameters(unsigned int, unsigned int)
000000000061a5c0 000000000000006c T CSoundFile::SetXBassParameters(unsigned int, unsigned int)
000000000061a630 0000000000000060 T CSoundFile::SetSurroundParameters(unsigned int, unsigned int)
000000000061a690 0000000000000088 T CSoundFile::SetWaveConfigEx(bool, bool, bool, bool, bool, bool, bool)
000000000061a720 0000000000000070 T Mono8BitMix(_MODCHANNEL*, int*, int*)
000000000061a790 000000000000006c T Mono16BitMix(_MODCHANNEL*, int*, int*)
000000000061a800 0000000000000084 T Mono8BitLinearMix(_MODCHANNEL*, int*, int*)
000000000061a890 0000000000000084 T Mono16BitLinearMix(_MODCHANNEL*, int*, int*)
000000000061a920 00000000000000c0 T Mono8BitSplineMix(_MODCHANNEL*, int*, int*)
000000000061a9e0 00000000000000c4 T Mono16BitSplineMix(_MODCHANNEL*, int*, int*)
000000000061aab0 0000000000000108 T Mono8BitFirFilterMix(_MODCHANNEL*, int*, int*)
000000000061abc0 0000000000000124 T Mono16BitFirFilterMix(_MODCHANNEL*, int*, int*)
000000000061acf0 0000000000000080 T Mono8BitRampMix(_MODCHANNEL*, int*, int*)
000000000061ad70 0000000000000084 T Mono16BitRampMix(_MODCHANNEL*, int*, int*)
000000000061ae00 0000000000000094 T Mono8BitLinearRampMix(_MODCHANNEL*, int*, int*)
000000000061aea0 000000000000009c T Mono16BitLinearRampMix(_MODCHANNEL*, int*, int*)
000000000061af40 00000000000000d0 T Mono8BitSplineRampMix(_MODCHANNEL*, int*, int*)
000000000061b010 00000000000000e0 T Mono16BitSplineRampMix(_MODCHANNEL*, int*, int*)
000000000061b0f0 0000000000000130 T Mono8BitFirFilterRampMix(_MODCHANNEL*, int*, int*)
000000000061b220 0000000000000140 T Mono16BitFirFilterRampMix(_MODCHANNEL*, int*, int*)
000000000061b360 000000000000006c T FastMono8BitMix(_MODCHANNEL*, int*, int*)
000000000061b3d0 0000000000000068 T FastMono16BitMix(_MODCHANNEL*, int*, int*)
000000000061b440 0000000000000080 T FastMono8BitLinearMix(_MODCHANNEL*, int*, int*)
000000000061b4c0 0000000000000080 T FastMono16BitLinearMix(_MODCHANNEL*, int*, int*)
000000000061b540 000000000000007c T FastMono8BitRampMix(_MODCHANNEL*, int*, int*)
000000000061b5c0 0000000000000080 T FastMono16BitRampMix(_MODCHANNEL*, int*, int*)
000000000061b640 0000000000000090 T FastMono8BitLinearRampMix(_MODCHANNEL*, int*, int*)
000000000061b6d0 0000000000000098 T FastMono16BitLinearRampMix(_MODCHANNEL*, int*, int*)
000000000061b770 0000000000000080 T Stereo8BitMix(_MODCHANNEL*, int*, int*)
000000000061b7f0 000000000000007c T Stereo16BitMix(_MODCHANNEL*, int*, int*)
000000000061b870 000000000000009c T Stereo8BitLinearMix(_MODCHANNEL*, int*, int*)
000000000061b910 00000000000000a8 T Stereo16BitLinearMix(_MODCHANNEL*, int*, int*)
000000000061b9c0 0000000000000110 T Stereo8BitSplineMix(_MODCHANNEL*, int*, int*)
000000000061bad0 0000000000000108 T Stereo16BitSplineMix(_MODCHANNEL*, int*, int*)
000000000061bbe0 00000000000001bc T Stereo8BitFirFilterMix(_MODCHANNEL*, int*, int*)
000000000061bda0 00000000000001b8 T Stereo16BitFirFilterMix(_MODCHANNEL*, int*, int*)
000000000061bf60 0000000000000090 T Stereo8BitRampMix(_MODCHANNEL*, int*, int*)
000000000061bff0 0000000000000094 T Stereo16BitRampMix(_MODCHANNEL*, int*, int*)
000000000061c090 00000000000000ac T Stereo8BitLinearRampMix(_MODCHANNEL*, int*, int*)
000000000061c140 00000000000000c0 T Stereo16BitLinearRampMix(_MODCHANNEL*, int*, int*)
000000000061c200 0000000000000130 T Stereo8BitSplineRampMix(_MODCHANNEL*, int*, int*)
000000000061c330 000000000000012c T Stereo16BitSplineRampMix(_MODCHANNEL*, int*, int*)
000000000061c460 00000000000001d8 T Stereo8BitFirFilterRampMix(_MODCHANNEL*, int*, int*)
000000000061c640 00000000000001cc T Stereo16BitFirFilterRampMix(_MODCHANNEL*, int*, int*)
000000000061c810 000000000000009c T FilterMono8BitMix(_MODCHANNEL*, int*, int*)
000000000061c8b0 000000000000009c T FilterMono16BitMix(_MODCHANNEL*, int*, int*)
000000000061c950 00000000000000b0 T FilterMono8BitLinearMix(_MODCHANNEL*, int*, int*)
000000000061ca00 00000000000000b4 T FilterMono16BitLinearMix(_MODCHANNEL*, int*, int*)
000000000061cac0 00000000000000ec T FilterMono8BitSplineMix(_MODCHANNEL*, int*, int*)
000000000061cbb0 00000000000000f4 T FilterMono16BitSplineMix(_MODCHANNEL*, int*, int*)
000000000061ccb0 0000000000000148 T FilterMono8BitFirFilterMix(_MODCHANNEL*, int*, int*)
000000000061ce00 000000000000015c T FilterMono16BitFirFilterMix(_MODCHANNEL*, int*, int*)
000000000061cf60 00000000000000b4 T FilterMono8BitRampMix(_MODCHANNEL*, int*, int*)
000000000061d020 00000000000000b4 T FilterMono16BitRampMix(_MODCHANNEL*, int*, int*)
000000000061d0e0 00000000000000c8 T FilterMono8BitLinearRampMix(_MODCHANNEL*, int*, int*)
000000000061d1b0 00000000000000c8 T FilterMono16BitLinearRampMix(_MODCHANNEL*, int*, int*)
000000000061d280 0000000000000104 T FilterMono8BitSplineRampMix(_MODCHANNEL*, int*, int*)
000000000061d390 0000000000000114 T FilterMono16BitSplineRampMix(_MODCHANNEL*, int*, int*)
000000000061d4b0 0000000000000168 T FilterMono8BitFirFilterRampMix(_MODCHANNEL*, int*, int*)
000000000061d620 0000000000000178 T FilterMono16BitFirFilterRampMix(_MODCHANNEL*, int*, int*)
000000000061d7a0 00000000000000d0 T FilterStereo8BitMix(_MODCHANNEL*, int*, int*)
000000000061d870 00000000000000cc T FilterStereo16BitMix(_MODCHANNEL*, int*, int*)
000000000061d940 00000000000000ec T FilterStereo8BitLinearMix(_MODCHANNEL*, int*, int*)
000000000061da30 00000000000000fc T FilterStereo16BitLinearMix(_MODCHANNEL*, int*, int*)
000000000061db30 0000000000000178 T FilterStereo8BitSplineMix(_MODCHANNEL*, int*, int*)
000000000061dcb0 0000000000000174 T FilterStereo16BitSplineMix(_MODCHANNEL*, int*, int*)
000000000061de30 0000000000000210 T FilterStereo8BitFirFilterMix(_MODCHANNEL*, int*, int*)
000000000061e040 0000000000000214 T FilterStereo16BitFirFilterMix(_MODCHANNEL*, int*, int*)
000000000061e260 00000000000000e8 T FilterStereo8BitRampMix(_MODCHANNEL*, int*, int*)
000000000061e350 00000000000000e4 T FilterStereo16BitRampMix(_MODCHANNEL*, int*, int*)
000000000061e440 0000000000000114 T FilterStereo8BitLinearRampMix(_MODCHANNEL*, int*, int*)
000000000061e560 0000000000000124 T FilterStereo16BitLinearRampMix(_MODCHANNEL*, int*, int*)
000000000061e690 0000000000000194 T FilterStereo8BitSplineRampMix(_MODCHANNEL*, int*, int*)
000000000061e830 000000000000018c T FilterStereo16BitSplineRampMix(_MODCHANNEL*, int*, int*)
000000000061e9c0 0000000000000224 T FilterStereo8BitFirFilterRampMix(_MODCHANNEL*, int*, int*)
000000000061ebf0 0000000000000224 T FilterStereo16BitFirFilterRampMix(_MODCHANNEL*, int*, int*)
000000000061ee20 00000000000001d4 t CzCUBICSPLINE::CzCUBICSPLINE()
000000000061ee20 00000000000001d4 T CzCUBICSPLINE::CzCUBICSPLINE()
000000000061f000 00000000000001c8 t CzWINDOWEDFIR::CzWINDOWEDFIR()
000000000061f000 00000000000001c8 T CzWINDOWEDFIR::CzWINDOWEDFIR()
000000000061f1d0 0000000000000084 T X86_Convert32To8(void*, int*, unsigned int, int*, int*)
000000000061f260 000000000000007c T X86_Convert32To16(void*, int*, unsigned int, int*, int*)
000000000061f2e0 000000000000008c T X86_Convert32To24(void*, int*, unsigned int, int*, int*)
000000000061f370 000000000000007c T X86_Convert32To32(void*, int*, unsigned int, int*, int*)
000000000061f3f0 0000000000000004 t X86_InterleaveFrontRear(int*, int*, unsigned int)
000000000061f400 000000000000003c t X86_MonoFromStereo(int*, unsigned int)
000000000061f440 000000000000007c t X86_StereoFill(int*, unsigned int, int*, int*)
000000000061f4c0 0000000000000078 t X86_EndChannelOfs(_MODCHANNEL*, int*, unsigned int)
000000000061f540 00000000000006c4 T CSoundFile::CreateStereoMix(int)
000000000061fc10 000000000000007c t MMCMPBITBUFFER::GetBits(unsigned int) [clone .part.0]
000000000061fc90 0000000000000070 t _PPBITBUFFER::GetBits(unsigned int)
000000000061fd00 00000000000004c0 t PP20_Unpack(unsigned char const**, unsigned int*)
00000000006201c0 000000000000079c t MMCMP_Unpack(unsigned char const**, unsigned int*)
0000000000620960 000000000000143c T CSoundFile::ReadXM(unsigned char const*, unsigned int)
0000000000621da0 0000000000000550 T CSoundFile::ReadWav(unsigned char const*, unsigned int)
00000000006222f0 0000000000000074 t get_fci(char const*, int*)
0000000000622370 00000000000004cc T CSoundFile::ReadUMX(unsigned char const*, unsigned int)
0000000000622840 00000000000006d8 T CSoundFile::ReadUlt(unsigned char const*, unsigned int)
0000000000622f20 0000000000000598 T CSoundFile::ReadSTM(unsigned char const*, unsigned int)
00000000006234c0 0000000000000124 T CSoundFile::S3MConvert(_MODCOMMAND*, bool) const
00000000006235f0 0000000000000898 T CSoundFile::ReadS3M(unsigned char const*, unsigned int)
0000000000623e90 00000000000004c0 T CSoundFile::ReadPTM(unsigned char const*, unsigned int)
0000000000624350 00000000000006a0 T CSoundFile::ReadOKT(unsigned char const*, unsigned int)
00000000006249f0 000000000000056c T CSoundFile::ReadMTM(unsigned char const*, unsigned int)
0000000000624f60 0000000000000190 T CSoundFile::ConvertModCommand(_MODCOMMAND*) const
00000000006250f0 0000000000000a38 T CSoundFile::ReadMod(unsigned char const*, unsigned int)
0000000000625b30 0000000000000330 t MedConvert(_MODCOMMAND*, tagMMD0SONGHEADER const*)
0000000000625e60 0000000000000d84 T CSoundFile::ReadMed(unsigned char const*, unsigned int)
0000000000626bf0 0000000000000238 t ConvertMDLCommand(_MODCOMMAND*, unsigned int, unsigned int)
0000000000626e30 0000000000000268 t UnpackMDLTrack(_MODCOMMAND*, unsigned int, unsigned int, unsigned int, unsigned char const*, unsigned int)
00000000006270a0 0000000000000f9c T CSoundFile::ReadMDL(unsigned char const*, unsigned int)
0000000000628040 0000000000000068 t MDLReadBits(unsigned int&, unsigned int&, unsigned char*&, signed char)
00000000006280b0 0000000000000508 T CSoundFile::ITInstrToMPT(void const*, _INSTRUMENTHEADER*, unsigned int)
00000000006285c0 000000000000007c t ITReadBits(unsigned int&, unsigned int&, unsigned char*&, signed char)
0000000000628640 000000000000023c t ITUnpack8Bit(signed char*, unsigned int, unsigned char*, unsigned int, bool)
0000000000628880 0000000000000230 t ITUnpack16Bit(signed char*, unsigned int, unsigned char*, unsigned int, bool)
0000000000628ab0 00000000000001d8 T CSoundFile::LoadMixPlugins(void const*, unsigned int)
0000000000628c90 000000000000108c T CSoundFile::ReadIT(unsigned char const*, unsigned int)
0000000000629d20 000000000000063c T CSoundFile::ReadFAR(unsigned char const*, unsigned int)
000000000062a360 0000000000000534 T CSoundFile::ReadDSM(unsigned char const*, unsigned int)
000000000062a8a0 0000000000000cd4 T CSoundFile::ReadDMF(unsigned char const*, unsigned int)
000000000062b580 00000000000001f4 t DMFNewNode(DMF_HTREE*)
000000000062b780 00000000000001d0 t DMFUnpack(unsigned char*, unsigned char*, unsigned char*, unsigned int)
000000000062b950 00000000000009f4 T CSoundFile::ReadDBM(unsigned char const*, unsigned int)
000000000062c350 000000000000090c T CSoundFile::ReadAMS2(unsigned char const*, unsigned int)
000000000062cc60 0000000000000764 T CSoundFile::ReadAMS(unsigned char const*, unsigned int)
000000000062d3d0 00000000000001c4 t AMSUnpack(char const*, unsigned int, char*, unsigned int, char)
000000000062d5a0 0000000000000274 t AMF_Unpack(_MODCOMMAND*, unsigned char const*, unsigned int, unsigned int)
000000000062d820 00000000000008c0 T CSoundFile::ReadAMF(unsigned char const*, unsigned int)
000000000062e0e0 00000000000005f4 T CSoundFile::Read669(unsigned char const*, unsigned int)
000000000062e6e0 00000000000000fc t ConvertMT2Command(CSoundFile*, _MODCOMMAND*, _MT2COMMAND const*)
000000000062e7e0 0000000000000d7c T CSoundFile::ReadMT2(unsigned char const*, unsigned int)
000000000062f560 0000000000000800 T CSoundFile::ReadPSM(unsigned char const*, unsigned int)
000000000062fd60 00000000000000f4 t abc_brokenrithm(char const*, int*, int*, int*, int)
000000000062fe60 0000000000000090 t abc_pattracktime(_ABCHANDLE*, unsigned int)
000000000062fef0 00000000000000e8 t abc_globalslide(_ABCHANDLE*, unsigned int, int)
000000000062ffe0 000000000000006c t abc_isvalidchar(char)
0000000000630050 0000000000000074 t abc_skip_word(char*)
00000000006300d0 0000000000000170 t abc_parse_decorations(_ABCHANDLE*, _ABCTRACK*, char const*)
0000000000630240 00000000000001c0 t abc_MIDI_gchord(char const*, _ABCHANDLE*)
0000000000630400 00000000000000c8 t abc_beat_vol(_ABCHANDLE*, int, int)
00000000006304d0 0000000000000078 t abc_MIDI_beatstring(_ABCHANDLE*, char const*)
0000000000630550 00000000000001cc t abc_substitute(_ABCHANDLE*, char*, char*)
0000000000630720 0000000000000070 t abc_message(char const*, char const*)
0000000000630790 00000000000002b0 t ABC_Key(char const*)
0000000000630a40 000000000000017c t abc_addchordname(char const*, int, int const*)
0000000000630bc0 00000000000001c8 t abc_partpat_to_orderlist(unsigned char (*) [2], char const*, _ABCHANDLE*, unsigned char**, int) [clone .constprop.0]
0000000000630d90 0000000000000144 t abc_extractkeyvalue(char*, unsigned long, char*, unsigned long, char const*) [clone .constprop.0]
0000000000630ee0 0000000000000138 t abc_new_umacro(_ABCHANDLE*, char const*)
0000000000631020 0000000000000750 t ABC_ReadPatterns(_MODCOMMAND**, unsigned short*, _ABCHANDLE*, int, int)
0000000000631770 000000000000009c t ABC_CleanupMacros(_ABCHANDLE*)
0000000000631810 0000000000000138 t abc_fgetbytes(MMFILE*, char*, unsigned int) [clone .part.0]
0000000000631950 0000000000000308 t abc_gets(_ABCHANDLE*, MMFILE*)
0000000000631c60 00000000000000f0 t abc_MIDI_beat(_ABCHANDLE*, char const*)
0000000000631d50 0000000000000098 t abc_MIDI_getnumber(char const*)
0000000000631df0 0000000000000098 t abc_MIDI_getprog(char const*)
0000000000631e90 00000000000000c8 t abc_add_event(_ABCHANDLE*, _ABCTRACK*, _ABCEVENT*) [clone .isra.0]
0000000000631f60 0000000000000080 t abc_add_partbreak(_ABCHANDLE*, _ABCTRACK*, unsigned int) [clone .isra.0]
0000000000631fe0 0000000000000090 t abc_add_tempo_event(_ABCHANDLE*, _ABCTRACK*, unsigned int, int) [clone .isra.0]
0000000000632070 0000000000000090 t abc_add_noteoff(_ABCHANDLE*, _ABCTRACK*, unsigned int) [clone .isra.0]
0000000000632100 00000000000001cc t abc_add_dronenote(_ABCHANDLE*, _ABCTRACK*, unsigned int, int, int) [clone .isra.0]
00000000006322d0 0000000000000084 t abc_add_setjumploop(_ABCHANDLE*, _ABCTRACK*, unsigned int, ABCEVENT_JUMPTYPE) [clone .isra.0]
0000000000632360 00000000000000bc t abc_add_sync(_ABCHANDLE*, _ABCTRACK*, unsigned int) [clone .isra.0]
0000000000632420 0000000000000080 t abc_add_tocoda(_ABCHANDLE*, _ABCTRACK*, unsigned int) [clone .isra.0]
00000000006324a0 0000000000000988 t abc_transpose(char const*)
0000000000632e30 0000000000000318 t abc_locate_track(_ABCHANDLE*, char const*, int)
0000000000633150 00000000000004e0 t abc_add_gchord(_ABCHANDLE*, unsigned int, unsigned int)
0000000000633630 0000000000000208 t abc_add_drum(_ABCHANDLE*, unsigned int, unsigned int)
0000000000633840 0000000000000034 t abc_check_track(_ABCHANDLE*, _ABCTRACK*) [clone .part.0]
0000000000633880 000000000000071c t abc_add_noteon(_ABCHANDLE*, int, char const*, unsigned int, char*, int, ABCEVENT_X_EFFECT, int)
0000000000633fa0 00000000000001a8 t abc_getexpr(char const*, int*)
0000000000634150 00000000000000d4 t abc_M_field(char const*, int*, int*)
0000000000634230 0000000000000124 t abc_notelen(char const*, int*, int*)
0000000000634360 00000000000002ec t abc_extract_tempo(char const*, int)
0000000000634650 00000000000004dc t abc_set_parts(char**, char*)
0000000000634b30 00000000000009dc t abc_song_to_parts(_ABCHANDLE*, char**, unsigned char (*) [2])
0000000000635510 0000000000001264 t abc_MIDI_command(_ABCHANDLE*, char*, char)
0000000000636780 00000000000001a8 T CSoundFile::TestABC(unsigned char const*, unsigned int)
0000000000636930 0000000000005a6c T CSoundFile::ReadABC(unsigned char const*, unsigned int)
000000000063c3a0 0000000000000070 t mid_message(char const*, char const*)
000000000063c410 0000000000000610 t MID_ReadPatterns(_MODCOMMAND**, unsigned short*, _MIDHANDLE*, int, int)
000000000063ca20 000000000000001c t mid_read_long(_MIDHANDLE*) [clone .isra.0]
000000000063ca40 0000000000000084 t mid_sync_track(_MIDTRACK*, unsigned int)
000000000063cad0 0000000000000114 t mid_add_event(_MIDHANDLE*, _MIDTRACK*, _MIDEVENT*) [clone .constprop.0]
000000000063cbf0 0000000000000258 t mid_locate_track(_MIDHANDLE*, int, int)
000000000063ce50 000000000000005c t mid_add_noteoff(_MIDHANDLE*, _MIDTRACK*)
000000000063ceb0 00000000000000a0 t mid_add_wheel(_MIDHANDLE*, _MIDTRACK*, int)
000000000063cf50 0000000000000064 T CSoundFile::TestMID(unsigned char const*, unsigned int)
000000000063cfc0 0000000000001db8 T CSoundFile::ReadMID(unsigned char const*, unsigned int)
000000000063ed80 00000000000000c8 t pat_sawtooth(int)
000000000063ee50 00000000000000ac t pat_setpat_attr(WaveHeader*, _MODINSTRUMENT*)
000000000063ef00 000000000000008c t mmreadUBYTES(unsigned char*, long, MMFILE*)
000000000063ef90 00000000000000ec t pat_build_path(char*, int)
000000000063f080 0000000000000330 t pat_setpat_inst(WaveHeader*, _INSTRUMENTHEADER*, int)
000000000063f3b0 0000000000000078 t pat_square(int)
000000000063f430 0000000000000018 t pat_sinus(int)
000000000063f450 0000000000000178 t pat_read_waveheader(__sFILE*, WaveHeader*, int) [clone .constprop.0]
000000000063f5d0 00000000000002b4 t pat_readpat(int, char*, int)
000000000063f890 00000000000000f4 t dec_pat_Decompress8Bit(short*, int, int) [clone .isra.0]
000000000063f990 00000000000000a8 t pat_readpat_attr(int, WaveHeader*, int) [clone .constprop.0]
000000000063fa40 0000000000000294 t PATsample(CSoundFile*, _MODINSTRUMENT*, int, int)
000000000063fce0 0000000000000140 t pat_get_waveheader(MMFILE*, WaveHeader*, int)
000000000063fe20 0000000000000050 t pat_resetsmp
000000000063fe70 0000000000000024 t pat_smptogm
000000000063fea0 000000000000005c t pat_gmtosmp
000000000063ff00 0000000000000024 t pat_smplooped
000000000063ff30 0000000000000058 t pat_gm_name
000000000063ff90 0000000000000024 t pat_gm_drumnr
000000000063ffc0 0000000000000088 t pat_gm_drumnote
0000000000640050 0000000000000600 t pat_init_patnames
0000000000640650 0000000000000080 T CSoundFile::TestPAT(unsigned char const*, unsigned int)
00000000006406d0 0000000000000008 t pat_modnote
00000000006406e0 00000000000002fc t PAT_Load_Instruments
00000000006409e0 0000000000000800 T CSoundFile::ReadPAT(unsigned char const*, unsigned int)
00000000006411e0 0000000000000080 T mutexLock
0000000000641260 0000000000000068 T mutexUnlock
00000000006412d0 000000000000001c T mutexIsLockedByCurrentThread
00000000006412f0 000000000000004c T rmutexLock
0000000000641340 000000000000001c T rmutexUnlock
0000000000641360 0000000000000018 t _appletInfiniteSleepLoop
0000000000641380 0000000000000108 t _appletCmdGetSession
0000000000641490 00000000000000cc t _appletCmdInU8NoOut
0000000000641560 0000000000000104 t _appletGetLaunchReason
0000000000641670 00000000000000e4 t _appletSetFocusHandlingMode
0000000000641760 00000000000000d4 t _appletCmdInSession
0000000000641840 00000000000000cc t _appletCmdInU32NoOut
0000000000641910 000000000000011c t _appletCreateLibraryApplet
0000000000641a30 000000000000010c t _appletCmdGetSessionInU64
0000000000641b40 0000000000000138 t _appletGetSessionProxy.constprop.0
0000000000641c80 0000000000000154 t _appletOpenLibraryAppletProxy.constprop.0
0000000000641de0 00000000000000d0 t _appletCmdGetHandle.constprop.0.isra.0
0000000000641eb0 00000000000001c4 t _appletStorageAccessorRW.isra.0
0000000000642080 00000000000000f8 t _appletStorageRW.part.0
0000000000642180 00000000000000d4 t _appletCmdNoInOutU8.isra.0
0000000000642260 00000000000000d4 t _appletCmdNoInOutU32.isra.0
0000000000642340 00000000000000d4 t _appletCmdNoInOutU64.isra.0
0000000000642420 00000000000000c0 t _appletCmdNoIO.isra.0
00000000006424e0 0000000000000010 T appletGetAppletType
00000000006424f0 000000000000000c T appletGetThemeColorType
0000000000642500 0000000000000108 T appletSetFocusHandlingMode
0000000000642610 000000000000005c T appletSetCpuBoostMode
0000000000642670 000000000000002c T appletCreateManagedDisplayLayer
00000000006426a0 000000000000000c T appletGetAppletResourceUserId
00000000006426b0 00000000000000f4 t _appletGetIndirectLayerConsumerHandle
00000000006427b0 0000000000000088 t _appletHolderCreateState
0000000000642840 00000000000000c4 T appletCreateLibraryApplet
0000000000642910 00000000000000b0 T appletHolderClose
00000000006429c0 0000000000000010 T appletHolderActive
00000000006429d0 00000000000000b8 T appletHolderStart
0000000000642a90 0000000000000164 T appletHolderJump
0000000000642c00 0000000000000084 T appletHolderJoin
0000000000642c90 0000000000000024 T appletHolderCheckFinished
0000000000642cc0 0000000000000008 T appletHolderGetExitReason
0000000000642cd0 0000000000000060 T appletHolderPresetLibraryAppletGpuTimeSliceZero
0000000000642d30 0000000000000028 T appletHolderPopOutData
0000000000642d60 0000000000000028 T appletHolderPopInteractiveOutData
0000000000642d90 0000000000000024 T appletHolderGetLibraryAppletInfo
0000000000642dc0 000000000000002c T appletCreateStorage
0000000000642df0 0000000000000090 T appletStorageClose
0000000000642e80 000000000000004c T appletHolderPushInData
0000000000642ed0 000000000000004c T appletHolderPushInteractiveInData
0000000000642f20 0000000000000008 T appletStorageCloseTmem
0000000000642f30 00000000000000d8 T appletStorageGetSize
0000000000643010 0000000000000018 T appletStorageWrite
0000000000643030 0000000000000018 T appletStorageRead
0000000000643050 0000000000000090 T appletNotifyRunning
00000000006430e0 000000000000008c T appletSetGamePlayRecordingState
0000000000643170 0000000000000ad4 t _appletCleanup
0000000000643c50 0000000000000044 T appletExit
0000000000643ca0 0000000000000040 T appletGetLibraryAppletInfo
0000000000643ce0 0000000000000a98 T appletInitialize
0000000000644780 0000000000000024 t _appletExitProcess
00000000006447b0 000000000000000c T appletGetOperationMode
00000000006447c0 0000000000000074 T appletGetMessage
0000000000644840 000000000000027c T appletProcessMessage
0000000000644ac0 0000000000000034 T appletMainLoop
0000000000644b00 0000000000000084 t _audrenCleanup
0000000000644b90 00000000000000c0 t _audrenCmdNoIO.constprop.0
0000000000644c50 00000000000004cc T audrenInitialize
0000000000645120 0000000000000044 T audrenExit
0000000000645170 0000000000000010 T audrenWaitFrame
0000000000645180 0000000000000330 T audrenRequestUpdateAudioRenderer
00000000006454b0 0000000000000008 T audrenStartAudioRenderer
00000000006454c0 00000000000001c0 t _fatalCmd
0000000000645680 000000000000000c T fatalThrowWithPolicy
0000000000645690 0000000000000014 T fatalThrow
00000000006456b0 0000000000000108 t _hidCleanup
00000000006457c0 00000000000000d8 t _hidCmdInAruidNoOut
00000000006458a0 00000000000000e4 t _hidCmdInU32AruidNoOut
0000000000645990 00000000000000e4 t _hidCmdInU64AruidNoOut
0000000000645a80 00000000000001a4 t _hidGetStates
0000000000645c30 00000000000000f4 t _hidCmdInAruidOutU64.constprop.0
0000000000645d30 00000000000000e8 t _hidCmdInAruidOutU32.constprop.0
0000000000645e20 00000000000000c0 t _hidCmdInU32NoOut.constprop.0
0000000000645ee0 0000000000000100 t _hidCmdGetSession.constprop.0
0000000000645fe0 0000000000000114 t _hidCreateAppletResource.constprop.0
0000000000646100 00000000000000c8 t _hidCmdGetHandle.constprop.0
00000000006461d0 00000000000000dc T hidInitialize
00000000006462b0 0000000000000044 T hidExit
0000000000646300 000000000000000c T hidGetSharedmemAddr
0000000000646310 0000000000000090 T hidGetNpadStyleSet
00000000006463a0 00000000000000a8 T hidGetNpadDeviceType
0000000000646450 0000000000000020 T hidInitializeTouchScreen
0000000000646470 0000000000000088 T hidGetTouchScreenStates
0000000000646500 0000000000000020 T hidInitializeMouse
0000000000646520 0000000000000058 T hidGetMouseStates
0000000000646580 0000000000000020 T hidInitializeKeyboard
00000000006465a0 0000000000000058 T hidGetKeyboardStates
0000000000646600 000000000000006c T hidInitializeNpad
0000000000646670 00000000000000a8 T hidGetNpadStatesFullKey
0000000000646720 00000000000000a8 T hidGetNpadStatesHandheld
00000000006467d0 00000000000000a8 T hidGetNpadStatesJoyDual
0000000000646880 00000000000000a8 T hidGetNpadStatesJoyLeft
0000000000646930 00000000000000a8 T hidGetNpadStatesJoyRight
00000000006469e0 0000000000000158 T hidGetNpadStatesGc
0000000000646b40 00000000000000ac T hidGetNpadStatesSystemExt
0000000000646bf0 0000000000000008 T hidSetSupportedNpadStyleSet
0000000000646c00 000000000000003c T hidGetSupportedNpadStyleSet
0000000000646c40 0000000000000100 T hidSetSupportedNpadIdType
0000000000646d40 000000000000000c T hidSetNpadJoyHoldType
0000000000646d50 0000000000000040 T hidGetNpadJoyHoldType
0000000000646d90 000000000000020c T hidInitializeVibrationDevices
0000000000646fa0 0000000000000124 T hidSendVibrationValues
00000000006470d0 00000000000000d0 t _nvSetClientPID
00000000006471a0 00000000000000c8 t _nvCleanup
0000000000647270 00000000000000d8 t _nvCmdInitialize.constprop.0
0000000000647350 000000000000001c W __nx_nv_create_tmem
0000000000647370 00000000000002d8 T nvInitialize
0000000000647650 0000000000000044 T nvExit
00000000006476a0 00000000000000f4 T nvConvertError
00000000006477a0 0000000000000118 T nvOpen
00000000006478c0 00000000000002f8 T nvIoctl
0000000000647bc0 00000000000003cc T nvIoctl2
0000000000647f90 00000000000000d8 T nvClose
0000000000648070 0000000000000110 T nvQueryEvent
0000000000648180 0000000000000068 t _psmCleanup
00000000006481f0 0000000000000098 T psmInitialize
0000000000648290 0000000000000044 T psmExit
00000000006482e0 00000000000000d0 t _smCmifCmdInPid
00000000006483b0 0000000000000068 t _smCleanup
0000000000648420 0000000000000048 T smAddOverrideHandle
0000000000648470 0000000000000054 T smGetServiceOverride
00000000006484d0 00000000000001bc T smInitialize
0000000000648690 0000000000000044 T smExit
00000000006486e0 00000000000000d0 T smGetServiceOriginal
00000000006487b0 0000000000000120 T smGetServiceWrapper
00000000006488d0 0000000000000044 T nvAddressSpaceClose
0000000000648920 0000000000000088 T nvAddressSpaceCreate
00000000006489b0 0000000000000044 T nvAddressSpaceMap
0000000000648a00 0000000000000008 T nvAddressSpaceUnmap
0000000000648a10 000000000000007c t _nvFenceCleanup
0000000000648a90 0000000000000098 T nvFenceInit
0000000000648b30 0000000000000044 T nvFenceExit
0000000000648b80 0000000000000240 T nvFenceWait
0000000000648dc0 0000000000000074 T nvMultiFenceWait
0000000000648e40 0000000000000130 T nvGpuInit
0000000000648f70 000000000000006c T nvGpuExit
0000000000648fe0 000000000000000c T nvGpuGetCharacteristics
0000000000648ff0 000000000000000c T nvGpuGetZcullCtxSize
0000000000649000 0000000000000064 T nvGpuChannelClose
0000000000649070 000000000000010c T nvGpuChannelCreate
0000000000649180 000000000000000c T nvGpuChannelZcullBind
0000000000649190 00000000000000f8 T nvGpuChannelKickoff
0000000000649290 00000000000000b8 T nvGpuChannelAppendEntry
0000000000649350 00000000000000b4 T nvMapInit
0000000000649410 000000000000006c T nvMapExit
0000000000649480 000000000000000c T nvMapGetFd
0000000000649490 0000000000000080 T nvMapClose
0000000000649510 0000000000000154 T nvMapCreate
0000000000649670 000000000000009c T nvMapLoadRemote
0000000000649710 0000000000000028 T nvioctlChannel_SetNvmapFd
0000000000649740 00000000000000c4 T nvioctlChannel_SubmitGpfifo
0000000000649810 000000000000005c T nvioctlChannel_KickoffPb
0000000000649870 0000000000000058 T nvioctlChannel_AllocObjCtx
00000000006498d0 0000000000000030 T nvioctlChannel_ZCullBind
0000000000649900 0000000000000030 T nvioctlChannel_SetErrorNotifier
0000000000649930 0000000000000028 T nvioctlChannel_SetPriority
0000000000649960 0000000000000058 T nvioctlChannel_AllocGpfifoEx2
00000000006499c0 0000000000000028 T nvioctlNvhostAsGpu_BindChannel
00000000006499f0 0000000000000054 T nvioctlNvhostAsGpu_MapBufferEx
0000000000649a50 0000000000000028 T nvioctlNvhostAsGpu_UnmapBuffer
0000000000649a80 0000000000000044 T nvioctlNvhostAsGpu_InitializeEx
0000000000649ad0 0000000000000028 T nvioctlNvhostCtrl_EventSignal
0000000000649b00 0000000000000044 T nvioctlNvhostCtrl_EventWait
0000000000649b50 0000000000000030 T nvioctlNvhostCtrl_EventWaitAsync
0000000000649b80 0000000000000028 T nvioctlNvhostCtrl_EventRegister
0000000000649bb0 0000000000000028 T nvioctlNvhostCtrl_EventUnregister
0000000000649be0 000000000000003c T nvioctlNvhostCtrlGpu_ZCullGetCtxSize
0000000000649c20 0000000000000050 T nvioctlNvhostCtrlGpu_ZCullGetInfo
0000000000649c70 000000000000008c T nvioctlNvhostCtrlGpu_GetCharacteristics
0000000000649d00 000000000000007c T nvioctlNvhostCtrlGpu_GetTpcMasks
0000000000649d80 0000000000000040 T nvioctlNvmap_Create
0000000000649dc0 0000000000000040 T nvioctlNvmap_FromId
0000000000649e00 0000000000000038 T nvioctlNvmap_Alloc
0000000000649e40 0000000000000034 T nvioctlNvmap_Free
0000000000649e80 0000000000000048 T nvioctlNvmap_Param
0000000000649ed0 0000000000000040 T nvioctlNvmap_GetId
0000000000649f10 000000000000000c T nwindowGetDefault
0000000000649f20 00000000000000b0 T __nx_win_init
0000000000649fd0 0000000000000034 T __nx_win_exit
000000000064a010 0000000000000024 T nwindowIsValid
000000000064a040 000000000000007c T nwindowClose
000000000064a0c0 00000000000000f4 T nwindowCreate
000000000064a1c0 0000000000000034 T nwindowCreateFromLayer
000000000064a200 0000000000000090 T nwindowGetDimensions
000000000064a290 0000000000000084 T nwindowSetDimensions
000000000064a320 0000000000000040 T nwindowSetSwapInterval
000000000064a360 000000000000018c T nwindowConfigureBuffer
000000000064a4f0 00000000000001e0 T nwindowDequeueBuffer
000000000064a6d0 00000000000000c8 T nwindowCancelBuffer
000000000064a7a0 000000000000013c T nwindowQueueBuffer
000000000064a8e0 0000000000000094 T nwindowReleaseBuffers
000000000064a980 0000000000000388 T audrvCreate
000000000064ad10 0000000000000138 T audrvUpdate
000000000064ae50 000000000000004c T audrvClose
000000000064aea0 000000000000005c T audrvMemPoolAdd
000000000064af00 000000000000007c T audrvMemPoolAttach
000000000064af80 00000000000000c8 T audrvDeviceSinkAdd
000000000064b050 00000000000000b4 t _audrvVoiceQueueWaveBufs
000000000064b110 00000000000000e8 T audrvVoiceDrop
000000000064b200 00000000000001bc T audrvVoiceInit
000000000064b3c0 000000000000003c T audrvVoiceIsPlaying
000000000064b400 00000000000000a8 T audrvVoiceAddWaveBuf
000000000064b4b0 00000000000000c0 T _audrvVoiceUpdate
000000000064b570 0000000000000174 t _hidLaShow.constprop.0
000000000064b6f0 0000000000000128 t _hidLaShowControllerSupportCore
000000000064b820 0000000000000034 T hidLaCreateControllerSupportArg
000000000064b860 00000000000000b0 T hidLaShowControllerSupportForSystem
000000000064b910 0000000000000040 T libappletArgsCreate
000000000064b950 0000000000000008 T libappletArgsSetPlayStartupSound
000000000064b960 0000000000000068 T libappletCreateWriteStorage
000000000064b9d0 0000000000000080 T libappletReadStorage
000000000064ba50 0000000000000048 T libappletArgsPush
000000000064baa0 0000000000000038 T libappletPushInData
000000000064bae0 000000000000006c T libappletPopOutData
000000000064bb50 0000000000000064 T libappletStart
000000000064bbc0 00000000000000b4 t _swkbdInitVersion
000000000064bc80 00000000000000e0 t _swkbdSendRequest
000000000064bd60 0000000000000104 t _swkbdInlineLaunch
000000000064be70 0000000000000408 t _swkbdGetReplies
000000000064c280 0000000000000134 T swkbdInlineClose
000000000064c3c0 0000000000000024 T swkbdInlineLaunchForLibraryApplet
000000000064c3f0 0000000000000008 T swkbdInlineSetDecidedCancelCallback
000000000064c400 0000000000000008 T swkbdInlineSetDecidedEnterCallback
000000000064c410 00000000000000ec T swkbdInlineAppearEx
000000000064c500 0000000000000008 T swkbdInlineAppear
000000000064c510 0000000000000018 T swkbdInlineDisappear
000000000064c530 0000000000000030 T swkbdInlineMakeAppearArg
000000000064c560 000000000000003c T swkbdInlineAppearArgSetOkButtonText
000000000064c5a0 0000000000000060 T swkbdInlineSetInputText
000000000064c600 0000000000000014 T swkbdInlineSetCursorPos
000000000064c620 0000000000000024 T swkbdInlineSetUtf8Mode
000000000064c650 0000000000000114 T swkbdInlineCreate
000000000064c770 0000000000000024 T swkbdInlineSetInputModeFadeType
000000000064c7a0 0000000000000030 T swkbdInlineSetFooterBgAlpha
000000000064c7d0 00000000000000d0 T swkbdInlineUpdate
000000000064c8a0 0000000000000004 W __libnx_alloc
000000000064c8b0 0000000000000014 W __libnx_aligned_alloc
000000000064c8d0 0000000000000004 W __libnx_free
000000000064c8e0 000000000000001c W diagAbortWithResult
000000000064c900 0000000000000208 T envSetup
000000000064cb10 0000000000000020 T envGetMainThreadHandle
000000000064cb30 000000000000000c T envIsNso
000000000064cb40 0000000000000014 T envHasHeapOverride
000000000064cb60 000000000000000c T envGetHeapOverrideAddr
000000000064cb70 000000000000000c T envGetHeapOverrideSize
000000000064cb80 0000000000000014 T envHasArgv
000000000064cba0 000000000000000c T envGetArgv
000000000064cbb0 000000000000000c T envGetExitFuncPtr
000000000064cbc0 000000000000000c T envSetExitFuncPtr
000000000064cbd0 000000000000000c T envHasRandomSeed
000000000064cbe0 0000000000000010 T envGetRandomSeed
000000000064cbf0 0000000000000014 T hosversionGet
000000000064cc10 0000000000000010 T hosversionSet
000000000064cc20 000000000000009c T padConfigureInput
000000000064ccc0 0000000000000024 T padInitializeWithMask
000000000064ccf0 00000000000002a8 T padUpdate
000000000064cfa0 0000000000000008 t romfs_close
000000000064cfb0 0000000000000088 t romfs_seek
000000000064d040 000000000000001c t romfs_dirreset
000000000064d060 0000000000000100 t fillDir
000000000064d160 00000000000002b0 t romfs_dirnext
000000000064d410 0000000000000118 t searchForDir
000000000064d530 0000000000000118 t searchForFile
000000000064d650 0000000000000164 t _romfs_read_safe
000000000064d7c0 00000000000000b8 t _romfs_read
000000000064d880 0000000000000084 t romfs_read
000000000064d910 00000000000000b4 t romfs_free
000000000064d9d0 00000000000001f4 t navigateToDir.constprop.0
000000000064dbd0 00000000000000f0 t romfs_open
000000000064dcc0 0000000000000190 t romfs_stat
000000000064de50 0000000000000054 t romfs_chdir
000000000064deb0 0000000000000084 t romfs_diropen
000000000064df40 0000000000000008 t romfs_dirclose
000000000064df50 000000000000017c t romfsFindMount
000000000064e0d0 000000000000006c t romfs_fstat
000000000064e140 00000000000001b4 t romfsMountCommon
000000000064e300 0000000000000068 T romfsMountFromFile
000000000064e370 000000000000006c T romfsMountFromStorage
000000000064e3e0 0000000000000038 T romfsMountFromCurrentProcess
000000000064e420 00000000000001a8 T romfsMountSelf
000000000064e5d0 00000000000000ac T romfsUnmount
000000000064e680 000000000000007c t _socketGetFd
000000000064e700 00000000000000a0 t _socketParseBsdResult.part.0
000000000064e7a0 00000000000000d0 T fcntl
000000000064e870 0000000000000140 T utf16_to_utf8
000000000064e9b0 000000000000010c T utf8_to_utf16
000000000064eabc T armDCacheFlush
000000000064eaec t armDCacheFlush_L0
000000000064eb08 T svcSetHeapSize
000000000064eb1c T svcSetMemoryPermission
000000000064eb24 T svcSetMemoryAttribute
000000000064eb2c T svcMapMemory
000000000064eb34 T svcUnmapMemory
000000000064eb3c T svcQueryMemory
000000000064eb50 T svcExitProcess
000000000064eb58 T svcCreateThread
000000000064eb6c T svcStartThread
000000000064eb74 T svcExitThread
000000000064eb7c T svcSleepThread
000000000064eb84 T svcSetThreadPriority
000000000064eb8c T svcSetThreadCoreMask
000000000064eb94 T svcMapSharedMemory
000000000064eb9c T svcUnmapSharedMemory
000000000064eba4 T svcCreateTransferMemory
000000000064ebb8 T svcCloseHandle
000000000064ebc0 T svcResetSignal
000000000064ebc8 T svcWaitSynchronization
000000000064ebdc T svcArbitrateLock
000000000064ebe4 T svcArbitrateUnlock
000000000064ebec T svcWaitProcessWideKeyAtomic
000000000064ebf4 T svcSignalProcessWideKey
000000000064ebfc T svcConnectToNamedPort
000000000064ec10 T svcSendSyncRequest
000000000064ec18 T svcBreak
000000000064ec20 T svcOutputDebugString
000000000064ec28 T svcReturnFromException
000000000064ec30 T svcGetInfo
000000000064ec44 T svcUnmapTransferMemory
000000000064ec4c T __aarch64_read_tp
000000000064ec60 000000000000000c T eventLoadRemote
000000000064ec70 0000000000000038 T eventWait
000000000064ecb0 0000000000000050 T eventClose
000000000064ed00 0000000000000014 T shmemLoadRemote
000000000064ed20 0000000000000088 T shmemMap
000000000064edb0 0000000000000034 T shmemUnmap
000000000064edf0 0000000000000044 T shmemClose
000000000064ee40 00000000000000a8 T tmemCreate
000000000064eef0 0000000000000034 T tmemUnmap
000000000064ef30 0000000000000038 T tmemCloseHandle
000000000064ef70 00000000000000c8 T tmemWaitForPermission
000000000064f040 0000000000000054 T tmemClose
000000000064f0a0 0000000000000064 t _memregionInitWithInfo
000000000064f110 0000000000000004 W __libnx_virtmem_rng
000000000064f120 0000000000000164 t _memregionFindRandom
000000000064f290 0000000000000140 T virtmemSetup
000000000064f3d0 000000000000000c T virtmemLock
000000000064f3e0 000000000000000c T virtmemUnlock
000000000064f3f0 0000000000000050 T virtmemFindAslr
000000000064f440 0000000000000050 T virtmemFindStack
000000000064f490 000000000000056c T waitObjects
000000000064fa00 0000000000000108 T waitHandles
000000000064fb10 00000000000000c0 t _apmCleanup
000000000064fbd0 00000000000000fc t _apmCmdGetSession.constprop.0
000000000064fcd0 00000000000000a0 T apmInitialize
000000000064fd70 0000000000000044 T apmExit
000000000064fdc0 00000000000000c8 T apmSetPerformanceConfiguration
000000000064fe90 000000000000017c T bsdFcntl
0000000000650010 00000000000000b4 t _fsCleanup
00000000006500d0 00000000000001ac t _fsCmdNoIO
0000000000650280 00000000000001d4 t _fsFsCmdWithInPath
0000000000650460 00000000000001f0 t _fsFsCmdWithTwoInPaths
0000000000650650 000000000000026c t _fsFsOpenCommon
00000000006508c0 00000000000001e8 t _fsFsCmdWithInPathAndOutU64
0000000000650ab0 00000000000000f4 t _fsObjectClose
0000000000650bb0 000000000000017c t _fsCmdGetSession.constprop.0
0000000000650d30 00000000000002f8 T fsInitialize
0000000000651030 0000000000000044 T fsExit
0000000000651080 0000000000000008 T fsOpenSdCardFileSystem
0000000000651090 0000000000000008 T fsOpenDataStorageByCurrentProcess
00000000006510a0 00000000000001e4 T fsFsCreateFile
0000000000651290 0000000000000008 T fsFsDeleteFile
00000000006512a0 0000000000000008 T fsFsCreateDirectory
00000000006512b0 0000000000000008 T fsFsDeleteDirectory
00000000006512c0 0000000000000008 T fsFsRenameFile
00000000006512d0 0000000000000008 T fsFsRenameDirectory
00000000006512e0 00000000000001e8 T fsFsGetEntryType
00000000006514d0 0000000000000008 T fsFsOpenFile
00000000006514e0 0000000000000008 T fsFsOpenDirectory
00000000006514f0 0000000000000008 T fsFsGetFreeSpace
0000000000651500 0000000000000008 T fsFsGetTotalSpace
0000000000651510 0000000000000228 T fsFsGetFileTimeStampRaw
0000000000651740 0000000000000004 T fsFsClose
0000000000651750 0000000000000210 T fsFileRead
0000000000651960 00000000000001f8 T fsFileWrite
0000000000651b60 0000000000000008 T fsFileFlush
0000000000651b70 00000000000001b8 T fsFileSetSize
0000000000651b70 00000000000001b8 t fsFileSetSize.localalias
0000000000651d30 00000000000001c0 T fsFileGetSize
0000000000651d30 00000000000001c0 t fsFileGetSize.localalias
0000000000651ef0 0000000000000004 T fsFileClose
0000000000651f00 0000000000000004 T fsDirClose
0000000000651f10 00000000000001f8 T fsDirRead
0000000000652110 00000000000001ec T fsStorageRead
0000000000652300 0000000000000004 T fsStorageClose
0000000000652310 00000000000001dc t _viCleanup
00000000006524f0 0000000000000100 t _viCmdGetSessionNoParams.constprop.0
00000000006525f0 00000000000000fc t _viCmdGetSession.constprop.0
00000000006526f0 0000000000000284 T viInitialize
0000000000652980 0000000000000044 T viExit
00000000006529d0 000000000000000c T viGetSession_IHOSBinderDriverRelay
00000000006529e0 0000000000000118 T viOpenDisplay
0000000000652b00 00000000000000f4 T viCloseDisplay
0000000000652c00 00000000000000fc T viCloseLayer
0000000000652d00 0000000000000374 T viCreateLayer
0000000000653080 00000000000000d8 T viSetLayerScalingMode
0000000000653160 0000000000000044 T nvChannelClose
00000000006531b0 0000000000000070 T nvChannelCreate
0000000000653220 0000000000000008 T nvChannelSetPriority
0000000000653230 000000000000001c T binderCreate
0000000000653250 0000000000000368 T binderTransactParcel
00000000006535c0 00000000000000e8 T binderConvertErrorCode
00000000006536b0 0000000000000128 T binderAdjustRefcount
00000000006537e0 0000000000000098 T binderInitSession
0000000000653880 0000000000000068 T binderClose
00000000006538f0 000000000000015c T binderGetNativeHandle
0000000000653a50 00000000000000d8 T bqRequestBuffer
0000000000653b30 0000000000000160 T bqDequeueBuffer
0000000000653c90 00000000000000dc T bqQueueBuffer
0000000000653d70 0000000000000094 T bqCancelBuffer
0000000000653e10 00000000000000e4 T bqConnect
0000000000653f00 000000000000009c T bqDisconnect
0000000000653fa0 000000000000017c T bqSetPreallocatedBuffer
0000000000654120 0000000000000030 T parcelCreate
0000000000654150 0000000000000198 T parcelTransact
00000000006542f0 0000000000000088 T parcelWriteData
0000000000654380 0000000000000098 T parcelReadData
0000000000654420 0000000000000020 T parcelWriteInt32
0000000000654440 0000000000000020 T parcelWriteUInt32
0000000000654460 000000000000007c T parcelWriteString16
00000000006544e0 0000000000000030 T parcelWriteInterfaceToken
0000000000654510 0000000000000024 T parcelReadInt32
0000000000654540 0000000000000068 T parcelReadFlattenedObject
00000000006545b0 000000000000004c T parcelWriteFlattenedObject
0000000000654600 0000000000000340 W argvSetup
0000000000654940 0000000000000168 T __nx_dynamic
0000000000654ab0 00000000000000d4 W __libnx_initheap
0000000000654b90 00000000000000ec W __appInit
0000000000654c80 0000000000000044 W __appExit
0000000000654cd0 000000000000002c W __libnx_init
0000000000654d00 000000000000001c W __libnx_exit
0000000000654d20 000000000000001c T __syscall_exit
0000000000654d40 0000000000000030 T __syscall_getreent
0000000000654d70 0000000000000004 T __syscall_lock_acquire
0000000000654d80 0000000000000004 T __syscall_lock_release
0000000000654d90 0000000000000004 T __syscall_lock_acquire_recursive
0000000000654da0 0000000000000004 T __syscall_lock_release_recursive
0000000000654db0 000000000000001c T __syscall_cond_signal
0000000000654dd0 000000000000001c T __syscall_cond_broadcast
0000000000654df0 000000000000003c T __syscall_cond_wait
0000000000654e30 0000000000000068 T __syscall_cond_wait_recursive
0000000000654ea0 0000000000000014 T __syscall_thread_self
0000000000654ec0 000000000000002c T __syscall_thread_exit
0000000000654ef0 0000000000000058 t __thread_entry
0000000000654f50 000000000000015c T __syscall_thread_create
00000000006550b0 0000000000000058 T __syscall_thread_join
0000000000655110 0000000000000044 T __syscall_tls_create
0000000000655160 0000000000000018 T __syscall_tls_set
0000000000655180 0000000000000004 T __syscall_tls_get
0000000000655190 0000000000000018 T __syscall_tls_delete
00000000006551b0 0000000000000238 T __libnx_init_time
00000000006553f0 00000000000000e8 T __syscall_clock_gettime
00000000006554e0 000000000000008c T __syscall_gettod_r
0000000000655570 000000000000009c T newlibSetup
0000000000655610 00000000000000c4 T nxlinkSetup
00000000006556e0 000000000000002c T _convert_errno
0000000000655710 0000000000000014 t fsdev_link
0000000000655730 0000000000000014 t fsdev_dirreset
0000000000655750 0000000000000014 t fsdev_chmod
0000000000655770 0000000000000018 t error_cmp
0000000000655790 0000000000000020 t fsdev_dirclose
00000000006557b0 000000000000001c t fsdev_close
00000000006557d0 000000000000007c t fsdev_converttimetoutc
0000000000655850 00000000000000dc t fsdevFindDevice.part.0
0000000000655930 00000000000001d4 t fsdev_fixpath
0000000000655b10 00000000000000a0 t _fsdevUnmountDeviceStruct.part.0
0000000000655bb0 0000000000000014 t fsdev_fchmod
0000000000655bd0 00000000000000fc t fsdev_diropen
0000000000655cd0 0000000000000100 t fsdev_statvfs
0000000000655dd0 000000000000007c t fsdev_fsync
0000000000655e50 00000000000000f4 t fsdev_fstat
0000000000655f50 0000000000000094 t fsdev_ftruncate
0000000000655ff0 00000000000001fc t fsdev_stat
00000000006561f0 000000000000014c t fsdev_rename
0000000000656340 0000000000000140 t fsdev_chdir
0000000000656480 00000000000000a4 t fsdev_rmdir
0000000000656530 00000000000000a4 t fsdev_mkdir
00000000006565e0 00000000000000a4 t fsdev_unlink
0000000000656690 0000000000000144 t fsdev_write_safe
00000000006567e0 000000000000013c t fsdev_read_safe
0000000000656920 0000000000000100 t fsdev_read
0000000000656a20 00000000000001cc t fsdev_dirnext
0000000000656bf0 0000000000000124 t fsdev_write
0000000000656d20 00000000000000e0 t fsdev_seek
0000000000656e00 0000000000000250 t fsdev_open
0000000000657050 0000000000000228 T fsdevMountDevice
0000000000657280 0000000000000040 T fsdevMountSdmc
00000000006572c0 00000000000000c0 T __libnx_init_cwd
0000000000657380 0000000000000064 T fsdevUnmountAll
00000000006573f0 0000000000000084 T fsdevTranslatePath
0000000000657480 0000000000000064 T decode_utf16
00000000006574f0 000000000000012c T decode_utf8
0000000000657620 0000000000000058 T encode_utf16
0000000000657680 00000000000000d0 T encode_utf8
0000000000657750 W __libnx_exception_entry
00000000006577dc t __libnx_exception_entry_start
0000000000657904 t __libnx_exception_entry_abort
0000000000657908 t __libnx_exception_entry_end
0000000000657910 T __libnx_exception_returnentry
0000000000657930 0000000000000064 T condvarWaitTimeout
00000000006579a0 00000000000003c4 T randomGet
0000000000657d70 0000000000000020 T randomGet64
0000000000657d90 00000000000000b0 T __libnx_init_thread
0000000000657e40 00000000000002d8 T threadCreate
0000000000658120 00000000000000a4 T threadExit
00000000006581d0 00000000000000ac t _EntryWrap
0000000000658280 0000000000000008 T threadStart
0000000000658290 000000000000002c T threadWaitForExit
00000000006582c0 0000000000000098 T threadClose
0000000000658360 0000000000000010 T threadTlsGet
0000000000658370 0000000000000010 T threadTlsSet
0000000000658380 00000000000000d8 T threadTlsAlloc
0000000000658460 0000000000000048 T threadTlsFree
00000000006584b0 0000000000000178 T sessionmgrCreate
0000000000658630 0000000000000084 T sessionmgrClose
00000000006586c0 00000000000000b4 T sessionmgrAttachClient
0000000000658780 0000000000000070 T sessionmgrDetachClient
00000000006587f0 00000000000000d4 t _setsysGetFirmwareVersionImpl
00000000006588d0 0000000000000068 t _setsysCleanup
0000000000658940 00000000000000a0 T setsysInitialize
00000000006589e0 0000000000000044 T setsysExit
0000000000658a30 0000000000000044 T setsysGetFirmwareVersion
0000000000658a80 0000000000000228 t _timeCleanup
0000000000658cb0 0000000000000100 t _timeCmdGetSession.constprop.0
0000000000658db0 00000000000000cc t _timeGetSharedMemoryNativeHandle.constprop.0
0000000000658e80 00000000000000c4 t _timeCmdNoInOutU64.constprop.0.isra.0
0000000000658f50 0000000000000104 t _timeReadClockFromSharedMem
0000000000659060 0000000000000238 T timeInitialize
00000000006592a0 0000000000000044 T timeExit
00000000006592f0 0000000000000038 T timeGetServiceSession_SystemClock
0000000000659330 0000000000000068 T timeGetCurrentTime
00000000006593a0 0000000000000110 T timeToCalendarTimeWithMyRule
00000000006594b0 0000000000000104 T timeToPosixTimeWithMyRule
00000000006595c0 0000000000000488 t ParseHeadersInternal
0000000000659a50 0000000000000070 t WebPParseHeaders
0000000000659ac0 00000000000001e8 t DecodeInto
0000000000659cb0 00000000000000b0 T WebPDecodeRGBInto
0000000000659d60 00000000000000b0 T WebPDecodeRGBAInto
0000000000659e10 0000000000000040 T WebPGetFeaturesInternal
0000000000659e50 00000000000001a0 t WebPIoInitFromOptions
0000000000659ff0 00000000000000ec t WebPRescalerInit
000000000065a0e0 0000000000000060 t WebPRescalerGetScaledDimensions
000000000065a140 0000000000000020 t WebPRescaleNeededLines
000000000065a160 0000000000000104 t WebPRescalerImport
000000000065a270 000000000000006c t WebPRescalerExport
000000000065a2e0 0000000000000160 t CheckDecBuffer
000000000065a440 00000000000000c0 t WebPFlipBuffer
000000000065a500 0000000000000250 t WebPAllocateDecBuffer
000000000065a750 000000000000003c T WebPInitDecBufferInternal
000000000065a790 000000000000004c T WebPFreeDecBuffer
000000000065a7e0 0000000000000090 t Dither8x8
000000000065a870 00000000000005b4 t ReconstructRow
000000000065ae30 00000000000006f8 t FinishRow
000000000065b530 0000000000000100 t VP8InitDithering
000000000065b630 000000000000015c t VP8ProcessRow
000000000065b790 0000000000000248 t VP8EnterCritical
000000000065b9e0 0000000000000068 t VP8ExitCritical
000000000065ba50 0000000000000024 t VP8GetThreadMethod
000000000065ba80 00000000000003b0 t VP8InitFrame
000000000065be30 0000000000000084 t GetAlphaSourceRow
000000000065bec0 00000000000000f8 t EmitAlphaRGB
000000000065bfc0 00000000000000f8 t EmitAlphaRGBA4444
000000000065c0c0 0000000000000078 t CustomPut
000000000065c140 0000000000000028 t CustomTeardown
000000000065c170 0000000000000160 t EmitYUV
000000000065c2d0 00000000000001fc t EmitFancyRGB
000000000065c4d0 00000000000000e8 t EmitAlphaYUV
000000000065c5c0 000000000000006c t EmitSampledRGB
000000000065c630 0000000000000594 t CustomSetup
000000000065cbd0 0000000000000178 t ExportAlpha
000000000065cd50 0000000000000164 t ExportAlphaRGBA4444
000000000065cec0 00000000000000b0 t EmitRescaledAlphaRGB
000000000065cf70 00000000000001e0 t EmitRescaledRGB
000000000065d150 0000000000000174 t EmitRescaledAlphaYUV
000000000065d2d0 0000000000000170 t EmitRescaledYUV
000000000065d440 0000000000000024 t WebPInitCustomIo
000000000065d470 0000000000000058 t VP8Clear.part.0
000000000065d4d0 000000000000072c t GetLargeValue
000000000065dc00 000000000000046c t GetCoeffsAlt
000000000065e070 0000000000000398 t GetCoeffsFast
000000000065e410 0000000000000038 t VP8InitIoInternal
000000000065e450 00000000000000b0 t VP8New
000000000065e500 000000000000002c t VP8Delete
000000000065e530 0000000000000018 t VP8SetError
000000000065e550 0000000000000040 T VP8CheckSignature
000000000065e590 000000000000063c t VP8GetHeaders.part.0.constprop.0
000000000065ebd0 00000000000000bc T VP8GetInfo
000000000065ec90 0000000000000038 t VP8GetHeaders
000000000065ecd0 0000000000000480 t VP8DecodeMB
000000000065f150 0000000000000018 t VP8InitScanline
000000000065f170 0000000000000234 t VP8Decode
000000000065f3b0 00000000000000d8 t ConvertToYUVA
000000000065f490 00000000000000bc t ApplyInverseTransforms
000000000065f550 0000000000000400 t ProcessRows
000000000065f950 000000000000014c t ExtractPalettedAlphaRows
000000000065faa0 0000000000000098 t ReadImageInfo.part.0
000000000065fb40 0000000000000164 t ExtractAlphaRows
000000000065fcb0 00000000000000b8 t VP8LClear.part.0
000000000065fd70 0000000000000b04 t DecodeImageData
0000000000660880 0000000000000490 t DecodeImageStream
0000000000660d10 0000000000000940 t ReadHuffmanCodes
0000000000661650 0000000000000034 T VP8LCheckSignature
0000000000661690 00000000000000c8 T VP8LGetInfo
0000000000661760 000000000000003c t VP8LNew
00000000006617a0 000000000000002c t VP8LDelete
00000000006617d0 00000000000001b8 t VP8LDecodeAlphaHeader
0000000000661990 0000000000000608 t VP8LDecodeAlphaImageStream
0000000000661fa0 00000000000000e4 t VP8LDecodeHeader
0000000000662090 00000000000001fc t VP8LDecodeImage
0000000000662290 00000000000000ac T WebPMultARGBRow_C
0000000000662340 000000000000006c T WebPMultRow_C
00000000006623b0 0000000000000030 t HasAlpha8b_C
00000000006623e0 0000000000000040 t HasAlpha32b_C
0000000000662420 000000000000004c t PackRGB_C
0000000000662470 00000000000000b8 t ApplyAlphaMultiply_16b_C
0000000000662530 0000000000000080 t WebPMultARGBRows
00000000006625b0 0000000000000094 t WebPMultRows
0000000000662650 00000000000000c8 t WebPInitAlphaProcessing
0000000000662720 000000000000000c t armCPUInfo
0000000000662730 000000000000004c t TransformUV_C
0000000000662780 0000000000000094 t TransformDCUV_C
0000000000662820 000000000000007c t HE4_C
00000000006628a0 00000000000000f4 t VR4_C
00000000006629a0 00000000000000f4 t VL4_C
0000000000662aa0 00000000000000a4 t HU4_C
0000000000662b50 00000000000000f4 t HD4_C
0000000000662c50 000000000000005c t DitherCombine8x8_C
0000000000662cb0 00000000000000dc t VP8DspInit
0000000000662d90 0000000000000004 t VP8InitClipTables
0000000000662da0 00000000000000a8 t GradientUnfilter_C
0000000000662e50 0000000000000088 t VP8FiltersInit
0000000000662ee0 0000000000000008 t Predictor0_C
0000000000662ef0 0000000000000004 t Predictor1_C
0000000000662f00 0000000000000008 t Predictor2_C
0000000000662f10 0000000000000008 t Predictor3_C
0000000000662f20 0000000000000008 t Predictor4_C
0000000000662f30 0000000000000030 t Predictor5_C
0000000000662f60 000000000000001c t Predictor6_C
0000000000662f80 000000000000001c t Predictor7_C
0000000000662fa0 000000000000001c t Predictor8_C
0000000000662fc0 000000000000001c t Predictor9_C
0000000000662fe0 0000000000000048 t Predictor10_C
0000000000663030 0000000000000098 t Predictor11_C
00000000006630d0 0000000000000098 t Predictor12_C
0000000000663170 00000000000000b8 t Predictor13_C
0000000000663230 0000000000000038 t PredictorAdd0_C
0000000000663270 000000000000004c t PredictorAdd1_C
00000000006632c0 0000000000000050 t PredictorAdd2_C
0000000000663310 0000000000000050 t PredictorAdd3_C
0000000000663360 0000000000000050 t PredictorAdd4_C
00000000006633b0 0000000000000070 t PredictorAdd6_C
0000000000663420 0000000000000068 t PredictorAdd7_C
0000000000663490 0000000000000068 t PredictorAdd8_C
0000000000663500 0000000000000068 t PredictorAdd9_C
0000000000663570 000000000000005c t MapARGB_C
00000000006635d0 0000000000000054 t MapAlpha_C
0000000000663630 0000000000000040 T VP8LConvertBGRAToRGBA4444_C
0000000000663670 0000000000000048 T VP8LConvertBGRAToRGB565_C
00000000006636c0 00000000000000c0 t ColorIndexInverseTransform_C.isra.0
0000000000663780 00000000000000a0 t PredictorAdd10_C
0000000000663820 0000000000000088 t PredictorAdd5_C
00000000006638b0 0000000000000100 t PredictorAdd11_C
00000000006639b0 00000000000000f0 t PredictorAdd12_C
0000000000663aa0 000000000000010c t PredictorAdd13_C
0000000000663bb0 0000000000000044 t VP8LAddGreenToBlueAndRed_C
0000000000663c00 000000000000006c t VP8LTransformColorInverse_C
0000000000663c70 00000000000000c0 t VP8LColorIndexInverseTransformAlpha
0000000000663d30 00000000000004ec t VP8LInverseTransform
0000000000664220 0000000000000038 t VP8LConvertBGRAToRGB_C
0000000000664260 0000000000000040 t VP8LConvertBGRAToRGBA_C
00000000006642a0 0000000000000038 t VP8LConvertBGRAToBGR_C
00000000006642e0 0000000000000240 t VP8LConvertFromBGRA
0000000000664520 0000000000000238 t VP8LDspInit
0000000000664760 00000000000000c0 T WebPRescalerImportRowExpand_C
0000000000664820 00000000000000cc T WebPRescalerImportRowShrink_C
00000000006648f0 0000000000000028 t WebPRescalerImportRow
0000000000664920 00000000000000d8 t WebPRescalerExportRow
0000000000664a00 0000000000000088 t WebPRescalerDspInit
0000000000664a90 000000000000013c T WebPYuv444ToRgb565_C
0000000000664bd0 00000000000000d8 T WebPYuv444ToBgr_C
0000000000664cb0 00000000000000d8 T WebPYuv444ToRgb_C
0000000000664d90 00000000000000ec T WebPYuv444ToBgra_C
0000000000664e80 00000000000000ec T WebPYuv444ToRgba_C
0000000000664f70 00000000000000ec T WebPYuv444ToArgb_C
0000000000665060 0000000000000150 T WebPYuv444ToRgba4444_C
00000000006651b0 00000000000000b4 t WebPInitYUV444Converters
0000000000665270 0000000000000068 t WebPInitUpsamplers
00000000006652e0 0000000000000050 t ConvertARGBToY_C
0000000000665330 0000000000000054 t ConvertRGB24ToY_C
0000000000665390 0000000000000050 t ConvertBGR24ToY_C
00000000006653e0 00000000000000a8 T WebPConvertRGBA32ToUV_C
0000000000665490 0000000000000198 t WebPConvertARGBToUV_C
0000000000665630 000000000000030c t YuvToRgb565Row
0000000000665940 0000000000000300 t YuvToRgba4444Row
0000000000665c40 0000000000000298 t YuvToBgraRow
0000000000665ee0 000000000000029c t YuvToArgbRow
0000000000666180 00000000000002a0 t YuvToBgrRow
0000000000666420 00000000000002a0 t YuvToRgbRow
00000000006666c0 000000000000029c t YuvToRgbaRow
0000000000666960 00000000000000dc t WebPSamplerProcessPlane
0000000000666a40 00000000000000b4 t WebPInitSamplers
0000000000666b00 00000000000000bc t WebPInitConvertARGBToYUV
0000000000666bc0 0000000000000074 t ExtractGreen_NEON
0000000000666c40 00000000000000d8 t ExtractAlpha_NEON
0000000000666d20 00000000000000e8 t DispatchAlpha_NEON
0000000000666e10 00000000000000b0 t DispatchAlphaToGreen_NEON
0000000000666ec0 000000000000019c t ApplyAlphaMultiply_NEON
0000000000667060 0000000000000068 t WebPInitAlphaProcessingNEON
00000000006670d0 0000000000000050 t DC4_NEON
0000000000667120 0000000000000018 t DC8uvNoTopLeft_NEON
0000000000667140 0000000000000020 t VE8uv_NEON
0000000000667160 0000000000000020 t HE8uv_NEON
0000000000667180 0000000000000020 t VE16_NEON
00000000006671a0 0000000000000020 t HE16_NEON
00000000006671c0 0000000000000018 t DC16NoTopLeft_NEON
00000000006671e0 000000000000009c t TM16_NEON
0000000000667280 0000000000000028 t VE4_NEON
00000000006672b0 0000000000000040 t LD4_NEON
00000000006672f0 0000000000000070 t RD4_NEON
0000000000667360 00000000000000f8 t Load4x8_NEON
0000000000667460 00000000000000ac t DoFilter4_NEON
0000000000667510 000000000000010c t DoFilter6_NEON
0000000000667620 00000000000001ac t VFilter8_NEON
00000000006677d0 0000000000000134 t TransformWHT_NEON
0000000000667910 0000000000000098 t SimpleVFilter16_NEON
00000000006679b0 000000000000002c t SimpleVFilter16i_NEON
00000000006679e0 0000000000000078 t TM8uv_NEON
0000000000667a60 0000000000000064 t TM4_NEON
0000000000667ad0 0000000000000078 t DC8uv_NEON
0000000000667b50 00000000000000e0 t DC16TopLeft_NEON
0000000000667c30 0000000000000038 t DC8uvNoLeft_NEON
0000000000667c70 0000000000000040 t DC16NoLeft_NEON
0000000000667cb0 0000000000000060 t DC8uvNoTop_NEON
0000000000667d10 000000000000005c t TransformDC_NEON
0000000000667d70 0000000000000144 t Store2x16_NEON
0000000000667ec0 00000000000000e4 t TransformAC3_NEON
0000000000667fb0 000000000000011c t VFilter16i_NEON
00000000006680d0 000000000000028c t TransformTwo_NEON
0000000000668360 0000000000000490 t HFilter16i_NEON
00000000006687f0 0000000000000550 t HFilter8_NEON
0000000000668d40 00000000000000b8 t DC16NoTop_NEON
0000000000668e00 0000000000000100 t VFilter16_NEON
0000000000668f00 000000000000021c t SimpleHFilter16_NEON
0000000000669120 000000000000004c t SimpleHFilter16i_NEON
0000000000669170 0000000000000410 t HFilter8i_NEON
0000000000669580 0000000000000180 t VFilter8i_NEON
0000000000669700 00000000000001a4 t HFilter16_NEON
00000000006698b0 000000000000025c t VP8DspInitNEON
0000000000669b10 0000000000000080 t PredictLine_NEON
0000000000669b90 00000000000000d0 t HorizontalUnfilter_NEON
0000000000669c60 0000000000000094 t VerticalUnfilter_NEON
0000000000669d00 000000000000016c t GradientFilter_NEON
0000000000669e70 0000000000000074 t VerticalFilter_NEON
0000000000669ef0 0000000000000098 t HorizontalFilter_NEON
0000000000669f90 0000000000000048 t VP8FiltersInitNEON
0000000000669fe0 0000000000000108 t TransformColorInverse_NEON
000000000066a0f0 0000000000000068 t AddGreenToBlueAndRed_NEON
000000000066a160 000000000000005c t ConvertBGRAToRGB_NEON
000000000066a1c0 000000000000005c t ConvertBGRAToBGR_NEON
000000000066a220 0000000000000050 t ConvertBGRAToRGBA_NEON
000000000066a270 000000000000006c t PredictorAdd0_NEON
000000000066a2e0 0000000000000070 t PredictorAdd2_NEON
000000000066a350 0000000000000070 t PredictorAdd3_NEON
000000000066a3c0 0000000000000070 t PredictorAdd4_NEON
000000000066a430 0000000000000078 t PredictorAdd8_NEON
000000000066a4b0 0000000000000078 t PredictorAdd9_NEON
000000000066a530 0000000000000084 t PredictorAdd1_NEON
000000000066a5c0 00000000000000d4 t PredictorAdd5_NEON
000000000066a6a0 00000000000000c0 t PredictorAdd6_NEON
000000000066a760 00000000000000c0 t PredictorAdd7_NEON
000000000066a820 00000000000000e0 t PredictorAdd10_NEON
000000000066a900 0000000000000148 t PredictorAdd13_NEON
000000000066aa50 00000000000000f0 t PredictorAdd12_NEON
000000000066ab40 0000000000000118 t PredictorAdd11_NEON
000000000066ac60 0000000000000020 t Predictor5_NEON
000000000066ac80 0000000000000018 t Predictor6_NEON
000000000066aca0 0000000000000014 t Predictor7_NEON
000000000066acc0 0000000000000034 t Predictor13_NEON
000000000066ad00 0000000000000148 t VP8LDspInitNEON
000000000066ae50 000000000000019c t RescalerExportRowShrink_NEON
000000000066aff0 00000000000001c8 t RescalerExportRowExpand_NEON
000000000066b1c0 000000000000002c t WebPRescalerDspInitNEON
000000000066b1f0 0000000000000064 t Upsample16Pixels_NEON
000000000066b260 000000000000087c t UpsampleRgba4444LinePair_NEON
000000000066bae0 0000000000000878 t UpsampleRgb565LinePair_NEON
000000000066c360 000000000000078c t UpsampleBgraLinePair_NEON
000000000066caf0 000000000000075c t UpsampleBgrLinePair_NEON
000000000066d250 00000000000007a8 t UpsampleArgbLinePair_NEON
000000000066da00 0000000000000754 t UpsampleRgbLinePair_NEON
000000000066e160 0000000000000784 t UpsampleRgbaLinePair_NEON
000000000066e8f0 000000000000005c t WebPInitUpsamplersNEON
000000000066e950 0000000000000158 t ConvertARGBToUV_NEON
000000000066eab0 000000000000005c t ConvertRGBToY_NEON
000000000066eb10 00000000000000bc t ConvertARGBToY_NEON
000000000066ebd0 00000000000000c4 t ConvertRGB24ToY_NEON
000000000066eca0 00000000000000c0 t ConvertBGR24ToY_NEON
000000000066ed60 00000000000000a8 t SharpYUVUpdateRGB_NEON
000000000066ee10 0000000000000184 t SharpYUVFilterRow_NEON
000000000066efa0 00000000000000fc t SharpYUVUpdateY_NEON
000000000066f0a0 0000000000000198 t ConvertRGBA32ToUV_NEON
000000000066f240 0000000000000068 t WebPInitConvertARGBToYUVNEON
000000000066f2b0 0000000000000040 t WebPInitSharpYUVNEON
000000000066f2f0 0000000000000074 t ShiftBytes
000000000066f370 0000000000000088 t VP8InitBitReader
000000000066f400 0000000000000068 t VP8LoadFinalBytes
000000000066f470 00000000000000dc t VP8GetValue
000000000066f550 0000000000000030 t VP8GetSignedValue
000000000066f580 0000000000000050 t VP8LInitBitReader
000000000066f5d0 0000000000000048 t VP8LDoFillBitWindow
000000000066f620 0000000000000064 t VP8LReadBits
000000000066f690 0000000000000068 t VP8LColorCacheInit
000000000066f700 0000000000000030 t VP8LColorCacheClear
000000000066f730 000000000000001c t VP8LColorCacheCopy
000000000066f750 0000000000000444 t BuildHuffmanTable
000000000066fba0 000000000000000c t VP8LHtreeGroupsNew
000000000066fbb0 000000000000000c t VP8LHtreeGroupsFree
000000000066fbc0 00000000000000c4 t VP8LBuildHuffmanTable
000000000066fc90 000000000000007c t VP8InitRandom
000000000066fd10 0000000000000044 t Execute
000000000066fd60 0000000000000010 t Init
000000000066fd70 0000000000000074 t Sync
000000000066fdf0 000000000000017c t Reset
000000000066ff70 0000000000000080 t Launch
000000000066fff0 0000000000000098 t End
0000000000670090 000000000000000c T WebPGetWorkerInterface
00000000006700a0 00000000000000bc t ThreadLoop
0000000000670160 0000000000000024 T WebPSafeMalloc
0000000000670190 0000000000000020 T WebPSafeCalloc
00000000006701b0 0000000000000004 T WebPSafeFree
00000000006701c0 000000000000004c t WebPDeallocateAlphaMemory
0000000000670210 00000000000003f8 t VP8DecompressAlphaRows
0000000000670610 0000000000000278 t VP8ParseQuant
0000000000670890 0000000000000010 t VP8ResetProba
00000000006708a0 0000000000000ef8 t VP8ParseIntraModeRow
00000000006717a0 0000000000000260 t VP8ParseProba
0000000000671a00 00000000000005c8 t WebPDequantizeLevels
0000000000671fd0 0000000000000010 t default_bzfree
0000000000671fe0 000000000000000c t default_bzalloc
0000000000671ff0 00000000000000f0 T BZ2_bzDecompressInit
00000000006720e0 0000000000000038 T BZ2_indexIntoF
0000000000672120 0000000000000e6c T BZ2_bzDecompress
0000000000672f90 0000000000000088 T BZ2_bzDecompressEnd
0000000000673020 000000000000000c T BZ2_bzlibVersion
0000000000673030 0000000000000064 T BZ2_bz__AssertH__fail
00000000006730a0 0000000000002a3c T BZ2_decompress
0000000000675ae0 0000000000000158 T BZ2_hbCreateDecodeTables
0000000000675c40 0000000000000028 t hb_buffer_t::assert_unicode() [clone .part.0]
0000000000675c70 0000000000000054 T hb_segment_properties_equal
0000000000675cd0 000000000000005c T hb_segment_properties_overlay
0000000000675d30 000000000000017c t hb_buffer_t::enlarge(unsigned int)
0000000000675eb0 00000000000000c4 t hb_buffer_t::make_room_for(unsigned int, unsigned int)
0000000000675f80 00000000000000f4 t hb_buffer_t::shift_forward(unsigned int)
0000000000676080 0000000000000034 t hb_buffer_t::clear()
00000000006760c0 000000000000004c t hb_buffer_t::enter()
0000000000676110 0000000000000014 t hb_buffer_t::leave()
0000000000676130 0000000000000084 t hb_buffer_t::add(unsigned int, unsigned int)
00000000006761c0 000000000000001c t hb_buffer_t::clear_output()
00000000006761e0 0000000000000038 t hb_buffer_t::clear_positions()
0000000000676220 0000000000000134 t hb_buffer_t::sync()
0000000000676360 0000000000000080 t hb_buffer_t::sync_so_far()
00000000006763e0 0000000000000194 t hb_buffer_t::move_to(unsigned int)
0000000000676580 0000000000000060 t hb_buffer_t::set_masks(unsigned int, unsigned int, unsigned int, unsigned int)
00000000006765e0 00000000000002a0 t hb_buffer_t::merge_clusters_impl(unsigned int, unsigned int)
0000000000676880 00000000000001a4 t hb_buffer_t::merge_out_clusters(unsigned int, unsigned int)
0000000000676a30 00000000000000e4 t hb_buffer_t::delete_glyph()
0000000000676b20 00000000000001d0 t hb_buffer_t::delete_glyphs_inplace(bool (*)(hb_glyph_info_t const*))
0000000000676cf0 000000000000000c T hb_buffer_get_empty
0000000000676d00 000000000000008c T hb_buffer_create
0000000000676d90 0000000000000054 T hb_buffer_create_similar
0000000000676df0 0000000000000180 T hb_buffer_destroy
0000000000676f70 0000000000000014 T hb_buffer_set_direction
0000000000676f90 0000000000000008 T hb_buffer_get_direction
0000000000676fa0 0000000000000014 T hb_buffer_set_script
0000000000676fc0 0000000000000018 T hb_buffer_set_segment_properties
0000000000676fe0 000000000000000c T hb_buffer_get_segment_properties
0000000000676ff0 0000000000000014 T hb_buffer_set_flags
0000000000677010 0000000000000008 T hb_buffer_get_flags
0000000000677020 0000000000000014 T hb_buffer_clear_contents
0000000000677040 00000000000000f4 T hb_buffer_set_length
0000000000677140 0000000000000014 T hb_buffer_get_glyph_infos
0000000000677160 0000000000000074 T hb_buffer_get_glyph_positions
00000000006771e0 00000000000000ec T hb_buffer_reverse
00000000006772d0 00000000000005d4 T hb_buffer_add_utf8
00000000006778b0 000000000000038c T hb_buffer_append
0000000000677c40 000000000000014c t hb_buffer_t::sort(unsigned int, unsigned int, int (*)(hb_glyph_info_t const*, hb_glyph_info_t const*))
0000000000677d90 00000000000001ec T hb_buffer_diff
0000000000677f80 00000000000000bc t hb_buffer_t::message_impl(hb_font_t*, char const*, std::__va_list)
0000000000678040 0000000000000160 t lang_find_or_insert(char const*)
00000000006781a0 00000000000000d4 t _hb_options_init()
0000000000678280 00000000000000a4 T hb_tag_from_string
0000000000678330 0000000000000084 T hb_language_from_string
00000000006783c0 0000000000000004 T hb_language_to_string
00000000006783d0 00000000000000ac T hb_language_matches
0000000000678480 0000000000000314 T hb_script_get_horizontal_direction
00000000006787a0 000000000000000c t hb_font_get_nominal_glyph_nil(hb_font_t*, void*, unsigned int, unsigned int*, void*)
00000000006787b0 000000000000000c t hb_font_get_variation_glyph_nil(hb_font_t*, void*, unsigned int, unsigned int, unsigned int*, void*)
00000000006787c0 0000000000000008 t hb_font_get_glyph_h_advance_nil(hb_font_t*, void*, unsigned int, void*)
00000000006787d0 0000000000000008 t hb_font_get_glyph_v_advance_nil(hb_font_t*, void*, unsigned int, void*)
00000000006787e0 0000000000000010 t hb_font_get_glyph_h_origin_nil(hb_font_t*, void*, unsigned int, int*, int*, void*)
00000000006787f0 0000000000000010 t hb_font_get_glyph_v_origin_nil(hb_font_t*, void*, unsigned int, int*, int*, void*)
0000000000678800 0000000000000008 t hb_font_get_glyph_h_kerning_nil(hb_font_t*, void*, unsigned int, unsigned int, void*)
0000000000678810 0000000000000010 t hb_font_get_glyph_contour_point_nil(hb_font_t*, void*, unsigned int, unsigned int, int*, int*, void*)
0000000000678820 0000000000000010 t hb_font_get_glyph_name_nil(hb_font_t*, void*, unsigned int, char*, unsigned int, void*)
0000000000678830 000000000000000c t hb_font_get_glyph_from_name_nil(hb_font_t*, void*, char const*, int, unsigned int*, void*)
0000000000678840 0000000000000004 t hb_font_draw_glyph_nil(hb_font_t*, void*, unsigned int, hb_draw_funcs_t*, void*, void*)
0000000000678850 0000000000000004 t hb_font_paint_glyph_nil(hb_font_t*, void*, unsigned int, hb_paint_funcs_t*, void*, unsigned int, unsigned int, void*)
0000000000678860 0000000000000034 t hb_draw_move_to_default(hb_draw_funcs_t*, void*, hb_draw_state_t*, float, float, void*)
00000000006788a0 0000000000000048 t hb_draw_line_to_default(hb_draw_funcs_t*, void*, hb_draw_state_t*, float, float, void*)
00000000006788f0 0000000000000054 t hb_draw_quadratic_to_default(hb_draw_funcs_t*, void*, hb_draw_state_t*, float, float, float, float, void*)
0000000000678950 0000000000000060 t hb_draw_cubic_to_default(hb_draw_funcs_t*, void*, hb_draw_state_t*, float, float, float, float, float, float, void*)
00000000006789b0 0000000000000018 t hb_draw_close_path_default(hb_draw_funcs_t*, void*, hb_draw_state_t*, void*)
00000000006789d0 00000000000000a0 t hb_font_draw_glyph_default(hb_font_t*, void*, unsigned int, hb_draw_funcs_t*, void*, void*)
0000000000678a70 0000000000000110 t hb_font_paint_glyph_default(hb_font_t*, void*, unsigned int, hb_paint_funcs_t*, void*, unsigned int, unsigned int, void*)
0000000000678b80 000000000000000c t hb_font_get_glyph_extents_nil(hb_font_t*, void*, unsigned int, hb_glyph_extents_t*, void*)
0000000000678b90 0000000000000014 t hb_font_get_font_h_extents_nil(hb_font_t*, void*, hb_font_extents_t*, void*)
0000000000678bb0 000000000000008c t _hb_font_funcs_set_middle(hb_font_funcs_t*, void*, void (*)(void*))
0000000000678c40 00000000000000fc t hb_font_get_glyph_extents_default(hb_font_t*, void*, unsigned int, hb_glyph_extents_t*, void*)
0000000000678d40 0000000000000008 t hb_font_get_glyph_v_kerning_nil(hb_font_t*, void*, unsigned int, unsigned int, void*)
0000000000678d50 0000000000000070 t _hb_font_funcs_set_preamble(hb_font_funcs_t*, bool, void**, void (**)(void*))
0000000000678dc0 0000000000000014 t hb_font_get_font_v_extents_nil(hb_font_t*, void*, hb_font_extents_t*, void*)
0000000000678de0 0000000000000024 t hb_font_get_variation_glyph_default(hb_font_t*, void*, unsigned int, unsigned int, unsigned int*, void*)
0000000000678e10 00000000000000f8 t hb_font_get_nominal_glyphs_default(hb_font_t*, void*, unsigned int, unsigned int const*, unsigned int, unsigned int*, unsigned int, void*)
0000000000678f10 0000000000000060 t hb_font_get_glyph_v_kerning_default(hb_font_t*, void*, unsigned int, unsigned int, void*)
0000000000678f70 0000000000000060 t hb_font_get_glyph_h_kerning_default(hb_font_t*, void*, unsigned int, unsigned int, void*)
0000000000678fd0 0000000000000124 t hb_font_get_glyph_h_advances_default(hb_font_t*, void*, unsigned int, unsigned int const*, unsigned int, int*, unsigned int, void*)
0000000000679100 0000000000000028 t hb_font_get_glyph_name_default(hb_font_t*, void*, unsigned int, char*, unsigned int, void*)
0000000000679130 00000000000000e4 t void hb_object_fini<hb_font_funcs_t>(hb_font_funcs_t*)
0000000000679130 00000000000000e4 t void hb_object_fini<hb_font_t>(hb_font_t*)
0000000000679220 0000000000000058 t hb_font_get_glyph_from_name_default(hb_font_t*, void*, char const*, int, unsigned int*, void*)
0000000000679280 0000000000000098 t hb_font_get_font_v_extents_default(hb_font_t*, void*, hb_font_extents_t*, void*)
0000000000679320 0000000000000098 t hb_font_get_font_h_extents_default(hb_font_t*, void*, hb_font_extents_t*, void*)
00000000006793c0 00000000000000ac t hb_font_get_glyph_v_advance_default(hb_font_t*, void*, unsigned int, void*)
0000000000679470 0000000000000124 t hb_font_get_glyph_v_advances_default(hb_font_t*, void*, unsigned int, unsigned int const*, unsigned int, int*, unsigned int, void*)
00000000006795a0 00000000000000ac t hb_font_get_glyph_h_advance_default(hb_font_t*, void*, unsigned int, void*)
0000000000679650 0000000000000080 t hb_font_get_nominal_glyph_default(hb_font_t*, void*, unsigned int, unsigned int*, void*)
00000000006796d0 00000000000000d4 t hb_font_get_glyph_v_origin_default(hb_font_t*, void*, unsigned int, int*, int*, void*)
00000000006797b0 00000000000000d4 t hb_font_get_glyph_h_origin_default(hb_font_t*, void*, unsigned int, int*, int*, void*)
0000000000679890 00000000000000d4 t hb_font_get_glyph_contour_point_default(hb_font_t*, void*, unsigned int, unsigned int, int*, int*, void*)
0000000000679970 0000000000000124 t hb_font_t::mults_changed()
0000000000679aa0 000000000000014c t OT::VarRegionList::evaluate(unsigned int, int const*, unsigned int, float*) const
0000000000679bf0 0000000000000210 t OT::VarData::get_delta(unsigned int, int const*, unsigned int, OT::VarRegionList const&, float*) const
0000000000679e00 00000000000001ac t OT::SegmentMaps::map(int, unsigned int, unsigned int) const
0000000000679fb0 0000000000000450 t OT::avar::map_coords(int*, unsigned int) const
000000000067a400 000000000000018c t OT::fvar::sanitize(hb_sanitize_context_t*) const
000000000067a590 000000000000000c T hb_font_funcs_get_empty
000000000067a5a0 0000000000000088 T hb_font_funcs_create
000000000067a630 0000000000000058 T hb_font_funcs_reference
000000000067a690 00000000000002ac T hb_font_funcs_destroy
000000000067a940 0000000000000018 T hb_font_funcs_make_immutable
000000000067a960 00000000000000c0 T hb_font_funcs_set_font_h_extents_func
000000000067aa20 00000000000000c0 T hb_font_funcs_set_font_v_extents_func
000000000067aae0 00000000000000c0 T hb_font_funcs_set_nominal_glyph_func
000000000067aba0 00000000000000c0 T hb_font_funcs_set_nominal_glyphs_func
000000000067ac60 00000000000000c0 T hb_font_funcs_set_variation_glyph_func
000000000067ad20 00000000000000c0 T hb_font_funcs_set_glyph_v_advance_func
000000000067ade0 00000000000000c0 T hb_font_funcs_set_glyph_h_advances_func
000000000067aea0 00000000000000c0 T hb_font_funcs_set_glyph_v_advances_func
000000000067af60 00000000000000c0 T hb_font_funcs_set_glyph_v_origin_func
000000000067b020 00000000000000c0 T hb_font_funcs_set_glyph_h_kerning_func
000000000067b0e0 00000000000000c0 T hb_font_funcs_set_glyph_extents_func
000000000067b1a0 00000000000000c0 T hb_font_funcs_set_glyph_contour_point_func
000000000067b260 00000000000000c0 T hb_font_funcs_set_glyph_name_func
000000000067b320 00000000000000c0 T hb_font_funcs_set_glyph_from_name_func
000000000067b3e0 00000000000000c0 T hb_font_funcs_set_draw_glyph_func
000000000067b4a0 00000000000000c0 T hb_font_funcs_set_paint_glyph_func
000000000067b560 0000000000000084 t hb_font_t::has_func(unsigned int)
000000000067b5f0 0000000000000054 T hb_font_get_glyph
000000000067b650 0000000000000028 T hb_font_get_nominal_glyph
000000000067b680 0000000000000020 T hb_font_get_glyph_h_advance
000000000067b6a0 0000000000000028 T hb_font_get_glyph_extents
000000000067b6d0 000000000000002c T hb_font_draw_glyph
000000000067b700 000000000000000c T hb_font_get_empty
000000000067b710 00000000000000d8 t _hb_font_create(hb_face_t*)
000000000067b7f0 00000000000000e4 T hb_font_destroy
000000000067b8e0 0000000000000008 T hb_font_get_face
000000000067b8f0 000000000000009c T hb_font_set_funcs
000000000067b990 000000000000003c T hb_font_set_scale
000000000067b9d0 0000000000000118 t bool OT::OffsetTo<OT::VarRegionList, OT::IntType<unsigned int, 4u>, true>::sanitize<>(hb_sanitize_context_t*, void const*) const
000000000067baf0 0000000000000270 t bool OT::ArrayOf<OT::OffsetTo<OT::VarData, OT::IntType<unsigned int, 4u>, true>, OT::IntType<unsigned short, 2u> >::sanitize<OT::VariationStore const*>(hb_sanitize_context_t*, OT::VariationStore const*&&) const
000000000067bd60 0000000000000118 t bool OT::OffsetTo<OT::VariationStore, OT::IntType<unsigned int, 4u>, true>::sanitize<>(hb_sanitize_context_t*, void const*) const
000000000067be80 000000000000016c t OT::avarV2Tail::sanitize(hb_sanitize_context_t*, void const*) const
000000000067bff0 000000000000015c t OT::avar::sanitize(hb_sanitize_context_t*) const
000000000067c150 00000000000001b4 t hb_lazy_loader_t<OT::fvar, hb_table_lazy_loader_t<OT::fvar, 18u, true>, hb_face_t, 18u, hb_blob_t>::get() const
000000000067c310 0000000000000278 t hb_lazy_loader_t<OT::avar, hb_table_lazy_loader_t<OT::avar, 19u, true>, hb_face_t, 19u, hb_blob_t>::get() const
000000000067c590 0000000000000450 T hb_font_set_var_coords_normalized
000000000067c9e0 000000000000022c T hb_font_set_variations
000000000067cc10 000000000000003c T hb_font_set_var_named_instance
000000000067cc50 0000000000000054 T hb_font_create
000000000067ccb0 0000000000000344 t hb_parse_double(char const**, char const*, double*, bool)
000000000067d000 0000000000000008 W OT::ColorLine<OT::NoVariable>::static_get_extend(hb_color_line_t*, void*, void*)
000000000067d010 0000000000000008 W OT::ColorLine<OT::Variable>::static_get_extend(hb_color_line_t*, void*, void*)
000000000067d020 000000000000002c t _hb_ot_font_destroy(void*)
000000000067d050 0000000000000040 W OT::cff1::accelerator_t::gname_t::cmp(void const*, void const*)
000000000067d090 0000000000000078 t hb_ot_get_font_v_extents(hb_font_t*, void*, hb_font_extents_t*, void*)
000000000067d110 000000000000008c t hb_ot_get_font_h_extents(hb_font_t*, void*, hb_font_extents_t*, void*)
000000000067d1a0 0000000000000030 t int _hb_cmp_method<unsigned int, OT::CmapSubtableLongGroup const>(void const*, void const*)
000000000067d1d0 0000000000000028 t CFF::CFFIndex<OT::IntType<unsigned short, 2u> >::offset_at(unsigned int) const [clone .part.0]
000000000067d200 0000000000000028 t CFF::CFFIndex<OT::IntType<unsigned int, 4u> >::offset_at(unsigned int) const [clone .part.0]
000000000067d230 00000000000000b4 W bool OT::cmap::accelerator_t::get_glyph_from<OT::CmapSubtableFormat12>(void const*, unsigned int, unsigned int*)
000000000067d2f0 000000000000040c t void sort_r_simple<>(void*, unsigned long, unsigned long, int (*)(void const*, void const*)) [clone .constprop.0]
000000000067d700 0000000000000dd0 t void sort_r_simple<void*>(void*, unsigned long, unsigned long, int (*)(void const*, void const*, void*), void*) [clone .constprop.0]
000000000067e4d0 000000000000004c t hb_sanitize_context_t::check_range(void const*, unsigned int) const
000000000067e520 00000000000000f4 t hb_font_t::scale_glyph_extents(hb_glyph_extents_t*)
000000000067e620 0000000000000160 t OT::glyf_impl::Glyph::get_extents_without_var_scaled(hb_font_t*, OT::glyf_accelerator_t const&, hb_glyph_extents_t*) const [clone .part.0] [clone .isra.0]
000000000067e780 00000000000000c4 t hb_draw_session_t::line_to(float, float)
000000000067e850 00000000000000e4 t hb_draw_session_t::quadratic_to(float, float, float, float)
000000000067e940 00000000000000f0 t hb_draw_session_t::cubic_to(float, float, float, float, float, float)
000000000067ea30 000000000000010c t OT::OS2::sanitize(hb_sanitize_context_t*) const
000000000067eb40 00000000000000f0 t OT::CmapSubtableFormat4::accelerator_t::get_glyph(unsigned int, unsigned int*) const
000000000067ec30 0000000000000004 W OT::CmapSubtableFormat4::accelerator_t::get_glyph_func(void const*, unsigned int, unsigned int*)
000000000067ec40 0000000000000144 t OT::VariationSelectorRecord::get_glyph(unsigned int, unsigned int*, void const*) const
000000000067ed90 0000000000000298 t OT::CmapSubtable::get_glyph(unsigned int, unsigned int*) const
000000000067f030 0000000000000004 W bool OT::cmap::accelerator_t::get_glyph_from<OT::CmapSubtable>(void const*, unsigned int, unsigned int*)
000000000067f040 00000000000000d4 t bool OT::cmap::accelerator_t::get_glyph_from_symbol<OT::CmapSubtable, &(_hb_arabic_pua_trad_map(unsigned int))>(void const*, unsigned int, unsigned int*)
000000000067f120 00000000000000c8 t bool OT::cmap::accelerator_t::get_glyph_from_symbol<OT::CmapSubtable, &(_hb_arabic_pua_simp_map(unsigned int))>(void const*, unsigned int, unsigned int*)
000000000067f1f0 000000000000005c t bool OT::cmap::accelerator_t::get_glyph_from_symbol<OT::CmapSubtable, &OT::_hb_symbol_pua_map>(void const*, unsigned int, unsigned int*)
000000000067f250 00000000000000b8 t OT::cmap::find_subtable(unsigned int, unsigned int) const
000000000067f310 0000000000000198 t OT::VarStoreInstancer::operator()(unsigned int, unsigned short) const
000000000067f4b0 00000000000001f4 W OT::ColorLine<OT::Variable>::static_get_color_stops(hb_color_line_t*, void*, unsigned int, unsigned int*, hb_color_stop_t*, void*)
000000000067f6b0 00000000000001e8 W OT::ColorLine<OT::NoVariable>::static_get_color_stops(hb_color_line_t*, void*, unsigned int, unsigned int*, hb_color_stop_t*, void*)
000000000067f8a0 00000000000001cc t OT::TupleVariationData::unpack_points(OT::IntType<unsigned char, 1u> const*&, hb_vector_t<unsigned int, false>&, OT::IntType<unsigned char, 1u> const*)
000000000067fa70 000000000000109c t OT::gvar::accelerator_t::apply_deltas_to_points(unsigned int, hb_array_t<int>, hb_array_t<OT::contour_point_t>) const [clone .isra.0]
0000000000680b10 0000000000000158 t OT::gvar::sanitize_shallow(hb_sanitize_context_t*) const
0000000000680c70 0000000000000100 t OT::glyf_impl::SimpleGlyph::trim_padding() const
0000000000680d70 000000000000050c t OT::glyf_impl::SimpleGlyph::get_contour_points(OT::contour_point_vector_t&, bool) const
0000000000681280 00000000000005d4 t OT::glyf_impl::path_builder_t::consume_point(OT::contour_point_t const&)
0000000000681860 00000000000001d4 t OT::glyf_accelerator_t::glyph_for_gid(unsigned int, bool) const
0000000000681a40 00000000000001e8 t CFF::Encoding::sanitize(hb_sanitize_context_t*) const
0000000000681c30 0000000000000384 W OT::post::accelerator_t::accelerator_t(hb_face_t*)
0000000000681c30 0000000000000384 t OT::post::accelerator_t::accelerator_t(hb_face_t*)
0000000000681fc0 000000000000026c t OT::post::accelerator_t::get_glyph_from_name(char const*, int, unsigned int*) const
0000000000682230 000000000000014c t OT::CBLC::choose_strike(hb_font_t*) const
0000000000682380 000000000000016c t hb_paint_extents_context_t::hb_paint_extents_context_t()
0000000000682380 000000000000016c W hb_paint_extents_context_t::hb_paint_extents_context_t()
00000000006824f0 0000000000000164 t OT::Affine2x3::paint_glyph(OT::hb_paint_context_t*, unsigned int) const
0000000000682660 000000000000014c t OT::ClipBoxFormat2::get_clip_box(OT::ClipBoxData&, OT::VarStoreInstancer const&) const
00000000006827b0 00000000000000b8 t OT::COLR::get_base_glyph_paint(unsigned int) const
0000000000682870 0000000000000144 t OT::COLR::get_clip(unsigned int, hb_glyph_extents_t*, OT::VarStoreInstancer) const
00000000006829c0 0000000000000218 t OT::SBIXStrike::get_glyph_blob(unsigned int, hb_blob_t*, unsigned int, int*, int*, unsigned int, unsigned int*) const
0000000000682be0 00000000000001a0 t OT::sbix::accelerator_t::choose_strike(hb_font_t*) const
0000000000682d80 000000000000019c t OT::sbix::accelerator_t::get_png_extents(hb_font_t*, unsigned int, hb_glyph_extents_t*, bool) const
0000000000682f20 00000000000000cc t OT::SVG::accelerator_t::reference_blob_for_glyph(unsigned int) const
0000000000682ff0 00000000000002a8 T hb_ot_font_set_funcs
00000000006832a0 00000000000002f8 t bool OT::ArrayOf<OT::VariationSelectorRecord, OT::IntType<unsigned int, 4u> >::sanitize<OT::CmapSubtableFormat14 const*>(hb_sanitize_context_t*, OT::CmapSubtableFormat14 const*&&) const
00000000006835a0 00000000000003a8 t OT::CmapSubtable::sanitize(hb_sanitize_context_t*) const
0000000000683950 00000000000001b8 t bool OT::ArrayOf<OT::EncodingRecord, OT::IntType<unsigned short, 2u> >::sanitize<OT::cmap const*>(hb_sanitize_context_t*, OT::cmap const*&&) const
0000000000683b10 000000000000064c W OT::cmap::accelerator_t::accelerator_t(hb_face_t*)
0000000000683b10 000000000000064c t OT::cmap::accelerator_t::accelerator_t(hb_face_t*)
0000000000684160 000000000000023c t hb_ot_get_variation_glyph(hb_font_t*, void*, unsigned int, unsigned int, unsigned int*, void*)
00000000006843a0 0000000000000194 t hb_ot_get_nominal_glyph(hb_font_t*, void*, unsigned int, unsigned int*, void*)
0000000000684540 000000000000019c t hb_ot_get_nominal_glyphs(hb_font_t*, void*, unsigned int, unsigned int const*, unsigned int, unsigned int*, unsigned int, void*)
00000000006846e0 0000000000000170 t bool OT::OffsetTo<OT::DeltaSetIndexMap, OT::IntType<unsigned int, 4u>, true>::sanitize<>(hb_sanitize_context_t*, void const*) const
0000000000684850 0000000000000194 t OT::HVARVVAR::sanitize(hb_sanitize_context_t*) const
00000000006849f0 0000000000001594 t bool OT::glyf_impl::Glyph::get_points<OT::glyf_accelerator_t>(hb_font_t*, OT::glyf_accelerator_t const&, OT::contour_point_vector_t&, OT::contour_point_vector_t*, head_maxp_info_t*, unsigned int*, bool, bool, bool, hb_array_t<int>, unsigned int, unsigned int*) const
0000000000685f90 0000000000000248 t bool OT::glyf_accelerator_t::get_points<OT::glyf_accelerator_t::points_aggregator_t>(hb_font_t*, unsigned int, OT::glyf_accelerator_t::points_aggregator_t) const
00000000006861e0 0000000000000228 t CFF::opset_t<CFF::number_t>::process_op(unsigned int, CFF::interp_env_t<CFF::number_t>&)
0000000000686410 00000000000002a0 t CFF::dict_opset_t::process_op(unsigned int, CFF::interp_env_t<CFF::number_t>&)
00000000006866b0 0000000000000828 t CFF::cff1_top_dict_opset_t::process_op(unsigned int, CFF::cff1_top_dict_interp_env_t&, CFF::cff1_top_dict_values_t&)
0000000000686ee0 0000000000000220 t CFF::FDSelect3_4<OT::IntType<unsigned short, 2u>, OT::IntType<unsigned char, 1u> >::sanitize(hb_sanitize_context_t*, unsigned int) const
0000000000687100 0000000000000214 t CFF::CFFIndex<OT::IntType<unsigned short, 2u> >::operator[](unsigned int) const
0000000000687320 0000000000000154 t CFF::parsed_values_t<CFF::op_str_t>::add_op(unsigned int, CFF::byte_str_ref_t const&, CFF::op_str_t const&)
0000000000687480 0000000000000154 t CFF::parsed_values_t<CFF::dict_val_t>::add_op(unsigned int, CFF::byte_str_ref_t const&, CFF::dict_val_t const&)
00000000006875e0 00000000000000e0 t OT::cff1::accelerator_templ_t<CFF::cff1_private_dict_opset_t, CFF::cff1_private_dict_values_base_t<CFF::dict_val_t> >::fini()
00000000006876c0 0000000000000180 t OT::cff1::accelerator_templ_t<CFF::cff1_private_dict_opset_t, CFF::cff1_private_dict_values_base_t<CFF::dict_val_t> >::sid_to_glyph(unsigned int) const
0000000000687840 00000000000004f4 t OT::cff1::accelerator_t::get_glyph_from_name(char const*, int, unsigned int*) const
0000000000687d40 0000000000000258 t CFF::FDSelect3_4<OT::IntType<unsigned int, 4u>, OT::IntType<unsigned short, 2u> >::sanitize(hb_sanitize_context_t*, unsigned int) const
0000000000687fa0 0000000000000110 t OT::IndexSubtableFormat1Or3<OT::IntType<unsigned int, 4u> >::get_image_data(unsigned int, unsigned int*, unsigned int*) const
00000000006880b0 0000000000000174 t OT::IndexSubtableRecord::get_image_data(unsigned int, void const*, unsigned int*, unsigned int*, unsigned int*) const
0000000000688230 0000000000000248 t OT::CBDT::accelerator_t::get_extents(hb_font_t*, unsigned int, hb_glyph_extents_t*, bool) const
0000000000688480 0000000000000200 t OT::CBDT::accelerator_t::reference_png(hb_font_t*, unsigned int) const
0000000000688680 0000000000000248 t bool OT::UnsizedArrayOf<OT::IndexSubtableRecord>::sanitize<OT::IndexSubtableArray const*>(hb_sanitize_context_t*, unsigned int, OT::IndexSubtableArray const*&&) const
00000000006888d0 00000000000001f4 t bool OT::ArrayOf<OT::BitmapSizeTable, OT::IntType<unsigned int, 4u> >::sanitize<OT::CBLC const*>(hb_sanitize_context_t*, OT::CBLC const*&&) const
0000000000688ad0 0000000000000314 W OT::CBDT::accelerator_t::accelerator_t(hb_face_t*)
0000000000688ad0 0000000000000314 t OT::CBDT::accelerator_t::accelerator_t(hb_face_t*)
0000000000688df0 000000000000021c t bool OT::ArrayOf<OT::ClipRecord, OT::IntType<unsigned int, 4u> >::sanitize<OT::ClipList const*>(hb_sanitize_context_t*, OT::ClipList const*&&) const
0000000000689010 00000000000001bc t bool OT::ArrayOf<OT::OffsetTo<OT::SBIXStrike, OT::IntType<unsigned int, 4u>, true>, OT::IntType<unsigned int, 4u> >::sanitize<OT::sbix const*>(hb_sanitize_context_t*, OT::sbix const*&&) const
00000000006891d0 0000000000000098 t CFF::CFFIndex<OT::IntType<unsigned short, 2u> >::offset_at(unsigned int) const
0000000000689270 0000000000000178 t CFF::CFFIndex<OT::IntType<unsigned short, 2u> >::sanitize(hb_sanitize_context_t*) const
00000000006893f0 0000000000000230 t hb_vector_t<CFF::cff1_private_dict_values_base_t<CFF::dict_val_t>, false>::resize(int, bool, bool)
0000000000689620 00000000000001c0 t hb_vector_t<CFF::cff1_font_dict_values_t, false>::push()
00000000006897e0 00000000000004e8 t CFF::dict_interpreter_t<CFF::cff1_font_dict_opset_t, CFF::cff1_font_dict_values_t, CFF::interp_env_t<CFF::number_t> >::interpret(CFF::cff1_font_dict_values_t&)
0000000000689cd0 000000000000044c t CFF::dict_interpreter_t<CFF::cff1_private_dict_opset_t, CFF::cff1_private_dict_values_base_t<CFF::dict_val_t>, CFF::interp_env_t<CFF::number_t> >::interpret(CFF::cff1_private_dict_values_base_t<CFF::dict_val_t>&)
000000000068a120 0000000000000d94 t OT::cff1::accelerator_templ_t<CFF::cff1_private_dict_opset_t, CFF::cff1_private_dict_values_base_t<CFF::dict_val_t> >::init(hb_face_t*)
000000000068aec0 000000000000030c t CFF::dict_interpreter_t<CFF::cff2_top_dict_opset_t, CFF::cff2_top_dict_values_t, CFF::interp_env_t<CFF::number_t> >::interpret(CFF::cff2_top_dict_values_t&)
000000000068b1d0 0000000000000194 t CFF::CFFIndex<OT::IntType<unsigned int, 4u> >::sanitize(hb_sanitize_context_t*) const
000000000068b370 00000000000001bc t hb_vector_t<CFF::cff2_font_dict_values_t, false>::push()
000000000068b530 0000000000000098 t CFF::CFFIndex<OT::IntType<unsigned int, 4u> >::offset_at(unsigned int) const
000000000068b5d0 0000000000000e68 W OT::cff2::accelerator_templ_t<CFF::cff2_private_dict_opset_t, CFF::cff2_private_dict_values_base_t<CFF::dict_val_t> >::accelerator_templ_t(hb_face_t*)
000000000068b5d0 0000000000000e68 t OT::cff2::accelerator_templ_t<CFF::cff2_private_dict_opset_t, CFF::cff2_private_dict_values_base_t<CFF::dict_val_t> >::accelerator_templ_t(hb_face_t*)
000000000068c440 0000000000000200 t hb_lazy_loader_t<OT::cff2_accelerator_t, hb_face_lazy_loader_t<OT::cff2_accelerator_t, 17u>, hb_face_t, 17u, OT::cff2_accelerator_t>::get_stored() const
000000000068c640 00000000000001b8 t OT::PaintLinearGradient<OT::NoVariable>::paint_glyph(OT::hb_paint_context_t*, unsigned int) const
000000000068c800 00000000000001b8 t OT::PaintLinearGradient<OT::Variable>::paint_glyph(OT::hb_paint_context_t*, unsigned int) const
000000000068c9c0 00000000000001c0 t OT::PaintRadialGradient<OT::NoVariable>::paint_glyph(OT::hb_paint_context_t*, unsigned int) const
000000000068cb80 00000000000001c0 t OT::PaintRadialGradient<OT::Variable>::paint_glyph(OT::hb_paint_context_t*, unsigned int) const
000000000068cd40 0000000000000190 t OT::PaintSweepGradient<OT::NoVariable>::paint_glyph(OT::hb_paint_context_t*, unsigned int) const
000000000068ced0 0000000000000190 t OT::PaintSweepGradient<OT::Variable>::paint_glyph(OT::hb_paint_context_t*, unsigned int) const
000000000068d060 0000000000000640 t OT::hb_paint_context_t::return_t OT::Paint::dispatch<OT::hb_paint_context_t>(OT::hb_paint_context_t*) const [clone .isra.0]
000000000068d6a0 0000000000000058 t OT::hb_paint_context_t::recurse(OT::Paint const&)
000000000068d700 0000000000000138 t OT::PaintColrLayers::paint_glyph(OT::hb_paint_context_t*) const
000000000068d840 0000000000000158 t OT::PaintTranslate::paint_glyph(OT::hb_paint_context_t*, unsigned int) const
000000000068d9a0 0000000000000168 t OT::PaintScale::paint_glyph(OT::hb_paint_context_t*, unsigned int) const
000000000068db10 00000000000001a0 t OT::PaintSkew::paint_glyph(OT::hb_paint_context_t*, unsigned int) const
000000000068dcb0 000000000000020c t OT::PaintGlyph::paint_glyph(OT::hb_paint_context_t*) const
000000000068dec0 00000000000002e8 t OT::PaintScaleUniformAroundCenter::paint_glyph(OT::hb_paint_context_t*, unsigned int) const
000000000068e1b0 0000000000000358 t OT::PaintRotateAroundCenter::paint_glyph(OT::hb_paint_context_t*, unsigned int) const
000000000068e510 0000000000000328 t OT::PaintScaleAroundCenter::paint_glyph(OT::hb_paint_context_t*, unsigned int) const
000000000068e840 00000000000003ac t OT::PaintSkewAroundCenter::paint_glyph(OT::hb_paint_context_t*, unsigned int) const
000000000068ebf0 00000000000002d0 t OT::PaintColrGlyph::paint_glyph(OT::hb_paint_context_t*) const
000000000068eec0 000000000000054c t OT::COLR::paint_glyph(hb_font_t*, unsigned int, hb_paint_funcs_t*, void*, unsigned int, unsigned int, bool) const
000000000068f410 00000000000001a0 t hb_lazy_loader_t<OT::cff1_accelerator_t, hb_face_lazy_loader_t<OT::cff1_accelerator_t, 16u>, hb_face_t, 16u, OT::cff1_accelerator_t>::do_destroy(OT::cff1_accelerator_t*)
000000000068f5b0 0000000000000244 t hb_ot_get_glyph_from_name(hb_font_t*, void*, char const*, int, unsigned int*, void*)
000000000068f800 00000000000004f8 t hb_ot_get_glyph_name(hb_font_t*, void*, unsigned int, char*, unsigned int, void*)
000000000068fd00 0000000000000138 t hb_lazy_loader_t<OT::gvar_accelerator_t, hb_face_lazy_loader_t<OT::gvar_accelerator_t, 21u>, hb_face_t, 21u, OT::gvar_accelerator_t>::create(hb_face_t*)
000000000068fe40 0000000000000294 t hb_lazy_loader_t<OT::sbix_accelerator_t, hb_face_lazy_loader_t<OT::sbix_accelerator_t, 38u>, hb_face_t, 38u, OT::sbix_accelerator_t>::create(hb_face_t*)
00000000006900e0 0000000000000188 t hb_lazy_loader_t<OT::SVG_accelerator_t, hb_face_lazy_loader_t<OT::SVG_accelerator_t, 39u>, hb_face_t, 39u, OT::SVG_accelerator_t>::create(hb_face_t*)
0000000000690270 00000000000000c8 t hb_table_lazy_loader_t<OT::hhea, 4u, true>::create(hb_face_t*)
0000000000690340 00000000000004f8 W OT::hmtxvmtx<OT::hmtx, OT::hhea, OT::HVAR>::accelerator_t::accelerator_t(hb_face_t*)
0000000000690340 00000000000004f8 t OT::hmtxvmtx<OT::hmtx, OT::hhea, OT::HVAR>::accelerator_t::accelerator_t(hb_face_t*)
0000000000690840 00000000000000c8 t hb_table_lazy_loader_t<OT::vhea, 11u, true>::create(hb_face_t*)
0000000000690910 000000000000052c W OT::hmtxvmtx<OT::vmtx, OT::vhea, OT::VVAR>::accelerator_t::accelerator_t(hb_face_t*)
0000000000690910 000000000000052c t OT::hmtxvmtx<OT::vmtx, OT::vhea, OT::VVAR>::accelerator_t::accelerator_t(hb_face_t*)
0000000000690e40 0000000000000558 t OT::glyf_accelerator_t::glyf_accelerator_t(hb_face_t*)
0000000000690e40 0000000000000558 W OT::glyf_accelerator_t::glyf_accelerator_t(hb_face_t*)
00000000006913a0 00000000000001bc t _glyf_get_leading_bearing_with_var_unscaled(hb_font_t*, unsigned int, bool, int*)
0000000000691560 00000000000002e8 t _glyf_get_advance_with_var_unscaled(hb_font_t*, unsigned int, bool)
0000000000691850 0000000000000534 t hb_ot_get_glyph_v_advances(hb_font_t*, void*, unsigned int, unsigned int const*, unsigned int, int*, unsigned int, void*)
0000000000691d90 0000000000000260 t OT::hmtxvmtx<OT::hmtx, OT::hhea, OT::HVAR>::accelerator_t::get_advance_with_var_unscaled(unsigned int, hb_font_t*, float*) const
0000000000691ff0 0000000000000638 t hb_ot_get_glyph_h_advances(hb_font_t*, void*, unsigned int, unsigned int const*, unsigned int, int*, unsigned int, void*)
0000000000692630 0000000000000488 t hb_ot_draw_glyph(hb_font_t*, void*, unsigned int, hb_draw_funcs_t*, void*, void*)
0000000000692ac0 0000000000000b70 t hb_ot_get_glyph_v_origin(hb_font_t*, void*, unsigned int, int*, int*, void*)
0000000000693630 0000000000000144 t bool OT::OffsetTo<OT::ColorLine<OT::NoVariable>, OT::IntType<unsigned int, 3u>, true>::sanitize<>(hb_sanitize_context_t*, void const*) const
0000000000693780 0000000000000144 t bool OT::OffsetTo<OT::ColorLine<OT::Variable>, OT::IntType<unsigned int, 3u>, true>::sanitize<>(hb_sanitize_context_t*, void const*) const
00000000006938d0 0000000000000414 t hb_sanitize_context_t::return_t OT::Paint::dispatch<hb_sanitize_context_t>(hb_sanitize_context_t*) const
0000000000693cf0 00000000000000f0 t bool OT::OffsetTo<OT::Paint, OT::IntType<unsigned int, 3u>, true>::sanitize<>(hb_sanitize_context_t*, void const*) const
0000000000693de0 0000000000000258 t bool OT::OffsetTo<OT::BaseGlyphList, OT::IntType<unsigned int, 4u>, true>::sanitize<>(hb_sanitize_context_t*, void const*) const
0000000000694040 000000000000021c t bool OT::OffsetTo<OT::LayerList, OT::IntType<unsigned int, 4u>, true>::sanitize<>(hb_sanitize_context_t*, void const*) const
0000000000694260 0000000000000248 t OT::COLR::sanitize(hb_sanitize_context_t*) const
00000000006944b0 0000000000000828 t hb_ot_get_glyph_extents(hb_font_t*, void*, unsigned int, hb_glyph_extents_t*, void*)
0000000000694ce0 00000000000007e4 t hb_ot_paint_glyph(hb_font_t*, void*, unsigned int, hb_paint_funcs_t*, void*, unsigned int, unsigned int, void*)
00000000006954d0 000000000000020c t OT::PaintTransform<OT::NoVariable>::sanitize(hb_sanitize_context_t*) const
00000000006956e0 000000000000020c t OT::PaintTransform<OT::Variable>::sanitize(hb_sanitize_context_t*) const
00000000006958f0 00000000000000d4 t hb_outline_recording_pen_close_path(hb_draw_funcs_t*, void*, hb_draw_state_t*, void*)
00000000006959d0 00000000000000f0 t hb_outline_recording_pen_move_to(hb_draw_funcs_t*, void*, hb_draw_state_t*, float, float, void*)
0000000000695ac0 00000000000000f4 t hb_outline_recording_pen_line_to(hb_draw_funcs_t*, void*, hb_draw_state_t*, float, float, void*)
0000000000695bc0 00000000000001dc t hb_outline_recording_pen_quadratic_to(hb_draw_funcs_t*, void*, hb_draw_state_t*, float, float, float, float, void*)
0000000000695da0 00000000000002c8 t hb_outline_recording_pen_cubic_to(hb_draw_funcs_t*, void*, hb_draw_state_t*, float, float, float, float, float, float, void*)
0000000000696070 00000000000003d8 t hb_outline_t::replay(hb_draw_funcs_t*, void*) const
0000000000696450 00000000000000c8 t hb_outline_t::control_area() const
0000000000696520 00000000000003fc t hb_outline_t::embolden(float, float, float, float)
0000000000696920 0000000000000114 t hb_outline_recording_pen_get_funcs()
0000000000696a40 00000000000001e0 t hb_paint_extents_pop_group(hb_paint_funcs_t*, void*, hb_paint_composite_mode_t, void*)
0000000000696c20 0000000000000014 t hb_paint_extents_pop_transform(hb_paint_funcs_t*, void*, void*)
0000000000696c40 0000000000000194 t hb_paint_extents_push_transform(hb_paint_funcs_t*, void*, float, float, float, float, float, float, void*)
0000000000696de0 0000000000000104 t hb_paint_extents_push_group(hb_paint_funcs_t*, void*, void*)
0000000000696ef0 0000000000000018 t hb_paint_extents_pop_clip(hb_paint_funcs_t*, void*, void*)
0000000000696f10 0000000000000118 t hb_paint_extents_paint_radial_gradient(hb_paint_funcs_t*, void*, hb_color_line_t*, float, float, float, float, float, float, void*)
0000000000697030 0000000000000118 t hb_paint_extents_paint_linear_gradient(hb_paint_funcs_t*, void*, hb_color_line_t*, float, float, float, float, float, float, void*)
0000000000697150 0000000000000118 t hb_paint_extents_paint_color(hb_paint_funcs_t*, void*, int, unsigned int, void*)
0000000000697270 0000000000000118 t hb_paint_extents_paint_sweep_gradient(hb_paint_funcs_t*, void*, hb_color_line_t*, float, float, float, float, void*)
0000000000697390 0000000000000050 t hb_draw_extents_line_to(hb_draw_funcs_t*, void*, hb_draw_state_t*, float, float, void*)
00000000006973e0 0000000000000050 t hb_draw_extents_move_to(hb_draw_funcs_t*, void*, hb_draw_state_t*, float, float, void*)
0000000000697430 0000000000000094 t hb_draw_extents_quadratic_to(hb_draw_funcs_t*, void*, hb_draw_state_t*, float, float, float, float, void*)
00000000006974d0 00000000000000d8 t hb_draw_extents_cubic_to(hb_draw_funcs_t*, void*, hb_draw_state_t*, float, float, float, float, float, float, void*)
00000000006975b0 0000000000000240 t hb_paint_extents_context_t::push_clip(hb_extents_t)
00000000006977f0 0000000000000050 t hb_paint_extents_push_clip_rectangle(hb_paint_funcs_t*, void*, float, float, float, float, void*)
0000000000697840 00000000000001ac t hb_paint_extents_paint_image(hb_paint_funcs_t*, void*, hb_blob_t*, unsigned int, unsigned int, unsigned int, float, hb_glyph_extents_t*, void*)
00000000006979f0 0000000000000144 t hb_paint_extents_push_clip_glyph(hb_paint_funcs_t*, void*, unsigned int, hb_font_t*, void*)
0000000000697b40 00000000000001b8 t hb_paint_extents_get_funcs()
0000000000697d00 00000000000000dc t OT::MVAR::get_var(unsigned int, int const*, unsigned int) const
0000000000697de0 00000000000001fc t OT::MVAR::sanitize(hb_sanitize_context_t*) const
0000000000697fe0 0000000000000278 t hb_lazy_loader_t<OT::MVAR, hb_table_lazy_loader_t<OT::MVAR, 22u, true>, hb_face_t, 22u, hb_blob_t>::get() const
0000000000698260 00000000000001ac t hb_lazy_loader_t<OT::OS2, hb_table_lazy_loader_t<OT::OS2, 6u, true>, hb_face_t, 6u, hb_blob_t>::get() const
0000000000698410 0000000000000b1c t _hb_ot_metrics_get_position_common(hb_font_t*, hb_ot_metrics_tag_t, int*)
0000000000698f30 0000000000000020 t _hb_glyph_info_is_default_ignorable(hb_glyph_info_t const*)
0000000000698f50 00000000000002d8 t _hb_glyph_info_set_unicode_props(hb_glyph_info_t*, hb_buffer_t*)
0000000000699230 0000000000000028 t hb_buffer_t::allocate_var(unsigned int, unsigned int) [clone .part.0]
0000000000699260 0000000000000028 t hb_buffer_t::deallocate_var(unsigned int, unsigned int) [clone .part.0]
0000000000699290 0000000000000080 t hb_buffer_t::message(hb_font_t*, char const*, ...)
0000000000699310 0000000000000994 t hb_ot_shape_planner_t::hb_ot_shape_planner_t(hb_face_t*, hb_segment_properties_t const&)
0000000000699310 0000000000000994 T hb_ot_shape_planner_t::hb_ot_shape_planner_t(hb_face_t*, hb_segment_properties_t const&)
0000000000699cb0 0000000000000700 t hb_ot_shape_planner_t::compile(hb_ot_shape_plan_t&, hb_ot_shape_plan_key_t const&)
000000000069a3b0 0000000000000360 t hb_ot_shape_plan_t::init0(hb_face_t*, hb_shape_plan_key_t const*)
000000000069a710 0000000000000074 t hb_ot_shape_plan_t::fini()
000000000069a790 00000000000000d4 t hb_ot_shape_plan_t::position(hb_font_t*, hb_buffer_t*) const
000000000069a870 0000000000000008 t _hb_ot_shaper_face_data_create
000000000069a880 0000000000000004 t _hb_ot_shaper_face_data_destroy
000000000069a890 0000000000000008 t _hb_ot_shaper_font_data_create
000000000069a8a0 0000000000000004 t _hb_ot_shaper_font_data_destroy
000000000069a8b0 0000000000001de8 t _hb_ot_shape
000000000069c6a0 000000000000011c T hb_ot_var_named_instance_get_design_coords
000000000069c7c0 00000000000003a4 T hb_ot_var_normalize_coords
000000000069cb70 0000000000000368 t hb_shape_plan_key_t::init(bool, hb_face_t*, hb_segment_properties_t const*, hb_feature_t const*, unsigned int, int const*, unsigned int, char const* const*)
000000000069cee0 0000000000000098 t hb_shape_plan_key_t::user_features_match(hb_shape_plan_key_t const*)
000000000069cf80 0000000000000070 t hb_shape_plan_key_t::equal(hb_shape_plan_key_t const*)
000000000069cff0 000000000000000c T hb_shape_plan_get_empty
000000000069d000 0000000000000144 T hb_shape_plan_create2
000000000069d150 0000000000000058 T hb_shape_plan_reference
000000000069d1b0 00000000000001a4 T hb_shape_plan_destroy
000000000069d360 0000000000000258 T hb_shape_plan_execute
000000000069d5c0 00000000000001b0 T hb_shape_plan_create_cached2
000000000069d770 00000000000001b8 T hb_shape_full
000000000069d930 0000000000000008 T hb_shape
000000000069d940 0000000000000188 t hb_shapers_lazy_loader_t::create()
000000000069dad0 0000000000000090 t _hb_shapers_get()
000000000069db60 00000000000001a4 t hb_face_t::load_num_glyphs() const
000000000069dd10 0000000000000194 t hb_face_t::load_upem() const
000000000069deb0 0000000000000008 t hb_unicode_combining_class_nil(hb_unicode_funcs_t*, unsigned int, void*)
000000000069dec0 0000000000000008 t hb_unicode_eastasian_width_nil(hb_unicode_funcs_t*, unsigned int, void*)
000000000069ded0 0000000000000008 t hb_unicode_general_category_nil(hb_unicode_funcs_t*, unsigned int, void*)
000000000069dee0 0000000000000008 t hb_unicode_mirroring_nil(hb_unicode_funcs_t*, unsigned int, void*)
000000000069def0 000000000000000c t hb_unicode_script_nil(hb_unicode_funcs_t*, unsigned int, void*)
000000000069df00 0000000000000008 t hb_unicode_compose_nil(hb_unicode_funcs_t*, unsigned int, unsigned int, unsigned int*, void*)
000000000069df10 0000000000000008 t hb_unicode_decompose_nil(hb_unicode_funcs_t*, unsigned int, unsigned int*, unsigned int*, void*)
000000000069df20 0000000000000008 t hb_unicode_decompose_compatibility_nil(hb_unicode_funcs_t*, unsigned int, unsigned int*, void*)
000000000069df30 0000000000000004 T hb_unicode_funcs_get_default
000000000069df40 000000000000000c T hb_unicode_funcs_get_empty
000000000069df50 0000000000000058 T hb_unicode_funcs_reference
000000000069dfb0 00000000000001e0 T hb_unicode_funcs_destroy
000000000069dfb0 00000000000001e0 t hb_unicode_funcs_destroy.localalias
000000000069e190 0000000000000018 T hb_unicode_funcs_make_immutable
000000000069e1b0 00000000000000b8 T hb_unicode_funcs_create
000000000069e270 00000000000000b0 T hb_unicode_funcs_set_combining_class_func
000000000069e320 00000000000000b0 T hb_unicode_funcs_set_general_category_func
000000000069e3d0 00000000000000b0 T hb_unicode_funcs_set_mirroring_func
000000000069e480 00000000000000b0 T hb_unicode_funcs_set_script_func
000000000069e530 00000000000000b0 T hb_unicode_funcs_set_compose_func
000000000069e5e0 00000000000000b0 T hb_unicode_funcs_set_decompose_func
000000000069e690 000000000000007c t _hb_unicode_is_emoji_Extended_Pictographic(unsigned int)
000000000069e710 000000000000001c t _hb_ft_color_line_get_extend(hb_color_line_t*, void*, void*)
000000000069e730 0000000000000050 t _hb_ft_font_destroy(void*)
000000000069e780 00000000000000b0 t _hb_ft_reference_table(hb_face_t*, unsigned int, void*)
000000000069e830 00000000000000c4 t hb_ft_get_glyph_contour_point(hb_font_t*, void*, unsigned int, unsigned int, int*, int*, void*)
000000000069e900 0000000000000084 t hb_ft_get_glyph_name(hb_font_t*, void*, unsigned int, char*, unsigned int, void*)
000000000069e990 0000000000000120 t hb_ft_get_glyph_from_name(hb_font_t*, void*, char const*, int, unsigned int*, void*)
000000000069eab0 00000000000001a8 t hb_ft_get_glyph_v_origin(hb_font_t*, void*, unsigned int, int*, int*, void*)
000000000069ec60 0000000000000244 t hb_ft_get_glyph_extents(hb_font_t*, void*, unsigned int, hb_glyph_extents_t*, void*)
000000000069eeb0 0000000000000084 t hb_ft_get_glyph_h_kerning(hb_font_t*, void*, unsigned int, unsigned int, void*)
000000000069ef40 0000000000000158 t hb_ft_get_glyph_v_advance(hb_font_t*, void*, unsigned int, void*)
000000000069f0a0 0000000000000180 t hb_ft_get_font_h_extents(hb_font_t*, void*, hb_font_extents_t*, void*)
000000000069f220 0000000000000090 t hb_ft_get_variation_glyph(hb_font_t*, void*, unsigned int, unsigned int, unsigned int*, void*)
000000000069f2b0 0000000000000098 t hb_ft_get_nominal_glyphs(hb_font_t*, void*, unsigned int, unsigned int const*, unsigned int, unsigned int*, unsigned int, void*)
000000000069f350 00000000000001f4 t hb_ft_get_glyph_h_advances(hb_font_t*, void*, unsigned int, unsigned int const*, unsigned int, int*, unsigned int, void*)
000000000069f550 00000000000001fc t _hb_ft_color_line_get_color_stops(hb_color_line_t*, void*, unsigned int, unsigned int*, hb_color_stop_t*, void*)
000000000069f750 0000000000000154 t _hb_ft_cubic_to(FT_Vector_ const*, FT_Vector_ const*, FT_Vector_ const*, void*)
000000000069f8b0 00000000000000cc t _hb_ft_line_to(FT_Vector_ const*, void*)
000000000069f980 00000000000000f8 t _hb_ft_conic_to(FT_Vector_ const*, FT_Vector_ const*, void*)
000000000069fa80 00000000000000e4 t _hb_ft_move_to(FT_Vector_ const*, void*)
000000000069fb70 0000000000000268 t hb_ft_draw_glyph(hb_font_t*, void*, unsigned int, hb_draw_funcs_t*, void*, void*)
000000000069fde0 000000000000106c t _hb_ft_paint(hb_ft_paint_context_t*, FT_Opaque_Paint_)
00000000006a0e50 0000000000000028 T hb_ft_font_set_load_flags
00000000006a0e80 0000000000000510 t hb_ft_paint_glyph_colr(hb_font_t*, void*, unsigned int, hb_paint_funcs_t*, void*, unsigned int, unsigned int, void*) [clone .constprop.0]
00000000006a1390 00000000000001f0 t hb_ft_paint_glyph(hb_font_t*, void*, unsigned int, hb_paint_funcs_t*, void*, unsigned int, unsigned int, void*)
00000000006a1580 0000000000000178 t hb_ft_font_funcs_lazy_loader_t::create()
00000000006a1700 0000000000000144 t _hb_ft_font_set_funcs(hb_font_t*, FT_FaceRec_*, bool)
00000000006a1850 0000000000000098 T hb_ft_face_create
00000000006a18f0 000000000000017c T hb_ft_font_changed
00000000006a1a70 0000000000000058 T hb_ft_font_create
00000000006a1ad0 000000000000010c t hb_table_lazy_loader_t<OT::OS2, 6u, true>::create(hb_face_t*)
00000000006a1be0 0000000000000298 t hb_ft_get_nominal_glyph(hb_font_t*, void*, unsigned int, unsigned int*, void*)
00000000006a1e80 0000000000000014 t is_deleted_glyph(hb_glyph_info_t const*)
00000000006a1ea0 0000000000000028 t hb_sanitize_context_t::reset_object() [clone .part.0]
00000000006a1ed0 0000000000000028 t bool hb_buffer_t::replace_glyphs<unsigned int>(unsigned int, unsigned int, unsigned int const*) [clone .part.0]
00000000006a1f00 0000000000000028 t bool hb_buffer_t::replace_glyphs<OT::HBGlyphID16>(unsigned int, unsigned int, OT::HBGlyphID16 const*) [clone .part.0]
00000000006a1f30 0000000000000320 t AAT::Lookup<OT::IntType<unsigned int, 4u> >::get_value_or_null(unsigned int, unsigned int) const [clone .part.0]
00000000006a2250 00000000000006d0 t hb_buffer_t::_set_glyph_flags(unsigned int, unsigned int, unsigned int, bool, bool)
00000000006a2920 0000000000000140 t hb_font_t::get_glyph_v_origin_with_fallback(unsigned int, int*, int*)
00000000006a2a60 00000000000001dc t hb_font_t::get_glyph_contour_point_for_origin(unsigned int, unsigned int, hb_direction_t, int*, int*)
00000000006a2c40 0000000000000164 t AAT::ltag::sanitize(hb_sanitize_context_t*) const
00000000006a2db0 0000000000000354 t AAT::ankr::get_anchor(unsigned int, unsigned int, unsigned int) const
00000000006a3110 0000000000000134 t AAT::feat::sanitize(hb_sanitize_context_t*) const
00000000006a3250 0000000000000174 t OT::MarkGlyphSetsFormat1::covers(unsigned int, unsigned int) const
00000000006a33d0 000000000000023c t OT::GDEF::get_glyph_props(unsigned int) const
00000000006a3610 0000000000000288 t OT::hb_ot_apply_context_t::skipping_iterator_t::next(unsigned int*)
00000000006a38a0 000000000000027c t AAT::TrackData::get_tracking(void const*, float) const
00000000006a3b20 0000000000000204 t AAT::TrackData::sanitize(hb_sanitize_context_t*, void const*) const
00000000006a3d30 0000000000000190 t AAT::trak::sanitize(hb_sanitize_context_t*) const
00000000006a3ec0 0000000000000008 t AAT::hb_aat_apply_context_t::~hb_aat_apply_context_t()
00000000006a3ec0 0000000000000008 T AAT::hb_aat_apply_context_t::~hb_aat_apply_context_t()
00000000006a3ed0 0000000000000058 t hb_aat_layout_find_feature_mapping(unsigned int)
00000000006a3f30 000000000000004c t hb_aat_layout_zero_width_deleted_glyphs(hb_buffer_t*)
00000000006a3f80 000000000000000c t hb_aat_layout_remove_deleted_glyphs(hb_buffer_t*)
00000000006a3f90 00000000000001b8 t bool OT::OffsetTo<OT::Layout::Common::Coverage, OT::IntType<unsigned short, 2u>, true>::sanitize<>(hb_sanitize_context_t*, void const*) const
00000000006a4150 0000000000000348 t bool OT::ArrayOf<OT::OffsetTo<OT::CaretValue, OT::IntType<unsigned short, 2u>, true>, OT::IntType<unsigned short, 2u> >::sanitize<OT::LigGlyph const*>(hb_sanitize_context_t*, OT::LigGlyph const*&&) const
00000000006a44a0 0000000000000270 t bool OT::ArrayOf<OT::OffsetTo<OT::Layout::Common::Coverage, OT::IntType<unsigned int, 4u>, true>, OT::IntType<unsigned short, 2u> >::sanitize<OT::MarkGlyphSetsFormat1 const*>(hb_sanitize_context_t*, OT::MarkGlyphSetsFormat1 const*&&) const
00000000006a4710 0000000000000398 t AAT::StateTable<AAT::ObsoleteTypes, void>::sanitize(hb_sanitize_context_t*, unsigned int*) const
00000000006a4ab0 00000000000001d0 t bool OT::OffsetTo<OT::ClassDef, OT::IntType<unsigned short, 2u>, true>::sanitize<>(hb_sanitize_context_t*, void const*) const
00000000006a4c80 00000000000005e0 t OT::GDEFVersion1_2<OT::Layout::SmallTypes>::sanitize(hb_sanitize_context_t*) const
00000000006a5260 000000000000029c W OT::GDEF::accelerator_t::accelerator_t(hb_face_t*)
00000000006a5260 000000000000029c t OT::GDEF::accelerator_t::accelerator_t(hb_face_t*)
00000000006a5500 0000000000000324 t OT::hb_ot_apply_context_t::hb_ot_apply_context_t(unsigned int, hb_font_t*, hb_buffer_t*)
00000000006a5500 0000000000000324 W OT::hb_ot_apply_context_t::hb_ot_apply_context_t(unsigned int, hb_font_t*, hb_buffer_t*)
00000000006a5830 00000000000001d0 t AAT::hb_aat_apply_context_t::hb_aat_apply_context_t(hb_ot_shape_plan_t const*, hb_font_t*, hb_buffer_t*, hb_blob_t*)
00000000006a5830 00000000000001d0 T AAT::hb_aat_apply_context_t::hb_aat_apply_context_t(hb_ot_shape_plan_t const*, hb_font_t*, hb_buffer_t*, hb_blob_t*)
00000000006a5a00 0000000000000208 t hb_vector_t<hb_vector_t<hb_aat_map_t::range_flags_t, true>, false>::resize(int, bool, bool)
00000000006a5c10 0000000000000330 t AAT::Chain<AAT::ExtendedTypes>::compile_flags(hb_aat_map_builder_t const*) const
00000000006a5f40 0000000000000338 t AAT::Chain<AAT::ObsoleteTypes>::compile_flags(hb_aat_map_builder_t const*) const
00000000006a6280 0000000000000260 t bool OT::VarSizedBinSearchArrayOf<AAT::LookupSegmentArray<OT::IntType<unsigned short, 2u> > >::sanitize<AAT::LookupFormat4<OT::IntType<unsigned short, 2u> > const*>(hb_sanitize_context_t*, AAT::LookupFormat4<OT::IntType<unsigned short, 2u> > const*&&) const
00000000006a64e0 0000000000000264 t AAT::Lookup<OT::IntType<unsigned short, 2u> >::sanitize(hb_sanitize_context_t*) const
00000000006a6750 000000000000027c t AAT::StateTable<AAT::ExtendedTypes, AAT::Format1Entry<true>::EntryData>::sanitize(hb_sanitize_context_t*, unsigned int*) const
00000000006a69d0 000000000000027c t AAT::StateTable<AAT::ExtendedTypes, AAT::KerxSubTableFormat4<AAT::KerxSubTableHeader>::EntryData>::sanitize(hb_sanitize_context_t*, unsigned int*) const
00000000006a6c50 000000000000042c t OT::hb_kern_machine_t<AAT::KerxSubTableFormat0<AAT::KerxSubTableHeader>::accelerator_t>::kern(hb_font_t*, hb_buffer_t*, unsigned int, bool) const
00000000006a7080 0000000000000318 t hb_table_lazy_loader_t<AAT::trak, 32u, false>::create(hb_face_t*)
00000000006a73a0 000000000000032c t hb_aat_layout_track(hb_ot_shape_plan_t const*, hb_font_t*, hb_buffer_t*)
00000000006a76d0 00000000000000e8 T hb_aat_layout_has_tracking
00000000006a77c0 0000000000000140 t bool OT::UnsizedArrayOf<OT::OffsetTo<OT::ArrayOf<AAT::Anchor, OT::IntType<unsigned int, 4u> >, OT::IntType<unsigned short, 2u>, false> >::sanitize<void const*&>(hb_sanitize_context_t*, unsigned int, void const*&) const
00000000006a7900 0000000000000278 t bool OT::VarSizedBinSearchArrayOf<AAT::LookupSegmentSingle<OT::OffsetTo<OT::ArrayOf<AAT::Anchor, OT::IntType<unsigned int, 4u> >, OT::IntType<unsigned short, 2u>, false> > >::sanitize<void const*&>(hb_sanitize_context_t*, void const*&) const
00000000006a7b80 000000000000033c t bool OT::VarSizedBinSearchArrayOf<AAT::LookupSegmentArray<OT::OffsetTo<OT::ArrayOf<AAT::Anchor, OT::IntType<unsigned int, 4u> >, OT::IntType<unsigned short, 2u>, false> > >::sanitize<AAT::LookupFormat4<OT::OffsetTo<OT::ArrayOf<AAT::Anchor, OT::IntType<unsigned int, 4u> >, OT::IntType<unsigned short, 2u>, false> > const*, void const*&>(hb_sanitize_context_t*, AAT::LookupFormat4<OT::OffsetTo<OT::ArrayOf<AAT::Anchor, OT::IntType<unsigned int, 4u> >, OT::IntType<unsigned short, 2u>, false> > const*&&, void const*&) const
00000000006a7ec0 0000000000000254 t bool OT::VarSizedBinSearchArrayOf<AAT::LookupSingle<OT::OffsetTo<OT::ArrayOf<AAT::Anchor, OT::IntType<unsigned int, 4u> >, OT::IntType<unsigned short, 2u>, false> > >::sanitize<void const*&>(hb_sanitize_context_t*, void const*&) const
00000000006a8120 000000000000025c t AAT::ankr::sanitize(hb_sanitize_context_t*) const
00000000006a8380 00000000000001fc t hb_table_lazy_loader_t<AAT::ankr, 31u, false>::create(hb_face_t*)
00000000006a8580 0000000000000398 t AAT::StateTable<AAT::ObsoleteTypes, AAT::ContextualSubtable<AAT::ObsoleteTypes>::EntryData>::sanitize(hb_sanitize_context_t*, unsigned int*) const
00000000006a8920 0000000000000398 t AAT::StateTable<AAT::ObsoleteTypes, AAT::InsertionSubtable<AAT::ObsoleteTypes>::EntryData>::sanitize(hb_sanitize_context_t*, unsigned int*) const
00000000006a8cc0 0000000000000310 t AAT::Lookup<OT::HBGlyphID16>::get_value(unsigned int, unsigned int) const
00000000006a8fd0 0000000000000810 t void AAT::StateTableDriver<AAT::ObsoleteTypes, void>::drive<AAT::RearrangementSubtable<AAT::ObsoleteTypes>::driver_context_t>(AAT::RearrangementSubtable<AAT::ObsoleteTypes>::driver_context_t*, AAT::hb_aat_apply_context_t*)
00000000006a97e0 0000000000000770 t void AAT::StateTableDriver<AAT::ObsoleteTypes, AAT::ContextualSubtable<AAT::ObsoleteTypes>::EntryData>::drive<AAT::ContextualSubtable<AAT::ObsoleteTypes>::driver_context_t>(AAT::ContextualSubtable<AAT::ObsoleteTypes>::driver_context_t*, AAT::hb_aat_apply_context_t*)
00000000006a9f50 0000000000000918 t void AAT::StateTableDriver<AAT::ObsoleteTypes, void>::drive<AAT::LigatureSubtable<AAT::ObsoleteTypes>::driver_context_t>(AAT::LigatureSubtable<AAT::ObsoleteTypes>::driver_context_t*, AAT::hb_aat_apply_context_t*)
00000000006aa870 0000000000000974 t void AAT::StateTableDriver<AAT::ObsoleteTypes, AAT::InsertionSubtable<AAT::ObsoleteTypes>::EntryData>::drive<AAT::InsertionSubtable<AAT::ObsoleteTypes>::driver_context_t>(AAT::InsertionSubtable<AAT::ObsoleteTypes>::driver_context_t*, AAT::hb_aat_apply_context_t*)
00000000006ab1f0 000000000000071c t AAT::Chain<AAT::ObsoleteTypes>::apply(AAT::hb_aat_apply_context_t*) const
00000000006ab910 0000000000000260 t bool OT::VarSizedBinSearchArrayOf<AAT::LookupSegmentArray<OT::HBGlyphID16> >::sanitize<AAT::LookupFormat4<OT::HBGlyphID16> const*>(hb_sanitize_context_t*, AAT::LookupFormat4<OT::HBGlyphID16> const*&&) const
00000000006abb70 0000000000000264 t AAT::Lookup<OT::HBGlyphID16>::sanitize(hb_sanitize_context_t*) const
00000000006abde0 0000000000000094 t AAT::ContextualSubtable<AAT::ObsoleteTypes>::sanitize(hb_sanitize_context_t*) const
00000000006abe80 0000000000000474 t AAT::mortmorx<AAT::ObsoleteTypes, 1836020340u>::sanitize(hb_sanitize_context_t*) const
00000000006ac300 00000000000001fc t hb_table_lazy_loader_t<AAT::mort, 29u, false>::create(hb_face_t*)
00000000006ac500 0000000000000238 t AAT::ContextualSubtable<AAT::ExtendedTypes>::driver_context_t::transition(AAT::StateTableDriver<AAT::ExtendedTypes, AAT::ContextualSubtable<AAT::ExtendedTypes>::EntryData>*, AAT::Entry<AAT::ContextualSubtable<AAT::ExtendedTypes>::EntryData> const&)
00000000006ac740 0000000000000310 t AAT::Lookup<OT::IntType<unsigned short, 2u> >::get_value(unsigned int, unsigned int) const
00000000006aca50 000000000000080c t void AAT::StateTableDriver<AAT::ExtendedTypes, AAT::KerxSubTableFormat4<AAT::KerxSubTableHeader>::EntryData>::drive<AAT::KerxSubTableFormat4<AAT::KerxSubTableHeader>::driver_context_t>(AAT::KerxSubTableFormat4<AAT::KerxSubTableHeader>::driver_context_t*, AAT::hb_aat_apply_context_t*)
00000000006ad260 0000000000000784 t void AAT::StateTableDriver<AAT::ExtendedTypes, AAT::Format1Entry<true>::EntryData>::drive<AAT::KerxSubTableFormat1<AAT::KerxSubTableHeader>::driver_context_t>(AAT::KerxSubTableFormat1<AAT::KerxSubTableHeader>::driver_context_t*, AAT::hb_aat_apply_context_t*)
00000000006ad9f0 000000000000048c t AAT::KerxSubTableFormat6<AAT::KerxSubTableHeader>::get_kerning(unsigned int, unsigned int, AAT::hb_aat_apply_context_t*) const
00000000006ade80 000000000000033c t OT::hb_kern_machine_t<AAT::KerxSubTableFormat6<AAT::KerxSubTableHeader>::accelerator_t>::kern(hb_font_t*, hb_buffer_t*, unsigned int, bool) const
00000000006ae1c0 00000000000008cc t void AAT::StateTableDriver<AAT::ExtendedTypes, AAT::LigatureEntry<true>::EntryData>::drive<AAT::LigatureSubtable<AAT::ExtendedTypes>::driver_context_t>(AAT::LigatureSubtable<AAT::ExtendedTypes>::driver_context_t*, AAT::hb_aat_apply_context_t*)
00000000006aea90 00000000000007f8 t void AAT::StateTableDriver<AAT::ExtendedTypes, void>::drive<AAT::RearrangementSubtable<AAT::ExtendedTypes>::driver_context_t>(AAT::RearrangementSubtable<AAT::ExtendedTypes>::driver_context_t*, AAT::hb_aat_apply_context_t*)
00000000006af290 0000000000000508 t void AAT::StateTableDriver<AAT::ExtendedTypes, AAT::ContextualSubtable<AAT::ExtendedTypes>::EntryData>::drive<AAT::ContextualSubtable<AAT::ExtendedTypes>::driver_context_t>(AAT::ContextualSubtable<AAT::ExtendedTypes>::driver_context_t*, AAT::hb_aat_apply_context_t*)
00000000006af7a0 000000000000095c t void AAT::StateTableDriver<AAT::ExtendedTypes, AAT::InsertionSubtable<AAT::ExtendedTypes>::EntryData>::drive<AAT::InsertionSubtable<AAT::ExtendedTypes>::driver_context_t>(AAT::InsertionSubtable<AAT::ExtendedTypes>::driver_context_t*, AAT::hb_aat_apply_context_t*)
00000000006b0100 00000000000006fc t AAT::Chain<AAT::ExtendedTypes>::apply(AAT::hb_aat_apply_context_t*) const
00000000006b0800 0000000000000478 t OT::hb_kern_machine_t<AAT::KerxSubTableFormat2<AAT::KerxSubTableHeader>::accelerator_t>::kern(hb_font_t*, hb_buffer_t*, unsigned int, bool) const
00000000006b0c80 0000000000000268 t bool OT::VarSizedBinSearchArrayOf<AAT::LookupSegmentArray<OT::IntType<unsigned int, 4u> > >::sanitize<AAT::LookupFormat4<OT::IntType<unsigned int, 4u> > const*>(hb_sanitize_context_t*, AAT::LookupFormat4<OT::IntType<unsigned int, 4u> > const*&&) const
00000000006b0ef0 0000000000000268 t AAT::Lookup<OT::IntType<unsigned int, 4u> >::sanitize(hb_sanitize_context_t*) const
00000000006b1160 000000000000025c t AAT::KerxSubTableFormat6<AAT::KerxSubTableHeader>::sanitize(hb_sanitize_context_t*) const
00000000006b13c0 00000000000002ac t hb_sanitize_context_t::return_t AAT::KerxSubTable::dispatch<hb_sanitize_context_t>(hb_sanitize_context_t*) const
00000000006b1670 0000000000000270 t AAT::KerxTable<AAT::kerx>::sanitize(hb_sanitize_context_t*) const
00000000006b18e0 00000000000001fc t hb_table_lazy_loader_t<AAT::kerx, 30u, false>::create(hb_face_t*)
00000000006b1ae0 000000000000080c t hb_aat_layout_position(hb_ot_shape_plan_t const*, hb_font_t*, hb_buffer_t*)
00000000006b22f0 00000000000000e8 T hb_aat_layout_has_positioning
00000000006b23e0 000000000000027c t AAT::StateTable<AAT::ExtendedTypes, void>::sanitize(hb_sanitize_context_t*, unsigned int*) const
00000000006b2660 000000000000027c t AAT::StateTable<AAT::ExtendedTypes, AAT::ContextualSubtable<AAT::ExtendedTypes>::EntryData>::sanitize(hb_sanitize_context_t*, unsigned int*) const
00000000006b28e0 00000000000001c8 t AAT::ContextualSubtable<AAT::ExtendedTypes>::sanitize(hb_sanitize_context_t*) const
00000000006b2ab0 000000000000027c t AAT::StateTable<AAT::ExtendedTypes, AAT::LigatureEntry<true>::EntryData>::sanitize(hb_sanitize_context_t*, unsigned int*) const
00000000006b2d30 000000000000027c t AAT::StateTable<AAT::ExtendedTypes, AAT::InsertionSubtable<AAT::ExtendedTypes>::EntryData>::sanitize(hb_sanitize_context_t*, unsigned int*) const
00000000006b2fb0 00000000000003a8 t AAT::Chain<AAT::ExtendedTypes>::sanitize(hb_sanitize_context_t*, unsigned int) const [clone .isra.0]
00000000006b3360 000000000000031c t hb_table_lazy_loader_t<AAT::morx, 28u, false>::create(hb_face_t*)
00000000006b3680 0000000000000458 t hb_aat_layout_substitute(hb_ot_shape_plan_t const*, hb_font_t*, hb_buffer_t*, hb_feature_t const*, unsigned int)
00000000006b3ae0 0000000000000194 T hb_aat_layout_has_substitution
00000000006b3c80 000000000000046c t hb_aat_layout_compile_map(hb_aat_map_builder_t const*, hb_aat_map_t*)
00000000006b40f0 0000000000000060 W hb_aat_map_builder_t::feature_info_t::cmp(void const*, void const*)
00000000006b4150 0000000000000094 W hb_aat_map_builder_t::feature_event_t::cmp(void const*, void const*)
00000000006b41f0 0000000000000420 t void sort_r_simple<>(void*, unsigned long, unsigned long, int (*)(void const*, void const*))
00000000006b4610 0000000000000864 t hb_aat_map_builder_t::compile(hb_aat_map_t&)
00000000006b4e80 000000000000011c t hb_table_lazy_loader_t<AAT::feat, 34u, false>::create(hb_face_t*)
00000000006b4fa0 00000000000006ac t hb_aat_map_builder_t::add_feature(hb_feature_t const&)
00000000006b5650 000000000000000c T hb_blob_get_empty
00000000006b5660 0000000000000058 T hb_blob_reference
00000000006b56c0 0000000000000168 T hb_blob_destroy
00000000006b5830 0000000000000004 t _hb_blob_destroy(void*)
00000000006b5840 0000000000000018 T hb_blob_make_immutable
00000000006b5860 00000000000000b0 t hb_blob_t::try_make_writable()
00000000006b5910 0000000000000060 T hb_blob_get_data_writable
00000000006b5970 00000000000000d4 T hb_blob_create_or_fail
00000000006b5a50 0000000000000030 T hb_blob_create
00000000006b5a80 0000000000000094 T hb_blob_create_sub_blob
00000000006b5b20 00000000000000d4 t buffer_verify_error(hb_buffer_t*, hb_font_t*, char const*, ...)
00000000006b5c00 000000000000093c t hb_buffer_t::verify(hb_buffer_t*, hb_font_t*, hb_feature_t const*, unsigned int, char const* const*)
00000000006b6540 0000000000000004 t hb_draw_move_to_nil(hb_draw_funcs_t*, void*, hb_draw_state_t*, float, float, void*)
00000000006b6550 0000000000000054 t hb_draw_quadratic_to_nil(hb_draw_funcs_t*, void*, hb_draw_state_t*, float, float, float, float, void*)
00000000006b65b0 0000000000000004 t hb_draw_cubic_to_nil(hb_draw_funcs_t*, void*, hb_draw_state_t*, float, float, float, float, float, float, void*)
00000000006b65c0 0000000000000004 t hb_draw_close_path_nil(hb_draw_funcs_t*, void*, hb_draw_state_t*, void*)
00000000006b65d0 000000000000008c t _hb_draw_funcs_set_middle(hb_draw_funcs_t*, void*, void (*)(void*))
00000000006b6660 0000000000000004 t hb_draw_line_to_nil(hb_draw_funcs_t*, void*, hb_draw_state_t*, float, float, void*)
00000000006b6670 0000000000000070 t _hb_draw_funcs_set_preamble(hb_draw_funcs_t*, bool, void**, void (**)(void*))
00000000006b66e0 00000000000000c0 T hb_draw_funcs_set_move_to_func
00000000006b67a0 00000000000000c0 T hb_draw_funcs_set_line_to_func
00000000006b6860 00000000000000c0 T hb_draw_funcs_set_quadratic_to_func
00000000006b6920 00000000000000c0 T hb_draw_funcs_set_cubic_to_func
00000000006b69e0 00000000000000c0 T hb_draw_funcs_set_close_path_func
00000000006b6aa0 0000000000000070 T hb_draw_funcs_create
00000000006b6b10 000000000000000c T hb_draw_funcs_get_empty
00000000006b6b20 00000000000001f8 T hb_draw_funcs_destroy
00000000006b6d20 0000000000000018 T hb_draw_funcs_make_immutable
00000000006b6d40 0000000000000028 t _hb_face_for_data_closure_destroy(void*)
00000000006b6d70 00000000000000e4 t void hb_object_fini<hb_sparseset_t<hb_bit_set_invertible_t> >(hb_sparseset_t<hb_bit_set_invertible_t>*)
00000000006b6d70 00000000000000e4 t void hb_object_fini<hb_face_t>(hb_face_t*)
00000000006b6e60 0000000000000204 t OT::OpenTypeFontFile::get_face(unsigned int, unsigned int*) const
00000000006b7070 0000000000000134 t _hb_face_for_data_reference_table(hb_face_t*, unsigned int, void*)
00000000006b71b0 000000000000000c T hb_face_get_empty
00000000006b71c0 00000000000000fc T hb_face_create_for_tables
00000000006b72c0 0000000000000058 T hb_face_reference
00000000006b7320 00000000000000f8 T hb_face_destroy
00000000006b7420 00000000000003cc T hb_face_set_user_data
00000000006b77f0 00000000000000d8 T hb_face_get_user_data
00000000006b78d0 0000000000000018 T hb_face_make_immutable
00000000006b78f0 0000000000000030 T hb_face_reference_table
00000000006b7920 0000000000000014 T hb_face_set_index
00000000006b7940 000000000000001c T hb_face_set_upem
00000000006b7960 0000000000000018 T hb_face_get_upem
00000000006b7980 000000000000001c T hb_face_get_glyph_count
00000000006b79a0 00000000000001e4 t bool OT::ArrayOf<OT::OffsetTo<OT::OpenTypeOffsetTable, OT::IntType<unsigned int, 4u>, true>, OT::IntType<unsigned int, 4u> >::sanitize<OT::TTCHeaderVersion1 const*>(hb_sanitize_context_t*, OT::TTCHeaderVersion1 const*&&) const
00000000006b7b90 0000000000000240 t bool OT::UnsizedArrayOf<OT::ResourceRecord>::sanitize<void const*&>(hb_sanitize_context_t*, unsigned int, void const*&) const
00000000006b7dd0 00000000000001c4 t bool OT::ArrayOfM1<OT::ResourceTypeRecord, OT::IntType<unsigned short, 2u> >::sanitize<OT::ArrayOfM1<OT::ResourceTypeRecord, OT::IntType<unsigned short, 2u> > const*, void const*&>(hb_sanitize_context_t*, OT::ArrayOfM1<OT::ResourceTypeRecord, OT::IntType<unsigned short, 2u> > const*&&, void const*&) const
00000000006b7fa0 00000000000001b0 t OT::ResourceForkHeader::sanitize(hb_sanitize_context_t*) const
00000000006b8150 00000000000001b4 t OT::OpenTypeFontFile::sanitize(hb_sanitize_context_t*) const
00000000006b8310 000000000000031c t hb_blob_t* hb_sanitize_context_t::sanitize_blob<OT::OpenTypeFontFile>(hb_blob_t*)
00000000006b8630 00000000000000a0 T hb_face_create
00000000006b86d0 0000000000000008 t _hb_fallback_shaper_face_data_create
00000000006b86e0 0000000000000004 t _hb_fallback_shaper_face_data_destroy
00000000006b86f0 0000000000000008 t _hb_fallback_shaper_font_data_create
00000000006b8700 0000000000000004 t _hb_fallback_shaper_font_data_destroy
00000000006b8710 00000000000004ec t _hb_fallback_shape
00000000006b8c00 0000000000000020 t OT::cff1::lookup_expert_charset_for_sid(unsigned int)
00000000006b8c20 0000000000000020 t OT::cff1::lookup_expert_subset_charset_for_sid(unsigned int)
00000000006b8c40 0000000000000064 t OT::cff1::lookup_expert_charset_for_glyph(unsigned int)
00000000006b8cb0 0000000000000064 t OT::cff1::lookup_expert_subset_charset_for_glyph(unsigned int)
00000000006b8d20 00000000000000f8 t cff1_path_param_t::move_to(CFF::point_t const&)
00000000006b8e20 00000000000000e8 t cff1_path_param_t::line_to(CFF::point_t const&)
00000000006b8f10 0000000000000140 t cff1_path_param_t::cubic_to(CFF::point_t const&, CFF::point_t const&, CFF::point_t const&)
00000000006b9050 000000000000017c t OT::cff1::accelerator_templ_t<CFF::cff1_private_dict_opset_t, CFF::cff1_private_dict_values_base_t<CFF::dict_val_t> >::std_code_to_glyph(unsigned int) const
00000000006b91d0 0000000000000420 t CFF::path_procs_t<cff1_path_procs_extents_t, CFF::cff1_cs_interp_env_t, cff1_extents_param_t>::hlineto(CFF::cff1_cs_interp_env_t&, cff1_extents_param_t&)
00000000006b95f0 0000000000000424 t CFF::path_procs_t<cff1_path_procs_extents_t, CFF::cff1_cs_interp_env_t, cff1_extents_param_t>::vlineto(CFF::cff1_cs_interp_env_t&, cff1_extents_param_t&)
00000000006b9a20 0000000000000370 t CFF::path_procs_t<cff1_path_procs_extents_t, CFF::cff1_cs_interp_env_t, cff1_extents_param_t>::rrcurveto(CFF::cff1_cs_interp_env_t&, cff1_extents_param_t&)
00000000006b9d90 0000000000000564 t CFF::path_procs_t<cff1_path_procs_extents_t, CFF::cff1_cs_interp_env_t, cff1_extents_param_t>::rcurveline(CFF::cff1_cs_interp_env_t&, cff1_extents_param_t&)
00000000006ba300 0000000000000568 t CFF::path_procs_t<cff1_path_procs_extents_t, CFF::cff1_cs_interp_env_t, cff1_extents_param_t>::rlinecurve(CFF::cff1_cs_interp_env_t&, cff1_extents_param_t&)
00000000006ba870 0000000000000dec t CFF::path_procs_t<cff1_path_procs_extents_t, CFF::cff1_cs_interp_env_t, cff1_extents_param_t>::vhcurveto(CFF::cff1_cs_interp_env_t&, cff1_extents_param_t&)
00000000006bb660 0000000000000dec t CFF::path_procs_t<cff1_path_procs_extents_t, CFF::cff1_cs_interp_env_t, cff1_extents_param_t>::hvcurveto(CFF::cff1_cs_interp_env_t&, cff1_extents_param_t&)
00000000006bc450 00000000000003fc t CFF::path_procs_t<cff1_path_procs_extents_t, CFF::cff1_cs_interp_env_t, cff1_extents_param_t>::hflex(CFF::cff1_cs_interp_env_t&, cff1_extents_param_t&)
00000000006bc850 000000000000041c t CFF::path_procs_t<cff1_path_procs_extents_t, CFF::cff1_cs_interp_env_t, cff1_extents_param_t>::flex(CFF::cff1_cs_interp_env_t&, cff1_extents_param_t&)
00000000006bcc70 0000000000000408 t CFF::path_procs_t<cff1_path_procs_extents_t, CFF::cff1_cs_interp_env_t, cff1_extents_param_t>::hflex1(CFF::cff1_cs_interp_env_t&, cff1_extents_param_t&)
00000000006bd080 0000000000000378 t CFF::path_procs_t<cff1_path_procs_extents_t, CFF::cff1_cs_interp_env_t, cff1_extents_param_t>::flex1(CFF::cff1_cs_interp_env_t&, cff1_extents_param_t&)
00000000006bd400 0000000000000fd0 t CFF::cs_opset_t<CFF::number_t, cff1_cs_opset_extents_t, CFF::cff1_cs_interp_env_t, cff1_extents_param_t, cff1_path_procs_extents_t>::process_op(unsigned int, CFF::cff1_cs_interp_env_t&, cff1_extents_param_t&)
00000000006be3d0 00000000000003f4 t _get_bounds(OT::cff1::accelerator_t const*, unsigned int, bounds_t&, bool)
00000000006be7d0 00000000000000e4 t OT::cff1::accelerator_t::get_extents(hb_font_t*, unsigned int, hb_glyph_extents_t*) const
00000000006be8c0 0000000000000344 t cff1_cs_opset_extents_t::process_seac(CFF::cff1_cs_interp_env_t&, cff1_extents_param_t&)
00000000006bec10 00000000000002f0 t CFF::path_procs_t<cff1_path_procs_path_t, CFF::cff1_cs_interp_env_t, cff1_path_param_t>::rcurveline(CFF::cff1_cs_interp_env_t&, cff1_path_param_t&)
00000000006bef00 00000000000002cc t CFF::path_procs_t<cff1_path_procs_path_t, CFF::cff1_cs_interp_env_t, cff1_path_param_t>::rlinecurve(CFF::cff1_cs_interp_env_t&, cff1_path_param_t&)
00000000006bf1d0 0000000000000710 t CFF::path_procs_t<cff1_path_procs_path_t, CFF::cff1_cs_interp_env_t, cff1_path_param_t>::vhcurveto(CFF::cff1_cs_interp_env_t&, cff1_path_param_t&)
00000000006bf8e0 0000000000000710 t CFF::path_procs_t<cff1_path_procs_path_t, CFF::cff1_cs_interp_env_t, cff1_path_param_t>::hvcurveto(CFF::cff1_cs_interp_env_t&, cff1_path_param_t&)
00000000006bfff0 00000000000000f8 t CFF::path_procs_t<cff1_path_procs_path_t, CFF::cff1_cs_interp_env_t, cff1_path_param_t>::hflex(CFF::cff1_cs_interp_env_t&, cff1_path_param_t&)
00000000006c00f0 00000000000000bc t CFF::path_procs_t<cff1_path_procs_path_t, CFF::cff1_cs_interp_env_t, cff1_path_param_t>::flex(CFF::cff1_cs_interp_env_t&, cff1_path_param_t&)
00000000006c01b0 00000000000000f0 t CFF::path_procs_t<cff1_path_procs_path_t, CFF::cff1_cs_interp_env_t, cff1_path_param_t>::hflex1(CFF::cff1_cs_interp_env_t&, cff1_path_param_t&)
00000000006c02a0 000000000000010c t CFF::path_procs_t<cff1_path_procs_path_t, CFF::cff1_cs_interp_env_t, cff1_path_param_t>::flex1(CFF::cff1_cs_interp_env_t&, cff1_path_param_t&)
00000000006c03b0 00000000000011f4 t CFF::cs_opset_t<CFF::number_t, cff1_cs_opset_path_t, CFF::cff1_cs_interp_env_t, cff1_path_param_t, cff1_path_procs_path_t>::process_op(unsigned int, CFF::cff1_cs_interp_env_t&, cff1_path_param_t&)
00000000006c15b0 0000000000000464 t _get_path(OT::cff1::accelerator_t const*, hb_font_t*, unsigned int, hb_draw_session_t&, bool, CFF::point_t*)
00000000006c1a20 000000000000000c t OT::cff1::accelerator_t::get_path(hb_font_t*, unsigned int, hb_draw_session_t&) const
00000000006c1a30 00000000000001ec t cff1_cs_opset_path_t::process_seac(CFF::cff1_cs_interp_env_t&, cff1_path_param_t&)
00000000006c1c20 0000000000000028 t CFF::CFFIndex<OT::IntType<unsigned int, 4u> >::offset_at(unsigned int) const [clone .part.0]
00000000006c1c50 00000000000000d8 t cff2_path_param_t::line_to(CFF::point_t const&) [clone .isra.0]
00000000006c1d30 0000000000000164 t cff2_path_param_t::cubic_to(CFF::point_t const&, CFF::point_t const&, CFF::point_t const&) [clone .isra.0]
00000000006c1ea0 00000000000000e8 t cff2_path_param_t::move_to(CFF::point_t const&) [clone .isra.0]
00000000006c1f90 000000000000016c t OT::VarData::get_region_scalars(int const*, unsigned int, OT::VarRegionList const&, float*, unsigned int) const
00000000006c2100 00000000000000a4 t CFF::FDSelect3_4<OT::IntType<unsigned int, 4u>, OT::IntType<unsigned short, 2u> >::get_fd(unsigned int) const
00000000006c21b0 000000000000020c t CFF::CFFIndex<OT::IntType<unsigned int, 4u> >::operator[](unsigned int) const
00000000006c23c0 00000000000001b8 t CFF::cff2_cs_interp_env_t<CFF::number_t>::cff2_cs_interp_env_t<OT::cff2::accelerator_t const>(hb_array_t<unsigned char const> const&, OT::cff2::accelerator_t const&, unsigned int, int const*, unsigned int)
00000000006c23c0 00000000000001b8 W CFF::cff2_cs_interp_env_t<CFF::number_t>::cff2_cs_interp_env_t<OT::cff2::accelerator_t const>(hb_array_t<unsigned char const> const&, OT::cff2::accelerator_t const&, unsigned int, int const*, unsigned int)
00000000006c2580 00000000000002f0 t CFF::cs_interp_env_t<CFF::number_t, CFF::Subrs<OT::IntType<unsigned int, 4u> > >::call_subr(CFF::biased_subrs_t<CFF::Subrs<OT::IntType<unsigned int, 4u> > > const&, CFF::cs_type_t)
00000000006c2870 00000000000003f4 t CFF::path_procs_t<cff2_path_procs_extents_t, CFF::cff2_cs_interp_env_t<CFF::number_t>, cff2_extents_param_t>::hlineto(CFF::cff2_cs_interp_env_t<CFF::number_t>&, cff2_extents_param_t&)
00000000006c2c70 00000000000003f4 t CFF::path_procs_t<cff2_path_procs_extents_t, CFF::cff2_cs_interp_env_t<CFF::number_t>, cff2_extents_param_t>::vlineto(CFF::cff2_cs_interp_env_t<CFF::number_t>&, cff2_extents_param_t&)
00000000006c3070 0000000000000370 t CFF::path_procs_t<cff2_path_procs_extents_t, CFF::cff2_cs_interp_env_t<CFF::number_t>, cff2_extents_param_t>::rrcurveto(CFF::cff2_cs_interp_env_t<CFF::number_t>&, cff2_extents_param_t&)
00000000006c33e0 0000000000000554 t CFF::path_procs_t<cff2_path_procs_extents_t, CFF::cff2_cs_interp_env_t<CFF::number_t>, cff2_extents_param_t>::rcurveline(CFF::cff2_cs_interp_env_t<CFF::number_t>&, cff2_extents_param_t&)
00000000006c3940 0000000000000554 t CFF::path_procs_t<cff2_path_procs_extents_t, CFF::cff2_cs_interp_env_t<CFF::number_t>, cff2_extents_param_t>::rlinecurve(CFF::cff2_cs_interp_env_t<CFF::number_t>&, cff2_extents_param_t&)
00000000006c3ea0 0000000000000db8 t CFF::path_procs_t<cff2_path_procs_extents_t, CFF::cff2_cs_interp_env_t<CFF::number_t>, cff2_extents_param_t>::vhcurveto(CFF::cff2_cs_interp_env_t<CFF::number_t>&, cff2_extents_param_t&)
00000000006c4c60 0000000000000db0 t CFF::path_procs_t<cff2_path_procs_extents_t, CFF::cff2_cs_interp_env_t<CFF::number_t>, cff2_extents_param_t>::hvcurveto(CFF::cff2_cs_interp_env_t<CFF::number_t>&, cff2_extents_param_t&)
00000000006c5a10 00000000000003e8 t CFF::path_procs_t<cff2_path_procs_extents_t, CFF::cff2_cs_interp_env_t<CFF::number_t>, cff2_extents_param_t>::hflex(CFF::cff2_cs_interp_env_t<CFF::number_t>&, cff2_extents_param_t&)
00000000006c5e00 0000000000000408 t CFF::path_procs_t<cff2_path_procs_extents_t, CFF::cff2_cs_interp_env_t<CFF::number_t>, cff2_extents_param_t>::flex(CFF::cff2_cs_interp_env_t<CFF::number_t>&, cff2_extents_param_t&)
00000000006c6210 00000000000003f4 t CFF::path_procs_t<cff2_path_procs_extents_t, CFF::cff2_cs_interp_env_t<CFF::number_t>, cff2_extents_param_t>::hflex1(CFF::cff2_cs_interp_env_t<CFF::number_t>&, cff2_extents_param_t&)
00000000006c6610 0000000000000364 t CFF::path_procs_t<cff2_path_procs_extents_t, CFF::cff2_cs_interp_env_t<CFF::number_t>, cff2_extents_param_t>::flex1(CFF::cff2_cs_interp_env_t<CFF::number_t>&, cff2_extents_param_t&)
00000000006c6980 0000000000000c18 t CFF::cs_opset_t<CFF::number_t, cff2_cs_opset_extents_t, CFF::cff2_cs_interp_env_t<CFF::number_t>, cff2_extents_param_t, cff2_path_procs_extents_t>::process_op(unsigned int, CFF::cff2_cs_interp_env_t<CFF::number_t>&, cff2_extents_param_t&)
00000000006c75a0 0000000000000210 t CFF::cff2_cs_interp_env_t<CFF::number_t>::process_blend()
00000000006c77b0 00000000000005b0 t OT::cff2::accelerator_t::get_extents(hb_font_t*, unsigned int, hb_glyph_extents_t*) const
00000000006c7d60 00000000000002f0 t CFF::path_procs_t<cff2_path_procs_path_t, CFF::cff2_cs_interp_env_t<CFF::number_t>, cff2_path_param_t>::rcurveline(CFF::cff2_cs_interp_env_t<CFF::number_t>&, cff2_path_param_t&)
00000000006c8050 00000000000002d0 t CFF::path_procs_t<cff2_path_procs_path_t, CFF::cff2_cs_interp_env_t<CFF::number_t>, cff2_path_param_t>::rlinecurve(CFF::cff2_cs_interp_env_t<CFF::number_t>&, cff2_path_param_t&)
00000000006c8320 0000000000000718 t CFF::path_procs_t<cff2_path_procs_path_t, CFF::cff2_cs_interp_env_t<CFF::number_t>, cff2_path_param_t>::vhcurveto(CFF::cff2_cs_interp_env_t<CFF::number_t>&, cff2_path_param_t&)
00000000006c8a40 0000000000000718 t CFF::path_procs_t<cff2_path_procs_path_t, CFF::cff2_cs_interp_env_t<CFF::number_t>, cff2_path_param_t>::hvcurveto(CFF::cff2_cs_interp_env_t<CFF::number_t>&, cff2_path_param_t&)
00000000006c9160 0000000000000100 t CFF::path_procs_t<cff2_path_procs_path_t, CFF::cff2_cs_interp_env_t<CFF::number_t>, cff2_path_param_t>::hflex(CFF::cff2_cs_interp_env_t<CFF::number_t>&, cff2_path_param_t&)
00000000006c9260 00000000000000c0 t CFF::path_procs_t<cff2_path_procs_path_t, CFF::cff2_cs_interp_env_t<CFF::number_t>, cff2_path_param_t>::flex(CFF::cff2_cs_interp_env_t<CFF::number_t>&, cff2_path_param_t&)
00000000006c9320 00000000000000f4 t CFF::path_procs_t<cff2_path_procs_path_t, CFF::cff2_cs_interp_env_t<CFF::number_t>, cff2_path_param_t>::hflex1(CFF::cff2_cs_interp_env_t<CFF::number_t>&, cff2_path_param_t&)
00000000006c9420 0000000000000114 t CFF::path_procs_t<cff2_path_procs_path_t, CFF::cff2_cs_interp_env_t<CFF::number_t>, cff2_path_param_t>::flex1(CFF::cff2_cs_interp_env_t<CFF::number_t>&, cff2_path_param_t&)
00000000006c9540 0000000000000e34 t CFF::cs_opset_t<CFF::number_t, cff2_cs_opset_path_t, CFF::cff2_cs_interp_env_t<CFF::number_t>, cff2_path_param_t, cff2_path_procs_path_t>::process_op(unsigned int, CFF::cff2_cs_interp_env_t<CFF::number_t>&, cff2_path_param_t&)
00000000006ca380 00000000000006c0 t OT::cff2::accelerator_t::get_path(hb_font_t*, unsigned int, hb_draw_session_t&) const
00000000006caa40 0000000000000220 t OT::CPAL::sanitize(hb_sanitize_context_t*) const
00000000006cac60 00000000000001b8 t hb_lazy_loader_t<OT::CPAL, hb_table_lazy_loader_t<OT::CPAL, 36u, true>, hb_face_t, 36u, hb_blob_t>::get() const
00000000006cae20 0000000000000148 T hb_ot_color_palette_get_colors
00000000006caf70 0000000000000008 t hb_ot_face_t::init0(hb_face_t*)
00000000006caf80 0000000000000164 W OT::cff2::accelerator_templ_t<CFF::cff2_private_dict_opset_t, CFF::cff2_private_dict_values_base_t<CFF::dict_val_t> >::~accelerator_templ_t()
00000000006caf80 0000000000000164 t OT::cff2::accelerator_templ_t<CFF::cff2_private_dict_opset_t, CFF::cff2_private_dict_values_base_t<CFF::dict_val_t> >::~accelerator_templ_t()
00000000006cb0f0 00000000000001b8 t hb_lazy_loader_t<OT::cff1_accelerator_t, hb_face_lazy_loader_t<OT::cff1_accelerator_t, 16u>, hb_face_t, 16u, OT::cff1_accelerator_t>::fini()
00000000006cb2b0 00000000000006e4 t hb_ot_face_t::fini()
00000000006cb9a0 0000000000000004 t hb_paint_push_transform_nil(hb_paint_funcs_t*, void*, float, float, float, float, float, float, void*)
00000000006cb9b0 0000000000000004 t hb_paint_pop_transform_nil(hb_paint_funcs_t*, void*, void*)
00000000006cb9c0 0000000000000004 t hb_paint_push_clip_glyph_nil(hb_paint_funcs_t*, void*, unsigned int, hb_font_t*, void*)
00000000006cb9d0 0000000000000004 t hb_paint_push_clip_rectangle_nil(hb_paint_funcs_t*, void*, float, float, float, float, void*)
00000000006cb9e0 0000000000000004 t hb_paint_color_nil(hb_paint_funcs_t*, void*, int, unsigned int, void*)
00000000006cb9f0 0000000000000008 t hb_paint_image_nil(hb_paint_funcs_t*, void*, hb_blob_t*, unsigned int, unsigned int, unsigned int, float, hb_glyph_extents_t*, void*)
00000000006cba00 0000000000000004 t hb_paint_linear_gradient_nil(hb_paint_funcs_t*, void*, hb_color_line_t*, float, float, float, float, float, float, void*)
00000000006cba10 0000000000000004 t hb_paint_sweep_gradient_nil(hb_paint_funcs_t*, void*, hb_color_line_t*, float, float, float, float, void*)
00000000006cba20 0000000000000004 t hb_paint_pop_group_nil(hb_paint_funcs_t*, void*, hb_paint_composite_mode_t, void*)
00000000006cba30 0000000000000008 t hb_paint_custom_palette_color_nil(hb_paint_funcs_t*, void*, unsigned int, unsigned int*, void*)
00000000006cba40 000000000000008c t _hb_paint_funcs_set_middle(hb_paint_funcs_t*, void*, void (*)(void*))
00000000006cbad0 0000000000000004 t hb_paint_radial_gradient_nil(hb_paint_funcs_t*, void*, hb_color_line_t*, float, float, float, float, float, float, void*)
00000000006cbae0 0000000000000004 t hb_paint_pop_clip_nil(hb_paint_funcs_t*, void*, void*)
00000000006cbaf0 0000000000000070 t _hb_paint_funcs_set_preamble(hb_paint_funcs_t*, bool, void**, void (**)(void*))
00000000006cbb60 0000000000000004 t hb_paint_push_group_nil(hb_paint_funcs_t*, void*, void*)
00000000006cbb70 00000000000000c0 T hb_paint_funcs_set_push_transform_func
00000000006cbc30 00000000000000c0 T hb_paint_funcs_set_pop_transform_func
00000000006cbcf0 00000000000000c0 T hb_paint_funcs_set_push_clip_glyph_func
00000000006cbdb0 00000000000000c0 T hb_paint_funcs_set_push_clip_rectangle_func
00000000006cbe70 00000000000000c0 T hb_paint_funcs_set_pop_clip_func
00000000006cbf30 00000000000000c0 T hb_paint_funcs_set_color_func
00000000006cbff0 00000000000000c0 T hb_paint_funcs_set_image_func
00000000006cc0b0 00000000000000c0 T hb_paint_funcs_set_linear_gradient_func
00000000006cc170 00000000000000c0 T hb_paint_funcs_set_radial_gradient_func
00000000006cc230 00000000000000c0 T hb_paint_funcs_set_sweep_gradient_func
00000000006cc2f0 00000000000000c0 T hb_paint_funcs_set_push_group_func
00000000006cc3b0 00000000000000c0 T hb_paint_funcs_set_pop_group_func
00000000006cc470 0000000000000080 T hb_paint_funcs_create
00000000006cc4f0 000000000000000c T hb_paint_funcs_get_empty
00000000006cc500 00000000000002d8 T hb_paint_funcs_destroy
00000000006cc7e0 0000000000000018 T hb_paint_funcs_make_immutable
00000000006cc800 0000000000000010 t OT::match_glyph(hb_glyph_info_t&, unsigned int, void const*)
00000000006cc810 0000000000000008 W bool OT::hb_accelerate_subtables_context_t::cache_func_to<OT::Layout::GPOS_impl::SinglePosFormat1>(void const*, OT::hb_ot_apply_context_t*, bool)
00000000006cc820 0000000000000008 W bool OT::hb_accelerate_subtables_context_t::cache_func_to<OT::Layout::GPOS_impl::SinglePosFormat2>(void const*, OT::hb_ot_apply_context_t*, bool)
00000000006cc830 0000000000000008 W bool OT::hb_accelerate_subtables_context_t::cache_func_to<OT::Layout::GPOS_impl::PairPosFormat1_3<OT::Layout::SmallTypes> >(void const*, OT::hb_ot_apply_context_t*, bool)
00000000006cc840 0000000000000008 W bool OT::hb_accelerate_subtables_context_t::cache_func_to<OT::Layout::GPOS_impl::PairPosFormat2_4<OT::Layout::SmallTypes> >(void const*, OT::hb_ot_apply_context_t*, bool)
00000000006cc850 0000000000000008 W bool OT::hb_accelerate_subtables_context_t::cache_func_to<OT::Layout::GPOS_impl::CursivePosFormat1>(void const*, OT::hb_ot_apply_context_t*, bool)
00000000006cc860 0000000000000008 W bool OT::hb_accelerate_subtables_context_t::cache_func_to<OT::Layout::GPOS_impl::MarkBasePosFormat1_2<OT::Layout::SmallTypes> >(void const*, OT::hb_ot_apply_context_t*, bool)
00000000006cc870 0000000000000008 W bool OT::hb_accelerate_subtables_context_t::cache_func_to<OT::Layout::GPOS_impl::MarkLigPosFormat1_2<OT::Layout::SmallTypes> >(void const*, OT::hb_ot_apply_context_t*, bool)
00000000006cc880 0000000000000008 W bool OT::hb_accelerate_subtables_context_t::cache_func_to<OT::Layout::GPOS_impl::MarkMarkPosFormat1_2<OT::Layout::SmallTypes> >(void const*, OT::hb_ot_apply_context_t*, bool)
00000000006cc890 0000000000000008 W bool OT::hb_accelerate_subtables_context_t::cache_func_to<OT::ContextFormat1_4<OT::Layout::SmallTypes> >(void const*, OT::hb_ot_apply_context_t*, bool)
00000000006cc8a0 0000000000000008 W bool OT::hb_accelerate_subtables_context_t::cache_func_to<OT::ContextFormat3>(void const*, OT::hb_ot_apply_context_t*, bool)
00000000006cc8b0 0000000000000008 W bool OT::hb_accelerate_subtables_context_t::cache_func_to<OT::ChainContextFormat1_4<OT::Layout::SmallTypes> >(void const*, OT::hb_ot_apply_context_t*, bool)
00000000006cc8c0 0000000000000008 W bool OT::hb_accelerate_subtables_context_t::cache_func_to<OT::ChainContextFormat3>(void const*, OT::hb_ot_apply_context_t*, bool)
00000000006cc8d0 0000000000000008 W bool OT::hb_accelerate_subtables_context_t::cache_func_to<OT::Layout::GSUB_impl::SingleSubstFormat1_3<OT::Layout::SmallTypes> >(void const*, OT::hb_ot_apply_context_t*, bool)
00000000006cc8e0 0000000000000008 W bool OT::hb_accelerate_subtables_context_t::cache_func_to<OT::Layout::GSUB_impl::SingleSubstFormat2_4<OT::Layout::SmallTypes> >(void const*, OT::hb_ot_apply_context_t*, bool)
00000000006cc8f0 0000000000000008 W bool OT::hb_accelerate_subtables_context_t::cache_func_to<OT::Layout::GSUB_impl::MultipleSubstFormat1_2<OT::Layout::SmallTypes> >(void const*, OT::hb_ot_apply_context_t*, bool)
00000000006cc900 0000000000000008 W bool OT::hb_accelerate_subtables_context_t::cache_func_to<OT::Layout::GSUB_impl::AlternateSubstFormat1_2<OT::Layout::SmallTypes> >(void const*, OT::hb_ot_apply_context_t*, bool)
00000000006cc910 0000000000000008 W bool OT::hb_accelerate_subtables_context_t::cache_func_to<OT::Layout::GSUB_impl::LigatureSubstFormat1_2<OT::Layout::SmallTypes> >(void const*, OT::hb_ot_apply_context_t*, bool)
00000000006cc920 0000000000000008 W bool OT::hb_accelerate_subtables_context_t::cache_func_to<OT::Layout::GSUB_impl::ReverseChainSingleSubstFormat1>(void const*, OT::hb_ot_apply_context_t*, bool)
00000000006cc930 00000000000000ac t OT::Layout::GPOS_impl::reverse_cursive_minor_offset(hb_glyph_position_t*, unsigned int, hb_direction_t, unsigned int)
00000000006cc9e0 00000000000001d4 t OT::Layout::propagate_attachment_offsets(hb_glyph_position_t*, unsigned int, unsigned int, hb_direction_t, unsigned int)
00000000006ccbc0 0000000000000028 t hb_sanitize_context_t::reset_object() [clone .part.0]
00000000006ccbf0 0000000000000028 t hb_buffer_t::deallocate_var(unsigned int, unsigned int) [clone .part.0]
00000000006ccc20 0000000000000028 t hb_buffer_t::assert_var(unsigned int, unsigned int) [clone .part.0]
00000000006ccc50 0000000000000028 t bool hb_buffer_t::replace_glyphs<unsigned int>(unsigned int, unsigned int, unsigned int const*) [clone .part.0]
00000000006ccc80 0000000000000090 W bool OT::hb_accelerate_subtables_context_t::cache_func_to<OT::ChainContextFormat2_5<OT::Layout::SmallTypes> >(void const*, OT::hb_ot_apply_context_t*, bool)
00000000006ccd10 00000000000001cc t bool OT::Layout::Common::Coverage::collect_coverage<hb_set_digest_combiner_t<hb_set_digest_bits_pattern_t<unsigned long, 4u>, hb_set_digest_combiner_t<hb_set_digest_bits_pattern_t<unsigned long, 0u>, hb_set_digest_bits_pattern_t<unsigned long, 9u> > > >(hb_set_digest_combiner_t<hb_set_digest_bits_pattern_t<unsigned long, 4u>, hb_set_digest_combiner_t<hb_set_digest_bits_pattern_t<unsigned long, 0u>, hb_set_digest_bits_pattern_t<unsigned long, 9u> > >*) const [clone .isra.0]
00000000006ccee0 000000000000021c t OT::hb_accelerate_subtables_context_t::return_t OT::Context::dispatch<OT::hb_accelerate_subtables_context_t>(OT::hb_accelerate_subtables_context_t*) const [clone .isra.0]
00000000006cd100 0000000000000090 W bool OT::hb_accelerate_subtables_context_t::cache_func_to<OT::ContextFormat2_5<OT::Layout::SmallTypes> >(void const*, OT::hb_ot_apply_context_t*, bool)
00000000006cd190 000000000000024c t OT::hb_accelerate_subtables_context_t::return_t OT::ChainContext::dispatch<OT::hb_accelerate_subtables_context_t>(OT::hb_accelerate_subtables_context_t*) const [clone .isra.0]
00000000006cd3e0 0000000000000264 t OT::hb_accelerate_subtables_context_t::return_t OT::Layout::GPOS_impl::PosLookupSubTable::dispatch<OT::hb_accelerate_subtables_context_t>(OT::hb_accelerate_subtables_context_t*, unsigned int) const [clone .isra.0]
00000000006cd650 0000000000000108 t OT::match_class(hb_glyph_info_t&, unsigned int, void const*)
00000000006cd760 00000000000001fc t OT::hb_accelerate_subtables_context_t::return_t OT::Layout::GSUB_impl::SubstLookupSubTable::dispatch<OT::hb_accelerate_subtables_context_t>(OT::hb_accelerate_subtables_context_t*, unsigned int) const [clone .isra.0]
00000000006cd960 0000000000000110 t hb_buffer_t::reverse_range(unsigned int, unsigned int)
00000000006cda70 0000000000000350 t OT::apply_lookup(OT::hb_ot_apply_context_t*, unsigned int, unsigned int*, unsigned int, OT::LookupRecord const*, unsigned int)
00000000006cddc0 0000000000000024 t hb_buffer_t::unsafe_to_concat(unsigned int, unsigned int)
00000000006cddf0 0000000000000024 t hb_buffer_t::unsafe_to_concat_from_outbuffer(unsigned int, unsigned int)
00000000006cde20 0000000000000124 t OT::Layout::Common::Coverage::get_coverage(unsigned int) const
00000000006cdf50 0000000000000034 t OT::match_coverage(hb_glyph_info_t&, unsigned int, void const*)
00000000006cdf90 0000000000000088 t OT::IndexArray::get_indexes(unsigned int, unsigned int*, unsigned int*) const
00000000006ce020 00000000000000ec t OT::ClassDef::get_class(unsigned int) const
00000000006ce110 0000000000000060 t OT::match_class_cached(hb_glyph_info_t&, unsigned int, void const*)
00000000006ce170 00000000000001a8 t OT::Device::get_x_delta(hb_font_t*, OT::VariationStore const&, float*) const
00000000006ce320 00000000000001a8 t OT::Device::get_y_delta(hb_font_t*, OT::VariationStore const&, float*) const
00000000006ce4d0 00000000000001a0 t OT::hb_ot_apply_context_t::matcher_t::may_skip(OT::hb_ot_apply_context_t const*, hb_glyph_info_t const&) const
00000000006ce670 0000000000000048 t OT::hb_ot_apply_context_t::skipping_iterator_t::reset(unsigned int, unsigned int)
00000000006ce6c0 000000000000028c t bool OT::match_input<OT::HBGlyphID16>(OT::hb_ot_apply_context_t*, unsigned int, OT::HBGlyphID16 const*, bool (*)(hb_glyph_info_t&, unsigned int, void const*), void const*, unsigned int*, unsigned int*, unsigned int*)
00000000006ce6c0 000000000000028c t bool OT::match_input<OT::IntType<unsigned short, 2u> >(OT::hb_ot_apply_context_t*, unsigned int, OT::IntType<unsigned short, 2u> const*, bool (*)(hb_glyph_info_t&, unsigned int, void const*), void const*, unsigned int*, unsigned int*, unsigned int*)
00000000006ce950 00000000000000d4 t bool OT::context_apply_lookup<OT::IntType<unsigned short, 2u> >(OT::hb_ot_apply_context_t*, unsigned int, OT::IntType<unsigned short, 2u> const*, unsigned int, OT::LookupRecord const*, OT::ContextApplyLookupContext const&) [clone .isra.0]
00000000006cea30 00000000000000a4 W bool OT::hb_accelerate_subtables_context_t::apply_cached_to<OT::ContextFormat3>(void const*, OT::hb_ot_apply_context_t*)
00000000006ceae0 00000000000000a4 W bool OT::hb_accelerate_subtables_context_t::apply_to<OT::ContextFormat3>(void const*, OT::hb_ot_apply_context_t*)
00000000006ceb90 0000000000000170 t OT::hb_ot_apply_context_t::skipping_iterator_t::prev(unsigned int*)
00000000006ced00 0000000000000280 t bool OT::chain_context_apply_lookup<OT::IntType<unsigned short, 2u> >(OT::hb_ot_apply_context_t*, unsigned int, OT::IntType<unsigned short, 2u> const*, unsigned int, OT::IntType<unsigned short, 2u> const*, unsigned int, OT::IntType<unsigned short, 2u> const*, unsigned int, OT::LookupRecord const*, OT::ChainContextApplyLookupContext const&)
00000000006cef80 0000000000000158 W bool OT::hb_accelerate_subtables_context_t::apply_cached_to<OT::ChainContextFormat3>(void const*, OT::hb_ot_apply_context_t*)
00000000006cf0e0 0000000000000158 W bool OT::hb_accelerate_subtables_context_t::apply_to<OT::ChainContextFormat3>(void const*, OT::hb_ot_apply_context_t*)
00000000006cf240 0000000000000070 t OT::hb_ot_apply_context_t::init_iters()
00000000006cf2b0 0000000000000198 t OT::hb_ot_apply_context_t::_set_glyph_class(unsigned int, unsigned int, bool, bool)
00000000006cf450 00000000000000cc t OT::hb_ot_apply_context_t::replace_glyph(unsigned int)
00000000006cf520 0000000000000118 W bool OT::hb_accelerate_subtables_context_t::apply_cached_to<OT::Layout::GSUB_impl::SingleSubstFormat2_4<OT::Layout::SmallTypes> >(void const*, OT::hb_ot_apply_context_t*)
00000000006cf640 00000000000000ec W bool OT::hb_accelerate_subtables_context_t::apply_cached_to<OT::Layout::GSUB_impl::SingleSubstFormat1_3<OT::Layout::SmallTypes> >(void const*, OT::hb_ot_apply_context_t*)
00000000006cf730 00000000000000ec W bool OT::hb_accelerate_subtables_context_t::apply_to<OT::Layout::GSUB_impl::SingleSubstFormat1_3<OT::Layout::SmallTypes> >(void const*, OT::hb_ot_apply_context_t*)
00000000006cf820 0000000000000118 W bool OT::hb_accelerate_subtables_context_t::apply_to<OT::Layout::GSUB_impl::SingleSubstFormat2_4<OT::Layout::SmallTypes> >(void const*, OT::hb_ot_apply_context_t*)
00000000006cf940 000000000000017c t OT::hb_ot_layout_lookup_accelerator_t::apply(OT::hb_ot_apply_context_t*, unsigned int, bool) const
00000000006cfac0 00000000000002f8 t apply_forward(OT::hb_ot_apply_context_t*, OT::hb_ot_layout_lookup_accelerator_t const&, unsigned int) [clone .isra.0]
00000000006cfdc0 0000000000000064 t OT::GSUBGPOS::get_lookup(unsigned int) const
00000000006cfe30 000000000000009c t OT::GSUBGPOS::find_script_index(unsigned int, unsigned int*) const
00000000006cfed0 00000000000003ac t OT::Layout::GPOS_impl::ValueFormat::apply_value(OT::hb_ot_apply_context_t*, void const*, OT::IntType<unsigned short, 2u> const*, hb_glyph_position_t&) const
00000000006d0280 0000000000000104 W bool OT::hb_accelerate_subtables_context_t::apply_cached_to<OT::Layout::GPOS_impl::SinglePosFormat1>(void const*, OT::hb_ot_apply_context_t*)
00000000006d0390 0000000000000148 W bool OT::hb_accelerate_subtables_context_t::apply_cached_to<OT::Layout::GPOS_impl::SinglePosFormat2>(void const*, OT::hb_ot_apply_context_t*)
00000000006d04e0 0000000000000104 W bool OT::hb_accelerate_subtables_context_t::apply_to<OT::Layout::GPOS_impl::SinglePosFormat1>(void const*, OT::hb_ot_apply_context_t*)
00000000006d05f0 0000000000000148 W bool OT::hb_accelerate_subtables_context_t::apply_to<OT::Layout::GPOS_impl::SinglePosFormat2>(void const*, OT::hb_ot_apply_context_t*)
00000000006d0740 0000000000000258 t OT::Layout::GPOS_impl::Anchor::get_anchor(OT::hb_ot_apply_context_t*, unsigned int, float*, float*) const
00000000006d09a0 00000000000004e0 t OT::Layout::GPOS_impl::CursivePosFormat1::apply(OT::hb_ot_apply_context_t*) const
00000000006d0e80 0000000000000004 W bool OT::hb_accelerate_subtables_context_t::apply_to<OT::Layout::GPOS_impl::CursivePosFormat1>(void const*, OT::hb_ot_apply_context_t*)
00000000006d0e90 0000000000000004 W bool OT::hb_accelerate_subtables_context_t::apply_cached_to<OT::Layout::GPOS_impl::CursivePosFormat1>(void const*, OT::hb_ot_apply_context_t*)
00000000006d0ea0 0000000000000244 t OT::Layout::GPOS_impl::MarkArray::apply(OT::hb_ot_apply_context_t*, unsigned int, unsigned int, OT::Layout::GPOS_impl::AnchorMatrix const&, unsigned int, unsigned int) const
00000000006d10f0 0000000000000304 t OT::Layout::GSUB_impl::ReverseChainSingleSubstFormat1::apply(OT::hb_ot_apply_context_t*) const
00000000006d1400 0000000000000004 W bool OT::hb_accelerate_subtables_context_t::apply_to<OT::Layout::GSUB_impl::ReverseChainSingleSubstFormat1>(void const*, OT::hb_ot_apply_context_t*)
00000000006d1410 0000000000000004 W bool OT::hb_accelerate_subtables_context_t::apply_cached_to<OT::Layout::GSUB_impl::ReverseChainSingleSubstFormat1>(void const*, OT::hb_ot_apply_context_t*)
00000000006d1420 0000000000000040 t hb_ot_layout_position_start(hb_font_t*, hb_buffer_t*)
00000000006d1460 0000000000000004 t hb_ot_layout_position_finish_advances(hb_font_t*, hb_buffer_t*)
00000000006d1470 00000000000000f8 t hb_ot_layout_position_finish_offsets(hb_font_t*, hb_buffer_t*)
00000000006d1570 0000000000000208 t bool OT::OffsetTo<OT::FeatureParams, OT::IntType<unsigned short, 2u>, true>::sanitize<unsigned int>(hb_sanitize_context_t*, void const*, unsigned int&&) const
00000000006d1780 00000000000001d0 t OT::Feature::sanitize(hb_sanitize_context_t*, OT::Record_sanitize_closure_t const*) const
00000000006d1950 00000000000001ec t bool OT::ArrayOf<OT::Record<OT::LangSys>, OT::IntType<unsigned short, 2u> >::sanitize<OT::Script const*>(hb_sanitize_context_t*, OT::Script const*&&) const
00000000006d1b40 00000000000001cc t bool OT::ArrayOf<OT::OffsetTo<OT::Condition, OT::IntType<unsigned int, 4u>, true>, OT::IntType<unsigned short, 2u> >::sanitize<OT::ConditionSet const*>(hb_sanitize_context_t*, OT::ConditionSet const*&&) const
00000000006d1d10 0000000000000218 t bool OT::ArrayOf<OT::FeatureTableSubstitutionRecord, OT::IntType<unsigned short, 2u> >::sanitize<OT::FeatureTableSubstitution const*>(hb_sanitize_context_t*, OT::FeatureTableSubstitution const*&&) const
00000000006d1f30 0000000000000244 t bool OT::ArrayOf<OT::FeatureVariationRecord, OT::IntType<unsigned int, 4u> >::sanitize<OT::FeatureVariations const*>(hb_sanitize_context_t*, OT::FeatureVariations const*&&) const
00000000006d2180 00000000000001b4 t bool OT::OffsetTo<OT::Device, OT::IntType<unsigned short, 2u>, true>::sanitize<>(hb_sanitize_context_t*, void const*) const
00000000006d2340 0000000000000104 t OT::Layout::GPOS_impl::ValueFormat::sanitize_value_devices(hb_sanitize_context_t*, void const*, OT::IntType<unsigned short, 2u> const*) const
00000000006d2450 0000000000000170 t OT::Layout::GPOS_impl::ValueFormat::sanitize_values_stride_unsafe(hb_sanitize_context_t*, void const*, OT::IntType<unsigned short, 2u> const*, unsigned int, unsigned int) const
00000000006d25c0 00000000000000f4 t bool OT::ArrayOf<OT::OffsetTo<OT::Layout::Common::Coverage, OT::IntType<unsigned short, 2u>, true>, OT::IntType<unsigned short, 2u> >::sanitize<OT::ChainContextFormat3 const*>(hb_sanitize_context_t*, OT::ChainContextFormat3 const*&&) const
00000000006d26c0 0000000000000184 t bool OT::OffsetTo<OT::Layout::GPOS_impl::Anchor, OT::IntType<unsigned short, 2u>, true>::sanitize<>(hb_sanitize_context_t*, void const*) const
00000000006d2850 00000000000000f4 t bool OT::ArrayOf<OT::OffsetTo<OT::Layout::Common::Coverage, OT::IntType<unsigned short, 2u>, true>, OT::IntType<unsigned short, 2u> >::sanitize<OT::Layout::GSUB_impl::ReverseChainSingleSubstFormat1 const*>(hb_sanitize_context_t*, OT::Layout::GSUB_impl::ReverseChainSingleSubstFormat1 const*&&) const
00000000006d2950 0000000000000064 t OT::Layout::GSUB_impl::SubstLookupSubTable const& OT::Lookup::get_subtable<OT::Layout::GSUB_impl::SubstLookupSubTable>(unsigned int) const
00000000006d29c0 0000000000000348 t bool apply_string<GSUBProxy>(OT::hb_ot_apply_context_t*, GSUBProxy::Lookup const&, OT::hb_ot_layout_lookup_accelerator_t const&) [clone .isra.0]
00000000006d2d10 0000000000000004 t hb_ot_layout_substitute_lookup(OT::hb_ot_apply_context_t*, OT::Layout::GSUB_impl::SubstLookup const&, OT::hb_ot_layout_lookup_accelerator_t const&)
00000000006d2d20 000000000000005c t OT::ArrayOf<OT::IntType<unsigned short, 2u>, OT::IntType<unsigned short, 2u> >::sanitize_shallow(hb_sanitize_context_t*) const
00000000006d2d80 0000000000000184 t OT::hb_ot_layout_lookup_accelerator_t* OT::hb_ot_layout_lookup_accelerator_t::create<OT::Layout::GPOS_impl::PosLookup>(OT::Layout::GPOS_impl::PosLookup const&)
00000000006d2f10 0000000000000248 W OT::hb_ot_apply_context_t::return_t OT::Layout::GPOS_impl::PosLookup::dispatch_recurse_func<OT::hb_ot_apply_context_t>(OT::hb_ot_apply_context_t*, unsigned int)
00000000006d3160 000000000000005c t OT::ArrayOf<OT::HBGlyphID16, OT::IntType<unsigned short, 2u> >::sanitize_shallow(hb_sanitize_context_t*) const
00000000006d31c0 0000000000000184 t OT::hb_ot_layout_lookup_accelerator_t* OT::hb_ot_layout_lookup_accelerator_t::create<OT::Layout::GSUB_impl::SubstLookup>(OT::Layout::GSUB_impl::SubstLookup const&)
00000000006d3350 0000000000000248 W OT::hb_ot_apply_context_t::return_t OT::Layout::GSUB_impl::SubstLookup::dispatch_recurse_func<OT::hb_ot_apply_context_t>(OT::hb_ot_apply_context_t*, unsigned int)
00000000006d35a0 0000000000000100 t bool OT::OffsetTo<OT::FeatureVariations, OT::IntType<unsigned int, 4u>, true>::sanitize<>(hb_sanitize_context_t*, void const*) const
00000000006d36a0 0000000000000364 t AAT::KerxTable<OT::KernOT>::sanitize(hb_sanitize_context_t*) const
00000000006d3a10 0000000000000330 t OT::Layout::GPOS_impl::PairPosFormat2_4<OT::Layout::SmallTypes>::apply(OT::hb_ot_apply_context_t*) const
00000000006d3d40 0000000000000004 W bool OT::hb_accelerate_subtables_context_t::apply_to<OT::Layout::GPOS_impl::PairPosFormat2_4<OT::Layout::SmallTypes> >(void const*, OT::hb_ot_apply_context_t*)
00000000006d3d50 0000000000000004 W bool OT::hb_accelerate_subtables_context_t::apply_cached_to<OT::Layout::GPOS_impl::PairPosFormat2_4<OT::Layout::SmallTypes> >(void const*, OT::hb_ot_apply_context_t*)
00000000006d3d60 00000000000002e8 t OT::Layout::GPOS_impl::MarkBasePosFormat1_2<OT::Layout::SmallTypes>::apply(OT::hb_ot_apply_context_t*) const
00000000006d4050 0000000000000004 W bool OT::hb_accelerate_subtables_context_t::apply_cached_to<OT::Layout::GPOS_impl::MarkBasePosFormat1_2<OT::Layout::SmallTypes> >(void const*, OT::hb_ot_apply_context_t*)
00000000006d4060 0000000000000004 W bool OT::hb_accelerate_subtables_context_t::apply_to<OT::Layout::GPOS_impl::MarkBasePosFormat1_2<OT::Layout::SmallTypes> >(void const*, OT::hb_ot_apply_context_t*)
00000000006d4070 00000000000002dc t OT::Layout::GPOS_impl::MarkLigPosFormat1_2<OT::Layout::SmallTypes>::apply(OT::hb_ot_apply_context_t*) const
00000000006d4350 0000000000000004 W bool OT::hb_accelerate_subtables_context_t::apply_cached_to<OT::Layout::GPOS_impl::MarkLigPosFormat1_2<OT::Layout::SmallTypes> >(void const*, OT::hb_ot_apply_context_t*)
00000000006d4360 0000000000000004 W bool OT::hb_accelerate_subtables_context_t::apply_to<OT::Layout::GPOS_impl::MarkLigPosFormat1_2<OT::Layout::SmallTypes> >(void const*, OT::hb_ot_apply_context_t*)
00000000006d4370 00000000000001f4 t OT::Layout::GPOS_impl::MarkMarkPosFormat1_2<OT::Layout::SmallTypes>::apply(OT::hb_ot_apply_context_t*) const
00000000006d4570 0000000000000004 W bool OT::hb_accelerate_subtables_context_t::apply_cached_to<OT::Layout::GPOS_impl::MarkMarkPosFormat1_2<OT::Layout::SmallTypes> >(void const*, OT::hb_ot_apply_context_t*)
00000000006d4580 0000000000000004 W bool OT::hb_accelerate_subtables_context_t::apply_to<OT::Layout::GPOS_impl::MarkMarkPosFormat1_2<OT::Layout::SmallTypes> >(void const*, OT::hb_ot_apply_context_t*)
00000000006d4590 0000000000000150 t OT::Layout::GSUB_impl::LigatureSubstFormat1_2<OT::Layout::SmallTypes>::would_apply(OT::hb_would_apply_context_t*) const
00000000006d46e0 0000000000000290 t OT::Layout::GPOS_impl::PairSet<OT::Layout::SmallTypes>::apply(OT::hb_ot_apply_context_t*, OT::Layout::GPOS_impl::ValueFormat const*, unsigned int) const
00000000006d4970 0000000000000160 W bool OT::hb_accelerate_subtables_context_t::apply_to<OT::Layout::GPOS_impl::PairPosFormat1_3<OT::Layout::SmallTypes> >(void const*, OT::hb_ot_apply_context_t*)
00000000006d4ad0 0000000000000160 W bool OT::hb_accelerate_subtables_context_t::apply_cached_to<OT::Layout::GPOS_impl::PairPosFormat1_3<OT::Layout::SmallTypes> >(void const*, OT::hb_ot_apply_context_t*)
00000000006d4c30 00000000000002fc t OT::RuleSet<OT::Layout::SmallTypes>::apply(OT::hb_ot_apply_context_t*, OT::ContextApplyLookupContext const&) const
00000000006d4f30 00000000000000d8 W bool OT::hb_accelerate_subtables_context_t::apply_cached_to<OT::ContextFormat1_4<OT::Layout::SmallTypes> >(void const*, OT::hb_ot_apply_context_t*)
00000000006d5010 000000000000013c W bool OT::hb_accelerate_subtables_context_t::apply_cached_to<OT::ContextFormat2_5<OT::Layout::SmallTypes> >(void const*, OT::hb_ot_apply_context_t*)
00000000006d5150 00000000000000d8 W bool OT::hb_accelerate_subtables_context_t::apply_to<OT::ContextFormat1_4<OT::Layout::SmallTypes> >(void const*, OT::hb_ot_apply_context_t*)
00000000006d5230 00000000000000f8 W bool OT::hb_accelerate_subtables_context_t::apply_to<OT::ContextFormat2_5<OT::Layout::SmallTypes> >(void const*, OT::hb_ot_apply_context_t*)
00000000006d5330 0000000000000134 t OT::ChainRuleSet<OT::Layout::SmallTypes>::apply(OT::hb_ot_apply_context_t*, OT::ChainContextApplyLookupContext const&) const
00000000006d5470 00000000000000e4 W bool OT::hb_accelerate_subtables_context_t::apply_to<OT::ChainContextFormat1_4<OT::Layout::SmallTypes> >(void const*, OT::hb_ot_apply_context_t*)
00000000006d5560 000000000000015c W bool OT::hb_accelerate_subtables_context_t::apply_cached_to<OT::ChainContextFormat2_5<OT::Layout::SmallTypes> >(void const*, OT::hb_ot_apply_context_t*)
00000000006d56c0 00000000000000e4 W bool OT::hb_accelerate_subtables_context_t::apply_cached_to<OT::ChainContextFormat1_4<OT::Layout::SmallTypes> >(void const*, OT::hb_ot_apply_context_t*)
00000000006d57b0 0000000000000128 W bool OT::hb_accelerate_subtables_context_t::apply_to<OT::ChainContextFormat2_5<OT::Layout::SmallTypes> >(void const*, OT::hb_ot_apply_context_t*)
00000000006d58e0 0000000000000250 t bool OT::ArrayOf<OT::Record<OT::Script>, OT::IntType<unsigned short, 2u> >::sanitize<OT::RecordListOf<OT::Script> const*>(hb_sanitize_context_t*, OT::RecordListOf<OT::Script> const*&&) const
00000000006d5b30 00000000000001e0 t bool OT::ArrayOf<OT::Record<OT::Feature>, OT::IntType<unsigned short, 2u> >::sanitize<OT::RecordListOf<OT::Feature> const*>(hb_sanitize_context_t*, OT::RecordListOf<OT::Feature> const*&&) const
00000000006d5d10 000000000000071c t void AAT::StateTableDriver<AAT::ObsoleteTypes, void>::drive<AAT::KerxSubTableFormat1<OT::KernAATSubTableHeader>::driver_context_t>(AAT::KerxSubTableFormat1<OT::KernAATSubTableHeader>::driver_context_t*, AAT::hb_aat_apply_context_t*)
00000000006d6430 0000000000000328 t OT::Layout::GSUB_impl::Sequence<OT::Layout::SmallTypes>::apply(OT::hb_ot_apply_context_t*) const
00000000006d6760 00000000000000c0 W bool OT::hb_accelerate_subtables_context_t::apply_cached_to<OT::Layout::GSUB_impl::MultipleSubstFormat1_2<OT::Layout::SmallTypes> >(void const*, OT::hb_ot_apply_context_t*)
00000000006d6820 00000000000000c0 W bool OT::hb_accelerate_subtables_context_t::apply_to<OT::Layout::GSUB_impl::MultipleSubstFormat1_2<OT::Layout::SmallTypes> >(void const*, OT::hb_ot_apply_context_t*)
00000000006d68e0 0000000000000250 t OT::Layout::GSUB_impl::AlternateSet<OT::Layout::SmallTypes>::apply(OT::hb_ot_apply_context_t*) const
00000000006d6b30 00000000000000c0 W bool OT::hb_accelerate_subtables_context_t::apply_to<OT::Layout::GSUB_impl::AlternateSubstFormat1_2<OT::Layout::SmallTypes> >(void const*, OT::hb_ot_apply_context_t*)
00000000006d6bf0 00000000000000c0 W bool OT::hb_accelerate_subtables_context_t::apply_cached_to<OT::Layout::GSUB_impl::AlternateSubstFormat1_2<OT::Layout::SmallTypes> >(void const*, OT::hb_ot_apply_context_t*)
00000000006d6cb0 0000000000000124 t OT::RuleSet<OT::Layout::SmallTypes>::would_apply(OT::hb_would_apply_context_t*, OT::ContextApplyLookupContext const&) const
00000000006d6de0 0000000000000200 t OT::hb_would_apply_context_t::return_t OT::Context::dispatch<OT::hb_would_apply_context_t>(OT::hb_would_apply_context_t*) const
00000000006d6fe0 0000000000000168 t OT::ChainRuleSet<OT::Layout::SmallTypes>::would_apply(OT::hb_would_apply_context_t*, OT::ChainContextApplyLookupContext const&) const
00000000006d7150 000000000000028c t OT::hb_would_apply_context_t::return_t OT::ChainContext::dispatch<OT::hb_would_apply_context_t>(OT::hb_would_apply_context_t*) const
00000000006d73e0 0000000000000148 t OT::hb_would_apply_context_t::return_t OT::Layout::GSUB_impl::SubstLookupSubTable::dispatch<OT::hb_would_apply_context_t>(OT::hb_would_apply_context_t*, unsigned int) const
00000000006d7530 000000000000067c t OT::Layout::GSUB_impl::Ligature<OT::Layout::SmallTypes>::apply(OT::hb_ot_apply_context_t*) const
00000000006d7bb0 0000000000000130 W bool OT::hb_accelerate_subtables_context_t::apply_cached_to<OT::Layout::GSUB_impl::LigatureSubstFormat1_2<OT::Layout::SmallTypes> >(void const*, OT::hb_ot_apply_context_t*)
00000000006d7ce0 0000000000000130 W bool OT::hb_accelerate_subtables_context_t::apply_to<OT::Layout::GSUB_impl::LigatureSubstFormat1_2<OT::Layout::SmallTypes> >(void const*, OT::hb_ot_apply_context_t*)
00000000006d7e10 00000000000002dc t hb_sanitize_context_t::return_t OT::Layout::GPOS_impl::SinglePos::dispatch<hb_sanitize_context_t>(hb_sanitize_context_t*) const
00000000006d80f0 0000000000000464 t AAT::KerxTable<OT::KernAAT>::sanitize(hb_sanitize_context_t*) const
00000000006d8560 0000000000000164 t hb_table_lazy_loader_t<OT::kern, 23u, true>::create(hb_face_t*)
00000000006d86d0 000000000000016c t hb_ot_layout_has_cross_kerning(hb_face_t*)
00000000006d8840 00000000000000e8 t hb_ot_layout_has_kerning(hb_face_t*)
00000000006d8930 000000000000015c t hb_ot_layout_has_machine_kerning(hb_face_t*)
00000000006d8a90 00000000000001b0 t OT::Layout::GPOS_impl::PairPosFormat2_4<OT::Layout::SmallTypes>::sanitize(hb_sanitize_context_t*) const
00000000006d8c40 00000000000002b4 t bool OT::ArrayOf<OT::OffsetTo<OT::Layout::GPOS_impl::PairSet<OT::Layout::SmallTypes>, OT::IntType<unsigned short, 2u>, true>, OT::IntType<unsigned short, 2u> >::sanitize<OT::Layout::GPOS_impl::PairPosFormat1_3<OT::Layout::SmallTypes> const*, OT::Layout::GPOS_impl::PairSet<OT::Layout::SmallTypes>::sanitize_closure_t*>(hb_sanitize_context_t*, OT::Layout::GPOS_impl::PairPosFormat1_3<OT::Layout::SmallTypes> const*&&, OT::Layout::GPOS_impl::PairSet<OT::Layout::SmallTypes>::sanitize_closure_t*&&) const
00000000006d8f00 0000000000000194 t bool OT::OffsetTo<OT::Layout::GPOS_impl::MarkArray, OT::IntType<unsigned short, 2u>, true>::sanitize<>(hb_sanitize_context_t*, void const*) const
00000000006d90a0 0000000000000178 t bool OT::OffsetTo<OT::Layout::GPOS_impl::AnchorMatrix, OT::IntType<unsigned short, 2u>, true>::sanitize<unsigned int>(hb_sanitize_context_t*, void const*, unsigned int&&) const
00000000006d9220 00000000000001dc t OT::Layout::GPOS_impl::MarkLigPosFormat1_2<OT::Layout::SmallTypes>::sanitize(hb_sanitize_context_t*) const
00000000006d9400 0000000000000208 t bool OT::ArrayOf<OT::OffsetTo<OT::Rule<OT::Layout::SmallTypes>, OT::IntType<unsigned short, 2u>, true>, OT::IntType<unsigned short, 2u> >::sanitize<OT::RuleSet<OT::Layout::SmallTypes> const*>(hb_sanitize_context_t*, OT::RuleSet<OT::Layout::SmallTypes> const*&&) const
00000000006d9610 0000000000000380 t hb_sanitize_context_t::return_t OT::Context::dispatch<hb_sanitize_context_t>(hb_sanitize_context_t*) const
00000000006d9990 0000000000000204 t bool OT::ArrayOf<OT::OffsetTo<OT::Layout::GSUB_impl::Ligature<OT::Layout::SmallTypes>, OT::IntType<unsigned short, 2u>, true>, OT::IntType<unsigned short, 2u> >::sanitize<OT::Layout::GSUB_impl::LigatureSet<OT::Layout::SmallTypes> const*>(hb_sanitize_context_t*, OT::Layout::GSUB_impl::LigatureSet<OT::Layout::SmallTypes> const*&&) const
00000000006d9ba0 00000000000001c0 t OT::ChainRule<OT::Layout::SmallTypes>::sanitize(hb_sanitize_context_t*) const
00000000006d9d60 00000000000001d4 t bool OT::OffsetTo<OT::ChainRuleSet<OT::Layout::SmallTypes>, OT::IntType<unsigned short, 2u>, true>::sanitize<>(hb_sanitize_context_t*, void const*) const
00000000006d9f40 00000000000003a4 t hb_sanitize_context_t::return_t OT::ChainContext::dispatch<hb_sanitize_context_t>(hb_sanitize_context_t*) const
00000000006da2f0 000000000000040c t hb_sanitize_context_t::return_t OT::Layout::GPOS_impl::PosLookupSubTable::dispatch<hb_sanitize_context_t>(hb_sanitize_context_t*, unsigned int) const
00000000006da700 00000000000002fc t bool OT::Lookup::sanitize<OT::Layout::GPOS_impl::PosLookupSubTable>(hb_sanitize_context_t*) const
00000000006daa00 0000000000000284 t bool OT::GSUBGPOSVersion1_2<OT::Layout::SmallTypes>::sanitize<OT::Layout::GPOS_impl::PosLookup>(hb_sanitize_context_t*) const
00000000006dac90 00000000000002bc W OT::GSUBGPOS::accelerator_t<OT::Layout::GPOS>::accelerator_t(hb_face_t*)
00000000006dac90 00000000000002bc t OT::GSUBGPOS::accelerator_t<OT::Layout::GPOS>::accelerator_t(hb_face_t*)
00000000006daf50 0000000000000108 t hb_lazy_loader_t<OT::GPOS_accelerator_t, hb_face_lazy_loader_t<OT::GPOS_accelerator_t, 26u>, hb_face_t, 26u, OT::GPOS_accelerator_t>::get_stored() const
00000000006db060 0000000000000150 T hb_ot_layout_has_positioning
00000000006db1b0 00000000000006a0 t hb_sanitize_context_t::return_t OT::Layout::GSUB_impl::SubstLookupSubTable::dispatch<hb_sanitize_context_t>(hb_sanitize_context_t*, unsigned int) const
00000000006db850 00000000000002a0 t bool OT::Lookup::sanitize<OT::Layout::GSUB_impl::SubstLookupSubTable>(hb_sanitize_context_t*) const
00000000006dbaf0 0000000000000284 t bool OT::GSUBGPOSVersion1_2<OT::Layout::SmallTypes>::sanitize<OT::Layout::GSUB_impl::SubstLookup>(hb_sanitize_context_t*) const
00000000006dbd80 00000000000002bc W OT::GSUBGPOS::accelerator_t<OT::Layout::GSUB>::accelerator_t(hb_face_t*)
00000000006dbd80 00000000000002bc t OT::GSUBGPOS::accelerator_t<OT::Layout::GSUB>::accelerator_t(hb_face_t*)
00000000006dc040 0000000000000108 t hb_lazy_loader_t<OT::GSUB_accelerator_t, hb_face_lazy_loader_t<OT::GSUB_accelerator_t, 25u>, hb_face_t, 25u, OT::GSUB_accelerator_t>::get_stored() const
00000000006dc150 0000000000000508 t OT::GDEF::is_blocklisted(hb_blob_t*, hb_face_t*) const
00000000006dc660 0000000000000374 t OT::hb_kern_machine_t<AAT::KerxSubTableFormat0<OT::KernOTSubTableHeader>::accelerator_t>::kern(hb_font_t*, hb_buffer_t*, unsigned int, bool) const
00000000006dc9e0 00000000000003b0 t OT::hb_kern_machine_t<AAT::KerxSubTableFormat2<OT::KernOTSubTableHeader>::accelerator_t>::kern(hb_font_t*, hb_buffer_t*, unsigned int, bool) const
00000000006dcd90 0000000000000374 t OT::hb_kern_machine_t<AAT::KerxSubTableFormat0<OT::KernAATSubTableHeader>::accelerator_t>::kern(hb_font_t*, hb_buffer_t*, unsigned int, bool) const
00000000006dd110 00000000000003b0 t OT::hb_kern_machine_t<AAT::KerxSubTableFormat2<OT::KernAATSubTableHeader>::accelerator_t>::kern(hb_font_t*, hb_buffer_t*, unsigned int, bool) const
00000000006dd4c0 000000000000035c t OT::hb_kern_machine_t<OT::KernSubTableFormat3<OT::KernAATSubTableHeader> >::kern(hb_font_t*, hb_buffer_t*, unsigned int, bool) const
00000000006dd820 000000000000095c t hb_ot_layout_kern(hb_ot_shape_plan_t const*, hb_font_t*, hb_buffer_t*)
00000000006de180 00000000000006f0 t void hb_ot_map_t::apply<GSUBProxy>(GSUBProxy const&, hb_ot_shape_plan_t const*, hb_font_t*, hb_buffer_t*) const
00000000006de870 00000000000007a8 t void hb_ot_map_t::apply<GPOSProxy>(GPOSProxy const&, hb_ot_shape_plan_t const*, hb_font_t*, hb_buffer_t*) const
00000000006df020 00000000000001ac t hb_ot_map_t::position(hb_ot_shape_plan_t const*, hb_font_t*, hb_buffer_t*) const
00000000006df1d0 0000000000000114 T hb_ot_layout_has_glyph_classes
00000000006df2f0 00000000000002d4 t hb_ot_layout_substitute_start(hb_font_t*, hb_buffer_t*)
00000000006df5d0 0000000000000084 t get_gsubgpos_table(hb_face_t*, unsigned int)
00000000006df660 0000000000000308 T hb_ot_layout_table_select_script
00000000006df970 000000000000010c t hb_ot_layout_table_find_feature(hb_face_t*, unsigned int, unsigned int, unsigned int*)
00000000006dfa80 0000000000000208 T hb_ot_layout_script_select_language2
00000000006dfc90 0000000000000008 T hb_ot_layout_script_select_language
00000000006dfca0 00000000000001f4 T hb_ot_layout_language_get_required_feature
00000000006dfea0 00000000000001f4 T hb_ot_layout_language_find_feature
00000000006e00a0 0000000000000054 T hb_ot_layout_table_get_lookup_count
00000000006e0100 0000000000000154 T hb_ot_layout_table_find_feature_variations
00000000006e0260 00000000000001b4 T hb_ot_layout_feature_with_variations_get_lookups
00000000006e0420 0000000000000048 T hb_ot_layout_has_substitution
00000000006e0470 000000000000029c T hb_ot_layout_lookup_would_substitute
00000000006e0710 00000000000000a8 t hb_ot_map_t::substitute(hb_ot_shape_plan_t const*, hb_font_t*, hb_buffer_t*) const
00000000006e07c0 0000000000000018 W hb_ot_map_t::lookup_map_t::cmp(void const*, void const*)
00000000006e07e0 0000000000000034 W hb_ot_map_builder_t::feature_info_t::cmp(void const*, void const*)
00000000006e0820 0000000000000420 t void sort_r_simple<>(void*, unsigned long, unsigned long, int (*)(void const*, void const*))
00000000006e0c40 0000000000000120 t hb_ot_map_builder_t::hb_ot_map_builder_t(hb_face_t*, hb_segment_properties_t const&)
00000000006e0c40 0000000000000120 T hb_ot_map_builder_t::hb_ot_map_builder_t(hb_face_t*, hb_segment_properties_t const&)
00000000006e0d60 0000000000000088 t hb_ot_map_builder_t::~hb_ot_map_builder_t()
00000000006e0d60 0000000000000088 T hb_ot_map_builder_t::~hb_ot_map_builder_t()
00000000006e0df0 000000000000014c t hb_ot_map_builder_t::add_feature(unsigned int, hb_ot_map_feature_flags_t, unsigned int)
00000000006e0f40 0000000000000074 t hb_ot_map_builder_t::has_feature(unsigned int)
00000000006e0fc0 0000000000000238 t hb_ot_map_builder_t::add_lookups(hb_ot_map_t&, unsigned int, unsigned int, unsigned int, unsigned int, bool, bool, bool, bool, unsigned int)
00000000006e1200 0000000000000120 t hb_ot_map_builder_t::add_pause(unsigned int, bool (*)(hb_ot_shape_plan_t const*, hb_font_t*, hb_buffer_t*))
00000000006e1320 0000000000000cbc t hb_ot_map_builder_t::compile(hb_ot_map_t&, hb_ot_shape_plan_key_t const&)
00000000006e1fe0 00000000000001e0 t joining_type(unsigned int)
00000000006e21c0 0000000000000214 t collect_features_arabic(hb_ot_shape_planner_t*)
00000000006e23e0 0000000000000070 t record_stch(hb_ot_shape_plan_t const*, hb_font_t*, hb_buffer_t*)
00000000006e2450 0000000000000070 t arabic_fallback_plan_destroy(arabic_fallback_plan_t*) [clone .part.0]
00000000006e24c0 0000000000000028 t hb_buffer_t::deallocate_var(unsigned int, unsigned int) [clone .part.0]
00000000006e24f0 000000000000026c t reorder_marks_arabic(hb_ot_shape_plan_t const*, hb_buffer_t*, unsigned int, unsigned int)
00000000006e2760 0000000000000028 t OT::Lookup* hb_serialize_context_t::extend_size<OT::Lookup>(OT::Lookup*, unsigned long, bool) [clone .part.0]
00000000006e2790 0000000000000028 t OT::ArrayOf<OT::Offset<OT::IntType<unsigned short, 2u>, true>, OT::IntType<unsigned short, 2u> >* hb_serialize_context_t::extend_size<OT::ArrayOf<OT::Offset<OT::IntType<unsigned short, 2u>, true>, OT::IntType<unsigned short, 2u> > >(OT::ArrayOf<OT::Offset<OT::IntType<unsigned short, 2u>, true>, OT::IntType<unsigned short, 2u> >*, unsigned long, bool) [clone .part.0]
00000000006e27c0 0000000000000028 t OT::IntType<unsigned short, 2u>* hb_serialize_context_t::extend_size<OT::IntType<unsigned short, 2u> >(OT::IntType<unsigned short, 2u>*, unsigned long, bool) [clone .part.0]
00000000006e27f0 0000000000000028 t OT::ArrayOf<OT::OffsetTo<OT::Layout::GSUB_impl::LigatureSet<OT::Layout::SmallTypes>, OT::IntType<unsigned short, 2u>, true>, OT::IntType<unsigned short, 2u> >* hb_serialize_context_t::extend_size<OT::ArrayOf<OT::OffsetTo<OT::Layout::GSUB_impl::LigatureSet<OT::Layout::SmallTypes>, OT::IntType<unsigned short, 2u>, true>, OT::IntType<unsigned short, 2u> > >(OT::ArrayOf<OT::OffsetTo<OT::Layout::GSUB_impl::LigatureSet<OT::Layout::SmallTypes>, OT::IntType<unsigned short, 2u>, true>, OT::IntType<unsigned short, 2u> >*, unsigned long, bool) [clone .part.0]
00000000006e2820 0000000000000028 t void hb_serialize_context_t::add_link<OT::OffsetTo<OT::Layout::Common::Coverage, OT::IntType<unsigned short, 2u>, true> >(OT::OffsetTo<OT::Layout::Common::Coverage, OT::IntType<unsigned short, 2u>, true>&, unsigned int, hb_serialize_context_t::whence_t, unsigned int) [clone .part.0]
00000000006e2850 0000000000000028 t void hb_serialize_context_t::add_link<OT::OffsetTo<OT::Layout::GSUB_impl::SubstLookupSubTable, OT::IntType<unsigned short, 2u>, true> >(OT::OffsetTo<OT::Layout::GSUB_impl::SubstLookupSubTable, OT::IntType<unsigned short, 2u>, true>&, unsigned int, hb_serialize_context_t::whence_t, unsigned int) [clone .part.0]
00000000006e2880 0000000000000028 t hb_serialize_context_t::end_serialize() [clone .part.0]
00000000006e28b0 0000000000000028 t OT::ArrayOf<OT::HBGlyphID16, OT::IntType<unsigned short, 2u> >* hb_serialize_context_t::extend_size<OT::ArrayOf<OT::HBGlyphID16, OT::IntType<unsigned short, 2u> > >(OT::ArrayOf<OT::HBGlyphID16, OT::IntType<unsigned short, 2u> >*, unsigned long, bool) [clone .part.0]
00000000006e28e0 0000000000000028 t OT::Layout::Common::CoverageFormat2_4<OT::Layout::SmallTypes>* hb_serialize_context_t::extend_size<OT::Layout::Common::CoverageFormat2_4<OT::Layout::SmallTypes> >(OT::Layout::Common::CoverageFormat2_4<OT::Layout::SmallTypes>*, unsigned long, bool) [clone .part.0]
00000000006e2910 0000000000000028 t OT::ArrayOf<OT::OffsetTo<OT::Layout::GSUB_impl::Ligature<OT::Layout::SmallTypes>, OT::IntType<unsigned short, 2u>, true>, OT::IntType<unsigned short, 2u> >* hb_serialize_context_t::extend_size<OT::ArrayOf<OT::OffsetTo<OT::Layout::GSUB_impl::Ligature<OT::Layout::SmallTypes>, OT::IntType<unsigned short, 2u>, true>, OT::IntType<unsigned short, 2u> > >(OT::ArrayOf<OT::OffsetTo<OT::Layout::GSUB_impl::Ligature<OT::Layout::SmallTypes>, OT::IntType<unsigned short, 2u>, true>, OT::IntType<unsigned short, 2u> >*, unsigned long, bool) [clone .part.0]
00000000006e2940 0000000000000028 t OT::ArrayOf<OT::Layout::Common::RangeRecord<OT::Layout::SmallTypes>, OT::IntType<unsigned short, 2u> >* hb_serialize_context_t::extend_size<OT::ArrayOf<OT::Layout::Common::RangeRecord<OT::Layout::SmallTypes>, OT::IntType<unsigned short, 2u> > >(OT::ArrayOf<OT::Layout::Common::RangeRecord<OT::Layout::SmallTypes>, OT::IntType<unsigned short, 2u> >*, unsigned long, bool) [clone .part.0]
00000000006e2970 0000000000000028 t OT::Layout::GSUB_impl::SubstLookup* hb_serialize_context_t::start_serialize<OT::Layout::GSUB_impl::SubstLookup>() [clone .part.0]
00000000006e29a0 0000000000000038 t data_destroy_arabic(void*)
00000000006e29e0 0000000000000024 t deallocate_buffer_var(hb_ot_shape_plan_t const*, hb_font_t*, hb_buffer_t*)
00000000006e2a10 00000000000001e4 t data_create_arabic(hb_ot_shape_plan_t const*)
00000000006e2c00 0000000000000584 t postprocess_glyphs_arabic(hb_ot_shape_plan_t const*, hb_buffer_t*, hb_font_t*)
00000000006e3190 0000000000000390 t hb_serialize_context_t::resolve_links()
00000000006e3520 0000000000000390 t OT::Lookup::serialize(hb_serialize_context_t*, unsigned int, unsigned int, unsigned int)
00000000006e38b0 00000000000008a8 t setup_masks_arabic_plan(arabic_shape_plan_t const*, hb_buffer_t*, hb_script_t)
00000000006e4160 000000000000000c t setup_masks_arabic(hb_ot_shape_plan_t const*, hb_buffer_t*, hb_font_t*)
00000000006e4170 0000000000000104 t hb_hashmap_t<hb_serialize_context_t::object_t const*, unsigned int, false>::fini()
00000000006e4280 0000000000000124 t hb_serialize_context_t::~hb_serialize_context_t()
00000000006e4280 0000000000000124 W hb_serialize_context_t::~hb_serialize_context_t()
00000000006e43b0 00000000000001e0 t hb_serialize_context_t::hb_serialize_context_t(void*, unsigned int)
00000000006e43b0 00000000000001e0 W hb_serialize_context_t::hb_serialize_context_t(void*, unsigned int)
00000000006e4590 00000000000003f8 t hb_hashmap_t<hb_serialize_context_t::object_t const*, unsigned int, false>::resize(unsigned int)
00000000006e4990 0000000000000508 t hb_serialize_context_t::discard_stale_objects()
00000000006e4ea0 0000000000000108 t hb_serialize_context_t::pop_discard()
00000000006e4fb0 00000000000009c0 t hb_serialize_context_t::pop_pack(bool)
00000000006e5970 0000000000000198 t hb_pool_t<hb_serialize_context_t::object_t, 32u>::alloc()
00000000006e5b10 0000000000000114 t arabic_fallback_plan_shape(arabic_fallback_plan_t*, hb_font_t*, hb_buffer_t*)
00000000006e5c30 00000000000001d4 t OT::ArrayOf<OT::HBGlyphID16, OT::IntType<unsigned short, 2u> >::serialize(hb_serialize_context_t*, unsigned int, bool)
00000000006e5e10 00000000000001dc t OT::ArrayOf<OT::Layout::Common::RangeRecord<OT::Layout::SmallTypes>, OT::IntType<unsigned short, 2u> >::serialize(hb_serialize_context_t*, unsigned int, bool)
00000000006e5ff0 0000000000000904 t bool OT::OffsetTo<OT::Layout::Common::Coverage, OT::IntType<unsigned short, 2u>, true>::serialize_serialize<hb_map_iter_t<hb_zip_iter_t<hb_sorted_array_t<OT::HBGlyphID16>, hb_array_t<OT::HBGlyphID16> >, ._anon_114 const&, (hb_function_sortedness_t)1, (void*)0>&>(hb_serialize_context_t*, hb_map_iter_t<hb_zip_iter_t<hb_sorted_array_t<OT::HBGlyphID16>, hb_array_t<OT::HBGlyphID16> >, ._anon_114 const&, (hb_function_sortedness_t)1, (void*)0>&)
00000000006e6900 0000000000000228 t bool OT::Layout::GSUB_impl::SingleSubstFormat2_4<OT::Layout::SmallTypes>::serialize<hb_zip_iter_t<hb_sorted_array_t<OT::HBGlyphID16>, hb_array_t<OT::HBGlyphID16> >, (void*)0>(hb_serialize_context_t*, hb_zip_iter_t<hb_sorted_array_t<OT::HBGlyphID16>, hb_array_t<OT::HBGlyphID16> >)
00000000006e6b30 0000000000000330 t bool OT::Layout::GSUB_impl::SingleSubst::serialize<hb_zip_iter_t<hb_sorted_array_t<OT::HBGlyphID16>, hb_array_t<OT::HBGlyphID16> >, (void*)0>(hb_serialize_context_t*, hb_zip_iter_t<hb_sorted_array_t<OT::HBGlyphID16>, hb_array_t<OT::HBGlyphID16> >)
00000000006e6e60 0000000000000618 t arabic_fallback_synthesize_lookup_single(hb_ot_shape_plan_t const*, hb_font_t*, unsigned int) [clone .constprop.0]
00000000006e7480 000000000000068c t bool OT::OffsetTo<OT::Layout::Common::Coverage, OT::IntType<unsigned short, 2u>, true>::serialize_serialize<hb_sorted_array_t<OT::HBGlyphID16 const>&>(hb_serialize_context_t*, hb_sorted_array_t<OT::HBGlyphID16 const>&)
00000000006e7b10 000000000000121c t OT::Layout::GSUB_impl::SubstLookup::serialize_ligature(hb_serialize_context_t*, unsigned int, hb_sorted_array_t<OT::HBGlyphID16 const>, hb_array_t<unsigned int const>, hb_array_t<OT::HBGlyphID16 const>, hb_array_t<unsigned int const>, hb_array_t<OT::HBGlyphID16 const>) [clone .isra.0]
00000000006e8d30 00000000000003a4 t OT::Layout::GSUB_impl::SubstLookup* arabic_fallback_synthesize_lookup_ligature<ligature_mark_set_t [1]>(hb_ot_shape_plan_t const*, hb_font_t*, ligature_mark_set_t const (&) [1], unsigned int) [clone .constprop.0]
00000000006e90e0 0000000000000524 t OT::Layout::GSUB_impl::SubstLookup* arabic_fallback_synthesize_lookup_ligature<ligature_set_t [18]>(hb_ot_shape_plan_t const*, hb_font_t*, ligature_set_t const (&) [18], unsigned int) [clone .constprop.0]
00000000006e9610 00000000000003b0 t OT::Layout::GSUB_impl::SubstLookup* arabic_fallback_synthesize_lookup_ligature<ligature_3_set_t [1]>(hb_ot_shape_plan_t const*, hb_font_t*, ligature_3_set_t const (&) [1], unsigned int) [clone .constprop.0]
00000000006e99c0 0000000000000208 t arabic_fallback_shape(hb_ot_shape_plan_t const*, hb_font_t*, hb_buffer_t*)
00000000006e9bd0 0000000000000004 t data_destroy_hangul(void*)
00000000006e9be0 0000000000000060 t collect_features_hangul(hb_ot_shape_planner_t*)
00000000006e9c40 0000000000000018 t override_features_hangul(hb_ot_shape_planner_t*)
00000000006e9c60 000000000000007c t setup_masks_hangul(hb_ot_shape_plan_t const*, hb_buffer_t*, hb_font_t*)
00000000006e9ce0 0000000000000028 t bool hb_buffer_t::replace_glyphs<unsigned int>(unsigned int, unsigned int, unsigned int const*) [clone .part.0]
00000000006e9d10 00000000000000a8 t data_create_hangul(hb_ot_shape_plan_t const*)
00000000006e9dc0 000000000000177c t preprocess_text_hangul(hb_ot_shape_plan_t const*, hb_buffer_t*, hb_font_t*)
00000000006eb540 00000000000000f4 t reorder_marks_hebrew(hb_ot_shape_plan_t const*, hb_buffer_t*, unsigned int, unsigned int)
00000000006eb640 0000000000000234 t compose_hebrew(hb_ot_shape_normalize_context_t const*, unsigned int, unsigned int, unsigned int*)
00000000006eb880 00000000000000d8 t compose_indic(hb_ot_shape_normalize_context_t const*, unsigned int, unsigned int, unsigned int*)
00000000006eb960 0000000000000014 t preprocess_text_indic(hb_ot_shape_plan_t const*, hb_buffer_t*, hb_font_t*)
00000000006eb980 0000000000000004 t data_destroy_indic(void*)
00000000006eb990 0000000000000044 t override_features_indic(hb_ot_shape_planner_t*)
00000000006eb9e0 00000000000000fc t collect_features_indic(hb_ot_shape_planner_t*)
00000000006ebae0 0000000000000028 t hb_buffer_t::allocate_var(unsigned int, unsigned int) [clone .part.0]
00000000006ebb10 0000000000000028 t hb_buffer_t::deallocate_var(unsigned int, unsigned int) [clone .part.0]
00000000006ebb40 0000000000000064 t decompose_indic(hb_ot_shape_normalize_context_t const*, unsigned int, unsigned int*, unsigned int*)
00000000006ebbb0 0000000000000070 t setup_masks_indic(hb_ot_shape_plan_t const*, hb_buffer_t*, hb_font_t*)
00000000006ebc20 0000000000001060 t initial_reordering_consonant_syllable(hb_ot_shape_plan_t const*, hb_face_t*, hb_buffer_t*, unsigned int, unsigned int) [clone .isra.0]
00000000006ecc80 0000000000000f30 t final_reordering_indic(hb_ot_shape_plan_t const*, hb_font_t*, hb_buffer_t*)
00000000006edbb0 0000000000000570 t initial_reordering_indic(hb_ot_shape_plan_t const*, hb_font_t*, hb_buffer_t*)
00000000006ee120 0000000000000684 t find_syllables_indic(hb_buffer_t*)
00000000006ee7b0 000000000000024c t setup_syllables_indic(hb_ot_shape_plan_t const*, hb_font_t*, hb_buffer_t*)
00000000006eea00 0000000000000138 t hb_indic_would_substitute_feature_t::init(hb_ot_map_t const*, unsigned int, bool)
00000000006eeb40 00000000000001fc t data_create_indic(hb_ot_shape_plan_t const*)
00000000006eed40 0000000000000084 t decompose_khmer(hb_ot_shape_normalize_context_t const*, unsigned int, unsigned int*, unsigned int*)
00000000006eedd0 00000000000000ac t compose_khmer(hb_ot_shape_normalize_context_t const*, unsigned int, unsigned int, unsigned int*)
00000000006eee80 0000000000000004 t data_destroy_khmer(void*)
00000000006eee90 00000000000000a0 t override_features_khmer(hb_ot_shape_planner_t*)
00000000006eef30 00000000000000e0 t collect_features_khmer(hb_ot_shape_planner_t*)
00000000006ef010 0000000000000028 t hb_buffer_t::allocate_var(unsigned int, unsigned int) [clone .part.0]
00000000006ef040 00000000000000c4 t data_create_khmer(hb_ot_shape_plan_t const*)
00000000006ef110 0000000000000058 t setup_masks_khmer(hb_ot_shape_plan_t const*, hb_buffer_t*, hb_font_t*)
00000000006ef170 0000000000000458 t reorder_khmer(hb_ot_shape_plan_t const*, hb_font_t*, hb_buffer_t*)
00000000006ef5d0 0000000000000454 t find_syllables_khmer(hb_buffer_t*)
00000000006efa30 000000000000024c t setup_syllables_khmer(hb_ot_shape_plan_t const*, hb_font_t*, hb_buffer_t*)
00000000006efc80 0000000000000010 t compare_myanmar_order(hb_glyph_info_t const*, hb_glyph_info_t const*)
00000000006efc90 00000000000000f8 t collect_features_myanmar(hb_ot_shape_planner_t*)
00000000006efd90 0000000000000028 t hb_buffer_t::allocate_var(unsigned int, unsigned int) [clone .part.0]
00000000006efdc0 0000000000000028 t hb_buffer_t::deallocate_var(unsigned int, unsigned int) [clone .part.0]
00000000006efdf0 0000000000000064 t setup_masks_myanmar(hb_ot_shape_plan_t const*, hb_buffer_t*, hb_font_t*)
00000000006efe60 00000000000006a8 t reorder_myanmar(hb_ot_shape_plan_t const*, hb_font_t*, hb_buffer_t*)
00000000006f0510 00000000000003a0 t find_syllables_myanmar(hb_buffer_t*)
00000000006f08b0 000000000000024c t setup_syllables_myanmar(hb_ot_shape_plan_t const*, hb_font_t*, hb_buffer_t*)
00000000006f0b00 00000000000002f0 t hb_syllabic_insert_dotted_circles(hb_font_t*, hb_buffer_t*, unsigned int, unsigned int, int, int)
00000000006f0df0 0000000000000040 T hb_syllabic_clear_var(hb_ot_shape_plan_t const*, hb_font_t*, hb_buffer_t*)
00000000006f0e30 00000000000000f8 t thai_pua_shape(unsigned int, thai_action_t, hb_font_t*)
00000000006f0f30 0000000000000028 t bool hb_buffer_t::replace_glyphs<unsigned int>(unsigned int, unsigned int, unsigned int const*) [clone .part.0]
00000000006f0f60 00000000000006f8 t preprocess_text_thai(hb_ot_shape_plan_t const*, hb_buffer_t*, hb_font_t*)
00000000006f1660 0000000000000034 t _hb_clear_substitution_flags(hb_ot_shape_plan_t const*, hb_font_t*, hb_buffer_t*)
00000000006f16a0 00000000000000ac t compose_use(hb_ot_shape_normalize_context_t const*, unsigned int, unsigned int, unsigned int*)
00000000006f1750 0000000000000004 t preprocess_text_use(hb_ot_shape_plan_t const*, hb_buffer_t*, hb_font_t*)
00000000006f1760 000000000000002c t data_destroy_use(void*)
00000000006f1790 00000000000001d8 t collect_features_use(hb_ot_shape_planner_t*)
00000000006f1970 0000000000000028 t hb_buffer_t::allocate_var(unsigned int, unsigned int) [clone .part.0]
00000000006f19a0 00000000000001b8 t data_create_use(hb_ot_shape_plan_t const*)
00000000006f1b60 00000000000000ec t setup_masks_use(hb_ot_shape_plan_t const*, hb_buffer_t*, hb_font_t*)
00000000006f1c50 00000000000000d8 t record_pref_use(hb_ot_shape_plan_t const*, hb_font_t*, hb_buffer_t*)
00000000006f1d30 00000000000000cc t hb_filter_iter_t<hb_filter_iter_t<hb_zip_iter_t<hb_iota_iter_t<unsigned int, unsigned int>, hb_array_t<hb_glyph_info_t> >, find_syllables_use(hb_buffer_t*)::{lambda(hb_glyph_info_t const&)#1}, ._anon_115 const&, (void*)0>, find_syllables_use(hb_buffer_t*)::{lambda(hb_pair_t<unsigned int, hb_glyph_info_t const&>)#2}, ._anon_103 const&, (void*)0>::__next__()
00000000006f1e00 00000000000000d0 t hb_filter_iter_t<hb_filter_iter_t<hb_zip_iter_t<hb_iota_iter_t<unsigned int, unsigned int>, hb_array_t<hb_glyph_info_t> >, find_syllables_use(hb_buffer_t*)::{lambda(hb_glyph_info_t const&)#1}, ._anon_115 const&, (void*)0>, find_syllables_use(hb_buffer_t*)::{lambda(hb_pair_t<unsigned int, hb_glyph_info_t const&>)#2}, ._anon_103 const&, (void*)0>::__prev__()
00000000006f1ed0 00000000000000e8 t hb_zip_iter_t<hb_iota_iter_t<unsigned int, unsigned int>, hb_filter_iter_t<hb_filter_iter_t<hb_zip_iter_t<hb_iota_iter_t<unsigned int, unsigned int>, hb_array_t<hb_glyph_info_t> >, find_syllables_use(hb_buffer_t*)::{lambda(hb_glyph_info_t const&)#1}, ._anon_115 const&, (void*)0>, find_syllables_use(hb_buffer_t*)::{lambda(hb_pair_t<unsigned int, hb_glyph_info_t const&>)#2}, ._anon_103 const&, (void*)0> >::__forward__(unsigned int)
00000000006f1fc0 00000000000000f4 t record_rphf_use(hb_ot_shape_plan_t const*, hb_font_t*, hb_buffer_t*)
00000000006f20c0 000000000000011c t machine_index_t<hb_zip_iter_t<hb_iota_iter_t<unsigned int, unsigned int>, hb_filter_iter_t<hb_filter_iter_t<hb_zip_iter_t<hb_iota_iter_t<unsigned int, unsigned int>, hb_array_t<hb_glyph_info_t> >, find_syllables_use(hb_buffer_t*)::{lambda(hb_glyph_info_t const&)#1}, ._anon_115 const&, (void*)0>, find_syllables_use(hb_buffer_t*)::{lambda(hb_pair_t<unsigned int, hb_glyph_info_t const&>)#2}, ._anon_103 const&, (void*)0> > >::operator=(machine_index_t<hb_zip_iter_t<hb_iota_iter_t<unsigned int, unsigned int>, hb_filter_iter_t<hb_filter_iter_t<hb_zip_iter_t<hb_iota_iter_t<unsigned int, unsigned int>, hb_array_t<hb_glyph_info_t> >, find_syllables_use(hb_buffer_t*)::{lambda(hb_glyph_info_t const&)#1}, ._anon_115 const&, (void*)0>, find_syllables_use(hb_buffer_t*)::{lambda(hb_pair_t<unsigned int, hb_glyph_info_t const&>)#2}, ._anon_103 const&, (void*)0> > > const&)
00000000006f21e0 0000000000002008 t find_syllables_use(hb_buffer_t*)
00000000006f41f0 00000000000005a4 t setup_syllables_use(hb_ot_shape_plan_t const*, hb_font_t*, hb_buffer_t*)
00000000006f47a0 0000000000000374 t reorder_use(hb_ot_shape_plan_t const*, hb_font_t*, hb_buffer_t*)
00000000006f4b20 00000000000000e8 t _output_dotted_circle(hb_buffer_t*)
00000000006f4c10 000000000000201c t _hb_preprocess_text_vowel_constraints(hb_ot_shape_plan_t const*, hb_buffer_t*, hb_font_t*)
00000000006f6c30 0000000000000028 t hb_buffer_t::assert_var(unsigned int, unsigned int) [clone .part.0]
00000000006f6c60 00000000000007d0 t position_around_base(hb_ot_shape_plan_t const*, hb_font_t*, hb_buffer_t*, unsigned int, unsigned int, bool)
00000000006f7430 00000000000001c4 t _hb_ot_shape_fallback_mark_position_recategorize_marks(hb_ot_shape_plan_t const*, hb_font_t*, hb_buffer_t*)
00000000006f7600 0000000000000218 t _hb_ot_shape_fallback_mark_position(hb_ot_shape_plan_t const*, hb_font_t*, hb_buffer_t*, bool)
00000000006f7820 00000000000002dc t _hb_ot_shape_fallback_spaces(hb_ot_shape_plan_t const*, hb_font_t*, hb_buffer_t*)
00000000006f7b00 000000000000065c t OT::hb_kern_machine_t<hb_ot_shape_fallback_kern_driver_t>::kern(hb_font_t*, hb_buffer_t*, unsigned int, bool) const
00000000006f8160 00000000000002ac t _hb_ot_shape_fallback_kern(hb_ot_shape_plan_t const*, hb_font_t*, hb_buffer_t*)
00000000006f8410 0000000000000030 t decompose_unicode(hb_ot_shape_normalize_context_t const*, unsigned int, unsigned int*, unsigned int*)
00000000006f8440 0000000000000050 t compare_combining_class(hb_glyph_info_t const*, hb_glyph_info_t const*)
00000000006f8490 0000000000000040 t compose_unicode(hb_ot_shape_normalize_context_t const*, unsigned int, unsigned int, unsigned int*)
00000000006f84d0 00000000000002d8 t _hb_glyph_info_set_unicode_props(hb_glyph_info_t*, hb_buffer_t*)
00000000006f87b0 0000000000000028 t bool hb_buffer_t::replace_glyphs<unsigned int>(unsigned int, unsigned int, unsigned int const*) [clone .part.0]
00000000006f87e0 0000000000000344 t decompose(hb_ot_shape_normalize_context_t const*, bool, unsigned int)
00000000006f8b30 00000000000003f0 t decompose_current_character(hb_ot_shape_normalize_context_t const*, bool)
00000000006f8f20 0000000000000dfc t _hb_ot_shape_normalize(hb_ot_shape_plan_t const*, hb_buffer_t*, hb_font_t*)
00000000006f9d20 0000000000000020 t TOUPPER(unsigned char)
00000000006f9d40 0000000000000020 t TOLOWER(unsigned char)
00000000006f9d60 00000000000001dc t parse_private_use_subtag(char const*, unsigned int*, unsigned int*, char const*, unsigned char (*)(unsigned char))
00000000006f9f40 0000000000000098 t subtag_matches(char const*, char const*, char const*, unsigned int)
00000000006f9fe0 00000000000036b8 T hb_ot_tags_from_script_and_language
00000000006fd6a0 000000000000007c t hb_ucd_combining_class(hb_unicode_funcs_t*, unsigned int, void*)
00000000006fd720 0000000000000070 t hb_ucd_general_category(hb_unicode_funcs_t*, unsigned int, void*)
00000000006fd790 000000000000007c t hb_ucd_mirroring(hb_unicode_funcs_t*, unsigned int, void*)
00000000006fd810 0000000000000080 t hb_ucd_script(hb_unicode_funcs_t*, unsigned int, void*)
00000000006fd890 0000000000000180 t hb_ucd_decompose(hb_unicode_funcs_t*, unsigned int, unsigned int*, unsigned int*, void*)
00000000006fda10 0000000000000160 t hb_ucd_compose(hb_unicode_funcs_t*, unsigned int, unsigned int, unsigned int*, void*)
00000000006fdb70 000000000000012c t hb_ucd_get_unicode_funcs
00000000006fdca0 00000000000001cc t _hb_buffer_serialize_unicode_text(hb_buffer_t*, unsigned int, unsigned int, char*, unsigned int, unsigned int*, hb_buffer_serialize_flags_t)
00000000006fde70 000000000000022c t _hb_buffer_serialize_unicode_json(hb_buffer_t*, unsigned int, unsigned int, char*, unsigned int, unsigned int*, hb_buffer_serialize_flags_t)
00000000006fe0a0 0000000000000028 t hb_buffer_t::assert_unicode() [clone .part.0]
00000000006fe0d0 00000000000000d4 T hb_buffer_serialize_unicode
00000000006fe1b0 00000000000002b4 t hb_indic_get_categories(unsigned int)
00000000006fe480 0000000000000240 T atanf
00000000006fe6c0 0000000000000050 T fmodf
00000000006fe720 00000000000001b0 T sinf
00000000006fe8e0 00000000000001b4 T log
00000000006feaa0 0000000000000098 T sin
00000000006feb40 0000000000000004 T atan2
00000000006feb60 000000000000000c T lrintf
00000000006feb80 0000000000000008 T fabsf
00000000006feba0 0000000000000034 t with_errno
00000000006febe0 0000000000000018 t xflow
00000000006fec00 000000000000000c t __math_uflow
00000000006fec20 000000000000000c t __math_oflow
00000000006fec40 0000000000000020 t __math_divzero
00000000006fec60 000000000000001c t __math_invalid
00000000006fec80 0000000000000014 t __math_check_uflow
00000000006feca0 0000000000000020 t __math_check_oflow
00000000006fecc0 00000000000000dc T log2f
00000000006feda0 0000000000000300 T __ieee754_rem_pio2
00000000006ff0a0 0000000000000068 T acosf
00000000006ff120 0000000000000498 T pow
00000000006ff5c0 00000000000001ec T __ieee754_fmodf
00000000006ff7c0 0000000000000880 T __kernel_rem_pio2
0000000000700040 000000000000007c T ldexpf
00000000007000c0 000000000000010c T scalbn
00000000007001e0 00000000000000f8 T scalbnf
00000000007002e0 00000000000000dc T expf
00000000007003c0 0000000000000318 T __ieee754_acosf
00000000007006e0 0000000000000050 T sqrtf
0000000000700740 0000000000000050 T sqrt
00000000007007a0 000000000000007c T ldexp
0000000000700820 0000000000000338 T powf
0000000000700b60 000000000000006c T hypotf
0000000000700be0 000000000000009c T __kernel_sin
0000000000700c80 0000000000000004 T atan2f
0000000000700ca0 0000000000000064 T tanf
0000000000700d20 0000000000000090 T cos
0000000000700dc0 0000000000000034 t with_errnof
0000000000700e00 0000000000000018 t xflowf
0000000000700e20 0000000000000008 t __math_uflowf
0000000000700e40 000000000000000c t __math_may_uflowf
0000000000700e60 0000000000000008 t __math_oflowf
0000000000700e80 0000000000000020 t __math_divzerof
0000000000700ea0 000000000000001c t __math_invalidf
0000000000700ec0 0000000000000078 T frexp
0000000000700f40 0000000000000008 T __ieee754_sqrtf
0000000000700f60 00000000000001b0 T log2
0000000000701120 000000000000000c T nanf
0000000000701140 00000000000000c8 T exp2f
0000000000701220 00000000000001a8 T __ieee754_hypotf
00000000007013e0 00000000000001b4 T cosf
00000000007015a0 0000000000000008 T __ieee754_sqrt
00000000007015c0 00000000000001dc T __ieee754_atan2
00000000007017a0 0000000000000008 T floor
00000000007017c0 0000000000000170 T exp
0000000000701940 0000000000000018 T finitef
0000000000701960 00000000000000dc T logf
0000000000701a40 0000000000000018 T finite
0000000000701a60 000000000000021c T atan
0000000000701c80 00000000000001d0 T __ieee754_atan2f
0000000000701e60 0000000000000130 T __kernel_cos
0000000000701fa0 0000000000000008 T fabs
0000000000701fc0 0000000000000314 T __ieee754_rem_pio2f
00000000007022e0 000000000000020c T __kernel_tanf
0000000000702500 000000000000000c T nan
0000000000702520 0000000000000884 T __kernel_rem_pio2f
0000000000702dc0 0000000000000008 T floorf
0000000000702de0 00000000000000f8 t __eqtf2
0000000000702de0 00000000000000f8 T __netf2
0000000000702ee0 0000000000000914 t __multf3
0000000000703800 0000000000000064 t __floatunsitf
0000000000703880 0000000000000130 t __extenddftf2
00000000007039c0 0000000000000370 t __trunctfsf2
0000000000703d40 00000000000002ac t init_dwarf_reg_size_table
0000000000704000 0000000000000160 t uw_install_context_1
0000000000704160 000000000000018c t read_encoded_value
0000000000704300 00000000000007c4 t execute_stack_op
0000000000704ae0 0000000000000338 t uw_update_context_1
0000000000704e20 0000000000000148 t uw_update_context
0000000000704f80 00000000000007d4 t execute_cfa_program_specialized
0000000000705760 0000000000000814 t execute_cfa_program_generic
0000000000705f80 0000000000000444 t uw_frame_state_for
00000000007063e0 0000000000000370 t uw_init_context_1
0000000000706760 000000000000010c t _Unwind_RaiseException_Phase2
0000000000706880 000000000000010c t _Unwind_ForcedUnwind_Phase2
00000000007069a0 0000000000000054 t _Unwind_SetGR
0000000000706a00 0000000000000014 t _Unwind_GetIPInfo
0000000000706a20 0000000000000008 t _Unwind_SetIP
0000000000706a40 0000000000000008 t _Unwind_GetLanguageSpecificData
0000000000706a60 0000000000000008 t _Unwind_GetRegionStart
0000000000706a80 0000000000000008 t _Unwind_GetDataRelBase
0000000000706aa0 0000000000000008 t _Unwind_GetTextRelBase
0000000000706ac0 0000000000000004 t _Unwind_DebugHook
0000000000706ae0 000000000000018c t _Unwind_RaiseException
0000000000706c80 0000000000000114 t _Unwind_Resume
0000000000706da0 000000000000010c t _Unwind_Resume_or_Rethrow
0000000000706ec0 000000000000001c t _Unwind_DeleteException
0000000000706ee0 0000000000000018 t fde_unencoded_compare
0000000000706f00 000000000000002c t fde_unencoded_extract
0000000000706f40 00000000000000d4 t frame_downheap
0000000000707020 0000000000000138 t read_encoded_value_with_base
0000000000707160 0000000000000238 t fde_radixsort
00000000007073a0 0000000000000104 t __deregister_frame_info_bases.part.0
00000000007074c0 000000000000012c t get_cie_encoding
0000000000707600 00000000000000d4 t fde_mixed_encoding_extract
00000000007076e0 00000000000001f0 t classify_object_over_fdes.constprop.0
00000000007078e0 00000000000000bc t fde_single_encoding_extract
00000000007079a0 00000000000000ac t fde_single_encoding_compare
0000000000707a60 000000000000010c t fde_mixed_encoding_compare
0000000000707b80 0000000000000214 t add_fdes.isra.0
0000000000707da0 000000000000027c t linear_search_fdes
0000000000708020 0000000000000528 t search_object
0000000000708560 0000000000000074 t __register_frame_info
00000000007085e0 0000000000000018 t __deregister_frame_info
0000000000708600 00000000000001d4 t _Unwind_Find_FDE
00000000007087e0 0000000000000030 T __arm_za_disable
00000000007087e0 0000000000000030 t __libgcc_arm_za_disable
0000000000708820 0000000000000070 t __sfp_handle_exceptions
0000000000708890 00000000000000a0 T __arm_tpidr2_save
0000000000708890 00000000000000a0 t __libgcc_arm_tpidr2_save
0000000000708940 0000000000000024 T srand
0000000000708980 0000000000000038 T rand
00000000007089c0 000000000000002c T getenv
0000000000708a00 000000000000002c T strndup
0000000000708a40 0000000000000020 T _freelocale_r
0000000000708a60 0000000000000024 T freelocale
0000000000708aa0 0000000000000124 T _ungetwc_r
0000000000708be0 0000000000000068 T ungetwc
0000000000708c60 00000000000000b8 T __submore
0000000000708d20 00000000000001dc T _ungetc_r
0000000000708f00 000000000000002c T ungetc
0000000000708f40 0000000000000008 T wmemmove
0000000000708f60 00000000000000b4 T _fputs_r
0000000000709020 000000000000002c T fputs
0000000000709060 0000000000000064 T _init_signal_r
00000000007090e0 000000000000006c T _signal_r
0000000000709160 00000000000000a4 T _raise_r
0000000000709220 0000000000000024 T raise
0000000000709260 000000000000002c T signal
00000000007092a0 0000000000000004 T getwc
00000000007092c0 0000000000000018 T isalpha
00000000007092e0 0000000000000064 T __assert_func
0000000000709360 00000000000000ec t iso_year_adjust.isra.0
0000000000709460 0000000000001020 t __strftime.isra.0
000000000070a480 0000000000000044 T strftime
000000000070a4e0 0000000000000418 T _strerror_r
000000000070a900 000000000000002c T strerror
000000000070a940 00000000000000f0 T _fwrite_r
000000000070aa40 0000000000000044 T fwrite
000000000070aac0 0000000000000104 T strrchr
000000000070abe0 0000000000000060 T __itoa
000000000070ac40 0000000000000004 T itoa
000000000070ac60 0000000000000184 T _fgets_r
000000000070ae00 000000000000003c T fgets
000000000070ae40 000000000000000c T abs
000000000070ae60 0000000000000494 T __sfvwrite_r
000000000070b300 000000000000003c T setenv
000000000070b340 0000000000000008 T _user_strerror
000000000070b360 00000000000002e8 t _strtoll_l.isra.0
000000000070b660 0000000000000044 T _strtoll_r
000000000070b6c0 0000000000000048 T strtoll
000000000070b720 00000000000000b8 t currentlocale
000000000070b7e0 00000000000007ac T __loadlocale
000000000070bfa0 0000000000000094 T __get_locale_env
000000000070c040 00000000000003dc T _setlocale_r
000000000070c420 000000000000002c T __locale_mb_cur_max
000000000070c460 000000000000002c T setlocale
000000000070c4a0 0000000000000004 T wcsxfrm
000000000070c4c0 0000000000000008 T atof
000000000070c4e0 0000000000000054 t sulp
000000000070c540 0000000000001210 T _strtod_l
000000000070d760 0000000000000050 T _strtod_r
000000000070d7c0 000000000000003c T strtod_l
000000000070d800 0000000000000054 T strtod
000000000070d860 00000000000000d0 T strtof_l
000000000070d940 00000000000000f4 T strtof
000000000070da40 0000000000000024 T srandom
000000000070da80 0000000000000038 T random
000000000070dac0 00000000000000a0 T sprintf
000000000070db60 0000000000000078 T fiprintf
000000000070dbe0 00000000000000b4 T getc
000000000070dca0 00000000000000a8 T __utoa
000000000070dd60 00000000000000ec t iso_year_adjust.isra.0
000000000070de60 0000000000000040 T __ctloc
000000000070dea0 0000000000001024 t __strftime.isra.0
000000000070eee0 0000000000000044 T wcsftime
000000000070ef40 0000000000000028 T putchar
000000000070ef80 000000000000007c T strcat
000000000070f000 0000000000000030 T wcscmp
000000000070f040 000000000000011c t rshift
000000000070f160 00000000000008c4 T __gethex
000000000070fa40 0000000000000060 T strxfrm
000000000070faa0 00000000000001a4 t _strtoul_l.isra.0
000000000070fc60 0000000000000044 T _strtoul_r
000000000070fcc0 0000000000000048 T strtoul
000000000070fd40 0000000000000130 T strlen
000000000070fe80 0000000000000048 T __ascii_mbtowc
000000000070fee0 00000000000002dc T __utf8_mbtowc
00000000007101c0 00000000000000cc T __sjis_mbtowc
00000000007102a0 0000000000000124 T __eucjp_mbtowc
00000000007103e0 00000000000001c0 T __jis_mbtowc
00000000007105a0 000000000000003c T write
00000000007105e0 00000000000004b0 T _fseeko_r
0000000000710aa0 000000000000003c T fseeko
0000000000710ae0 0000000000000094 T ferror
0000000000710b80 0000000000000080 T strncat
0000000000710c00 000000000000002c T gettimeofday
0000000000710c40 00000000000000b8 T bsearch
0000000000710d00 0000000000000014 T _tzset_unlocked
0000000000710d40 00000000000000cc T strchr
0000000000710e20 0000000000000008 T wmemcpy
0000000000710e40 0000000000000314 T _fread_r
0000000000711160 0000000000000044 T fread
00000000007111c0 000000000000002c T calloc
0000000000711200 00000000000000d8 T _vsnprintf_r
00000000007112e0 0000000000000054 T vsnprintf
0000000000711340 00000000000000dc T memchr
0000000000711420 00000000000001d8 T _wctype_r
0000000000711600 0000000000000024 T wctype
0000000000711640 000000000000004c T __sread
00000000007116a0 0000000000000008 T __seofread
00000000007116c0 0000000000000068 T __swrite
0000000000711740 0000000000000050 T __sseek
00000000007117a0 0000000000000008 T __sclose
00000000007117c0 000000000000006c T _vasprintf_r
0000000000711840 000000000000004c T vasprintf
00000000007118a0 000000000000002c T aligned_alloc
00000000007118e0 000000000000000c T labs
0000000000711900 0000000000000974 T qsort
0000000000711900 0000000000000974 t qsort.localalias
0000000000712280 0000000000000018 T abort
00000000007122a0 0000000000000038 t lflush
00000000007122e0 00000000000001b0 T __srefill_r
00000000007124a0 0000000000000004 T call_once
00000000007124c0 0000000000000004 T mtx_destroy
00000000007124e0 000000000000002c T mtx_init
0000000000712520 000000000000005c T mtx_lock
0000000000712580 000000000000005c T mtx_unlock
00000000007125e0 0000000000000134 T _fclose_r
0000000000712720 0000000000000024 T fclose
0000000000712760 000000000000003c T read
00000000007127a0 000000000000000c T __gettzinfo
00000000007127c0 00000000000001b4 T strncmp
0000000000712980 0000000000000134 T swprintf
0000000000712ab4 0000000000000790 t get_arg
0000000000713244 0000000000003c10 T _vfprintf_r
0000000000716e54 000000000000004c T vfprintf
0000000000716ea0 00000000000000d4 t __sbprintf
0000000000716f80 00000000000000c0 T _calloc_r
0000000000717040 0000000000000078 T fprintf
00000000007170c0 0000000000000134 T strcmp
0000000000717200 0000000000000094 T __swhatbuf_r
00000000007172a0 00000000000000fc T __smakebuf_r
00000000007173a0 000000000000002c T realloc
00000000007173e0 0000000000000038 T strlcpy
0000000000717420 0000000000000024 T strdup
0000000000717480 00000000000000b8 T strnlen
0000000000717540 000000000000002c T memalign
0000000000717580 000000000000001c t stdio_exit_handler
00000000007175a0 000000000000006c t cleanup_stdio
0000000000717620 0000000000000134 t global_stdio_init.part.0
0000000000717760 000000000000000c T __sfp_lock_acquire
0000000000717780 000000000000000c T __sfp_lock_release
00000000007177a0 000000000000012c T __sfp
00000000007178e0 0000000000000054 T __sinit
0000000000717940 000000000000000c T __tz_lock
0000000000717960 000000000000000c T __tz_unlock
0000000000717980 000000000000000c T _Exit
00000000007179a0 00000000000007e8 T _malloc_r
0000000000718188 0000000000000038 T setjmp
00000000007181c0 000000000000003c T longjmp
0000000000718200 00000000000000e0 T _putc_r
00000000007182e0 00000000000000e4 T putc
00000000007183e0 0000000000000074 T strcasecmp
0000000000718460 00000000000001a4 t quorem
0000000000718620 0000000000001304 T _dtoa_r
0000000000719940 00000000000000d8 T _wcrtomb_r
0000000000719a20 00000000000000e4 T wcrtomb
0000000000719b20 0000000000000024 T isatty
0000000000719b80 000000000000022c T memcpy
0000000000719b80 T memmove
0000000000719dc0 0000000000000078 T _strndup_r
0000000000719e40 0000000000000124 T _malloc_trim_r
0000000000719f80 00000000000002d4 T _free_r
000000000071a260 0000000000000008 T towupper
000000000071a280 0000000000000034 T strtok
000000000071a2b4 0000000000000790 t get_arg
000000000071aa44 0000000000003c0c T _svfprintf_r
000000000071e660 000000000000001c T atoi
000000000071e680 00000000000002e8 t _strtol_l.part.0
000000000071e980 0000000000000070 T _strtol_r
000000000071ea00 0000000000000074 T strtol
000000000071ea80 0000000000000098 T clearerr
000000000071eb20 000000000000003c T wcslcpy
000000000071eb60 0000000000000024 T close
000000000071eba0 0000000000000018 T isspace
000000000071ebc0 0000000000000094 T feof
000000000071ec60 0000000000000004 T strcoll
000000000071ec80 00000000000006c0 T _tzset_unlocked_r
000000000071f340 0000000000000014 T __errno
000000000071f360 0000000000000044 T malloc
000000000071f3c0 0000000000000024 T free
000000000071f400 0000000000000078 T printf
000000000071f480 0000000000000094 T wctob
000000000071f520 0000000000000024 T wcscpy
000000000071f560 000000000000003c T lseek
000000000071f5a0 0000000000000158 T sniprintf
000000000071f700 00000000000000b4 T sscanf
000000000071f7c0 0000000000000124 T _fopen_r
000000000071f900 000000000000002c T fopen
000000000071f940 0000000000000010 T __set_ctype
000000000071f960 0000000000000048 T time
000000000071f9c0 00000000000000a8 T strlcat
000000000071fa80 0000000000000020 T isblank
000000000071faa0 0000000000000094 T btowc
000000000071fb40 00000000000000ac T asprintf
000000000071fc00 00000000000000d0 T _puts_r
000000000071fce0 0000000000000024 T puts
000000000071fd20 0000000000000154 T _fdopen_r
000000000071fe80 000000000000002c T fdopen
000000000071fec0 0000000000000088 T open
000000000071ff60 000000000000002c T gmtime
000000000071ffa0 0000000000000048 T mbstowcs
0000000000720000 0000000000000104 T _findenv_r
0000000000720120 0000000000000018 T _getenv_r
0000000000720140 0000000000000134 t critical_factorization
0000000000720280 0000000000000334 t two_way_long_needle
00000000007205c0 0000000000000258 T strstr
0000000000720820 0000000000000034 T wmemchr
0000000000720860 00000000000000a4 T fputc
0000000000720920 0000000000000090 T _vsscanf_r
00000000007209c0 000000000000004c T vsscanf
0000000000720a20 000000000000053c T _realloc_r
0000000000720f60 0000000000000020 T islower
0000000000720f80 0000000000000084 T strncasecmp
0000000000721020 000000000000005c T _strdup_r
0000000000721080 0000000000000098 T _fwalk_sglue
0000000000721120 000000000000000c T __malloc_lock
0000000000721140 000000000000000c T __malloc_unlock
0000000000721160 0000000000000160 T _ftello_r
00000000007212c0 0000000000000024 T ftello
0000000000721300 00000000000000ac T fileno
00000000007213c0 000000000000025c T __tzcalc_limits
0000000000721620 0000000000000068 T __srget_r
00000000007216c0 0000000000000104 T memset
00000000007217e0 0000000000000004 T _ftell_r
0000000000721800 0000000000000024 T ftell
0000000000721840 0000000000000254 T _setenv_r
0000000000721aa0 000000000000002c T stat
0000000000721acc 0000000000000270 t wcvt
0000000000721d3c 000000000000073c t get_arg.isra.0
0000000000722478 00000000000036c0 T _svfwprintf_r
0000000000725b40 00000000000000a0 T __strtok_r
0000000000725be0 0000000000000008 T strtok_r
0000000000725be8 0000000000000074 t get_arg
0000000000725c5c 00000000000032d0 T __ssvfscanf_r
0000000000728f40 0000000000000004 T _fseek_r
0000000000728f60 000000000000003c T fseek
0000000000728fa0 0000000000000014 T atexit
0000000000728fc0 000000000000012c T strcpy
0000000000729100 0000000000000350 T _newlocale_r
0000000000729460 000000000000003c T newlocale
00000000007294a0 0000000000000034 T __ascii_wctomb
00000000007294e0 00000000000000e4 T __utf8_wctomb
00000000007295e0 0000000000000084 T __sjis_wctomb
0000000000729680 00000000000000a8 T __eucjp_wctomb
0000000000729740 00000000000000bc T __jis_wctomb
0000000000729800 0000000000000040 T __memcpy_chk
0000000000729840 0000000000000028 T wcslen
0000000000729880 0000000000000020 T isupper
00000000007298a0 0000000000000158 T snprintf
0000000000729a00 000000000000008c T strncpy
0000000000729aa0 0000000000000024 T toupper
0000000000729ae0 00000000000001a4 t _strtoull_l.isra.0
0000000000729ca0 0000000000000044 T _strtoull_r
0000000000729d00 0000000000000048 T strtoull
0000000000729d80 0000000000000150 T stpcpy
0000000000729ee0 000000000000001c T wmemset
0000000000729f00 0000000000000010 T _wcsrtombs_r
0000000000729f20 0000000000000004 T wcscoll
0000000000729f24 0000000000000790 t get_arg
000000000072a6b4 0000000000002888 T _svfiprintf_r
000000000072cf40 00000000000001c8 T memcmp
000000000072d120 0000000000000048 T __match
000000000072d180 000000000000025c T __hexnan
000000000072d3e0 0000000000000008 T towlower
000000000072d400 0000000000000004 T putwc
000000000072d420 00000000000000bc T __sflags
000000000072d4e0 00000000000000f0 T _mbrtowc_r
000000000072d5e0 0000000000000100 T mbrtowc
000000000072d6e0 0000000000000090 T __libc_init_array
000000000072d780 000000000000005c T iswctype
000000000072d7e0 0000000000000060 T _fgetwc_r
000000000072d840 0000000000000050 T fgetwc
000000000072d8a0 0000000000000180 T __swsetup_r
000000000072da20 00000000000001e8 T __sflush_r
000000000072dc20 00000000000000b8 T _fflush_r
000000000072dce0 0000000000000044 T fflush
000000000072dd40 00000000000001cc T _wcstoul_l
000000000072df20 000000000000005c T wcstoul
000000000072df80 0000000000000008 T iswalnum
000000000072dfa0 000000000000000c T __env_lock
000000000072dfc0 000000000000000c T __env_unlock
000000000072dfe0 0000000000000048 T iswspace_l
000000000072e040 000000000000008c T _Balloc
000000000072e0e0 0000000000000020 T _Bfree
000000000072e100 0000000000000108 T __multadd
000000000072e220 000000000000013c T __s2b
000000000072e360 0000000000000094 T __hi0bits
000000000072e400 00000000000000fc T __lo0bits
000000000072e500 000000000000004c T __i2b
000000000072e560 00000000000001ec T __multiply
000000000072e760 00000000000000fc T __pow5mult
000000000072e860 0000000000000174 T __lshift
000000000072e9e0 0000000000000050 T __mcmp
000000000072ea40 00000000000001c4 T __mdiff
000000000072ec20 0000000000000084 T __ulp
000000000072ecc0 0000000000000168 T __b2d
000000000072ee40 0000000000000154 T __d2b
000000000072efa0 00000000000000ac T __ratio
000000000072f060 0000000000000078 T __copybits
000000000072f0e0 000000000000006c T __any_on
000000000072f160 00000000000000c8 T __ssprint_r
000000000072f240 0000000000000008 T iswblank
000000000072f260 0000000000000008 T iswlower
000000000072f280 00000000000002a0 T gmtime_r
000000000072f520 0000000000000790 t get_arg
000000000072fcb0 000000000000294c T _vfiprintf_r
00000000007325fc 00000000000000d4 t __sbprintf
00000000007326e0 000000000000017c T _memalign_r
0000000000732860 0000000000000118 T __swbuf_r
0000000000732980 0000000000000188 T _wcsnrtombs_l
0000000000732b20 0000000000000074 T _wcsnrtombs_r
0000000000732b94 0000000000000074 t get_arg
0000000000732c08 00000000000000f0 T _sungetc_r
0000000000732cf8 0000000000000070 T __ssrefill_r
0000000000732d68 00000000000000e0 T _sfread_r
0000000000732e48 00000000000028bc T __ssvfiscanf_r
0000000000735720 0000000000000008 T iswalpha
0000000000735740 0000000000000020 T _towctrans_r
0000000000735760 000000000000002c T towctrans
00000000007357a0 00000000000000c8 T __sswprint_r
0000000000735880 0000000000000044 T __sprint_r
00000000007358e0 00000000000000b4 T siscanf
00000000007359a0 0000000000000008 T iswspace
00000000007359c0 0000000000000010 T iswdigit
00000000007359e0 00000000000000d4 T __sccl
0000000000735ac0 00000000000000e8 T _mbstowcs_r
0000000000735bc0 0000000000000008 T __localeconv_l
0000000000735be0 0000000000000028 T _localeconv_r
0000000000735c20 0000000000000034 T iswalpha_l
0000000000735c60 0000000000000050 T __chk_fail
0000000000735cc0 0000000000000104 T __fputwc
0000000000735de0 000000000000007c T _fputwc_r
0000000000735e60 0000000000000068 T fputwc
0000000000735ee0 000000000000011c T _mbsnrtowcs_r
0000000000736000 0000000000000008 T iswprint
0000000000736020 0000000000000008 T iswcntrl
0000000000736040 000000000000007c T category
00000000007360c0 0000000000000020 T iswxdigit
00000000007360e0 0000000000000054 T mbrlen
0000000000736140 00000000000000e0 T __register_exitproc
0000000000736220 000000000000009c T stpncpy
00000000007362c0 0000000000000188 T __ssputs_r
0000000000736460 0000000000000008 T iswupper
0000000000736480 0000000000000008 T iswgraph
00000000007364a0 0000000000000064 T iswlower_l
0000000000736520 000000000000002c T iswblank_l
0000000000736560 0000000000000038 T iswalnum_l
00000000007365a0 0000000000000008 T iswpunct
00000000007365c0 0000000000000204 T towctrans_l
00000000007367e0 0000000000000020 T iswprint_l
0000000000736800 0000000000000024 T iswcntrl_l
0000000000736840 0000000000000064 T iswupper_l
00000000007368c0 0000000000000028 T iswgraph_l
0000000000736900 0000000000000070 T __swbufw_r
0000000000736980 000000000000013c T __call_exitprocs
0000000000736ac0 0000000000000020 T iswpunct_l
0000000000736ae0 0000000000000020 T _exit
0000000000736b00 0000000000000170 T chdir
0000000000736c80 0000000000000034 T clock_gettime
0000000000736cc0 000000000000021c T _concatenate_path
0000000000736ee0 0000000000000094 T _fstat_r
0000000000736f80 0000000000000014 T _getpid_r
0000000000736fa0 0000000000000020 T __getreent
0000000000736fc0 0000000000000024 T _gettimeofday_r
0000000000737000 0000000000000094 T __release_handle
00000000007370a0 00000000000000c8 T __alloc_handle
0000000000737180 0000000000000050 T __get_handle
00000000007371e0 0000000000000108 T _close_r
0000000000737300 0000000000000008 t null_write
0000000000737320 0000000000000018 T setDefaultDevice
0000000000737340 0000000000000114 T FindDevice
0000000000737460 0000000000000034 T RemoveDevice
00000000007374a0 00000000000000c8 T AddDevice
0000000000737580 0000000000000034 T GetDeviceOpTab
00000000007375c0 0000000000000008 T _isatty_r
00000000007375e0 0000000000000014 T _kill_r
0000000000737600 00000000000000a4 T _lseek_r
00000000007376c0 000000000000001c T pthread_mutexattr_init
00000000007376e0 000000000000001c T pthread_mutexattr_settype
0000000000737700 0000000000000080 T pthread_mutex_init
0000000000737780 0000000000000010 T pthread_mutex_destroy
00000000007377a0 000000000000006c T pthread_mutex_lock
0000000000737820 000000000000006c T pthread_mutex_unlock
00000000007378a0 0000000000000020 T pthread_condattr_init
00000000007378c0 0000000000000058 T pthread_cond_init
0000000000737920 0000000000000010 T pthread_cond_destroy
0000000000737940 0000000000000014 T pthread_cond_signal
0000000000737960 0000000000000014 T pthread_cond_broadcast
0000000000737980 0000000000000054 T pthread_cond_wait
00000000007379e0 0000000000000020 T pthread_attr_init
0000000000737a00 0000000000000020 T pthread_attr_setstacksize
0000000000737a20 000000000000001c T pthread_attr_setdetachstate
0000000000737a40 0000000000000084 T pthread_create
0000000000737ae0 0000000000000040 T pthread_join
0000000000737b20 0000000000000018 T pthread_self
0000000000737b40 00000000000000d8 T pthread_once
0000000000737c20 0000000000000024 T pthread_key_create
0000000000737c60 0000000000000018 T pthread_setspecific
0000000000737c80 0000000000000018 T pthread_getspecific
0000000000737ca0 0000000000000018 T pthread_key_delete
0000000000737cc0 0000000000000008 T pthread_setcanceltype
0000000000737ce0 0000000000000030 T sem_destroy
0000000000737d20 0000000000000058 T sem_init
0000000000737d80 0000000000000064 T sem_post
0000000000737e00 00000000000000b0 T sem_timedwait
0000000000737ec0 0000000000000078 T sem_trywait
0000000000737f40 0000000000000098 T sem_wait
0000000000737fe0 00000000000000e0 T _open_r
00000000007380c0 00000000000000ac T _read_r
0000000000738180 0000000000000078 W _sbrk_r
0000000000738200 0000000000000090 T _stat_r
00000000007382a0 0000000000000014 T timespec2nsec
00000000007382c0 00000000000000c8 T abstimespec2nsec
00000000007383a0 0000000000000014 T __libc_lock_acquire
00000000007383c0 0000000000000014 T __libc_lock_release
00000000007383e0 0000000000000014 T __libc_lock_acquire_recursive
0000000000738400 0000000000000014 T __libc_lock_release_recursive
0000000000738420 0000000000000018 T __libc_cond_signal
0000000000738440 0000000000000018 T __libc_cond_broadcast
0000000000738460 0000000000000018 T __libc_cond_wait
0000000000738480 0000000000000018 T __libc_cond_wait_recursive
00000000007384a0 00000000000000ac T _write_r
0000000000738560 00000000000003c4 t __trunctfdf2
0000000000738928 T _init
0000000000738960 T _fini
000000000080abf8 0000000000000036 r CSWTCH.143
000000000080b910 0000000000000400 R bend_coarse
000000000080bd10 0000000000000800 R bend_fine
000000000080c510 0000000000000200 R freq_table
000000000080c710 0000000000000400 R vol_table
000000000080cb40 00000000000000c8 r format_list
000000000080cc10 0000000000002804 r ResamplerFilterDifference
000000000080f420 0000000000002804 r ResamplerFilter
0000000000811c30 0000000000000200 r mix8
00000000008120a0 0000000000000044 r CSWTCH.10
00000000008120f0 0000000000000800 r SDL_default_keymap
0000000000812930 000000000000000c r CSWTCH.396
0000000000812930 000000000000000c r CSWTCH.398
0000000000812930 000000000000000c r CSWTCH.400
0000000000812930 000000000000000c r CSWTCH.402
0000000000812930 000000000000000c r CSWTCH.404
0000000000812930 000000000000000c r CSWTCH.406
0000000000812940 0000000000000014 r CSWTCH.91
0000000000812958 0000000000000028 r CSWTCH.89
0000000000812980 0000000000000014 r __func__.0
0000000000812998 0000000000000014 r __func__.1
00000000008129b0 0000000000000017 r __func__.2
00000000008129c8 0000000000000016 r __func__.3
00000000008129e0 0000000000000016 r __func__.4
00000000008129f8 0000000000000017 r __func__.5
0000000000812a10 0000000000000016 r __func__.6
0000000000812a28 0000000000000015 r __func__.7
0000000000812a60 00000000000000d8 r GLES2_Fragment_TextureExternalOES
0000000000812b40 0000000000000031 r GLES2_Fragment_TextureExternalOES_Prologue
0000000000812b80 000000000000030f r GLES2_Fragment_TextureNV21BT709
0000000000812e90 000000000000030f r GLES2_Fragment_TextureNV21BT601
00000000008131a0 00000000000002fd r GLES2_Fragment_TextureNV21JPEG
00000000008134a0 000000000000030f r GLES2_Fragment_TextureNV12BT709_RG
00000000008137b0 000000000000030f r GLES2_Fragment_TextureNV12BT709_RA
0000000000813ac0 000000000000030f r GLES2_Fragment_TextureNV12BT601_RG
0000000000813dd0 000000000000030f r GLES2_Fragment_TextureNV12BT601_RA
00000000008140e0 00000000000002fd r GLES2_Fragment_TextureNV12JPEG
00000000008143e0 000000000000033f r GLES2_Fragment_TextureYUVBT709
0000000000814720 000000000000033f r GLES2_Fragment_TextureYUVBT601
0000000000814a60 000000000000032d r GLES2_Fragment_TextureYUVJPEG
0000000000814d90 0000000000000107 r GLES2_Fragment_TextureBGR
0000000000814ea0 0000000000000141 r GLES2_Fragment_TextureRGB
0000000000814ff0 0000000000000127 r GLES2_Fragment_TextureARGB
0000000000815120 00000000000000cf r GLES2_Fragment_TextureABGR
00000000008151f0 000000000000004c r GLES2_Fragment_Solid
0000000000815240 0000000000000133 r GLES2_Vertex_Default
0000000000815380 000000000000004c r GLES2_Fragment_Include_Undef_Precision
00000000008153d0 0000000000000040 r GLES2_Fragment_Include_High_Texture_Precision
0000000000815410 0000000000000042 r GLES2_Fragment_Include_Medium_Texture_Precision
0000000000815460 0000000000000097 r GLES2_Fragment_Include_Best_Texture_Precision
00000000008154f8 000000000000000d r __func__.0
0000000000815508 0000000000000020 r CSWTCH.26
0000000000815528 0000000000000020 r CSWTCH.25
0000000000815548 0000000000000020 r CSWTCH.24
0000000000815568 0000000000000020 r CSWTCH.23
00000000008155e0 0000000000000078 r RGB2YUVFactorTables.0
0000000000815660 0000000000000200 r lut.0
0000000000815860 0000000000000024 r YUV2RGB
0000000000815888 0000000000000002 r sink_channels.0
0000000000815890 0000000000000018 r arConfig
00000000008158b0 00000000000000e0 r pad_mapping_right_joy
0000000000815990 00000000000000e0 r pad_mapping_left_joy
0000000000815a70 00000000000000e0 r pad_mapping_default
0000000000815b50 0000000000000800 r RGB565_BGRA8888_LUT
0000000000816350 0000000000000800 r RGB565_RGBA8888_LUT
0000000000816b50 0000000000000800 r RGB565_ABGR8888_LUT
0000000000817350 0000000000000800 r RGB565_ARGB8888_LUT
0000000000817b60 0000000000000014 r CSWTCH.52
0000000000817b78 0000000000000024 r gains.6636
0000000000817ba0 0000000000000020 R tf_select_table
0000000000817bc0 0000000000000004 r spread_icdf
0000000000817bc8 0000000000000003 r tapset_icdf
0000000000817bd0 000000000000000b r trim_icdf
0000000000817be0 0000000000000020 r correction.4177
0000000000817c00 00000000000000e7 r band_allocation
0000000000817ce8 0000000000000188 r cache_bits50
0000000000817e70 00000000000000a8 r cache_caps50
0000000000817f18 00000000000000d2 r cache_index50
0000000000817ff0 000000000000002c r eband5ms
0000000000818020 00000000000000f0 r fft_bitrev120
0000000000818110 00000000000001e0 r fft_bitrev240
00000000008182f0 00000000000003c0 r fft_bitrev480
00000000008186b0 0000000000000078 r fft_bitrev60
0000000000818728 0000000000000f00 r fft_twiddles48000_960
0000000000819628 000000000000002a r logN400
0000000000819658 0000000000001c20 r mdct_twiddles960
000000000081b278 00000000000001e0 r window120
000000000081b458 0000000000000010 r beta_coef
000000000081b468 0000000000000064 R eMeans
000000000081b4d0 0000000000000150 r e_prob_model
000000000081b620 0000000000000010 r pred_coef
000000000081b630 0000000000000003 r small_energy_icdf
000000000081b638 0000000000000018 r LOG2_FRAC_TABLE
000000000081b650 000000000000000c r SPREAD_FACTOR.6494
000000000081b660 0000000000000003 r silk_LBRR_flags_2_iCDF
000000000081b668 0000000000000007 r silk_LBRR_flags_3_iCDF
000000000081b670 0000000000000006 R silk_LTPScales_table_Q14
000000000081b678 0000000000000003 R silk_LTPscale_iCDF
000000000081b680 0000000000000007 R silk_NLSF_EXT_iCDF
000000000081b688 0000000000000005 R silk_NLSF_interpolation_factor_iCDF
000000000081b690 0000000000000008 R silk_Quantization_Offsets_Q10
000000000081b698 0000000000000002 R silk_lsb_iCDF
000000000081b6a0 0000000000000002 R silk_stereo_only_code_mid_iCDF
000000000081b6a8 0000000000000019 R silk_stereo_pred_joint_iCDF
000000000081b6c8 0000000000000020 R silk_stereo_pred_quant_Q13
000000000081b6e8 0000000000000004 R silk_type_offset_VAD_iCDF
000000000081b6f0 0000000000000002 R silk_type_offset_no_VAD_iCDF
000000000081b6f8 0000000000000003 R silk_uniform3_iCDF
000000000081b700 0000000000000004 R silk_uniform4_iCDF
000000000081b708 0000000000000005 R silk_uniform5_iCDF
000000000081b710 0000000000000006 R silk_uniform6_iCDF
000000000081b718 0000000000000008 R silk_uniform8_iCDF
000000000081b720 000000000000000f r delay_matrix_dec
000000000081b730 000000000000000f r delay_matrix_enc
000000000081b740 000000000000001c R silk_Resampler_1_2_COEFS
000000000081b760 0000000000000028 R silk_Resampler_1_3_COEFS
000000000081b788 0000000000000028 R silk_Resampler_1_4_COEFS
000000000081b7b0 0000000000000028 R silk_Resampler_1_6_COEFS
000000000081b7d8 0000000000000028 R silk_Resampler_2_3_COEFS
000000000081b800 000000000000003a R silk_Resampler_3_4_COEFS
000000000081b840 0000000000000060 R silk_resampler_frac_FIR_12
000000000081b8a0 0000000000000010 r bit_deinterleave_table.7015
000000000081b8b0 0000000000000010 r bit_interleave_table.7005
000000000081b8c0 0000000000000010 r exp2_table8.6846
000000000081b8d0 0000000000000078 r ordery_table
000000000081b948 00000000000013e0 r CELT_PVQ_U_DATA
000000000081cd28 0000000000000004 r HARM_ATT_Q15
000000000081cd30 0000000000000004 r PLC_RAND_ATTENUATE_UV_Q15
000000000081cd38 0000000000000004 r PLC_RAND_ATTENUATE_V_Q15
000000000081cd40 0000000000000029 R silk_delta_gain_iCDF
000000000081cd70 0000000000000018 R silk_gain_iCDF
000000000081cd88 0000000000000008 r silk_LTP_gain_iCDF_0
000000000081cd90 0000000000000010 r silk_LTP_gain_iCDF_1
000000000081cda0 0000000000000020 r silk_LTP_gain_iCDF_2
000000000081cdc0 0000000000000028 r silk_LTP_gain_vq_0
000000000081cde8 0000000000000050 r silk_LTP_gain_vq_1
000000000081ce38 00000000000000a0 r silk_LTP_gain_vq_2
000000000081ced8 0000000000000003 R silk_LTP_per_index_iCDF
000000000081cee0 0000000000000140 r silk_NLSF_CB1_NB_MB_Q8
000000000081d020 0000000000000280 r silk_NLSF_CB1_Wght_Q9
000000000081d2a0 0000000000000040 r silk_NLSF_CB1_iCDF_NB_MB
000000000081d2e0 0000000000000048 r silk_NLSF_CB2_BITS_NB_MB_Q5
000000000081d328 00000000000000a0 r silk_NLSF_CB2_SELECT_NB_MB
000000000081d3c8 0000000000000048 r silk_NLSF_CB2_iCDF_NB_MB
000000000081d410 0000000000000016 r silk_NLSF_DELTA_MIN_NB_MB_Q15
000000000081d428 0000000000000012 r silk_NLSF_PRED_NB_MB_Q8
000000000081d440 0000000000000200 r silk_NLSF_CB1_WB_Q8
000000000081d640 0000000000000400 r silk_NLSF_CB1_WB_Wght_Q9
000000000081da40 0000000000000040 r silk_NLSF_CB1_iCDF_WB
000000000081da80 0000000000000048 r silk_NLSF_CB2_BITS_WB_Q5
000000000081dac8 0000000000000100 r silk_NLSF_CB2_SELECT_WB
000000000081dbc8 0000000000000048 r silk_NLSF_CB2_iCDF_WB
000000000081dc10 0000000000000022 r silk_NLSF_DELTA_MIN_WB_Q15
000000000081dc38 000000000000001e r silk_NLSF_PRED_WB_Q8
000000000081dc58 0000000000000003 R silk_pitch_contour_10_ms_NB_iCDF
000000000081dc60 000000000000000c R silk_pitch_contour_10_ms_iCDF
000000000081dc70 000000000000000b R silk_pitch_contour_NB_iCDF
000000000081dc80 0000000000000022 R silk_pitch_contour_iCDF
000000000081dca8 0000000000000015 R silk_pitch_delta_iCDF
000000000081dcc0 0000000000000020 R silk_pitch_lag_iCDF
000000000081dce0 00000000000000b4 R silk_pulses_per_block_iCDF
000000000081dd98 0000000000000012 R silk_rate_levels_iCDF
000000000081ddb0 0000000000000098 R silk_shell_code_table0
000000000081de48 0000000000000098 R silk_shell_code_table1
000000000081dee0 0000000000000098 R silk_shell_code_table2
000000000081df78 0000000000000098 R silk_shell_code_table3
000000000081e010 0000000000000011 R silk_shell_code_table_offsets
000000000081e028 000000000000002a R silk_sign_iCDF
000000000081e058 000000000000000a r ordering10.23678
000000000081e068 0000000000000010 r ordering16.23677
000000000081e078 000000000000002c R silk_CB_lags_stage2
000000000081e0a8 0000000000000006 R silk_CB_lags_stage2_10_ms
000000000081e0b0 0000000000000088 R silk_CB_lags_stage3
000000000081e138 0000000000000018 R silk_CB_lags_stage3_10_ms
000000000081e150 0000000000000102 R silk_LSFCosTab_FIX_Q12
000000000081e258 0000000000000024 r sRGB_XYZ.0
000000000081e280 00000000000000e0 r png_sRGB_checks
000000000081e360 0000000000000020 r sRGB_xy
000000000081e380 000000000000000a r valid_parameters.0
000000000081e390 0000000000000011 r digits.1
000000000081e3b0 0000000000000010 r png_digit
000000000081e3c0 0000000000000007 r png_pass_ystart.4
000000000081e3c8 0000000000000007 r png_pass_yinc.5
000000000081e3d0 0000000000000007 r png_pass_start.0
000000000081e3d0 0000000000000007 r png_pass_start.6
000000000081e3d8 0000000000000007 r png_pass_inc.1
000000000081e3d8 0000000000000007 r png_pass_inc.7
000000000081e3e0 000000000000001c r png_pass_inc.8
000000000081e400 0000000000000090 r row_mask.9
000000000081e490 0000000000000048 r display_mask.10
000000000081e4e0 0000000000000100 r fourbppswaptable
000000000081e5e0 0000000000000100 r twobppswaptable
000000000081e6e0 0000000000000100 r onebppswaptable
000000000081e7e0 0000000000000007 r png_pass_ystart.2
000000000081e7e8 0000000000000007 r png_pass_yinc.3
000000000081e7f0 0000000000000007 r png_pass_start.1
000000000081e7f0 0000000000000007 r png_pass_start.4
000000000081e7f8 0000000000000007 r png_pass_inc.0
000000000081e7f8 0000000000000007 r png_pass_inc.5
000000000081e800 0000000000000400 r crc_table
000000000081ec00 0000000000000080 r x2n_table
000000000081ec80 0000000000002000 r crc_braid_table
0000000000820cc0 0000000000000800 r lenfix.1
00000000008214c0 0000000000000080 r distfix.0
0000000000821540 0000000000000026 r order.2
0000000000821570 0000000000000040 r dext.0
00000000008215b0 0000000000000040 r dbase.1
00000000008215f0 000000000000003e r lext.2
0000000000821630 000000000000003e r lbase.3
0000000000821670 000000000000002f R inflate_copyright
00000000008216a0 0000000000000100 R _length_code
00000000008217a0 0000000000000074 r extra_lbits
0000000000821820 0000000000000074 r base_length
00000000008218a0 0000000000000200 R _dist_code
0000000000821aa0 0000000000000078 r extra_dbits
0000000000821b20 0000000000000078 r base_dist
0000000000821ba0 0000000000000013 r bl_order
0000000000821bb8 0000000000000078 r static_dtree
0000000000821c30 0000000000000480 r static_ltree
00000000008220b0 000000000000004c r extra_blbits
0000000000822100 0000000000000011 r bits_ac_chrominance.1
0000000000822120 0000000000000011 r bits_ac_luminance.5
0000000000822140 0000000000000011 r bits_dc_chrominance.3
0000000000822160 0000000000000011 r bits_dc_luminance.7
0000000000822180 0000000000000100 r std_chrominance_quant_tbl
0000000000822280 0000000000000100 r std_luminance_quant_tbl
0000000000822380 00000000000000a2 r val_ac_chrominance.0
0000000000822430 00000000000000a2 r val_ac_luminance.4
00000000008224d8 000000000000000c r val_dc_chrominance.2
00000000008224e8 000000000000000c r val_dc_luminance.6
0000000000822580 0000000000000044 r rgb_pixelsize
00000000008225d0 0000000000000020 r dither_matrix
00000000008225f0 0000000000000100 r base_dither_matrix
00000000008226f0 0000000000000044 r rgb_blue
0000000000822740 0000000000000044 r rgb_green
0000000000822790 0000000000000044 r rgb_red
00000000008227d8 000000000000000c r c_scales
00000000008227f0 0000000000000044 r rgb_blue
0000000000822840 0000000000000044 r rgb_green
0000000000822890 0000000000000044 r rgb_red
00000000008228d8 0000000000000140 R jpeg_natural_order
0000000000822a20 0000000000000010 r extra_pool_slop
0000000000822a30 0000000000000010 r first_pool_slop
0000000000822a40 0000000000000044 r rgb_blue
0000000000822a90 0000000000000044 r rgb_green
0000000000822ae0 0000000000000044 r rgb_pixelsize
0000000000822b30 0000000000000044 r rgb_red
0000000000822b80 0000000000000040 r aanscalefactor.0
0000000000822bc0 0000000000000080 r aanscales.1
0000000000822c40 0000000000000020 r dither_matrix
0000000000822c60 0000000000000044 r rgb_blue
0000000000822cb0 0000000000000044 r rgb_green
0000000000822d00 0000000000000044 r rgb_pixelsize
0000000000822d50 0000000000000044 r rgb_red
0000000000822da0 0000000000000040 r aanscalefactor.0
0000000000822de0 0000000000000011 r bits_ac_chrominance.1
0000000000822e00 0000000000000011 r bits_ac_luminance.5
0000000000822e20 0000000000000011 r bits_dc_chrominance.3
0000000000822e40 0000000000000011 r bits_dc_luminance.7
0000000000822e60 00000000000000a2 r val_ac_chrominance.0
0000000000822f10 00000000000000a2 r val_ac_luminance.4
0000000000822fb8 000000000000000c r val_dc_chrominance.2
0000000000822fc8 000000000000000c r val_dc_luminance.6
0000000000822fd8 0000000000000390 R jpeg_aritab
0000000000823370 0000000000000100 r jsimd_h2_downsample_consts
0000000000823470 0000000000000008 r jsimd_ycc_rgb_convert_neon_consts
0000000000823480 0000000000000008 r jsimd_fdct_ifast_neon_consts
0000000000823490 0000000000000008 r jsimd_idct_2x2_neon_consts
00000000008234a0 0000000000000018 r jsimd_idct_4x4_neon_consts
00000000008234c0 0000000000000008 r jsimd_idct_ifast_neon_consts
00000000008234d0 r Ljsimd_idct_islow_neon_consts
00000000008234f0 r Ljsimd_ycc_rgb_neon_consts
0000000000823510 r Ljsimd_rgb_ycc_neon_consts
0000000000823530 r Ljsimd_fdct_islow_neon_consts
0000000000823550 r Ljsimd_huff_encode_one_block_neon_consts
0000000000823620 00000000000000b0 r ft_trig_arctan_table
0000000000823800 0000000000000020 r fvaraxis_fields.0
0000000000823820 0000000000000024 r fvar_fields.1
0000000000823850 0000000000000024 r gvar_fields.2
0000000000823878 00000000000005d0 r sfnt_id.3
0000000000823e50 0000000000000190 r trick_names.4
0000000000823fe0 0000000000000100 r opcode_length
00000000008240e0 0000000000000100 r Pop_Push_Count
00000000008241e0 0000000000000060 R tt_default_graphics_state
0000000000824240 0000000000000004 r tt_service_truetype_engine
00000000008242a0 0000000000000014 r cff_header_fields.0
00000000008242c0 0000000000000200 r cff_expert_encoding
00000000008244c0 0000000000000200 r cff_standard_encoding
00000000008246c0 00000000000000ae r cff_expertsubset_charset
0000000000824770 000000000000014c r cff_expert_charset
00000000008248c0 00000000000001ca r cff_isoadobe_charset
0000000000824a90 0000000000000050 r power_ten_limits
0000000000824ae0 0000000000000050 r power_tens
0000000000824b30 0000000000000074 r pfr_header_fields
0000000000824bb0 0000000000000098 r winfnt_header_fields
0000000000824c50 0000000000000018 r winpe_rsrc_data_entry_fields
0000000000824c70 0000000000000010 r winpe_rsrc_dir_entry_fields
0000000000824c80 0000000000000020 r winpe_rsrc_dir_fields
0000000000824ca0 0000000000000020 r winpe32_section_fields
0000000000824cc0 0000000000000034 r winpe32_header_fields
0000000000824d00 0000000000000018 r winne_header_fields
0000000000824d20 0000000000000014 r winmz_header_fields
0000000000824d40 0000000000000034 r pcf_accel_msb_header
0000000000824d80 0000000000000034 r pcf_accel_header
0000000000824dc0 000000000000001c r pcf_enc_msb_header
0000000000824de0 000000000000001c r pcf_enc_header
0000000000824e00 0000000000000014 r pcf_property_msb_header
0000000000824e20 0000000000000014 r pcf_property_header
0000000000824e40 000000000000001c r pcf_compressed_metric_header
0000000000824e60 0000000000000020 r pcf_metric_msb_header
0000000000824e80 0000000000000020 r pcf_metric_header
0000000000824ea0 0000000000000018 r pcf_table_header
0000000000824ec0 0000000000000010 r pcf_toc_header
0000000000824ed0 0000000000000008 r nibble_mask
0000000000824ee0 0000000000000020 r hdigits
0000000000824f00 0000000000000020 r ddigits
0000000000824f20 0000000000000080 r a2i
0000000000824fa0 0000000000000001 r empty
0000000000824fd0 000000000000003c r woff_header_fields.0
0000000000825010 0000000000000010 r ttc_header_fields.1
0000000000825020 0000000000000084 r tt_encodings.2
00000000008250b0 000000000000004c r metrics_header_fields.3
0000000000825100 000000000000003c r maxp_fields_extra.4
0000000000825140 0000000000000010 r maxp_fields.5
0000000000825150 0000000000000010 r os2_fields_extra5.6
0000000000825160 000000000000001c r os2_fields_extra2.7
0000000000825180 0000000000000010 r os2_fields_extra1.8
0000000000825190 00000000000000b0 r os2_fields.9
0000000000825240 000000000000002c r post_fields.10
0000000000825270 000000000000001c r name_record_fields.11
0000000000825290 000000000000000c r langTag_record_fields.12
00000000008252a0 0000000000000014 r name_table_fields.13
00000000008252c0 0000000000000044 r pclt_fields.14
0000000000825310 0000000000000054 r header_fields.15
0000000000825370 0000000000000018 r table_dir_entry_fields.16
0000000000825390 0000000000000018 r offset_table_fields.17
00000000008253b0 0000000000000010 r hexdigits
00000000008253c0 0000000000000010 r sfnt_ps_map
00000000008253d0 0000000000000018 R af_hani_nonbase_uniranges
00000000008253f0 0000000000000110 R af_hani_uniranges
0000000000825500 0000000000000050 R af_tibt_nonbase_uniranges
0000000000825550 0000000000000010 R af_tibt_uniranges
0000000000825560 0000000000000028 R af_sylo_nonbase_uniranges
0000000000825590 0000000000000010 R af_sylo_uniranges
00000000008255a0 0000000000000038 R af_orya_nonbase_uniranges
00000000008255e0 0000000000000010 R af_orya_uniranges
00000000008255f0 0000000000000020 R af_limb_nonbase_uniranges
0000000000825610 0000000000000010 R af_limb_uniranges
0000000000825620 0000000000000008 R af_vaii_nonbase_uniranges
0000000000825630 0000000000000010 R af_vaii_uniranges
0000000000825640 0000000000000008 R af_tfng_nonbase_uniranges
0000000000825650 0000000000000010 R af_tfng_uniranges
0000000000825660 0000000000000020 R af_thai_nonbase_uniranges
0000000000825680 0000000000000010 R af_thai_uniranges
0000000000825690 0000000000000030 R af_telu_nonbase_uniranges
00000000008256c0 0000000000000010 R af_telu_uniranges
00000000008256d0 0000000000000030 R af_tavt_nonbase_uniranges
0000000000825700 0000000000000010 R af_tavt_uniranges
0000000000825710 0000000000000020 R af_taml_nonbase_uniranges
0000000000825730 0000000000000010 R af_taml_uniranges
0000000000825740 0000000000000018 R af_sund_nonbase_uniranges
0000000000825760 0000000000000018 R af_sund_uniranges
0000000000825780 0000000000000018 R af_sinh_nonbase_uniranges
00000000008257a0 0000000000000010 R af_sinh_uniranges
00000000008257b0 0000000000000008 R af_shaw_nonbase_uniranges
00000000008257c0 0000000000000010 R af_shaw_uniranges
00000000008257d0 0000000000000018 R af_saur_nonbase_uniranges
00000000008257f0 0000000000000010 R af_saur_uniranges
0000000000825800 0000000000000008 R af_rohg_nonbase_uniranges
0000000000825810 0000000000000010 R af_rohg_uniranges
0000000000825820 0000000000000008 R af_osma_nonbase_uniranges
0000000000825830 0000000000000010 R af_osma_uniranges
0000000000825840 0000000000000008 R af_osge_nonbase_uniranges
0000000000825850 0000000000000010 R af_osge_uniranges
0000000000825860 0000000000000008 R af_orkh_nonbase_uniranges
0000000000825870 0000000000000010 R af_orkh_uniranges
0000000000825880 0000000000000008 R af_olck_nonbase_uniranges
0000000000825890 0000000000000010 R af_olck_uniranges
00000000008258a0 0000000000000008 R af_none_nonbase_uniranges
00000000008258a8 0000000000000008 R af_none_uniranges
00000000008258b0 0000000000000018 R af_nkoo_nonbase_uniranges
00000000008258d0 0000000000000010 R af_nkoo_uniranges
00000000008258e0 0000000000000068 R af_mymr_nonbase_uniranges
0000000000825950 0000000000000020 R af_mymr_uniranges
0000000000825970 0000000000000018 R af_mong_nonbase_uniranges
0000000000825990 0000000000000018 R af_mong_uniranges
00000000008259a8 0000000000000008 R af_medf_nonbase_uniranges
00000000008259b0 0000000000000010 R af_medf_uniranges
00000000008259c0 0000000000000028 R af_mlym_nonbase_uniranges
00000000008259f0 0000000000000010 R af_mlym_uniranges
0000000000825a00 0000000000000008 R af_lisu_nonbase_uniranges
0000000000825a10 0000000000000010 R af_lisu_uniranges
0000000000825a20 0000000000000008 R af_latp_nonbase_uniranges
0000000000825a30 0000000000000070 R af_latp_uniranges
0000000000825aa0 0000000000000008 R af_latb_nonbase_uniranges
0000000000825ab0 0000000000000020 R af_latb_uniranges
0000000000825ad0 0000000000000088 R af_latn_nonbase_uniranges
0000000000825b60 0000000000000108 R af_latn_uniranges
0000000000825c70 0000000000000020 R af_lao_nonbase_uniranges
0000000000825c90 0000000000000010 R af_lao_uniranges
0000000000825ca0 0000000000000008 R af_khms_nonbase_uniranges
0000000000825cb0 0000000000000010 R af_khms_uniranges
0000000000825cc0 0000000000000028 R af_khmr_nonbase_uniranges
0000000000825cf0 0000000000000010 R af_khmr_uniranges
0000000000825d00 0000000000000038 R af_knda_nonbase_uniranges
0000000000825d40 0000000000000010 R af_knda_uniranges
0000000000825d50 0000000000000010 R af_kali_nonbase_uniranges
0000000000825d60 0000000000000010 R af_kali_uniranges
0000000000825d70 0000000000000030 R af_hebr_nonbase_uniranges
0000000000825da0 0000000000000018 R af_hebr_uniranges
0000000000825dc0 0000000000000030 R af_guru_nonbase_uniranges
0000000000825df0 0000000000000010 R af_guru_uniranges
0000000000825e00 0000000000000038 R af_gujr_nonbase_uniranges
0000000000825e40 0000000000000010 R af_gujr_uniranges
0000000000825e50 0000000000000040 R af_grek_nonbase_uniranges
0000000000825e90 0000000000000018 R af_grek_uniranges
0000000000825ea8 0000000000000008 R af_goth_nonbase_uniranges
0000000000825eb0 0000000000000010 R af_goth_uniranges
0000000000825ec0 0000000000000010 R af_glag_nonbase_uniranges
0000000000825ed0 0000000000000018 R af_glag_uniranges
0000000000825ee8 0000000000000008 R af_geok_nonbase_uniranges
0000000000825ef0 0000000000000018 R af_geok_uniranges
0000000000825f08 0000000000000008 R af_geor_nonbase_uniranges
0000000000825f10 0000000000000018 R af_geor_uniranges
0000000000825f30 0000000000000010 R af_ethi_nonbase_uniranges
0000000000825f40 0000000000000028 R af_ethi_uniranges
0000000000825f68 0000000000000008 R af_dsrt_nonbase_uniranges
0000000000825f70 0000000000000010 R af_dsrt_uniranges
0000000000825f80 0000000000000048 R af_deva_nonbase_uniranges
0000000000825fd0 0000000000000038 R af_deva_uniranges
0000000000826010 0000000000000028 R af_cyrl_nonbase_uniranges
0000000000826040 0000000000000030 R af_cyrl_uniranges
0000000000826070 0000000000000008 R af_cprt_nonbase_uniranges
0000000000826080 0000000000000010 R af_cprt_uniranges
0000000000826090 0000000000000010 R af_copt_nonbase_uniranges
00000000008260a0 0000000000000010 R af_copt_uniranges
00000000008260b0 0000000000000008 R af_cher_nonbase_uniranges
00000000008260c0 0000000000000018 R af_cher_uniranges
00000000008260d8 0000000000000008 R af_cari_nonbase_uniranges
00000000008260e0 0000000000000010 R af_cari_uniranges
00000000008260f0 0000000000000008 R af_cans_nonbase_uniranges
0000000000826100 0000000000000018 R af_cans_uniranges
0000000000826120 0000000000000020 R af_cakm_nonbase_uniranges
0000000000826140 0000000000000010 R af_cakm_uniranges
0000000000826150 0000000000000010 R af_buhd_nonbase_uniranges
0000000000826160 0000000000000010 R af_buhd_uniranges
0000000000826170 0000000000000038 R af_beng_nonbase_uniranges
00000000008261b0 0000000000000010 R af_beng_uniranges
00000000008261c0 0000000000000010 R af_bamu_nonbase_uniranges
00000000008261d0 0000000000000010 R af_bamu_uniranges
00000000008261e0 0000000000000010 R af_avst_nonbase_uniranges
00000000008261f0 0000000000000010 R af_avst_uniranges
0000000000826200 0000000000000010 R af_armn_nonbase_uniranges
0000000000826210 0000000000000018 R af_armn_uniranges
0000000000826230 00000000000000a0 R af_arab_nonbase_uniranges
00000000008262d0 0000000000000038 R af_arab_uniranges
0000000000826310 0000000000000010 R af_adlm_nonbase_uniranges
0000000000826320 0000000000000010 R af_adlm_uniranges
0000000000826330 0000000000000014 R af_hani_dflt_style_class
0000000000826348 0000000000000014 R af_tibt_dflt_style_class
0000000000826360 0000000000000014 R af_sylo_dflt_style_class
0000000000826378 0000000000000014 R af_orya_dflt_style_class
0000000000826390 0000000000000014 R af_limb_dflt_style_class
00000000008263a8 0000000000000014 R af_vaii_dflt_style_class
00000000008263c0 0000000000000014 R af_thai_dflt_style_class
00000000008263d8 0000000000000014 R af_tfng_dflt_style_class
00000000008263f0 0000000000000014 R af_telu_dflt_style_class
0000000000826408 0000000000000014 R af_tavt_dflt_style_class
0000000000826420 0000000000000014 R af_taml_dflt_style_class
0000000000826438 0000000000000014 R af_sund_dflt_style_class
0000000000826450 0000000000000014 R af_sinh_dflt_style_class
0000000000826468 0000000000000014 R af_shaw_dflt_style_class
0000000000826480 0000000000000014 R af_saur_dflt_style_class
0000000000826498 0000000000000014 R af_rohg_dflt_style_class
00000000008264b0 0000000000000014 R af_osma_dflt_style_class
00000000008264c8 0000000000000014 R af_osge_dflt_style_class
00000000008264e0 0000000000000014 R af_orkh_dflt_style_class
00000000008264f8 0000000000000014 R af_olck_dflt_style_class
0000000000826510 0000000000000014 R af_none_dflt_style_class
0000000000826528 0000000000000014 R af_nkoo_dflt_style_class
0000000000826540 0000000000000014 R af_mymr_dflt_style_class
0000000000826558 0000000000000014 R af_mong_dflt_style_class
0000000000826570 0000000000000014 R af_medf_dflt_style_class
0000000000826588 0000000000000014 R af_mlym_dflt_style_class
00000000008265a0 0000000000000014 R af_lisu_dflt_style_class
00000000008265b8 0000000000000014 R af_latp_dflt_style_class
00000000008265d0 0000000000000014 R af_latb_dflt_style_class
00000000008265e8 0000000000000014 R af_latn_dflt_style_class
0000000000826600 0000000000000014 R af_latn_titl_style_class
0000000000826618 0000000000000014 R af_latn_sups_style_class
0000000000826630 0000000000000014 R af_latn_subs_style_class
0000000000826648 0000000000000014 R af_latn_smcp_style_class
0000000000826660 0000000000000014 R af_latn_sinf_style_class
0000000000826678 0000000000000014 R af_latn_pcap_style_class
0000000000826690 0000000000000014 R af_latn_ordn_style_class
00000000008266a8 0000000000000014 R af_latn_c2sc_style_class
00000000008266c0 0000000000000014 R af_latn_c2cp_style_class
00000000008266d8 0000000000000014 R af_lao_dflt_style_class
00000000008266f0 0000000000000014 R af_knda_dflt_style_class
0000000000826708 0000000000000014 R af_khms_dflt_style_class
0000000000826720 0000000000000014 R af_khmr_dflt_style_class
0000000000826738 0000000000000014 R af_kali_dflt_style_class
0000000000826750 0000000000000014 R af_hebr_dflt_style_class
0000000000826768 0000000000000014 R af_guru_dflt_style_class
0000000000826780 0000000000000014 R af_gujr_dflt_style_class
0000000000826798 0000000000000014 R af_grek_dflt_style_class
00000000008267b0 0000000000000014 R af_grek_titl_style_class
00000000008267c8 0000000000000014 R af_grek_sups_style_class
00000000008267e0 0000000000000014 R af_grek_subs_style_class
00000000008267f8 0000000000000014 R af_grek_smcp_style_class
0000000000826810 0000000000000014 R af_grek_sinf_style_class
0000000000826828 0000000000000014 R af_grek_pcap_style_class
0000000000826840 0000000000000014 R af_grek_ordn_style_class
0000000000826858 0000000000000014 R af_grek_c2sc_style_class
0000000000826870 0000000000000014 R af_grek_c2cp_style_class
0000000000826888 0000000000000014 R af_goth_dflt_style_class
00000000008268a0 0000000000000014 R af_glag_dflt_style_class
00000000008268b8 0000000000000014 R af_geok_dflt_style_class
00000000008268d0 0000000000000014 R af_geor_dflt_style_class
00000000008268e8 0000000000000014 R af_ethi_dflt_style_class
0000000000826900 0000000000000014 R af_dsrt_dflt_style_class
0000000000826918 0000000000000014 R af_deva_dflt_style_class
0000000000826930 0000000000000014 R af_cyrl_dflt_style_class
0000000000826948 0000000000000014 R af_cyrl_titl_style_class
0000000000826960 0000000000000014 R af_cyrl_sups_style_class
0000000000826978 0000000000000014 R af_cyrl_subs_style_class
0000000000826990 0000000000000014 R af_cyrl_smcp_style_class
00000000008269a8 0000000000000014 R af_cyrl_sinf_style_class
00000000008269c0 0000000000000014 R af_cyrl_pcap_style_class
00000000008269d8 0000000000000014 R af_cyrl_ordn_style_class
00000000008269f0 0000000000000014 R af_cyrl_c2sc_style_class
0000000000826a08 0000000000000014 R af_cyrl_c2cp_style_class
0000000000826a20 0000000000000014 R af_cprt_dflt_style_class
0000000000826a38 0000000000000014 R af_copt_dflt_style_class
0000000000826a50 0000000000000014 R af_cher_dflt_style_class
0000000000826a68 0000000000000014 R af_cari_dflt_style_class
0000000000826a80 0000000000000014 R af_cans_dflt_style_class
0000000000826a98 0000000000000014 R af_cakm_dflt_style_class
0000000000826ab0 0000000000000014 R af_buhd_dflt_style_class
0000000000826ac8 0000000000000014 R af_beng_dflt_style_class
0000000000826ae0 0000000000000014 R af_bamu_dflt_style_class
0000000000826af8 0000000000000014 R af_avst_dflt_style_class
0000000000826b10 0000000000000014 R af_armn_dflt_style_class
0000000000826b28 0000000000000014 R af_arab_dflt_style_class
0000000000826b40 0000000000000014 R af_adlm_dflt_style_class
0000000000826b60 0000000000000848 R af_blue_stringsets
00000000008273b0 000000000000159b R af_blue_strings
0000000000828a70 000000000000000c r readFromStack.0
0000000000828a80 000000000000000c r readFromStack.1
0000000000828a90 000000000000000c r readFromStack.2
0000000000828aa0 000000000000000c r readFromStack.3
0000000000828ab0 0000000000000080 r ft_char_table
0000000000828b30 0000000000000028 r ft_extra_glyph_name_offsets
0000000000828b60 0000000000000055 r ft_extra_glyph_names
0000000000828bc0 0000000000000028 r ft_extra_glyph_unicodes
0000000000828bf0 000000000000dabd R ft_adobe_glyph_list
00000000008366b0 0000000000000200 R t1_expert_encoding
00000000008368b0 0000000000000200 R t1_standard_encoding
0000000000836ab0 000000000000030e R ft_sid_names
0000000000836dc0 0000000000000204 R ft_mac_names
0000000000836fd0 0000000000000e70 R ft_standard_glyph_names
0000000000837e40 0000000000000018 r __func__.0
0000000000837e58 0000000000000015 r __func__.1
0000000000837e70 0000000000000013 r __func__.10
0000000000837e88 0000000000000012 r __func__.11
0000000000837ea0 000000000000001b r __func__.12
0000000000837ec0 0000000000000019 r __func__.13
0000000000837ee0 000000000000001e r __func__.14
0000000000837f00 0000000000000016 r __func__.15
0000000000837f18 000000000000001a r __func__.16
0000000000837f38 0000000000000018 r __func__.17
0000000000837f50 0000000000000019 r __func__.18
0000000000837f70 0000000000000014 r __func__.19
0000000000837f88 0000000000000016 r __func__.2
0000000000837fa0 0000000000000019 r __func__.20
0000000000837fc0 0000000000000012 r __func__.21
0000000000837fd8 0000000000000013 r __func__.22
0000000000837ff0 0000000000000011 r __func__.23
0000000000838008 0000000000000018 r __func__.24
0000000000838020 0000000000000018 r __func__.25
0000000000838038 0000000000000013 r __func__.26
0000000000838050 0000000000000019 r __func__.27
0000000000838070 0000000000000019 r __func__.28
0000000000838090 000000000000001b r __func__.29
00000000008380b0 0000000000000012 r __func__.3
00000000008380c8 0000000000000018 r __func__.30
00000000008380e0 000000000000001c r __func__.31
0000000000838100 0000000000000016 r __func__.32
0000000000838118 0000000000000011 r __func__.33
0000000000838130 0000000000000018 r __func__.34
0000000000838148 000000000000001c r __func__.35
0000000000838168 0000000000000020 r __func__.36
0000000000838188 000000000000001c r __func__.37
00000000008381a8 000000000000001a r __func__.38
00000000008381c8 000000000000000f r __func__.39
00000000008381d8 0000000000000022 r __func__.4
0000000000838200 0000000000000012 r __func__.41
0000000000838218 0000000000000018 r __func__.42
0000000000838230 0000000000000011 r __func__.43
0000000000838248 0000000000000013 r __func__.44
0000000000838260 000000000000000c r __func__.45
0000000000838270 0000000000000019 r __func__.46
0000000000838290 0000000000000012 r __func__.47
00000000008382a8 0000000000000010 r __func__.48
00000000008382b8 000000000000000f r __func__.49
00000000008382c8 0000000000000022 r __func__.5
00000000008382f0 000000000000000f r __func__.50
0000000000838300 000000000000000e r __func__.51
0000000000838310 0000000000000017 r __func__.52
0000000000838328 0000000000000010 r __func__.53
0000000000838338 0000000000000016 r __func__.54
0000000000838350 000000000000000f r __func__.55
0000000000838360 0000000000000011 r __func__.56
0000000000838378 0000000000000021 r __func__.57
00000000008383a0 000000000000000c r __func__.58
00000000008383b0 000000000000000b r __func__.59
00000000008383c0 0000000000000013 r __func__.6
00000000008383d8 0000000000000015 r __func__.60
00000000008383f0 0000000000000015 r __func__.61
0000000000838408 0000000000000015 r __func__.62
0000000000838420 000000000000000e r __func__.63
0000000000838430 000000000000000a r __func__.64
0000000000838440 0000000000000015 r __func__.65
0000000000838458 000000000000000e r __func__.66
0000000000838468 000000000000000f r __func__.67
0000000000838478 000000000000000f r __func__.68
0000000000838488 0000000000000010 r __func__.69
0000000000838498 0000000000000011 r __func__.7
00000000008384b0 0000000000000013 r __func__.70
00000000008384c8 0000000000000010 r __func__.71
00000000008384d8 0000000000000011 r __func__.72
00000000008384f0 0000000000000010 r __func__.73
0000000000838500 0000000000000012 r __func__.74
0000000000838518 0000000000000018 r __func__.75
0000000000838530 000000000000001f r __func__.76
0000000000838550 000000000000001e r __func__.77
0000000000838570 0000000000000017 r __func__.78
0000000000838588 000000000000001f r __func__.79
00000000008385a8 0000000000000022 r __func__.8
00000000008385d0 000000000000001e r __func__.80
00000000008385f0 0000000000000017 r __func__.81
0000000000838608 0000000000000010 r __func__.82
0000000000838618 000000000000000f r __func__.83
0000000000838628 0000000000000012 r __func__.84
0000000000838640 0000000000000011 r __func__.85
0000000000838658 0000000000000013 r __func__.86
0000000000838670 0000000000000010 r __func__.87
0000000000838680 000000000000000e r __func__.88
0000000000838690 000000000000000f r __func__.89
00000000008386a0 000000000000001a r __func__.9
00000000008386c0 000000000000000d r __func__.90
00000000008386d0 000000000000000e r __func__.91
00000000008386e0 000000000000001d r __func__.92
0000000000838700 0000000000000016 r __func__.93
0000000000838718 000000000000000e r __func__.94
0000000000838800 0000000000000250 r _eglValidationTable
0000000000838a50 000000000000000c r CSWTCH.4
0000000000838ac8 000000000000001c r depthfmts.0
0000000000838ae8 0000000000000018 r CSWTCH.53
0000000000838b00 000000000000001c r CSWTCH.55
0000000000838b20 00000000000002b2 r CSWTCH.63
0000000000838dd8 0000000000000010 r CSWTCH.86
0000000000838de8 0000000000000010 r CSWTCH.91
0000000000839108 0000000000000010 r CSWTCH.133
0000000000839118 000000000000001c r CSWTCH.91
0000000000839138 0000000000000030 r code_gk110.5
0000000000839168 0000000000000078 r code_gm107.6
00000000008391e0 0000000000000028 r code_nvc0.3
0000000000839208 0000000000000030 r code_nve4.4
0000000000839238 00000000000002f0 r nve4_su_format_aux_map
0000000000839528 0000000000000178 r nve4_su_format_map
00000000008396a0 0000000000000088 r cpbs.0
0000000000839728 0000000000000004 r deleted_key_value
0000000000839730 00000000000003e0 r hash_sizes
0000000000839b10 0000000000000017 r __func__.4
0000000000839e18 0000000000000010 r debug_severity_enums
0000000000839e28 0000000000000018 r debug_source_enums
0000000000839e40 0000000000000024 r debug_type_enums
000000000083a2f0 0000000000000028 r CSWTCH.3422
000000000083a318 0000000000000028 r CSWTCH.3875
000000000083a340 0000000000000017 r __func__.0
000000000083a358 0000000000000018 r __func__.1
000000000083a370 0000000000000015 r __func__.10
000000000083a388 0000000000000015 r __func__.11
000000000083a3a0 0000000000000016 r __func__.12
000000000083a3b8 0000000000000016 r __func__.13
000000000083a3d0 0000000000000016 r __func__.14
000000000083a3e8 0000000000000016 r __func__.15
000000000083a400 0000000000000016 r __func__.16
000000000083a418 0000000000000016 r __func__.17
000000000083a430 0000000000000016 r __func__.18
000000000083a448 0000000000000017 r __func__.19
000000000083a460 0000000000000017 r __func__.2
000000000083a478 0000000000000017 r __func__.20
000000000083a490 0000000000000017 r __func__.21
000000000083a4a8 0000000000000018 r __func__.3
000000000083a4c0 0000000000000017 r __func__.4
000000000083a4d8 0000000000000018 r __func__.5
000000000083a4f0 0000000000000016 r __func__.52
000000000083a508 0000000000000017 r __func__.53
000000000083a520 0000000000000016 r __func__.54
000000000083a538 0000000000000017 r __func__.55
000000000083a550 0000000000000016 r __func__.56
000000000083a568 0000000000000017 r __func__.57
000000000083a580 0000000000000016 r __func__.58
000000000083a598 0000000000000017 r __func__.59
000000000083a5b0 0000000000000017 r __func__.6
000000000083a5c8 0000000000000015 r __func__.60
000000000083a5e0 0000000000000015 r __func__.61
000000000083a5f8 0000000000000015 r __func__.62
000000000083a610 0000000000000015 r __func__.63
000000000083a628 0000000000000016 r __func__.64
000000000083a640 0000000000000016 r __func__.65
000000000083a658 0000000000000016 r __func__.66
000000000083a670 0000000000000016 r __func__.67
000000000083a688 000000000000001b r __func__.68
000000000083a6a8 000000000000001c r __func__.69
000000000083a6c8 0000000000000018 r __func__.7
000000000083a6e0 0000000000000015 r __func__.8
000000000083a6f8 0000000000000015 r __func__.9
000000000083a710 0000000000000029 r CSWTCH.23
000000000083ae90 000000000000001f r __func__.0
000000000083b078 0000000000000020 r CSWTCH.175
000000000083b098 0000000000000018 r CSWTCH.179
000000000083b0b0 0000000000000018 r CSWTCH.180
000000000083b0b0 0000000000000018 r CSWTCH.181
000000000083b0c8 0000000000000030 r CSWTCH.182
000000000083b0f8 000000000000001e r __func__.0
000000000083b118 00000000000000a9 r mappings
000000000083b1c8 0000000000000013 r __func__.0
000000000083b1e0 000000000000001b r __func__.0
000000000083b200 0000000000002598 r MESA_remap_table_functions
000000000083d798 000000000000f43d r _mesa_function_pool
000000000084cc00 0000000000000114 r CSWTCH.18
000000000084cd18 000000000000002c r CSWTCH.20
000000000084ce10 0000000000000030 r targets.0
000000000084d340 00000000000000c0 r anchor_indices
000000000084d400 0000000000000a68 r bptc_float_modes
000000000084de68 0000000000000100 r bptc_unorm_modes
000000000084df68 0000000000000100 r partition_table1
000000000084e068 0000000000000100 r partition_table2
000000000084e168 0000000000000004 r weights2.0
000000000084e170 0000000000000008 r weights3.1
000000000084e178 0000000000000010 r weights4.2
000000000084e188 0000000000000080 r etc1_modifier_tables
000000000084e208 0000000000000020 r etc2_distance_table
000000000084e228 0000000000000200 r etc2_modifier_tables
000000000084e428 0000000000000080 r etc2_modifier_tables_non_opaque
000000000084e4a8 0000000000000020 r lookup.0
000000000084e4a8 0000000000000020 r lookup.1
000000000084e4c8 0000000000000020 r _rgb_scale_5
000000000084e4e8 0000000000000040 r _rgb_scale_6
000000000084e560 0000000000000014 r CSWTCH.326
000000000084e578 0000000000000014 r CSWTCH.327
000000000084e590 0000000000000028 r targets.2
000000000084e5b8 0000000000000010 r zeroData.0
000000000084e5c8 0000000000000030 r CSWTCH.135
000000000084e5f8 0000000000000030 r CSWTCH.136
000000000084e628 0000000000000030 r CSWTCH.137
000000000084e658 0000000000000030 r CSWTCH.138
000000000084e688 0000000000000028 r default_combine_state
000000000084e6b0 0000000000000030 r targets.0
000000000084e6e0 00000000000001f8 r compatible_internal_formats
000000000084e8d8 00000000000000a0 r gles_astc_3d_compatible_internal_formats
000000000084e978 00000000000000e0 r gles_astc_compatible_internal_formats
000000000084ea58 0000000000000050 r gles_etc2_compatible_internal_formats
000000000084eaa8 0000000000000040 r s3tc_compatible_internal_formats
000000000084eae8 0000000000000050 r CSWTCH.125
000000000084eb58 000000000000000e r CSWTCH.253
000000000084eb68 000000000000000e r CSWTCH.254
000000000084eb78 000000000000000e r CSWTCH.255
000000000084eb88 0000000000000038 r CSWTCH.256
000000000084ebc0 0000000000000038 r CSWTCH.257
000000000084ebf8 0000000000000038 r CSWTCH.258
000000000084ec30 0000000000000038 r CSWTCH.259
000000000084ec68 0000000000000038 r CSWTCH.260
000000000084eca0 0000000000000038 r CSWTCH.261
000000000084ecd8 0000000000000038 r CSWTCH.262
000000000084ed10 0000000000000038 r CSWTCH.263
000000000084ed48 00000000000001a0 r vertex_formats
000000000084eee8 0000000000000040 r Identity
000000000084ef28 0000000000000015 r __func__.0
000000000084ef40 000000000000001b r __func__.1
000000000084ef60 0000000000000019 r __func__.10
000000000084ef80 0000000000000019 r __func__.11
000000000084efa0 0000000000000019 r __func__.12
000000000084efc0 000000000000001a r __func__.13
000000000084efe0 000000000000001a r __func__.14
000000000084f000 000000000000001a r __func__.15
000000000084f020 000000000000001a r __func__.16
000000000084f040 000000000000001a r __func__.17
000000000084f060 000000000000001a r __func__.18
000000000084f080 000000000000001a r __func__.19
000000000084f0a0 000000000000001c r __func__.2
000000000084f0c0 000000000000001b r __func__.20
000000000084f0e0 000000000000001b r __func__.21
000000000084f100 000000000000001b r __func__.22
000000000084f120 000000000000001b r __func__.3
000000000084f140 000000000000001c r __func__.4
000000000084f160 000000000000001b r __func__.5
000000000084f180 000000000000001a r __func__.53
000000000084f1a0 000000000000001b r __func__.54
000000000084f1c0 000000000000001a r __func__.55
000000000084f1e0 000000000000001b r __func__.56
000000000084f200 000000000000001a r __func__.57
000000000084f220 000000000000001b r __func__.58
000000000084f240 000000000000001a r __func__.59
000000000084f260 000000000000001c r __func__.6
000000000084f280 000000000000001b r __func__.60
000000000084f2a0 0000000000000019 r __func__.61
000000000084f2c0 0000000000000019 r __func__.62
000000000084f2e0 0000000000000019 r __func__.63
000000000084f300 0000000000000019 r __func__.64
000000000084f320 000000000000001a r __func__.65
000000000084f340 000000000000001a r __func__.66
000000000084f360 000000000000001a r __func__.67
000000000084f380 000000000000001a r __func__.68
000000000084f3a0 000000000000001f r __func__.69
000000000084f3c0 000000000000001b r __func__.7
000000000084f3e0 0000000000000020 r __func__.74
000000000084f400 000000000000001c r __func__.8
000000000084f420 0000000000000019 r __func__.9
000000000084f440 0000000000000020 r default_double.71
000000000084f460 0000000000000010 r default_float.73
000000000084f470 0000000000000010 r default_int.72
000000000084f480 0000000000000020 r default_uint64.70
000000000084f4a0 0000000000000040 R _vbo_attribute_alias_map
000000000084f4e0 000000000000001d r __func__.0
000000000084f500 000000000000001e r __func__.1
000000000084f520 000000000000001b r __func__.10
000000000084f540 000000000000001b r __func__.11
000000000084f560 000000000000001c r __func__.12
000000000084f580 000000000000001c r __func__.13
000000000084f5a0 000000000000001c r __func__.14
000000000084f5c0 000000000000001c r __func__.15
000000000084f5e0 000000000000001c r __func__.16
000000000084f600 000000000000001c r __func__.17
000000000084f620 000000000000001c r __func__.18
000000000084f640 000000000000001d r __func__.19
000000000084f660 000000000000001d r __func__.2
000000000084f680 000000000000001d r __func__.20
000000000084f6a0 000000000000001d r __func__.21
000000000084f6c0 000000000000001e r __func__.3
000000000084f6e0 000000000000001d r __func__.4
000000000084f700 000000000000001e r __func__.5
000000000084f720 000000000000001c r __func__.52
000000000084f740 000000000000001d r __func__.53
000000000084f760 000000000000001c r __func__.54
000000000084f780 000000000000001d r __func__.55
000000000084f7a0 000000000000001c r __func__.56
000000000084f7c0 000000000000001d r __func__.57
000000000084f7e0 000000000000001c r __func__.58
000000000084f800 000000000000001d r __func__.59
000000000084f820 000000000000001d r __func__.6
000000000084f840 000000000000001b r __func__.60
000000000084f860 000000000000001b r __func__.61
000000000084f880 000000000000001b r __func__.62
000000000084f8a0 000000000000001b r __func__.63
000000000084f8c0 000000000000001c r __func__.64
000000000084f8e0 000000000000001c r __func__.65
000000000084f900 000000000000001c r __func__.66
000000000084f920 000000000000001c r __func__.67
000000000084f940 0000000000000021 r __func__.68
000000000084f968 0000000000000022 r __func__.69
000000000084f990 000000000000001e r __func__.7
000000000084f9b0 000000000000001b r __func__.8
000000000084f9d0 000000000000001b r __func__.9
000000000084f9f0 0000000000000018 r __func__.0
000000000084fa08 0000000000000019 r __func__.1
000000000084fa28 0000000000000016 r __func__.10
000000000084fa40 0000000000000016 r __func__.11
000000000084fa58 0000000000000017 r __func__.12
000000000084fa70 0000000000000017 r __func__.13
000000000084fa88 0000000000000017 r __func__.14
000000000084faa0 0000000000000017 r __func__.15
000000000084fab8 0000000000000017 r __func__.16
000000000084fad0 0000000000000017 r __func__.17
000000000084fae8 0000000000000017 r __func__.18
000000000084fb00 0000000000000018 r __func__.19
000000000084fb18 0000000000000018 r __func__.2
000000000084fb30 0000000000000018 r __func__.20
000000000084fb48 0000000000000018 r __func__.21
000000000084fb60 0000000000000019 r __func__.3
000000000084fb80 0000000000000018 r __func__.4
000000000084fb98 0000000000000019 r __func__.5
000000000084fbb8 0000000000000017 r __func__.52
000000000084fbd0 0000000000000018 r __func__.53
000000000084fbe8 0000000000000017 r __func__.54
000000000084fc00 0000000000000018 r __func__.55
000000000084fc18 0000000000000017 r __func__.56
000000000084fc30 0000000000000018 r __func__.57
000000000084fc48 0000000000000017 r __func__.58
000000000084fc60 0000000000000018 r __func__.59
000000000084fc78 0000000000000018 r __func__.6
000000000084fc90 0000000000000016 r __func__.60
000000000084fca8 0000000000000016 r __func__.61
000000000084fcc0 0000000000000016 r __func__.62
000000000084fcd8 0000000000000016 r __func__.63
000000000084fcf0 0000000000000017 r __func__.64
000000000084fd08 0000000000000017 r __func__.65
000000000084fd20 0000000000000017 r __func__.66
000000000084fd38 0000000000000017 r __func__.67
000000000084fd50 000000000000001c r __func__.68
000000000084fd70 0000000000000019 r __func__.7
000000000084fd90 000000000000001d r __func__.73
000000000084fdb0 0000000000000016 r __func__.8
000000000084fdc8 0000000000000016 r __func__.9
000000000084fde0 0000000000000020 r default_double.70
000000000084fe00 0000000000000010 r default_float.72
000000000084fe10 0000000000000010 r default_int.71
000000000084fe20 0000000000000020 r default_uint64.69
00000000008504c0 000000000001671d r enum_string_table
0000000000866be0 0000000000007660 r enum_string_table_offsets
000000000086e340 0000000000000018 r CSWTCH.218
000000000086e668 00000000000002b2 r CSWTCH.47
000000000086f130 0000000000000010 r table_1010102_snorm
000000000086f140 0000000000000010 r table_1010102_uint
000000000086f150 0000000000000010 r table_1010102_unorm
000000000086f160 0000000000000020 r table_8888_unorm
000000000086f180 0000000000000010 r zeros.3
000000000086f190 000000000000001c r CSWTCH.3
000000000086f1b0 000000000000001c r CSWTCH.4
000000000086f1d0 000000000000001c r CSWTCH.5
000000000086f1f0 0000000000000018 r CSWTCH.43
000000000086f208 0000000000000320 r cap_mapping.10
000000000086f528 0000000000000010 r color_formats.4
000000000086f538 0000000000000014 r depth_formats.3
000000000086f550 000000000000008c r depthstencil_mapping.7
000000000086f5e0 00000000000004ec r rendertarget_mapping.9
000000000086fad0 000000000000008c r rt_blendable.8
000000000086fb60 000000000000008c r tbo_rgb32.0
000000000086fbf0 00000000000009d8 r texture_mapping.6
00000000008705c8 00000000000001a4 r vertex_mapping.5
0000000000870770 0000000000005d00 r format_map
0000000000876670 0000000000000004 r zero.0
0000000000876678 000000000000001c r CSWTCH.47
0000000000876698 000000000000000a r bias_state.1
00000000008766a8 000000000000000a r depth_range_state
00000000008766b8 000000000000000a r scale_state.2
00000000008766c8 000000000000000a r texcoord_state.0
00000000008766d8 000000000000001c r CSWTCH.24
00000000008766f8 0000000000000034 r known_desktop_gl_versions
0000000000876730 0000000000000034 r known_desktop_glsl_versions
0000000000876768 0000000000000028 r _mesa_glsl_process_extension(char const*, YYLTYPE*, char const*, YYLTYPE*, _mesa_glsl_parse_state*)::fmt
0000000000876980 0000000000000034 r CSWTCH.324
00000000008769b8 000000000000000e R ir_variable::tmp_name
00000000008769c8 000000000000001a r ir_swizzle::create(ir_rvalue*, char const*, unsigned int)::idx_map
00000000008769e8 000000000000001a r ir_swizzle::create(ir_rvalue*, char const*, unsigned int)::base_idx
0000000000876a08 0000000000000050 r CSWTCH.302
0000000000876a58 0000000000000050 r CSWTCH.30
0000000000876ad0 0000000000000050 r CSWTCH.228
0000000000876b20 000000000000000e r CSWTCH.231
0000000000876b30 000000000000000c r CSWTCH.255
0000000000876c90 0000000000000050 r CSWTCH.67
0000000000876ce0 0000000000000010 r CSWTCH.61
0000000000876e20 0000000000000018 r CSWTCH.162
0000000000876e38 000000000000000d r CSWTCH.41
00000000008770b8 000000000000018a r yytranslate
0000000000877248 0000000000000272 r yyr1
00000000008774c0 0000000000000139 r yyr2
0000000000877600 00000000000003b6 r yypact
00000000008779b8 00000000000013a6 r yycheck
0000000000878d60 00000000000000de r yypgoto
0000000000878e40 00000000000013a6 r yytable
000000000087a1e8 00000000000003b6 r yydefact
000000000087a5a0 00000000000000de r yydefgoto
000000000087a680 0000000000000020 r _mesa_glsl_parse(_mesa_glsl_parse_state*)::yyloc_default
000000000087a8e0 0000000000000100 r yy_ec
000000000087a9e0 0000000000000d28 r yy_chk
000000000087b708 00000000000008ce r yy_def
000000000087bfd8 0000000000000d28 r yy_nxt
000000000087cd00 00000000000008ce r yy_base
000000000087d5d0 000000000000004a r yy_meta
000000000087d620 00000000000008b0 r yy_accept
000000000087df50 000000000000017a r yy_accept
000000000087e0d0 00000000000001a0 r yy_base
000000000087e270 0000000000000498 r yy_chk
000000000087e708 00000000000001a0 r yy_def
000000000087e8a8 0000000000000100 r yy_ec
000000000087e9a8 0000000000000031 r yy_meta
000000000087e9e0 0000000000000498 r yy_nxt
000000000087ef80 00000000000005b8 r yycheck
000000000087f538 00000000000000b9 r yydefact
000000000087f5f8 0000000000000028 r yydefgoto
000000000087f620 0000000000000014 r yyloc_default.0
000000000087f638 0000000000000172 r yypact
000000000087f7b0 0000000000000028 r yypgoto
000000000087f7d8 0000000000000075 r yyr1
000000000087f850 0000000000000075 r yyr2
000000000087f8c8 00000000000000ea r yyrline
000000000087f9b8 00000000000000b9 r yystos
000000000087fa78 00000000000002dc r yytable
000000000087fd58 000000000000012b r yytranslate
000000000087fe88 0000000000000050 r CSWTCH.378
000000000087fed8 000000000000000e r CSWTCH.381
000000000087fee8 0000000000000020 r prime_deltas
000000000087ff58 00000000000003f0 r opcode_info
0000000000880348 0000000000000038 r CSWTCH.35
0000000000880380 0000000000000028 r CSWTCH.39
00000000008804e0 0000000000000048 r CSWTCH.21
0000000000880528 0000000000000024 r CSWTCH.4
00000000008805d0 0000000000000048 r shader_templ.3
0000000000880618 000000000000023b r text.4
0000000000880858 00000000000000b4 r text.5
0000000000880910 00000000000001e0 r vbuf_format_fallbacks
0000000000880af0 000000000000000f r slab_order.0
0000000000880b00 0000000000000060 r CSWTCH.24
0000000000880b60 0000000000000030 r CSWTCH.45
0000000000880b90 0000000000000060 r nouveau_decoder_msvld
0000000000880bf0 000000000000001c r CSWTCH.104
0000000000880c10 0000000000000002 r ms1.3
0000000000880c18 0000000000000004 r ms2.2
0000000000880c20 0000000000000008 r ms4.1
0000000000880c28 0000000000000010 r ms8.0
0000000000880c38 00000000000011a0 R nvc0_format_table
0000000000881dd8 0000000000000bc0 R nvc0_vertex_format
0000000000882998 0000000000000010 r CSWTCH.33
00000000008829a8 000000000000000c r CSWTCH.34
00000000008829d8 0000000000000028 r CSWTCH.44
0000000000882a00 0000000000000028 r CSWTCH.45
0000000000882a28 0000000000000028 r sm20_achieved_occupancy
0000000000882a50 0000000000000028 r sm20_branch_efficiency
0000000000882a78 0000000000000028 r sm20_inst_per_wrap
0000000000882aa0 0000000000000028 r sm20_inst_replay_overhead
0000000000882ac8 0000000000000028 r sm20_ipc
0000000000882af0 0000000000000028 r sm20_issue_slot_utilization
0000000000882b18 0000000000000028 r sm20_issued_ipc
0000000000882b40 0000000000000028 r sm21_inst_issued
0000000000882b68 0000000000000028 r sm21_inst_replay_overhead
0000000000882b90 0000000000000028 r sm21_issue_slot_utilization
0000000000882bb8 0000000000000028 r sm21_issue_slots
0000000000882be0 0000000000000028 r sm21_issued_ipc
0000000000882c08 0000000000000028 r sm30_inst_issued
0000000000882c30 0000000000000028 r sm30_inst_replay_overhead
0000000000882c58 0000000000000028 r sm30_issue_slot_utilization
0000000000882c80 0000000000000028 r sm30_issue_slots
0000000000882ca8 0000000000000028 r sm30_issued_ipc
0000000000882cd0 0000000000000028 r sm30_shared_replay_overhead
0000000000882cf8 0000000000000028 r sm30_warp_execution_efficiency
0000000000882d20 0000000000000028 r sm35_warp_nonpred_execution_efficiency
0000000000882d48 0000000000000160 r gm107_read_hw_sm_counters_code
0000000000882ea8 00000000000000b8 r nvc0_read_hw_sm_counters_code
0000000000882f60 0000000000000130 r nve4_read_hw_sm_counters_code
0000000000883090 0000000000000130 r nvf0_read_hw_sm_counters_code
00000000008831c0 0000000000000068 r sm20_active_cycles
0000000000883228 0000000000000068 r sm20_active_warps
0000000000883290 0000000000000068 r sm20_atom_count
00000000008832f8 0000000000000068 r sm20_branch
0000000000883360 0000000000000068 r sm20_divergent_branch
00000000008833c8 0000000000000068 r sm20_gld_request
0000000000883430 0000000000000068 r sm20_gred_count
0000000000883498 0000000000000068 r sm20_gst_request
0000000000883500 0000000000000068 r sm20_inst_executed
0000000000883568 0000000000000068 r sm20_inst_issued
00000000008835d0 0000000000000068 r sm20_local_ld
0000000000883638 0000000000000068 r sm20_local_st
00000000008836a0 0000000000000068 r sm20_prof_trigger_0
0000000000883708 0000000000000068 r sm20_prof_trigger_1
0000000000883770 0000000000000068 r sm20_prof_trigger_2
00000000008837d8 0000000000000068 r sm20_prof_trigger_3
0000000000883840 0000000000000068 r sm20_prof_trigger_4
00000000008838a8 0000000000000068 r sm20_prof_trigger_5
0000000000883910 0000000000000068 r sm20_prof_trigger_6
0000000000883978 0000000000000068 r sm20_prof_trigger_7
00000000008839e0 0000000000000068 r sm20_shared_ld
0000000000883a48 0000000000000068 r sm20_shared_st
0000000000883ab0 0000000000000068 r sm20_th_inst_executed_0
0000000000883b18 0000000000000068 r sm20_th_inst_executed_1
0000000000883b80 0000000000000068 r sm20_threads_launched
0000000000883be8 0000000000000068 r sm20_warps_launched
0000000000883c50 0000000000000068 r sm21_inst_executed
0000000000883cb8 0000000000000068 r sm21_inst_issued1_0
0000000000883d20 0000000000000068 r sm21_inst_issued1_1
0000000000883d88 0000000000000068 r sm21_inst_issued2_0
0000000000883df0 0000000000000068 r sm21_inst_issued2_1
0000000000883e58 0000000000000068 r sm21_th_inst_executed_0
0000000000883ec0 0000000000000068 r sm21_th_inst_executed_1
0000000000883f28 0000000000000068 r sm21_th_inst_executed_2
0000000000883f90 0000000000000068 r sm21_th_inst_executed_3
0000000000883ff8 0000000000000068 r sm30_active_cycles
0000000000884060 0000000000000068 r sm30_active_warps
00000000008840c8 0000000000000068 r sm30_atom_cas_count
0000000000884130 0000000000000068 r sm30_atom_count
0000000000884198 0000000000000068 r sm30_branch
0000000000884200 0000000000000068 r sm30_divergent_branch
0000000000884268 0000000000000068 r sm30_gld_mem_div_replay
00000000008842d0 0000000000000068 r sm30_gld_request
0000000000884338 0000000000000068 r sm30_gred_count
00000000008843a0 0000000000000068 r sm30_gst_mem_div_replay
0000000000884408 0000000000000068 r sm30_gst_request
0000000000884470 0000000000000068 r sm30_gst_transactions
00000000008844d8 0000000000000068 r sm30_inst_executed
0000000000884540 0000000000000068 r sm30_inst_issued1
00000000008845a8 0000000000000068 r sm30_inst_issued2
0000000000884610 0000000000000068 r sm30_l1_gld_hit
0000000000884678 0000000000000068 r sm30_l1_gld_miss
00000000008846e0 0000000000000068 r sm30_l1_gld_transactions
0000000000884748 0000000000000068 r sm30_l1_gst_transactions
00000000008847b0 0000000000000068 r sm30_l1_local_ld_hit
0000000000884818 0000000000000068 r sm30_l1_local_ld_miss
0000000000884880 0000000000000068 r sm30_l1_local_st_hit
00000000008848e8 0000000000000068 r sm30_l1_local_st_miss
0000000000884950 0000000000000068 r sm30_l1_shared_ld_transactions
00000000008849b8 0000000000000068 r sm30_l1_shared_st_transactions
0000000000884a20 0000000000000068 r sm30_local_ld
0000000000884a88 0000000000000068 r sm30_local_ld_transactions
0000000000884af0 0000000000000068 r sm30_local_st
0000000000884b58 0000000000000068 r sm30_local_st_transactions
0000000000884bc0 0000000000000068 r sm30_prof_trigger_0
0000000000884c28 0000000000000068 r sm30_prof_trigger_1
0000000000884c90 0000000000000068 r sm30_prof_trigger_2
0000000000884cf8 0000000000000068 r sm30_prof_trigger_3
0000000000884d60 0000000000000068 r sm30_prof_trigger_4
0000000000884dc8 0000000000000068 r sm30_prof_trigger_5
0000000000884e30 0000000000000068 r sm30_prof_trigger_6
0000000000884e98 0000000000000068 r sm30_prof_trigger_7
0000000000884f00 0000000000000068 r sm30_shared_ld
0000000000884f68 0000000000000068 r sm30_shared_ld_replay
0000000000884fd0 0000000000000068 r sm30_shared_st
0000000000885038 0000000000000068 r sm30_shared_st_replay
00000000008850a0 0000000000000068 r sm30_sm_cta_launched
0000000000885108 0000000000000068 r sm30_threads_launched
0000000000885170 0000000000000068 r sm30_uncached_gld_transactions
00000000008851d8 0000000000000068 r sm30_warps_launched
0000000000885240 0000000000000068 r sm35_atom_cas_count
00000000008852a8 0000000000000068 r sm35_atom_count
0000000000885310 0000000000000068 r sm35_gred_count
0000000000885378 0000000000000068 r sm35_not_pred_off_inst_executed
00000000008853e0 0000000000000068 r sm35_shared_ld_replay
0000000000885448 0000000000000068 r sm35_shared_st_replay
00000000008854b0 0000000000000068 r sm35_th_inst_executed
0000000000885518 0000000000000068 r sm50_active_ctas
0000000000885580 0000000000000068 r sm50_active_cycles
00000000008855e8 0000000000000068 r sm50_active_warps
0000000000885650 0000000000000068 r sm50_atom_count
00000000008856b8 0000000000000068 r sm50_branch
0000000000885720 0000000000000068 r sm50_divergent_branch
0000000000885788 0000000000000068 r sm50_global_atom_cas
00000000008857f0 0000000000000068 r sm50_global_ld
0000000000885858 0000000000000068 r sm50_global_st
00000000008858c0 0000000000000068 r sm50_gred_count
0000000000885928 0000000000000068 r sm50_inst_executed
0000000000885990 0000000000000068 r sm50_inst_issued0
00000000008859f8 0000000000000068 r sm50_inst_issued1
0000000000885a60 0000000000000068 r sm50_inst_issued2
0000000000885ac8 0000000000000068 r sm50_local_ld
0000000000885b30 0000000000000068 r sm50_local_st
0000000000885b98 0000000000000068 r sm50_not_pred_off_inst_executed
0000000000885c00 0000000000000068 r sm50_prof_trigger_0
0000000000885c68 0000000000000068 r sm50_prof_trigger_1
0000000000885cd0 0000000000000068 r sm50_prof_trigger_2
0000000000885d38 0000000000000068 r sm50_prof_trigger_3
0000000000885da0 0000000000000068 r sm50_prof_trigger_4
0000000000885e08 0000000000000068 r sm50_prof_trigger_5
0000000000885e70 0000000000000068 r sm50_prof_trigger_6
0000000000885ed8 0000000000000068 r sm50_prof_trigger_7
0000000000885f40 0000000000000068 r sm50_shared_atom
0000000000885fa8 0000000000000068 r sm50_shared_atom_cas
0000000000886010 0000000000000068 r sm50_shared_ld
0000000000886078 0000000000000068 r sm50_shared_ld_bank_conflict
00000000008860e0 0000000000000068 r sm50_shared_ld_transactions
0000000000886148 0000000000000068 r sm50_shared_st
00000000008861b0 0000000000000068 r sm50_shared_st_bank_conflict
0000000000886218 0000000000000068 r sm50_shared_st_transactions
0000000000886280 0000000000000068 r sm50_sm_cta_launched
00000000008862e8 0000000000000068 r sm50_th_inst_executed
0000000000886350 0000000000000068 r sm50_warps_launched
00000000008863b8 0000000000000068 r sm52_atom_count
0000000000886420 0000000000000068 r sm52_global_atom_cas
0000000000886488 0000000000000068 r sm52_global_ld
00000000008864f0 0000000000000068 r sm52_global_st
0000000000886558 0000000000000068 r sm52_gred_count
00000000008865c0 0000000000000068 r sm52_inst_executed
0000000000886628 0000000000000068 r sm52_inst_issued0
0000000000886690 0000000000000068 r sm52_inst_issued1
00000000008866f8 0000000000000068 r sm52_inst_issued2
0000000000886760 0000000000000068 r sm52_local_ld
00000000008867c8 0000000000000068 r sm52_local_st
0000000000886830 0000000000000068 r sm52_shared_atom
0000000000886898 0000000000000068 r sm52_shared_atom_cas
0000000000886900 0000000000000068 r sm52_shared_ld
0000000000886968 0000000000000068 r sm52_shared_st
00000000008869d0 0000000000000068 r sm52_warps_launched
0000000000886a38 0000000000000038 r supported_modifiers.0
0000000000886a70 0000000000000014 r CSWTCH.55
0000000000886a88 0000000000000010 r CSWTCH.57
0000000000886a98 0000000000000040 r CSWTCH.59
0000000000886ad8 0000000000000020 r CSWTCH.63
0000000000886af8 0000000000000068 r CSWTCH.66
0000000000886b60 0000000000000010 r lut.0
0000000000886b70 0000000000000060 r CSWTCH.8
0000000000886bd0 0000000000000060 r CSWTCH.9
0000000000886c30 0000000000000060 r CSWTCH.11
0000000000886c90 0000000000000011 r hex_digits.0
0000000000886cac 0000000000000004 r deleted_key_value
0000000000886cb0 00000000000003e0 r hash_sizes
0000000000887090 0000000000000100 R util_format_linear_to_srgb_8unorm_table
0000000000887190 00000000000001a0 R util_format_linear_to_srgb_helper_table
0000000000887330 0000000000000400 R util_format_srgb_8unorm_to_linear_float_table
0000000000887730 0000000000000100 R util_format_srgb_to_linear_8unorm_table
0000000000887830 00000000000000c0 r anchor_indices
00000000008878f0 0000000000000a68 r bptc_float_modes
0000000000888358 0000000000000100 r bptc_unorm_modes
0000000000888458 0000000000000100 r partition_table1
0000000000888558 0000000000000100 r partition_table2
0000000000888658 0000000000000004 r weights2.0
0000000000888660 0000000000000008 r weights3.1
0000000000888668 0000000000000010 r weights4.2
0000000000888678 0000000000000080 r etc1_modifier_tables
00000000008886f8 0000000000000020 r lookup.0
0000000000888718 0000000000000029 r __func__.0
0000000000888748 000000000000002b r __func__.1
0000000000888778 000000000000002a r __func__.2
00000000008887a8 0000000000000029 r __func__.3
00000000008887d8 000000000000002b r __func__.4
0000000000888808 000000000000002a r __func__.5
0000000000888838 0000000000000029 r __func__.0
0000000000888868 000000000000002b r __func__.1
0000000000888898 000000000000002a r __func__.2
00000000008888c8 0000000000000029 r __func__.3
00000000008888f8 000000000000002b r __func__.4
0000000000888928 000000000000002a r __func__.5
0000000000888958 0000000000000050 r CSWTCH.136
0000000000888a20 0000000000000009 r swz.5
0000000000888a30 0000000000000014 r CSWTCH.9
0000000000888a48 000000000000000a r fogColorState.0
0000000000888a58 000000000000000a r fogPStateOpt.1
0000000000888a68 0000000000000028 r mvpState.2
0000000000888a90 0000000000000028 r mvpState.3
0000000000888bf0 0000000000000048 r CSWTCH.38
0000000000888c38 000000000000001e r __func__.1
0000000000888c58 000000000000001e r __func__.2
0000000000888d00 0000000000000060 R _mesa_vao_attribute_map
0000000000888d60 0000000000000074 r CSWTCH.71
0000000000888dd8 0000000000000010 r color_logicop_mapping
0000000000888f70 0000000000000004 r undef
00000000008891b4 0000000000000004 R RGBA32_FLOAT
00000000008891b8 0000000000000004 R RGBA32_INT
00000000008891bc 0000000000000004 R RGBA32_UINT
0000000000889540 0000000000000018 r error_value
0000000000889558 0000000000000008 r extra_AMD_depth_clamp_separate
0000000000889560 0000000000000008 r extra_AMD_framebuffer_multisample_advanced
0000000000889568 000000000000000c r extra_ARB_ES2_compatibility_api_es2
0000000000889578 000000000000000c r extra_ARB_ES3_compatibility_api_es3
0000000000889588 0000000000000008 r extra_ARB_blend_func_extended
0000000000889590 0000000000000008 r extra_ARB_clip_control
0000000000889598 0000000000000008 r extra_ARB_color_buffer_float
00000000008895a0 000000000000000c r extra_ARB_color_buffer_float_or_glcore
00000000008895b0 000000000000000c r extra_ARB_compute_shader_es31
00000000008895c0 0000000000000008 r extra_ARB_compute_variable_group_size
00000000008895c8 0000000000000008 r extra_ARB_cull_distance
00000000008895d0 0000000000000008 r extra_ARB_depth_clamp
00000000008895d8 0000000000000008 r extra_ARB_draw_indirect
00000000008895e0 0000000000000008 r extra_ARB_explicit_uniform_location
00000000008895e8 0000000000000008 r extra_ARB_fragment_program
00000000008895f0 0000000000000008 r extra_ARB_fragment_shader
00000000008895f8 0000000000000008 r extra_ARB_framebuffer_no_attachments
0000000000889600 0000000000000008 r extra_ARB_framebuffer_no_attachments_and_geometry_shader
0000000000889608 000000000000000c r extra_ARB_framebuffer_object_EXT_framebuffer_multisample
0000000000889618 000000000000000c r extra_ARB_gpu_shader5_or_OES_sample_variables
0000000000889628 000000000000000c r extra_ARB_gpu_shader5_or_oes_geometry_shader
0000000000889638 0000000000000008 r extra_ARB_indirect_parameters
0000000000889640 0000000000000008 r extra_ARB_polygon_offset_clamp
0000000000889648 0000000000000008 r extra_ARB_query_buffer_object
0000000000889650 0000000000000008 r extra_ARB_sample_locations
0000000000889658 0000000000000008 r extra_ARB_seamless_cube_map
0000000000889660 0000000000000008 r extra_ARB_shader_atomic_counters
0000000000889668 0000000000000008 r extra_ARB_shader_atomic_counters_and_geometry_shader
0000000000889670 0000000000000008 r extra_ARB_shader_atomic_counters_and_tessellation
0000000000889678 0000000000000008 r extra_ARB_shader_image_load_store
0000000000889680 0000000000000008 r extra_ARB_shader_image_load_store_and_geometry_shader
0000000000889688 0000000000000008 r extra_ARB_shader_image_load_store_and_tessellation
0000000000889690 0000000000000010 r extra_ARB_shader_image_load_store_shader_storage_buffer_object_es31
00000000008896a0 0000000000000008 r extra_ARB_shader_storage_buffer_object
00000000008896a8 0000000000000008 r extra_ARB_shader_storage_buffer_object_and_geometry_shader
00000000008896b0 000000000000000c r extra_ARB_shader_storage_buffer_object_es31
00000000008896c0 0000000000000008 r extra_ARB_sparse_buffer
00000000008896c8 0000000000000008 r extra_ARB_spirv_extensions
00000000008896d0 0000000000000008 r extra_ARB_sync
00000000008896d8 0000000000000008 r extra_ARB_tessellation_shader
00000000008896e0 0000000000000008 r extra_ARB_texture_buffer_range
00000000008896e8 0000000000000008 r extra_ARB_texture_cube_map
00000000008896f0 000000000000000c r extra_ARB_texture_cube_map_array_OES_texture_cube_map_array
0000000000889700 0000000000000008 r extra_ARB_texture_gather
0000000000889708 0000000000000008 r extra_ARB_texture_multisample
0000000000889710 0000000000000008 r extra_ARB_timer_query
0000000000889718 000000000000000c r extra_ARB_transform_feedback2_api_es3
0000000000889728 0000000000000008 r extra_ARB_transform_feedback3
0000000000889730 000000000000000c r extra_ARB_transform_feedback3_ARB_gpu_shader5
0000000000889740 0000000000000008 r extra_ARB_uniform_buffer_object
0000000000889748 0000000000000008 r extra_ARB_uniform_buffer_object_and_geometry_shader
0000000000889750 0000000000000008 r extra_ARB_vertex_program
0000000000889758 000000000000000c r extra_ARB_vertex_program_ARB_fragment_program
0000000000889768 000000000000000c r extra_ARB_vertex_program_api_es2
0000000000889778 0000000000000008 r extra_ARB_vertex_shader
0000000000889780 000000000000000c r extra_ARB_viewport_array_or_oes_geometry_shader
0000000000889790 000000000000000c r extra_ARB_viewport_array_or_oes_viewport_array
00000000008897a0 0000000000000008 r extra_ATI_fragment_shader
00000000008897a8 0000000000000008 r extra_ATI_meminfo
00000000008897b0 000000000000000c r extra_ES32
00000000008897c0 0000000000000008 r extra_EXT_depth_bounds_test
00000000008897c8 0000000000000010 r extra_EXT_disjoint_timer_query
00000000008897d8 0000000000000008 r extra_EXT_framebuffer_sRGB
00000000008897e0 000000000000000c r extra_EXT_framebuffer_sRGB_and_new_buffers
00000000008897f0 000000000000000c r extra_EXT_packed_float
0000000000889800 0000000000000008 r extra_EXT_pixel_buffer_object
0000000000889808 0000000000000008 r extra_EXT_provoking_vertex
0000000000889810 0000000000000008 r extra_EXT_provoking_vertex_32
0000000000889818 0000000000000010 r extra_EXT_shader_framebuffer_fetch
0000000000889828 0000000000000008 r extra_EXT_stencil_two_side
0000000000889830 0000000000000008 r extra_EXT_texture_array
0000000000889838 000000000000000c r extra_EXT_texture_array_es3
0000000000889848 0000000000000008 r extra_EXT_texture_filter_anisotropic
0000000000889850 000000000000000c r extra_EXT_texture_integer_and_new_buffers
0000000000889860 0000000000000008 r extra_EXT_transform_feedback
0000000000889868 0000000000000008 r extra_EXT_window_rectangles
0000000000889870 0000000000000010 r extra_GLSL_130_es3_gpushader4
0000000000889880 0000000000000008 r extra_INTEL_conservative_rasterization
0000000000889888 0000000000000008 r extra_INTEL_performance_query
0000000000889890 0000000000000008 r extra_KHR_blend_equation_advanced_coherent
0000000000889898 0000000000000008 r extra_KHR_robustness
00000000008898a0 0000000000000010 r extra_KHR_robustness_or_GL
00000000008898b0 0000000000000008 r extra_NVX_gpu_memory_info
00000000008898b8 0000000000000008 r extra_NV_conservative_raster
00000000008898c0 0000000000000008 r extra_NV_conservative_raster_dilate
00000000008898c8 0000000000000008 r extra_NV_conservative_raster_pre_snap_triangles
00000000008898d0 0000000000000008 r extra_NV_fog_distance
00000000008898d8 0000000000000008 r extra_NV_point_sprite
00000000008898e0 000000000000000c r extra_NV_point_sprite_ARB_point_sprite
00000000008898f0 0000000000000008 r extra_NV_primitive_restart
00000000008898f8 000000000000000c r extra_NV_read_buffer_api_gl
0000000000889908 0000000000000008 r extra_NV_texture_rectangle
0000000000889910 0000000000000008 r extra_NV_viewport_swizzle
0000000000889918 0000000000000008 r extra_OES_EGL_image_external
0000000000889920 0000000000000008 r extra_OES_primitive_bounding_box
0000000000889928 0000000000000010 r extra_core_ARB_color_buffer_float_and_new_buffers
0000000000889938 0000000000000008 r extra_flush_current
0000000000889940 000000000000000c r extra_flush_current_valid_texture_unit
0000000000889950 000000000000000c r extra_gl30_es3
0000000000889960 000000000000000c r extra_gl32_es3
0000000000889970 000000000000000c r extra_gl40_ARB_sample_shading
0000000000889980 0000000000000008 r extra_new_buffers
0000000000889988 0000000000000008 r extra_new_frag_clamp
0000000000889990 0000000000000008 r extra_texture_buffer_object
0000000000889998 0000000000000008 r extra_valid_clip_distance
00000000008899a0 0000000000000008 r extra_valid_draw_buffer
00000000008899a8 0000000000000008 r extra_valid_texture_unit
00000000008899b0 0000000000000008 r extra_version_30
00000000008899b8 0000000000000008 r extra_version_31
00000000008899c0 0000000000000008 r extra_version_32
00000000008899c8 000000000000000c r extra_version_32_OES_geometry_shader
00000000008899d8 0000000000000008 r extra_version_43
00000000008899e0 0000000000000800 r table_API_OPENGL
000000000088a1e0 0000000000000800 r table_API_OPENGLES
000000000088a9e0 0000000000000800 r table_API_OPENGLES2
000000000088b1e0 0000000000000800 r table_API_OPENGLES3
000000000088b9e0 0000000000000800 r table_API_OPENGLES31
000000000088c1e0 0000000000000800 r table_API_OPENGLES32
000000000088c9e0 0000000000000040 r transpose
000000000088ca20 0000000000000020 r stage_pairs.0
000000000088ca40 0000000000000044 r cem_ranges
000000000088ca88 00000000000000c8 r formats
000000000088cb50 0000000000000028 r CSWTCH.17
000000000088cb50 0000000000000028 r CSWTCH.27
000000000088d1f8 0000000000000080 r CSWTCH.53
000000000088d278 000000000000000a r fog_color.0
000000000088d288 000000000000000a r fog_params_state.1
000000000088d298 000000000000001c r CSWTCH.10
000000000088d2b8 0000000000000080 r table.0
000000000088d338 0000000000000030 r CSWTCH.32
000000000088d568 0000000000000010 r zeros.0
000000000088d578 000000000000001c r CSWTCH.4
000000000088d598 0000000000000007 r CSWTCH.5
000000000088d5a0 0000000000000014 r CSWTCH.15
000000000088d5b8 000000000000001c r CSWTCH.6
000000000088d998 000000000000001c r CSWTCH.14
000000000088e0f0 000000000000002c r CSWTCH.1206
000000000088e120 000000000000002c r CSWTCH.1207
000000000088e150 000000000000002c r CSWTCH.1208
000000000088e180 000000000000002c r CSWTCH.1209
000000000088e1b0 000000000000002c r CSWTCH.1210
000000000088e1e0 000000000000002c r CSWTCH.1211
000000000088e210 000000000000002c r CSWTCH.1212
000000000088e240 000000000000002c r CSWTCH.1213
000000000088e270 000000000000002c r CSWTCH.1214
000000000088e2a0 000000000000002c r CSWTCH.1215
000000000088e2d0 000000000000002c r CSWTCH.1216
000000000088e300 000000000000002c r CSWTCH.1217
000000000088e330 000000000000002c r CSWTCH.1218
000000000088e360 000000000000002c r CSWTCH.1219
000000000088e390 000000000000002c r CSWTCH.1220
000000000088e3c0 000000000000002c r CSWTCH.1221
000000000088e3f0 000000000000002c r CSWTCH.1222
000000000088e420 000000000000002c r CSWTCH.1223
000000000088e450 000000000000002c r CSWTCH.1224
000000000088e480 000000000000002c r CSWTCH.1225
000000000088e4b0 0000000000000050 r CSWTCH.470
000000000088e500 0000000000000014 r CSWTCH.625
000000000088e518 000000000000001c r CSWTCH.648
000000000088e538 0000000000000010 r swizzle_for_size(int)::size_swizzles
000000000088e548 000000000000000a r get_mesa_program_tgsi(gl_context*, gl_shader_program*, gl_linked_shader*)::wposTransformState
000000000088e558 000000000000000a r glsl_to_tgsi_visitor::visit_expression(ir_expression*, st_src_reg*)::transform_y_state
000000000088e568 000000000000000a r glsl_to_tgsi_visitor::visit_expression(ir_expression*, st_src_reg*)::transform_y_state
000000000088e578 000000000000000c r glsl_to_tgsi_visitor::emit_dp(ir_instruction*, st_dst_reg, st_src_reg, st_src_reg, unsigned int)::dot_opcodes
000000000088e588 0000000000000030 r CSWTCH.223
000000000088e5b8 000000000000000c r CSWTCH.251
000000000088e5c8 0000000000000038 r CSWTCH.98
000000000088e600 000000000000000a r wposTransformState.0
000000000088e610 0000000000000040 r emit_inline_matrix_constructor(glsl_type const*, exec_list*, exec_list*, void*)::rhs_swiz
000000000088e6b8 000000000000002c r CSWTCH.1085
000000000088e6e8 000000000000002c r CSWTCH.1086
000000000088e718 0000000000000050 r CSWTCH.922
000000000088e768 00000000000000d4 r ast_expression::do_hir(exec_list*, _mesa_glsl_parse_state*, bool)::operations
000000000088e840 0000000000000018 r gl_ClipPlane_elements
000000000088e858 0000000000000018 r gl_EyePlaneQ_elements
000000000088e870 0000000000000018 r gl_EyePlaneR_elements
000000000088e888 0000000000000018 r gl_EyePlaneS_elements
000000000088e8a0 0000000000000018 r gl_EyePlaneT_elements
000000000088e8b8 0000000000000018 r gl_NumSamples_elements
000000000088e8d0 0000000000000018 r gl_NormalScale_elements
000000000088e8e8 0000000000000048 r gl_NormalMatrix_elements
000000000088e930 0000000000000018 r gl_ObjectPlaneQ_elements
000000000088e948 0000000000000018 r gl_ObjectPlaneR_elements
000000000088e960 0000000000000018 r gl_ObjectPlaneS_elements
000000000088e978 0000000000000018 r gl_ObjectPlaneT_elements
000000000088e990 0000000000000060 r gl_TextureMatrix_elements
000000000088e9f0 0000000000000060 r gl_ModelViewMatrix_elements
000000000088ea50 0000000000000018 r gl_TextureEnvColor_elements
000000000088ea68 0000000000000060 r gl_ProjectionMatrix_elements
000000000088eac8 0000000000000060 r gl_TextureMatrixInverse_elements
000000000088eb28 0000000000000018 r gl_CurrentAttribFragMESA_elements
000000000088eb40 0000000000000018 r gl_CurrentAttribVertMESA_elements
000000000088eb58 0000000000000018 r gl_FogParamsOptimizedMESA_elements
000000000088eb70 0000000000000060 r gl_ModelViewMatrixInverse_elements
000000000088ebd0 0000000000000060 r gl_TextureMatrixTranspose_elements
000000000088ec30 0000000000000060 r gl_ProjectionMatrixInverse_elements
000000000088ec90 0000000000000060 r gl_ModelViewMatrixTranspose_elements
000000000088ecf0 0000000000000060 r gl_ModelViewProjectionMatrix_elements
000000000088ed50 0000000000000060 r gl_ProjectionMatrixTranspose_elements
000000000088edb0 0000000000000060 r gl_TextureMatrixInverseTranspose_elements
000000000088ee10 0000000000000060 r gl_ModelViewMatrixInverseTranspose_elements
000000000088ee70 0000000000000060 r gl_ModelViewProjectionMatrixInverse_elements
000000000088eed0 0000000000000060 r gl_ProjectionMatrixInverseTranspose_elements
000000000088ef30 0000000000000060 r gl_ModelViewProjectionMatrixTranspose_elements
000000000088ef90 0000000000000060 r gl_ModelViewProjectionMatrixInverseTranspose_elements
000000000088eff0 0000000000000050 r CSWTCH.31
000000000088f040 0000000000000050 r CSWTCH.26
000000000088f090 0000000000000038 r CSWTCH.160
000000000088f270 000000000000001c r CSWTCH.72
000000000088f4c8 0000000000000018 r CSWTCH.981
000000000088f4e0 0000000000000520 R nv50_ir::TexInstruction::formatTable
000000000088fa00 00000000000001b0 R nv50_ir::TexInstruction::Target::descTable
000000000088ff30 0000000000000030 r CSWTCH.652
000000000088ff60 0000000000000029 r CSWTCH.654
000000000088ff90 0000000000000048 r CSWTCH.656
000000000088ffd8 00000000000000fc r CSWTCH.659
00000000008900d8 0000000000000054 r CSWTCH.661
0000000000890130 00000000000000dc r CSWTCH.880
00000000008903b0 0000000000000034 r CSWTCH.708
00000000008903e8 0000000000000024 r CSWTCH.828
0000000000890410 0000000000000008 r nv50_ir::reverseCondCode(nv50_ir::CondCode)::ccRev
0000000000890418 0000000000000034 r CSWTCH.574
0000000000890450 0000000000000034 r CSWTCH.45
0000000000890488 00000000000001f8 R nv50_ir::Target::operationClass
0000000000890680 000000000000007e R nv50_ir::Target::operationSrcNr
0000000000890728 0000000000000034 r CSWTCH.60
0000000000890760 0000000000000160 r nv50_ir::_initProps
00000000008908c0 0000000000000030 r nv50_ir::_initPropsNVE4
00000000008908f0 0000000000000038 r nv50_ir::_initPropsGM107
0000000000890928 000000000000003c r nv50_ir::TargetNVC0::initOpInfo()::commutative
0000000000890968 000000000000006c r nv50_ir::TargetNVC0::initOpInfo()::noDest
00000000008909d8 0000000000000060 r CSWTCH.39
0000000000890a38 0000000000000400 r util_crc32_table
0000000000890e38 0000000000000010 r fog_modes.0
0000000000891058 00000000000002c4 r yycheck
0000000000891320 0000000000000384 r yydefact
00000000008916a8 0000000000000110 r yydefgoto
00000000008917b8 0000000000000014 r yyloc_default.0
00000000008917d0 0000000000000384 r yypact
0000000000891b58 0000000000000110 r yypgoto
0000000000891c68 000000000000010c r yyr1
0000000000891d78 000000000000010c r yyr2
0000000000891e88 00000000000002c4 r yytable
0000000000892150 000000000000016a r yytranslate
00000000008922c0 000000000000001c r CSWTCH.4
00000000008922e0 0000000000000038 r CSWTCH.5
0000000000892318 0000000000000060 r CSWTCH.2
0000000000892378 0000000000000060 r CSWTCH.8
00000000008923d8 0000000000000034 r CSWTCH.129
0000000000892410 0000000000000020 r nv50_ir::BuildUtil::mkClobber(nv50_ir::DataFile, unsigned int, int)::baseSize2
0000000000892528 0000000000000034 r CSWTCH.357
0000000000892560 000000000000000e r CSWTCH.363
0000000000892570 0000000000000038 r CSWTCH.475
00000000008925a8 0000000000000038 r CSWTCH.477
00000000008925e0 000000000000001c r CSWTCH.488
0000000000892600 000000000000001c r CSWTCH.489
0000000000892620 0000000000000038 r CSWTCH.501
0000000000892658 0000000000000004 r CSWTCH.661
0000000000892660 0000000000000020 r CSWTCH.680
0000000000892660 0000000000000020 r CSWTCH.739
0000000000892680 000000000000000c r CSWTCH.694
0000000000892690 000000000000000c r CSWTCH.696
0000000000892690 000000000000000c r CSWTCH.698
00000000008926a0 000000000000001c r CSWTCH.748
00000000008926c0 0000000000000030 r CSWTCH.751
00000000008926f0 0000000000000005 r CSWTCH.753
00000000008926f8 0000000000000008 r nv50_ir::reverseCondCode(nv50_ir::CondCode)::ccRev
0000000000892700 0000000000000034 r CSWTCH.79
0000000000892840 0000000000000034 r CSWTCH.451
0000000000892878 0000000000000014 r CSWTCH.459
00000000008929c0 0000000000000068 r CSWTCH.15
0000000000892a28 000000000000053a r yy_accept
0000000000892f68 0000000000000540 r yy_base
00000000008934a8 00000000000007f0 r yy_chk
0000000000893c98 0000000000000540 r yy_def
00000000008941d8 0000000000000100 r yy_ec
00000000008942d8 0000000000000044 r yy_meta
0000000000894320 00000000000007f0 r yy_nxt
0000000000894b10 000000000000a555 r public_string_pool
000000000089f068 000000000000d7a0 r public_stubs
00000000008ac808 0000000000000027 V typeinfo name for __gnu_cxx::__concurrence_lock_error
00000000008ac830 0000000000000029 V typeinfo name for __gnu_cxx::__concurrence_unlock_error
00000000008ac860 000000000000002c V typeinfo name for __gnu_cxx::__concurrence_broadcast_error
00000000008ac890 0000000000000027 V typeinfo name for __gnu_cxx::__concurrence_wait_error
00000000008ac8b8 0000000000000025 V typeinfo name for __cxxabiv1::__si_class_type_info
00000000008ac8e0 000000000000000d V typeinfo name for std::type_info
00000000008ac8f0 0000000000000012 V typeinfo name for std::locale::facet
00000000008ac908 0000000000000002 R std::locale::facet::_S_c_name
00000000008ac910 0000000000000035 r typeinfo name for std::__facet_shims::(anonymous namespace)::numpunct_shim<char>
00000000008ac948 0000000000000034 r typeinfo name for std::__facet_shims::(anonymous namespace)::collate_shim<char>
00000000008ac980 000000000000003b r typeinfo name for std::__facet_shims::(anonymous namespace)::moneypunct_shim<char, true>
00000000008ac9c0 000000000000003b r typeinfo name for std::__facet_shims::(anonymous namespace)::moneypunct_shim<char, false>
00000000008aca00 0000000000000036 r typeinfo name for std::__facet_shims::(anonymous namespace)::money_get_shim<char>
00000000008aca38 0000000000000036 r typeinfo name for std::__facet_shims::(anonymous namespace)::money_put_shim<char>
00000000008aca70 0000000000000035 r typeinfo name for std::__facet_shims::(anonymous namespace)::messages_shim<char>
00000000008acaa8 0000000000000035 r typeinfo name for std::__facet_shims::(anonymous namespace)::numpunct_shim<wchar_t>
00000000008acae0 0000000000000034 r typeinfo name for std::__facet_shims::(anonymous namespace)::collate_shim<wchar_t>
00000000008acb18 000000000000003b r typeinfo name for std::__facet_shims::(anonymous namespace)::moneypunct_shim<wchar_t, true>
00000000008acb58 000000000000003b r typeinfo name for std::__facet_shims::(anonymous namespace)::moneypunct_shim<wchar_t, false>
00000000008acb98 0000000000000036 r typeinfo name for std::__facet_shims::(anonymous namespace)::money_get_shim<wchar_t>
00000000008acbd0 0000000000000036 r typeinfo name for std::__facet_shims::(anonymous namespace)::money_put_shim<wchar_t>
00000000008acc08 0000000000000035 r typeinfo name for std::__facet_shims::(anonymous namespace)::messages_shim<wchar_t>
00000000008acc40 0000000000000019 V typeinfo name for std::locale::facet::__shim
00000000008acc60 0000000000000035 r typeinfo name for std::__facet_shims::(anonymous namespace)::time_get_shim<char>
00000000008acc98 0000000000000035 r typeinfo name for std::__facet_shims::(anonymous namespace)::time_get_shim<wchar_t>
00000000008accd0 000000000000000f V typeinfo name for std::ctype_base
00000000008acce0 000000000000000c V typeinfo name for std::ctype<char>
00000000008accf0 000000000000000c V typeinfo name for std::ctype<wchar_t>
00000000008acd00 0000000000000035 r typeinfo name for std::__facet_shims::(anonymous namespace)::numpunct_shim<char>
00000000008acd38 0000000000000034 r typeinfo name for std::__facet_shims::(anonymous namespace)::collate_shim<char>
00000000008acd70 000000000000003b r typeinfo name for std::__facet_shims::(anonymous namespace)::moneypunct_shim<char, true>
00000000008acdb0 000000000000003b r typeinfo name for std::__facet_shims::(anonymous namespace)::moneypunct_shim<char, false>
00000000008acdf0 0000000000000036 r typeinfo name for std::__facet_shims::(anonymous namespace)::money_get_shim<char>
00000000008ace28 0000000000000036 r typeinfo name for std::__facet_shims::(anonymous namespace)::money_put_shim<char>
00000000008ace60 0000000000000035 r typeinfo name for std::__facet_shims::(anonymous namespace)::messages_shim<char>
00000000008ace98 0000000000000035 r typeinfo name for std::__facet_shims::(anonymous namespace)::numpunct_shim<wchar_t>
00000000008aced0 0000000000000034 r typeinfo name for std::__facet_shims::(anonymous namespace)::collate_shim<wchar_t>
00000000008acf08 000000000000003b r typeinfo name for std::__facet_shims::(anonymous namespace)::moneypunct_shim<wchar_t, true>
00000000008acf48 000000000000003b r typeinfo name for std::__facet_shims::(anonymous namespace)::moneypunct_shim<wchar_t, false>
00000000008acf88 0000000000000036 r typeinfo name for std::__facet_shims::(anonymous namespace)::money_get_shim<wchar_t>
00000000008acfc0 0000000000000036 r typeinfo name for std::__facet_shims::(anonymous namespace)::money_put_shim<wchar_t>
00000000008acff8 0000000000000035 r typeinfo name for std::__facet_shims::(anonymous namespace)::messages_shim<wchar_t>
00000000008ad030 0000000000000035 r typeinfo name for std::__facet_shims::(anonymous namespace)::time_get_shim<char>
00000000008ad068 0000000000000035 r typeinfo name for std::__facet_shims::(anonymous namespace)::time_get_shim<wchar_t>
00000000008ad150 000000000000000d V typeinfo name for std::time_base
00000000008ad160 000000000000000f V typeinfo name for std::money_base
00000000008ad170 0000000000000012 V typeinfo name for std::messages_base
00000000008ad188 0000000000000018 V typeinfo name for std::__cxx11::collate<wchar_t>
00000000008ad1a0 0000000000000019 V typeinfo name for std::__cxx11::numpunct<wchar_t>
00000000008ad1c0 0000000000000020 V typeinfo name for std::__cxx11::moneypunct<wchar_t, true>
00000000008ad1e0 0000000000000020 V typeinfo name for std::__cxx11::moneypunct<wchar_t, false>
00000000008ad200 0000000000000019 V typeinfo name for std::__cxx11::messages<wchar_t>
00000000008ad220 0000000000000046 V typeinfo name for std::__cxx11::money_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >
00000000008ad268 0000000000000046 V typeinfo name for std::__cxx11::money_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >
00000000008ad2b0 0000000000000045 V typeinfo name for std::__cxx11::time_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >
00000000008ad2f8 0000000000000036 V typeinfo name for __gnu_cxx::stdio_sync_filebuf<char, std::char_traits<char> >
00000000008ad330 0000000000000036 V typeinfo name for __gnu_cxx::stdio_sync_filebuf<wchar_t, std::char_traits<wchar_t> >
00000000008ad368 000000000000000e r std::__detail::_Prime_rehash_policy::_M_next_bkt(unsigned long) const::__fast_bkt
00000000008ad378 0000000000000988 R std::__detail::__prime_list
00000000008add00 0000000000000022 V typeinfo name for std::basic_ios<char, std::char_traits<char> >
00000000008add28 0000000000000022 V typeinfo name for std::basic_ios<wchar_t, std::char_traits<wchar_t> >
00000000008add50 000000000000000c V typeinfo name for std::ios_base
00000000008add60 0000000000000003 V typeinfo name for std::istream
00000000008add68 0000000000000027 V typeinfo name for std::basic_istream<wchar_t, std::char_traits<wchar_t> >
00000000008ade40 0000000000000011 V typeinfo name for std::codecvt_base
00000000008ade58 000000000000000e V typeinfo name for std::collate<char>
00000000008ade68 000000000000000f V typeinfo name for std::numpunct<char>
00000000008ade78 000000000000003a V typeinfo name for std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >
00000000008adeb8 000000000000003a V typeinfo name for std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >
00000000008adef8 0000000000000019 V typeinfo name for std::__timepunct_cache<char>
00000000008adf18 0000000000000013 V typeinfo name for std::__timepunct<char>
00000000008adf30 0000000000000016 V typeinfo name for std::moneypunct<char, true>
00000000008adf48 0000000000000016 V typeinfo name for std::moneypunct<char, false>
00000000008adf60 000000000000000f V typeinfo name for std::messages<char>
00000000008adf70 000000000000002c V typeinfo name for std::__codecvt_abstract_base<char, char, _mbstate_t>
00000000008adfa0 000000000000003c V typeinfo name for std::money_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >
00000000008adfe0 000000000000003c V typeinfo name for std::money_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >
00000000008ae020 000000000000003b V typeinfo name for std::time_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >
00000000008ae060 000000000000003b V typeinfo name for std::time_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >
00000000008ae0a0 000000000000001e V typeinfo name for std::__moneypunct_cache<char, false>
00000000008ae0c0 000000000000001e V typeinfo name for std::__moneypunct_cache<char, true>
00000000008ae0e0 0000000000000018 V typeinfo name for std::__numpunct_cache<char>
00000000008ae0f8 0000000000000003 V typeinfo name for std::ostream
00000000008ae100 0000000000000027 V typeinfo name for std::basic_ostream<wchar_t, std::char_traits<wchar_t> >
00000000008ae128 0000000000000029 V typeinfo name for std::basic_streambuf<char, std::char_traits<char> >
00000000008ae158 0000000000000029 V typeinfo name for std::basic_streambuf<wchar_t, std::char_traits<wchar_t> >
00000000008ae188 0000000000000019 V typeinfo name for std::_V2::error_category
00000000008ae1a8 0000000000000011 V typeinfo name for std::system_error
00000000008ae268 000000000000000e V typeinfo name for std::collate<wchar_t>
00000000008ae278 000000000000001d V typeinfo name for std::__ctype_abstract_base<wchar_t>
00000000008ae298 000000000000000f V typeinfo name for std::numpunct<wchar_t>
00000000008ae2a8 000000000000003a V typeinfo name for std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >
00000000008ae2e8 000000000000003a V typeinfo name for std::num_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >
00000000008ae328 0000000000000019 V typeinfo name for std::__timepunct_cache<wchar_t>
00000000008ae348 0000000000000013 V typeinfo name for std::__timepunct<wchar_t>
00000000008ae360 0000000000000016 V typeinfo name for std::moneypunct<wchar_t, true>
00000000008ae378 0000000000000016 V typeinfo name for std::moneypunct<wchar_t, false>
00000000008ae390 000000000000000f V typeinfo name for std::messages<wchar_t>
00000000008ae3a0 000000000000002c V typeinfo name for std::__codecvt_abstract_base<wchar_t, char, _mbstate_t>
00000000008ae3d0 000000000000003c V typeinfo name for std::money_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >
00000000008ae410 000000000000003c V typeinfo name for std::money_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >
00000000008ae450 000000000000003b V typeinfo name for std::time_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >
00000000008ae490 000000000000003b V typeinfo name for std::time_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >
00000000008ae4d0 000000000000001e V typeinfo name for std::__moneypunct_cache<wchar_t, false>
00000000008ae4f0 000000000000001e V typeinfo name for std::__moneypunct_cache<wchar_t, true>
00000000008ae510 0000000000000018 V typeinfo name for std::__numpunct_cache<wchar_t>
00000000008ae528 000000000000000d V typeinfo name for std::bad_alloc
00000000008ae538 0000000000000019 V typeinfo name for std::bad_array_new_length
00000000008ae558 000000000000000c V typeinfo name for std::bad_cast
00000000008ae568 0000000000000022 V typeinfo name for __cxxabiv1::__class_type_info
00000000008ae590 000000000000000d V typeinfo name for std::exception
00000000008ae5a0 0000000000000012 V typeinfo name for std::bad_exception
00000000008ae5b8 0000000000000020 V typeinfo name for __cxxabiv1::__forced_unwind
00000000008ae5d8 0000000000000024 V typeinfo name for __cxxabiv1::__foreign_exception
00000000008ae600 0000000000000001 R std::nothrow
00000000008ae608 0000000000000026 V typeinfo name for __cxxabiv1::__vmi_class_type_info
00000000008ae630 000000000000001b V typeinfo name for std::codecvt<char, char, _mbstate_t>
00000000008ae650 000000000000001b V typeinfo name for std::codecvt<wchar_t, char, _mbstate_t>
00000000008ae670 0000000000000034 r std::(anonymous namespace)::mon_yday
00000000008ae6a8 0000000000000004 R std::money_base::_S_default_pattern
00000000008aedb8 0000000000000010 V typeinfo name for std::logic_error
00000000008aedc8 0000000000000011 V typeinfo name for std::length_error
00000000008aede0 0000000000000011 V typeinfo name for std::out_of_range
00000000008aedf8 0000000000000012 V typeinfo name for std::runtime_error
00000000008aee10 000000000000002d V typeinfo name for std::__codecvt_abstract_base<char16_t, char, _mbstate_t>
00000000008aee40 000000000000001c V typeinfo name for std::codecvt<char16_t, char, _mbstate_t>
00000000008aee60 000000000000002d V typeinfo name for std::__codecvt_abstract_base<char32_t, char, _mbstate_t>
00000000008aee90 000000000000001c V typeinfo name for std::codecvt<char32_t, char, _mbstate_t>
00000000008aeeb0 000000000000002e V typeinfo name for std::__codecvt_abstract_base<char16_t, char8_t, _mbstate_t>
00000000008aeee0 000000000000001d V typeinfo name for std::codecvt<char16_t, char8_t, _mbstate_t>
00000000008aef00 000000000000002e V typeinfo name for std::__codecvt_abstract_base<char32_t, char8_t, _mbstate_t>
00000000008aef30 000000000000001d V typeinfo name for std::codecvt<char32_t, char8_t, _mbstate_t>
00000000008aef50 000000000000001d V typeinfo name for std::ios_base::failure[abi:cxx11]
00000000008aef70 0000000000000012 V typeinfo name for std::__ios_failure
00000000008aef88 0000000000000018 V typeinfo name for std::__iosfail_type_info
00000000008af050 0000000000000018 V typeinfo name for std::__cxx11::collate<char>
00000000008af068 0000000000000019 V typeinfo name for std::__cxx11::numpunct<char>
00000000008af088 0000000000000020 V typeinfo name for std::__cxx11::moneypunct<char, true>
00000000008af0a8 0000000000000020 V typeinfo name for std::__cxx11::moneypunct<char, false>
00000000008af0c8 0000000000000019 V typeinfo name for std::__cxx11::messages<char>
00000000008af0e8 0000000000000046 V typeinfo name for std::__cxx11::money_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >
00000000008af130 0000000000000046 V typeinfo name for std::__cxx11::money_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >
00000000008af178 0000000000000045 V typeinfo name for std::__cxx11::time_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >
00000000008af1c0 0000000000000025 r typeinfo name for (anonymous namespace)::io_error_category
00000000008af1e8 0000000000000016 V typeinfo name for std::ios_base::failure
00000000008af200 0000000000000800 r vwin1024
00000000008afa00 0000000000000100 r vwin128
00000000008afb00 0000000000001000 r vwin2048
00000000008b0b00 0000000000000200 r vwin256
00000000008b0d00 0000000000002000 r vwin4096
00000000008b2d00 0000000000000400 r vwin512
00000000008b3100 0000000000000080 r vwin64
00000000008b3180 0000000000004000 r vwin8192
00000000008b7180 0000000000000400 r FLOOR_fromdB_LOOKUP
00000000008b7580 0000000000000010 r ADJUST_SQRT2
00000000008b7590 0000000000000204 r COS_LOOKUP_I
00000000008b7798 0000000000000080 r FROMdB2_LOOKUP
00000000008b7818 000000000000008c r FROMdB_LOOKUP
00000000008b78a8 0000000000000208 r INVSQ_LOOKUP_I
00000000008b7ab0 0000000000000200 r INVSQ_LOOKUP_IDel
00000000008b7cb0 0000000000000040 r MLOOP_1
00000000008b7cf0 0000000000000040 r MLOOP_2
00000000008b7d30 0000000000000008 r MLOOP_3
00000000008b7d38 0000000000000070 r barklook
00000000008b7da8 0000000000000010 r bitrev
00000000008b7db8 0000000000001008 r sincos_lookup0
00000000008b8dc0 0000000000001000 r sincos_lookup1
00000000008b9dc0 0000000000002000 r crc_lookup
00000000008bbdc0 0000000000000108 r mask
00000000008bbec8 0000000000000010 r __func__.0
00000000008bbed8 0000000000000010 r __func__.1
00000000008bbee8 000000000000001b r __func__.2
00000000008bbf10 0000000000000030 r my_encodings
00000000008bbf40 0000000000000048 r my_rates
00000000008bbf88 0000000000000015 r __func__.0
00000000008bbfa0 000000000000001b r __func__.0
00000000008bbfc0 0000000000000008 r __func__.1
00000000008bbfc8 000000000000000d r __func__.2
00000000008bbfd8 000000000000000e r __func__.3
00000000008bbfe8 0000000000000008 r __func__.4
00000000008bbff0 000000000000001b r __func__.5
00000000008bc010 000000000000000e r __func__.6
00000000008bc020 000000000000000a r __func__.7
00000000008bc030 0000000000000048 r freqs
00000000008bc080 0000000000000180 r tabsel_123
00000000008bc200 000000000000000e r __func__.0
00000000008bc210 000000000000001c r __func__.1
00000000008bc230 0000000000000014 r __func__.2
00000000008bc248 000000000000001f r __func__.3
00000000008bc268 0000000000000012 r __func__.4
00000000008bc280 0000000000000016 r __func__.5
00000000008bc298 0000000000000019 r __func__.6
00000000008bc2b8 0000000000000017 r __func__.7
00000000008bc2d0 0000000000000010 r __func__.0
00000000008bc2e0 000000000000000d r __func__.1
00000000008bc2f0 000000000000000e r __func__.2
00000000008bc300 000000000000000f r __func__.3
00000000008bc310 0000000000000010 r __func__.4
00000000008bc320 0000000000000015 r __func__.5
00000000008bc338 000000000000000c r __func__.6
00000000008bc348 0000000000000011 r __func__.7
00000000008bc360 0000000000000013 r __func__.8
00000000008bc380 0000000000000010 r encoding_widths
00000000008bc390 0000000000000019 r frame_type
00000000008bc3b0 0000000000000015 r __func__.0
00000000008bc3c8 000000000000000d r __func__.1
00000000008bc3d8 000000000000001b r __func__.2
00000000008bc3f8 0000000000000006 r dn_nodec
00000000008bc400 000000000000000c r dn_sse_vintage
00000000008bc410 0000000000000011 r dn_dreidnowext_vintage
00000000008bc428 000000000000000e r dn_dreidnow_vintage
00000000008bc438 0000000000000004 r dn_avx
00000000008bc440 0000000000000007 r dn_neon64
00000000008bc448 0000000000000005 r dn_neon
00000000008bc450 0000000000000004 r dn_arm
00000000008bc458 0000000000000007 r dn_x86_64
00000000008bc460 0000000000000004 r dn_sse
00000000008bc468 0000000000000008 r dn_altivec
00000000008bc470 0000000000000009 r dn_dreidnowext
00000000008bc480 0000000000000006 r dn_dreidnow
00000000008bc488 0000000000000004 r dn_mmx
00000000008bc490 000000000000000c r dn_ifuenf_dither
00000000008bc4a0 0000000000000005 r dn_ifuenf
00000000008bc4a8 0000000000000005 r dn_ivier
00000000008bc4b0 0000000000000005 r dn_idrei
00000000008bc4b8 000000000000000f r dn_generic_dither
00000000008bc4c8 0000000000000008 r dn_generic
00000000008bc4d0 0000000000000005 r dn_autodec
00000000008bc4d8 000000000000000d r __func__.1
00000000008bc4e8 000000000000000d r __func__.2
00000000008bc4f8 0000000000000012 r __func__.3
00000000008bc510 0000000000000011 r __func__.5
00000000008bc528 000000000000001c r __func__.0
00000000008bc550 0000000000000808 r intwinbase
00000000008bcd58 0000000000000004 r cos4
00000000008bcd60 0000000000000008 r cos8
00000000008bcd70 0000000000000010 r cos16
00000000008bcd80 0000000000000020 r cos32
00000000008bcda0 0000000000000040 r cos64
00000000008bcde0 0000000000000008 r __func__.0
00000000008bcde8 000000000000000b r __func__.1
00000000008bcdf8 000000000000000d r __func__.2
00000000008bce08 000000000000000b r __func__.3
00000000008bce18 0000000000000011 r __func__.4
00000000008bce30 0000000000000008 r __func__.0
00000000008bce38 000000000000000c r __func__.1
00000000008bce48 0000000000000011 r __func__.2
00000000008bce60 0000000000000c00 r grp_9tab
00000000008bda60 0000000000000180 r grp_5tab
00000000008bdbe0 0000000000000060 r grp_3tab
00000000008bdc40 0000000000001b00 r layer12_table
00000000008bf740 0000000000000310 r alloc_4
00000000008bfa50 00000000000001c0 r alloc_3
00000000008bfc10 0000000000000140 r alloc_2
00000000008bfd50 00000000000004b0 r alloc_1
00000000008c0200 0000000000000480 r alloc_0
00000000008c0818 0000000000000016 r __func__.0
00000000008c0830 0000000000000008 r __func__.1
00000000008c0838 0000000000000012 r __func__.2
00000000008c0850 0000000000000011 r __func__.3
00000000008c0868 00000000000003de r bandInfo
00000000008c0c50 0000000000000200 r i_slen2
00000000008c0e50 0000000000000400 r n_slen2
00000000008c1250 0000000000000318 r mapbuf2
00000000008c1570 0000000000000af8 r mapbuf1
00000000008c2070 0000000000000ab0 r mapbuf0
00000000008c2b20 0000000000000100 r pow2_2
00000000008c2c20 0000000000000100 r pow1_2
00000000008c2d20 0000000000000100 r pow2_1
00000000008c2e20 0000000000000100 r pow1_1
00000000008c2f20 0000000000000040 r tan2_2
00000000008c2f60 0000000000000040 r tan1_2
00000000008c2fa0 0000000000000040 r tan2_1
00000000008c2fe0 0000000000000040 r tan1_1
00000000008c3020 0000000000000240 r win1
00000000008c3260 0000000000000240 r win
00000000008c34a0 000000000000803c r ispow
00000000008cb4e0 000000000000003e r tab_c1
00000000008cb520 000000000000003e r tab_c0
00000000008cb560 0000000000000800 r tab24_
00000000008cbd60 0000000000000820 r tab16_
00000000008cc580 00000000000007e0 r tab15_
00000000008ccd60 00000000000007e0 r tab13_
00000000008cd540 00000000000001e0 r tab12_
00000000008cd720 00000000000001e0 r tab11_
00000000008cd900 0000000000000220 r tab10_
00000000008cdb20 0000000000000100 r tab9_
00000000008cdc20 0000000000000100 r tab8_
00000000008cdd20 0000000000000120 r tab7_
00000000008cde40 0000000000000080 r tab6_
00000000008cdec0 0000000000000060 r tab5_
00000000008cdf20 0000000000000060 r tab3_
00000000008cdf80 0000000000000060 r tab2_
00000000008cdfe0 0000000000000020 r tab1_
00000000008ce000 0000000000000020 r tab0_
00000000008ce0b0 0000000000000040 r PreAmpTable
00000000008ce0f0 0000000000000080 r ModSinusTable
00000000008ce170 0000000000000080 r ModRandomTable
00000000008ce1f0 0000000000000080 r ModSquareTable
00000000008ce270 0000000000000040 r PreAmpAGCTable
00000000008ce2b0 0000000000000100 r ft2VibratoTable
00000000008ce3b0 0000000000000080 r ModRampDownTable
00000000008ce430 0000000000000400 r LinearSlideUpTable
00000000008ce830 0000000000000400 r LinearSlideDownTable
00000000008cec30 0000000000000040 r FineLinearSlideUpTable
00000000008cec70 0000000000000040 r FineLinearSlideDownTable
00000000008cecf0 0000000000000020 r FreqS3MTable
00000000008ced10 0000000000000010 r retrigTable1
00000000008ced20 0000000000000010 r retrigTable2
00000000008ced30 0000000000000c00 r XMLinearTable
00000000008cf930 00000000000000d0 r XMPeriodTable
00000000008cfa00 0000000000000020 r S3MFineTuneTable
00000000008cfa20 0000000000000400 r LinearSlideUpTable
00000000008cfe20 0000000000000400 r LinearSlideDownTable
00000000008d0220 0000000000000090 r ProTrackerPeriodTable
00000000008d02b0 0000000000000040 r FineLinearSlideUpTable
00000000008d02f0 0000000000000180 r ProTrackerTunedPeriods
00000000008d0470 0000000000000040 r FineLinearSlideDownTable
00000000008d04b0 0000000000000010 r ImpulseTrackerPortaVolCmd
00000000008d04c8 0000000000000020 r MMCMP8BitFetch
00000000008d04e8 0000000000000040 r MMCMP16BitFetch
00000000008d0528 0000000000000020 r MMCMP8BitCommands
00000000008d0548 0000000000000040 r MMCMP16BitCommands
00000000008d05f8 000000000000003c r CSWTCH.23
00000000008d0638 000000000000003c r CSWTCH.24
00000000008d0678 000000000000000a r bpmvals
00000000008d06f0 0000000000000010 r abc_setup_chordnames()::list_7sus4
00000000008d0700 0000000000000010 r abc_setup_chordnames()::list_7sus9
00000000008d0710 0000000000000014 r abc_setup_chordnames()::list_9sus4
00000000008d0728 0000000000000008 r abc_setup_chordnames()::list_5
00000000008d0730 0000000000000010 r abc_setup_chordnames()::list_6
00000000008d0740 0000000000000010 r abc_setup_chordnames()::list_7
00000000008d0750 0000000000000014 r abc_setup_chordnames()::list_9
00000000008d0768 000000000000000c r abc_setup_chordnames()::list_m
00000000008d0778 0000000000000018 r abc_setup_chordnames()::list_11
00000000008d0790 0000000000000018 r abc_setup_chordnames()::list_13
00000000008d07a8 0000000000000010 r abc_setup_chordnames()::list_M7
00000000008d07b8 0000000000000014 r abc_setup_chordnames()::list_M9
00000000008d07d0 0000000000000010 r abc_setup_chordnames()::list_m6
00000000008d07e0 0000000000000010 r abc_setup_chordnames()::list_m7
00000000008d07f0 0000000000000014 r abc_setup_chordnames()::list_m9
00000000008d0808 000000000000000c r abc_setup_chordnames()::list_Maj
00000000008d0818 000000000000000c r abc_setup_chordnames()::list_aug
00000000008d0828 000000000000000c r abc_setup_chordnames()::list_dim
00000000008d0838 000000000000000c r abc_setup_chordnames()::list_sus
00000000008d0848 0000000000000010 r abc_setup_chordnames()::list_7sus
00000000008d0858 0000000000000010 r abc_setup_chordnames()::list_aug7
00000000008d0868 0000000000000010 r abc_setup_chordnames()::list_dim7
00000000008d0878 0000000000000014 r abc_setup_chordnames()::list_dim9
00000000008d0890 0000000000000010 r abc_setup_chordnames()::list_maj7
00000000008d08a0 0000000000000014 r abc_setup_chordnames()::list_maj9
00000000008d08b8 000000000000000c r abc_setup_chordnames()::list_plus
00000000008d08c8 000000000000000c r abc_setup_chordnames()::list_sus9
00000000008d1cd8 0000000000000027 r CSWTCH.60
00000000008d1d00 0000000000000041 r tune
00000000008d1d48 0000000000000014 r CSWTCH.1001
00000000008d1d70 0000000000000024 r s_emptyFence.0
00000000008d1e10 0000000000000023 r g_bq_InterfaceDescriptor
00000000008d1e40 0000000000000086 r _error_code_map
00000000008d1ec8 0000000000000020 r error_table
00000000008d1ee8 000000000000000d r kModeBpp
00000000008d1ef8 0000000000000003 r kFilterExtraRows
00000000008d1f00 000000000000000c r kQuantToDitherAmp
00000000008d1f10 0000000000000020 r kScan
00000000008d1f30 0000000000000030 r CSWTCH.31
00000000008d1f60 0000000000000004 r kCat3
00000000008d1f68 0000000000000005 r kCat4
00000000008d1f70 0000000000000006 r kCat5
00000000008d1f78 000000000000000c r kCat6
00000000008d1f88 0000000000000010 r kZigzag
00000000008d1f98 000000000000000a r kAlphabetSize
00000000008d1fa8 0000000000000013 r kCodeLengthCodeOrder
00000000008d1fc0 0000000000000003 r kCodeLengthExtraBits
00000000008d1fc8 0000000000000003 r kCodeLengthRepeatOffsets
00000000008d1fd0 0000000000000078 r kCodeToPlane
00000000008d2048 0000000000000005 r kLiteralMap
00000000008d2050 0000000000000018 r kTableSize
00000000008d20e0 0000000000000008 r k0g0g.0
00000000008d20e8 0000000000000008 r kGreenShuffle
00000000008d20f0 0000000000000008 r kCoeffs1
00000000008d20f8 0000000000000064 r kBitMask
00000000008d2160 0000000000000080 R kVP8Log2Range
00000000008d21e0 0000000000000080 R kVP8NewRange
00000000008d2260 00000000000000dc r kRandomTable
00000000008d2340 0000000000000100 r kAcTable
00000000008d2440 0000000000000080 r kDcTable
00000000008d24c0 0000000000000420 r CoeffsProba0
00000000008d28e0 0000000000000420 r CoeffsUpdateProba
00000000008d2d00 0000000000000384 r kBModesProba
00000000008d3088 0000000000000011 r kBands
00000000008d30f0 0000000000000100 r canon_map
00000000008d31f0 0000000000000048 r _pow10(unsigned int)::_powers_of_10
00000000008d3238 000000000000000a r _double_parser_trans_actions
00000000008d3248 000000000000000a r _double_parser_trans_targs
00000000008d3260 00000000000000bf r _double_parser_indicies
00000000008d3320 0000000000000009 r _double_parser_index_offsets
00000000008d3330 0000000000000009 r _double_parser_key_spans
00000000008d3340 0000000000000013 r _double_parser_trans_keys
00000000008d33e0 000000000000040c r format1_names_msgidx
00000000008d37f0 000000000000073a r format1_names_msgstr
00000000008d3f30 0000000000000620 r cff1_std_strings_msgidx
00000000008d4550 0000000000000d73 r cff1_std_strings_msgstr
00000000008d52d0 00000000000005a0 r _hb_arabic_u16
00000000008d5870 00000000000001d0 r _hb_arabic_u8
00000000008d5b30 0000000000000038 r horizontal_features
00000000008d5b70 0000000000000038 r common_features
00000000008d5ba8 0000000000000002 R _hb_Null_AAT_Lookup
00000000008d5bb0 000000000000000c R _hb_Null_OT_CmapSubtableLongGroup
00000000008d5bc0 0000000000000009 R _hb_Null_OT_RangeRecord
00000000008d5bd0 0000000000000008 R _hb_Null_OT_LangSys
00000000008d5bd8 0000000000000002 R _hb_Null_OT_Index
00000000008d5be0 00000000000001c0 R _hb_NullPool
00000000008d5da0 00000000000001d0 r _hb_emoji_u8
00000000008d5f70 0000000000000100 R _hb_modified_combining_class
00000000008d60b0 00000000000005a0 r _hb_arabic_u16
00000000008d6650 00000000000001d0 r _hb_arabic_u8
00000000008d6820 00000000000004e0 r feature_mappings
00000000008d6d90 0000000000000100 r standard_encoding_to_sid
00000000008d6e90 0000000000000158 r expert_subset_charset_sid_to_gid
00000000008d6ff0 0000000000000294 r expert_charset_sid_to_gid
00000000008d7290 00000000000000ae r expert_subset_charset_to_sid
00000000008d7340 000000000000014c r expert_charset_to_sid
00000000008d7510 0000000000000008 r table_tags
00000000008d7520 0000000000000038 r modifier_combining_marks
00000000008d7560 000000000000001c r arabic_fallback_features
00000000008d7580 00000000000000a8 r arabic_state_table
00000000008d7630 0000000000000020 r arabic_features
00000000008d7650 0000000000000014 r ligature_3_table
00000000008d7668 0000000000000016 r ligature_mark_table
00000000008d7680 0000000000000414 r ligature_table
00000000008d7aa0 0000000000000598 r shaping_table
00000000008d8040 0000000000000597 r joining_table
00000000008d85d8 0000000000000001 r hb_first
00000000008d8660 0000000000000060 R _hb_ot_shaper_dumber
00000000008d86c0 0000000000000060 R _hb_ot_shaper_default
00000000008d8720 0000000000000010 r hangul_features
00000000008d8730 000000000000006c r compose_hebrew(hb_ot_shape_normalize_context_t const*, unsigned int, unsigned int, unsigned int*)::sDageshForms
00000000008d87d0 0000000000000088 r indic_features
00000000008d8858 00000000000000f0 r indic_configs
00000000008d8950 0000000000000114 r _indic_syllable_machine_eof_trans
00000000008d8a70 000000000000008a r _indic_syllable_machine_from_state_actions
00000000008d8b00 000000000000008a r _indic_syllable_machine_to_state_actions
00000000008d8b90 0000000000000096 r _indic_syllable_machine_trans_actions
00000000008d8c30 0000000000000096 r _indic_syllable_machine_trans_targs
00000000008d8cd0 000000000000059f r _indic_syllable_machine_indicies
00000000008d9270 0000000000000114 r _indic_syllable_machine_index_offsets
00000000008d9390 000000000000008a r _indic_syllable_machine_key_spans
00000000008d9420 0000000000000115 r _indic_syllable_machine_trans_keys
00000000008d9540 0000000000000048 r khmer_features
00000000008d9590 0000000000000056 r _khmer_syllable_machine_eof_trans
00000000008d95f0 000000000000002b r _khmer_syllable_machine_from_state_actions
00000000008d9620 000000000000002b r _khmer_syllable_machine_to_state_actions
00000000008d9650 0000000000000031 r _khmer_syllable_machine_trans_actions
00000000008d9690 0000000000000031 r _khmer_syllable_machine_trans_targs
00000000008d96d0 00000000000003bd r _khmer_syllable_machine_indicies
00000000008d9a90 0000000000000056 r _khmer_syllable_machine_index_offsets
00000000008d9af0 000000000000002b r _khmer_syllable_machine_key_spans
00000000008d9b20 0000000000000057 r _khmer_syllable_machine_trans_keys
00000000008d9b78 0000000000000060 R _hb_ot_shaper_myanmar_zawgyi
00000000008d9be0 0000000000000010 r myanmar_other_features
00000000008d9bf0 0000000000000010 r myanmar_basic_features
00000000008d9c00 000000000000006e r _myanmar_syllable_machine_eof_trans
00000000008d9c70 0000000000000037 r _myanmar_syllable_machine_from_state_actions
00000000008d9cb0 0000000000000037 r _myanmar_syllable_machine_to_state_actions
00000000008d9cf0 000000000000003d r _myanmar_syllable_machine_trans_actions
00000000008d9d30 000000000000003d r _myanmar_syllable_machine_trans_targs
00000000008d9d70 00000000000007cd r _myanmar_syllable_machine_indicies
00000000008da540 000000000000006e r _myanmar_syllable_machine_index_offsets
00000000008da5b0 0000000000000037 r _myanmar_syllable_machine_key_spans
00000000008da5f0 000000000000006f r _myanmar_syllable_machine_trans_keys
00000000008da660 0000000000000048 r thai_below_state_machine
00000000008da6b0 0000000000000014 r thai_below_start_state
00000000008da6d0 0000000000000060 r thai_above_state_machine
00000000008da730 0000000000000014 r thai_above_start_state
00000000008da748 0000000000000012 r thai_pua_shape(unsigned int, thai_action_t, hb_font_t*)::RD_mappings
00000000008da760 000000000000004e r thai_pua_shape(unsigned int, thai_action_t, hb_font_t*)::SL_mappings
00000000008da7b0 0000000000000024 r thai_pua_shape(unsigned int, thai_action_t, hb_font_t*)::SDL_mappings
00000000008da7d8 0000000000000036 r thai_pua_shape(unsigned int, thai_action_t, hb_font_t*)::SD_mappings
00000000008da840 0000000000000014 r use_other_features
00000000008da860 0000000000000010 r use_topographical_features
00000000008da870 000000000000001c r use_basic_features
00000000008da890 0000000000000620 r hb_use_u16
00000000008daeb0 0000000000000c45 r hb_use_u8
00000000008dbb00 00000000000000fc r _use_syllable_machine_eof_trans
00000000008dbc00 000000000000007e r _use_syllable_machine_from_state_actions
00000000008dbc80 000000000000007e r _use_syllable_machine_to_state_actions
00000000008dbd00 000000000000008f r _use_syllable_machine_trans_actions
00000000008dbd90 000000000000008f r _use_syllable_machine_trans_targs
00000000008dbe20 000000000000118b r _use_syllable_machine_indicies
00000000008dcfb0 00000000000000fc r _use_syllable_machine_index_offsets
00000000008dd0b0 000000000000007e r _use_syllable_machine_key_spans
00000000008dd130 00000000000000fd r _use_syllable_machine_trans_keys
00000000008dd230 0000000000000001 r hb_second
00000000008dd238 0000000000000001 r hb_identity
00000000008dd310 00000000000025c8 r ot_languages3
00000000008df8e0 0000000000000658 r ot_languages2
00000000008dff40 0000000000000188 r _hb_ucd_i16
00000000008e00d0 00000000000048d0 r _hb_ucd_u16
00000000008e49a0 00000000000045cc r _hb_ucd_u8
00000000008e8f70 0000000000000c20 r _hb_ucd_dm2_u64_map
00000000008e9b90 00000000000009f8 r _hb_ucd_dm2_u32_map
00000000008ea590 00000000000000dc r _hb_ucd_dm1_p2_map
00000000008ea670 0000000000000672 r _hb_ucd_dm1_p0_map
00000000008eacf0 0000000000000294 r _hb_ucd_sc_map
00000000008eaf90 0000000000000d80 r indic_table
00000000008ebd10 0000000000000010 r atanlo
00000000008ebd20 0000000000000010 r atanhi
00000000008ebd30 0000000000000080 r npio2_hw
00000000008ebdb0 0000000000000108 r two_over_pi
00000000008ebeb8 0000000000000008 r Zero
00000000008ebec0 0000000000000040 r PIo2
00000000008ebf00 0000000000000010 r init_jk
00000000008ebf10 0000000000000060 R __inv_pio4
00000000008ebf70 00000000000000e0 R __sincosf_table
00000000008ec050 0000000000000870 R __exp_data
00000000008ec8c0 0000000000001048 R __pow_log_data
00000000008ed910 0000000000000890 R __log_data
00000000008ee1a0 0000000000000018 r CSWTCH.9
00000000008ee1b8 0000000000000018 r CSWTCH.8
00000000008ee1d0 0000000000000128 R __powf_log2_data
00000000008ee300 0000000000000120 R __log2f_data
00000000008ee420 0000000000000020 r atanlo
00000000008ee440 0000000000000020 r atanhi
00000000008ee460 000000000000000c r CSWTCH.9
00000000008ee470 000000000000000c r CSWTCH.8
00000000008ee480 0000000000000148 R __exp2f_data
00000000008ee5d0 0000000000000080 r npio2_hw
00000000008ee650 0000000000000318 r two_over_pi
00000000008ee968 0000000000000120 R __logf_data
00000000008eea90 000000000000002c r PIo2
00000000008eeac0 000000000000000c r init_jk
00000000008eead0 0000000000000490 R __log2_data
00000000008ef078 0000000000000008 r terminator.0
00000000008ef080 0000000000000001 R __aarch64_have_sme
00000000008ef2c0 0000000000000014 r fpinan.0
00000000008ef2d8 0000000000000014 r fpi.1
00000000008ef2f0 0000000000000028 r tinytens
00000000008ef3c8 0000000000000100 R __hexdig
00000000008ef4d0 0000000000000048 r JIS_action_table
00000000008ef520 0000000000000048 r JIS_state_table
00000000008ef6a0 0000000000000010 r zeroes.0
00000000008ef6b0 0000000000000010 r blanks.1
00000000008ef7c0 0000000000000010 r zeroes.0
00000000008ef7d0 0000000000000010 r blanks.1
00000000008ef7e0 0000000000000101 R _ctype_
00000000008efa80 0000000000000040 r zeroes.0
00000000008efac0 0000000000000040 r blanks.1
00000000008efc00 0000000000000022 r basefix.0
00000000008efd20 0000000000000010 r zeroes.0
00000000008efd30 0000000000000010 r blanks.1
00000000008efd40 000000000000006c R __action_table
00000000008efdb0 000000000000006c R __state_table
00000000008efe20 0000000000000100 R __chclass
00000000008eff30 000000000000000c r p05.0
00000000008eff40 0000000000000028 R __mprec_bigtens
00000000008eff68 00000000000000c8 R __mprec_tens
00000000008f0130 0000000000000010 r zeroes.0
00000000008f0140 0000000000000010 r blanks.1
00000000008f01c0 0000000000000022 r basefix.0
00000000008f01e8 0000000000000060 R __month_lengths
00000000008f0248 00000000000035dc r categories
00000000008f3828 r __tls_align
00000000008f547d r __eh_frame_hdr_end
00000000008f547d r __eh_frame_hdr_start
00000000008f5480 r __EH_FRAME_BEGIN__
00000000009e0b18 r __FRAME_END__
00000000009e1000 d __init_array_start
00000000009e1000 d __preinit_array_end
00000000009e1000 d __preinit_array_start
00000000009e1000 d __relro_start
00000000009e1008 d __frame_dummy_init_array_entry
00000000009e1080 d __fini_array_start
00000000009e1080 d __init_array_end
00000000009e1088 d __do_global_dtors_aux_fini_array_entry
00000000009e10b8 d __fini_array_end
00000000009e10c0 0000000000000070 d known.9876
00000000009e1130 0000000000000038 d SDL_priority_prefixes
00000000009e1170 0000000000000200 d channel_converters
00000000009e1370 00000000000000b0 d map_StringForControllerButton
00000000009e1420 0000000000000038 d map_StringForControllerAxis
00000000009e1458 00000000000020b0 d arrControllers
00000000009e3510 0000000000000020 d getpixes
00000000009e3530 0000000000000028 d colorkey_blit
00000000009e3560 0000000000000028 d bitmap_blit
00000000009e3590 0000000000000028 d one_blitkey
00000000009e35c0 0000000000000028 d one_blit
00000000009e35f0 0000000000000020 d normal_blit
00000000009e3610 00000000000001b0 d normal_blit_4
00000000009e37c0 0000000000000150 d normal_blit_3
00000000009e3910 0000000000000150 d normal_blit_2
00000000009e3a60 0000000000000030 d normal_blit_1
00000000009e3a90 0000000000000048 d fft_state48000_960_0
00000000009e3ad8 0000000000000048 d fft_state48000_960_1
00000000009e3b20 0000000000000048 d fft_state48000_960_2
00000000009e3b68 0000000000000048 d fft_state48000_960_3
00000000009e3bb0 00000000000000a0 d mode48000_960_120
00000000009e3c50 0000000000000010 D silk_LBRR_flags_iCDF_ptr
00000000009e3c60 0000000000000078 d CELT_PVQ_U_ROW
00000000009e3cd8 0000000000000018 D silk_LTP_gain_iCDF_ptrs
00000000009e3cf0 0000000000000018 D silk_LTP_vq_ptrs_Q7
00000000009e3d08 0000000000000048 D silk_NLSF_CB_NB_MB
00000000009e3d50 0000000000000048 D silk_NLSF_CB_WB
00000000009e3d98 00000000000000a0 d configuration_table
00000000009e3e38 0000000000000020 d static_l_desc
00000000009e3e58 0000000000000020 d static_d_desc
00000000009e3e78 0000000000000020 d static_bl_desc
00000000009e3e98 0000000000000050 D z_errmsg
00000000009e3ee8 0000000000000410 D jpeg_std_message_table
00000000009e42f8 0000000000000090 d ft_raccess_guess_table
00000000009e4388 0000000000000040 D ft_svg_glyph_class
00000000009e43c8 0000000000000040 D ft_outline_glyph_class
00000000009e4408 0000000000000040 D ft_bitmap_glyph_class
00000000009e4448 00000000000000c0 D tt_driver_class
00000000009e4508 0000000000000070 d tt_services
00000000009e4578 0000000000000008 d tt_service_truetype_glyf
00000000009e4580 0000000000000048 d tt_service_metrics_variations
00000000009e45c8 0000000000000098 d tt_service_gx_multi_masters
00000000009e4660 0000000000000010 d tt_service_properties
00000000009e4670 00000000000008d0 d t1_keywords
00000000009e4f40 00000000000000c0 D t1_driver_class
00000000009e5000 0000000000000080 d t1_services
00000000009e5080 0000000000000008 d t1_service_kerning
00000000009e5088 0000000000000028 d t1_service_ps_info
00000000009e50b0 0000000000000098 d t1_service_multi_masters
00000000009e5148 0000000000000008 d t1_service_ps_name
00000000009e5150 0000000000000010 d t1_service_glyph_dict
00000000009e5160 00000000000009a0 d cff_field_handlers
00000000009e5b00 00000000000000c0 D cff_driver_class
00000000009e5bc0 00000000000000b0 d cff_services
00000000009e5c70 0000000000000028 d cff_service_cff_load
00000000009e5c98 0000000000000048 d cff_service_metrics_variations
00000000009e5ce0 0000000000000098 d cff_service_multi_masters
00000000009e5d78 0000000000000018 d cff_service_cid_info
00000000009e5d90 0000000000000008 d cff_service_get_cmap_info
00000000009e5d98 0000000000000008 d cff_service_ps_name
00000000009e5da0 0000000000000028 d cff_service_ps_info
00000000009e5dc8 0000000000000010 d cff_service_glyph_dict
00000000009e5dd8 0000000000000050 D cff_cmap_unicode_class_rec
00000000009e5e28 0000000000000050 D cff_cmap_encoding_class_rec
00000000009e5e78 00000000000000c0 D t1cid_driver_class
00000000009e5f38 0000000000000060 d cid_services
00000000009e5f98 0000000000000018 d cid_service_cid_info
00000000009e5fb0 0000000000000028 d cid_service_ps_info
00000000009e5fd8 0000000000000008 d cid_service_ps_name
00000000009e5fe0 00000000000009f0 d cid_field_records
00000000009e69d0 0000000000000050 d pfr_phy_font_extra_items
00000000009e6a20 00000000000000c0 D pfr_driver_class
00000000009e6ae0 0000000000000030 d pfr_services
00000000009e6b10 0000000000000018 d pfr_metrics_service_rec
00000000009e6b28 0000000000000050 D pfr_cmap_class_rec
00000000009e6b78 00000000000003c0 d t42_keywords
00000000009e6f38 00000000000000c0 D t42_driver_class
00000000009e6ff8 0000000000000050 d t42_services
00000000009e7048 0000000000000028 d t42_service_ps_info
00000000009e7070 0000000000000008 d t42_service_ps_font_name
00000000009e7078 0000000000000010 d t42_service_glyph_dict
00000000009e7088 00000000000000c0 D winfnt_driver_class
00000000009e7148 0000000000000030 d winfnt_services
00000000009e7178 0000000000000008 d winfnt_service_rec
00000000009e7180 0000000000000050 d fnt_cmap_class_rec
00000000009e71d0 00000000000000c0 D pcf_driver_class
00000000009e7290 0000000000000040 d pcf_services
00000000009e72d0 0000000000000010 d pcf_service_properties
00000000009e72e0 0000000000000010 d pcf_service_bdf
00000000009e72f0 0000000000000050 d pcf_cmap_class
00000000009e7340 00000000000000c0 D bdf_driver_class
00000000009e7400 0000000000000030 d bdf_services
00000000009e7430 0000000000000010 d bdf_service_bdf
00000000009e7440 0000000000000050 d bdf_cmap_class
00000000009e7490 00000000000007c8 d bdf_properties_
00000000009e7c60 0000000000000050 d tt_cmap_classes
00000000009e7cb0 0000000000000068 D tt_cmap_unicode_class_rec
00000000009e7d18 0000000000000068 D tt_cmap14_class_rec
00000000009e7d80 0000000000000068 D tt_cmap13_class_rec
00000000009e7de8 0000000000000068 D tt_cmap12_class_rec
00000000009e7e50 0000000000000068 D tt_cmap10_class_rec
00000000009e7eb8 0000000000000068 D tt_cmap8_class_rec
00000000009e7f20 0000000000000068 D tt_cmap6_class_rec
00000000009e7f88 0000000000000068 D tt_cmap4_class_rec
00000000009e7ff0 0000000000000068 D tt_cmap2_class_rec
00000000009e8058 0000000000000068 D tt_cmap0_class_rec
00000000009e80c0 0000000000000048 D sfnt_module_class
00000000009e8108 0000000000000170 d sfnt_interface
00000000009e8278 0000000000000060 d sfnt_services
00000000009e82d8 0000000000000010 d sfnt_service_bdf
00000000009e82e8 0000000000000008 d tt_service_get_cmap_info
00000000009e82f0 0000000000000008 d sfnt_service_ps_name
00000000009e82f8 0000000000000010 d sfnt_service_glyph_dict
00000000009e8308 0000000000000018 d sfnt_service_sfnt_table
00000000009e8320 0000000000000048 D autofit_module_class
00000000009e8368 0000000000000020 D af_autofitter_interface
00000000009e8388 0000000000000020 d af_services
00000000009e83a8 0000000000000010 d af_service_properties
00000000009e83b8 0000000000000040 D af_latin_writing_system_class
00000000009e83f8 0000000000000040 D af_indic_writing_system_class
00000000009e8440 00000000000002c0 D af_style_classes
00000000009e8700 00000000000001e8 D af_script_classes
00000000009e88f0 0000000000000028 D af_writing_system_classes
00000000009e8918 0000000000000028 D af_hani_script_class
00000000009e8940 0000000000000028 D af_tibt_script_class
00000000009e8968 0000000000000028 D af_sylo_script_class
00000000009e8990 0000000000000028 D af_orya_script_class
00000000009e89b8 0000000000000028 D af_limb_script_class
00000000009e89e0 0000000000000028 D af_vaii_script_class
00000000009e8a08 0000000000000028 D af_thai_script_class
00000000009e8a30 0000000000000028 D af_tfng_script_class
00000000009e8a58 0000000000000028 D af_telu_script_class
00000000009e8a80 0000000000000028 D af_tavt_script_class
00000000009e8aa8 0000000000000028 D af_taml_script_class
00000000009e8ad0 0000000000000028 D af_sund_script_class
00000000009e8af8 0000000000000028 D af_sinh_script_class
00000000009e8b20 0000000000000028 D af_shaw_script_class
00000000009e8b48 0000000000000028 D af_saur_script_class
00000000009e8b70 0000000000000028 D af_rohg_script_class
00000000009e8b98 0000000000000028 D af_osma_script_class
00000000009e8bc0 0000000000000028 D af_osge_script_class
00000000009e8be8 0000000000000028 D af_orkh_script_class
00000000009e8c10 0000000000000028 D af_olck_script_class
00000000009e8c38 0000000000000028 D af_none_script_class
00000000009e8c60 0000000000000028 D af_nkoo_script_class
00000000009e8c88 0000000000000028 D af_mymr_script_class
00000000009e8cb0 0000000000000028 D af_mong_script_class
00000000009e8cd8 0000000000000028 D af_medf_script_class
00000000009e8d00 0000000000000028 D af_mlym_script_class
00000000009e8d28 0000000000000028 D af_lisu_script_class
00000000009e8d50 0000000000000028 D af_latp_script_class
00000000009e8d78 0000000000000028 D af_latb_script_class
00000000009e8da0 0000000000000028 D af_latn_script_class
00000000009e8dc8 0000000000000028 D af_lao_script_class
00000000009e8df0 0000000000000028 D af_knda_script_class
00000000009e8e18 0000000000000028 D af_khms_script_class
00000000009e8e40 0000000000000028 D af_khmr_script_class
00000000009e8e68 0000000000000028 D af_kali_script_class
00000000009e8e90 0000000000000028 D af_hebr_script_class
00000000009e8eb8 0000000000000028 D af_guru_script_class
00000000009e8ee0 0000000000000028 D af_gujr_script_class
00000000009e8f08 0000000000000028 D af_grek_script_class
00000000009e8f30 0000000000000028 D af_goth_script_class
00000000009e8f58 0000000000000028 D af_glag_script_class
00000000009e8f80 0000000000000028 D af_geok_script_class
00000000009e8fa8 0000000000000028 D af_geor_script_class
00000000009e8fd0 0000000000000028 D af_ethi_script_class
00000000009e8ff8 0000000000000028 D af_dsrt_script_class
00000000009e9020 0000000000000028 D af_deva_script_class
00000000009e9048 0000000000000028 D af_cyrl_script_class
00000000009e9070 0000000000000028 D af_cprt_script_class
00000000009e9098 0000000000000028 D af_copt_script_class
00000000009e90c0 0000000000000028 D af_cher_script_class
00000000009e90e8 0000000000000028 D af_cari_script_class
00000000009e9110 0000000000000028 D af_cans_script_class
00000000009e9138 0000000000000028 D af_cakm_script_class
00000000009e9160 0000000000000028 D af_buhd_script_class
00000000009e9188 0000000000000028 D af_beng_script_class
00000000009e91b0 0000000000000028 D af_bamu_script_class
00000000009e91d8 0000000000000028 D af_avst_script_class
00000000009e9200 0000000000000028 D af_armn_script_class
00000000009e9228 0000000000000028 D af_arab_script_class
00000000009e9250 0000000000000028 D af_adlm_script_class
00000000009e9278 0000000000000040 D af_dummy_writing_system_class
00000000009e92b8 0000000000000040 D af_cjk_writing_system_class
00000000009e92f8 0000000000000048 D pshinter_module_class
00000000009e9340 0000000000000018 d pshinter_interface
00000000009e9358 0000000000000078 D ft_smooth_renderer_class
00000000009e93d0 0000000000000030 D ft_grays_raster
00000000009e9400 0000000000000030 d func_interface
00000000009e9430 0000000000000078 D ft_raster1_renderer_class
00000000009e94a8 0000000000000030 D ft_standard_raster
00000000009e94d8 0000000000000078 D ft_svg_renderer_class
00000000009e9550 0000000000000020 d ft_svg_services
00000000009e9570 0000000000000010 d ft_svg_service_properties
00000000009e9580 0000000000000008 d svg_interface
00000000009e9588 0000000000000030 D ft_sdf_raster
00000000009e95b8 0000000000000030 d sdf_decompose_funcs
00000000009e95e8 0000000000000030 D ft_bitmap_sdf_raster
00000000009e9618 0000000000000078 D ft_bitmap_sdf_renderer_class
00000000009e9690 0000000000000078 D ft_sdf_renderer_class
00000000009e9708 0000000000000020 d sdf_services
00000000009e9728 0000000000000010 d sdf_service_properties
00000000009e9738 0000000000000050 D t1_cmap_unicode_class_rec
00000000009e9788 0000000000000050 D t1_cmap_custom_class_rec
00000000009e97d8 0000000000000050 D t1_cmap_expert_class_rec
00000000009e9828 0000000000000050 D t1_cmap_standard_class_rec
00000000009e9878 0000000000000048 D psaux_module_class
00000000009e98c0 0000000000000058 d psaux_interface
00000000009e9918 0000000000000018 D cff_decoder_funcs
00000000009e9930 0000000000000040 D cff_builder_funcs
00000000009e9970 0000000000000020 D t1_cmap_classes
00000000009e9990 0000000000000018 D afm_parser_funcs
00000000009e99a8 0000000000000020 D t1_decoder_funcs
00000000009e99c8 0000000000000040 D t1_builder_funcs
00000000009e9a08 0000000000000068 D ps_parser_funcs
00000000009e9a70 0000000000000020 D ps_table_funcs
00000000009e9a90 0000000000000250 d afm_key_table
00000000009e9ce0 0000000000000048 D psnames_module_class
00000000009e9d28 0000000000000020 d pscmaps_services
00000000009e9d48 0000000000000040 d pscmaps_interface
00000000009e9d88 0000000000000080 d egl_platforms
00000000009e9e08 0000000000000020 d level_strings
00000000009e9e28 0000000000000048 d st_gl_api
00000000009e9e70 00000000000000d8 D util_format_a16_float_description
00000000009e9f48 00000000000000d8 D util_format_a16_sint_description
00000000009ea020 00000000000000d8 D util_format_a16_snorm_description
00000000009ea0f8 00000000000000d8 D util_format_a16_uint_description
00000000009ea1d0 00000000000000d8 D util_format_a16_unorm_description
00000000009ea2a8 00000000000000d8 D util_format_a1b5g5r5_uint_description
00000000009ea380 00000000000000d8 D util_format_a1b5g5r5_unorm_description
00000000009ea458 00000000000000d8 D util_format_a1r5g5b5_uint_description
00000000009ea530 00000000000000d8 D util_format_a1r5g5b5_unorm_description
00000000009ea608 00000000000000d8 D util_format_a2b10g10r10_uint_description
00000000009ea6e0 00000000000000d8 D util_format_a2b10g10r10_unorm_description
00000000009ea7b8 00000000000000d8 D util_format_a2r10g10b10_uint_description
00000000009ea890 00000000000000d8 D util_format_a2r10g10b10_unorm_description
00000000009ea968 00000000000000d8 D util_format_a32_float_description
00000000009eaa40 00000000000000d8 D util_format_a32_sint_description
00000000009eab18 00000000000000d8 D util_format_a32_uint_description
00000000009eabf0 00000000000000d8 D util_format_a4b4g4r4_uint_description
00000000009eacc8 00000000000000d8 D util_format_a4b4g4r4_unorm_description
00000000009eada0 00000000000000d8 D util_format_a4r4_unorm_description
00000000009eae78 00000000000000d8 D util_format_a4r4g4b4_uint_description
00000000009eaf50 00000000000000d8 D util_format_a4r4g4b4_unorm_description
00000000009eb028 00000000000000d8 D util_format_a8_sint_description
00000000009eb100 00000000000000d8 D util_format_a8_snorm_description
00000000009eb1d8 00000000000000d8 D util_format_a8_uint_description
00000000009eb2b0 00000000000000d8 D util_format_a8_unorm_description
00000000009eb388 00000000000000d8 D util_format_a8b8g8r8_sint_description
00000000009eb460 00000000000000d8 D util_format_a8b8g8r8_snorm_description
00000000009eb538 00000000000000d8 D util_format_a8b8g8r8_srgb_description
00000000009eb610 00000000000000d8 D util_format_a8b8g8r8_sscaled_description
00000000009eb6e8 00000000000000d8 D util_format_a8b8g8r8_uint_description
00000000009eb7c0 00000000000000d8 D util_format_a8b8g8r8_unorm_description
00000000009eb898 00000000000000d8 D util_format_a8b8g8r8_uscaled_description
00000000009eb970 00000000000000d8 D util_format_a8r8_unorm_description
00000000009eba48 00000000000000d8 D util_format_a8r8g8b8_srgb_description
00000000009ebb20 00000000000000d8 D util_format_a8r8g8b8_uint_description
00000000009ebbf8 00000000000000d8 D util_format_a8r8g8b8_unorm_description
00000000009ebcd0 00000000000000d8 D util_format_astc_10x10_description
00000000009ebda8 00000000000000d8 D util_format_astc_10x10_srgb_description
00000000009ebe80 00000000000000d8 D util_format_astc_10x5_description
00000000009ebf58 00000000000000d8 D util_format_astc_10x5_srgb_description
00000000009ec030 00000000000000d8 D util_format_astc_10x6_description
00000000009ec108 00000000000000d8 D util_format_astc_10x6_srgb_description
00000000009ec1e0 00000000000000d8 D util_format_astc_10x8_description
00000000009ec2b8 00000000000000d8 D util_format_astc_10x8_srgb_description
00000000009ec390 00000000000000d8 D util_format_astc_12x10_description
00000000009ec468 00000000000000d8 D util_format_astc_12x10_srgb_description
00000000009ec540 00000000000000d8 D util_format_astc_12x12_description
00000000009ec618 00000000000000d8 D util_format_astc_12x12_srgb_description
00000000009ec6f0 00000000000000d8 D util_format_astc_3x3x3_description
00000000009ec7c8 00000000000000d8 D util_format_astc_3x3x3_srgb_description
00000000009ec8a0 00000000000000d8 D util_format_astc_4x3x3_description
00000000009ec978 00000000000000d8 D util_format_astc_4x3x3_srgb_description
00000000009eca50 00000000000000d8 D util_format_astc_4x4_description
00000000009ecb28 00000000000000d8 D util_format_astc_4x4_srgb_description
00000000009ecc00 00000000000000d8 D util_format_astc_4x4x3_description
00000000009eccd8 00000000000000d8 D util_format_astc_4x4x3_srgb_description
00000000009ecdb0 00000000000000d8 D util_format_astc_4x4x4_description
00000000009ece88 00000000000000d8 D util_format_astc_4x4x4_srgb_description
00000000009ecf60 00000000000000d8 D util_format_astc_5x4_description
00000000009ed038 00000000000000d8 D util_format_astc_5x4_srgb_description
00000000009ed110 00000000000000d8 D util_format_astc_5x4x4_description
00000000009ed1e8 00000000000000d8 D util_format_astc_5x4x4_srgb_description
00000000009ed2c0 00000000000000d8 D util_format_astc_5x5_description
00000000009ed398 00000000000000d8 D util_format_astc_5x5_srgb_description
00000000009ed470 00000000000000d8 D util_format_astc_5x5x4_description
00000000009ed548 00000000000000d8 D util_format_astc_5x5x4_srgb_description
00000000009ed620 00000000000000d8 D util_format_astc_5x5x5_description
00000000009ed6f8 00000000000000d8 D util_format_astc_5x5x5_srgb_description
00000000009ed7d0 00000000000000d8 D util_format_astc_6x5_description
00000000009ed8a8 00000000000000d8 D util_format_astc_6x5_srgb_description
00000000009ed980 00000000000000d8 D util_format_astc_6x5x5_description
00000000009eda58 00000000000000d8 D util_format_astc_6x5x5_srgb_description
00000000009edb30 00000000000000d8 D util_format_astc_6x6_description
00000000009edc08 00000000000000d8 D util_format_astc_6x6_srgb_description
00000000009edce0 00000000000000d8 D util_format_astc_6x6x5_description
00000000009eddb8 00000000000000d8 D util_format_astc_6x6x5_srgb_description
00000000009ede90 00000000000000d8 D util_format_astc_6x6x6_description
00000000009edf68 00000000000000d8 D util_format_astc_6x6x6_srgb_description
00000000009ee040 00000000000000d8 D util_format_astc_8x5_description
00000000009ee118 00000000000000d8 D util_format_astc_8x5_srgb_description
00000000009ee1f0 00000000000000d8 D util_format_astc_8x6_description
00000000009ee2c8 00000000000000d8 D util_format_astc_8x6_srgb_description
00000000009ee3a0 00000000000000d8 D util_format_astc_8x8_description
00000000009ee478 00000000000000d8 D util_format_astc_8x8_srgb_description
00000000009ee550 00000000000000d8 D util_format_atc_rgb_description
00000000009ee628 00000000000000d8 D util_format_atc_rgba_explicit_description
00000000009ee700 00000000000000d8 D util_format_atc_rgba_interpolated_description
00000000009ee7d8 00000000000000d8 D util_format_b10g10r10a2_sint_description
00000000009ee8b0 00000000000000d8 D util_format_b10g10r10a2_snorm_description
00000000009ee988 00000000000000d8 D util_format_b10g10r10a2_sscaled_description
00000000009eea60 00000000000000d8 D util_format_b10g10r10a2_uint_description
00000000009eeb38 00000000000000d8 D util_format_b10g10r10a2_unorm_description
00000000009eec10 00000000000000d8 D util_format_b10g10r10a2_uscaled_description
00000000009eece8 00000000000000d8 D util_format_b10g10r10x2_unorm_description
00000000009eedc0 00000000000000d8 D util_format_b2g3r3_uint_description
00000000009eee98 00000000000000d8 D util_format_b2g3r3_unorm_description
00000000009eef70 00000000000000d8 D util_format_b4g4r4a4_uint_description
00000000009ef048 00000000000000d8 D util_format_b4g4r4a4_unorm_description
00000000009ef120 00000000000000d8 D util_format_b4g4r4x4_unorm_description
00000000009ef1f8 00000000000000d8 D util_format_b5g5r5a1_uint_description
00000000009ef2d0 00000000000000d8 D util_format_b5g5r5a1_unorm_description
00000000009ef3a8 00000000000000d8 D util_format_b5g5r5x1_unorm_description
00000000009ef480 00000000000000d8 D util_format_b5g6r5_srgb_description
00000000009ef558 00000000000000d8 D util_format_b5g6r5_uint_description
00000000009ef630 00000000000000d8 D util_format_b5g6r5_unorm_description
00000000009ef708 00000000000000d8 D util_format_b8g8r8_sint_description
00000000009ef7e0 00000000000000d8 D util_format_b8g8r8_snorm_description
00000000009ef8b8 00000000000000d8 D util_format_b8g8r8_srgb_description
00000000009ef990 00000000000000d8 D util_format_b8g8r8_sscaled_description
00000000009efa68 00000000000000d8 D util_format_b8g8r8_uint_description
00000000009efb40 00000000000000d8 D util_format_b8g8r8_unorm_description
00000000009efc18 00000000000000d8 D util_format_b8g8r8_uscaled_description
00000000009efcf0 00000000000000d8 D util_format_b8g8r8a8_sint_description
00000000009efdc8 00000000000000d8 D util_format_b8g8r8a8_snorm_description
00000000009efea0 00000000000000d8 D util_format_b8g8r8a8_srgb_description
00000000009eff78 00000000000000d8 D util_format_b8g8r8a8_sscaled_description
00000000009f0050 00000000000000d8 D util_format_b8g8r8a8_uint_description
00000000009f0128 00000000000000d8 D util_format_b8g8r8a8_unorm_description
00000000009f0200 00000000000000d8 D util_format_b8g8r8a8_uscaled_description
00000000009f02d8 00000000000000d8 D util_format_b8g8r8x8_srgb_description
00000000009f03b0 00000000000000d8 D util_format_b8g8r8x8_unorm_description
00000000009f0488 00000000000000d8 D util_format_etc2_r11_snorm_description
00000000009f0560 00000000000000d8 D util_format_etc2_r11_unorm_description
00000000009f0638 00000000000000d8 D util_format_etc2_rg11_snorm_description
00000000009f0710 00000000000000d8 D util_format_etc2_rg11_unorm_description
00000000009f07e8 00000000000000d8 D util_format_etc2_rgb8_description
00000000009f08c0 00000000000000d8 D util_format_etc2_rgb8a1_description
00000000009f0998 00000000000000d8 D util_format_etc2_rgba8_description
00000000009f0a70 00000000000000d8 D util_format_etc2_srgb8_description
00000000009f0b48 00000000000000d8 D util_format_etc2_srgb8a1_description
00000000009f0c20 00000000000000d8 D util_format_etc2_srgba8_description
00000000009f0cf8 00000000000000d8 D util_format_fxt1_rgb_description
00000000009f0dd0 00000000000000d8 D util_format_fxt1_rgba_description
00000000009f0ea8 00000000000000d8 D util_format_g16r16_snorm_description
00000000009f0f80 00000000000000d8 D util_format_g16r16_unorm_description
00000000009f1058 00000000000000d8 D util_format_g8r8_sint_description
00000000009f1130 00000000000000d8 D util_format_g8r8_snorm_description
00000000009f1208 00000000000000d8 D util_format_g8r8_unorm_description
00000000009f12e0 00000000000000d8 D util_format_i16_float_description
00000000009f13b8 00000000000000d8 D util_format_i16_sint_description
00000000009f1490 00000000000000d8 D util_format_i16_snorm_description
00000000009f1568 00000000000000d8 D util_format_i16_uint_description
00000000009f1640 00000000000000d8 D util_format_i16_unorm_description
00000000009f1718 00000000000000d8 D util_format_i32_float_description
00000000009f17f0 00000000000000d8 D util_format_i32_sint_description
00000000009f18c8 00000000000000d8 D util_format_i32_uint_description
00000000009f19a0 00000000000000d8 D util_format_i8_sint_description
00000000009f1a78 00000000000000d8 D util_format_i8_snorm_description
00000000009f1b50 00000000000000d8 D util_format_i8_uint_description
00000000009f1c28 00000000000000d8 D util_format_i8_unorm_description
00000000009f1d00 00000000000000d8 D util_format_l16_float_description
00000000009f1dd8 00000000000000d8 D util_format_l16_sint_description
00000000009f1eb0 00000000000000d8 D util_format_l16_snorm_description
00000000009f1f88 00000000000000d8 D util_format_l16_uint_description
00000000009f2060 00000000000000d8 D util_format_l16_unorm_description
00000000009f2138 00000000000000d8 D util_format_l16a16_float_description
00000000009f2210 00000000000000d8 D util_format_l16a16_sint_description
00000000009f22e8 00000000000000d8 D util_format_l16a16_snorm_description
00000000009f23c0 00000000000000d8 D util_format_l16a16_uint_description
00000000009f2498 00000000000000d8 D util_format_l16a16_unorm_description
00000000009f2570 00000000000000d8 D util_format_l32_float_description
00000000009f2648 00000000000000d8 D util_format_l32_sint_description
00000000009f2720 00000000000000d8 D util_format_l32_uint_description
00000000009f27f8 00000000000000d8 D util_format_l32a32_float_description
00000000009f28d0 00000000000000d8 D util_format_l32a32_sint_description
00000000009f29a8 00000000000000d8 D util_format_l32a32_uint_description
00000000009f2a80 00000000000000d8 D util_format_l4a4_unorm_description
00000000009f2b58 00000000000000d8 D util_format_l8_sint_description
00000000009f2c30 00000000000000d8 D util_format_l8_snorm_description
00000000009f2d08 00000000000000d8 D util_format_l8_srgb_description
00000000009f2de0 00000000000000d8 D util_format_l8_uint_description
00000000009f2eb8 00000000000000d8 D util_format_l8_unorm_description
00000000009f2f90 00000000000000d8 D util_format_l8a8_sint_description
00000000009f3068 00000000000000d8 D util_format_l8a8_snorm_description
00000000009f3140 00000000000000d8 D util_format_l8a8_srgb_description
00000000009f3218 00000000000000d8 D util_format_l8a8_uint_description
00000000009f32f0 00000000000000d8 D util_format_l8a8_unorm_description
00000000009f33c8 00000000000000d8 D util_format_none_description
00000000009f34a0 00000000000000d8 D util_format_r10g10b10a2_sint_description
00000000009f3578 00000000000000d8 D util_format_r10g10b10a2_snorm_description
00000000009f3650 00000000000000d8 D util_format_r10g10b10a2_sscaled_description
00000000009f3728 00000000000000d8 D util_format_r10g10b10a2_uint_description
00000000009f3800 00000000000000d8 D util_format_r10g10b10a2_unorm_description
00000000009f38d8 00000000000000d8 D util_format_r10g10b10a2_uscaled_description
00000000009f39b0 00000000000000d8 D util_format_r10g10b10x2_snorm_description
00000000009f3a88 00000000000000d8 D util_format_r10g10b10x2_unorm_description
00000000009f3b60 00000000000000d8 D util_format_r10g10b10x2_uscaled_description
00000000009f3c38 00000000000000d8 D util_format_r10sg10sb10sa2u_norm_description
00000000009f3d10 00000000000000d8 D util_format_r16_float_description
00000000009f3de8 00000000000000d8 D util_format_r16_sint_description
00000000009f3ec0 00000000000000d8 D util_format_r16_snorm_description
00000000009f3f98 00000000000000d8 D util_format_r16_sscaled_description
00000000009f4070 00000000000000d8 D util_format_r16_uint_description
00000000009f4148 00000000000000d8 D util_format_r16_unorm_description
00000000009f4220 00000000000000d8 D util_format_r16_uscaled_description
00000000009f42f8 00000000000000d8 D util_format_r16a16_float_description
00000000009f43d0 00000000000000d8 D util_format_r16a16_sint_description
00000000009f44a8 00000000000000d8 D util_format_r16a16_snorm_description
00000000009f4580 00000000000000d8 D util_format_r16a16_uint_description
00000000009f4658 00000000000000d8 D util_format_r16a16_unorm_description
00000000009f4730 00000000000000d8 D util_format_r16g16_float_description
00000000009f4808 00000000000000d8 D util_format_r16g16_sint_description
00000000009f48e0 00000000000000d8 D util_format_r16g16_snorm_description
00000000009f49b8 00000000000000d8 D util_format_r16g16_sscaled_description
00000000009f4a90 00000000000000d8 D util_format_r16g16_uint_description
00000000009f4b68 00000000000000d8 D util_format_r16g16_unorm_description
00000000009f4c40 00000000000000d8 D util_format_r16g16_uscaled_description
00000000009f4d18 00000000000000d8 D util_format_r16g16b16_float_description
00000000009f4df0 00000000000000d8 D util_format_r16g16b16_sint_description
00000000009f4ec8 00000000000000d8 D util_format_r16g16b16_snorm_description
00000000009f4fa0 00000000000000d8 D util_format_r16g16b16_sscaled_description
00000000009f5078 00000000000000d8 D util_format_r16g16b16_uint_description
00000000009f5150 00000000000000d8 D util_format_r16g16b16_unorm_description
00000000009f5228 00000000000000d8 D util_format_r16g16b16_uscaled_description
00000000009f5300 00000000000000d8 D util_format_r16g16b16a16_float_description
00000000009f53d8 00000000000000d8 D util_format_r16g16b16a16_sint_description
00000000009f54b0 00000000000000d8 D util_format_r16g16b16a16_snorm_description
00000000009f5588 00000000000000d8 D util_format_r16g16b16a16_sscaled_description
00000000009f5660 00000000000000d8 D util_format_r16g16b16a16_uint_description
00000000009f5738 00000000000000d8 D util_format_r16g16b16a16_unorm_description
00000000009f5810 00000000000000d8 D util_format_r16g16b16a16_uscaled_description
00000000009f58e8 00000000000000d8 D util_format_r16g16b16x16_float_description
00000000009f59c0 00000000000000d8 D util_format_r16g16b16x16_sint_description
00000000009f5a98 00000000000000d8 D util_format_r16g16b16x16_snorm_description
00000000009f5b70 00000000000000d8 D util_format_r16g16b16x16_uint_description
00000000009f5c48 00000000000000d8 D util_format_r16g16b16x16_unorm_description
00000000009f5d20 00000000000000d8 D util_format_r32_fixed_description
00000000009f5df8 00000000000000d8 D util_format_r32_float_description
00000000009f5ed0 00000000000000d8 D util_format_r32_sint_description
00000000009f5fa8 00000000000000d8 D util_format_r32_snorm_description
00000000009f6080 00000000000000d8 D util_format_r32_sscaled_description
00000000009f6158 00000000000000d8 D util_format_r32_uint_description
00000000009f6230 00000000000000d8 D util_format_r32_unorm_description
00000000009f6308 00000000000000d8 D util_format_r32_uscaled_description
00000000009f63e0 00000000000000d8 D util_format_r32a32_float_description
00000000009f64b8 00000000000000d8 D util_format_r32a32_sint_description
00000000009f6590 00000000000000d8 D util_format_r32a32_uint_description
00000000009f6668 00000000000000d8 D util_format_r32g32_fixed_description
00000000009f6740 00000000000000d8 D util_format_r32g32_float_description
00000000009f6818 00000000000000d8 D util_format_r32g32_sint_description
00000000009f68f0 00000000000000d8 D util_format_r32g32_snorm_description
00000000009f69c8 00000000000000d8 D util_format_r32g32_sscaled_description
00000000009f6aa0 00000000000000d8 D util_format_r32g32_uint_description
00000000009f6b78 00000000000000d8 D util_format_r32g32_unorm_description
00000000009f6c50 00000000000000d8 D util_format_r32g32_uscaled_description
00000000009f6d28 00000000000000d8 D util_format_r32g32b32_fixed_description
00000000009f6e00 00000000000000d8 D util_format_r32g32b32_float_description
00000000009f6ed8 00000000000000d8 D util_format_r32g32b32_sint_description
00000000009f6fb0 00000000000000d8 D util_format_r32g32b32_snorm_description
00000000009f7088 00000000000000d8 D util_format_r32g32b32_sscaled_description
00000000009f7160 00000000000000d8 D util_format_r32g32b32_uint_description
00000000009f7238 00000000000000d8 D util_format_r32g32b32_unorm_description
00000000009f7310 00000000000000d8 D util_format_r32g32b32_uscaled_description
00000000009f73e8 00000000000000d8 D util_format_r32g32b32a32_fixed_description
00000000009f74c0 00000000000000d8 D util_format_r32g32b32a32_float_description
00000000009f7598 00000000000000d8 D util_format_r32g32b32a32_sint_description
00000000009f7670 00000000000000d8 D util_format_r32g32b32a32_snorm_description
00000000009f7748 00000000000000d8 D util_format_r32g32b32a32_sscaled_description
00000000009f7820 00000000000000d8 D util_format_r32g32b32a32_uint_description
00000000009f78f8 00000000000000d8 D util_format_r32g32b32a32_unorm_description
00000000009f79d0 00000000000000d8 D util_format_r32g32b32a32_uscaled_description
00000000009f7aa8 00000000000000d8 D util_format_r32g32b32x32_float_description
00000000009f7b80 00000000000000d8 D util_format_r32g32b32x32_sint_description
00000000009f7c58 00000000000000d8 D util_format_r32g32b32x32_uint_description
00000000009f7d30 00000000000000d8 D util_format_r3g3b2_uint_description
00000000009f7e08 00000000000000d8 D util_format_r3g3b2_unorm_description
00000000009f7ee0 00000000000000d8 D util_format_r4a4_unorm_description
00000000009f7fb8 00000000000000d8 D util_format_r4g4b4a4_uint_description
00000000009f8090 00000000000000d8 D util_format_r4g4b4a4_unorm_description
00000000009f8168 00000000000000d8 D util_format_r5g5b5a1_uint_description
00000000009f8240 00000000000000d8 D util_format_r5g5b5a1_unorm_description
00000000009f8318 00000000000000d8 D util_format_r5g6b5_uint_description
00000000009f83f0 00000000000000d8 D util_format_r5g6b5_unorm_description
00000000009f84c8 00000000000000d8 D util_format_r5sg5sb6u_norm_description
00000000009f85a0 00000000000000d8 D util_format_r64_float_description
00000000009f8678 00000000000000d8 D util_format_r64g64_float_description
00000000009f8750 00000000000000d8 D util_format_r64g64b64_float_description
00000000009f8828 00000000000000d8 D util_format_r64g64b64a64_float_description
00000000009f8900 00000000000000d8 D util_format_r8_sint_description
00000000009f89d8 00000000000000d8 D util_format_r8_snorm_description
00000000009f8ab0 00000000000000d8 D util_format_r8_srgb_description
00000000009f8b88 00000000000000d8 D util_format_r8_sscaled_description
00000000009f8c60 00000000000000d8 D util_format_r8_uint_description
00000000009f8d38 00000000000000d8 D util_format_r8_unorm_description
00000000009f8e10 00000000000000d8 D util_format_r8_uscaled_description
00000000009f8ee8 00000000000000d8 D util_format_r8a8_sint_description
00000000009f8fc0 00000000000000d8 D util_format_r8a8_snorm_description
00000000009f9098 00000000000000d8 D util_format_r8a8_uint_description
00000000009f9170 00000000000000d8 D util_format_r8a8_unorm_description
00000000009f9248 00000000000000d8 D util_format_r8g8_sint_description
00000000009f9320 00000000000000d8 D util_format_r8g8_snorm_description
00000000009f93f8 00000000000000d8 D util_format_r8g8_srgb_description
00000000009f94d0 00000000000000d8 D util_format_r8g8_sscaled_description
00000000009f95a8 00000000000000d8 D util_format_r8g8_uint_description
00000000009f9680 00000000000000d8 D util_format_r8g8_unorm_description
00000000009f9758 00000000000000d8 D util_format_r8g8_uscaled_description
00000000009f9830 00000000000000d8 D util_format_r8g8b8_sint_description
00000000009f9908 00000000000000d8 D util_format_r8g8b8_snorm_description
00000000009f99e0 00000000000000d8 D util_format_r8g8b8_srgb_description
00000000009f9ab8 00000000000000d8 D util_format_r8g8b8_sscaled_description
00000000009f9b90 00000000000000d8 D util_format_r8g8b8_uint_description
00000000009f9c68 00000000000000d8 D util_format_r8g8b8_unorm_description
00000000009f9d40 00000000000000d8 D util_format_r8g8b8_uscaled_description
00000000009f9e18 00000000000000d8 D util_format_r8g8b8a8_sint_description
00000000009f9ef0 00000000000000d8 D util_format_r8g8b8a8_snorm_description
00000000009f9fc8 00000000000000d8 D util_format_r8g8b8a8_srgb_description
00000000009fa0a0 00000000000000d8 D util_format_r8g8b8a8_sscaled_description
00000000009fa178 00000000000000d8 D util_format_r8g8b8a8_uint_description
00000000009fa250 00000000000000d8 D util_format_r8g8b8a8_unorm_description
00000000009fa328 00000000000000d8 D util_format_r8g8b8a8_uscaled_description
00000000009fa400 00000000000000d8 D util_format_r8g8b8x8_sint_description
00000000009fa4d8 00000000000000d8 D util_format_r8g8b8x8_snorm_description
00000000009fa5b0 00000000000000d8 D util_format_r8g8b8x8_srgb_description
00000000009fa688 00000000000000d8 D util_format_r8g8b8x8_uint_description
00000000009fa760 00000000000000d8 D util_format_r8g8b8x8_unorm_description
00000000009fa838 00000000000000d8 D util_format_r8sg8sb8ux8u_norm_description
00000000009fa910 00000000000000d8 D util_format_x1b5g5r5_unorm_description
00000000009fa9e8 00000000000000d8 D util_format_x8b8g8r8_sint_description
00000000009faac0 00000000000000d8 D util_format_x8b8g8r8_snorm_description
00000000009fab98 00000000000000d8 D util_format_x8b8g8r8_srgb_description
00000000009fac70 00000000000000d8 D util_format_x8b8g8r8_unorm_description
00000000009fad48 00000000000000d8 D util_format_x8r8g8b8_srgb_description
00000000009fae20 00000000000000d8 D util_format_x8r8g8b8_unorm_description
00000000009faef8 00000000000000d8 D util_format_z24_unorm_s8_uint_as_r8g8b8a8_description
00000000009fafd0 0000000000002ac0 D _mesa_extension_table
00000000009fda90 0000000000005240 d format_info
0000000000a02cd0 0000000000000028 d weights.3
0000000000a02cf8 0000000000000040 d decode_1.0
0000000000a02d38 0000000000000038 d inv_mat_tab
0000000000a02d70 0000000000000020 d vert_attrfunc
0000000000a02d90 0000000000000088 d prim_names
0000000000a02e18 0000000000000180 d st_debug_flags
0000000000a02f98 0000000000001220 d _mesa_glsl_supported_extensions
0000000000a041b8 0000000000000060 d tex_opcode_strs
0000000000a04218 00000000000004c8 D ir_expression_operation_strings
0000000000a046e0 0000000000000140 V vtable for ir_hierarchical_visitor
0000000000a04820 00000000000000d0 V vtable for ir_print_visitor
0000000000a048f0 0000000000000048 V vtable for parcel_out_uniform_storage
0000000000a04938 0000000000000038 d vtable for (anonymous namespace)::count_uniform_size
0000000000a04970 00000000000000d0 d vtable for (anonymous namespace)::ir_lower_jumps_visitor
0000000000a04a40 0000000000000890 d yytname
0000000000a052d0 0000000000000018 d _mesa_glsl_parse(_mesa_glsl_parse_state*)::local_size_qualifiers
0000000000a052e8 0000000000000070 d _mesa_glsl_parse(_mesa_glsl_parse_state*)::map
0000000000a05358 0000000000000580 d _mesa_glsl_parse(_mesa_glsl_parse_state*)::map
0000000000a058d8 0000000000000030 d _mesa_glsl_parse(_mesa_glsl_parse_state*)::map
0000000000a05908 0000000000000100 d _mesa_glsl_parse(_mesa_glsl_parse_state*)::map
0000000000a05a08 00000000000002b8 d yytname
0000000000a05cc0 0000000000000008 D glsl_type::bvec2_type
0000000000a05cc8 0000000000000008 D glsl_type::bvec3_type
0000000000a05cd0 0000000000000008 D glsl_type::bvec4_type
0000000000a05cd8 0000000000000008 D glsl_type::dmat2_type
0000000000a05ce0 0000000000000008 D glsl_type::dmat3_type
0000000000a05ce8 0000000000000008 D glsl_type::dmat4_type
0000000000a05cf0 0000000000000008 D glsl_type::dvec2_type
0000000000a05cf8 0000000000000008 D glsl_type::dvec3_type
0000000000a05d00 0000000000000008 D glsl_type::dvec4_type
0000000000a05d08 0000000000000008 D glsl_type::error_type
0000000000a05d10 0000000000000008 D glsl_type::float_type
0000000000a05d18 0000000000000008 D glsl_type::ivec2_type
0000000000a05d20 0000000000000008 D glsl_type::ivec3_type
0000000000a05d28 0000000000000008 D glsl_type::ivec4_type
0000000000a05d30 0000000000000008 D glsl_type::uvec2_type
0000000000a05d38 0000000000000008 D glsl_type::uvec3_type
0000000000a05d40 0000000000000008 D glsl_type::uvec4_type
0000000000a05d48 0000000000000008 D glsl_type::double_type
0000000000a05d50 0000000000000008 D glsl_type::mat2x3_type
0000000000a05d58 0000000000000008 D glsl_type::mat2x4_type
0000000000a05d60 0000000000000008 D glsl_type::mat3x2_type
0000000000a05d68 0000000000000008 D glsl_type::mat3x4_type
0000000000a05d70 0000000000000008 D glsl_type::mat4x2_type
0000000000a05d78 0000000000000008 D glsl_type::mat4x3_type
0000000000a05d80 0000000000000008 D glsl_type::dmat2x3_type
0000000000a05d88 0000000000000008 D glsl_type::dmat2x4_type
0000000000a05d90 0000000000000008 D glsl_type::dmat3x2_type
0000000000a05d98 0000000000000008 D glsl_type::dmat3x4_type
0000000000a05da0 0000000000000008 D glsl_type::dmat4x2_type
0000000000a05da8 0000000000000008 D glsl_type::dmat4x3_type
0000000000a05db0 0000000000000008 D glsl_type::i64vec2_type
0000000000a05db8 0000000000000008 D glsl_type::i64vec3_type
0000000000a05dc0 0000000000000008 D glsl_type::i64vec4_type
0000000000a05dc8 0000000000000008 D glsl_type::image1D_type
0000000000a05dd0 0000000000000008 D glsl_type::image2D_type
0000000000a05dd8 0000000000000008 D glsl_type::image3D_type
0000000000a05de0 0000000000000008 D glsl_type::int64_t_type
0000000000a05de8 0000000000000008 D glsl_type::u64vec2_type
0000000000a05df0 0000000000000008 D glsl_type::u64vec3_type
0000000000a05df8 0000000000000008 D glsl_type::u64vec4_type
0000000000a05e00 0000000000000008 D glsl_type::iimage1D_type
0000000000a05e08 0000000000000008 D glsl_type::iimage2D_type
0000000000a05e10 0000000000000008 D glsl_type::iimage3D_type
0000000000a05e18 0000000000000008 D glsl_type::uimage1D_type
0000000000a05e20 0000000000000008 D glsl_type::uimage2D_type
0000000000a05e28 0000000000000008 D glsl_type::uimage3D_type
0000000000a05e30 0000000000000008 D glsl_type::uint64_t_type
0000000000a05e38 0000000000000008 D glsl_type::image2DMS_type
0000000000a05e40 0000000000000008 D glsl_type::imageCube_type
0000000000a05e48 0000000000000008 D glsl_type::sampler1D_type
0000000000a05e50 0000000000000008 D glsl_type::sampler2D_type
0000000000a05e58 0000000000000008 D glsl_type::sampler3D_type
0000000000a05e60 0000000000000008 D glsl_type::iimage2DMS_type
0000000000a05e68 0000000000000008 D glsl_type::iimageCube_type
0000000000a05e70 0000000000000008 D glsl_type::isampler1D_type
0000000000a05e78 0000000000000008 D glsl_type::isampler2D_type
0000000000a05e80 0000000000000008 D glsl_type::isampler3D_type
0000000000a05e88 0000000000000008 D glsl_type::uimage2DMS_type
0000000000a05e90 0000000000000008 D glsl_type::uimageCube_type
0000000000a05e98 0000000000000008 D glsl_type::usampler1D_type
0000000000a05ea0 0000000000000008 D glsl_type::usampler2D_type
0000000000a05ea8 0000000000000008 D glsl_type::usampler3D_type
0000000000a05eb0 0000000000000008 D glsl_type::atomic_uint_type
0000000000a05eb8 0000000000000008 D glsl_type::image2DRect_type
0000000000a05ec0 0000000000000008 D glsl_type::imageBuffer_type
0000000000a05ec8 0000000000000008 D glsl_type::sampler2DMS_type
0000000000a05ed0 0000000000000008 D glsl_type::samplerCube_type
0000000000a05ed8 0000000000000008 D glsl_type::iimage2DRect_type
0000000000a05ee0 0000000000000008 D glsl_type::iimageBuffer_type
0000000000a05ee8 0000000000000008 D glsl_type::image1DArray_type
0000000000a05ef0 0000000000000008 D glsl_type::image2DArray_type
0000000000a05ef8 0000000000000008 D glsl_type::isampler2DMS_type
0000000000a05f00 0000000000000008 D glsl_type::isamplerCube_type
0000000000a05f08 0000000000000008 D glsl_type::uimage2DRect_type
0000000000a05f10 0000000000000008 D glsl_type::uimageBuffer_type
0000000000a05f18 0000000000000008 D glsl_type::usampler2DMS_type
0000000000a05f20 0000000000000008 D glsl_type::usamplerCube_type
0000000000a05f28 0000000000000008 D glsl_type::iimage1DArray_type
0000000000a05f30 0000000000000008 D glsl_type::iimage2DArray_type
0000000000a05f38 0000000000000008 D glsl_type::sampler2DRect_type
0000000000a05f40 0000000000000008 D glsl_type::samplerBuffer_type
0000000000a05f48 0000000000000008 D glsl_type::uimage1DArray_type
0000000000a05f50 0000000000000008 D glsl_type::uimage2DArray_type
0000000000a05f58 0000000000000008 D glsl_type::image2DMSArray_type
0000000000a05f60 0000000000000008 D glsl_type::imageCubeArray_type
0000000000a05f68 0000000000000008 D glsl_type::isampler2DRect_type
0000000000a05f70 0000000000000008 D glsl_type::isamplerBuffer_type
0000000000a05f78 0000000000000008 D glsl_type::sampler1DArray_type
0000000000a05f80 0000000000000008 D glsl_type::sampler2DArray_type
0000000000a05f88 0000000000000008 D glsl_type::usampler2DRect_type
0000000000a05f90 0000000000000008 D glsl_type::usamplerBuffer_type
0000000000a05f98 0000000000000008 D glsl_type::iimage2DMSArray_type
0000000000a05fa0 0000000000000008 D glsl_type::iimageCubeArray_type
0000000000a05fa8 0000000000000008 D glsl_type::isampler1DArray_type
0000000000a05fb0 0000000000000008 D glsl_type::isampler2DArray_type
0000000000a05fb8 0000000000000008 D glsl_type::sampler1DShadow_type
0000000000a05fc0 0000000000000008 D glsl_type::sampler2DShadow_type
0000000000a05fc8 0000000000000008 D glsl_type::uimage2DMSArray_type
0000000000a05fd0 0000000000000008 D glsl_type::uimageCubeArray_type
0000000000a05fd8 0000000000000008 D glsl_type::usampler1DArray_type
0000000000a05fe0 0000000000000008 D glsl_type::usampler2DArray_type
0000000000a05fe8 0000000000000008 D glsl_type::sampler2DMSArray_type
0000000000a05ff0 0000000000000008 D glsl_type::samplerCubeArray_type
0000000000a05ff8 0000000000000008 D glsl_type::isampler2DMSArray_type
0000000000a06000 0000000000000008 D glsl_type::isamplerCubeArray_type
0000000000a06008 0000000000000008 D glsl_type::samplerCubeShadow_type
0000000000a06010 0000000000000008 D glsl_type::usampler2DMSArray_type
0000000000a06018 0000000000000008 D glsl_type::usamplerCubeArray_type
0000000000a06020 0000000000000008 D glsl_type::samplerExternalOES_type
0000000000a06028 0000000000000008 D glsl_type::sampler2DRectShadow_type
0000000000a06030 0000000000000008 D glsl_type::sampler1DArrayShadow_type
0000000000a06038 0000000000000008 D glsl_type::sampler2DArrayShadow_type
0000000000a06040 0000000000000008 D glsl_type::samplerCubeArrayShadow_type
0000000000a06048 0000000000000008 D glsl_type::int_type
0000000000a06050 0000000000000008 D glsl_type::bool_type
0000000000a06058 0000000000000008 D glsl_type::mat2_type
0000000000a06060 0000000000000008 D glsl_type::mat3_type
0000000000a06068 0000000000000008 D glsl_type::mat4_type
0000000000a06070 0000000000000008 D glsl_type::uint_type
0000000000a06078 0000000000000008 D glsl_type::vec2_type
0000000000a06080 0000000000000008 D glsl_type::vec3_type
0000000000a06088 0000000000000008 D glsl_type::vec4_type
0000000000a06090 0000000000000008 D glsl_type::void_type
0000000000a06098 00000000000007e0 d opcode_names
0000000000a06878 0000000000000078 d tgsi_file_names
0000000000a068f0 0000000000000168 d names.0
0000000000a06a58 0000000000000028 d hw_query_funcs
0000000000a06a80 0000000000000020 d hw_metric_query_funcs
0000000000a06aa0 0000000000000180 d nvc0_hw_metric_queries
0000000000a06c20 0000000000000020 d hw_sm_query_funcs
0000000000a06c40 0000000000000648 d nvc0_hw_sm_queries
0000000000a07288 0000000000000028 d weights.3
0000000000a072b0 0000000000000200 d fragAttribs.7
0000000000a074b0 0000000000000060 d fragResults.1
0000000000a07510 0000000000000100 d vertAttribs.8
0000000000a07610 0000000000000200 d vertResults.2
0000000000a07810 0000000000000400 d AttribFuncsARB
0000000000a07c10 0000000000000200 d AttribFuncsNV
0000000000a07e10 0000000000000038 d table_set
0000000000a07e48 0000000000003d38 d values
0000000000a0bb80 0000000000000120 d inst_desc
0000000000a0bca0 00000000000000d0 V vtable for glsl_to_tgsi_visitor
0000000000a0bd70 0000000000000140 d ast_expression::operator_string(ast_operators)::operators
0000000000a0beb0 0000000000000020 d get_type_name_for_precision_qualifier(glsl_type const*)::names
0000000000a0bed0 0000000000000040 d get_type_name_for_precision_qualifier(glsl_type const*)::names
0000000000a0bf10 0000000000000040 d get_type_name_for_precision_qualifier(glsl_type const*)::names
0000000000a0bf50 0000000000000040 d get_type_name_for_precision_qualifier(glsl_type const*)::names
0000000000a0bf90 0000000000000020 d get_type_name_for_precision_qualifier(glsl_type const*)::names
0000000000a0bfb0 0000000000000020 d get_type_name_for_precision_qualifier(glsl_type const*)::names
0000000000a0bfd0 0000000000000040 d get_type_name_for_precision_qualifier(glsl_type const*)::names
0000000000a0c010 0000000000000020 d get_type_name_for_precision_qualifier(glsl_type const*)::names
0000000000a0c030 0000000000000020 d get_type_name_for_precision_qualifier(glsl_type const*)::names
0000000000a0c050 0000000000000040 d get_type_name_for_precision_qualifier(glsl_type const*)::names
0000000000a0c090 0000000000000040 d get_type_name_for_precision_qualifier(glsl_type const*)::names
0000000000a0c0d0 0000000000000040 d get_type_name_for_precision_qualifier(glsl_type const*)::names
0000000000a0c110 0000000000000020 d get_type_name_for_precision_qualifier(glsl_type const*)::names
0000000000a0c130 0000000000000020 d get_type_name_for_precision_qualifier(glsl_type const*)::names
0000000000a0c150 0000000000000040 d get_type_name_for_precision_qualifier(glsl_type const*)::names
0000000000a0c190 0000000000000020 d get_type_name_for_precision_qualifier(glsl_type const*)::names
0000000000a0c1b0 0000000000000040 d get_type_name_for_precision_qualifier(glsl_type const*)::names
0000000000a0c1f0 0000000000000040 d get_type_name_for_precision_qualifier(glsl_type const*)::names
0000000000a0c230 0000000000000040 d get_type_name_for_precision_qualifier(glsl_type const*)::names
0000000000a0c270 0000000000000020 d get_type_name_for_precision_qualifier(glsl_type const*)::names
0000000000a0c290 0000000000000020 d get_type_name_for_precision_qualifier(glsl_type const*)::names
0000000000a0c2b0 0000000000000040 d get_type_name_for_precision_qualifier(glsl_type const*)::names
0000000000a0c2f0 0000000000000020 d ast_declarator_list::hir(exec_list*, _mesa_glsl_parse_state*)::precision_names
0000000000a0c310 0000000000000038 d deprecated_types
0000000000a0c348 0000000000000078 d gl_Fog_elements
0000000000a0c3c0 00000000000000a8 d gl_Point_elements
0000000000a0c468 0000000000000048 d gl_DepthRange_elements
0000000000a0c4b0 0000000000000018 d gl_LightModel_elements
0000000000a0c4c8 0000000000000120 d gl_LightSource_elements
0000000000a0c5e8 0000000000000078 d gl_BackMaterial_elements
0000000000a0c660 0000000000000078 d gl_FrontMaterial_elements
0000000000a0c6d8 0000000000000420 d _mesa_builtin_uniform_desc
0000000000a0caf8 0000000000000048 d gl_BackLightProduct_elements
0000000000a0cb40 0000000000000048 d gl_FrontLightProduct_elements
0000000000a0cb88 0000000000000018 d gl_BackLightModelProduct_elements
0000000000a0cba0 0000000000000018 d gl_FrontLightModelProduct_elements
0000000000a0cbb8 0000000000000028 V vtable for nv50_ir::Instruction
0000000000a0cbe0 0000000000000028 V vtable for nv50_ir::TexInstruction
0000000000a0cc08 0000000000000028 V vtable for nv50_ir::CmpInstruction
0000000000a0cc30 0000000000000028 V vtable for nv50_ir::FlowInstruction
0000000000a0cc58 0000000000000020 V vtable for nv50_ir::DeepClonePolicy<nv50_ir::Function>
0000000000a0cc78 0000000000000028 d vtable for (anonymous namespace)::Converter::BindArgumentsPass
0000000000a0cca0 0000000000000020 V vtable for nv50_ir::Graph
0000000000a0ccc0 0000000000000040 V vtable for nv50_ir::DFSIterator
0000000000a0cd00 0000000000000040 V vtable for nv50_ir::CFGIterator
0000000000a0cd40 0000000000000028 V vtable for nv50_ir::CopyPropagation
0000000000a0cd68 0000000000000028 V vtable for nv50_ir::MergeSplits
0000000000a0cd90 0000000000000028 V vtable for nv50_ir::LoadPropagation
0000000000a0cdb8 0000000000000028 V vtable for nv50_ir::IndirectPropagation
0000000000a0cde0 0000000000000028 V vtable for nv50_ir::ConstantFolding
0000000000a0ce08 0000000000000028 V vtable for nv50_ir::ModifierFolding
0000000000a0ce30 0000000000000028 V vtable for nv50_ir::AlgebraicOpt
0000000000a0ce58 0000000000000028 V vtable for nv50_ir::LateAlgebraicOpt
0000000000a0ce80 0000000000000028 V vtable for nv50_ir::Split64BitOpPreRA
0000000000a0cea8 0000000000000028 V vtable for nv50_ir::MemoryOpt
0000000000a0ced0 0000000000000028 V vtable for nv50_ir::FlatteningPass
0000000000a0cef8 0000000000000028 V vtable for nv50_ir::PostRaLoadPropagation
0000000000a0cf20 0000000000000028 V vtable for nv50_ir::GlobalCSE
0000000000a0cf48 0000000000000028 V vtable for nv50_ir::LocalCSE
0000000000a0cf70 0000000000000028 V vtable for nv50_ir::DeadCodeElim
0000000000a0cf98 0000000000000020 V vtable for nv50_ir::ShallowClonePolicy<nv50_ir::Function>
0000000000a0cfb8 0000000000000030 d nv50_ir::pixldOpStr
0000000000a0cfe8 0000000000000010 d nv50_ir::subfmOpStr
0000000000a0cff8 0000000000000080 d nv50_ir::texMaskStr
0000000000a0d078 00000000000000c0 d nv50_ir::CondCodeStr
0000000000a0d138 0000000000000070 d nv50_ir::DataTypeStr
0000000000a0d1a8 0000000000000170 d nv50_ir::SemanticStr
0000000000a0d318 0000000000000010 d nv50_ir::rcprsqOpStr
0000000000a0d328 0000000000000040 d nv50_ir::RoundModeStr
0000000000a0d368 0000000000000050 d nv50_ir::atomSubOpStr
0000000000a0d3b8 0000000000000018 d nv50_ir::ldstSubOpStr
0000000000a0d3d0 0000000000000020 d nv50_ir::gatherCompStr
0000000000a0d3f0 0000000000000020 d nv50_ir::xmadOpCModeStr
0000000000a0d410 0000000000000028 d nv50_ir::barOpStr
0000000000a0d438 0000000000000038 d nv50_ir::cctlOpStr
0000000000a0d470 0000000000000010 d nv50_ir::emitOpStr
0000000000a0d480 0000000000000080 d nv50_ir::interpStr
0000000000a0d500 0000000000000020 d nv50_ir::shflOpStr
0000000000a0d520 0000000000000028 V vtable for nv50_ir::RegAlloc::PhiMovesPass
0000000000a0d548 0000000000000028 V vtable for nv50_ir::RegAlloc::ArgumentMovesPass
0000000000a0d570 0000000000000028 V vtable for nv50_ir::RegAlloc::BuildIntervalsPass
0000000000a0d598 0000000000000028 V vtable for nv50_ir::RegAlloc::InsertConstraintsPass
0000000000a0d5c0 0000000000000020 V vtable for nv50_ir::DominatorTree
0000000000a0d5e0 0000000000000050 V vtable for nv50_ir::DLList::Iterator
0000000000a0d630 00000000000005a0 d InstInfo
0000000000a0dbd0 00000000000007e8 d yytname
0000000000a0e3b8 0000000000000078 d file_names
0000000000a0e430 0000000000000028 V vtable for nv50_ir::SchedDataCalculatorGM107
0000000000a0e458 0000000000000028 V vtable for nv50_ir::NVC0LegalizeSSA
0000000000a0e480 0000000000000028 V vtable for nv50_ir::NVC0LegalizePostRA
0000000000a0e4a8 0000000000000030 V vtable for nv50_ir::NVC0LoweringPass
0000000000a0e4d8 0000000000003a50 D table_noop_array
0000000000a11f28 0000000000003250 d public_entries
0000000000a15178 0000000000000030 d vtable for std::__facet_shims::(anonymous namespace)::money_get_shim<char>
0000000000a151a8 0000000000000030 d vtable for std::__facet_shims::(anonymous namespace)::money_put_shim<char>
0000000000a151d8 0000000000000038 d vtable for std::__facet_shims::(anonymous namespace)::messages_shim<char>
0000000000a15210 0000000000000030 d vtable for std::__facet_shims::(anonymous namespace)::money_get_shim<wchar_t>
0000000000a15240 0000000000000030 d vtable for std::__facet_shims::(anonymous namespace)::money_put_shim<wchar_t>
0000000000a15270 0000000000000038 d vtable for std::__facet_shims::(anonymous namespace)::messages_shim<wchar_t>
0000000000a152a8 0000000000000050 d vtable for std::__facet_shims::(anonymous namespace)::time_get_shim<char>
0000000000a152f8 0000000000000050 d vtable for std::__facet_shims::(anonymous namespace)::time_get_shim<wchar_t>
0000000000a15348 0000000000000030 d vtable for std::__facet_shims::(anonymous namespace)::money_get_shim<char>
0000000000a15378 0000000000000030 d vtable for std::__facet_shims::(anonymous namespace)::money_put_shim<char>
0000000000a153a8 0000000000000038 d vtable for std::__facet_shims::(anonymous namespace)::messages_shim<char>
0000000000a153e0 0000000000000030 d vtable for std::__facet_shims::(anonymous namespace)::money_get_shim<wchar_t>
0000000000a15410 0000000000000030 d vtable for std::__facet_shims::(anonymous namespace)::money_put_shim<wchar_t>
0000000000a15440 0000000000000038 d vtable for std::__facet_shims::(anonymous namespace)::messages_shim<wchar_t>
0000000000a15480 0000000000000168 d mpg123_error
0000000000a155f0 0000000000000020 d text_converters
0000000000a15610 00000000000000a8 d decname
0000000000a156c0 00000000000000d8 d mapend
0000000000a157a0 00000000000000d8 d map
0000000000a15878 0000000000000020 d htc
0000000000a15898 0000000000000200 d ht
0000000000a15a98 0000000000000200 d gpMixFunctionTable
0000000000a15c98 0000000000000200 d gpFastMixFunctionTable
0000000000a15e98 0000000000000028 d mustype
0000000000a15ec0 0000000000000078 d sig
0000000000a15f38 0000000000000080 d keySigs
0000000000a15fb8 0000000000000018 d pat_fun
0000000000a15fd0 0000000000000100 d romFS_devoptab
0000000000a160d0 0000000000000100 d fsdev_devoptab
0000000000a161d0 0000000000000020 d kCat3456
0000000000a161f0 0000000000000030 d _hb_all_shapers
0000000000a16220 0000000000000060 D _hb_ot_shaper_arabic
0000000000a16280 0000000000000060 D _hb_ot_shaper_hangul
0000000000a162e0 0000000000000060 D _hb_ot_shaper_hebrew
0000000000a16340 0000000000000060 D _hb_ot_shaper_indic
0000000000a163a0 0000000000000060 D _hb_ot_shaper_khmer
0000000000a16400 0000000000000060 D _hb_ot_shaper_myanmar
0000000000a16460 0000000000000060 D _hb_ot_shaper_thai
0000000000a164c0 0000000000000060 D _hb_ot_shaper_use
0000000000a16520 0000000000000038 d categories
0000000000a16558 00000000000001f8 D _C_time_locale
0000000000a16750 0000000000000100 D dotab_stdnull
0000000000a16850 0000000000000180 d supported
0000000000a169d0 0000000000000030 d s_music_interfaces
0000000000a16a00 0000000000000010 d render_drivers
0000000000a16a10 00000000000000a0 d ft_default_modules
0000000000a16ab0 0000000000000010 d t1_service_properties
0000000000a16ac0 0000000000000010 d cff_service_properties
0000000000a16ad0 0000000000000010 d cid_service_properties
0000000000a16ae0 0000000000000530 d egl_functions.40
0000000000a17010 00000000000000d8 D util_format_ayuv_description
0000000000a170e8 00000000000000d8 D util_format_bptc_rgb_float_description
0000000000a171c0 00000000000000d8 D util_format_bptc_rgb_ufloat_description
0000000000a17298 00000000000000d8 D util_format_bptc_rgba_unorm_description
0000000000a17370 00000000000000d8 D util_format_bptc_srgba_description
0000000000a17448 00000000000000d8 D util_format_dxt1_rgb_description
0000000000a17520 00000000000000d8 D util_format_dxt1_rgba_description
0000000000a175f8 00000000000000d8 D util_format_dxt1_srgb_description
0000000000a176d0 00000000000000d8 D util_format_dxt1_srgba_description
0000000000a177a8 00000000000000d8 D util_format_dxt3_rgba_description
0000000000a17880 00000000000000d8 D util_format_dxt3_srgba_description
0000000000a17958 00000000000000d8 D util_format_dxt5_rgba_description
0000000000a17a30 00000000000000d8 D util_format_dxt5_srgba_description
0000000000a17b08 00000000000000d8 D util_format_etc1_rgb8_description
0000000000a17be0 00000000000000d8 D util_format_g8r8_b8r8_unorm_description
0000000000a17cb8 00000000000000d8 D util_format_g8r8_g8b8_unorm_description
0000000000a17d90 00000000000000d8 D util_format_iyuv_description
0000000000a17e68 00000000000000d8 D util_format_latc1_snorm_description
0000000000a17f40 00000000000000d8 D util_format_latc1_unorm_description
0000000000a18018 00000000000000d8 D util_format_latc2_snorm_description
0000000000a180f0 00000000000000d8 D util_format_latc2_unorm_description
0000000000a181c8 00000000000000d8 D util_format_nv12_description
0000000000a182a0 00000000000000d8 D util_format_nv21_description
0000000000a18378 00000000000000d8 D util_format_p010_description
0000000000a18450 00000000000000d8 D util_format_p016_description
0000000000a18528 00000000000000d8 D util_format_r11g11b10_float_description
0000000000a18600 00000000000000d8 D util_format_r1_unorm_description
0000000000a186d8 00000000000000d8 D util_format_r8g8_b8g8_unorm_description
0000000000a187b0 00000000000000d8 D util_format_r8g8_r8b8_unorm_description
0000000000a18888 00000000000000d8 D util_format_r8g8bx_snorm_description
0000000000a18960 00000000000000d8 D util_format_r9g9b9e5_float_description
0000000000a18a38 00000000000000d8 D util_format_rgtc1_snorm_description
0000000000a18b10 00000000000000d8 D util_format_rgtc1_unorm_description
0000000000a18be8 00000000000000d8 D util_format_rgtc2_snorm_description
0000000000a18cc0 00000000000000d8 D util_format_rgtc2_unorm_description
0000000000a18d98 00000000000000d8 D util_format_s8_uint_description
0000000000a18e70 00000000000000d8 D util_format_s8_uint_z24_unorm_description
0000000000a18f48 00000000000000d8 D util_format_s8x24_uint_description
0000000000a19020 00000000000000d8 D util_format_uyvy_description
0000000000a190f8 00000000000000d8 D util_format_x24s8_uint_description
0000000000a191d0 00000000000000d8 D util_format_x32_s8x24_uint_description
0000000000a192a8 00000000000000d8 D util_format_x8z24_unorm_description
0000000000a19380 00000000000000d8 D util_format_xyuv_description
0000000000a19458 00000000000000d8 D util_format_yuyv_description
0000000000a19530 00000000000000d8 D util_format_yv12_description
0000000000a19608 00000000000000d8 D util_format_yv16_description
0000000000a196e0 00000000000000d8 D util_format_z16_unorm_description
0000000000a197b8 00000000000000d8 D util_format_z24_unorm_s8_uint_description
0000000000a19890 00000000000000d8 D util_format_z24x8_unorm_description
0000000000a19968 00000000000000d8 D util_format_z32_float_description
0000000000a19a40 00000000000000d8 D util_format_z32_float_s8x24_uint_description
0000000000a19b18 00000000000000d8 D util_format_z32_unorm_description
0000000000a19bf0 0000000000000030 V vtable for ast_node
0000000000a19c20 0000000000000030 V vtable for ast_compound_statement
0000000000a19c50 0000000000000030 V vtable for ast_expression_statement
0000000000a19c80 0000000000000030 V vtable for ast_function
0000000000a19cb0 0000000000000030 V vtable for ast_fully_specified_type
0000000000a19ce0 0000000000000030 V vtable for ast_parameter_declarator
0000000000a19d10 0000000000000030 V vtable for ast_function_definition
0000000000a19d40 0000000000000030 V vtable for ast_declaration
0000000000a19d70 0000000000000030 V vtable for ast_declarator_list
0000000000a19da0 0000000000000030 V vtable for ast_jump_statement
0000000000a19dd0 0000000000000030 V vtable for ast_demote_statement
0000000000a19e00 0000000000000030 V vtable for ast_selection_statement
0000000000a19e30 0000000000000030 V vtable for ast_switch_statement
0000000000a19e60 0000000000000030 V vtable for ast_switch_body
0000000000a19e90 0000000000000030 V vtable for ast_case_label
0000000000a19ec0 0000000000000030 V vtable for ast_case_label_list
0000000000a19ef0 0000000000000030 V vtable for ast_case_statement
0000000000a19f20 0000000000000030 V vtable for ast_case_statement_list
0000000000a19f50 0000000000000030 V vtable for ast_iteration_statement
0000000000a19f80 0000000000000030 V vtable for ast_struct_specifier
0000000000a19fb0 0000000000000030 V vtable for ast_subroutine_list
0000000000a19fe0 0000000000000080 V vtable for ir_rvalue
0000000000a1a060 0000000000000040 V vtable for ir_variable
0000000000a1a0a0 0000000000000080 V vtable for ir_swizzle
0000000000a1a120 0000000000000040 V vtable for ir_return
0000000000a1a160 0000000000000040 V vtable for ir_discard
0000000000a1a1a0 0000000000000040 V vtable for ir_demote
0000000000a1a1e0 0000000000000040 V vtable for ir_loop_jump
0000000000a1a220 0000000000000040 V vtable for ir_if
0000000000a1a260 0000000000000040 V vtable for ir_loop
0000000000a1a2a0 0000000000000048 V vtable for ir_call
0000000000a1a2e8 0000000000000088 V vtable for ir_dereference_variable
0000000000a1a370 0000000000000088 V vtable for ir_dereference_array
0000000000a1a3f8 0000000000000088 V vtable for ir_dereference_record
0000000000a1a480 0000000000000080 V vtable for ir_texture
0000000000a1a500 0000000000000048 V vtable for ir_assignment
0000000000a1a548 0000000000000040 V vtable for ir_function
0000000000a1a588 0000000000000040 V vtable for ir_function_signature
0000000000a1a5c8 0000000000000088 V vtable for ir_constant
0000000000a1a650 0000000000000140 V vtable for fixup_ir_call_visitor
0000000000a1a790 0000000000000080 V vtable for ir_expression
0000000000a1a810 0000000000000040 V vtable for ir_emit_vertex
0000000000a1a850 0000000000000040 V vtable for ir_end_primitive
0000000000a1a890 0000000000000040 V vtable for ir_barrier
0000000000a1a8d0 0000000000000140 V vtable for array_sizing_visitor
0000000000a1aa10 0000000000000140 d vtable for (anonymous namespace)::deref_type_updater
0000000000a1ab50 0000000000000140 d vtable for (anonymous namespace)::find_deref_visitor
0000000000a1ac90 0000000000000150 d vtable for (anonymous namespace)::array_resize_visitor
0000000000a1ade0 0000000000000140 d vtable for (anonymous namespace)::find_assignment_visitor
0000000000a1af20 0000000000000140 d vtable for (anonymous namespace)::find_emit_vertex_visitor
0000000000a1b060 0000000000000140 d vtable for (anonymous namespace)::dynamic_sampler_array_indexing_visitor
0000000000a1b1a0 0000000000000140 d vtable for remap_variables(ir_instruction*, gl_linked_shader*, hash_table*)::remap_visitor
0000000000a1b2e0 0000000000000140 d vtable for (anonymous namespace)::call_link_visitor
0000000000a1b420 0000000000000038 d vtable for (anonymous namespace)::ubo_visitor
0000000000a1b458 0000000000000038 d vtable for (anonymous namespace)::count_block_size
0000000000a1b490 0000000000000038 V vtable for tfeedback_candidate_generator
0000000000a1b4c8 0000000000000140 V vtable for examine_rhs
0000000000a1b608 0000000000000140 d vtable for (anonymous namespace)::loop_analysis
0000000000a1b748 0000000000000140 V vtable for loop_unroll_count
0000000000a1b888 0000000000000140 d vtable for (anonymous namespace)::loop_unroll_visitor
0000000000a1b9c8 0000000000000140 d vtable for (anonymous namespace)::lower_builtins_visitor
0000000000a1bb08 0000000000000148 d vtable for (anonymous namespace)::lower_const_array_visitor
0000000000a1bc50 0000000000000140 d vtable for (anonymous namespace)::lower_cs_derived_visitor
0000000000a1bd90 0000000000000140 d vtable for (anonymous namespace)::lower_discard_flow_visitor
0000000000a1bed0 0000000000000148 d vtable for (anonymous namespace)::lower_distance_visitor
0000000000a1c018 0000000000000148 d vtable for (anonymous namespace)::lower_distance_visitor_counter
0000000000a1c160 0000000000000140 d vtable for (anonymous namespace)::lower_instructions_visitor
0000000000a1c2a0 0000000000000140 V vtable for lower_packed_varyings_gs_splicer
0000000000a1c3e0 0000000000000140 V vtable for lower_packed_varyings_return_splicer
0000000000a1c520 0000000000000148 d vtable for (anonymous namespace)::flatten_named_interface_blocks_declarations
0000000000a1c668 0000000000000148 d vtable for (anonymous namespace)::find_precision_visitor
0000000000a1c7b0 0000000000000148 d vtable for (anonymous namespace)::lower_precision_visitor
0000000000a1c8f8 0000000000000140 d vtable for (anonymous namespace)::find_lowerable_rvalues_visitor
0000000000a1ca38 0000000000000140 d vtable for (anonymous namespace)::lower_subroutine_visitor
0000000000a1cb78 0000000000000148 d vtable for (anonymous namespace)::lower_tess_level_visitor
0000000000a1ccc0 0000000000000148 d vtable for (anonymous namespace)::ir_vec_index_to_swizzle_visitor
0000000000a1ce08 0000000000000158 d vtable for (anonymous namespace)::vector_deref_visitor
0000000000a1cf60 0000000000000158 d vtable for (anonymous namespace)::vector_insert_visitor
0000000000a1d0b8 0000000000000140 d vtable for (anonymous namespace)::lower_vertex_id_visitor
0000000000a1d1f8 0000000000000150 d vtable for (anonymous namespace)::lower_shared_reference_visitor
0000000000a1d348 0000000000000150 d vtable for (anonymous namespace)::lower_ubo_reference_visitor
0000000000a1d498 0000000000000140 d vtable for (anonymous namespace)::lower_xfb_var_splicer
0000000000a1d5d8 0000000000000158 d vtable for (anonymous namespace)::ir_algebraic_visitor
0000000000a1d730 0000000000000158 V vtable for ir_array_splitting_visitor
0000000000a1d888 0000000000000140 d vtable for (anonymous namespace)::ir_array_reference_visitor
0000000000a1d9c8 0000000000000140 d vtable for (anonymous namespace)::opt_conditional_discard_visitor
0000000000a1db08 0000000000000158 d vtable for (anonymous namespace)::ir_constant_folding_visitor
0000000000a1dc60 0000000000000148 d vtable for (anonymous namespace)::ir_constant_propagation_visitor
0000000000a1dda8 0000000000000148 d vtable for (anonymous namespace)::ir_constant_variable_visitor
0000000000a1def0 0000000000000148 d vtable for (anonymous namespace)::ir_copy_propagation_elements_visitor
0000000000a1e038 0000000000000140 d vtable for (anonymous namespace)::varying_info_visitor
0000000000a1e178 0000000000000148 d vtable for (anonymous namespace)::replace_varyings_visitor
0000000000a1e2c0 0000000000000140 d vtable for (anonymous namespace)::array_index_visit
0000000000a1e400 0000000000000148 d vtable for (anonymous namespace)::kill_for_derefs_visitor
0000000000a1e548 0000000000000140 d vtable for (anonymous namespace)::ir_dead_functions_visitor
0000000000a1e688 0000000000000140 d vtable for (anonymous namespace)::nested_if_flattener
0000000000a1e7c8 0000000000000140 d vtable for (anonymous namespace)::matrix_flipper
0000000000a1e908 0000000000000150 V vtable for ir_variable_replacement_visitor
0000000000a1ea58 0000000000000140 d vtable for (anonymous namespace)::ir_save_lvalue_visitor
0000000000a1eb98 0000000000000150 d vtable for (anonymous namespace)::ir_function_inlining_visitor
0000000000a1ece8 0000000000000140 d vtable for (anonymous namespace)::ir_if_simplification_visitor
0000000000a1ee28 0000000000000148 d vtable for (anonymous namespace)::ir_minmax_visitor
0000000000a1ef70 0000000000000148 d vtable for (anonymous namespace)::ir_rebalance_visitor
0000000000a1f0b8 0000000000000140 d vtable for (anonymous namespace)::redundant_jumps_visitor
0000000000a1f1f8 0000000000000140 d vtable for (anonymous namespace)::ir_structure_reference_visitor
0000000000a1f338 0000000000000158 d vtable for (anonymous namespace)::ir_structure_splitting_visitor
0000000000a1f490 0000000000000148 d vtable for (anonymous namespace)::ir_opt_swizzle_visitor
0000000000a1f5d8 0000000000000140 d vtable for (anonymous namespace)::ir_tree_grafting_visitor
0000000000a1f718 0000000000000140 d vtable for (anonymous namespace)::ir_vectorize_visitor
0000000000a1f858 0000000000000150 d vtable for (anonymous namespace)::ir_invariance_propagation_visitor
0000000000a1f9a8 0000000000000030 V vtable for ast_layout_expression
0000000000a1f9d8 0000000000000028 D nouveau_buffer_vtbl
0000000000a1fa00 0000000000000028 D nvc0_miptree_vtbl
0000000000a1fa28 0000000000000038 d vtable for (anonymous namespace)::add_uniform_to_shader
0000000000a1fa60 0000000000000200 d update_functions
0000000000a1fc60 0000000000000140 V vtable for ir_control_flow_info_visitor
0000000000a1fda0 0000000000000030 V vtable for ast_array_specifier
0000000000a1fdd0 0000000000000038 V vtable for ast_expression_bin
0000000000a1fe08 0000000000000038 V vtable for ast_function_expression
0000000000a1fe40 0000000000000038 V vtable for ast_aggregate_initializer
0000000000a1fe78 0000000000000140 V vtable for read_from_write_only_variable_visitor
0000000000a1ffb8 0000000000000038 V vtable for ast_expression
0000000000a1fff0 0000000000000140 V vtable for interface_block_usage_visitor
0000000000a20130 0000000000000030 V vtable for ast_interface_block
0000000000a20160 0000000000000030 V vtable for ast_tcs_output_layout
0000000000a20190 0000000000000030 V vtable for ast_gs_input_layout
0000000000a201c0 0000000000000030 V vtable for ast_cs_input_layout
0000000000a201f0 0000000000000030 V vtable for ast_warnings_toggle
0000000000a20220 0000000000000030 V vtable for ast_type_specifier
0000000000a20250 0000000000000140 V vtable for ir_array_refcount_visitor
0000000000a20390 0000000000000140 V vtable for ir_function_can_inline_visitor
0000000000a204d0 0000000000000140 d vtable for (anonymous namespace)::has_recursion_visitor
0000000000a20610 0000000000000140 d vtable for (anonymous namespace)::ir_set_program_inouts_visitor
0000000000a20750 0000000000000140 V vtable for ir_variable_refcount_visitor
0000000000a20890 0000000000000140 V vtable for link_uniform_block_active_visitor
0000000000a209d0 0000000000000140 d vtable for (anonymous namespace)::lower_discard_visitor
0000000000a20b10 0000000000000140 d vtable for (anonymous namespace)::ir_if_to_cond_assign_visitor
0000000000a20c50 0000000000000148 d vtable for (anonymous namespace)::lower_64bit_visitor
0000000000a20d98 0000000000000140 d vtable for (anonymous namespace)::ir_mat_op_to_vec_visitor
0000000000a20ed8 0000000000000148 V vtable for lower_offset_array_visitor
0000000000a21020 0000000000000158 d vtable for (anonymous namespace)::lower_packing_builtins_visitor
0000000000a21178 0000000000000148 d vtable for (anonymous namespace)::deref_replacer
0000000000a212c0 0000000000000140 d vtable for (anonymous namespace)::find_variable_index
0000000000a21400 0000000000000148 d vtable for (anonymous namespace)::variable_index_to_cond_assign_visitor
0000000000a21548 0000000000000140 d vtable for (anonymous namespace)::ir_vec_index_to_cond_assign_visitor
0000000000a21688 0000000000000148 d vtable for (anonymous namespace)::lower_vector_visitor
0000000000a217d0 0000000000000140 d vtable for (anonymous namespace)::output_read_remover
0000000000a21910 0000000000000028 D nv50_miptree_vtbl
0000000000a21938 0000000000000048 V vtable for nv50_ir::LValue
0000000000a21980 0000000000000048 V vtable for nv50_ir::Symbol
0000000000a219c8 0000000000000048 V vtable for nv50_ir::ImmediateValue
0000000000a21a10 0000000000000048 V vtable for nv50_ir::Value
0000000000a21a58 0000000000000048 V vtable for nv50_ir::CodeEmitter
0000000000a21aa0 00000000000000d8 V vtable for nv50_ir::TargetGM107
0000000000a21b78 0000000000000158 V vtable for ir_expression_flattening_visitor
0000000000a21cd0 0000000000000048 V vtable for nv50_ir::CodeEmitterGM107
0000000000a21d18 0000000000000028 V vtable for nv50_ir::GM107LegalizeSSA
0000000000a21d40 0000000000000030 V vtable for nv50_ir::GM107LoweringPass
0000000000a21d70 00000000000000b8 V vtable for nv50_ir::TargetNVC0
0000000000a21e28 0000000000000018 V typeinfo for __gnu_cxx::__concurrence_lock_error
0000000000a21e40 0000000000000018 V typeinfo for __gnu_cxx::__concurrence_unlock_error
0000000000a21e58 0000000000000018 V typeinfo for __gnu_cxx::__concurrence_broadcast_error
0000000000a21e70 0000000000000018 V typeinfo for __gnu_cxx::__concurrence_wait_error
0000000000a21e88 0000000000000028 V vtable for __gnu_cxx::__concurrence_lock_error
0000000000a21eb0 0000000000000028 V vtable for __gnu_cxx::__concurrence_unlock_error
0000000000a21ed8 0000000000000028 V vtable for __gnu_cxx::__concurrence_broadcast_error
0000000000a21f00 0000000000000028 V vtable for __gnu_cxx::__concurrence_wait_error
0000000000a21f28 0000000000000018 V typeinfo for __cxxabiv1::__si_class_type_info
0000000000a21f40 0000000000000058 V vtable for __cxxabiv1::__si_class_type_info
0000000000a21f98 0000000000000010 V typeinfo for std::type_info
0000000000a21fa8 0000000000000010 V typeinfo for std::locale::facet
0000000000a21fb8 0000000000000038 d typeinfo for std::__facet_shims::(anonymous namespace)::numpunct_shim<char>
0000000000a21ff0 0000000000000038 d typeinfo for std::__facet_shims::(anonymous namespace)::collate_shim<char>
0000000000a22028 0000000000000038 d typeinfo for std::__facet_shims::(anonymous namespace)::moneypunct_shim<char, true>
0000000000a22060 0000000000000038 d typeinfo for std::__facet_shims::(anonymous namespace)::moneypunct_shim<char, false>
0000000000a22098 0000000000000038 d typeinfo for std::__facet_shims::(anonymous namespace)::money_get_shim<char>
0000000000a220d0 0000000000000038 d typeinfo for std::__facet_shims::(anonymous namespace)::money_put_shim<char>
0000000000a22108 0000000000000038 d typeinfo for std::__facet_shims::(anonymous namespace)::messages_shim<char>
0000000000a22140 0000000000000038 d typeinfo for std::__facet_shims::(anonymous namespace)::numpunct_shim<wchar_t>
0000000000a22178 0000000000000038 d typeinfo for std::__facet_shims::(anonymous namespace)::collate_shim<wchar_t>
0000000000a221b0 0000000000000038 d typeinfo for std::__facet_shims::(anonymous namespace)::moneypunct_shim<wchar_t, true>
0000000000a221e8 0000000000000038 d typeinfo for std::__facet_shims::(anonymous namespace)::moneypunct_shim<wchar_t, false>
0000000000a22220 0000000000000038 d typeinfo for std::__facet_shims::(anonymous namespace)::money_get_shim<wchar_t>
0000000000a22258 0000000000000038 d typeinfo for std::__facet_shims::(anonymous namespace)::money_put_shim<wchar_t>
0000000000a22290 0000000000000038 d typeinfo for std::__facet_shims::(anonymous namespace)::messages_shim<wchar_t>
0000000000a222c8 0000000000000010 V typeinfo for std::locale::facet::__shim
0000000000a222d8 0000000000000038 d typeinfo for std::__facet_shims::(anonymous namespace)::time_get_shim<char>
0000000000a22310 0000000000000038 d typeinfo for std::__facet_shims::(anonymous namespace)::time_get_shim<wchar_t>
0000000000a22348 0000000000000048 d vtable for std::__facet_shims::(anonymous namespace)::numpunct_shim<char>
0000000000a22390 0000000000000038 d vtable for std::__facet_shims::(anonymous namespace)::collate_shim<char>
0000000000a223c8 0000000000000068 d vtable for std::__facet_shims::(anonymous namespace)::moneypunct_shim<char, true>
0000000000a22430 0000000000000068 d vtable for std::__facet_shims::(anonymous namespace)::moneypunct_shim<char, false>
0000000000a22498 0000000000000048 d vtable for std::__facet_shims::(anonymous namespace)::numpunct_shim<wchar_t>
0000000000a224e0 0000000000000038 d vtable for std::__facet_shims::(anonymous namespace)::collate_shim<wchar_t>
0000000000a22518 0000000000000068 d vtable for std::__facet_shims::(anonymous namespace)::moneypunct_shim<wchar_t, true>
0000000000a22580 0000000000000068 d vtable for std::__facet_shims::(anonymous namespace)::moneypunct_shim<wchar_t, false>
0000000000a225e8 0000000000000010 V typeinfo for std::ctype_base
0000000000a225f8 0000000000000038 V typeinfo for std::ctype<char>
0000000000a22630 0000000000000018 V typeinfo for std::ctype<wchar_t>
0000000000a22648 0000000000000060 V vtable for std::ctype<char>
0000000000a226a8 0000000000000080 V vtable for std::ctype<wchar_t>
0000000000a22728 0000000000000038 d typeinfo for std::__facet_shims::(anonymous namespace)::numpunct_shim<char>
0000000000a22760 0000000000000038 d typeinfo for std::__facet_shims::(anonymous namespace)::collate_shim<char>
0000000000a22798 0000000000000038 d typeinfo for std::__facet_shims::(anonymous namespace)::moneypunct_shim<char, true>
0000000000a227d0 0000000000000038 d typeinfo for std::__facet_shims::(anonymous namespace)::moneypunct_shim<char, false>
0000000000a22808 0000000000000038 d typeinfo for std::__facet_shims::(anonymous namespace)::money_get_shim<char>
0000000000a22840 0000000000000038 d typeinfo for std::__facet_shims::(anonymous namespace)::money_put_shim<char>
0000000000a22878 0000000000000038 d typeinfo for std::__facet_shims::(anonymous namespace)::messages_shim<char>
0000000000a228b0 0000000000000038 d typeinfo for std::__facet_shims::(anonymous namespace)::numpunct_shim<wchar_t>
0000000000a228e8 0000000000000038 d typeinfo for std::__facet_shims::(anonymous namespace)::collate_shim<wchar_t>
0000000000a22920 0000000000000038 d typeinfo for std::__facet_shims::(anonymous namespace)::moneypunct_shim<wchar_t, true>
0000000000a22958 0000000000000038 d typeinfo for std::__facet_shims::(anonymous namespace)::moneypunct_shim<wchar_t, false>
0000000000a22990 0000000000000038 d typeinfo for std::__facet_shims::(anonymous namespace)::money_get_shim<wchar_t>
0000000000a229c8 0000000000000038 d typeinfo for std::__facet_shims::(anonymous namespace)::money_put_shim<wchar_t>
0000000000a22a00 0000000000000038 d typeinfo for std::__facet_shims::(anonymous namespace)::messages_shim<wchar_t>
0000000000a22a38 0000000000000038 d typeinfo for std::__facet_shims::(anonymous namespace)::time_get_shim<char>
0000000000a22a70 0000000000000038 d typeinfo for std::__facet_shims::(anonymous namespace)::time_get_shim<wchar_t>
0000000000a22aa8 0000000000000048 d vtable for std::__facet_shims::(anonymous namespace)::numpunct_shim<char>
0000000000a22af0 0000000000000038 d vtable for std::__facet_shims::(anonymous namespace)::collate_shim<char>
0000000000a22b28 0000000000000068 d vtable for std::__facet_shims::(anonymous namespace)::moneypunct_shim<char, true>
0000000000a22b90 0000000000000068 d vtable for std::__facet_shims::(anonymous namespace)::moneypunct_shim<char, false>
0000000000a22bf8 0000000000000048 d vtable for std::__facet_shims::(anonymous namespace)::numpunct_shim<wchar_t>
0000000000a22c40 0000000000000038 d vtable for std::__facet_shims::(anonymous namespace)::collate_shim<wchar_t>
0000000000a22c78 0000000000000068 d vtable for std::__facet_shims::(anonymous namespace)::moneypunct_shim<wchar_t, true>
0000000000a22ce0 0000000000000068 d vtable for std::__facet_shims::(anonymous namespace)::moneypunct_shim<wchar_t, false>
0000000000a22d48 0000000000000058 d vtable for std::__facet_shims::(anonymous namespace)::time_get_shim<char>
0000000000a22da0 0000000000000058 d vtable for std::__facet_shims::(anonymous namespace)::time_get_shim<wchar_t>
0000000000a22df8 0000000000000010 V typeinfo for std::time_base
0000000000a22e08 0000000000000010 V typeinfo for std::money_base
0000000000a22e18 0000000000000010 V typeinfo for std::messages_base
0000000000a22e28 0000000000000018 V typeinfo for std::__cxx11::collate<wchar_t>
0000000000a22e40 0000000000000018 V typeinfo for std::__cxx11::numpunct<wchar_t>
0000000000a22e58 0000000000000038 V typeinfo for std::__cxx11::moneypunct<wchar_t, true>
0000000000a22e90 0000000000000038 V typeinfo for std::__cxx11::moneypunct<wchar_t, false>
0000000000a22ec8 0000000000000038 V typeinfo for std::__cxx11::messages<wchar_t>
0000000000a22f00 0000000000000018 V typeinfo for std::__cxx11::money_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >
0000000000a22f18 0000000000000018 V typeinfo for std::__cxx11::money_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >
0000000000a22f30 0000000000000038 V typeinfo for std::__cxx11::time_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >
0000000000a22f68 0000000000000038 V vtable for std::__cxx11::collate<wchar_t>
0000000000a22fa0 0000000000000048 V vtable for std::__cxx11::numpunct<wchar_t>
0000000000a22fe8 0000000000000068 V vtable for std::__cxx11::moneypunct<wchar_t, true>
0000000000a23050 0000000000000068 V vtable for std::__cxx11::moneypunct<wchar_t, false>
0000000000a230b8 0000000000000038 V vtable for std::__cxx11::messages<wchar_t>
0000000000a230f0 0000000000000030 V vtable for std::__cxx11::money_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >
0000000000a23120 0000000000000030 V vtable for std::__cxx11::money_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >
0000000000a23150 0000000000000058 V vtable for std::__cxx11::time_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >
0000000000a231a8 0000000000000018 V typeinfo for __gnu_cxx::stdio_sync_filebuf<char, std::char_traits<char> >
0000000000a231c0 0000000000000018 V typeinfo for __gnu_cxx::stdio_sync_filebuf<wchar_t, std::char_traits<wchar_t> >
0000000000a231d8 0000000000000080 V vtable for __gnu_cxx::stdio_sync_filebuf<char, std::char_traits<char> >
0000000000a23258 0000000000000080 V vtable for __gnu_cxx::stdio_sync_filebuf<wchar_t, std::char_traits<wchar_t> >
0000000000a232d8 0000000000000018 V typeinfo for std::basic_ios<char, std::char_traits<char> >
0000000000a232f0 0000000000000018 V typeinfo for std::basic_ios<wchar_t, std::char_traits<wchar_t> >
0000000000a23308 0000000000000020 V vtable for std::basic_ios<char, std::char_traits<char> >
0000000000a23328 0000000000000020 V vtable for std::basic_ios<wchar_t, std::char_traits<wchar_t> >
0000000000a23348 0000000000000010 V typeinfo for std::ios_base
0000000000a23358 0000000000000020 V vtable for std::ios_base
0000000000a23378 0000000000000028 V typeinfo for std::istream
0000000000a233a0 0000000000000028 V typeinfo for std::basic_istream<wchar_t, std::char_traits<wchar_t> >
0000000000a233c8 0000000000000010 V VTT for std::istream
0000000000a233d8 0000000000000050 V vtable for std::istream
0000000000a23428 0000000000000010 V VTT for std::basic_istream<wchar_t, std::char_traits<wchar_t> >
0000000000a23438 0000000000000050 V vtable for std::basic_istream<wchar_t, std::char_traits<wchar_t> >
0000000000a23488 0000000000000010 V typeinfo for std::codecvt_base
0000000000a23498 0000000000000018 V typeinfo for std::collate<char>
0000000000a234b0 0000000000000018 V typeinfo for std::numpunct<char>
0000000000a234c8 0000000000000018 V typeinfo for std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >
0000000000a234e0 0000000000000018 V typeinfo for std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >
0000000000a234f8 0000000000000018 V typeinfo for std::__timepunct_cache<char>
0000000000a23510 0000000000000018 V typeinfo for std::__timepunct<char>
0000000000a23528 0000000000000038 V typeinfo for std::moneypunct<char, true>
0000000000a23560 0000000000000038 V typeinfo for std::moneypunct<char, false>
0000000000a23598 0000000000000038 V typeinfo for std::messages<char>
0000000000a235d0 0000000000000038 V typeinfo for std::__codecvt_abstract_base<char, char, _mbstate_t>
0000000000a23608 0000000000000018 V typeinfo for std::money_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >
0000000000a23620 0000000000000018 V typeinfo for std::money_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >
0000000000a23638 0000000000000018 V typeinfo for std::time_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >
0000000000a23650 0000000000000038 V typeinfo for std::time_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >
0000000000a23688 0000000000000018 V typeinfo for std::__moneypunct_cache<char, false>
0000000000a236a0 0000000000000018 V typeinfo for std::__moneypunct_cache<char, true>
0000000000a236b8 0000000000000018 V typeinfo for std::__numpunct_cache<char>
0000000000a236d0 0000000000000038 V vtable for std::collate<char>
0000000000a23708 0000000000000048 V vtable for std::numpunct<char>
0000000000a23750 0000000000000078 V vtable for std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >
0000000000a237c8 0000000000000060 V vtable for std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >
0000000000a23828 0000000000000020 V vtable for std::__timepunct_cache<char>
0000000000a23848 0000000000000020 V vtable for std::__timepunct<char>
0000000000a23868 0000000000000068 V vtable for std::moneypunct<char, true>
0000000000a238d0 0000000000000068 V vtable for std::moneypunct<char, false>
0000000000a23938 0000000000000038 V vtable for std::messages<char>
0000000000a23970 0000000000000058 V vtable for std::__codecvt_abstract_base<char, char, _mbstate_t>
0000000000a239c8 0000000000000030 V vtable for std::money_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >
0000000000a239f8 0000000000000030 V vtable for std::money_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >
0000000000a23a28 0000000000000028 V vtable for std::time_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >
0000000000a23a50 0000000000000050 V vtable for std::time_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >
0000000000a23aa0 0000000000000020 V vtable for std::__moneypunct_cache<char, false>
0000000000a23ac0 0000000000000020 V vtable for std::__moneypunct_cache<char, true>
0000000000a23ae0 0000000000000020 V vtable for std::__numpunct_cache<char>
0000000000a23b00 0000000000000110 D std::locale::_S_twinned_facets
0000000000a23c10 0000000000000028 V typeinfo for std::ostream
0000000000a23c38 0000000000000028 V typeinfo for std::basic_ostream<wchar_t, std::char_traits<wchar_t> >
0000000000a23c60 0000000000000010 V VTT for std::ostream
0000000000a23c70 0000000000000050 V vtable for std::ostream
0000000000a23cc0 0000000000000010 V VTT for std::basic_ostream<wchar_t, std::char_traits<wchar_t> >
0000000000a23cd0 0000000000000050 V vtable for std::basic_ostream<wchar_t, std::char_traits<wchar_t> >
0000000000a23d20 0000000000000010 V typeinfo for std::basic_streambuf<char, std::char_traits<char> >
0000000000a23d30 0000000000000010 V typeinfo for std::basic_streambuf<wchar_t, std::char_traits<wchar_t> >
0000000000a23d40 0000000000000080 V vtable for std::basic_streambuf<char, std::char_traits<char> >
0000000000a23dc0 0000000000000080 V vtable for std::basic_streambuf<wchar_t, std::char_traits<wchar_t> >
0000000000a23e40 0000000000000010 V typeinfo for std::_V2::error_category
0000000000a23e50 0000000000000018 V typeinfo for std::system_error
0000000000a23e68 0000000000000028 V vtable for std::system_error
0000000000a23e90 0000000000000018 V typeinfo for std::collate<wchar_t>
0000000000a23ea8 0000000000000038 V typeinfo for std::__ctype_abstract_base<wchar_t>
0000000000a23ee0 0000000000000018 V typeinfo for std::numpunct<wchar_t>
0000000000a23ef8 0000000000000018 V typeinfo for std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >
0000000000a23f10 0000000000000018 V typeinfo for std::num_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >
0000000000a23f28 0000000000000018 V typeinfo for std::__timepunct_cache<wchar_t>
0000000000a23f40 0000000000000018 V typeinfo for std::__timepunct<wchar_t>
0000000000a23f58 0000000000000038 V typeinfo for std::moneypunct<wchar_t, true>
0000000000a23f90 0000000000000038 V typeinfo for std::moneypunct<wchar_t, false>
0000000000a23fc8 0000000000000038 V typeinfo for std::messages<wchar_t>
0000000000a24000 0000000000000038 V typeinfo for std::__codecvt_abstract_base<wchar_t, char, _mbstate_t>
0000000000a24038 0000000000000018 V typeinfo for std::money_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >
0000000000a24050 0000000000000018 V typeinfo for std::money_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >
0000000000a24068 0000000000000018 V typeinfo for std::time_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >
0000000000a24080 0000000000000038 V typeinfo for std::time_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >
0000000000a240b8 0000000000000018 V typeinfo for std::__moneypunct_cache<wchar_t, false>
0000000000a240d0 0000000000000018 V typeinfo for std::__moneypunct_cache<wchar_t, true>
0000000000a240e8 0000000000000018 V typeinfo for std::__numpunct_cache<wchar_t>
0000000000a24100 0000000000000038 V vtable for std::collate<wchar_t>
0000000000a24138 0000000000000080 V vtable for std::__ctype_abstract_base<wchar_t>
0000000000a241b8 0000000000000048 V vtable for std::numpunct<wchar_t>
0000000000a24200 0000000000000078 V vtable for std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >
0000000000a24278 0000000000000060 V vtable for std::num_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >
0000000000a242d8 0000000000000020 V vtable for std::__timepunct_cache<wchar_t>
0000000000a242f8 0000000000000020 V vtable for std::__timepunct<wchar_t>
0000000000a24318 0000000000000068 V vtable for std::moneypunct<wchar_t, true>
0000000000a24380 0000000000000068 V vtable for std::moneypunct<wchar_t, false>
0000000000a243e8 0000000000000038 V vtable for std::messages<wchar_t>
0000000000a24420 0000000000000058 V vtable for std::__codecvt_abstract_base<wchar_t, char, _mbstate_t>
0000000000a24478 0000000000000030 V vtable for std::money_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >
0000000000a244a8 0000000000000030 V vtable for std::money_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >
0000000000a244d8 0000000000000028 V vtable for std::time_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >
0000000000a24500 0000000000000050 V vtable for std::time_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >
0000000000a24550 0000000000000020 V vtable for std::__moneypunct_cache<wchar_t, false>
0000000000a24570 0000000000000020 V vtable for std::__moneypunct_cache<wchar_t, true>
0000000000a24590 0000000000000020 V vtable for std::__numpunct_cache<wchar_t>
0000000000a245b0 0000000000000018 V typeinfo for std::bad_alloc
0000000000a245c8 0000000000000028 V vtable for std::bad_alloc
0000000000a245f0 0000000000000018 V typeinfo for std::bad_array_new_length
0000000000a24608 0000000000000028 V vtable for std::bad_array_new_length
0000000000a24630 0000000000000018 V typeinfo for std::bad_cast
0000000000a24648 0000000000000028 V vtable for std::bad_cast
0000000000a24670 0000000000000018 V typeinfo for __cxxabiv1::__class_type_info
0000000000a24688 0000000000000058 V vtable for __cxxabiv1::__class_type_info
0000000000a246e0 0000000000000010 V typeinfo for std::exception
0000000000a246f0 0000000000000018 V typeinfo for std::bad_exception
0000000000a24708 0000000000000010 V typeinfo for __cxxabiv1::__forced_unwind
0000000000a24718 0000000000000010 V typeinfo for __cxxabiv1::__foreign_exception
0000000000a24728 0000000000000028 V vtable for std::bad_exception
0000000000a24750 0000000000000018 V typeinfo for __cxxabiv1::__vmi_class_type_info
0000000000a24768 0000000000000058 V vtable for __cxxabiv1::__vmi_class_type_info
0000000000a247c0 0000000000000018 V typeinfo for std::codecvt<char, char, _mbstate_t>
0000000000a247d8 0000000000000018 V typeinfo for std::codecvt<wchar_t, char, _mbstate_t>
0000000000a247f0 0000000000000058 V vtable for std::codecvt<char, char, _mbstate_t>
0000000000a24848 0000000000000058 V vtable for std::codecvt<wchar_t, char, _mbstate_t>
0000000000a248a0 0000000000000018 V typeinfo for std::logic_error
0000000000a248b8 0000000000000018 V typeinfo for std::length_error
0000000000a248d0 0000000000000018 V typeinfo for std::out_of_range
0000000000a248e8 0000000000000018 V typeinfo for std::runtime_error
0000000000a24900 0000000000000028 V vtable for std::logic_error
0000000000a24928 0000000000000028 V vtable for std::length_error
0000000000a24950 0000000000000028 V vtable for std::out_of_range
0000000000a24978 0000000000000028 V vtable for std::runtime_error
0000000000a249a0 0000000000000038 V typeinfo for std::__codecvt_abstract_base<char16_t, char, _mbstate_t>
0000000000a249d8 0000000000000018 V typeinfo for std::codecvt<char16_t, char, _mbstate_t>
0000000000a249f0 0000000000000038 V typeinfo for std::__codecvt_abstract_base<char32_t, char, _mbstate_t>
0000000000a24a28 0000000000000018 V typeinfo for std::codecvt<char32_t, char, _mbstate_t>
0000000000a24a40 0000000000000038 V typeinfo for std::__codecvt_abstract_base<char16_t, char8_t, _mbstate_t>
0000000000a24a78 0000000000000018 V typeinfo for std::codecvt<char16_t, char8_t, _mbstate_t>
0000000000a24a90 0000000000000038 V typeinfo for std::__codecvt_abstract_base<char32_t, char8_t, _mbstate_t>
0000000000a24ac8 0000000000000018 V typeinfo for std::codecvt<char32_t, char8_t, _mbstate_t>
0000000000a24ae0 0000000000000058 V vtable for std::__codecvt_abstract_base<char16_t, char, _mbstate_t>
0000000000a24b38 0000000000000058 V vtable for std::__codecvt_abstract_base<char32_t, char, _mbstate_t>
0000000000a24b90 0000000000000058 V vtable for std::__codecvt_abstract_base<char16_t, char8_t, _mbstate_t>
0000000000a24be8 0000000000000058 V vtable for std::__codecvt_abstract_base<char32_t, char8_t, _mbstate_t>
0000000000a24c40 0000000000000058 V vtable for std::codecvt<char16_t, char, _mbstate_t>
0000000000a24c98 0000000000000058 V vtable for std::codecvt<char32_t, char, _mbstate_t>
0000000000a24cf0 0000000000000058 V vtable for std::codecvt<char16_t, char8_t, _mbstate_t>
0000000000a24d48 0000000000000058 V vtable for std::codecvt<char32_t, char8_t, _mbstate_t>
0000000000a24da0 0000000000000018 V typeinfo for std::ios_base::failure[abi:cxx11]
0000000000a24db8 0000000000000018 V typeinfo for std::__ios_failure
0000000000a24dd0 0000000000000028 V typeinfo for std::__iosfail_type_info
0000000000a24df8 0000000000000028 V vtable for std::ios_base::failure[abi:cxx11]
0000000000a24e20 0000000000000028 V vtable for std::__ios_failure
0000000000a24e48 0000000000000058 V vtable for std::__iosfail_type_info
0000000000a24ea0 0000000000000018 V typeinfo for std::__cxx11::collate<char>
0000000000a24eb8 0000000000000018 V typeinfo for std::__cxx11::numpunct<char>
0000000000a24ed0 0000000000000038 V typeinfo for std::__cxx11::moneypunct<char, true>
0000000000a24f08 0000000000000038 V typeinfo for std::__cxx11::moneypunct<char, false>
0000000000a24f40 0000000000000038 V typeinfo for std::__cxx11::messages<char>
0000000000a24f78 0000000000000018 V typeinfo for std::__cxx11::money_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >
0000000000a24f90 0000000000000018 V typeinfo for std::__cxx11::money_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >
0000000000a24fa8 0000000000000038 V typeinfo for std::__cxx11::time_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >
0000000000a24fe0 0000000000000038 V vtable for std::__cxx11::collate<char>
0000000000a25018 0000000000000048 V vtable for std::__cxx11::numpunct<char>
0000000000a25060 0000000000000068 V vtable for std::__cxx11::moneypunct<char, true>
0000000000a250c8 0000000000000068 V vtable for std::__cxx11::moneypunct<char, false>
0000000000a25130 0000000000000038 V vtable for std::__cxx11::messages<char>
0000000000a25168 0000000000000030 V vtable for std::__cxx11::money_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >
0000000000a25198 0000000000000030 V vtable for std::__cxx11::money_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >
0000000000a251c8 0000000000000058 V vtable for std::__cxx11::time_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >
0000000000a25220 0000000000000018 d typeinfo for (anonymous namespace)::io_error_category
0000000000a25238 0000000000000050 d vtable for (anonymous namespace)::io_error_category
0000000000a25288 0000000000000018 V typeinfo for std::ios_base::failure
0000000000a252a0 0000000000000028 V vtable for std::ios_base::failure
0000000000a252d0 0000000000000200 d synth_base
0000000000a254d0 00000000000001a8 D __C_locale
0000000000a25678 a _DYNAMIC
0000000000a25798 d __got_start__
0000000000a25798 a _GLOBAL_OFFSET_TABLE_
0000000000a2b018 d __got_end__
0000000000a2c000 d __data_start
0000000000a2c000 0000000000000004 D spaceshipX
0000000000a2c004 0000000000000001 D inStartScreen
0000000000a2c008 0000000000000004 d g_hb_script
0000000000a2c00c 0000000000000004 d g_hb_direction
0000000000a2c010 00000000000000a0 D nsvg__colors
0000000000a2c0b0 0000000000000008 d mix_music
0000000000a2c0b8 0000000000000004 d music_active
0000000000a2c0bc 0000000000000004 d music_volume
0000000000a2c0c0 0000000000000090 D Mix_MusicInterface_MODPLUG
0000000000a2c150 0000000000000090 D Mix_MusicInterface_MPG123
0000000000a2c1e0 0000000000000090 D Mix_MusicInterface_OGG
0000000000a2c270 0000000000000090 D Mix_MusicInterface_Opus
0000000000a2c300 0000000000000090 D Mix_MusicInterface_TIMIDITY
0000000000a2c390 0000000000000090 D Mix_MusicInterface_WAV
0000000000a2c420 0000000000000004 d SDL_MainIsReady
0000000000a2c478 0000000000000008 d assertion_handler
0000000000a2c480 0000000000000008 d SDL_log_function
0000000000a2c488 0000000000000004 d SDL_test_priority
0000000000a2c48c 0000000000000004 d SDL_application_priority
0000000000a2c490 0000000000000004 d SDL_assert_priority
0000000000a2c494 0000000000000004 d SDL_default_priority
0000000000a2c498 000000000000006c d extensible_guids
0000000000a2c504 0000000000000004 d SDL_SIMDAlignment
0000000000a2c508 0000000000000004 d SDL_CPUFeatures
0000000000a2c50c 0000000000000004 d SDL_update_sensors
0000000000a2c510 0000000000000004 d SDL_update_joysticks
0000000000a2c518 0000000000000060 D GLES2_RenderDriver
0000000000a2c578 0000000000000030 d sdl_assert_data.1
0000000000a2c5a8 0000000000000060 D SW_RenderDriver
0000000000a2c608 0000000000000028 d s_mem
0000000000a2c630 0000000000000048 D SDL_expand_byte
0000000000a2c678 0000000000000001 d lookup_8
0000000000a2c680 0000000000000002 d lookup_7
0000000000a2c688 0000000000000004 d lookup_6
0000000000a2c690 0000000000000008 d lookup_5
0000000000a2c6a0 0000000000000010 d lookup_4
0000000000a2c6b0 0000000000000020 d lookup_3
0000000000a2c6d0 0000000000000040 d lookup_2
0000000000a2c710 0000000000000080 d lookup_1
0000000000a2c790 0000000000000100 d lookup_0
0000000000a2c890 0000000000000004 d val.0
0000000000a2c894 0000000000000004 d SDL_YUV_ConversionMode
0000000000a2c898 0000000000000004 d thread_local_storage
0000000000a2c8a0 0000000000000018 D SWITCH_bootstrap
0000000000a2c8b8 0000000000000020 D SWITCHAUDIO_bootstrap
0000000000a2c8d8 00000000000000a0 D SDL_SWITCH_JoystickDriver
0000000000a2c978 00000000000000a0 D SDL_VIRTUAL_JoystickDriver
0000000000a2ca18 0000000000000058 D SDL_DUMMY_SensorDriver
0000000000a2ca70 0000000000000004 d features.0
0000000000a2ca78 0000000000000be8 D SDL_GeneratedBlitFuncTable
0000000000a2d660 0000000000000004 d simd_features
0000000000a2d664 0000000000000004 d simd_huffman
0000000000a2d668 0000000000000004 d simd_support
0000000000a2d670 0000000000000018 D _eglSoftwareDevice
0000000000a2d688 0000000000000088 D _eglGlobal
0000000000a2d710 0000000000000018 d logging
0000000000a2d728 0000000000000024 D mme9097_blend_enables
0000000000a2d750 0000000000000060 D mme9097_compute_counter
0000000000a2d7b0 000000000000004c D mme9097_compute_counter_to_query
0000000000a2d800 0000000000000044 D mme9097_conservative_raster_state
0000000000a2d848 0000000000000078 D mme9097_draw_arrays_indirect
0000000000a2d8c0 00000000000000b8 D mme9097_draw_arrays_indirect_count
0000000000a2d978 00000000000000a8 D mme9097_draw_elts_indirect
0000000000a2da20 00000000000000f4 D mme9097_draw_elts_indirect_count
0000000000a2db18 0000000000000044 D mme9097_gp_select
0000000000a2db60 000000000000001c D mme9097_per_instance_bf
0000000000a2db80 0000000000000044 D mme9097_poly_mode_back
0000000000a2dbc8 0000000000000044 D mme9097_poly_mode_front
0000000000a2dc10 0000000000000088 D mme9097_query_buffer_write
0000000000a2dc98 0000000000000044 D mme9097_tep_select
0000000000a2dce0 0000000000000030 D mme9097_vertex_array_select
0000000000a2dd10 0000000000000040 D mme90c0_launch_grid_indirect
0000000000a2dd50 0000000000000080 d validate_list_cp
0000000000a2ddd0 0000000000000001 d first.8
0000000000a2ddd4 0000000000000004 d NextDynamicID
0000000000a2ddd8 000000000000001f d out_of_memory
0000000000a2ddf8 0000000000000004 d debug.0
0000000000a2ddfc 0000000000000004 d debug.3
0000000000a2de00 0000000000000010 d color.2
0000000000a2de10 0000000000000004 d index.3
0000000000a2de18 000000000000000c d normal.1
0000000000a2de28 0000000000000010 d texcoord.0
0000000000a2de38 0000000000000010 d vertex.4
0000000000a2de48 0000000000000020 d override.0
0000000000a2de68 0000000000000001 d first.1
0000000000a2de69 0000000000000001 d first.1
0000000000a2def8 0000000000000004 d ir_print_visitor::unique_name(ir_variable*)::i
0000000000a2defc 0000000000000004 d ir_print_visitor::unique_name(ir_variable*)::arg
0000000000a2df00 0000000000000020 D tgsi_swizzle_names
0000000000a2df20 0000000000000001 d firsttime.0
0000000000a2df28 0000000000000010 D tgsi_fs_coord_origin_names
0000000000a2df38 0000000000000010 D tgsi_fs_coord_pixel_center_names
0000000000a2df48 0000000000000030 D tgsi_immediate_type_names
0000000000a2df78 0000000000000018 D tgsi_interpolate_locations
0000000000a2df90 0000000000000020 D tgsi_interpolate_names
0000000000a2dfb0 0000000000000008 D tgsi_invariant_name
0000000000a2dfb8 0000000000000020 D tgsi_memory_names
0000000000a2dfd8 0000000000000078 D tgsi_primitive_names
0000000000a2e050 0000000000000030 D tgsi_processor_type_names
0000000000a2e080 00000000000000d8 D tgsi_property_names
0000000000a2e158 0000000000000030 D tgsi_return_type_names
0000000000a2e188 0000000000000188 D tgsi_semantic_names
0000000000a2e310 0000000000000098 D tgsi_texture_names
0000000000a2e3a8 0000000000000080 d validate_list_cp
0000000000a2e428 0000000000000038 d sm20_hw_metric_queries
0000000000a2e460 0000000000000048 d sm21_hw_metric_queries
0000000000a2e4a8 0000000000000058 d sm30_hw_metric_queries
0000000000a2e500 0000000000000058 d sm35_hw_metric_queries
0000000000a2e558 0000000000000058 d sm50_hw_metric_queries
0000000000a2e5b0 00000000000000d0 d sm20_hw_sm_queries
0000000000a2e680 00000000000000f8 d sm21_hw_sm_queries
0000000000a2e778 0000000000000168 d sm30_hw_sm_queries
0000000000a2e8e0 0000000000000168 d sm35_hw_sm_queries
0000000000a2ea48 0000000000000120 d sm50_hw_sm_queries
0000000000a2eb68 0000000000000120 d sm52_hw_sm_queries
0000000000a2ec88 0000000000000220 d validate_list_3d
0000000000a2eea8 0000000000000008 D util_format_dxt1_rgb_fetch
0000000000a2eeb0 0000000000000008 D util_format_dxt1_rgba_fetch
0000000000a2eeb8 0000000000000008 D util_format_dxt3_rgba_fetch
0000000000a2eec0 0000000000000008 D util_format_dxt5_rgba_fetch
0000000000a2eec8 0000000000000008 D util_format_dxtn_pack
0000000000a2eed0 0000000000000030 d markers.0
0000000000a2ef00 0000000000000720 d builtin_type_versions
0000000000a2f620 00000000000003f0 D nv50_ir::operationStr
0000000000a2fa10 0000000000000700 D nv50_ir::gm107_builtin_code
0000000000a30110 0000000000000020 D nv50_ir::gm107_builtin_offsets
0000000000a30130 0000000000000190 D nv50_ir::gf100_builtin_code
0000000000a302c0 0000000000001590 D nv50_ir::gk104_builtin_code
0000000000a31850 00000000000005a8 D nv50_ir::gk110_builtin_code
0000000000a31df8 0000000000000020 D nv50_ir::gf100_builtin_offsets
0000000000a31e18 0000000000000020 D nv50_ir::gk104_builtin_offsets
0000000000a31e38 0000000000000020 D nv50_ir::gk110_builtin_offsets
0000000000a31e58 0000000000000001 d first.1
0000000000a31e5c 0000000000000004 d next_dynamic_slot
0000000000a31e60 0000000000000004 d debug.0
0000000000a31e68 0000000000000008 V DW.ref.__gxx_personality_v0
0000000000a31e70 0000000000000008 V DW.ref._ZTIN10__cxxabiv115__forced_unwindE
0000000000a31e78 0000000000000001 D std::ios_base::Init::_S_synced_with_stdio
0000000000a31e80 0000000000000008 D __cxxabiv1::__unexpected_handler
0000000000a31e88 0000000000000008 D std::__num_base::_S_atoms_out
0000000000a31e90 0000000000000008 D std::__num_base::_S_atoms_in
0000000000a31e98 0000000000000008 D std::money_base::_S_atoms
0000000000a31ea0 0000000000000070 D std::__timepunct_cache<wchar_t>::_S_timezones
0000000000a31f10 0000000000000070 D std::__timepunct_cache<char>::_S_timezones
0000000000a31f80 0000000000000008 d (anonymous namespace)::io_category_instance
0000000000a31f88 0000000000000008 D __cxxabiv1::__terminate_handler
0000000000a31f90 0000000000000010 D _floor_P
0000000000a31fa0 0000000000000008 D _mapping_P
0000000000a31fa8 0000000000000018 D _residue_P
0000000000a31fc0 0000000000000030 D floor1_exportbundle
0000000000a31ff0 0000000000000030 D floor0_exportbundle
0000000000a32020 0000000000000028 D residue0_exportbundle
0000000000a32048 0000000000000028 D residue1_exportbundle
0000000000a32070 0000000000000028 D residue2_exportbundle
0000000000a32098 0000000000000028 D mapping0_exportbundle
0000000000a32310 0000000000000060 d bad_reader
0000000000a32370 00000000000001e0 d readers
0000000000a32550 0000000000000028 D INT123_pnts
0000000000a32650 000000000000002c d pretab_choice
0000000000a32680 0000000000000038 D ModPlug::gSettings
0000000000a326b8 0000000000000004 D CSoundFile::gnChannels
0000000000a326bc 0000000000000004 D CSoundFile::gdwMixingFreq
0000000000a326c0 0000000000000004 D CSoundFile::gnBitsPerSample
0000000000a326c4 0000000000000004 D CSoundFile::m_nMaxMixChannels
0000000000a326c8 0000000000000004 D CSoundFile::gnVolumeRampSamples
0000000000a326cc 0000000000000004 D CSoundFile::m_nStereoSeparation
0000000000a326d0 0000000000000004 D CSoundFile::gnAGC
0000000000a326d4 0000000000000004 D CSoundFile::m_nXBassDepth
0000000000a326d8 0000000000000004 D CSoundFile::m_nXBassRange
0000000000a326dc 0000000000000004 D CSoundFile::m_nReverbDelay
0000000000a326e0 0000000000000004 D CSoundFile::m_nReverbDepth
0000000000a326e4 0000000000000004 D CSoundFile::m_nProLogicDelay
0000000000a326e8 0000000000000004 D CSoundFile::m_nProLogicDepth
0000000000a326f0 0000000000000008 D autovibit2xm
0000000000a326f8 0000000000000008 V __nx_applet_init_timeout
0000000000a32700 0000000000000001 V __nx_applet_auto_notifyrunning
0000000000a32704 0000000000000004 V __nx_applet_type
0000000000a32708 0000000000000004 V __nx_nv_transfermem_size
0000000000a3270c 0000000000000004 V __nx_nv_service_type
0000000000a32710 0000000000000004 d g_ctrl_fd
0000000000a32714 0000000000000004 d g_ctrlgpu_fd
0000000000a32718 0000000000000004 d g_nvmap_fd
0000000000a3271c 0000000000000004 V __nx_fs_num_sessions
0000000000a32720 0000000000000004 d g_viServiceType
0000000000a32724 0000000000000004 V __nx_vi_stray_layer_flags
0000000000a32728 0000000000000008 V __nx_exception_stack_size
0000000000a32730 0000000000000001 V __nx_fsdev_support_cwd
0000000000a32734 0000000000000004 V __nx_fsdev_direntry_cache_size
0000000000a32738 0000000000000008 d WebPInitAlphaProcessing_body_last_cpuinfo_used.0
0000000000a32740 0000000000000008 D VP8GetCPUInfo
0000000000a32748 0000000000000008 d VP8DspInit_body_last_cpuinfo_used.0
0000000000a32750 0000000000000008 d VP8FiltersInit_body_last_cpuinfo_used.0
0000000000a32758 0000000000000008 d VP8LDspInit_body_last_cpuinfo_used.0
0000000000a32760 0000000000000008 d WebPRescalerDspInit_body_last_cpuinfo_used.0
0000000000a32768 0000000000000008 d WebPInitUpsamplers_body_last_cpuinfo_used.0
0000000000a32770 0000000000000008 d WebPInitYUV444Converters_body_last_cpuinfo_used.2
0000000000a32778 0000000000000008 d WebPInitConvertARGBToYUV_body_last_cpuinfo_used.0
0000000000a32780 0000000000000008 d WebPInitSamplers_body_last_cpuinfo_used.2
0000000000a32788 0000000000000030 d g_worker_interface
0000000000a327b8 0000000000000400 D BZ2_crc32Table
0000000000a32bb8 0000000000000800 D BZ2_rNums
0000000000a333c0 00000000000000e0 D _hb_Null_hb_buffer_t
0000000000a334a0 00000000000000c0 D _hb_Null_hb_font_t
0000000000a33560 00000000000000b8 d _hb_font_funcs_default
0000000000a33618 00000000000000b8 D _hb_Null_hb_font_funcs_t
0000000000a336d0 0000000000000048 d _hb_draw_funcs_default
0000000000a33718 00000000000000d8 D _hb_Null_hb_unicode_funcs_t
0000000000a33820 0000000000000048 D _hb_Null_hb_draw_funcs_t
0000000000a33868 00000000000001a0 D _hb_Null_hb_face_t
0000000000a33a08 0000000000000088 D _hb_Null_hb_paint_funcs_t
0000000000a33ac0 0000000000000008 D _impure_ptr
0000000000a33ac8 0000000000000160 D _impure_data
0000000000a33c30 00000000000000e7 d global_locale_string
0000000000a33d18 00000000000001a8 D __global_locale
0000000000a33ec0 0000000000000020 D __default_locale
0000000000a33ee0 0000000000000058 d tzinfo
0000000000a33f38 0000000000000018 D __sglue
0000000000a33f50 0000000000000008 D __malloc_sbrk_base
0000000000a33f58 0000000000000008 D __malloc_trim_threshold
0000000000a33f60 0000000000000810 D __malloc_av_
0000000000a34770 0000000000000010 D _tzname
0000000000a34780 0000000000000008 D environ
0000000000a34788 00000000000007b0 d caseconv_table
0000000000a34f40 0000000000000400 d _current_working_directory
0000000000a35340 0000000000002000 d handles
0000000000a37340 0000000000000010 d __stderr_handle
0000000000a37350 0000000000000010 d __stdout_handle
0000000000a37360 0000000000000010 d __stdin_handle
0000000000a37370 0000000000000118 D devoptab_list
0000000000a37488 0000000000000004 d defaultDevice
0000000000a37490 d __tdata_lma
0000000000a37498 d __tdata_lma_end
0000000000a374a0 b __bss_start__
0000000000a374a0 b completed.1
0000000000a374a8 b object.0
0000000000a374d8 0000000000000018 B stars
0000000000a374f0 0000000000000018 B bullets
0000000000a37508 0000000000000008 B shootSound
0000000000a37510 0000000000000008 B enemyTexture
0000000000a37518 0000000000000018 B enemies
0000000000a37530 0000000000000001 B gameover
0000000000a37531 0000000000000001 B reset
0000000000a37534 0000000000000004 B gameoverTime
0000000000a37538 0000000000000004 B score
0000000000a3753c 0000000000000001 B quit
0000000000a3753d 0000000000000001 B isPaused
0000000000a37540 0000000000000008 B gameoverSound
0000000000a37548 0000000000000008 B enemyHitSound
0000000000a37550 0000000000000008 B startScreenMusic
0000000000a37558 0000000000000008 B gameoverTexture
0000000000a37560 0000000000000004 b TTF_byteswapped
0000000000a37564 0000000000000004 b TTF_initialized
0000000000a37568 0000000000000008 b library
0000000000a37570 0000000000000004 b initialized
0000000000a37578 0000000000000010 b Gif89
0000000000a37588 000000000000031c b GifScreen
0000000000a378a4 0000000000000004 b ZeroDataBlock
0000000000a378a8 0000000000000100 b buf.9898
0000000000a379a8 0000000000000118 b buf.9926
0000000000a37ac0 0000000000000004 b clear_code.9952
0000000000a37ac4 0000000000000004 b code_size.9946
0000000000a37ac8 0000000000000004 b curbit.9927
0000000000a37acc 0000000000000004 b done.9929
0000000000a37ad0 0000000000000004 b end_code.9953
0000000000a37ad4 0000000000000004 b firstcode.9950
0000000000a37ad8 0000000000000004 b fresh.9943
0000000000a37adc 0000000000000004 b last_byte.9930
0000000000a37ae0 0000000000000004 b lastbit.9928
0000000000a37ae4 0000000000000004 b max_code.9948
0000000000a37ae8 0000000000000004 b max_code_size.9949
0000000000a37aec 0000000000000004 b oldcode.9951
0000000000a37af0 0000000000000004 b set_code_size.9947
0000000000a37af8 0000000000000008 b sp.9956
0000000000a37b00 0000000000008000 b stack.9955
0000000000a3fb00 0000000000008000 b table.9954
0000000000a47b00 0000000000000090 b lib
0000000000a47b90 00000000000000f0 b lib
0000000000a47c80 0000000000000004 b buflen
0000000000a47c88 0000000000000008 b error
0000000000a47c90 0000000000000008 b linebuf
0000000000a47c98 0000000000000028 b lib
0000000000a47cc0 0000000000000004 b audio_device
0000000000a47cc4 0000000000000004 b audio_opened
0000000000a47cc8 0000000000000008 b channel_done_callback
0000000000a47cd0 0000000000000008 b chunk_decoders
0000000000a47cd8 0000000000000008 b mix_channel
0000000000a47ce0 0000000000000008 b mix_postmix
0000000000a47ce8 0000000000000008 b mix_postmix_data
0000000000a47cf0 0000000000000020 b mixer
0000000000a47d10 0000000000000008 b music_data
0000000000a47d18 0000000000000004 b num_channels
0000000000a47d1c 0000000000000004 b num_decoders
0000000000a47d20 0000000000000008 b posteffects
0000000000a47d28 0000000000000004 b reserved_channels
0000000000a47d2c 0000000000000004 b ms_per_step
0000000000a47d30 0000000000000008 B music_cmd
0000000000a47d38 0000000000000008 b music_decoders
0000000000a47d40 0000000000000008 b music_finished_hook
0000000000a47d48 0000000000000008 b music_playing
0000000000a47d50 0000000000000004 b num_decoders
0000000000a47d58 0000000000000008 b soundfont_paths
0000000000a47d60 0000000000000048 b modplug
0000000000a47da8 0000000000000038 b settings
0000000000a47de0 0000000000000088 b mpg123
0000000000a47e68 0000000000000058 b vorbis
0000000000a47ec0 0000000000000040 b opus
0000000000a47f00 0000000000000100 b def_instr_name
0000000000a48000 0000000000000004 b rcf_count.10150
0000000000a48004 0000000000000004 B _Mix_effects_max_speed
0000000000a48008 0000000000000008 b pathlist
0000000000a48010 0000000000000001 b lastchan.10105
0000000000a48011 0000000000000001 b laststatus.10104
0000000000a48012 0000000000000001 b nrpn.10106
0000000000a48018 0000000000000010 b rpn_lsb.10108
0000000000a48028 0000000000000010 b rpn_msb.10107
0000000000a48038 0000000000000008 b pos_args_array
0000000000a48040 0000000000000008 b pos_args_global
0000000000a48048 0000000000000004 b position_channels
0000000000a48050 0000000000000020 b SDL_SubsystemRefCount
0000000000a48070 0000000000000004 b SDL_bInMainQuit
0000000000a48074 0000000000000004 b assertion_running.0
0000000000a48078 0000000000000004 b spinlock.1
0000000000a48080 0000000000000008 b assertion_userdata
0000000000a48088 0000000000000008 b assertion_mutex
0000000000a48090 0000000000000008 b triggered_assertions
0000000000a48098 0000000000000008 b SDL_hints
0000000000a480a0 0000000000000008 b log_function_mutex
0000000000a480a8 0000000000000008 b SDL_log_userdata
0000000000a480b0 0000000000000008 b SDL_loglevels
0000000000a480b8 0000000000000004 b format_idx_sub
0000000000a480bc 0000000000000004 b format_idx
0000000000a480c0 0000000000000080 b open_devices
0000000000a48140 00000000000000c8 b current_audio
0000000000a48208 0000000000000004 b converters_chosen.0
0000000000a48210 0000000000000008 B SDL_Convert_F32_to_S32
0000000000a48218 0000000000000008 B SDL_Convert_F32_to_U16
0000000000a48220 0000000000000008 B SDL_Convert_F32_to_S16
0000000000a48228 0000000000000008 B SDL_Convert_F32_to_U8
0000000000a48230 0000000000000008 B SDL_Convert_F32_to_S8
0000000000a48238 0000000000000008 B SDL_Convert_S32_to_F32
0000000000a48240 0000000000000008 B SDL_Convert_U16_to_F32
0000000000a48248 0000000000000008 B SDL_Convert_S16_to_F32
0000000000a48250 0000000000000008 B SDL_Convert_U8_to_F32
0000000000a48258 0000000000000008 B SDL_Convert_S8_to_F32
0000000000a48260 0000000000000004 b checked.0
0000000000a48264 0000000000000004 b SDL_EventLoggingVerbosity
0000000000a48268 0000000000000040 b SDL_EventQ
0000000000a482b0 0000000000000800 b SDL_disabled_events
0000000000a48ab0 0000000000000004 b SDL_sentinel_pending
0000000000a48ab4 0000000000000004 b SDL_event_watchers_removed
0000000000a48ab8 0000000000000004 b SDL_event_watchers_dispatching
0000000000a48abc 0000000000000004 b SDL_event_watchers_count
0000000000a48ac0 0000000000000008 b SDL_event_watchers
0000000000a48ac8 0000000000000018 b SDL_EventOK
0000000000a48ae0 0000000000000008 b SDL_event_watchers_lock
0000000000a48ae8 0000000000000004 b recordAll
0000000000a48aec 0000000000000004 b SDL_numGestureTouches
0000000000a48af0 0000000000000008 b SDL_gestureTouch
0000000000a48af8 0000000000000c18 b SDL_keyboard
0000000000a49710 0000000000000004 b track_mouse_down
0000000000a49718 0000000000000128 b SDL_mouse
0000000000a49840 0000000000000004 b send_quit_pending
0000000000a49848 0000000000000008 b track_touchid
0000000000a49850 0000000000000008 b track_fingerid
0000000000a49858 0000000000000004 b finger_touching
0000000000a49860 0000000000000008 b SDL_touchDevices
0000000000a49868 0000000000000004 b SDL_num_touch
0000000000a49870 0000000000000008 b SDL_haptics
0000000000a49878 0000000000000010 b SDL_ignored_controllers
0000000000a49888 0000000000000010 b SDL_allowed_controllers
0000000000a49898 0000000000000001 b gamecontroller_magic
0000000000a498a0 0000000000000008 b s_pDefaultMapping
0000000000a498a8 0000000000000008 b s_pSupportedControllers
0000000000a498b0 0000000000000010 b s_zeroGUID
0000000000a498c0 0000000000000008 b SDL_gamecontrollers
0000000000a498c8 0000000000000001 B SDL_joystick_magic
0000000000a498cc 0000000000000004 b SDL_joystick_allows_background_events
0000000000a498d0 0000000000000008 b SDL_joystick_players
0000000000a498d8 0000000000000004 b SDL_joystick_player_count
0000000000a498e0 0000000000000008 b SDL_joysticks
0000000000a498e8 0000000000000004 b SDL_joysticks_quitting
0000000000a498ec 0000000000000004 b SDL_joysticks_initialized
0000000000a498f0 0000000000000004 b SDL_joysticks_locked
0000000000a498f8 0000000000000004 b SDL_joystick_lock_pending
0000000000a49900 0000000000000008 b SDL_joystick_lock
0000000000a49908 0000000000000001 b texture_magic
0000000000a49909 0000000000000001 b renderer_magic
0000000000a4990c 0000000000000004 b SDL_updating_sensor
0000000000a49910 0000000000000008 b SDL_sensors
0000000000a49918 0000000000000008 b SDL_sensor_lock
0000000000a49920 0000000000000080 b SDL_global_error_str.0
0000000000a499a0 0000000000000028 b SDL_global_error.1
0000000000a499c8 0000000000000004 b tls_lock.2
0000000000a499cc 0000000000000004 b tls_being_created.3
0000000000a499d0 0000000000000004 b tls_errbuf.4
0000000000a499d4 0000000000000004 b tls_lock.5
0000000000a499d8 0000000000000004 b SDL_tls_id.6
0000000000a499e0 0000000000000008 b SDL_generic_TLS
0000000000a499e8 0000000000000008 b SDL_generic_TLS_mutex
0000000000a499f0 00000000000000d0 b SDL_timer_data
0000000000a49ac0 0000000000000004 b formats_lock
0000000000a49ac8 0000000000000008 b formats
0000000000a49ad0 0000000000000004 b SDL_messagebox_count
0000000000a49ad8 0000000000000008 b _this
0000000000a49ae0 0000000000000004 b lock.0
0000000000a49ae4 0000000000000004 b generic_local_storage
0000000000a49ae8 0000000000000004 b operationMode
0000000000a49af0 0000000000000008 b switch_window
0000000000a49af8 00000000000003c0 b state
0000000000a49eb8 0000000000000008 b start
0000000000a49ec0 0000000000000001 b started
0000000000a49ec8 0000000000000008 b g_VJoys
0000000000a49ed0 0000000000000200 b keys
0000000000a4a0d0 0000000000000008 b last_timestamp
0000000000a4a0d8 0000000000000008 b prev_buttons
0000000000a4a0e0 0000000000000001 b kbdShown
0000000000a4a0e1 0000000000000001 b kbdInited
0000000000a4a0e8 0000000000000048 b kbdAppearArg
0000000000a4a130 00000000000005d8 b kbd
0000000000a4a708 0000000000000290 b touchStateOld
0000000000a4a998 0000000000000290 b touchState
0000000000a4ac28 0000000000000030 b dummy_thread
0000000000a4ac58 0000000000000008 b _eglDriver
0000000000a4ac60 0000000000000010 b _eglModuleMutex
0000000000a4ac70 0000000000000010 b _eglGlobalMutex
0000000000a4ac80 0000000000000004 b drifb_ID
0000000000a4ac88 0000000000000010 b nouveau_screen_mutex
0000000000a4ac98 0000000000000004 b id.1
0000000000a4ac9c 0000000000000004 b id.0
0000000000a4aca0 0000000000001000 b buf.10
0000000000a4bca0 0000000000000040 b rest.3
0000000000a4bce0 0000000000000001 b value.7
0000000000a4bce8 0000000000000010 B OneTimeLock
0000000000a4bcf8 0000000000000400 B _mesa_ubyte_to_float_color_tab
0000000000a4c0f8 0000000000000001 b initialized.0
0000000000a4c100 0000000000000010 b DynamicIDMutex
0000000000a4c110 0000000000000004 b oom_msg_id.0
0000000000a4c118 000000000000063c b InstSize
0000000000a4c754 0000000000000001 b tableInitialized.70
0000000000a4c758 0000000000000008 b LogFile
0000000000a4c760 0000000000000004 b error_msg_id.1
0000000000a4c764 0000000000000004 b numCalls.2
0000000000a4c768 0000000000000110 B _mesa_extension_override_disables
0000000000a4c878 0000000000000110 B _mesa_extension_override_enables
0000000000a4c988 0000000000000088 b unrecognized_extensions
0000000000a4ca10 0000000000000001 b warned.0
0000000000a4ca18 00000000000004d8 b DummyFramebuffer
0000000000a4cef0 0000000000000058 b DummyRenderbuffer
0000000000a4cf48 00000000000004d8 b IncompleteFramebuffer
0000000000a4d420 0000000000000004 b msg_id.1
0000000000a4d424 0000000000000004 b msg_id.2
0000000000a4d428 0000000000000008 b format_array_format_table
0000000000a4d430 0000000000000004 b format_array_format_table_exists
0000000000a4d434 0000000000000004 b msg_id.0
0000000000a4d438 00000000000012c8 B driDispatchRemapTable
0000000000a4e700 0000000000000001 b initialized.0
0000000000a4e708 0000000000000008 b path.0
0000000000a4e710 0000000000000001 b read_env_var.1
0000000000a4e714 0000000000000004 b msg_id.1
0000000000a4e718 0000000000000001 b initialized.1
0000000000a4e719 0000000000000001 b initialized.3
0000000000a4e720 0000000000000bc0 b table.0
0000000000a4f2e0 0000000000000bc0 b table.2
0000000000a4fea0 0000000000000014 b token_tmp
0000000000a4feb4 0000000000000001 b value.0
0000000000a4feb8 0000000000000004 B ST_DEBUG
0000000000a4fec0 0000000000000008 b value.0
0000000000a4fec8 0000000000000008 b guard variable for (anonymous namespace)::builtin_builder::add_image_function(char const*, char const*, ir_function_signature* ((anonymous namespace)::builtin_builder::*)(glsl_type const*, unsigned int, unsigned int), unsigned int, unsigned int, ir_intrinsic_id)::types
0000000000a4fed0 0000000000000004 b builtin_users
0000000000a4fed8 0000000000000010 b builtins_lock
0000000000a4fee8 0000000000000010 b builtins
0000000000a4fef8 0000000000000108 b (anonymous namespace)::builtin_builder::add_image_function(char const*, char const*, ir_function_signature* ((anonymous namespace)::builtin_builder::*)(glsl_type const*, unsigned int, unsigned int), unsigned int, unsigned int, ir_intrinsic_id)::types
0000000000a50000 0000000000000001 B ir_variable::temporaries_allocate_names
0000000000a50004 0000000000000004 B glcpp_parser_debug
0000000000a50008 0000000000000008 b guard variable for glsl_type::vec(unsigned int)::ts
0000000000a50010 0000000000000008 b guard variable for glsl_type::bvec(unsigned int)::ts
0000000000a50018 0000000000000008 b guard variable for glsl_type::dvec(unsigned int)::ts
0000000000a50020 0000000000000008 b guard variable for glsl_type::ivec(unsigned int)::ts
0000000000a50028 0000000000000008 b guard variable for glsl_type::uvec(unsigned int)::ts
0000000000a50030 0000000000000008 b guard variable for glsl_type::i8vec(unsigned int)::ts
0000000000a50038 0000000000000008 b guard variable for glsl_type::u8vec(unsigned int)::ts
0000000000a50040 0000000000000008 b guard variable for glsl_type::f16vec(unsigned int)::ts
0000000000a50048 0000000000000008 b guard variable for glsl_type::i16vec(unsigned int)::ts
0000000000a50050 0000000000000008 b guard variable for glsl_type::i64vec(unsigned int)::ts
0000000000a50058 0000000000000008 b guard variable for glsl_type::u16vec(unsigned int)::ts
0000000000a50060 0000000000000008 b guard variable for glsl_type::u64vec(unsigned int)::ts
0000000000a50068 0000000000000004 b glsl_type_users
0000000000a50070 0000000000000030 B glsl_type::_bool_type
0000000000a500a0 0000000000000030 B glsl_type::_mat2_type
0000000000a500d0 0000000000000030 B glsl_type::_mat3_type
0000000000a50100 0000000000000030 B glsl_type::_mat4_type
0000000000a50130 0000000000000030 B glsl_type::_uint_type
0000000000a50160 0000000000000030 B glsl_type::_vec2_type
0000000000a50190 0000000000000030 B glsl_type::_vec3_type
0000000000a501c0 0000000000000030 B glsl_type::_vec4_type
0000000000a501f0 0000000000000030 B glsl_type::_vec8_type
0000000000a50220 0000000000000030 B glsl_type::_void_type
0000000000a50250 0000000000000010 B glsl_type::hash_mutex
0000000000a50260 0000000000000030 B glsl_type::_bvec2_type
0000000000a50290 0000000000000030 B glsl_type::_bvec3_type
0000000000a502c0 0000000000000030 B glsl_type::_bvec4_type
0000000000a502f0 0000000000000030 B glsl_type::_bvec8_type
0000000000a50320 0000000000000030 B glsl_type::_dmat2_type
0000000000a50350 0000000000000030 B glsl_type::_dmat3_type
0000000000a50380 0000000000000030 B glsl_type::_dmat4_type
0000000000a503b0 0000000000000030 B glsl_type::_dvec2_type
0000000000a503e0 0000000000000030 B glsl_type::_dvec3_type
0000000000a50410 0000000000000030 B glsl_type::_dvec4_type
0000000000a50440 0000000000000030 B glsl_type::_dvec8_type
0000000000a50470 0000000000000030 B glsl_type::_error_type
0000000000a504a0 0000000000000030 B glsl_type::_float_type
0000000000a504d0 0000000000000030 B glsl_type::_ivec2_type
0000000000a50500 0000000000000030 B glsl_type::_ivec3_type
0000000000a50530 0000000000000030 B glsl_type::_ivec4_type
0000000000a50560 0000000000000030 B glsl_type::_ivec8_type
0000000000a50590 0000000000000030 B glsl_type::_uvec2_type
0000000000a505c0 0000000000000030 B glsl_type::_uvec3_type
0000000000a505f0 0000000000000030 B glsl_type::_uvec4_type
0000000000a50620 0000000000000030 B glsl_type::_uvec8_type
0000000000a50650 0000000000000030 B glsl_type::_vec16_type
0000000000a50680 0000000000000008 B glsl_type::array_types
0000000000a50688 0000000000000030 B glsl_type::_bvec16_type
0000000000a506b8 0000000000000030 B glsl_type::_double_type
0000000000a506e8 0000000000000030 B glsl_type::_dvec16_type
0000000000a50718 0000000000000030 B glsl_type::_i8vec2_type
0000000000a50748 0000000000000030 B glsl_type::_i8vec3_type
0000000000a50778 0000000000000030 B glsl_type::_i8vec4_type
0000000000a507a8 0000000000000030 B glsl_type::_i8vec8_type
0000000000a507d8 0000000000000030 B glsl_type::_int8_t_type
0000000000a50808 0000000000000030 B glsl_type::_ivec16_type
0000000000a50838 0000000000000030 B glsl_type::_mat2x3_type
0000000000a50868 0000000000000030 B glsl_type::_mat2x4_type
0000000000a50898 0000000000000030 B glsl_type::_mat3x2_type
0000000000a508c8 0000000000000030 B glsl_type::_mat3x4_type
0000000000a508f8 0000000000000030 B glsl_type::_mat4x2_type
0000000000a50928 0000000000000030 B glsl_type::_mat4x3_type
0000000000a50958 0000000000000030 B glsl_type::_u8vec2_type
0000000000a50988 0000000000000030 B glsl_type::_u8vec3_type
0000000000a509b8 0000000000000030 B glsl_type::_u8vec4_type
0000000000a509e8 0000000000000030 B glsl_type::_u8vec8_type
0000000000a50a18 0000000000000030 B glsl_type::_uvec16_type
0000000000a50a48 0000000000000008 B glsl_type::struct_types
0000000000a50a50 0000000000000030 B glsl_type::_dmat2x3_type
0000000000a50a80 0000000000000030 B glsl_type::_dmat2x4_type
0000000000a50ab0 0000000000000030 B glsl_type::_dmat3x2_type
0000000000a50ae0 0000000000000030 B glsl_type::_dmat3x4_type
0000000000a50b10 0000000000000030 B glsl_type::_dmat4x2_type
0000000000a50b40 0000000000000030 B glsl_type::_dmat4x3_type
0000000000a50b70 0000000000000030 B glsl_type::_f16mat2_type
0000000000a50ba0 0000000000000030 B glsl_type::_f16mat3_type
0000000000a50bd0 0000000000000030 B glsl_type::_f16mat4_type
0000000000a50c00 0000000000000030 B glsl_type::_f16vec2_type
0000000000a50c30 0000000000000030 B glsl_type::_f16vec3_type
0000000000a50c60 0000000000000030 B glsl_type::_f16vec4_type
0000000000a50c90 0000000000000030 B glsl_type::_f16vec8_type
0000000000a50cc0 0000000000000030 B glsl_type::_i16vec2_type
0000000000a50cf0 0000000000000030 B glsl_type::_i16vec3_type
0000000000a50d20 0000000000000030 B glsl_type::_i16vec4_type
0000000000a50d50 0000000000000030 B glsl_type::_i16vec8_type
0000000000a50d80 0000000000000030 B glsl_type::_i64vec2_type
0000000000a50db0 0000000000000030 B glsl_type::_i64vec3_type
0000000000a50de0 0000000000000030 B glsl_type::_i64vec4_type
0000000000a50e10 0000000000000030 B glsl_type::_i64vec8_type
0000000000a50e40 0000000000000030 B glsl_type::_i8vec16_type
0000000000a50e70 0000000000000030 B glsl_type::_image1D_type
0000000000a50ea0 0000000000000030 B glsl_type::_image2D_type
0000000000a50ed0 0000000000000030 B glsl_type::_image3D_type
0000000000a50f00 0000000000000030 B glsl_type::_int16_t_type
0000000000a50f30 0000000000000030 B glsl_type::_int64_t_type
0000000000a50f60 0000000000000030 B glsl_type::_sampler_type
0000000000a50f90 0000000000000030 B glsl_type::_u16vec2_type
0000000000a50fc0 0000000000000030 B glsl_type::_u16vec3_type
0000000000a50ff0 0000000000000030 B glsl_type::_u16vec4_type
0000000000a51020 0000000000000030 B glsl_type::_u16vec8_type
0000000000a51050 0000000000000030 B glsl_type::_u64vec2_type
0000000000a51080 0000000000000030 B glsl_type::_u64vec3_type
0000000000a510b0 0000000000000030 B glsl_type::_u64vec4_type
0000000000a510e0 0000000000000030 B glsl_type::_u64vec8_type
0000000000a51110 0000000000000030 B glsl_type::_u8vec16_type
0000000000a51140 0000000000000030 B glsl_type::_uint8_t_type
0000000000a51170 0000000000000030 B glsl_type::_f16vec16_type
0000000000a511a0 0000000000000030 B glsl_type::_i16vec16_type
0000000000a511d0 0000000000000030 B glsl_type::_i64vec16_type
0000000000a51200 0000000000000030 B glsl_type::_iimage1D_type
0000000000a51230 0000000000000030 B glsl_type::_iimage2D_type
0000000000a51260 0000000000000030 B glsl_type::_iimage3D_type
0000000000a51290 0000000000000030 B glsl_type::_u16vec16_type
0000000000a512c0 0000000000000030 B glsl_type::_u64vec16_type
0000000000a512f0 0000000000000030 B glsl_type::_uimage1D_type
0000000000a51320 0000000000000030 B glsl_type::_uimage2D_type
0000000000a51350 0000000000000030 B glsl_type::_uimage3D_type
0000000000a51380 0000000000000030 B glsl_type::_uint16_t_type
0000000000a513b0 0000000000000030 B glsl_type::_uint64_t_type
0000000000a513e0 0000000000000008 B glsl_type::function_types
0000000000a513e8 0000000000000030 B glsl_type::_f16mat2x3_type
0000000000a51418 0000000000000030 B glsl_type::_f16mat2x4_type
0000000000a51448 0000000000000030 B glsl_type::_f16mat3x2_type
0000000000a51478 0000000000000030 B glsl_type::_f16mat3x4_type
0000000000a514a8 0000000000000030 B glsl_type::_f16mat4x2_type
0000000000a514d8 0000000000000030 B glsl_type::_f16mat4x3_type
0000000000a51508 0000000000000030 B glsl_type::_float16_t_type
0000000000a51538 0000000000000030 B glsl_type::_image2DMS_type
0000000000a51568 0000000000000030 B glsl_type::_imageCube_type
0000000000a51598 0000000000000030 B glsl_type::_sampler1D_type
0000000000a515c8 0000000000000030 B glsl_type::_sampler2D_type
0000000000a515f8 0000000000000030 B glsl_type::_sampler3D_type
0000000000a51628 0000000000000008 B glsl_type::interface_types
0000000000a51630 0000000000000030 B glsl_type::_iimage2DMS_type
0000000000a51660 0000000000000030 B glsl_type::_iimageCube_type
0000000000a51690 0000000000000030 B glsl_type::_isampler1D_type
0000000000a516c0 0000000000000030 B glsl_type::_isampler2D_type
0000000000a516f0 0000000000000030 B glsl_type::_isampler3D_type
0000000000a51720 0000000000000030 B glsl_type::_uimage2DMS_type
0000000000a51750 0000000000000030 B glsl_type::_uimageCube_type
0000000000a51780 0000000000000030 B glsl_type::_usampler1D_type
0000000000a517b0 0000000000000030 B glsl_type::_usampler2D_type
0000000000a517e0 0000000000000030 B glsl_type::_usampler3D_type
0000000000a51810 0000000000000008 B glsl_type::subroutine_types
0000000000a51818 0000000000000030 B glsl_type::_atomic_uint_type
0000000000a51848 0000000000000030 B glsl_type::_image2DRect_type
0000000000a51878 0000000000000030 B glsl_type::_imageBuffer_type
0000000000a518a8 0000000000000030 B glsl_type::_sampler2DMS_type
0000000000a518d8 0000000000000030 B glsl_type::_samplerCube_type
0000000000a51908 0000000000000030 B glsl_type::_iimage2DRect_type
0000000000a51938 0000000000000030 B glsl_type::_iimageBuffer_type
0000000000a51968 0000000000000030 B glsl_type::_image1DArray_type
0000000000a51998 0000000000000030 B glsl_type::_image2DArray_type
0000000000a519c8 0000000000000030 B glsl_type::_isampler2DMS_type
0000000000a519f8 0000000000000030 B glsl_type::_isamplerCube_type
0000000000a51a28 0000000000000030 B glsl_type::_subpassInput_type
0000000000a51a58 0000000000000030 B glsl_type::_uimage2DRect_type
0000000000a51a88 0000000000000030 B glsl_type::_uimageBuffer_type
0000000000a51ab8 0000000000000030 B glsl_type::_usampler2DMS_type
0000000000a51ae8 0000000000000030 B glsl_type::_usamplerCube_type
0000000000a51b18 0000000000000030 B glsl_type::_iimage1DArray_type
0000000000a51b48 0000000000000030 B glsl_type::_iimage2DArray_type
0000000000a51b78 0000000000000030 B glsl_type::_isubpassInput_type
0000000000a51ba8 0000000000000030 B glsl_type::_sampler2DRect_type
0000000000a51bd8 0000000000000030 B glsl_type::_samplerBuffer_type
0000000000a51c08 0000000000000030 B glsl_type::_uimage1DArray_type
0000000000a51c38 0000000000000030 B glsl_type::_uimage2DArray_type
0000000000a51c68 0000000000000030 B glsl_type::_usubpassInput_type
0000000000a51c98 0000000000000030 B glsl_type::_image2DMSArray_type
0000000000a51cc8 0000000000000030 B glsl_type::_imageCubeArray_type
0000000000a51cf8 0000000000000030 B glsl_type::_isampler2DRect_type
0000000000a51d28 0000000000000030 B glsl_type::_isamplerBuffer_type
0000000000a51d58 0000000000000030 B glsl_type::_sampler1DArray_type
0000000000a51d88 0000000000000030 B glsl_type::_sampler2DArray_type
0000000000a51db8 0000000000000030 B glsl_type::_subpassInputMS_type
0000000000a51de8 0000000000000030 B glsl_type::_usampler2DRect_type
0000000000a51e18 0000000000000030 B glsl_type::_usamplerBuffer_type
0000000000a51e48 0000000000000030 B glsl_type::_iimage2DMSArray_type
0000000000a51e78 0000000000000030 B glsl_type::_iimageCubeArray_type
0000000000a51ea8 0000000000000030 B glsl_type::_isampler1DArray_type
0000000000a51ed8 0000000000000030 B glsl_type::_isampler2DArray_type
0000000000a51f08 0000000000000030 B glsl_type::_isubpassInputMS_type
0000000000a51f38 0000000000000030 B glsl_type::_sampler1DShadow_type
0000000000a51f68 0000000000000030 B glsl_type::_sampler2DShadow_type
0000000000a51f98 0000000000000030 B glsl_type::_uimage2DMSArray_type
0000000000a51fc8 0000000000000030 B glsl_type::_uimageCubeArray_type
0000000000a51ff8 0000000000000030 B glsl_type::_usampler1DArray_type
0000000000a52028 0000000000000030 B glsl_type::_usampler2DArray_type
0000000000a52058 0000000000000030 B glsl_type::_usubpassInputMS_type
0000000000a52088 0000000000000008 B glsl_type::explicit_matrix_types
0000000000a52090 0000000000000030 B glsl_type::_sampler2DMSArray_type
0000000000a520c0 0000000000000030 B glsl_type::_samplerCubeArray_type
0000000000a520f0 0000000000000030 B glsl_type::_isampler2DMSArray_type
0000000000a52120 0000000000000030 B glsl_type::_isamplerCubeArray_type
0000000000a52150 0000000000000030 B glsl_type::_samplerCubeShadow_type
0000000000a52180 0000000000000030 B glsl_type::_usampler2DMSArray_type
0000000000a521b0 0000000000000030 B glsl_type::_usamplerCubeArray_type
0000000000a521e0 0000000000000030 B glsl_type::_samplerExternalOES_type
0000000000a52210 0000000000000030 B glsl_type::_sampler2DRectShadow_type
0000000000a52240 0000000000000030 B glsl_type::_sampler1DArrayShadow_type
0000000000a52270 0000000000000030 B glsl_type::_sampler2DArrayShadow_type
0000000000a522a0 0000000000000030 B glsl_type::_samplerCubeArrayShadow_type
0000000000a522d0 0000000000000030 B glsl_type::_int_type
0000000000a52300 0000000000000030 b glsl_type::vec(unsigned int)::ts
0000000000a52330 0000000000000030 b glsl_type::bvec(unsigned int)::ts
0000000000a52360 0000000000000030 b glsl_type::dvec(unsigned int)::ts
0000000000a52390 0000000000000030 b glsl_type::ivec(unsigned int)::ts
0000000000a523c0 0000000000000030 b glsl_type::uvec(unsigned int)::ts
0000000000a523f0 0000000000000030 b glsl_type::i8vec(unsigned int)::ts
0000000000a52420 0000000000000030 b glsl_type::u8vec(unsigned int)::ts
0000000000a52450 0000000000000030 b glsl_type::f16vec(unsigned int)::ts
0000000000a52480 0000000000000030 b glsl_type::i16vec(unsigned int)::ts
0000000000a524b0 0000000000000030 b glsl_type::i64vec(unsigned int)::ts
0000000000a524e0 0000000000000030 b glsl_type::u16vec(unsigned int)::ts
0000000000a52510 0000000000000030 b glsl_type::u64vec(unsigned int)::ts
0000000000a52540 0000000000000400 b views.0
0000000000a52940 0000000000000100 b zeros.1
0000000000a52a40 0000000000000080 b error_tokens
0000000000a52ac0 0000000000000004 b id.0
0000000000a52ac8 0000000000000080 b buffer.1
0000000000a52b48 0000000000000004 B nouveau_mesa_debug
0000000000a52b4c 0000000000000004 b id.1
0000000000a52b50 0000000000000004 b id.0
0000000000a52b58 0000000000000008 b fout.0
0000000000a52b60 0000000000000008 b loc
0000000000a52b68 0000000000000004 b cpu_once_flag
0000000000a52b70 0000000000000014 B util_cpu_caps
0000000000a52b88 0000000000000018 b address_reg
0000000000a52ba0 0000000000000018 b undef_dst
0000000000a52bb8 0000000000000018 b undef_src
0000000000a52bd0 0000000000000050 b buf.0
0000000000a52c20 000000000000000a b s.4
0000000000a52c30 0000000000000014 b s.6
0000000000a52c48 0000000000000014 b s.9
0000000000a52c60 0000000000000064 b str.3
0000000000a52cc8 00000000000003f0 B _mesa_DummyProgram
0000000000a530b8 00000000000000c8 b DummyShader
0000000000a53180 00000000000000a0 b DummyBufferObject
0000000000a53220 0000000000000001 b disable.2
0000000000a53224 0000000000000004 b id.0
0000000000a53228 0000000000000004 b id.1
0000000000a5322c 0000000000000001 b read.3
0000000000a53230 0000000000000004 b warnCount.0
0000000000a53238 0000000000000004 b DummySemaphoreObject
0000000000a5323c 0000000000000004 b count.0
0000000000a53240 0000000000000078 b inv_tab
0000000000a532b8 0000000000004800 b CachedShaders
0000000000a57ab8 0000000000000004 b NumCachedShaders
0000000000a57ac0 0000000000000020 b address_reg
0000000000a57ae0 0000000000000020 b address_reg2
0000000000a57b00 0000000000000020 b sampler_reladdr
0000000000a57b20 0000000000000020 b undef_dst
0000000000a57b40 0000000000000020 b undef_src
0000000000a57b60 0000000000000004 b glsl_to_tgsi_visitor::visit(ir_constant*)::in_array
0000000000a57b68 00000000000000f0 b gl_FogParameters_fields
0000000000a57c58 0000000000000090 b gl_LightProducts_fields
0000000000a57ce8 0000000000000150 b gl_PointParameters_fields
0000000000a57e38 0000000000000030 b gl_LightModelProducts_fields
0000000000a57e68 00000000000000f0 b gl_MaterialParameters_fields
0000000000a57f58 0000000000000090 b gl_DepthRangeParameters_fields
0000000000a57fe8 0000000000000030 b gl_LightModelParameters_fields
0000000000a58018 0000000000000240 b gl_LightSourceParameters_fields
0000000000a58258 0000000000000030 B glsl_type::_struct_gl_FogParameters_type
0000000000a58288 0000000000000030 B glsl_type::_struct_gl_LightProducts_type
0000000000a582b8 0000000000000030 B glsl_type::_struct_gl_PointParameters_type
0000000000a582e8 0000000000000030 B glsl_type::_struct_gl_LightModelProducts_type
0000000000a58318 0000000000000030 B glsl_type::_struct_gl_MaterialParameters_type
0000000000a58348 0000000000000030 B glsl_type::_struct_gl_DepthRangeParameters_type
0000000000a58378 0000000000000030 B glsl_type::_struct_gl_LightModelParameters_type
0000000000a583a8 0000000000000030 B glsl_type::_struct_gl_LightSourceParameters_type
0000000000a583d8 0000000000000008 b nv50_ir::colour
0000000000a583e0 0000000000000121 B nv50_ir::GCRA::relDegree
0000000000a58508 0000000000000014 b s.0
0000000000a5851c 0000000000000001 b value.0
0000000000a58520 0000000000000010 b dynamic_mutex.0
0000000000a58530 0000000000001800 b dynamic_stubs
0000000000a59d30 0000000000000004 b flag.1
0000000000a59d34 0000000000000004 b num_dynamic_stubs
0000000000a59d38 0000000000000008 b nop_handler
0000000000a59d40 0000000000000004 b (anonymous namespace)::get_static_cond()::once
0000000000a59d50 0000000000000010 b (anonymous namespace)::fake_cond
0000000000a59d60 0000000000000008 b (anonymous namespace)::static_cond
0000000000a59d68 0000000000000004 b (anonymous namespace)::get_static_mutex()::once
0000000000a59d70 0000000000000010 b (anonymous namespace)::fake_mutex
0000000000a59d80 0000000000000008 b (anonymous namespace)::static_mutex
0000000000a59d90 0000000000000050 B __gnu_internal::buf_wcerr_sync
0000000000a59de0 0000000000000050 B __gnu_internal::buf_wcin_sync
0000000000a59e30 0000000000000050 B __gnu_internal::buf_wcout_sync
0000000000a59e80 0000000000000050 B __gnu_internal::buf_cerr_sync
0000000000a59ed0 0000000000000050 B __gnu_internal::buf_cin_sync
0000000000a59f20 0000000000000050 B __gnu_internal::buf_cout_sync
0000000000a59f70 0000000000000001 b std::__ioinit
0000000000a59f78 0000000000000110 B std::wclog
0000000000a5a088 0000000000000110 B std::wcerr
0000000000a5a198 0000000000000110 B std::wcout
0000000000a5a2a8 0000000000000118 B std::wcin
0000000000a5a3c0 0000000000000110 B std::clog
0000000000a5a4d0 0000000000000110 B std::cerr
0000000000a5a5e0 0000000000000110 B std::cout
0000000000a5a6f0 0000000000000118 B std::cin
0000000000a5a808 0000000000000004 B std::locale::id::_S_refcount
0000000000a5a810 0000000000000004 B std::locale::facet::_S_once
0000000000a5a818 0000000000000008 B std::locale::facet::_S_c_locale
0000000000a5a820 0000000000000004 B std::locale::_S_once
0000000000a5a828 0000000000000008 B std::locale::_S_global
0000000000a5a830 0000000000000008 B std::locale::_S_classic
0000000000a5a838 0000000000000008 b guard variable for (anonymous namespace)::get_locale_cache_mutex()::locale_cache_mutex
0000000000a5a840 0000000000000010 b (anonymous namespace)::get_locale_cache_mutex()::locale_cache_mutex
0000000000a5a850 0000000000000020 V std::string::_Rep::_S_empty_rep_storage
0000000000a5a870 0000000000000020 V std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_Rep::_S_empty_rep_storage
0000000000a5a890 0000000000000008 B std::ctype<wchar_t>::id
0000000000a5a898 0000000000000008 B std::ctype<char>::id
0000000000a5a8a0 0000000000000008 V guard variable for std::__cxx11::collate<wchar_t>::id
0000000000a5a8a8 0000000000000008 V guard variable for std::__cxx11::messages<wchar_t>::id
0000000000a5a8b0 0000000000000008 V guard variable for std::__cxx11::time_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::id
0000000000a5a8b8 0000000000000008 V guard variable for std::__cxx11::numpunct<wchar_t>::id
0000000000a5a8c0 0000000000000008 V guard variable for std::__cxx11::moneypunct<wchar_t, true>::id
0000000000a5a8c8 0000000000000008 V guard variable for std::__cxx11::moneypunct<wchar_t, false>::id
0000000000a5a8d0 0000000000000008 V guard variable for std::__cxx11::money_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::id
0000000000a5a8d8 0000000000000008 V guard variable for std::__cxx11::money_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::id
0000000000a5a8e0 0000000000000008 V std::__cxx11::collate<wchar_t>::id
0000000000a5a8e8 0000000000000008 V std::__cxx11::messages<wchar_t>::id
0000000000a5a8f0 0000000000000008 V std::__cxx11::time_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::id
0000000000a5a8f8 0000000000000008 V std::__cxx11::numpunct<wchar_t>::id
0000000000a5a900 0000000000000008 V std::__cxx11::moneypunct<wchar_t, true>::id
0000000000a5a908 0000000000000008 V std::__cxx11::moneypunct<wchar_t, false>::id
0000000000a5a910 0000000000000008 V std::__cxx11::money_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::id
0000000000a5a918 0000000000000008 V std::__cxx11::money_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::id
0000000000a5a920 0000000000000004 B std::ios_base::Init::_S_refcount
0000000000a5a928 0000000000000008 V guard variable for std::collate<char>::id
0000000000a5a930 0000000000000008 V guard variable for std::messages<char>::id
0000000000a5a938 0000000000000008 V guard variable for std::time_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::id
0000000000a5a940 0000000000000008 V guard variable for std::time_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::id
0000000000a5a948 0000000000000008 V guard variable for std::__timepunct<char>::id
0000000000a5a950 0000000000000008 V guard variable for std::numpunct<char>::id
0000000000a5a958 0000000000000008 V guard variable for std::moneypunct<char, true>::id
0000000000a5a960 0000000000000008 V guard variable for std::moneypunct<char, false>::id
0000000000a5a968 0000000000000008 V guard variable for std::money_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::id
0000000000a5a970 0000000000000008 V guard variable for std::money_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::id
0000000000a5a978 0000000000000008 V guard variable for std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::id
0000000000a5a980 0000000000000008 V guard variable for std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::id
0000000000a5a988 0000000000000008 V std::collate<char>::id
0000000000a5a990 0000000000000008 V std::messages<char>::id
0000000000a5a998 0000000000000008 V std::time_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::id
0000000000a5a9a0 0000000000000008 V std::time_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::id
0000000000a5a9a8 0000000000000008 V std::__timepunct<char>::id
0000000000a5a9b0 0000000000000008 V std::numpunct<char>::id
0000000000a5a9b8 0000000000000008 V std::moneypunct<char, true>::id
0000000000a5a9c0 0000000000000008 V std::moneypunct<char, false>::id
0000000000a5a9c8 0000000000000008 V std::money_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::id
0000000000a5a9d0 0000000000000008 V std::money_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::id
0000000000a5a9d8 0000000000000008 V std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::id
0000000000a5a9e0 0000000000000008 V std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::id
0000000000a5a9f0 0000000000000190 b (anonymous namespace)::timepunct_cache_w
0000000000a5ab80 00000000000000a0 b (anonymous namespace)::moneypunct_cache_wf
0000000000a5ac20 00000000000000a0 b (anonymous namespace)::moneypunct_cache_wt
0000000000a5acc0 0000000000000150 b (anonymous namespace)::numpunct_cache_w
0000000000a5ae10 0000000000000190 b (anonymous namespace)::timepunct_cache_c
0000000000a5afa0 0000000000000070 b (anonymous namespace)::moneypunct_cache_cf
0000000000a5b010 0000000000000070 b (anonymous namespace)::moneypunct_cache_ct
0000000000a5b080 0000000000000090 b (anonymous namespace)::numpunct_cache_c
0000000000a5b110 0000000000000010 b (anonymous namespace)::codecvt_c32_c8
0000000000a5b120 0000000000000010 b (anonymous namespace)::codecvt_c16_c8
0000000000a5b130 0000000000000010 b (anonymous namespace)::codecvt_c32
0000000000a5b140 0000000000000010 b (anonymous namespace)::codecvt_c16
0000000000a5b150 0000000000000020 b (anonymous namespace)::messages_w
0000000000a5b170 0000000000000010 b (anonymous namespace)::time_put_w
0000000000a5b180 0000000000000010 b (anonymous namespace)::time_get_w
0000000000a5b190 0000000000000028 b (anonymous namespace)::timepunct_w
0000000000a5b1c0 0000000000000010 b (anonymous namespace)::money_put_w
0000000000a5b1d0 0000000000000010 b (anonymous namespace)::money_get_w
0000000000a5b1e0 0000000000000018 b (anonymous namespace)::moneypunct_wf
0000000000a5b200 0000000000000018 b (anonymous namespace)::moneypunct_wt
0000000000a5b220 0000000000000018 b (anonymous namespace)::codecvt_w
0000000000a5b240 0000000000000010 b (anonymous namespace)::num_put_w
0000000000a5b250 0000000000000010 b (anonymous namespace)::num_get_w
0000000000a5b260 0000000000000018 b (anonymous namespace)::numpunct_w
0000000000a5b280 0000000000000018 b (anonymous namespace)::collate_w
0000000000a5b2a0 00000000000004f0 b (anonymous namespace)::ctype_w
0000000000a5b790 0000000000000020 b (anonymous namespace)::messages_c
0000000000a5b7b0 0000000000000010 b (anonymous namespace)::time_put_c
0000000000a5b7c0 0000000000000010 b (anonymous namespace)::time_get_c
0000000000a5b7d0 0000000000000028 b (anonymous namespace)::timepunct_c
0000000000a5b800 0000000000000010 b (anonymous namespace)::money_put_c
0000000000a5b810 0000000000000010 b (anonymous namespace)::money_get_c
0000000000a5b820 0000000000000018 b (anonymous namespace)::moneypunct_cf
0000000000a5b840 0000000000000018 b (anonymous namespace)::moneypunct_ct
0000000000a5b860 0000000000000018 b (anonymous namespace)::codecvt_c
0000000000a5b880 0000000000000010 b (anonymous namespace)::num_put_c
0000000000a5b890 0000000000000010 b (anonymous namespace)::num_get_c
0000000000a5b8a0 0000000000000018 b (anonymous namespace)::numpunct_c
0000000000a5b8c0 0000000000000018 b (anonymous namespace)::collate_c
0000000000a5b8e0 0000000000000240 b (anonymous namespace)::ctype_c
0000000000a5bb20 0000000000000180 b (anonymous namespace)::cache_vec
0000000000a5bca0 0000000000000180 b (anonymous namespace)::facet_vec
0000000000a5be20 000000000000000c b (anonymous namespace)::name_c
0000000000a5be30 0000000000000030 b (anonymous namespace)::name_vec
0000000000a5be60 0000000000000008 b (anonymous namespace)::c_locale
0000000000a5be70 0000000000000028 b (anonymous namespace)::c_locale_impl
0000000000a5be98 0000000000000008 b guard variable for (anonymous namespace)::get_locale_mutex()::locale_mutex
0000000000a5bea0 0000000000000010 b (anonymous namespace)::get_locale_mutex()::locale_mutex
0000000000a5beb0 0000000000000008 V guard variable for std::collate<wchar_t>::id
0000000000a5beb8 0000000000000008 V guard variable for std::messages<wchar_t>::id
0000000000a5bec0 0000000000000008 V guard variable for std::time_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::id
0000000000a5bec8 0000000000000008 V guard variable for std::time_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::id
0000000000a5bed0 0000000000000008 V guard variable for std::__timepunct<wchar_t>::id
0000000000a5bed8 0000000000000008 V guard variable for std::numpunct<wchar_t>::id
0000000000a5bee0 0000000000000008 V guard variable for std::moneypunct<wchar_t, true>::id
0000000000a5bee8 0000000000000008 V guard variable for std::moneypunct<wchar_t, false>::id
0000000000a5bef0 0000000000000008 V guard variable for std::money_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::id
0000000000a5bef8 0000000000000008 V guard variable for std::money_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::id
0000000000a5bf00 0000000000000008 V guard variable for std::num_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::id
0000000000a5bf08 0000000000000008 V guard variable for std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::id
0000000000a5bf10 0000000000000008 V std::collate<wchar_t>::id
0000000000a5bf18 0000000000000008 V std::messages<wchar_t>::id
0000000000a5bf20 0000000000000008 V std::time_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::id
0000000000a5bf28 0000000000000008 V std::time_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::id
0000000000a5bf30 0000000000000008 V std::__timepunct<wchar_t>::id
0000000000a5bf38 0000000000000008 V std::numpunct<wchar_t>::id
0000000000a5bf40 0000000000000008 V std::moneypunct<wchar_t, true>::id
0000000000a5bf48 0000000000000008 V std::moneypunct<wchar_t, false>::id
0000000000a5bf50 0000000000000008 V std::money_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::id
0000000000a5bf58 0000000000000008 V std::money_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::id
0000000000a5bf60 0000000000000008 V std::num_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::id
0000000000a5bf68 0000000000000008 V std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::id
0000000000a5bf70 0000000000000028 b (anonymous namespace)::emergency_pool
0000000000a5bf98 0000000000000004 b init
0000000000a5bf9c 0000000000000001 B __eh_globals_init::_S_init
0000000000a5bfa0 0000000000000010 b (anonymous namespace)::eh_globals
0000000000a5bfb0 0000000000000008 b (anonymous namespace)::__new_handler
0000000000a5bfb8 0000000000000008 B std::codecvt<wchar_t, char, _mbstate_t>::id
0000000000a5bfc0 0000000000000008 B std::codecvt<char, char, _mbstate_t>::id
0000000000a5bfc8 0000000000000008 B std::codecvt<char32_t, char8_t, _mbstate_t>::id
0000000000a5bfd0 0000000000000008 B std::codecvt<char16_t, char8_t, _mbstate_t>::id
0000000000a5bfd8 0000000000000008 B std::codecvt<char32_t, char, _mbstate_t>::id
0000000000a5bfe0 0000000000000008 B std::codecvt<char16_t, char, _mbstate_t>::id
0000000000a5bff0 0000000000000020 b std::(anonymous namespace)::messages_w
0000000000a5c010 0000000000000010 b std::(anonymous namespace)::time_get_w
0000000000a5c020 0000000000000010 b std::(anonymous namespace)::money_put_w
0000000000a5c030 0000000000000010 b std::(anonymous namespace)::money_get_w
0000000000a5c040 0000000000000018 b std::(anonymous namespace)::moneypunct_wf
0000000000a5c060 0000000000000018 b std::(anonymous namespace)::moneypunct_wt
0000000000a5c080 0000000000000018 b std::(anonymous namespace)::numpunct_w
0000000000a5c0a0 0000000000000018 b std::(anonymous namespace)::collate_w
0000000000a5c0c0 0000000000000020 b std::(anonymous namespace)::messages_c
0000000000a5c0e0 0000000000000010 b std::(anonymous namespace)::time_get_c
0000000000a5c0f0 0000000000000010 b std::(anonymous namespace)::money_put_c
0000000000a5c100 0000000000000010 b std::(anonymous namespace)::money_get_c
0000000000a5c110 0000000000000018 b std::(anonymous namespace)::moneypunct_cf
0000000000a5c130 0000000000000018 b std::(anonymous namespace)::moneypunct_ct
0000000000a5c150 0000000000000018 b std::(anonymous namespace)::numpunct_c
0000000000a5c170 0000000000000018 b std::(anonymous namespace)::collate_c
0000000000a5c188 0000000000000008 V guard variable for std::__cxx11::collate<char>::id
0000000000a5c190 0000000000000008 V guard variable for std::__cxx11::messages<char>::id
0000000000a5c198 0000000000000008 V guard variable for std::__cxx11::time_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::id
0000000000a5c1a0 0000000000000008 V guard variable for std::__cxx11::numpunct<char>::id
0000000000a5c1a8 0000000000000008 V guard variable for std::__cxx11::moneypunct<char, true>::id
0000000000a5c1b0 0000000000000008 V guard variable for std::__cxx11::moneypunct<char, false>::id
0000000000a5c1b8 0000000000000008 V guard variable for std::__cxx11::money_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::id
0000000000a5c1c0 0000000000000008 V guard variable for std::__cxx11::money_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::id
0000000000a5c1c8 0000000000000008 V std::__cxx11::collate<char>::id
0000000000a5c1d0 0000000000000008 V std::__cxx11::messages<char>::id
0000000000a5c1d8 0000000000000008 V std::__cxx11::time_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::id
0000000000a5c1e0 0000000000000008 V std::__cxx11::numpunct<char>::id
0000000000a5c1e8 0000000000000008 V std::__cxx11::moneypunct<char, true>::id
0000000000a5c1f0 0000000000000008 V std::__cxx11::moneypunct<char, false>::id
0000000000a5c1f8 0000000000000008 V std::__cxx11::money_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::id
0000000000a5c200 0000000000000008 V std::__cxx11::money_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::id
0000000000a5c208 0000000000000004 b seq
0000000000a5c20c 0000000000000004 B ModPlug::gSampleSize
0000000000a5c210 0000000000000004 B CSoundFile::gdwSysInfo
0000000000a5c214 0000000000000004 B CSoundFile::gnCPUUsage
0000000000a5c218 0000000000000008 B CSoundFile::gpSndMixHook
0000000000a5c220 0000000000000004 B CSoundFile::gdwSoundSetup
0000000000a5c228 0000000000000008 B CSoundFile::gpMixPluginCreateProc
0000000000a5c230 0000000000000004 B CSoundFile::gnVUMeter
0000000000a5c234 0000000000000004 B gbInitPlugins
0000000000a5c238 0000000000000004 B gnDryLOfsVol
0000000000a5c23c 0000000000000004 B gnDryROfsVol
0000000000a5c240 0000000000000004 B gnReverbSend
0000000000a5c244 0000000000000004 B gnRvbLOfsVol
0000000000a5c248 0000000000000004 B gnRvbROfsVol
0000000000a5c250 0000000000000100 b XBassDelay
0000000000a5c350 0000000000000004 b nXBassMask
0000000000a5c358 0000000000000100 b XBassBuffer
0000000000a5c458 0000000000000020 b gRvbLowPass
0000000000a5c478 0000000000000004 b nDolbyDepth
0000000000a5c47c 0000000000000004 b nFilterAttn
0000000000a5c480 0000000000000004 b nReverbSize
0000000000a5c488 0000000000025800 b ReverbBuffer
0000000000a81c88 0000000000000004 b nReverbSize2
0000000000a81c8c 0000000000000004 b nReverbSize3
0000000000a81c90 0000000000000004 b nReverbSize4
0000000000a81c94 0000000000000004 b nSurroundPos
0000000000a81c98 0000000000000004 b nXBassDlyPos
0000000000a81ca0 000000000001cad0 b ReverbBuffer2
0000000000a9e770 0000000000014310 b ReverbBuffer3
0000000000ab2a80 000000000000dd0c b ReverbBuffer4
0000000000ac078c 0000000000000004 b nSurroundSize
0000000000ac0790 0000000000009600 b SurroundBuffer
0000000000ac9d90 0000000000000004 b nDolbyHiFltPos
0000000000ac9d94 0000000000000004 b nDolbyHiFltSum
0000000000ac9d98 0000000000000004 b nDolbyLoDlyPos
0000000000ac9d9c 0000000000000004 b nDolbyLoFltPos
0000000000ac9da0 0000000000000004 b nDolbyLoFltSum
0000000000ac9da4 0000000000000004 b nReverbLoDlyPos
0000000000ac9da8 0000000000000004 b nReverbLoFltPos
0000000000ac9dac 0000000000000004 b nReverbLoFltSum
0000000000ac9db0 0000000000000004 b nXBassBufferPos
0000000000ac9db4 0000000000000004 b nReverbBufferPos
0000000000ac9db8 0000000000000004 b nReverbBufferPos2
0000000000ac9dbc 0000000000000004 b nReverbBufferPos3
0000000000ac9dc0 0000000000000004 b nReverbBufferPos4
0000000000ac9dc8 0000000000000100 b DolbyLoFilterDelay
0000000000ac9ec8 0000000000000100 b DolbyHiFilterBuffer
0000000000ac9fc8 0000000000000100 b DolbyLoFilterBuffer
0000000000aca0c8 0000000000000100 b ReverbLoFilterDelay
0000000000aca1c8 0000000000000100 b ReverbLoFilterBuffer
0000000000aca2c8 0000000000000004 b nLeftNR
0000000000aca2cc 0000000000000004 b nRightNR
0000000000aca2d0 0000000000000004 b gRvbLPPos
0000000000aca2d4 0000000000000004 b gRvbLPSum
0000000000aca2d8 0000000000000004 b nXBassSum
0000000000aca2e0 0000000000001000 B MixRearBuffer
0000000000acb2e0 0000000000001000 B MixReverbBuffer
0000000000acc2e0 0000000000002000 B MixSoundBuffer
0000000000ace2e0 0000000000002000 B CzCUBICSPLINE::lut
0000000000ad02e0 0000000000008010 B CzWINDOWEDFIR::lut
0000000000ad82f0 0000000000000001 B sfir
0000000000ad82f8 0000000000000001 B sspline
0000000000ad8300 0000000000000780 b chordnotes
0000000000ad8a80 0000000000000004 b chordsnamed
0000000000ad8a84 0000000000000001 b global_part
0000000000ad8a88 0000000000000004 b global_voiceno
0000000000ad8a8c 0000000000000004 b global_songstart
0000000000ad8a90 0000000000000004 b global_octave_shift
0000000000ad8a94 0000000000000004 b global_tempo_factor
0000000000ad8a98 0000000000000004 b global_tempo_divider
0000000000ad8aa0 0000000000000140 b chordlen
0000000000ad8be0 0000000000000280 b chordname
0000000000ad8e60 0000000000000004 b abc_partpat_to_orderlist(unsigned char (*) [2], char const*, _ABCHANDLE*, unsigned char**, int)::ordersize
0000000000ad8e68 0000000000000400 b pathforpat
0000000000ad9268 00000000000000bf b pat_gm_used
0000000000ad9328 0000000000000400 b timiditycfg
0000000000ad9728 000000000002fc00 b midipat
0000000000b09328 00000000000000bf b pat_loops
0000000000b093e8 0000000000000028 b pat_gm_name::buf
0000000000b09410 0000000000000004 b pat_readpat(int, char*, int)::readlasttime
0000000000b09418 0000000000000008 b pat_readpat(int, char*, int)::opt
0000000000b09420 0000000000000008 b pat_readpat(int, char*, int)::mmpat
0000000000b09428 0000000000000004 b pat_readpat(int, char*, int)::wavesize
0000000000b09430 0000000000000008 b g_appletGuard
0000000000b09438 0000000000000001 b g_appletInfoInitialized
0000000000b09440 0000000000000050 b g_appletInfo
0000000000b09490 0000000000000004 b g_appletCpuBoostMode
0000000000b09494 0000000000000004 b g_appletThemeColorType
0000000000b09498 000000000000000c b g_appletLibraryAppletLaunchableEvent
0000000000b094a4 0000000000000001 b g_appletSuspendedTickInitialized
0000000000b094a8 0000000000000008 b g_appletSuspendedTick
0000000000b094b0 0000000000000008 b g_appletInitTickBase
0000000000b094b8 000000000000000c b g_appletSuspendedTickEvent
0000000000b094c4 0000000000000001 b g_appletCopyrightInitialized
0000000000b094c8 0000000000000028 b g_appletCopyrightTmem
0000000000b094f0 0000000000000004 b g_appletRecordingInitialized
0000000000b094f8 0000000000000028 b g_appletRecordingTmem
0000000000b09520 0000000000000018 b g_appletFirstHook
0000000000b09538 0000000000000001 b g_appletNotifiedRunning
0000000000b09539 0000000000000001 b g_appletFocusState
0000000000b0953c 0000000000000004 b g_appletPerformanceMode
0000000000b09540 0000000000000001 b g_appletOperationMode
0000000000b09548 0000000000000008 b g_appletResourceUserId
0000000000b09550 000000000000000c b g_appletMessageEvent
0000000000b09560 0000000000000010 b g_appletIDebugFunctions
0000000000b09570 0000000000000010 b g_appletIDisplayController
0000000000b09580 0000000000000010 b g_appletIAudioController
0000000000b09590 0000000000000010 b g_appletIWindowController
0000000000b095a0 0000000000000010 b g_appletISelfController
0000000000b095b0 0000000000000010 b g_appletICommonStateGetter
0000000000b095c0 0000000000000010 b g_appletILibraryAppletCreator
0000000000b095d0 0000000000000010 b g_appletIProcessWindingController
0000000000b095e0 0000000000000010 b g_appletILibraryAppletSelfAccessor
0000000000b095f0 0000000000000010 b g_appletIApplicationCreator
0000000000b09600 0000000000000010 b g_appletIGlobalStateController
0000000000b09610 0000000000000010 b g_appletIFunctions
0000000000b09620 0000000000000010 b g_appletIAppletCommonFunctions
0000000000b09630 0000000000000004 b g_appletExitProcessResult
0000000000b09634 0000000000000001 b g_appletExitProcessFlag
0000000000b09635 0000000000000001 b g_appletLeftInitialized
0000000000b09638 0000000000000010 b g_appletProxySession
0000000000b09648 0000000000000010 b g_appletSrv
0000000000b09658 0000000000000004 V __nx_applet_exit_mode
0000000000b09660 0000000000000008 V __nx_applet_PerformanceConfiguration
0000000000b09668 0000000000000080 V __nx_applet_AppletAttribute
0000000000b096e8 0000000000000008 b g_audrenGuard
0000000000b096f0 000000000000000c b g_audrenEvent
0000000000b09700 0000000000000028 b g_audrenWorkBuf
0000000000b09728 0000000000000010 b g_audrenIAudioRenderer
0000000000b09738 0000000000000004 B g_audrenRevision
0000000000b09740 0000000000000008 b g_hidGuard
0000000000b09748 0000000000000008 b g_sevenSixAxisSensorBuffer
0000000000b09750 0000000000000004 b g_hidVibrationMutex
0000000000b09758 0000000000000020 b g_hidSharedmem
0000000000b09778 0000000000000010 b g_hidIActiveVibrationDeviceList
0000000000b09788 0000000000000010 b g_hidIAppletResource
0000000000b09798 0000000000000010 b g_hidSrv
0000000000b097a8 0000000000000008 b g_nvGuard
0000000000b097b0 0000000000000028 b g_nvTransfermem
0000000000b097d8 0000000000000010 b g_nvSrvClone
0000000000b097e8 0000000000000010 b g_nvSrv
0000000000b097f8 0000000000000008 b g_psmGuard
0000000000b09800 0000000000000010 b g_psmSrv
0000000000b09810 0000000000000008 b g_smGuard
0000000000b09818 0000000000000008 b g_smOverridesNum
0000000000b09820 0000000000000180 b g_smOverrides
0000000000b099a0 0000000000000010 b g_smSrv
0000000000b099b0 0000000000000008 b g_nvFenceGuard
0000000000b099b8 0000000000000300 b g_NvEvents
0000000000b09cb8 0000000000000008 b g_NvEventUsedMask
0000000000b09cc0 0000000000000008 b g_nvGpuGuard
0000000000b09cc8 0000000000000004 b g_tpc_masks
0000000000b09cd0 0000000000000028 b g_zcull_info
0000000000b09cf8 0000000000000004 b g_zcull_ctx_size
0000000000b09d00 00000000000000a0 b g_gpu_characteristics
0000000000b09da0 0000000000000008 b g_nvMapGuard
0000000000b09da8 0000000000000080 b g_defaultWin
0000000000b09e28 0000000000000010 b g_viLayer
0000000000b09e38 0000000000000050 b g_viDisplay
0000000000b09e88 0000000000000001 b g_libappletJumpFlag
0000000000b09e90 0000000000000008 b g_userIdStorage
0000000000b09ea0 0000000000000010 b g_randomSeed
0000000000b09eb0 0000000000000001 b g_hasRandomSeed
0000000000b09eb4 0000000000000004 b g_lastLoadResult
0000000000b09eb8 0000000000000008 b g_nextLoadArgv
0000000000b09ec0 0000000000000008 b g_nextLoadPath
0000000000b09ec8 0000000000000004 b g_processHandle
0000000000b09ed0 0000000000000018 b g_syscallHints
0000000000b09ee8 0000000000000008 b g_overrideArgv
0000000000b09ef0 0000000000000008 b g_overrideHeapSize
0000000000b09ef8 0000000000000008 b g_overrideHeapAddr
0000000000b09f00 0000000000000008 b g_loaderRetAddr
0000000000b09f08 0000000000000004 b g_mainThreadHandle
0000000000b09f10 0000000000000008 b g_loaderInfoSize
0000000000b09f18 0000000000000008 b g_loaderInfo
0000000000b09f20 0000000000000001 b g_isNso
0000000000b09f24 0000000000000004 b g_hosVersion
0000000000b09f28 0000000000000008 V __romfs_path
0000000000b09f30 0000000000003b00 b romfs_mounts
0000000000b0da30 0000000000000001 b romfs_initialised
0000000000b0da38 B __stack_top
0000000000b0da40 0000000000000001 b g_IsLegacyKernel
0000000000b0da48 0000000000000008 b g_Reservations
0000000000b0da50 0000000000000010 b g_StackRegion
0000000000b0da60 0000000000000010 b g_AslrRegion
0000000000b0da70 0000000000000010 b g_HeapRegion
0000000000b0da80 0000000000000010 b g_AliasRegion
0000000000b0da90 0000000000000004 b g_VirtmemMutex
0000000000b0da98 0000000000000008 b g_apmGuard
0000000000b0daa0 0000000000000010 b g_apmISession
0000000000b0dab0 0000000000000010 b g_apmSrv
0000000000b0dac0 0000000000000054 b g_bsdSessionMgr
0000000000b0db18 0000000000000008 b g_fsGuard
0000000000b0db20 0000000000000054 b g_fsSessionMgr
0000000000b0db78 0000000000000010 b g_fsSrv
0000000000b0db88 0000000000000008 b g_viGuard
0000000000b0db90 0000000000000010 b g_viIHOSBinderDriverIndirect
0000000000b0dba0 0000000000000010 b g_viIManagerDisplayService
0000000000b0dbb0 0000000000000010 b g_viISystemDisplayService
0000000000b0dbc0 0000000000000010 b g_viIHOSBinderDriverRelay
0000000000b0dbd0 0000000000000010 b g_viIApplicationDisplayService
0000000000b0dbe0 0000000000000010 b g_viRootService
0000000000b0dbf0 0000000000000008 V __nx_vi_layer_id
0000000000b0dbf8 0000000000000008 b g_argv_empty
0000000000b0dc00 0000000000000008 B __system_argv
0000000000b0dc08 0000000000000004 B __system_argc
0000000000b0dc10 0000000000000340 B __nx_exceptiondump
0000000000b0df50 0000000000000004 V __nx_exception_ignoredebug
0000000000b0df60 0000000000000400 V __nx_exception_stack
0000000000b0e360 0000000000000008 V __nx_heap_size
0000000000b0e368 0000000000000008 b __bootticks
0000000000b0e370 0000000000000008 b __boottime
0000000000b0e378 0000000000000004 V __nx_time_type
0000000000b0e380 0000000000000004 B __nxlink_host
0000000000b0e388 0000000000002800 b fsdev_fsdevices
0000000000b10b88 0000000000000004 b fsdev_fsdevice_cwd
0000000000b10b8c 0000000000000001 b fsdev_initialised
0000000000b10b90 0000000000000004 b g_randMutex
0000000000b10b94 0000000000000001 b g_randInit
0000000000b10ba0 0000000000000040 b g_chacha
0000000000b10be0 00000000000000d8 b g_tlsDestructors
0000000000b10cb8 0000000000000008 b g_tlsUsageMask
0000000000b10cc0 0000000000000038 b g_mainThread
0000000000b10cf8 0000000000000008 b g_threadList
0000000000b10d00 0000000000000004 b g_threadMutex
0000000000b10d08 0000000000000008 b g_setsysGuard
0000000000b10d10 0000000000000010 b g_setsysSrv
0000000000b10d20 0000000000000008 b g_timeGuard
0000000000b10d28 0000000000000020 b g_timeSharedmem
0000000000b10d48 0000000000000010 b g_timeLocalSystemClock
0000000000b10d58 0000000000000010 b g_timeTimeZoneService
0000000000b10d68 0000000000000010 b g_timeSteadyClock
0000000000b10d78 0000000000000010 b g_timeNetworkSystemClock
0000000000b10d88 0000000000000010 b g_timeUserSystemClock
0000000000b10d98 0000000000000010 b g_timeSrv
0000000000b10da8 0000000000000004 V __nx_time_service_type
0000000000b10db0 0000000000000008 b GetCoeffs
0000000000b10db8 0000000000000008 B WebPApplyAlphaMultiply
0000000000b10dc0 0000000000000008 B WebPApplyAlphaMultiply4444
0000000000b10dc8 0000000000000008 B WebPDispatchAlpha
0000000000b10dd0 0000000000000008 B WebPDispatchAlphaToGreen
0000000000b10dd8 0000000000000008 B WebPExtractAlpha
0000000000b10de0 0000000000000008 B WebPExtractGreen
0000000000b10de8 0000000000000008 B WebPHasAlpha32b
0000000000b10df0 0000000000000008 B WebPHasAlpha8b
0000000000b10df8 0000000000000010 b WebPInitAlphaProcessing_body_lock.1
0000000000b10e08 0000000000000008 B WebPMultARGBRow
0000000000b10e10 0000000000000008 B WebPMultRow
0000000000b10e18 0000000000000008 B WebPPackRGB
0000000000b10e20 0000000000000008 B VP8DitherCombine8x8
0000000000b10e28 0000000000000010 b VP8DspInit_body_lock.1
0000000000b10e38 0000000000000008 B VP8HFilter16
0000000000b10e40 0000000000000008 B VP8HFilter16i
0000000000b10e48 0000000000000008 B VP8HFilter8
0000000000b10e50 0000000000000008 B VP8HFilter8i
0000000000b10e58 0000000000000038 B VP8PredChroma8
0000000000b10e90 0000000000000038 B VP8PredLuma16
0000000000b10ec8 0000000000000050 B VP8PredLuma4
0000000000b10f18 0000000000000008 B VP8SimpleHFilter16
0000000000b10f20 0000000000000008 B VP8SimpleHFilter16i
0000000000b10f28 0000000000000008 B VP8SimpleVFilter16
0000000000b10f30 0000000000000008 B VP8SimpleVFilter16i
0000000000b10f38 0000000000000008 B VP8Transform
0000000000b10f40 0000000000000008 B VP8TransformAC3
0000000000b10f48 0000000000000008 B VP8TransformDC
0000000000b10f50 0000000000000008 B VP8TransformDCUV
0000000000b10f58 0000000000000008 B VP8TransformUV
0000000000b10f60 0000000000000008 B VP8TransformWHT
0000000000b10f68 0000000000000008 B VP8VFilter16
0000000000b10f70 0000000000000008 B VP8VFilter16i
0000000000b10f78 0000000000000008 B VP8VFilter8
0000000000b10f80 0000000000000008 B VP8VFilter8i
0000000000b10f88 0000000000000010 b VP8FiltersInit_body_lock.1
0000000000b10f98 0000000000000020 B WebPFilters
0000000000b10fb8 0000000000000020 B WebPUnfilters
0000000000b10fd8 0000000000000008 B VP8LAddGreenToBlueAndRed
0000000000b10fe0 0000000000000008 B VP8LConvertBGRAToBGR
0000000000b10fe8 0000000000000008 B VP8LConvertBGRAToRGB
0000000000b10ff0 0000000000000008 B VP8LConvertBGRAToRGB565
0000000000b10ff8 0000000000000008 B VP8LConvertBGRAToRGBA
0000000000b11000 0000000000000008 B VP8LConvertBGRAToRGBA4444
0000000000b11008 0000000000000010 b VP8LDspInit_body_lock.1
0000000000b11018 0000000000000008 B VP8LMapColor32b
0000000000b11020 0000000000000008 B VP8LMapColor8b
0000000000b11028 0000000000000080 B VP8LPredictors
0000000000b110a8 0000000000000080 B VP8LPredictorsAdd
0000000000b11128 0000000000000080 B VP8LPredictorsAdd_C
0000000000b111a8 0000000000000080 B VP8LPredictors_C
0000000000b11228 0000000000000008 B VP8LTransformColorInverse
0000000000b11230 0000000000000010 b WebPRescalerDspInit_body_lock.1
0000000000b11240 0000000000000008 B WebPRescalerExportRowExpand
0000000000b11248 0000000000000008 B WebPRescalerExportRowShrink
0000000000b11250 0000000000000008 B WebPRescalerImportRowExpand
0000000000b11258 0000000000000008 B WebPRescalerImportRowShrink
0000000000b11260 0000000000000010 b WebPInitUpsamplers_body_lock.1
0000000000b11270 0000000000000010 b WebPInitYUV444Converters_body_lock.3
0000000000b11280 0000000000000068 B WebPUpsamplers
0000000000b112e8 0000000000000068 B WebPYUV444Converters
0000000000b11350 0000000000000008 B WebPConvertARGBToUV
0000000000b11358 0000000000000008 B WebPConvertARGBToY
0000000000b11360 0000000000000008 B WebPConvertBGR24ToY
0000000000b11368 0000000000000008 B WebPConvertRGB24ToY
0000000000b11370 0000000000000008 B WebPConvertRGBA32ToUV
0000000000b11378 0000000000000010 b WebPInitConvertARGBToYUV_body_lock.1
0000000000b11388 0000000000000010 b WebPInitSamplers_body_lock.3
0000000000b11398 0000000000000068 B WebPSamplers
0000000000b11400 0000000000000008 B WebPSharpYUVFilterRow
0000000000b11408 0000000000000008 B WebPSharpYUVUpdateRGB
0000000000b11410 0000000000000008 B WebPSharpYUVUpdateY
0000000000b11418 0000000000000008 b langs
0000000000b11420 0000000000000004 B _hb_options
0000000000b11428 0000000000000008 b static_ot_funcs
0000000000b11430 0000000000000001 b hb_ot_font_cmap_cache_user_data_key
0000000000b11438 0000000000000008 b static_outline_recording_pen_funcs
0000000000b11440 0000000000000008 b static_paint_extents_funcs
0000000000b11448 0000000000000008 b static_draw_extents_funcs
0000000000b11450 0000000000000008 b static_shapers
0000000000b11460 00000000000001c0 B _hb_CrapPool
0000000000b11620 0000000000000008 b static_ft_funcs
0000000000b11628 0000000000000004 b hb_ot_tags_from_language(char const*, char const*, unsigned int*, unsigned int*)::last_tag_idx
0000000000b11630 0000000000000008 b static_ucd_funcs
0000000000b11638 0000000000000004 b once_regsizes.0
0000000000b11640 0000000000000062 b dwarf_reg_size_table
0000000000b116a8 0000000000000010 b object_mutex
0000000000b116b8 0000000000000008 b seen_objects
0000000000b116c0 0000000000000008 b unseen_objects
0000000000b116d0 00000000000000e0 b saved_categories.0
0000000000b117b0 00000000000000e0 b new_categories.1
0000000000b11890 000000000000000c b __sfp_recursive_mutex
0000000000b118a0 0000000000000228 B __sf
0000000000b11ac8 0000000000000008 B __stdio_exit_handler
0000000000b11ad0 0000000000000004 b __tz_mutex
0000000000b11ad8 0000000000000028 B __malloc_current_mallinfo
0000000000b11b00 0000000000000008 B __malloc_max_total_mem
0000000000b11b08 0000000000000008 B __malloc_max_sbrked_mem
0000000000b11b10 0000000000000008 B __malloc_top_pad
0000000000b11b18 0000000000000008 b prev_tzenv
0000000000b11b20 000000000000000c b __tzname_dst
0000000000b11b30 000000000000000c b __tzname_std
0000000000b11b40 000000000000000c b __malloc_recursive_mutex
0000000000b11b4c 0000000000000004 b alloced.0
0000000000b11b50 0000000000000008 B _timezone
0000000000b11b58 0000000000000004 B _daylight
0000000000b11b60 000000000000000c b __env_recursive_mutex
0000000000b11b70 0000000000000008 b initial_env
0000000000b11b78 0000000000000318 B __atexit0
0000000000b11e90 0000000000000008 B __atexit
0000000000b11e98 000000000000000c B __atexit_recursive_mutex
0000000000b11eb0 0000000000000400 b temp_cwd
0000000000b122b0 0000000000000004 b __hndl_lock
0000000000b122b8 0000000000000008 B fake_heap_start
0000000000b122c0 0000000000000008 B fake_heap_end
0000000000b122c8 0000000000000004 b __pthread_once_cv
0000000000b122cc 0000000000000004 b __pthread_once_lock
0000000000b122d0 0000000000000008 b heap_start.0
0000000000b122d8 0000000000000020 B music_spec
0000000000b122f8 0000000000000400 B master_drumset
0000000000b126f8 0000000000000400 B master_tonebank
0000000000b12af8 b __tls_start
0000000000b12f28 b __bss_end__
0000000000b12f28 a __end__
0000000000b12f28 b __tls_end
0000000000b13000 a __argdata__
