0000000000000000 a __start__
0000000000000000 0000000000000008 D _glapi_tls_Dispatch
0000000000000000 T _start
0000000000000000 d _TLS_MODULE_BASE_
0000000000000008 0000000000000008 b _egl_TLS
0000000000000010 0000000000000008 B _glapi_tls_Context
0000000000000018 0000000000000004 B g_bsdErrno
000000000000001c 0000000000000004 B g_bsdResult
0000000000000020 0000000000000004 b g_fsPriority
0000000000000024 0000000000000004 b fsdev_last_result
0000000000000028 0000000000000401 B __nx_dev_path_buf
00000000000000e0 T __nx_exit
00000000000000f0 T __nx_mod0
0000000000000124 0000000000000034 W __gnu_cxx::__throw_concurrence_lock_error()
0000000000000158 0000000000000034 W __gnu_cxx::__throw_concurrence_unlock_error()
000000000000018c 0000000000000034 W __gnu_cxx::__throw_concurrence_broadcast_error()
00000000000001c0 0000000000000050 t std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::~basic_string() [clone .isra.0]
0000000000000210 0000000000000050 t std::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string() [clone .isra.0]
0000000000000260 0000000000000014 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, unsigned long, std::allocator<char> const&) [clone .part.0]
0000000000000260 0000000000000014 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .part.0]
0000000000000260 0000000000000014 t std::__cxx11::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::basic_string(wchar_t const*, unsigned long, std::allocator<wchar_t> const&) [clone .part.0]
0000000000000274 0000000000000034 T std::__throw_bad_alloc()
00000000000002a8 0000000000000034 T std::__throw_bad_array_new_length()
00000000000002dc 0000000000000034 T std::__throw_bad_cast()
0000000000000310 0000000000000054 T std::__throw_logic_error(char const*)
0000000000000364 0000000000000054 T std::__throw_length_error(char const*)
00000000000003b8 0000000000000054 T std::__throw_out_of_range(char const*)
000000000000040c 000000000000000c T std::__throw_out_of_range_fmt(char const*, ...)
0000000000000418 0000000000000054 T std::__throw_runtime_error(char const*)
000000000000046c 0000000000000180 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_replace_cold(char*, unsigned long, char const*, unsigned long, unsigned long)
00000000000005ec 0000000000000050 t std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::~basic_string() [clone .isra.0]
000000000000063c 0000000000000050 t std::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string() [clone .isra.0]
000000000000068c 0000000000000194 W std::__cxx11::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_M_replace_cold(wchar_t*, unsigned long, wchar_t const*, unsigned long, unsigned long)
0000000000000820 0000000000000034 T __cxa_throw_bad_array_new_length
0000000000000854 0000000000000010 T std::terminate()
0000000000000864 0000000000000010 T std::unexpected()
0000000000000874 00000000000000a0 T std::__throw_ios_failure(char const*)
0000000000000914 0000000000000044 T __cxa_call_terminate
0000000000000960 000000000000005c t _GLOBAL__sub_D_quit
00000000000009c0 000000000000000c t _GLOBAL__sub_D_builtin_functions.cpp
00000000000009d0 00000000000008a0 t _GLOBAL__sub_D_glsl_types.cpp
0000000000001270 000000000000006c t _GLOBAL__sub_D_builtin_types.cpp
00000000000012e0 000000000000000c t _GLOBAL__sub_D.00090_globals_io.cc
0000000000001300 0000000000000034 t _GLOBAL__sub_D_eh_globals.cc
0000000000001340 0000000000000034 T exit
0000000000001380 0000000000000508 T main
0000000000001890 000000000000007c t _GLOBAL__sub_I_quit
0000000000001910 0000000000000014 t _GLOBAL__sub_I_builtin_functions.cpp
0000000000001930 0000000000001f80 t _GLOBAL__sub_I_glsl_types.cpp
00000000000038b0 0000000000000044 t _GLOBAL__sub_I_ir_to_mesa.cpp
0000000000003900 0000000000000090 t _GLOBAL__sub_I_st_glsl_to_tgsi.cpp
0000000000003990 0000000000000f08 t _GLOBAL__sub_I_builtin_types.cpp
00000000000048a0 0000000000000048 t _GLOBAL__sub_I_nv50_ir_ra.cpp
0000000000004900 000000000000000c t _GLOBAL__sub_I.00090_globals_io.cc
0000000000004920 00000000000000a4 t _GLOBAL__sub_I_cxx11_wlocale_inst.cc
00000000000049e0 0000000000000108 t _GLOBAL__sub_I_locale_inst.cc
0000000000004b00 0000000000000108 t _GLOBAL__sub_I_wlocale_inst.cc
0000000000004c20 000000000000020c t _GLOBAL__sub_I_eh_alloc.cc
0000000000004e40 0000000000000038 t _GLOBAL__sub_I_eh_globals.cc
0000000000004e80 00000000000000a4 t _GLOBAL__sub_I_cxx11_locale_inst.cc
0000000000004f30 0000000000000024 t _GLOBAL__sub_I_fastmix.cpp
0000000000004f60 t __do_global_dtors_aux
0000000000004fc0 t frame_dummy
0000000000004ff0 0000000000000008 W std::ctype<char>::do_widen(char) const
0000000000005000 0000000000000088 T renderText(SDL_Renderer*, char const*, _TTF_Font*, int, int, SDL_Color)
0000000000005090 0000000000000200 T initPlayer(SDL_Renderer*)
0000000000005290 000000000000007c T initBrownSeal(SDL_Renderer*)
0000000000005310 0000000000000080 T initMuzzleFlash(SDL_Renderer*)
0000000000005390 00000000000000a8 T renderMuzzleFlash(SDL_Renderer*)
0000000000005440 0000000000000190 T initShellTextures(SDL_Renderer*)
00000000000055d0 0000000000000080 T initBackdropAndIce(SDL_Renderer*)
0000000000005650 0000000000000124 T initHUD(SDL_Renderer*)
0000000000005780 0000000000000338 T initWeapons(SDL_Renderer*)
0000000000005ac0 0000000000000364 T renderHUD(SDL_Renderer*)
0000000000005e30 0000000000000064 T renderBackdropAndIce(SDL_Renderer*)
0000000000005ea0 00000000000000d0 T renderPlayer(SDL_Renderer*)
0000000000005f70 0000000000000284 T shootBullet()
0000000000006200 00000000000000a4 T updateReload()
00000000000062b0 0000000000000040 T updateBullets()
00000000000062f0 000000000000009c T renderBullets(SDL_Renderer*)
0000000000006390 0000000000000080 T renderShells(SDL_Renderer*)
0000000000006410 00000000000000b0 T updateShells()
00000000000064c0 0000000000000544 T renderBulletCount(SDL_Renderer*)
0000000000006a10 0000000000000124 T handlePlayerMovement(PadState*)
0000000000006b40 0000000000000198 T renderStartMenu(SDL_Renderer*)
0000000000006ce0 00000000000000d8 T renderPauseMenu(SDL_Renderer*)
0000000000006dc0 00000000000000d8 T handlePauseMenuInput(PadState*)
0000000000006ea0 0000000000000088 T handleStartMenuInput(PadState*)
0000000000006f30 00000000000000e8 T renderOptionsMenu(SDL_Renderer*)
0000000000007020 000000000000008c T handleOptionsMenuInput(PadState*)
00000000000070b0 000000000000010c T renderQuitConfirmation(SDL_Renderer*)
00000000000071c0 00000000000000cc T handleEvents(PadState*)
0000000000007290 0000000000000064 t RWread
0000000000007300 00000000000001dc t TTF_initFontMetrics
00000000000074e0 0000000000000b88 t Load_Glyph
0000000000008070 0000000000000084 t UCS2_to_UTF8_len
0000000000008100 00000000000000c8 t UCS2_to_UTF8
00000000000081d0 0000000000000168 t AllocateAlignedPixels
0000000000008340 00000000000000ac t Create_Surface_Solid
00000000000083f0 0000000000000184 t Create_Surface_Shaded
0000000000008580 0000000000000098 t Create_Surface_Blended
0000000000008620 00000000000000ac t Create_Surface_LCD.isra.0
00000000000086d0 00000000000000b4 t clip_glyph.isra.0
0000000000008790 0000000000000160 t Draw_Line.isra.0
00000000000088f0 000000000000006c t Flush_Cache
0000000000008960 00000000000006e0 t TTF_Size_Internal
0000000000009040 0000000000000698 t Render_Line_64_Blended
00000000000096e0 00000000000006a4 t Render_Line_64_Blended_SP
0000000000009d90 00000000000033fc t Render_Line
000000000000d190 000000000000039c t TTF_Render_Internal
000000000000d530 000000000000005c T TTF_Init
000000000000d590 00000000000000e0 T TTF_SetFontSizeDPI
000000000000d670 000000000000007c T TTF_CloseFont
000000000000d6f0 000000000000001c T TTF_SetFontKerning
000000000000d710 00000000000002cc T TTF_OpenFontIndexDPIRW
000000000000d9e0 0000000000000064 T TTF_OpenFontIndexDPI
000000000000da50 000000000000000c T TTF_OpenFontIndex
000000000000da60 0000000000000008 T TTF_OpenFont
000000000000da70 0000000000000014 T TTF_RenderText_Solid
000000000000da90 0000000000000044 T TTF_Quit
000000000000dae0 00000000000000cc T IMG_Init
000000000000dbb0 00000000000001b4 T IMG_LoadTyped_RW
000000000000dd70 0000000000000060 T IMG_Load
000000000000ddd0 00000000000000b4 t IMG_isICOCUR
000000000000de90 00000000000006d8 t LoadICOCUR_RW.constprop.0
000000000000e570 00000000000000ac T IMG_isBMP
000000000000e620 0000000000000008 T IMG_isICO
000000000000e630 0000000000000008 T IMG_isCUR
000000000000e640 0000000000000be8 T IMG_LoadBMP_RW
000000000000f230 0000000000000008 T IMG_LoadICO_RW
000000000000f240 0000000000000008 T IMG_LoadCUR_RW
000000000000f250 0000000000000078 t GetDataBlock
000000000000f2d0 00000000000000b0 t ReadColorMap
000000000000f380 0000000000000150 t GetCode.part.0
000000000000f4d0 00000000000003d8 t LWZReadByte.part.1
000000000000f8b0 00000000000006a0 t ReadImage.isra.2
000000000000ff50 00000000000000e4 T IMG_isGIF
0000000000010040 00000000000004d4 T IMG_LoadGIF_RW
0000000000010520 0000000000000004 t init_source
0000000000010530 000000000000005c t fill_input_buffer
0000000000010590 000000000000007c t skip_input_data
0000000000010610 0000000000000018 t my_error_exit
0000000000010630 0000000000000004 t output_no_message
0000000000010640 0000000000000004 t term_source
0000000000010650 00000000000000c4 T IMG_InitJPG
0000000000010720 00000000000001ac T IMG_isJPG
00000000000108d0 00000000000002e0 T IMG_LoadJPG_RW
0000000000010bb0 00000000000000e4 T IMG_isLBM
0000000000010ca0 0000000000000ad4 T IMG_LoadLBM_RW
0000000000011780 00000000000000a8 T IMG_isPCX
0000000000011830 0000000000000544 T IMG_LoadPCX_RW
0000000000011d80 000000000000002c t png_read_data
0000000000011db0 0000000000000160 T IMG_InitPNG
0000000000011f10 00000000000000c0 T IMG_isPNG
0000000000011fd0 0000000000000568 T IMG_LoadPNG_RW
0000000000012540 00000000000000e8 t ReadNumber
0000000000012630 00000000000000ac T IMG_isPNM
00000000000126e0 0000000000000424 T IMG_LoadPNM_RW
0000000000012b10 000000000000007c t nsvg__xformMultiply
0000000000012b90 0000000000000108 t nsvg__xformInverse
0000000000012ca0 0000000000000128 t nsvg__convertToPixels
0000000000012dd0 00000000000000d8 t nsvg__parseUnits
0000000000012eb0 0000000000000048 t nsvg__scaleGradient
0000000000012f00 0000000000000020 t nsvg__cmpEdge
0000000000012f20 0000000000000058 t nsvg__applyOpacity
0000000000012f80 00000000000002f4 t nsvg__parseElement
0000000000013280 0000000000000050 t nsvg__strndup
00000000000132d0 0000000000000108 t nsvg__content
00000000000133e0 0000000000000048 t nsvg__xformPremultiply
0000000000013430 000000000000026c t nsvg__parseColor
00000000000136a0 0000000000000048 t nsvg__parseOpacity
00000000000136f0 000000000000004c t nsvg__parseCoordinateRaw
0000000000013740 0000000000000040 t nsvg__actualLength
0000000000013780 00000000000002b8 t nsvg__createGradient
0000000000013a40 0000000000000068 t nsvg__normalize
0000000000013ab0 00000000000001d8 t nsvg__atof
0000000000013c90 0000000000000084 t nsvg__addPoint
0000000000013d20 00000000000000a0 t nsvg__lineTo
0000000000013dc0 000000000000005c t nsvg__cubicBezTo
0000000000013e20 0000000000000034 t nsvg__moveTo
0000000000013e60 00000000000000e8 t nsvg__addPathPoint
0000000000013f50 00000000000001a0 t nsvg__flattenCubicBez
00000000000140f0 0000000000000080 t nsvg__appendPathPoint
0000000000014170 00000000000000a4 t nsvg__vecang
0000000000014220 0000000000000048 t nsvg__deletePaths
0000000000014270 00000000000002f4 t nsvg__curveBounds
0000000000014570 00000000000001fc t nsvg__addPath
0000000000014770 00000000000003bc t nsvg__initPaint.part.9
0000000000014b30 00000000000000b4 t nsvg__endElement
0000000000014bf0 00000000000001a0 t nsvg__prepareStroke.isra.12
0000000000014d90 00000000000000e4 t nsvg__addEdge
0000000000014e80 00000000000001bc t nsvg__roundCap.isra.23
0000000000015040 00000000000001b4 t nsvg__getLocalBounds.isra.26
0000000000015200 000000000000033c t nsvg__addShape
0000000000015540 00000000000000d8 t nsvg__fillScanline.constprop.30
0000000000015620 00000000000008d0 t nsvg__rasterizeSortedEdges
0000000000015ef0 000000000000020c t nsvg__parseNumber.constprop.34
0000000000016100 0000000000000168 t nsvg__parseTransformArgs.constprop.33
0000000000016270 0000000000000408 t nsvg__parseTransform
0000000000016680 0000000000000988 t nsvg__parseAttr
0000000000017010 00000000000001a4 t nsvg__parseNameValue
00000000000171c0 0000000000000114 t nsvg__parseStyle
00000000000172e0 0000000000000070 t nsvg__parseAttribs
0000000000017350 000000000000015c t nsvg__parseGradientStop
00000000000174b0 0000000000000314 t nsvg__parseGradient
00000000000177d0 00000000000000b4 t nsvg__getNextPathItem
0000000000017890 0000000000000134 t nsvg__parsePoly
00000000000179d0 0000000000001c40 t nsvg__startElement
0000000000019610 00000000000007d8 t nsvg__expandStroke
0000000000019df0 0000000000000164 T nsvg__parseXML
0000000000019f60 00000000000000b0 T nsvgDelete
000000000001a010 00000000000005c0 T nsvgParse
000000000001a5d0 0000000000000074 T nsvgDeleteRasterizer
000000000001a650 0000000000000050 T nsvgCreateRasterizer
000000000001a6a0 0000000000000aec T nsvgRasterize
000000000001b190 00000000000000b8 T IMG_isSVG
000000000001b250 0000000000000100 T IMG_LoadSVG_RW
000000000001b350 00000000000006dc T IMG_LoadTGA_RW
000000000001ba30 0000000000000020 T IMG_InitTIF
000000000001ba50 0000000000000008 T IMG_isTIF
000000000001ba60 0000000000000008 T IMG_LoadTIF_RW
000000000001ba70 0000000000000040 t free_xcf_header
000000000001bab0 0000000000000050 t load_xcf_tile_none
000000000001bb00 0000000000000128 t xcf_read_property
000000000001bc30 00000000000000b4 t read_string
000000000001bcf0 0000000000000204 t load_xcf_tile_rle
000000000001bf00 00000000000000ac T IMG_isXCF
000000000001bfb0 0000000000000d2c T IMG_LoadXCF_RW
000000000001cce0 00000000000000a8 t get_colorhash.isra.0
000000000001cd90 00000000000001a4 t get_next_line.part.1
000000000001cf40 0000000000000788 t load_xpm
000000000001d6d0 00000000000000ac T IMG_isXPM
000000000001d780 0000000000000014 T IMG_LoadXPM_RW
000000000001d7a0 0000000000000088 t get_line.constprop.0
000000000001d830 000000000000010c t get_header
000000000001d940 0000000000000078 T IMG_isXV
000000000001d9c0 0000000000000148 T IMG_LoadXV_RW
000000000001db10 0000000000000170 t webp_getinfo
000000000001dc80 0000000000000040 T IMG_InitWEBP
000000000001dcc0 0000000000000008 T IMG_isWEBP
000000000001dcd0 0000000000000234 T IMG_LoadWEBP_RW
000000000001df10 000000000000007c t _Mix_remove_all_effects
000000000001df90 0000000000000044 t _Mix_channel_done_playing
000000000001dfe0 00000000000000d4 t Mix_DoEffects
000000000001e0c0 00000000000000b0 t add_chunk_decoder
000000000001e170 000000000000061c T Mix_LoadWAV_RW
000000000001e790 00000000000000bc T Mix_FreeChunk
000000000001e850 00000000000000b4 T Mix_Volume
000000000001e850 00000000000000b4 t Mix_Volume.localalias.9
000000000001e910 00000000000003ec t mix_channels
000000000001ed00 00000000000000ec T Mix_HaltChannel
000000000001ed00 00000000000000ec t Mix_HaltChannel.localalias.8
000000000001edf0 00000000000000bc T Mix_Playing
000000000001eeb0 0000000000000200 T Mix_PlayChannelTimed
000000000001f0b0 0000000000000060 t _Mix_UnregisterAllEffects_locked
000000000001f110 0000000000000040 T Mix_UnregisterAllEffects
000000000001f150 00000000000000d4 T Mix_CloseAudio
000000000001f230 00000000000001cc T Mix_OpenAudioDevice
000000000001f400 000000000000000c T Mix_OpenAudio
000000000001f410 000000000000000c t Mix_LockAudio
000000000001f420 000000000000000c t Mix_UnlockAudio
000000000001f430 0000000000000058 t music_internal_halt
000000000001f490 000000000000006c t music_internal_playing
000000000001f500 00000000000000b0 t add_music_decoder
000000000001f5b0 0000000000000308 t open_music_type.part.0
000000000001f8c0 0000000000000008 t get_num_music_interfaces
000000000001f8d0 0000000000000010 t get_music_interface
000000000001f8e0 0000000000000100 t music_pcm_getaudio
000000000001f9e0 00000000000001b4 T music_mixer
000000000001fba0 0000000000000108 t load_music_type
000000000001fcb0 000000000000001c t open_music_type
000000000001fcd0 00000000000000b4 t detect_music_type_from_magic
000000000001fd90 0000000000000350 T Mix_LoadMUSType_RW
00000000000200e0 00000000000003e0 T Mix_LoadMUS
00000000000204c0 000000000000007c T Mix_FreeMusic
0000000000020540 0000000000000220 T Mix_FadeInMusicPos
0000000000020760 000000000000000c T Mix_PlayMusic
0000000000020770 0000000000000078 T Mix_VolumeMusic
00000000000207f0 000000000000008c t open_music
0000000000020880 000000000000003c T Mix_HaltMusic
00000000000208c0 0000000000000050 T Mix_PauseMusic
0000000000020910 0000000000000054 T Mix_ResumeMusic
0000000000020970 0000000000000080 T Mix_SetMusicCMD
00000000000209f0 00000000000000a0 t close_music
0000000000020a90 0000000000000068 t MODPLUG_Load
0000000000020b00 0000000000000018 t MODPLUG_Unload
0000000000020b20 00000000000000dc t MODPLUG_Open
0000000000020c00 0000000000000014 t MODPLUG_SetVolume
0000000000020c20 0000000000000030 t MODPLUG_Play
0000000000020c50 0000000000000038 t MODPLUG_Seek
0000000000020c90 000000000000004c t MODPLUG_Delete
0000000000020ce0 0000000000000168 T MODPLUG_CreateFromRW
0000000000020e50 0000000000000010 t MODPLUG_GetAudio
0000000000020e60 00000000000000e4 t MODPLUG_GetSome
0000000000020f50 00000000000000b8 t MPG123_Load
0000000000021010 0000000000000018 t MPG123_Unload
0000000000021030 0000000000000010 t rwops_read
0000000000021040 0000000000000008 t rwops_seek
0000000000021050 0000000000000004 t rwops_cleanup
0000000000021060 0000000000000008 t MPG123_SetVolume
0000000000021070 000000000000000c t MPG123_Close
0000000000021080 0000000000000074 t MPG123_Delete
0000000000021100 0000000000000034 t MPG123_Open
0000000000021140 0000000000000010 t MPG123_GetAudio
0000000000021150 0000000000000028 t mpg_err
0000000000021180 0000000000000074 t MPG123_Seek
0000000000021200 000000000000000c t MPG123_Play
0000000000021210 000000000000020c t MPG123_CreateFromRW
0000000000021420 00000000000001e4 t MPG123_GetSome
0000000000021610 000000000000007c t OGG_Load
0000000000021690 0000000000000018 t OGG_Unload
00000000000216b0 000000000000001c t sdl_read_func
00000000000216d0 0000000000000018 t sdl_seek_func
00000000000216f0 0000000000000010 t sdl_tell_func
0000000000021700 0000000000000008 t OGG_SetVolume
0000000000021710 0000000000000060 t OGG_Delete
0000000000021770 00000000000001dc t set_ov_error
0000000000021950 0000000000000050 t OGG_Seek
00000000000219a0 000000000000000c t OGG_Play
00000000000219b0 0000000000000010 t OGG_GetAudio
00000000000219c0 000000000000010c t OGG_UpdateSection
0000000000021ad0 0000000000000304 t OGG_CreateFromRW
0000000000021de0 00000000000001d0 t OGG_GetSome
0000000000021fb0 000000000000005c t OPUS_Load
0000000000022010 0000000000000018 t OPUS_Unload
0000000000022030 0000000000000020 t sdl_read_func
0000000000022050 000000000000001c t sdl_seek_func
0000000000022070 0000000000000010 t sdl_tell_func
0000000000022080 0000000000000008 t OPUS_SetVolume
0000000000022090 0000000000000060 t OPUS_Delete
00000000000220f0 00000000000001f8 t set_op_error
00000000000222f0 0000000000000050 t OPUS_Seek
0000000000022340 000000000000000c t OPUS_Play
0000000000022350 0000000000000010 t OPUS_GetAudio
0000000000022360 0000000000000108 t OPUS_UpdateSection
0000000000022470 0000000000000144 t OPUS_CreateFromRW
00000000000225c0 0000000000000140 t OPUS_GetSome
0000000000022700 0000000000000044 t TIMIDITY_Delete
0000000000022750 0000000000000124 T TIMIDITY_CreateFromRW
0000000000022880 0000000000000004 t TIMIDITY_Close
0000000000022890 0000000000000030 t TIMIDITY_Seek
00000000000228c0 0000000000000010 t TIMIDITY_GetAudio
00000000000228d0 0000000000000038 t TIMIDITY_Play
0000000000022910 0000000000000008 t TIMIDITY_SetVolume
0000000000022920 0000000000000004 t TIMIDITY_Open
0000000000022930 000000000000011c t TIMIDITY_GetSome
0000000000022a50 0000000000000008 t WAV_SetVolume
0000000000022a60 0000000000000074 t WAV_Play
0000000000022ae0 000000000000005c t WAV_Delete
0000000000022b40 0000000000000010 t WAV_GetAudio
0000000000022b50 000000000000022c t WAV_GetSome
0000000000022d80 0000000000000738 t WAV_CreateFromRW
00000000000234c0 0000000000000164 t recompute_freq
0000000000023630 0000000000000114 t recompute_amp
0000000000023750 00000000000000a0 t adjust_volume
00000000000237f0 00000000000000c0 t do_compute_data
00000000000238b0 0000000000000140 t compute_data
00000000000239f0 0000000000000324 t start_note
0000000000023d20 0000000000000048 t finish_note.part.2
0000000000023d70 00000000000000b4 t note_off
0000000000023e30 00000000000000a4 t Timidity_Start
0000000000023ee0 0000000000000280 t Timidity_Seek
0000000000024160 0000000000000630 t Timidity_PlaySome
0000000000024790 00000000000000c4 t Timidity_SetVolume
0000000000024860 0000000000000810 t read_config_file
0000000000025070 00000000000000b4 t Timidity_Init_NoConfig
0000000000025130 00000000000000a4 t Timidity_Init
00000000000251e0 0000000000000390 t Timidity_LoadSong
0000000000025570 0000000000000074 t Timidity_FreeSong
00000000000255f0 00000000000000e4 t Timidity_Exit
00000000000256e0 000000000000002c t _Mix_InitEffects
0000000000025710 0000000000000004 t _Mix_DeinitEffects
0000000000025720 000000000000059c t Mix_LoadAIFF_RW
0000000000025cc0 0000000000000538 t voc_get_block.isra.0
0000000000026200 0000000000000334 t Mix_LoadVOC_RW
0000000000026540 0000000000000184 t open_file
00000000000266d0 0000000000000004 t safe_malloc
00000000000266e0 0000000000000080 t add_to_pathlist
0000000000026760 000000000000004c t free_pathlist
00000000000267b0 0000000000000074 t free_instrument
0000000000026830 000000000000099c t load_instrument.isra.5
00000000000271d0 0000000000000198 t fill_bank
0000000000027370 0000000000000088 t load_missing_instruments
0000000000027400 00000000000000a4 t free_instruments
00000000000274b0 0000000000000058 t set_default_instrument
0000000000027510 00000000000000dc t recompute_envelope
00000000000275f0 0000000000000108 t apply_envelope_to_amp
0000000000027700 0000000000000168 t update_signal
0000000000027870 0000000000000780 t mix_voice
0000000000027ff0 0000000000000048 T s32tos8
0000000000028040 000000000000004c T s32tou8
0000000000028090 0000000000000048 T s32tos16
00000000000280e0 000000000000004c T s32tou16
0000000000028130 000000000000004c T s32tos16x
0000000000028180 0000000000000050 T s32tou16x
00000000000281d0 0000000000000038 T s32tof32
0000000000028210 0000000000000030 T s32tos32
0000000000028240 0000000000000034 T s32tos32x
0000000000028280 00000000000008e8 t read_track
0000000000028b70 0000000000000754 t read_midi_file
00000000000292d0 00000000000001b8 t update_vibrato.isra.2
0000000000029490 0000000000000874 t resample_voice
0000000000029d10 00000000000002f0 t pre_resample
000000000002a000 000000000000007c t _Eff_PositionDeinit
000000000002a080 000000000000000c T SDL_ExitProcess
000000000002a090 0000000000000274 T SDL_QuitSubSystem
000000000002a310 0000000000000218 T SDL_InitSubSystem
000000000002a530 0000000000000004 T SDL_Init
000000000002a540 0000000000000090 T SDL_WasInit
000000000002a5d0 0000000000000058 T SDL_Quit
000000000002a630 000000000000000c T SDL_GetPlatform
000000000002a640 0000000000000080 t debug_print
000000000002a6c0 00000000000003a4 t SDL_PromptAssertion
000000000002aa70 000000000000016c T SDL_ReportAssertion
000000000002abe0 000000000000002c T SDL_ResetAssertionReport
000000000002ac10 00000000000000e0 T SDL_AssertionsQuit
000000000002acf0 0000000000000154 T SDL_SetError
000000000002ae50 0000000000000030 T SDL_GetError
000000000002ae80 0000000000000018 T SDL_ClearError
000000000002aea0 0000000000000068 T SDL_Error
000000000002af10 0000000000000170 T SDL_SetHintWithPriority
000000000002b080 0000000000000008 T SDL_SetHint
000000000002b090 0000000000000080 T SDL_GetHint
000000000002b110 0000000000000048 T SDL_GetStringBoolean
000000000002b160 0000000000000024 T SDL_GetHintBoolean
000000000002b190 00000000000000b0 T SDL_DelHintCallback
000000000002b240 0000000000000180 T SDL_AddHintCallback
000000000002b3c0 0000000000000070 T SDL_ClearHints
000000000002b430 0000000000000040 t SDL_LogOutput
000000000002b470 0000000000000038 T SDL_LogInit
000000000002b4b0 0000000000000070 T SDL_LogGetPriority
000000000002b520 0000000000000068 T SDL_LogResetPriorities
000000000002b590 0000000000000030 T SDL_LogQuit
000000000002b5c0 00000000000001e8 T SDL_LogMessageV
000000000002b7b0 0000000000000080 T SDL_Log
000000000002b830 0000000000000078 T SDL_LogDebug
000000000002b8b0 0000000000000078 T SDL_LogInfo
000000000002b930 0000000000000078 T SDL_LogWarn
000000000002b9b0 0000000000000020 T SDL_AtomicTryLock
000000000002b9d0 000000000000006c T SDL_AtomicLock
000000000002ba40 0000000000000008 T SDL_AtomicUnlock
000000000002ba50 0000000000000004 t SDL_AudioThreadInit_Default
000000000002ba60 0000000000000008 t SDL_AudioGetDeviceBuf_Default
000000000002ba70 0000000000000008 t SDL_AudioCaptureFromDevice_Default
000000000002ba80 0000000000000004 t SDL_AudioDeinitialize_Default
000000000002ba90 0000000000000008 t SDL_AudioOpenDevice_Default
000000000002baa0 00000000000001a0 t add_audio_device
000000000002bc40 000000000000000c t SDL_BufferQueueFillCallback
000000000002bc50 0000000000000060 t SDL_BufferQueueDrainCallback
000000000002bcb0 0000000000000044 t SDL_AudioUnlockDevice_Default
000000000002bd00 0000000000000044 t SDL_AudioLockDevice_Default
000000000002bd50 0000000000000280 t SDL_RunAudio
000000000002bfd0 00000000000000e4 t close_audio_device
000000000002c0c0 0000000000000004 t SDL_AudioCloseDevice_Default
000000000002c0d0 0000000000000004 t SDL_AudioFreeDeviceHandle_Default
000000000002c0e0 0000000000000004 t SDL_AudioThreadDeinit_Default
000000000002c0f0 0000000000000004 t SDL_AudioWaitDevice_Default
000000000002c100 0000000000000004 t SDL_AudioPlayDevice_Default
000000000002c110 0000000000000004 t SDL_AudioFlushCapture_Default
000000000002c120 00000000000000bc T SDL_AddAudioDevice
000000000002c1e0 0000000000000050 t SDL_AudioDetectDevices_Default
000000000002c230 00000000000000d4 T SDL_OpenedAudioDeviceDisconnected
000000000002c310 0000000000000244 t SDL_CaptureAudio
000000000002c560 000000000000000c T SDL_GetCurrentAudioDriver
000000000002c570 0000000000000094 T SDL_PauseAudioDevice
000000000002c610 0000000000000038 T SDL_LockAudioDevice
000000000002c650 0000000000000038 T SDL_UnlockAudioDevice
000000000002c690 0000000000000040 T SDL_CloseAudioDevice
000000000002c6d0 0000000000000160 T SDL_AudioQuit
000000000002c830 0000000000000390 T SDL_AudioInit
000000000002cbc0 000000000000004c T SDL_NextAudioFormat
000000000002cc10 00000000000000f0 T SDL_FirstAudioFormat
000000000002cd00 0000000000000028 T SDL_SilenceValueForFormat
000000000002cd30 0000000000000044 T SDL_CalculateAudioSpec
000000000002cd80 0000000000000ce0 t open_audio_device
000000000002da60 0000000000000008 T SDL_OpenAudioDevice
000000000002da70 000000000000007c t SDL_ConvertMonoToStereo
000000000002daf0 0000000000000088 t SDL_ConvertMonoTo21
000000000002db80 0000000000000080 t SDL_ConvertMonoToQuad
000000000002dc00 0000000000000084 t SDL_ConvertMonoTo41
000000000002dc90 0000000000000090 t SDL_ConvertMonoTo51
000000000002dd20 0000000000000094 t SDL_ConvertMonoTo61
000000000002ddc0 0000000000000088 t SDL_ConvertMonoTo71
000000000002de50 0000000000000078 t SDL_ConvertStereoToMono
000000000002ded0 000000000000009c t SDL_ConvertStereoTo21
000000000002df70 0000000000000094 t SDL_ConvertStereoToQuad
000000000002e010 0000000000000098 t SDL_ConvertStereoTo41
000000000002e0b0 00000000000000a4 t SDL_ConvertStereoTo51
000000000002e160 00000000000000a8 t SDL_ConvertStereoTo61
000000000002e210 000000000000009c t SDL_ConvertStereoTo71
000000000002e2b0 00000000000000a4 t SDL_Convert21ToMono
000000000002e360 00000000000000c4 t SDL_Convert21ToStereo
000000000002e430 00000000000000e0 t SDL_Convert21ToQuad
000000000002e510 00000000000000c8 t SDL_Convert21To41
000000000002e5e0 00000000000000d0 t SDL_Convert21To51
000000000002e6b0 00000000000000d4 t SDL_Convert21To61
000000000002e790 00000000000000c8 t SDL_Convert21To71
000000000002e860 000000000000008c t SDL_ConvertQuadToMono
000000000002e8f0 00000000000000c4 t SDL_ConvertQuadToStereo
000000000002e9c0 00000000000000c8 t SDL_ConvertQuadTo21
000000000002ea90 00000000000000b4 t SDL_ConvertQuadTo41
000000000002eb50 00000000000000c0 t SDL_ConvertQuadTo51
000000000002ec10 00000000000000f4 t SDL_ConvertQuadTo61
000000000002ed10 00000000000000b8 t SDL_ConvertQuadTo71
000000000002edd0 00000000000000a8 t SDL_Convert41ToMono
000000000002ee80 00000000000000f0 t SDL_Convert41ToStereo
000000000002ef70 00000000000000e0 t SDL_Convert41To21
000000000002f050 00000000000000dc t SDL_Convert41ToQuad
000000000002f130 00000000000000dc t SDL_Convert41To51
000000000002f210 0000000000000110 t SDL_Convert41To61
000000000002f320 00000000000000d4 t SDL_Convert41To71
000000000002f400 00000000000000ac t SDL_Convert51ToMono
000000000002f4b0 00000000000000f8 t SDL_Convert51ToStereo
000000000002f5b0 00000000000000f8 t SDL_Convert51To21
000000000002f6b0 00000000000000ec t SDL_Convert51ToQuad
000000000002f7a0 00000000000000e4 t SDL_Convert51To41
000000000002f890 0000000000000118 t SDL_Convert51To61
000000000002f9b0 00000000000000d8 t SDL_Convert51To71
000000000002fa90 00000000000000d4 t SDL_Convert61ToMono
000000000002fb70 000000000000011c t SDL_Convert61ToStereo
000000000002fc90 0000000000000114 t SDL_Convert61To21
000000000002fdb0 0000000000000120 t SDL_Convert61ToQuad
000000000002fed0 0000000000000118 t SDL_Convert61To41
000000000002fff0 0000000000000120 t SDL_Convert61To51
0000000000030110 0000000000000108 t SDL_Convert61To71
0000000000030220 00000000000000b8 t SDL_Convert71ToMono
00000000000302e0 0000000000000118 t SDL_Convert71ToStereo
0000000000030400 0000000000000110 t SDL_Convert71To21
0000000000030510 000000000000010c t SDL_Convert71ToQuad
0000000000030620 00000000000000fc t SDL_Convert71To41
0000000000030720 00000000000000fc t SDL_Convert71To51
0000000000030820 00000000000000f8 t SDL_Convert71To61
0000000000030920 0000000000000014 t SDL_ResetAudioStreamResampler
0000000000030940 000000000000022c t SDL_Convert_Byteswap
0000000000030b70 0000000000000008 t SDL_CleanupAudioStreamResampler
0000000000030b80 0000000000000634 t SDL_ResampleCVT_c8
00000000000311c0 0000000000000620 t SDL_ResampleCVT_c6
00000000000317e0 0000000000000638 t SDL_ResampleCVT_c4
0000000000031e20 0000000000000638 t SDL_ResampleCVT_c2
0000000000032460 0000000000000588 t SDL_ResampleCVT_c1
00000000000329f0 0000000000000698 t SDL_ResampleAudioStream
0000000000033090 000000000000004c T SDL_ConvertAudio
00000000000330e0 0000000000000298 t SDL_AudioStreamPutInternal
0000000000033380 00000000000007d8 T SDL_BuildAudioCVT
0000000000033b60 00000000000003c0 T SDL_AudioStreamPut
0000000000033f20 0000000000000114 T SDL_AudioStreamFlush
0000000000034040 0000000000000078 T SDL_AudioStreamGet
00000000000340c0 0000000000000024 T SDL_AudioStreamAvailable
00000000000340f0 0000000000000060 T SDL_AudioStreamClear
0000000000034150 0000000000000054 T SDL_FreeAudioStream
00000000000341b0 00000000000002a0 T SDL_NewAudioStream
0000000000034450 000000000000024c t SDL_Convert_F32_to_S32_NEON
00000000000346a0 00000000000001ac t SDL_Convert_F32_to_U16_NEON
0000000000034850 0000000000000194 t SDL_Convert_F32_to_S16_NEON
00000000000349f0 00000000000001e0 t SDL_Convert_F32_to_U8_NEON
0000000000034bd0 00000000000001c0 t SDL_Convert_F32_to_S8_NEON
0000000000034d90 00000000000001ac t SDL_Convert_S32_to_F32_NEON
0000000000034f40 0000000000000160 t SDL_Convert_U16_to_F32_NEON
00000000000350a0 0000000000000148 t SDL_Convert_S16_to_F32_NEON
00000000000351f0 000000000000017c t SDL_Convert_U8_to_F32_NEON
0000000000035370 000000000000015c t SDL_Convert_S8_to_F32_NEON
00000000000354d0 0000000000000108 T SDL_ChooseAudioConverters
00000000000355e0 00000000000019ac T SDL_MixAudioFormat
0000000000036f90 0000000000000128 t MS_ADPCM_CalculateSampleFrames
00000000000370c0 0000000000000150 t IMA_ADPCM_CalculateSampleFrames
0000000000037210 0000000000002784 T SDL_LoadWAV_RW
00000000000399a0 0000000000000064 T SDL_HasAltiVec
0000000000039a10 0000000000000064 T SDL_HasMMX
0000000000039a80 0000000000000064 T SDL_Has3DNow
0000000000039af0 0000000000000064 T SDL_HasSSE
0000000000039b60 0000000000000064 T SDL_HasSSE2
0000000000039bd0 0000000000000064 T SDL_HasARMSIMD
0000000000039c40 0000000000000064 T SDL_HasNEON
0000000000039cb0 000000000000006c T SDL_SIMDGetAlignment
0000000000039d20 0000000000000074 T SDL_SIMDAlloc
0000000000039da0 0000000000000010 T SDL_SIMDFree
0000000000039db0 0000000000000074 t SDL_EventLoggingChanged
0000000000039e30 0000000000001230 t SDL_LogEvent
000000000003b060 0000000000000160 t SDL_AddEvent
000000000003b1c0 0000000000000038 t SDL_AutoUpdateSensorsChanged
000000000003b200 0000000000000048 t SDL_AutoUpdateJoysticksChanged
000000000003b250 0000000000000194 T SDL_StopEventLoop
000000000003b3f0 0000000000000404 T SDL_PeepEvents
000000000003b800 0000000000000120 T SDL_FlushEvents
000000000003b920 0000000000000008 T SDL_FlushEvent
000000000003b930 00000000000001b8 T SDL_PushEvent
000000000003baf0 0000000000000088 T SDL_AddEventWatch
000000000003bb80 00000000000000d8 T SDL_DelEventWatch
000000000003bc60 0000000000000118 T SDL_FilterEvents
000000000003bd80 0000000000000190 T SDL_EventState
000000000003bf10 00000000000000a0 T SDL_StartEventLoop
000000000003bfb0 000000000000002c t SDL_PollSentinelChanged
000000000003bfe0 0000000000000054 T SDL_SendAppEvent
000000000003c040 0000000000000008 T SDL_SendKeymapChangedEvent
000000000003c050 00000000000000a8 T SDL_EventsInit
000000000003c100 0000000000000074 T SDL_EventsQuit
000000000003c180 0000000000000104 t dollarDifference
000000000003c290 00000000000000bc t SDL_AddDollarGesture_one
000000000003c350 0000000000000364 t dollarNormalize.isra.0
000000000003c6c0 0000000000000028 T SDL_GestureQuit
000000000003c6f0 000000000000008c T SDL_GestureAddTouch
000000000003c780 00000000000000e4 T SDL_GestureDelTouch
000000000003c870 00000000000006a0 T SDL_GestureProcessEvent
000000000003cf10 00000000000001dc T SDL_SetKeymap
000000000003d0f0 000000000000002c T SDL_KeyboardInit
000000000003d120 000000000000000c T SDL_GetKeyboardFocus
000000000003d130 00000000000002b8 T SDL_SendKeyboardKey
000000000003d3f0 0000000000000058 T SDL_ResetKeyboard
000000000003d450 00000000000000f4 T SDL_SetKeyboardFocus
000000000003d550 00000000000000e8 T SDL_SendKeyboardText
000000000003d640 0000000000000004 T SDL_KeyboardQuit
000000000003d650 000000000000002c t SDL_MouseRelativeWarpMotionChanged
000000000003d680 000000000000002c t SDL_TouchMouseEventsChanged
000000000003d6b0 000000000000002c t SDL_MouseRelativeSystemScaleChanged
000000000003d6e0 000000000000004c t SDL_MouseTouchEventsChanged
000000000003d730 0000000000000058 t SDL_MouseRelativeSpeedScaleChanged
000000000003d790 0000000000000058 t SDL_MouseNormalSpeedScaleChanged
000000000003d7f0 0000000000000048 t SDL_MouseDoubleClickRadiusChanged
000000000003d840 0000000000000048 t SDL_MouseDoubleClickTimeChanged
000000000003d890 000000000000000c T SDL_GetMouse
000000000003d8a0 0000000000000114 T SDL_MouseInit
000000000003d9c0 0000000000000978 t SDL_PrivateSendMouseMotion
000000000003e340 0000000000000018 T SDL_GetMouseFocus
000000000003e360 0000000000000188 T SDL_GetMouseState
000000000003e4f0 00000000000000d0 T SDL_PerformWarpMouseInWindow
000000000003e5c0 0000000000000008 T SDL_WarpMouseInWindow
000000000003e5d0 0000000000000018 T SDL_GetRelativeMouseMode
000000000003e5f0 00000000000002a0 T SDL_UpdateMouseCapture
000000000003e890 000000000000004c t SDL_MouseAutoCaptureChanged
000000000003e8e0 0000000000000064 T SDL_CaptureMouse
000000000003e950 00000000000000d8 T SDL_SetCursor
000000000003ea30 0000000000000074 T SDL_SetMouseFocus
000000000003eab0 00000000000000f4 t SDL_UpdateMouseFocus.isra.0
000000000003ebb0 000000000000043c t SDL_PrivateSendMouseButton
000000000003eff0 0000000000000008 T SDL_SendMouseButton
000000000003f000 0000000000000090 T SDL_SendMouseMotion
000000000003f090 0000000000000190 T SDL_SetRelativeMouseMode
000000000003f220 00000000000000a0 T SDL_FreeCursor
000000000003f2c0 000000000000005c T SDL_ShowCursor
000000000003f320 0000000000000194 T SDL_MouseQuit
000000000003f4c0 0000000000000040 t SDL_HandleSIG
000000000003f500 0000000000000080 T SDL_QuitInit
000000000003f580 000000000000006c T SDL_QuitQuit
000000000003f5f0 0000000000000010 T SDL_SendQuit
000000000003f600 0000000000000008 T SDL_TouchInit
000000000003f610 00000000000000b0 T SDL_GetTouch
000000000003f6c0 000000000000014c T SDL_AddTouch
000000000003f810 0000000000000458 T SDL_SendTouch
000000000003f810 0000000000000458 t SDL_SendTouch.localalias
000000000003fc70 0000000000000244 T SDL_SendTouchMotion
000000000003fec0 0000000000000104 T SDL_DelTouch
000000000003ffd0 0000000000000078 T SDL_TouchQuit
0000000000040050 0000000000000060 t RemovePendingSizeChangedAndResizedEvents
00000000000400b0 000000000000003c t RemovePendingExposedEvents
00000000000400f0 000000000000003c t RemovePendingMoveEvents
0000000000040130 00000000000003b4 T SDL_SendWindowEvent
00000000000404f0 0000000000000010 t mem_size
0000000000040500 0000000000000020 t mem_writeconst
0000000000040520 0000000000000088 t mem_read
00000000000405b0 00000000000000b0 t mem_seek
0000000000040660 0000000000000084 t stdio_seek
00000000000406f0 0000000000000060 t stdio_read
0000000000040750 0000000000000060 t stdio_write
00000000000407b0 0000000000000048 T SDL_AllocRW
0000000000040800 000000000000006c T SDL_RWFromFP
0000000000040870 0000000000000078 T SDL_RWFromFile
00000000000408f0 00000000000000c8 T SDL_RWFromConstMem
00000000000409c0 0000000000000004 T SDL_FreeRW
00000000000409d0 0000000000000058 t stdio_close
0000000000040a30 0000000000000024 t mem_close
0000000000040a60 000000000000000c T SDL_RWsize
0000000000040a70 000000000000000c T SDL_RWseek
0000000000040a80 0000000000000064 t stdio_size
0000000000040af0 0000000000000014 T SDL_RWtell
0000000000040b10 000000000000000c T SDL_RWread
0000000000040b20 000000000000000c T SDL_RWclose
0000000000040b30 000000000000011c T SDL_LoadFile_RW
0000000000040c50 0000000000000030 T SDL_LoadFile
0000000000040c80 0000000000000028 T SDL_ReadLE16
0000000000040cb0 000000000000002c T SDL_ReadBE16
0000000000040ce0 0000000000000028 T SDL_ReadLE32
0000000000040d10 000000000000002c T SDL_ReadBE32
0000000000040d40 000000000000001c T SDL_HapticInit
0000000000040d60 0000000000000068 T SDL_HapticDestroyEffect
0000000000040dd0 0000000000000160 T SDL_HapticClose
0000000000040f30 0000000000000030 T SDL_HapticQuit
0000000000040f60 0000000000000238 t SDL_PrivateMatchControllerMappingForGUID
00000000000411a0 0000000000000114 t SDL_LoadVIDPIDListFromHint
00000000000412c0 0000000000000010 t SDL_GameControllerIgnoreDevicesExceptChanged
00000000000412d0 0000000000000010 t SDL_GameControllerIgnoreDevicesChanged
00000000000412e0 00000000000000e8 t SDL_PrivateAppendToMappingString.part.0.constprop.0
00000000000413d0 00000000000000f4 t SDL_PrivateGameControllerButton.isra.0
00000000000414d0 0000000000000090 T SDL_GameControllerGetAxisFromString
0000000000041560 0000000000000080 T SDL_GameControllerGetButtonFromString
00000000000415e0 00000000000002cc t SDL_PrivateGameControllerParseElement
00000000000418b0 0000000000000220 t SDL_PrivateLoadButtonMapping
0000000000041ad0 000000000000034c t SDL_PrivateAddMappingForGUID
0000000000041e20 000000000000027c t SDL_PrivateGameControllerAddMapping
00000000000420a0 00000000000003d0 t SDL_CreateMappingForHIDAPIController
0000000000042470 0000000000000074 t SDL_CreateMappingForRAWINPUTController
00000000000424f0 0000000000000094 t SDL_CreateMappingForWGIController
0000000000042590 00000000000001f4 t SDL_PrivateGetControllerMappingForGUID
0000000000042790 00000000000003f4 t SDL_PrivateGetControllerMapping.part.0
0000000000042b90 0000000000000038 T SDL_GameControllerAddMapping
0000000000042bd0 00000000000001e0 T SDL_GameControllerAddMappingsFromRW
0000000000042db0 0000000000000158 T SDL_GameControllerInitMappings
0000000000042f10 0000000000000078 T SDL_IsGameController
0000000000042f90 000000000000008c T SDL_GameControllerInit
0000000000043020 00000000000001fc T SDL_GameControllerGetAxis
0000000000043220 0000000000000198 T SDL_GameControllerGetButton
00000000000433c0 00000000000008ac t SDL_GameControllerEventWatcher
0000000000043c70 00000000000000c8 T SDL_GameControllerClose
0000000000043d40 000000000000003c T SDL_GameControllerQuit
0000000000043d80 00000000000000e4 T SDL_GameControllerQuitMappings
0000000000043e70 000000000000002c t SDL_JoystickAllowBackgroundEventsChanged
0000000000043ea0 0000000000000054 T SDL_LockJoysticks
0000000000043f00 0000000000000070 T SDL_UnlockJoysticks
0000000000043f70 0000000000000004 T SDL_AssertJoysticksLocked
0000000000043f80 000000000000004c T SDL_NumJoysticks
0000000000043fd0 00000000000000b4 T SDL_JoystickNameForIndex
0000000000044090 000000000000003c T SDL_PrivateJoystickValid
00000000000440d0 00000000000000bc T SDL_PrivateJoystickGetAutoGamepadMapping
0000000000044190 00000000000000a4 T SDL_JoystickGetAxis
0000000000044240 000000000000009c T SDL_JoystickGetHat
00000000000442e0 000000000000009c T SDL_JoystickGetButton
0000000000044380 0000000000000064 T SDL_JoystickInstanceID
00000000000443f0 000000000000004c T SDL_JoystickFromInstanceID
0000000000044440 000000000000010c T SDL_JoystickRumble
0000000000044550 00000000000000fc T SDL_JoystickRumbleTriggers
0000000000044650 000000000000018c T SDL_JoystickClose
00000000000447e0 00000000000000bc T SDL_JoystickQuit
00000000000448a0 00000000000000ac T SDL_JoystickInit
0000000000044950 00000000000000d0 T SDL_PrivateJoystickHat
0000000000044a20 0000000000000108 T SDL_PrivateJoystickButton
0000000000044b30 00000000000000a4 T SDL_JoystickEventState
0000000000044be0 0000000000000090 T SDL_GetJoystickGUIDInfo
0000000000044c70 00000000000000f4 T SDL_CreateJoystickGUID
0000000000044d70 0000000000000020 T SDL_CreateJoystickGUIDForName
0000000000044d90 0000000000000008 T SDL_SetJoystickGUIDVersion
0000000000044da0 0000000000000008 T SDL_SetJoystickGUIDCRC
0000000000044db0 0000000000000220 T SDL_GetJoystickGameControllerTypeFromVIDPID
0000000000044fd0 000000000000004c T SDL_IsJoystickXboxOneElite
0000000000045020 0000000000000110 T SDL_IsJoystickXboxSeriesX
0000000000045130 000000000000001c T SDL_IsJoystickDualSenseEdge
0000000000045150 000000000000001c T SDL_IsJoystickNintendoSwitchJoyConPair
0000000000045170 0000000000000028 T SDL_IsJoystickSteamController
00000000000451a0 0000000000000010 T SDL_IsJoystickXInput
00000000000451b0 0000000000000010 T SDL_IsJoystickWGI
00000000000451c0 0000000000000010 T SDL_IsJoystickHIDAPI
00000000000451d0 0000000000000010 T SDL_IsJoystickRAWINPUT
00000000000451e0 0000000000000010 T SDL_IsJoystickVirtual
00000000000451f0 00000000000001b0 T SDL_PrivateJoystickAxis
00000000000451f0 00000000000001b0 t SDL_PrivateJoystickAxis.localalias
00000000000453a0 0000000000000098 T SDL_GetJoystickGameControllerTypeFromGUID
0000000000045440 00000000000000c0 T SDL_JoystickGetDeviceGUID
0000000000045500 0000000000000004 T SDL_JoystickGetGUIDFromString
0000000000045510 00000000000001fc T GuessControllerType
0000000000045710 0000000000000110 t QueueCmdSetClipRect
0000000000045820 0000000000000128 t QueueCmdSetViewport
0000000000045950 0000000000000204 t PrepQueueCmdDraw
0000000000045b60 000000000000023c t QueueCmdFillRects
0000000000045da0 00000000000000ec T SDL_AllocateRenderVertices
0000000000045e90 0000000000000008 T SDL_GetNumRenderDrivers
0000000000045ea0 0000000000000080 T SDL_GetRenderDriverInfo
0000000000045f20 000000000000000c T SDL_GetRenderer
0000000000045f30 000000000000006c T SDL_GetRendererInfo
0000000000045fa0 0000000000000078 T SDL_QueryTexture
0000000000046020 000000000000009c T SDL_GetRendererOutputSize
00000000000460c0 00000000000000c8 T SDL_SetTextureColorMod
0000000000046190 00000000000000ac T SDL_SetTextureAlphaMod
0000000000046240 00000000000000d8 T SDL_SetTextureBlendMode
0000000000046320 0000000000000284 T SDL_LockTexture
00000000000465b0 00000000000001d4 T SDL_UnlockTexture
0000000000046790 00000000000003e4 T SDL_UpdateTexture
0000000000046b80 0000000000000020 T SDL_RenderTargetSupported
0000000000046ba0 00000000000002bc T SDL_SetRenderTarget
0000000000046e60 0000000000000048 T SDL_GetRenderTarget
0000000000046eb0 0000000000000154 T SDL_RenderSetViewport
0000000000047010 0000000000000468 T SDL_CreateRenderer
0000000000047480 0000000000000054 T SDL_RenderSetScale
00000000000474e0 0000000000000310 t UpdateLogicalSize.constprop.0
00000000000477f0 0000000000000638 t SDL_RendererEventWatch
0000000000047e30 0000000000000064 T SDL_SetRenderDrawColor
0000000000047ea0 000000000000009c T SDL_SetRenderDrawBlendMode
0000000000047f40 0000000000000140 T SDL_RenderClear
0000000000048080 0000000000000368 T SDL_RenderFillRectsF
00000000000483f0 00000000000000a4 T SDL_RenderFillRect
00000000000484a0 0000000000000388 T SDL_RenderCopyF
0000000000048830 0000000000000028 T SDL_RenderCopy
0000000000048860 0000000000000138 T SDL_RenderPresent
00000000000489a0 0000000000000158 T SDL_DestroyTexture
0000000000048b00 0000000000000858 T SDL_CreateTexture
0000000000048b00 0000000000000858 t SDL_CreateTexture.localalias
0000000000049360 0000000000000630 T SDL_CreateTextureFromSurface
0000000000049990 0000000000000100 T SDL_DestroyRenderer
0000000000049a90 0000000000000040 T SDL_GetBlendModeSrcColorFactor
0000000000049ad0 0000000000000040 T SDL_GetBlendModeDstColorFactor
0000000000049b10 0000000000000030 T SDL_GetBlendModeColorOperation
0000000000049b40 0000000000000030 T SDL_GetBlendModeSrcAlphaFactor
0000000000049b70 0000000000000034 T SDL_GetBlendModeDstAlphaFactor
0000000000049bb0 0000000000000030 T SDL_GetBlendModeAlphaOperation
0000000000049be0 0000000000000538 T SDL_SW_UpdateYUVTexture
000000000004a120 00000000000000e0 T SDL_SW_LockYUVTexture
000000000004a200 00000000000001fc T SDL_SW_CopyYUVToRGB
000000000004a400 0000000000000040 T SDL_SW_DestroyYUVTexture
000000000004a440 0000000000000210 T SDL_SW_CreateYUVTexture
000000000004a650 0000000000000020 t GLES2_WindowEvent
000000000004a670 0000000000000008 t GLES2_QueueSetViewport
000000000004a680 00000000000000a0 t GLES2_LockTexture
000000000004a720 0000000000000110 t GLES2_SetTextureScaleMode
000000000004a830 0000000000000008 t GLES2_RenderPresent
000000000004a840 000000000000001c t GLES2_GetOutputSize
000000000004a860 0000000000000348 t GLES2_RenderReadPixels
000000000004abb0 00000000000000a4 t GLES2_SetRenderTarget
000000000004ac60 0000000000000d40 t GLES2_CreateTexture
000000000004b9a0 0000000000000158 t GLES2_SupportsBlendMode
000000000004bb00 00000000000004dc t GLES2_QueueGeometry
000000000004bfe0 0000000000000110 t GLES2_QueueDrawPoints
000000000004c0f0 0000000000000180 t GLES2_QueueDrawLines
000000000004c270 00000000000002ec t GLES2_CacheShader
000000000004c560 00000000000008ac t SetDrawState
000000000004ce10 0000000000000b90 t GLES2_CreateRenderer
000000000004d9a0 0000000000000084 t GLES2_SetVSync
000000000004da30 0000000000000184 t GLES2_TexSubImage2D.isra.0
000000000004dbc0 000000000000007c t GLES2_UnbindTexture
000000000004dc40 00000000000000f0 t GLES2_DestroyTexture
000000000004dd30 00000000000000fc t GLES2_BindTexture
000000000004de30 0000000000000214 t GLES2_UpdateTextureNV
000000000004e050 000000000000026c t GLES2_UpdateTextureYUV
000000000004e2c0 00000000000001dc t GLES2_DestroyRenderer
000000000004e4a0 00000000000003c0 t GLES2_UpdateTexture
000000000004e860 0000000000000030 t GLES2_UnlockTexture
000000000004e890 000000000000076c t GLES2_RunCommandQueue
000000000004f000 000000000000001c T GLES2_GetShaderPrologue
000000000004f020 0000000000000064 T GLES2_GetShaderInclude
000000000004f090 0000000000000088 T GLES2_GetTexCoordPrecisionEnumFromHint
000000000004f120 0000000000000100 T GLES2_GetShader
000000000004f220 000000000000001c t SW_WindowEvent
000000000004f240 0000000000000040 t SW_LockTexture
000000000004f280 0000000000000004 t SW_UnlockTexture
000000000004f290 0000000000000004 t SW_SetTextureScaleMode
000000000004f2a0 0000000000000028 t SW_SetRenderTarget
000000000004f2d0 0000000000000008 t SW_QueueSetViewport
000000000004f2e0 0000000000000008 t SW_DestroyTexture
000000000004f2f0 0000000000000014 t SW_RenderPresent
000000000004f310 0000000000000404 t SW_QueueGeometry
000000000004f720 000000000000021c t SW_QueueFillRects
000000000004f940 00000000000000f4 t SW_QueueDrawPoints
000000000004fa40 00000000000000dc t SW_QueueCopyEx
000000000004fb20 0000000000000094 t SW_QueueCopy
000000000004fbc0 00000000000000f0 t SW_UpdateTexture
000000000004fcb0 00000000000000c4 t SW_CreateTexture
000000000004fd80 0000000000000028 t SW_DestroyRenderer
000000000004fdb0 00000000000000e4 t SetDrawState.part.0
000000000004fea0 0000000000000060 t SW_GetOutputSize
000000000004ff00 00000000000000a0 t PrepTextureForCopy.isra.0
000000000004ffa0 0000000000000110 t SW_RenderReadPixels
00000000000500b0 0000000000001260 t SW_RunCommandQueue
0000000000051310 00000000000001e0 T SW_CreateRendererForSurface
00000000000514f0 00000000000000ac t SW_CreateRenderer
00000000000515a0 00000000000000e0 t computeSourceIncrements90
0000000000051680 0000000000000290 T SDLgfx_rotozoomSurfaceSizeTrig
0000000000051910 0000000000000fb0 T SDLgfx_rotateSurface
00000000000528c0 0000000000000010 T trianglepoint_2_fixedpoint
00000000000528d0 00000000000015cc T SDL_SW_FillTriangle
0000000000053ea0 0000000000002678 T SDL_SW_BlitTriangle
0000000000056520 000000000000000c T SDL_LockSensors
0000000000056530 000000000000000c T SDL_UnlockSensors
0000000000056540 0000000000000058 T SDL_SensorInit
00000000000565a0 00000000000000c8 T SDL_SensorClose
0000000000056670 000000000000006c T SDL_SensorQuit
00000000000566e0 0000000000000118 T SDL_crc16
0000000000056800 0000000000000018 T SDL_getenv
0000000000056820 0000000000000004 t real_free
0000000000056830 0000000000000004 t real_realloc
0000000000056840 0000000000000004 t real_calloc
0000000000056850 0000000000000004 t real_malloc
0000000000056860 0000000000000044 T SDL_GetOriginalMemoryFunctions
00000000000568b0 000000000000004c T SDL_malloc
0000000000056900 000000000000005c T SDL_calloc
0000000000056960 000000000000007c T SDL_realloc
00000000000569e0 0000000000000030 T SDL_free
0000000000056a10 0000000000000004 T SDL_qsort
0000000000056a20 0000000000000004 T SDL_atan2
0000000000056a30 0000000000000004 T SDL_atan2f
0000000000056a40 0000000000000004 T SDL_acosf
0000000000056a50 0000000000000008 T SDL_ceil
0000000000056a60 0000000000000008 T SDL_ceilf
0000000000056a70 0000000000000004 T SDL_cos
0000000000056a80 0000000000000004 T SDL_cosf
0000000000056a90 0000000000000008 T SDL_fabs
0000000000056aa0 0000000000000008 T SDL_fabsf
0000000000056ab0 0000000000000008 T SDL_floor
0000000000056ac0 0000000000000008 T SDL_floorf
0000000000056ad0 0000000000000008 T SDL_truncf
0000000000056ae0 0000000000000004 T SDL_fmodf
0000000000056af0 0000000000000004 T SDL_pow
0000000000056b00 0000000000000008 T SDL_round
0000000000056b10 0000000000000004 T SDL_sin
0000000000056b20 0000000000000004 T SDL_sinf
0000000000056b30 0000000000000014 T SDL_sqrt
0000000000056b50 0000000000000014 T SDL_sqrtf
0000000000056b70 0000000000000004 T SDL_tanf
0000000000056b80 000000000000000c T SDL_abs
0000000000056b90 0000000000000018 T SDL_isdigit
0000000000056bb0 0000000000000018 T SDL_isspace
0000000000056bd0 0000000000000024 T SDL_toupper
0000000000056c00 0000000000000004 T SDL_memcpy
0000000000056c10 0000000000000004 T SDL_memset
0000000000056c20 0000000000000004 T SDL_memmove
0000000000056c30 0000000000000004 T SDL_memcmp
0000000000056c40 0000000000000004 T SDL_strlen
0000000000056c50 0000000000000004 T SDL_strlcpy
0000000000056c60 00000000000000f8 T SDL_utf8strlcpy
0000000000056d60 0000000000000028 T SDL_utf8strlen
0000000000056d90 0000000000000004 T SDL_strlcat
0000000000056da0 000000000000004c T SDL_strdup
0000000000056df0 0000000000000004 T SDL_strchr
0000000000056e00 0000000000000004 T SDL_strrchr
0000000000056e10 0000000000000004 T SDL_strstr
0000000000056e20 0000000000000004 T SDL_itoa
0000000000056e30 0000000000000004 T SDL_atoi
0000000000056e40 0000000000000004 T SDL_atof
0000000000056e50 0000000000000004 T SDL_strtol
0000000000056e60 0000000000000004 T SDL_strtoll
0000000000056e70 0000000000000004 T SDL_strtoull
0000000000056e80 0000000000000004 T SDL_strcmp
0000000000056e90 0000000000000004 T SDL_strncmp
0000000000056ea0 0000000000000004 T SDL_strcasecmp
0000000000056eb0 0000000000000004 T SDL_strncasecmp
0000000000056ec0 0000000000000024 T SDL_vsscanf
0000000000056ef0 000000000000006c T SDL_sscanf
0000000000056f60 0000000000000034 T SDL_vsnprintf
0000000000056fa0 000000000000006c T SDL_snprintf
0000000000057010 00000000000000fc T SDL_vasprintf
0000000000057110 000000000000006c T SDL_asprintf
0000000000057180 0000000000000038 t SDL_FreeErrBuf
00000000000571c0 0000000000000024 T SDL_TLSCreate
00000000000571f0 0000000000000054 T SDL_TLSGet
0000000000057250 0000000000000114 T SDL_TLSSet
0000000000057370 0000000000000090 T SDL_TLSCleanup
0000000000057400 00000000000000c4 T SDL_Generic_GetTLSData
00000000000574d0 00000000000000fc T SDL_Generic_SetTLSData
00000000000575d0 0000000000000130 T SDL_GetErrBuf
0000000000057700 0000000000000098 T SDL_RunThread
00000000000577a0 00000000000000c8 T SDL_CreateThreadWithStackSize
0000000000057870 0000000000000004 T SDL_CreateThreadInternal
0000000000057880 0000000000000004 T SDL_SetThreadPriority
0000000000057890 0000000000000048 T SDL_WaitThread
00000000000578e0 00000000000000d8 T SDL_TimerQuit
00000000000579c0 00000000000000b8 T SDL_TimerInit
0000000000057a80 0000000000000014 T SDL_GetTicks
0000000000057aa0 000000000000020c t SDL_TimerThread
0000000000057cb0 0000000000000378 t SDL_FillRect1
0000000000058030 0000000000000138 t SDL_FillRect2
0000000000058170 000000000000026c t SDL_FillRect3
00000000000583e0 0000000000000070 t SDL_FillRect4
0000000000058450 00000000000001fc T SDL_FillRects
0000000000058650 0000000000000054 T SDL_FillRect
00000000000586b0 00000000000004bc T SDL_GetPixelFormatName
0000000000058b70 00000000000001e0 T SDL_PixelFormatEnumToMasks
0000000000058d50 0000000000000580 T SDL_MasksToPixelFormatEnum
00000000000592d0 00000000000001e8 T SDL_InitFormat
00000000000594c0 0000000000000114 T SDL_AllocFormat
00000000000595e0 00000000000000b4 T SDL_AllocPalette
00000000000596a0 0000000000000060 T SDL_FreePalette
0000000000059700 00000000000000d0 T SDL_FreeFormat
00000000000597d0 00000000000000b4 T SDL_SetPixelFormatPalette
0000000000059890 0000000000000098 T SDL_DitherColors
0000000000059930 0000000000000090 T SDL_FindColor
00000000000599c0 00000000000000dc t Map1to1
0000000000059aa0 000000000000005c t MapNto1.isra.0
0000000000059b00 000000000000008c T SDL_DetectPalette
0000000000059b90 000000000000009c T SDL_MapRGB
0000000000059c30 00000000000000b0 T SDL_MapRGBA
0000000000059ce0 0000000000000104 T SDL_GetRGBA
0000000000059df0 0000000000000044 T SDL_AllocBlitMap
0000000000059e40 000000000000004c T SDL_InvalidateMap
0000000000059e90 000000000000003c T SDL_InvalidateAllBlitMap
0000000000059ed0 0000000000000600 T SDL_MapSurface
000000000005a4d0 000000000000002c T SDL_FreeBlitMap
000000000005a500 0000000000000134 T SDL_GetSpanEnclosingRect
000000000005a640 000000000000010c T SDL_IntersectRect
000000000005a750 0000000000000204 T SDL_EnclosePoints
000000000005a960 0000000000000484 T SDL_IntersectRectAndLine
000000000005adf0 00000000000000d4 T SDL_HasIntersectionF
000000000005aed0 00000000000004c8 T SDL_SoftStretch
000000000005b3a0 0000000000001fe8 T SDL_SoftStretchLinear
000000000005d390 0000000000000054 T SDL_SetSurfacePalette
000000000005d3f0 0000000000000058 T SDL_SetSurfaceRLE
000000000005d450 00000000000000e4 T SDL_SetColorKey
000000000005d540 000000000000001c T SDL_HasColorKey
000000000005d560 0000000000000044 T SDL_GetColorKey
000000000005d5b0 0000000000000084 T SDL_SetSurfaceColorMod
000000000005d640 0000000000000044 T SDL_GetSurfaceColorMod
000000000005d690 0000000000000064 T SDL_SetSurfaceAlphaMod
000000000005d700 0000000000000024 T SDL_GetSurfaceAlphaMod
000000000005d730 00000000000000f8 T SDL_SetSurfaceBlendMode
000000000005d830 000000000000008c T SDL_GetSurfaceBlendMode
000000000005d8c0 0000000000000054 T SDL_SetClipRect
000000000005d920 0000000000000018 T SDL_GetClipRect
000000000005d940 00000000000000bc T SDL_LowerBlit
000000000005da00 000000000000020c T SDL_UpperBlit
000000000005dc10 0000000000000068 T SDL_LockSurface
000000000005dc80 0000000000000030 T SDL_UnlockSurface
000000000005dcb0 000000000000039c T SDL_ConvertPixels
000000000005e050 00000000000000d8 T SDL_FreeSurface
000000000005e130 0000000000000294 T SDL_CreateRGBSurfaceWithFormat
000000000005e3d0 0000000000000084 T SDL_CreateRGBSurface
000000000005e460 00000000000001b8 T SDL_CreateRGBSurfaceFrom
000000000005e620 0000000000000164 T SDL_CreateRGBSurfaceWithFormatFrom
000000000005e790 00000000000003c4 T SDL_PrivateLowerBlitScaled
000000000005eb60 00000000000003c4 T SDL_PrivateUpperBlitScaled
000000000005ef30 0000000000000708 T SDL_ConvertSurface
000000000005ef30 0000000000000708 t SDL_ConvertSurface.localalias
000000000005f640 0000000000000084 t cmpmodes
000000000005f6d0 0000000000000358 t SDL_GetClosestDisplayModeForDisplay
000000000005fa30 000000000000000c T SDL_GetVideoDevice
000000000005fa40 0000000000000108 T SDL_AddVideoDisplay
000000000005fb50 000000000000004c T SDL_GetIndexOfDisplay
000000000005fba0 0000000000000010 T SDL_IsVideoContextExternal
000000000005fbb0 00000000000000f8 T SDL_GetDisplayBounds
000000000005fbb0 00000000000000f8 t SDL_GetDisplayBounds.localalias
000000000005fcb0 0000000000000140 t GetRectDisplayIndex
000000000005fdf0 0000000000000170 T SDL_AddDisplayMode
000000000005ff60 000000000000000c T SDL_SetCurrentDisplayMode
000000000005ff70 0000000000000140 t SDL_SetDisplayModeForDisplay
00000000000600b0 00000000000000c0 T SDL_ResetDisplayModes
0000000000060170 000000000000007c T SDL_GetDesktopDisplayMode
00000000000601f0 000000000000015c T SDL_GetWindowDisplayIndex
0000000000060350 0000000000000038 T SDL_GetDisplayForWindow
0000000000060390 0000000000000144 T SDL_GetWindowDisplayMode
00000000000604e0 0000000000000094 T SDL_ToggleDragAndDropSupport
0000000000060580 0000000000000020 T SDL_HasWindows
00000000000605a0 000000000000005c T SDL_GetWindowID
0000000000060600 0000000000000034 T SDL_GetWindowFromID
0000000000060640 000000000000005c T SDL_GetWindowFlags
00000000000606a0 00000000000000c4 T SDL_SetWindowTitle
0000000000060770 0000000000000158 T SDL_SetWindowData
00000000000608d0 0000000000000060 t SDL_DestroyWindowTexture
0000000000060930 00000000000000c4 T SDL_GetWindowData
0000000000060a00 0000000000000054 T SDL_GetWindowSize
0000000000060a60 0000000000000080 T SDL_GetWindowSizeInPixels
0000000000060ae0 00000000000000ec t SDL_UpdateWindowTexture
0000000000060bd0 0000000000000434 t SDL_CreateWindowTexture
0000000000061010 0000000000000094 T SDL_ShowWindow
00000000000610b0 000000000000005c T SDL_RaiseWindow
0000000000061110 000000000000005c T SDL_MaximizeWindow
0000000000061170 0000000000000060 T SDL_RestoreWindow
00000000000611d0 0000000000000064 T SDL_HasWindowSurface
0000000000061240 0000000000000088 T SDL_UpdateWindowSurfaceRects
00000000000612d0 000000000000008c T SDL_UpdateWindowSurface
0000000000061360 0000000000000090 T SDL_DestroyWindowSurface
00000000000613f0 0000000000000218 T SDL_GetWindowSurface
0000000000061610 0000000000000134 T SDL_UpdateWindowGrab
0000000000061750 000000000000006c T SDL_SetWindowKeyboardGrab
00000000000617c0 000000000000006c T SDL_SetWindowMouseGrab
0000000000061830 000000000000008c T SDL_SetWindowGrab
00000000000618c0 0000000000000078 T SDL_GetWindowMouseRect
0000000000061940 0000000000000070 T SDL_OnWindowResized
00000000000619b0 0000000000000354 t SDL_UpdateFullscreenMode
0000000000061d10 00000000000000b0 T SDL_HideWindow
0000000000061dc0 00000000000000a8 T SDL_MinimizeWindow
0000000000061e70 00000000000000d8 T SDL_SetWindowFullscreen
0000000000061f50 00000000000000f8 t SDL_FinishWindowCreation
0000000000062050 0000000000000008 T SDL_OnWindowHidden
0000000000062060 000000000000017c T SDL_SetWindowSize
00000000000621e0 0000000000000058 T SDL_OnWindowMoved
0000000000062240 000000000000001c T SDL_OnWindowMinimized
0000000000062260 0000000000000020 T SDL_OnWindowRestored
0000000000062280 0000000000000004 T SDL_OnWindowShown
0000000000062290 0000000000000024 T SDL_OnWindowEnter
00000000000622c0 0000000000000004 T SDL_OnWindowLeave
00000000000622d0 0000000000000088 T SDL_OnWindowFocusGained
0000000000062360 00000000000000c8 T SDL_OnWindowFocusLost
0000000000062430 000000000000002c T SDL_GetFocusWindow
0000000000062460 000000000000002c T SDL_EnableScreenSaver
0000000000062490 0000000000000030 T SDL_DisableScreenSaver
00000000000624c0 00000000000000d8 T SDL_GL_LoadLibrary
00000000000625a0 0000000000000074 T SDL_GL_GetProcAddress
0000000000062620 0000000000000044 T SDL_GL_UnloadLibrary
0000000000062670 000000000000016c T SDL_GL_ExtensionSupported
00000000000627e0 0000000000000098 T SDL_GL_ResetAttributes
0000000000062880 0000000000000180 T SDL_GL_SetAttribute
0000000000062880 0000000000000180 t SDL_GL_SetAttribute.localalias
0000000000062a00 00000000000004b0 T SDL_GL_GetAttribute
0000000000062a00 00000000000004b0 t SDL_GL_GetAttribute.localalias
0000000000062eb0 00000000000000e4 T SDL_GL_CreateContext
0000000000062fa0 0000000000000034 T SDL_GL_GetCurrentWindow
0000000000062fe0 0000000000000034 T SDL_GL_GetCurrentContext
0000000000063020 000000000000016c T SDL_GL_MakeCurrent
0000000000063190 000000000000005c T SDL_GL_GetDrawableSize
00000000000631f0 0000000000000080 T SDL_GL_SetSwapInterval
0000000000063270 000000000000004c T SDL_GL_GetSwapInterval
00000000000632c0 00000000000000b4 T SDL_GL_SwapWindowWithResult
0000000000063380 0000000000000068 T SDL_GL_DeleteContext
00000000000633f0 0000000000000090 T SDL_StartTextInput
0000000000063480 0000000000000028 T SDL_IsTextInputActive
00000000000634b0 0000000000000098 T SDL_StopTextInput
0000000000063550 0000000000000024 T SDL_HasScreenKeyboardSupport
0000000000063580 000000000000000c T SDL_GetMessageBoxCount
0000000000063590 000000000000018c T SDL_ShowMessageBox
0000000000063720 00000000000000b0 T SDL_Vulkan_LoadLibrary
00000000000637d0 0000000000000044 T SDL_Vulkan_UnloadLibrary
0000000000063820 0000000000000310 T SDL_RecreateWindow
0000000000063b30 000000000000024c T SDL_DestroyWindow
0000000000063d80 0000000000000448 T SDL_CreateWindow
00000000000641d0 0000000000000144 T SDL_VideoQuit
0000000000064320 0000000000000278 T SDL_VideoInit
00000000000645a0 00000000000001ac t SDL_ConvertPixels_SwapUVPlanes
0000000000064750 0000000000000338 t SDL_ConvertPixels_PackUVPlanes_to_NV
0000000000064a90 0000000000000340 t SDL_ConvertPixels_SplitNV_to_UVPlanes
0000000000064dd0 00000000000001e4 t GetYUVPlanes.isra.0
0000000000064fc0 000000000000000c T SDL_GetYUVConversionMode
0000000000064fd0 0000000000000034 T SDL_GetYUVConversionModeForResolution
0000000000065010 0000000000004250 t SDL_ConvertPixels_ARGB8888_to_YUV
0000000000069260 0000000000000178 T SDL_CalculateYUVSize
00000000000693e0 00000000000008c0 T SDL_ConvertPixels_YUV_to_RGB
00000000000693e0 00000000000008c0 t SDL_ConvertPixels_YUV_to_RGB.localalias
0000000000069ca0 000000000000012c T SDL_ConvertPixels_RGB_to_YUV
0000000000069dd0 00000000000025d4 T SDL_ConvertPixels_YUV_to_YUV
000000000006c3b0 0000000000000530 T yuv420_rgb565_std
000000000006c8e0 00000000000004b0 T yuv420_rgb24_std
000000000006cd90 0000000000000514 T yuv420_rgba_std
000000000006d2b0 0000000000000514 T yuv420_bgra_std
000000000006d7d0 00000000000004fc T yuv420_argb_std
000000000006dcd0 00000000000004f4 T yuv420_abgr_std
000000000006e1d0 000000000000024c T yuv422_rgb565_std
000000000006e420 000000000000021c T yuv422_rgb24_std
000000000006e640 0000000000000240 T yuv422_rgba_std
000000000006e880 0000000000000240 T yuv422_bgra_std
000000000006eac0 0000000000000234 T yuv422_argb_std
000000000006ed00 0000000000000234 T yuv422_abgr_std
000000000006ef40 0000000000000530 T yuvnv12_rgb565_std
000000000006f470 00000000000004b0 T yuvnv12_rgb24_std
000000000006f920 0000000000000514 T yuvnv12_rgba_std
000000000006fe40 0000000000000514 T yuvnv12_bgra_std
0000000000070360 00000000000004fc T yuvnv12_argb_std
0000000000070860 00000000000004f4 T yuvnv12_abgr_std
0000000000070d60 0000000000000018 t RunThread
0000000000070d80 00000000000000b0 T SDL_SYS_CreateThread
0000000000070e30 000000000000001c T SDL_SYS_SetupThread
0000000000070e50 0000000000000004 T SDL_ThreadID
0000000000070e60 0000000000000050 T SDL_SYS_SetThreadPriority
0000000000070eb0 000000000000000c T SDL_SYS_WaitThread
0000000000070ec0 0000000000000078 T SDL_CreateSemaphore
0000000000070f40 000000000000002c T SDL_DestroySemaphore
0000000000070f70 0000000000000034 T SDL_SemTryWait
0000000000070fb0 0000000000000068 T SDL_SemWait
0000000000071020 0000000000000134 T SDL_SemWaitTimeout
0000000000071160 000000000000005c T SDL_SemPost
00000000000711c0 0000000000000090 T SDL_CreateMutex
0000000000071250 000000000000002c T SDL_DestroyMutex
0000000000071280 0000000000000038 T SDL_LockMutex
00000000000712c0 0000000000000038 T SDL_UnlockMutex
0000000000071300 00000000000000b0 T SDL_SYS_GetTLSData
00000000000713b0 0000000000000044 T SDL_SYS_SetTLSData
0000000000071400 0000000000000008 T SWITCH_CreateWindowFrom
0000000000071410 0000000000000004 T SWITCH_SetWindowTitle
0000000000071420 0000000000000004 T SWITCH_SetWindowIcon
0000000000071430 00000000000001a8 t SWITCH_CreateDevice
00000000000715e0 0000000000000034 t SWITCH_Destroy
0000000000071620 000000000000009c T SWITCH_VideoInit
00000000000716c0 0000000000000040 T SWITCH_VideoQuit
0000000000071700 0000000000000060 T SWITCH_GetDisplayModes
0000000000071760 0000000000000090 T SWITCH_DestroyWindow
00000000000717f0 00000000000000a0 T SWITCH_SetDisplayMode
0000000000071890 00000000000000b8 T SWITCH_SetWindowSize
0000000000071950 0000000000000128 T SWITCH_CreateWindow
0000000000071a80 00000000000000c4 T SWITCH_PumpEvents
0000000000071b50 0000000000000004 T SWITCH_RestoreWindow
0000000000071b60 0000000000000004 T SWITCH_SetWindowPosition
0000000000071b70 0000000000000004 T SWITCH_ShowWindow
0000000000071b80 0000000000000004 T SWITCH_HideWindow
0000000000071b90 0000000000000004 T SWITCH_RaiseWindow
0000000000071ba0 0000000000000004 T SWITCH_MaximizeWindow
0000000000071bb0 0000000000000004 T SWITCH_MinimizeWindow
0000000000071bc0 0000000000000004 t SWITCHAUDIO_WaitDevice
0000000000071bd0 000000000000000c t SWITCHAUDIO_GetDeviceBuf
0000000000071be0 0000000000000054 t SWITCHAUDIO_Init
0000000000071c40 0000000000000060 t SWITCHAUDIO_CloseDevice
0000000000071ca0 000000000000017c t SWITCHAUDIO_PlayDevice
0000000000071e20 00000000000002ec t SWITCHAUDIO_OpenDevice
0000000000072110 0000000000000004 t SWITCHAUDIO_ThreadInit
0000000000072120 0000000000000008 t SWITCH_JoystickGetCount
0000000000072130 0000000000000004 t SWITCH_JoystickDetect
0000000000072140 000000000000000c t SWITCH_JoystickGetDeviceName
0000000000072150 0000000000000008 t SWITCH_JoystickGetDevicePath
0000000000072160 0000000000000008 t SWITCH_JoystickGetDevicePlayerIndex
0000000000072170 0000000000000004 t SWITCH_JoystickSetDevicePlayerIndex
0000000000072180 0000000000000004 t SWITCH_JoystickGetDeviceInstanceID
0000000000072190 0000000000000024 t SWITCH_JoystickOpen
00000000000721c0 0000000000000008 t SWITCH_JoystickGetCapabilities
00000000000721d0 0000000000000008 t SWITCH_JoystickSetLED
00000000000721e0 0000000000000004 t SWITCH_JoystickClose
00000000000721f0 0000000000000008 t SWITCH_JoystickGetGamepadMapping
0000000000072200 0000000000000184 t SWITCH_UpdateControllerSupport
0000000000072390 000000000000025c t SWITCH_JoystickUpdate
00000000000725f0 0000000000000008 t SWITCH_JoystickSetSensorsEnabled
0000000000072600 0000000000000008 t SWITCH_JoystickSendEffect
0000000000072610 0000000000000008 t SWITCH_JoystickRumbleTriggers
0000000000072620 00000000000000c0 t SWITCH_JoystickRumble
00000000000726e0 000000000000000c t SWITCH_JoystickGetDeviceGUID
00000000000726f0 0000000000000158 t SWITCH_JoystickInit
0000000000072850 0000000000000004 t SWITCH_JoystickQuit
0000000000072860 000000000000000c T SDL_TicksQuit
0000000000072870 0000000000000008 T SDL_GetPerformanceCounter
0000000000072880 0000000000000038 T SDL_TicksInit
00000000000728c0 0000000000000008 T SDL_GetPerformanceFrequency
00000000000728d0 0000000000000054 T SDL_GetTicks64
0000000000072930 0000000000000010 T SDL_Delay
0000000000072940 0000000000000008 t VIRTUAL_JoystickInit
0000000000072950 0000000000000004 t VIRTUAL_JoystickDetect
0000000000072960 0000000000000008 t VIRTUAL_JoystickGetDevicePath
0000000000072970 0000000000000008 t VIRTUAL_JoystickGetDevicePlayerIndex
0000000000072980 0000000000000ae0 t VIRTUAL_JoystickGetGamepadMapping
0000000000073460 0000000000000050 t VIRTUAL_JoystickGetDeviceInstanceID
00000000000734b0 0000000000000064 t VIRTUAL_JoystickSetDevicePlayerIndex
0000000000073520 000000000000004c t VIRTUAL_JoystickGetDeviceName
0000000000073570 0000000000000030 t VIRTUAL_JoystickClose
00000000000735a0 0000000000000064 t VIRTUAL_JoystickGetCapabilities
0000000000073610 0000000000000034 t VIRTUAL_JoystickGetCount
0000000000073650 0000000000000008 t VIRTUAL_JoystickSetSensorsEnabled
0000000000073660 00000000000000c8 t VIRTUAL_FreeHWData
0000000000073730 0000000000000038 t VIRTUAL_JoystickQuit
0000000000073770 00000000000000d4 t VIRTUAL_JoystickUpdate
0000000000073850 0000000000000084 t VIRTUAL_JoystickOpen
00000000000738e0 0000000000000084 t VIRTUAL_JoystickSetLED
0000000000073970 0000000000000058 t VIRTUAL_JoystickGetDeviceGUID
00000000000739d0 000000000000007c t VIRTUAL_JoystickRumble
0000000000073a50 000000000000007c t VIRTUAL_JoystickRumbleTriggers
0000000000073ad0 000000000000007c t VIRTUAL_JoystickSendEffect
0000000000073b50 0000000000000008 T SDL_SYS_HapticInit
0000000000073b60 0000000000000004 T SDL_SYS_HapticClose
0000000000073b70 0000000000000004 T SDL_SYS_HapticQuit
0000000000073b80 000000000000000c T SDL_SYS_HapticDestroyEffect
0000000000073b90 0000000000000008 t SDL_DUMMY_SensorInit
0000000000073ba0 0000000000000004 t SDL_DUMMY_SensorDetect
0000000000073bb0 0000000000000008 t SDL_DUMMY_SensorGetDeviceName
0000000000073bc0 0000000000000008 t SDL_DUMMY_SensorGetDeviceType
0000000000073bd0 0000000000000008 t SDL_DUMMY_SensorGetDeviceNonPortableType
0000000000073be0 0000000000000004 t SDL_DUMMY_SensorUpdate
0000000000073bf0 0000000000000008 t SDL_DUMMY_SensorOpen
0000000000073c00 0000000000000004 t SDL_DUMMY_SensorClose
0000000000073c10 0000000000000008 t SDL_DUMMY_SensorGetDeviceInstanceID
0000000000073c20 0000000000000008 t SDL_DUMMY_SensorGetCount
0000000000073c30 0000000000000004 t SDL_DUMMY_SensorQuit
0000000000073c40 00000000000000bc T SDL_NewDataQueue
0000000000073d00 0000000000000064 T SDL_FreeDataQueue
0000000000073d70 00000000000000bc T SDL_ClearDataQueue
0000000000073e30 000000000000018c T SDL_WriteToDataQueue
0000000000073fc0 00000000000000fc T SDL_ReadFromDataQueue
00000000000740c0 000000000000003c T SDL_CountDataQueue
0000000000074100 0000000000000130 T SDL_GUIDFromString
0000000000074230 0000000000000054 T SDL_ListAdd
0000000000074290 0000000000000034 T SDL_ListRemove
00000000000742d0 0000000000000030 T SDL_powerof2
0000000000074300 0000000000000020 T SDL_AtomicCAS
0000000000074320 0000000000000018 T SDL_AtomicSet
0000000000074340 000000000000001c T SDL_AtomicAdd
0000000000074360 0000000000000008 T SDL_AtomicGet
0000000000074370 00000000000000b0 T SDL_SendDisplayEvent
0000000000074420 0000000000001548 t SDL_BlendFillRect_RGB555
0000000000075970 0000000000001528 t SDL_BlendFillRect_RGB565
0000000000076ea0 0000000000001030 t SDL_BlendFillRect_RGB888
0000000000077ed0 000000000000120c t SDL_BlendFillRect_ARGB8888
00000000000790e0 0000000000003f00 t SDL_BlendFillRect_RGB
000000000007cfe0 000000000000253c t SDL_BlendFillRect_RGBA
000000000007f520 00000000000001e8 T SDL_BlendFillRects
000000000007f710 0000000000002248 t SDL_BlendLine_RGB2
0000000000081960 0000000000001584 t SDL_BlendLine_RGB555
0000000000082ef0 0000000000001574 t SDL_BlendLine_RGB565
0000000000084470 00000000000021a8 t SDL_BlendLine_RGB4
0000000000086620 00000000000025bc t SDL_BlendLine_RGBA4
0000000000088be0 00000000000023d0 t SDL_BlendLine_RGB888
000000000008afb0 0000000000002b7c t SDL_BlendLine_ARGB8888
000000000008db30 000000000000025c T SDL_BlendLines
000000000008dd90 0000000000000294 t SDL_BlendPoint_RGB555
000000000008e030 0000000000000290 t SDL_BlendPoint_RGB565
000000000008e2c0 00000000000001fc t SDL_BlendPoint_RGB888
000000000008e4c0 0000000000000238 t SDL_BlendPoint_ARGB8888
000000000008e700 0000000000000758 t SDL_BlendPoint_RGB
000000000008ee60 00000000000004a8 t SDL_BlendPoint_RGBA
000000000008f310 0000000000000128 T SDL_BlendPoint
000000000008f440 0000000000000204 T SDL_BlendPoints
000000000008f650 000000000000056c t SDL_DrawLine4
000000000008fbc0 00000000000005ac t SDL_DrawLine2
0000000000090170 0000000000000288 t SDL_DrawLine1
0000000000090400 00000000000001e4 T SDL_DrawLines
00000000000905f0 00000000000000f0 T SDL_DrawPoint
00000000000906e0 0000000000000118 T SDL_DrawPoints
0000000000090800 00000000000000c4 t copy_opaque_16
00000000000908d0 00000000000000e0 t uncopy_opaque_16
00000000000909b0 00000000000005f8 t copy_transl_565
0000000000090fb0 00000000000005f8 t copy_transl_555
00000000000915b0 00000000000000e0 t uncopy_transl_16
0000000000091690 000000000000050c t copy_32
0000000000091ba0 00000000000000d4 t uncopy_32
0000000000091c80 0000000000000008 t getpix_8
0000000000091c90 0000000000000008 t getpix_16
0000000000091ca0 0000000000000010 t getpix_24
0000000000091cb0 0000000000000008 t getpix_32
0000000000091cc0 0000000000001720 t SDL_RLEAlphaBlit
00000000000933e0 0000000000003c18 t SDL_RLEBlit
0000000000097000 000000000000027c T SDL_UnRLESurface
0000000000097280 0000000000000f34 T SDL_RLESurface
00000000000981c0 0000000000000268 t SDL_SoftBlit
0000000000098430 00000000000003b0 T SDL_CalculateBlit
00000000000987e0 0000000000000308 t BlitBto1
0000000000098af0 00000000000001ac t BlitBto2
0000000000098ca0 0000000000000184 t BlitBto3
0000000000098e30 00000000000001b4 t BlitBto4
0000000000098ff0 0000000000000240 t BlitBto1Key
0000000000099230 0000000000000164 t BlitBto2Key
00000000000993a0 0000000000000160 t BlitBto4Key
0000000000099500 0000000000000dc4 t BlitBtoNAlpha
000000000009a2d0 0000000000000e48 t BlitBtoNAlphaKey
000000000009b120 00000000000000d0 t Blit4bto4
000000000009b1f0 00000000000000ac t Blit4bto4Key
000000000009b2a0 00000000000001b8 t BlitBto3Key
000000000009b460 00000000000000f4 T SDL_CalculateBlit0
000000000009b560 00000000000001dc t Blit1to1
000000000009b740 00000000000001f4 t Blit1to2
000000000009b940 00000000000003cc t Blit1to3
000000000009bd10 0000000000000214 t Blit1to4
000000000009bf30 00000000000004cc t Blit1to1Key
000000000009c400 00000000000002f8 t Blit1to2Key
000000000009c700 0000000000000474 t Blit1to3Key
000000000009cb80 00000000000002c4 t Blit1to4Key
000000000009ce50 0000000000001b50 t Blit1toNAlpha
000000000009e9a0 0000000000003a4c t Blit1toNAlphaKey
00000000000a23f0 00000000000000b8 T SDL_CalculateBlit1
00000000000a24b0 0000000000000df8 t BlitNto1SurfaceAlpha
00000000000a32b0 0000000000000fd0 t BlitNto1PixelAlpha
00000000000a4280 0000000000001c98 t BlitNto1SurfaceAlphaKey
00000000000a5f20 000000000000056c t BlitRGBtoRGBSurfaceAlpha
00000000000a6490 000000000000045c t BlitRGBtoRGBPixelAlpha
00000000000a68f0 00000000000004d8 t BlitRGBtoBGRPixelAlpha
00000000000a6dd0 0000000000000330 t Blit16to16SurfaceAlpha128
00000000000a7100 00000000000002ac t Blit565to565SurfaceAlpha
00000000000a73b0 00000000000002ac t Blit555to555SurfaceAlpha
00000000000a7660 000000000000050c t BlitARGBto565PixelAlpha
00000000000a7b70 000000000000050c t BlitARGBto555PixelAlpha
00000000000a8080 00000000000021ac t BlitNtoNSurfaceAlpha
00000000000aa230 00000000000020ac t BlitNtoNSurfaceAlphaKey
00000000000ac2e0 0000000000002644 t BlitNtoNPixelAlpha
00000000000ae930 00000000000002f4 T SDL_CalculateBlitA
00000000000aec30 00000000000006c8 t Blit_RGB888_index8
00000000000af300 00000000000006c8 t Blit_RGB101010_index8
00000000000af9d0 000000000000034c t Blit_RGB888_RGB555
00000000000afd20 000000000000034c t Blit_RGB888_RGB565
00000000000b0070 00000000000003c8 t Blit_RGB565_32
00000000000b0440 000000000000000c t Blit_RGB565_ARGB8888
00000000000b0450 000000000000000c t Blit_RGB565_ABGR8888
00000000000b0460 000000000000000c t Blit_RGB565_RGBA8888
00000000000b0470 000000000000000c t Blit_RGB565_BGRA8888
00000000000b0480 00000000000001f4 t Blit_RGB555_ARGB1555
00000000000b0680 0000000000001f10 t BlitNto1
00000000000b2590 00000000000003d8 t Blit4to4MaskAlpha
00000000000b2970 0000000000000164 t get_permutation
00000000000b2ae0 0000000000002c4c t BlitNtoN
00000000000b5730 0000000000000b4c t BlitNtoNCopyAlpha
00000000000b6280 0000000000002588 t BlitNto1Key
00000000000b8810 00000000000002c4 t Blit2to2Key
00000000000b8ae0 0000000000003d8c t BlitNtoNKey
00000000000bc870 0000000000003528 t BlitNtoNKeyCopyAlpha
00000000000bfda0 0000000000000f38 t Blit2101010toN
00000000000c0ce0 0000000000001760 t BlitNto2101010
00000000000c2440 000000000000073c t Blit_3or4_to_3or4__same_rgb
00000000000c2b80 0000000000000b38 t Blit_3or4_to_3or4__inversed_rgb
00000000000c36c0 000000000000034c T SDL_CalculateBlitN
00000000000c3a10 00000000000000c8 t SDL_Blit_RGB888_RGB888_Scale
00000000000c3ae0 00000000000006a4 t SDL_Blit_RGB888_RGB888_Blend
00000000000c4190 0000000000000228 t SDL_Blit_RGB888_RGB888_Blend_Scale
00000000000c43c0 000000000000042c t SDL_Blit_RGB888_RGB888_Modulate
00000000000c47f0 0000000000000198 t SDL_Blit_RGB888_RGB888_Modulate_Scale
00000000000c4990 00000000000007fc t SDL_Blit_RGB888_RGB888_Modulate_Blend
00000000000c5190 0000000000000514 t SDL_Blit_RGB888_RGB888_Modulate_Blend_Scale
00000000000c56b0 00000000000000dc t SDL_Blit_RGB888_BGR888_Scale
00000000000c5790 00000000000006e4 t SDL_Blit_RGB888_BGR888_Blend
00000000000c5e80 0000000000000230 t SDL_Blit_RGB888_BGR888_Blend_Scale
00000000000c60b0 0000000000000464 t SDL_Blit_RGB888_BGR888_Modulate
00000000000c6520 00000000000001a0 t SDL_Blit_RGB888_BGR888_Modulate_Scale
00000000000c66c0 00000000000007f8 t SDL_Blit_RGB888_BGR888_Modulate_Blend
00000000000c6ec0 0000000000000520 t SDL_Blit_RGB888_BGR888_Modulate_Blend_Scale
00000000000c73e0 00000000000000cc t SDL_Blit_RGB888_ARGB8888_Scale
00000000000c74b0 00000000000006f4 t SDL_Blit_RGB888_ARGB8888_Blend
00000000000c7bb0 0000000000000274 t SDL_Blit_RGB888_ARGB8888_Blend_Scale
00000000000c7e30 0000000000000474 t SDL_Blit_RGB888_ARGB8888_Modulate
00000000000c82b0 00000000000001ac t SDL_Blit_RGB888_ARGB8888_Modulate_Scale
00000000000c8460 00000000000008ac t SDL_Blit_RGB888_ARGB8888_Modulate_Blend
00000000000c8d10 0000000000000564 t SDL_Blit_RGB888_ARGB8888_Modulate_Blend_Scale
00000000000c9280 0000000000000004 t SDL_Blit_BGR888_RGB888_Scale
00000000000c9290 00000000000006e4 t SDL_Blit_BGR888_RGB888_Blend
00000000000c9980 0000000000000230 t SDL_Blit_BGR888_RGB888_Blend_Scale
00000000000c9bb0 0000000000000464 t SDL_Blit_BGR888_RGB888_Modulate
00000000000ca020 00000000000001a0 t SDL_Blit_BGR888_RGB888_Modulate_Scale
00000000000ca1c0 0000000000000804 t SDL_Blit_BGR888_RGB888_Modulate_Blend
00000000000ca9d0 0000000000000514 t SDL_Blit_BGR888_RGB888_Modulate_Blend_Scale
00000000000caef0 00000000000006a4 t SDL_Blit_BGR888_BGR888_Blend
00000000000cb5a0 0000000000000228 t SDL_Blit_BGR888_BGR888_Blend_Scale
00000000000cb7d0 000000000000042c t SDL_Blit_BGR888_BGR888_Modulate
00000000000cbc00 0000000000000198 t SDL_Blit_BGR888_BGR888_Modulate_Scale
00000000000cbda0 00000000000007f0 t SDL_Blit_BGR888_BGR888_Modulate_Blend
00000000000cc590 0000000000000518 t SDL_Blit_BGR888_BGR888_Modulate_Blend_Scale
00000000000ccab0 00000000000000e0 t SDL_Blit_BGR888_ARGB8888_Scale
00000000000ccb90 0000000000000734 t SDL_Blit_BGR888_ARGB8888_Blend
00000000000cd2d0 0000000000000278 t SDL_Blit_BGR888_ARGB8888_Blend_Scale
00000000000cd550 00000000000004a4 t SDL_Blit_BGR888_ARGB8888_Modulate
00000000000cda00 00000000000001bc t SDL_Blit_BGR888_ARGB8888_Modulate_Scale
00000000000cdbc0 00000000000008ac t SDL_Blit_BGR888_ARGB8888_Modulate_Blend
00000000000ce470 0000000000000564 t SDL_Blit_BGR888_ARGB8888_Modulate_Blend_Scale
00000000000ce9e0 00000000000000cc t SDL_Blit_ARGB8888_RGB888_Scale
00000000000ceab0 00000000000009e8 t SDL_Blit_ARGB8888_RGB888_Blend
00000000000cf4a0 0000000000000424 t SDL_Blit_ARGB8888_RGB888_Blend_Scale
00000000000cf8d0 0000000000000004 t SDL_Blit_ARGB8888_RGB888_Modulate
00000000000cf8e0 0000000000000004 t SDL_Blit_ARGB8888_RGB888_Modulate_Scale
00000000000cf8f0 000000000000096c t SDL_Blit_ARGB8888_RGB888_Modulate_Blend
00000000000d0260 00000000000005cc t SDL_Blit_ARGB8888_RGB888_Modulate_Blend_Scale
00000000000d0830 0000000000000004 t SDL_Blit_ARGB8888_BGR888_Scale
00000000000d0840 00000000000009e8 t SDL_Blit_ARGB8888_BGR888_Blend
00000000000d1230 0000000000000430 t SDL_Blit_ARGB8888_BGR888_Blend_Scale
00000000000d1660 0000000000000004 t SDL_Blit_ARGB8888_BGR888_Modulate
00000000000d1670 0000000000000004 t SDL_Blit_ARGB8888_BGR888_Modulate_Scale
00000000000d1680 000000000000096c t SDL_Blit_ARGB8888_BGR888_Modulate_Blend
00000000000d1ff0 00000000000005c8 t SDL_Blit_ARGB8888_BGR888_Modulate_Blend_Scale
00000000000d25c0 0000000000000a58 t SDL_Blit_ARGB8888_ARGB8888_Blend
00000000000d3020 0000000000000414 t SDL_Blit_ARGB8888_ARGB8888_Blend_Scale
00000000000d3440 00000000000006ec t SDL_Blit_ARGB8888_ARGB8888_Modulate
00000000000d3b30 00000000000002c0 t SDL_Blit_ARGB8888_ARGB8888_Modulate_Scale
00000000000d3df0 0000000000000a10 t SDL_Blit_ARGB8888_ARGB8888_Modulate_Blend
00000000000d4800 0000000000000538 t SDL_Blit_ARGB8888_ARGB8888_Modulate_Blend_Scale
00000000000d4d40 00000000000000cc t SDL_Blit_RGBA8888_RGB888_Scale
00000000000d4e10 00000000000009e0 t SDL_Blit_RGBA8888_RGB888_Blend
00000000000d57f0 0000000000000424 t SDL_Blit_RGBA8888_RGB888_Blend_Scale
00000000000d5c20 0000000000000424 t SDL_Blit_RGBA8888_RGB888_Modulate
00000000000d6050 0000000000000190 t SDL_Blit_RGBA8888_RGB888_Modulate_Scale
00000000000d61e0 000000000000096c t SDL_Blit_RGBA8888_RGB888_Modulate_Blend
00000000000d6b50 00000000000005cc t SDL_Blit_RGBA8888_RGB888_Modulate_Blend_Scale
00000000000d7120 00000000000000dc t SDL_Blit_RGBA8888_BGR888_Scale
00000000000d7200 00000000000009e0 t SDL_Blit_RGBA8888_BGR888_Blend
00000000000d7be0 0000000000000430 t SDL_Blit_RGBA8888_BGR888_Blend_Scale
00000000000d8010 000000000000046c t SDL_Blit_RGBA8888_BGR888_Modulate
00000000000d8480 00000000000001a8 t SDL_Blit_RGBA8888_BGR888_Modulate_Scale
00000000000d8630 000000000000096c t SDL_Blit_RGBA8888_BGR888_Modulate_Blend
00000000000d8fa0 00000000000005c8 t SDL_Blit_RGBA8888_BGR888_Modulate_Blend_Scale
00000000000d9570 00000000000000cc t SDL_Blit_RGBA8888_ARGB8888_Scale
00000000000d9640 0000000000000a58 t SDL_Blit_RGBA8888_ARGB8888_Blend
00000000000da0a0 0000000000000414 t SDL_Blit_RGBA8888_ARGB8888_Blend_Scale
00000000000da4c0 000000000000075c t SDL_Blit_RGBA8888_ARGB8888_Modulate
00000000000dac20 00000000000002d8 t SDL_Blit_RGBA8888_ARGB8888_Modulate_Scale
00000000000daf00 0000000000000a10 t SDL_Blit_RGBA8888_ARGB8888_Modulate_Blend
00000000000db910 0000000000000538 t SDL_Blit_RGBA8888_ARGB8888_Modulate_Blend_Scale
00000000000dbe50 0000000000000004 t SDL_Blit_ABGR8888_RGB888_Scale
00000000000dbe60 00000000000009e8 t SDL_Blit_ABGR8888_RGB888_Blend
00000000000dc850 000000000000042c t SDL_Blit_ABGR8888_RGB888_Blend_Scale
00000000000dcc80 0000000000000004 t SDL_Blit_ABGR8888_RGB888_Modulate
00000000000dcc90 0000000000000004 t SDL_Blit_ABGR8888_RGB888_Modulate_Scale
00000000000dcca0 000000000000096c t SDL_Blit_ABGR8888_RGB888_Modulate_Blend
00000000000dd610 00000000000005cc t SDL_Blit_ABGR8888_RGB888_Modulate_Blend_Scale
00000000000ddbe0 0000000000000004 t SDL_Blit_ABGR8888_BGR888_Scale
00000000000ddbf0 00000000000009e8 t SDL_Blit_ABGR8888_BGR888_Blend
00000000000de5e0 0000000000000430 t SDL_Blit_ABGR8888_BGR888_Blend_Scale
00000000000dea10 0000000000000004 t SDL_Blit_ABGR8888_BGR888_Modulate
00000000000dea20 0000000000000004 t SDL_Blit_ABGR8888_BGR888_Modulate_Scale
00000000000dea30 000000000000096c t SDL_Blit_ABGR8888_BGR888_Modulate_Blend
00000000000df3a0 00000000000005c8 t SDL_Blit_ABGR8888_BGR888_Modulate_Blend_Scale
00000000000df970 00000000000000dc t SDL_Blit_ABGR8888_ARGB8888_Scale
00000000000dfa50 0000000000000a50 t SDL_Blit_ABGR8888_ARGB8888_Blend
00000000000e04a0 0000000000000414 t SDL_Blit_ABGR8888_ARGB8888_Blend_Scale
00000000000e08c0 000000000000079c t SDL_Blit_ABGR8888_ARGB8888_Modulate
00000000000e1060 00000000000002e8 t SDL_Blit_ABGR8888_ARGB8888_Modulate_Scale
00000000000e1350 0000000000000a10 t SDL_Blit_ABGR8888_ARGB8888_Modulate_Blend
00000000000e1d60 0000000000000538 t SDL_Blit_ABGR8888_ARGB8888_Modulate_Blend_Scale
00000000000e22a0 0000000000000004 t SDL_Blit_BGRA8888_RGB888_Scale
00000000000e22b0 00000000000009e0 t SDL_Blit_BGRA8888_RGB888_Blend
00000000000e2c90 000000000000042c t SDL_Blit_BGRA8888_RGB888_Blend_Scale
00000000000e30c0 000000000000046c t SDL_Blit_BGRA8888_RGB888_Modulate
00000000000e3530 00000000000001a8 t SDL_Blit_BGRA8888_RGB888_Modulate_Scale
00000000000e36e0 000000000000096c t SDL_Blit_BGRA8888_RGB888_Modulate_Blend
00000000000e4050 00000000000005cc t SDL_Blit_BGRA8888_RGB888_Modulate_Blend_Scale
00000000000e4620 0000000000000004 t SDL_Blit_BGRA8888_BGR888_Scale
00000000000e4630 00000000000009e8 t SDL_Blit_BGRA8888_BGR888_Blend
00000000000e5020 0000000000000430 t SDL_Blit_BGRA8888_BGR888_Blend_Scale
00000000000e5450 0000000000000424 t SDL_Blit_BGRA8888_BGR888_Modulate
00000000000e5880 0000000000000190 t SDL_Blit_BGRA8888_BGR888_Modulate_Scale
00000000000e5a10 000000000000096c t SDL_Blit_BGRA8888_BGR888_Modulate_Blend
00000000000e6380 00000000000005c8 t SDL_Blit_BGRA8888_BGR888_Modulate_Blend_Scale
00000000000e6950 00000000000000cc t SDL_Blit_BGRA8888_ARGB8888_Scale
00000000000e6a20 0000000000000a50 t SDL_Blit_BGRA8888_ARGB8888_Blend
00000000000e7470 0000000000000414 t SDL_Blit_BGRA8888_ARGB8888_Blend_Scale
00000000000e7890 00000000000007bc t SDL_Blit_BGRA8888_ARGB8888_Modulate
00000000000e8050 00000000000002ec t SDL_Blit_BGRA8888_ARGB8888_Modulate_Scale
00000000000e8340 0000000000000a10 t SDL_Blit_BGRA8888_ARGB8888_Modulate_Blend
00000000000e8d50 0000000000000538 t SDL_Blit_BGRA8888_ARGB8888_Modulate_Blend_Scale
00000000000e9290 00000000000000c8 t SDL_Blit_ARGB8888_ARGB8888_Scale
00000000000e9360 00000000000000c8 t SDL_Blit_BGR888_BGR888_Scale
00000000000e9430 0000000000000160 T SDL_BlitCopy
00000000000e9590 0000000000001450 T SDL_Blit_Slow
00000000000ea9e0 0000000000000090 t SDL_EGL_GetVersion
00000000000eaa70 0000000000000134 T SDL_EGL_SetErrorEx
00000000000eabb0 0000000000000134 T SDL_EGL_HasExtension
00000000000eacf0 0000000000000548 t SDL_EGL_PrivateChooseConfig
00000000000eb240 00000000000000b0 T SDL_EGL_GetProcAddress
00000000000eb2f0 0000000000000080 T SDL_EGL_UnloadLibrary
00000000000eb370 0000000000000284 T SDL_EGL_LoadLibraryOnly
00000000000eb600 0000000000000168 T SDL_EGL_LoadLibrary
00000000000eb770 000000000000008c T SDL_EGL_ChooseConfig
00000000000eb800 0000000000000104 T SDL_EGL_MakeCurrent
00000000000eb910 0000000000000094 T SDL_EGL_SetSwapInterval
00000000000eb9b0 0000000000000030 T SDL_EGL_GetSwapInterval
00000000000eb9e0 0000000000000060 T SDL_EGL_SwapBuffers
00000000000eba40 0000000000000024 T SDL_EGL_DeleteContext
00000000000eba70 00000000000003bc T SDL_EGL_CreateContext
00000000000ebe30 0000000000000160 T SDL_EGL_CreateSurface
00000000000ebf90 0000000000000024 T SDL_EGL_DestroySurface
00000000000ebfc0 0000000000000004 T SWITCH_InitKeyboard
00000000000ebfd0 00000000000000c4 T SWITCH_PollKeyboard
00000000000ec0a0 0000000000000004 T SWITCH_QuitKeyboard
00000000000ec0b0 0000000000000008 t SWITCH_SetRelativeMouseMode
00000000000ec0c0 0000000000000020 T SWITCH_InitMouse
00000000000ec0e0 0000000000000154 T SWITCH_PollMouse
00000000000ec240 0000000000000004 T SWITCH_QuitMouse
00000000000ec250 0000000000000018 T SWITCH_GLES_DefaultProfileConfig
00000000000ec270 000000000000000c T SWITCH_GLES_LoadLibrary
00000000000ec280 000000000000000c T SWITCH_GLES_CreateContext
00000000000ec290 0000000000000010 T SWITCH_GLES_MakeCurrent
00000000000ec2a0 000000000000000c T SWITCH_GLES_SwapWindow
00000000000ec2b0 0000000000000004 t SWITCH_CancelCb
00000000000ec2c0 0000000000000030 t SWITCH_EnterCb
00000000000ec2f0 0000000000000004 T SWITCH_InitSwkb
00000000000ec300 000000000000004c T SWITCH_PollSwkb
00000000000ec350 0000000000000040 T SWITCH_QuitSwkb
00000000000ec390 0000000000000008 T SWITCH_HasScreenKeyboardSupport
00000000000ec3a0 000000000000000c T SWITCH_IsScreenKeyboardShown
00000000000ec3b0 0000000000000100 T SWITCH_StartTextInput
00000000000ec4b0 000000000000003c T SWITCH_StopTextInput
00000000000ec4f0 0000000000000064 T SWITCH_InitTouch
00000000000ec560 0000000000000004 T SWITCH_QuitTouch
00000000000ec570 0000000000000524 T SWITCH_PollTouch
00000000000ecaa0 0000000000000028 T SDL_LoadFunction
00000000000ecad0 0000000000000004 T SDL_UnloadObject
00000000000ecae0 000000000000009c t op_granpos_add
00000000000ecb80 0000000000000148 t op_get_next_page
00000000000eccd0 00000000000002e4 t op_fetch_headers_impl
00000000000ecfc0 000000000000009c t op_fetch_headers
00000000000ed060 0000000000000054 t op_get_packet_duration
00000000000ed0c0 00000000000000e8 t op_collect_audio_packets
00000000000ed1b0 00000000000000d8 t op_clear
00000000000ed290 0000000000000080 t op_seek_helper
00000000000ed310 00000000000000ac t op_decode
00000000000ed3c0 0000000000000078 t op_rescale64.part.0
00000000000ed440 0000000000000084 t op_granpos_diff
00000000000ed4d0 0000000000000268 t op_find_initial_pcm_offset
00000000000ed740 0000000000000278 t op_find_final_pcm_offset
00000000000ed9c0 00000000000000d8 t op_update_gain.part.7
00000000000edaa0 000000000000011c t op_make_decode_ready.part.8
00000000000edbc0 0000000000000660 t op_fetch_and_process_page
00000000000ee220 0000000000000340 t op_read_native.part.9
00000000000ee560 0000000000000a0c t op_open_seekable2
00000000000eef70 0000000000000074 t op_open2
00000000000eeff0 0000000000000268 T op_test_callbacks
00000000000ef260 000000000000004c T op_open_callbacks
00000000000ef2b0 000000000000002c T op_free
00000000000ef2e0 0000000000000008 T op_seekable
00000000000ef2f0 0000000000000040 T op_head
00000000000ef330 0000000000000cf8 T op_pcm_seek
00000000000f0030 0000000000000018 T op_read
00000000000f0050 0000000000000058 t op_strdup_with_len
00000000000f00b0 00000000000000d4 t op_tags_ensure_capacity
00000000000f0190 0000000000000280 t opus_tags_parse_impl
00000000000f0410 00000000000001b0 T opus_head_parse
00000000000f05c0 000000000000000c T opus_tags_init
00000000000f05d0 0000000000000078 T opus_tags_clear
00000000000f0650 000000000000009c T opus_tags_parse
00000000000f06f0 000000000000003c T opus_tagncompare
00000000000f0730 0000000000000128 t opus_tags_get_gain.isra.0.constprop.1
00000000000f0860 0000000000000018 T opus_tags_get_album_gain
00000000000f0880 0000000000000018 T opus_tags_get_track_gain
00000000000f08a0 000000000000005c t op_strncasecmp
00000000000f0900 0000000000000328 T opus_pcm_soft_clip
00000000000f0c30 000000000000009c T opus_packet_get_samples_per_frame
00000000000f0cd0 0000000000000438 t opus_packet_parse_impl
00000000000f1110 0000000000000084 t smooth_fade
00000000000f11a0 0000000000000cd4 t opus_decode_frame
00000000000f1e80 000000000000006c T opus_decoder_get_size
00000000000f1ef0 0000000000000124 T opus_decoder_init
00000000000f2020 000000000000020c T opus_decoder_ctl
00000000000f2230 0000000000000044 T opus_packet_get_bandwidth
00000000000f2280 0000000000000010 T opus_packet_get_nb_channels
00000000000f2290 00000000000005e4 t opus_decode_native
00000000000f2880 000000000000004c T opus_packet_get_nb_frames
00000000000f28d0 0000000000000060 T opus_packet_get_nb_samples
00000000000f2930 00000000000000f8 t opus_copy_channel_out_short
00000000000f2a30 0000000000000074 T opus_multistream_decoder_get_size
00000000000f2ab0 0000000000000160 T opus_multistream_decoder_init
00000000000f2c10 0000000000000130 T opus_multistream_decoder_create
00000000000f2d40 0000000000000394 t opus_multistream_decoder_ctl_va_list
00000000000f30e0 0000000000000078 T opus_multistream_decoder_ctl
00000000000f3160 000000000000048c t opus_multistream_decode_native
00000000000f35f0 0000000000000034 T opus_multistream_decode
00000000000f3630 0000000000000004 T opus_multistream_decoder_destroy
00000000000f3640 0000000000000038 t celt_fatal
00000000000f3680 0000000000000088 t resampling_factor
00000000000f3710 0000000000000234 t comb_filter
00000000000f3950 0000000000000068 t init_caps
00000000000f39c0 00000000000001c8 t deemphasis
00000000000f3b90 000000000000042c t celt_synthesis
00000000000f3fc0 00000000000009a0 t celt_decode_lost
00000000000f4960 00000000000002ec t validate_celt_decoder
00000000000f4c50 0000000000000060 t celt_decoder_get_size
00000000000f4cb0 0000000000001088 t celt_decode_with_ec
00000000000f5d40 00000000000002f8 t opus_custom_decoder_ctl
00000000000f6040 00000000000000f0 t celt_decoder_init
00000000000f6130 000000000000004c t ec_tell_frac
00000000000f6180 000000000000007c t ec_dec_normalize
00000000000f6200 0000000000000060 t ec_dec_init
00000000000f6260 000000000000002c t ec_decode
00000000000f6290 0000000000000034 t ec_decode_bin
00000000000f62d0 0000000000000044 t ec_dec_update
00000000000f6320 0000000000000044 t ec_dec_bit_logp
00000000000f6370 0000000000000058 t ec_dec_icdf
00000000000f63d0 0000000000000074 t ec_dec_bits
00000000000f6450 0000000000000110 t ec_dec_uint
00000000000f6560 000000000000021c t clt_mdct_backward_c
00000000000f6780 0000000000000050 t opus_custom_mode_create
00000000000f67d0 00000000000000e8 t find_best_pitch
00000000000f68c0 000000000000023c t pitch_downsample
00000000000f6b00 0000000000000254 t pitch_search
00000000000f6d60 0000000000000128 t _celt_lpc
00000000000f6e90 0000000000000270 t celt_fir_c
00000000000f7100 0000000000000368 t celt_iir
00000000000f7470 0000000000000184 t _celt_autocorr
00000000000f7600 0000000000000218 t unquant_coarse_energy
00000000000f7820 0000000000000120 t unquant_fine_energy
00000000000f7940 0000000000000168 t unquant_energy_finalise
00000000000f7ab0 0000000000000d04 t clt_compute_allocation
00000000000f87c0 00000000000000a4 t exp_rotation1
00000000000f8870 000000000000017c t exp_rotation.part.0
00000000000f89f0 000000000000023c t op_pvq_search_c
00000000000f8c30 00000000000001e8 t alg_quant
00000000000f8e20 0000000000000180 t alg_unquant
00000000000f8fa0 000000000000009c t renormalise_vector
00000000000f9040 000000000000024c t stereo_itheta
00000000000f9290 0000000000000228 t celt_pitch_xcorr_float_neon
00000000000f94c0 00000000000000bc t celt_inner_prod_neon
00000000000f9580 00000000000000f4 t dual_inner_prod_neon
00000000000f9680 0000000000000010 t silk_Get_Decoder_Size
00000000000f9690 0000000000000038 t silk_InitDecoder
00000000000f96d0 0000000000000acc t silk_Decode
00000000000fa1a0 0000000000000264 t silk_stereo_MS_to_LR
00000000000fa410 00000000000003a0 t silk_resampler_init
00000000000fa7b0 00000000000001ac t silk_resampler
00000000000fa960 00000000000006b8 t silk_resampler_private_down_FIR
00000000000fb020 00000000000001b8 t silk_resampler_private_IIR_FIR
00000000000fb1e0 0000000000000174 t silk_resampler_private_up2_HQ
00000000000fb360 0000000000000004 t silk_resampler_private_up2_HQ_wrapper
00000000000fb370 0000000000000130 t silk_stereo_decode_pred
00000000000fb4a0 0000000000000030 t silk_stereo_decode_mid_only
00000000000fb4d0 0000000000000064 t validate_layout
00000000000fb540 0000000000000070 t get_left_channel
00000000000fb5b0 0000000000000074 t get_right_channel
00000000000fb630 0000000000000074 t get_mono_channel
00000000000fb6b0 00000000000000bc t intensity_stereo.isra.0
00000000000fb770 000000000000014c t deinterleave_hadamard
00000000000fb8c0 00000000000000a8 t special_hybrid_folding.isra.1
00000000000fb970 0000000000000108 t quant_band_n1.isra.2
00000000000fba80 0000000000000018 t celt_lcg_rand
00000000000fbaa0 000000000000006c t bitexact_log2tan
00000000000fbb10 00000000000008f0 t compute_theta
00000000000fc400 00000000000005b0 t quant_partition
00000000000fc9b0 00000000000001e4 t denormalise_bands
00000000000fcba0 000000000000033c t anti_collapse
00000000000fcee0 000000000000007c t haar1
00000000000fcf60 00000000000004fc t quant_band
00000000000fd460 000000000000056c t quant_band_stereo
00000000000fd9d0 0000000000001024 t quant_all_bands
00000000000fea00 000000000000013c t encode_pulses
00000000000feb40 00000000000002d0 t decode_pulses
00000000000fee10 00000000000000a0 t ec_enc_carry_out.part.0
00000000000feeb0 00000000000000b0 t ec_encode
00000000000fef60 0000000000000098 t ec_enc_bit_logp
00000000000ff000 00000000000000a0 t ec_enc_bits
00000000000ff0a0 0000000000000090 t ec_enc_uint
00000000000ff130 0000000000000768 t opus_fft_impl
00000000000ff8a0 0000000000000194 t ec_laplace_decode
00000000000ffa40 0000000000000048 t isqrt32
00000000000ffa90 000000000000004c t silk_init_decoder
00000000000ffae0 0000000000000220 t silk_decode_frame
00000000000ffd00 0000000000000260 t silk_decode_parameters
00000000000fff60 00000000000003e0 t silk_decode_indices
0000000000100340 0000000000000284 t silk_decode_pulses
00000000001005d0 0000000000000284 t silk_decoder_set_fs
0000000000100860 00000000000000f4 t silk_gains_dequant
0000000000100960 0000000000000178 t silk_NLSF_decode
0000000000100ae0 0000000000000028 t silk_PLC_Reset
0000000000100b10 0000000000000aa4 t silk_PLC
00000000001015c0 00000000000001f0 t silk_PLC_glue_frames
00000000001017b0 0000000000000420 t silk_shell_decoder
0000000000101bd0 00000000000000a0 t silk_NLSF_unpack
0000000000101c70 0000000000000074 t silk_bwexpander
0000000000101cf0 000000000000012c t silk_decode_pitch
0000000000101e20 000000000000006c t silk_log2lin
0000000000101e90 0000000000000174 t silk_LPC_analysis_filter
0000000000102010 000000000000036c t silk_NLSF2A
0000000000102380 00000000000002e8 t silk_NLSF_stabilize
0000000000102670 0000000000000054 t silk_resampler_private_AR2
00000000001026d0 0000000000000084 t silk_insertion_sort_increasing_all_values_int16
0000000000102760 0000000000000128 t silk_sum_sqr_shift
0000000000102890 0000000000000220 t silk_LPC_fit
0000000000102ab0 0000000000000640 t silk_LPC_inverse_pred_gain_neon
00000000001030f0 000000000000004c t silk_CNG_Reset
0000000000103140 00000000000006b4 t silk_CNG
0000000000103800 0000000000000108 t silk_decode_signs
0000000000103910 0000000000000990 t silk_decode_core
00000000001042a0 0000000000000060 t silk_bwexpander_32
0000000000104300 00000000000003b4 t silk_LPC_inverse_pred_gain_c
00000000001046c0 0000000000000110 t png_colorspace_endpoints_match
00000000001047d0 0000000000000010 T png_zalloc
00000000001047e0 0000000000000004 T png_zfree
00000000001047f0 00000000000000e0 t png_colorspace_set_xy_and_XYZ
00000000001048d0 0000000000000248 t png_icc_profile_error
0000000000104b20 0000000000000070 T png_sig_cmp
0000000000104b90 0000000000000030 T png_reset_crc
0000000000104bc0 00000000000000a4 T png_calculate_crc
0000000000104c70 0000000000000118 T png_user_version_check
0000000000104d90 000000000000015c T png_create_png_struct
0000000000104ef0 0000000000000050 T png_create_info_struct
0000000000104f40 000000000000048c T png_free_data
00000000001053d0 000000000000006c T png_destroy_info_struct
0000000000105440 0000000000000014 T png_get_io_ptr
0000000000105460 0000000000000004 T png_save_int_32
0000000000105470 0000000000000054 T png_handle_as_unknown
00000000001054d0 0000000000000028 T png_chunk_unknown_handling
0000000000105500 0000000000000100 T png_zstream_error
0000000000105600 000000000000005c T png_colorspace_sync_info
0000000000105660 000000000000002c T png_colorspace_sync
0000000000105690 0000000000000090 T png_icc_check_length
0000000000105720 000000000000038c T png_icc_check_header
0000000000105ab0 00000000000000f0 T png_icc_check_tag_table
0000000000105ba0 00000000000002cc T png_check_IHDR
0000000000105e70 0000000000000198 T png_check_fp_number
0000000000106010 0000000000000060 T png_check_fp_string
0000000000106070 0000000000000084 T png_muldiv
0000000000106100 0000000000000180 t png_xy_from_XYZ
0000000000106280 0000000000000168 T png_colorspace_set_rgb_coefficients
00000000001063f0 0000000000000058 T png_reciprocal
0000000000106450 0000000000000338 t png_XYZ_from_xy
0000000000106790 00000000000000e4 T png_colorspace_set_chromaticities
0000000000106880 0000000000000018 T png_gamma_significant
00000000001068a0 00000000000000c0 t png_colorspace_check_gamma
0000000000106960 00000000000000bc T png_colorspace_set_gamma
0000000000106a20 0000000000000150 T png_colorspace_set_sRGB
0000000000106b70 00000000000001dc T png_icc_set_sRGB
0000000000106d50 000000000000017c t png_build_16bit_table
0000000000106ed0 000000000000006c T png_reciprocal2
0000000000106f40 0000000000000064 T png_gamma_8bit_correct
0000000000106fb0 00000000000000bc t png_build_8bit_table
0000000000107070 0000000000000068 T png_gamma_16bit_correct
00000000001070e0 0000000000000030 T png_gamma_correct
0000000000107110 0000000000000158 T png_destroy_gamma_table
0000000000107270 0000000000000448 T png_build_gamma_table
00000000001076c0 00000000000000e8 t png_format_buffer.isra.0
00000000001077b0 0000000000000058 T png_safecat
0000000000107810 0000000000000168 T png_format_number
0000000000107980 0000000000000090 T png_warning
0000000000107a10 0000000000000030 T png_warning_parameter
0000000000107a40 00000000000000ac T png_warning_parameter_signed
0000000000107af0 0000000000000130 T png_formatted_warning
0000000000107c20 0000000000000034 T png_chunk_warning
0000000000107c60 0000000000000078 T png_free_jmpbuf
0000000000107ce0 0000000000000024 T png_longjmp
0000000000107d10 0000000000000070 T png_error
0000000000107d80 0000000000000018 T png_app_warning
0000000000107da0 0000000000000018 T png_app_error
0000000000107dc0 0000000000000028 T png_chunk_error
0000000000107df0 0000000000000018 T png_chunk_benign_error
0000000000107e10 0000000000000028 T png_chunk_report
0000000000107e40 0000000000000058 T png_benign_error
0000000000107ea0 00000000000000c0 T png_set_longjmp_fn
0000000000107f60 0000000000000010 T png_set_error_fn
0000000000107f70 0000000000000014 T png_get_error_ptr
0000000000107f90 0000000000000020 T png_get_valid
0000000000107fb0 000000000000001c T png_get_channels
0000000000107fd0 0000000000000090 T png_get_IHDR
0000000000108060 0000000000000040 T png_get_PLTE
00000000001080a0 0000000000000078 T png_get_tRNS
0000000000108120 000000000000002c T png_malloc_base
0000000000108150 000000000000003c T png_malloc_array
0000000000108190 00000000000000e4 T png_realloc_array
0000000000108280 0000000000000040 T png_malloc
00000000001082c0 0000000000000038 T png_calloc
0000000000108300 0000000000000048 T png_malloc_warn
0000000000108350 0000000000000018 T png_free_default
0000000000108370 0000000000000024 T png_free
00000000001083a0 0000000000000064 T png_destroy_png_struct
0000000000108410 0000000000000014 T png_set_mem_fn
0000000000108430 0000000000000050 T png_create_read_struct_2
0000000000108480 0000000000000010 T png_create_read_struct
0000000000108490 00000000000004a0 T png_read_info
0000000000108930 0000000000000050 T png_read_update_info
0000000000108980 0000000000000020 T png_start_read_image
00000000001089a0 000000000000042c T png_read_row
0000000000108dd0 00000000000000ec T png_read_image
0000000000108ec0 0000000000000588 T png_read_end
0000000000109450 000000000000015c T png_destroy_read_struct
00000000001095b0 000000000000004c T png_default_read_data
0000000000109600 0000000000000024 T png_read_data
0000000000109630 0000000000000058 T png_set_read_fn
0000000000109690 00000000000001e0 t png_do_gray_to_rgb
0000000000109870 0000000000000548 t png_do_expand
0000000000109dc0 0000000000000034 T png_set_strip_16
0000000000109e00 0000000000000038 T png_set_expand
0000000000109e40 0000000000000038 T png_set_palette_to_rgb
0000000000109e80 0000000000000034 T png_set_expand_gray_1_2_4_to_8
0000000000109ec0 0000000000000038 T png_set_tRNS_to_alpha
0000000000109f00 0000000000000058 T png_set_gray_to_rgb
0000000000109f60 0000000000000014 T png_set_read_user_transform_fn
0000000000109f80 0000000000000c94 T png_init_read_transformations
000000000010ac20 00000000000002bc T png_read_transform_info
000000000010aee0 0000000000002a20 T png_do_read_transformations
000000000010d900 0000000000000044 t png_read_filter_row_sub
000000000010d950 0000000000000030 t png_read_filter_row_up
000000000010d980 0000000000000078 t png_read_filter_row_avg
000000000010da00 000000000000007c t png_read_filter_row_paeth_1byte_pixel
000000000010da80 00000000000000b0 t png_read_filter_row_paeth_multibyte_pixel
000000000010db30 0000000000000148 t png_inflate_claim
000000000010dc80 00000000000000b4 t png_read_buffer
000000000010dd40 0000000000000028 T png_get_uint_31
000000000010dd70 00000000000000f0 T png_read_sig
000000000010de60 0000000000000048 T png_crc_read
000000000010deb0 000000000000008c T png_crc_error
000000000010df40 00000000000000a0 T png_crc_finish
000000000010dfe0 00000000000000d8 t png_cache_unknown_chunk
000000000010e0c0 0000000000000040 T png_zlib_inflate
000000000010e100 0000000000000164 t png_inflate.constprop.0
000000000010e270 0000000000000250 t png_decompress_chunk.constprop.0
000000000010e4c0 0000000000000134 t png_inflate_read.constprop.0.isra.0
000000000010e600 0000000000000158 T png_handle_IHDR
000000000010e760 0000000000000278 T png_handle_PLTE
000000000010e9e0 000000000000006c T png_handle_IEND
000000000010ea50 00000000000000c0 T png_handle_gAMA
000000000010eb10 00000000000001cc T png_handle_sBIT
000000000010ece0 00000000000001c0 T png_handle_cHRM
000000000010eea0 00000000000000e8 T png_handle_sRGB
000000000010ef90 000000000000058c T png_handle_iCCP
000000000010f520 00000000000002c8 T png_handle_sPLT
000000000010f7f0 00000000000001e8 T png_handle_tRNS
000000000010f9e0 0000000000000240 T png_handle_bKGD
000000000010fc20 00000000000001c4 T png_handle_eXIf
000000000010fdf0 0000000000000148 T png_handle_hIST
000000000010ff40 00000000000000f4 T png_handle_pHYs
0000000000110040 0000000000000110 T png_handle_oFFs
0000000000110150 0000000000000314 T png_handle_pCAL
0000000000110470 000000000000029c T png_handle_sCAL
0000000000110710 00000000000000e0 T png_handle_tIME
00000000001107f0 000000000000019c T png_handle_tEXt
0000000000110990 000000000000023c T png_handle_zTXt
0000000000110bd0 000000000000032c T png_handle_iTXt
0000000000110f00 00000000000001bc T png_handle_unknown
00000000001110c0 0000000000000058 T png_check_chunk_name
0000000000111120 00000000000000d8 T png_check_chunk_length
0000000000111200 000000000000008c T png_read_chunk_header
0000000000111290 0000000000000520 T png_combine_row
00000000001117b0 0000000000000428 T png_do_read_interlace
0000000000111be0 00000000000000c0 T png_read_filter_row
0000000000111ca0 000000000000021c T png_read_IDAT_data
0000000000111ec0 0000000000000094 T png_read_finish_IDAT
0000000000111f60 0000000000000100 T png_read_finish_row
0000000000112060 0000000000000438 T png_read_start_row
00000000001124a0 000000000000006c t check_location
0000000000112510 0000000000000030 T png_set_bKGD
0000000000112540 00000000000000b4 T png_set_eXIf_1
0000000000112600 00000000000000cc T png_set_hIST
00000000001126d0 0000000000000100 T png_set_IHDR
00000000001127d0 0000000000000024 T png_set_oFFs
0000000000112800 00000000000002b0 T png_set_pCAL
0000000000112ab0 000000000000018c T png_set_sCAL_s
0000000000112c40 0000000000000024 T png_set_pHYs
0000000000112c70 0000000000000144 T png_set_PLTE
0000000000112dc0 0000000000000030 T png_set_sBIT
0000000000112df0 0000000000000348 T png_set_text_2
0000000000113140 0000000000000088 T png_set_tIME
00000000001131d0 00000000000001c4 T png_set_tRNS
00000000001133a0 00000000000001c0 T png_set_sPLT
0000000000113560 0000000000000154 T png_set_unknown_chunks
00000000001136c0 000000000000006c T png_set_rows
0000000000113730 00000000000001d4 T png_check_keyword
0000000000113910 0000000000000014 T png_set_bgr
0000000000113930 0000000000000024 T png_set_swap
0000000000113960 0000000000000028 T png_set_packing
0000000000113990 0000000000000020 T png_set_packswap
00000000001139b0 0000000000000028 T png_set_shift
00000000001139e0 0000000000000030 T png_set_interlace_handling
0000000000113a10 0000000000000088 T png_set_filler
0000000000113aa0 0000000000000014 T png_set_swap_alpha
0000000000113ac0 0000000000000014 T png_set_invert_alpha
0000000000113ae0 0000000000000014 T png_set_invert_mono
0000000000113b00 00000000000000ac T png_do_invert
0000000000113bb0 0000000000000048 T png_do_swap
0000000000113c00 000000000000006c T png_do_packswap
0000000000113c70 0000000000000230 T png_do_strip_channel
0000000000113ea0 0000000000000118 T png_do_bgr
0000000000113fc0 000000000000018c T png_do_check_palette_indexes
0000000000114150 000000000000004c T png_default_write_data
00000000001141a0 0000000000000010 T png_default_flush
00000000001141b0 0000000000000024 T png_write_data
00000000001141e0 0000000000000014 T png_flush
0000000000114200 000000000000004c T png_set_write_fn
0000000000114250 00000000000000e4 t write_unknown_chunks.part.0
0000000000114340 0000000000000178 T png_write_info_before_PLTE
00000000001144c0 0000000000000334 T png_write_info
0000000000114800 00000000000001b8 T png_write_end
00000000001149c0 000000000000007c T png_create_write_struct_2
0000000000114a40 0000000000000010 T png_create_write_struct
0000000000114a50 0000000000000394 T png_write_row
0000000000114df0 0000000000000080 T png_write_image
0000000000114e70 0000000000000058 T png_write_flush
0000000000114ed0 00000000000000b8 T png_destroy_write_struct
0000000000114f90 0000000000000160 T png_write_png
00000000001150f0 0000000000000798 T png_do_write_transformations
0000000000115890 0000000000000174 t png_image_size
0000000000115a10 0000000000000258 t png_deflate_claim
0000000000115c70 00000000000000b8 t optimize_cmf.part.0
0000000000115d30 0000000000000204 t png_text_compress.constprop.0
0000000000115f40 000000000000000c T png_save_uint_32
0000000000115f50 000000000000000c T png_save_uint_16
0000000000115f60 000000000000006c T png_write_sig
0000000000115fd0 0000000000000060 T png_write_chunk_data
0000000000116030 0000000000000078 t png_write_compressed_data_out
00000000001160b0 000000000000004c T png_write_chunk_end
0000000000116100 00000000000000c8 t png_write_complete_chunk
00000000001161d0 00000000000000d4 T png_write_chunk
00000000001162b0 0000000000000040 T png_free_buffer_list
00000000001162f0 00000000000002b4 T png_write_IHDR
00000000001165b0 0000000000000174 T png_write_PLTE
0000000000116730 0000000000000234 T png_compress_IDAT
0000000000116970 00000000000000b0 T png_write_IEND
0000000000116a20 00000000000000b8 T png_write_gAMA_fixed
0000000000116ae0 00000000000000c4 T png_write_sRGB
0000000000116bb0 000000000000019c T png_write_iCCP
0000000000116d50 00000000000001e8 T png_write_sPLT
0000000000116f40 00000000000000d0 T png_write_sBIT
0000000000117010 0000000000000114 T png_write_cHRM_fixed
0000000000117130 0000000000000174 T png_write_tRNS
00000000001172b0 0000000000000174 T png_write_bKGD
0000000000117430 00000000000000d8 T png_write_eXIf
0000000000117510 00000000000000f4 T png_write_hIST
0000000000117610 0000000000000170 T png_write_tEXt
0000000000117780 0000000000000168 T png_write_zTXt
00000000001178f0 0000000000000398 T png_write_iTXt
0000000000117c90 00000000000000ec T png_write_oFFs
0000000000117d80 00000000000002b0 T png_write_pCAL
0000000000118030 00000000000000d0 T png_write_sCAL_s
0000000000118100 00000000000000ec T png_write_pHYs
00000000001181f0 00000000000000b8 T png_write_tIME
00000000001182b0 00000000000001a4 T png_write_start_row
0000000000118460 0000000000000144 T png_write_finish_row
00000000001185b0 0000000000000310 T png_do_write_interlace
00000000001188c0 000000000000075c T png_write_find_filter
0000000000119020 0000000000000070 T png_init_filter_functions_neon
0000000000119090 0000000000000040 T png_read_filter_row_up_neon
00000000001190d0 0000000000000060 T png_read_filter_row_sub3_neon
0000000000119130 0000000000000050 T png_read_filter_row_sub4_neon
0000000000119180 0000000000000084 T png_read_filter_row_avg3_neon
0000000000119210 0000000000000068 T png_read_filter_row_avg4_neon
0000000000119280 000000000000014c T png_read_filter_row_paeth3_neon
00000000001193d0 0000000000000140 T png_read_filter_row_paeth4_neon
0000000000119510 0000000000000064 T png_riffle_palette_neon
0000000000119580 00000000000000e4 T png_do_expand_palette_rgba8_neon
0000000000119670 0000000000000140 T png_do_expand_palette_rgb8_neon
00000000001197b0 00000000000003a0 T adler32_z
0000000000119b50 0000000000000008 T adler32
0000000000119b60 00000000000000e4 T adler32_combine
0000000000119c50 00000000000000e4 T adler32_combine64
0000000000119d40 000000000000000c T get_crc_table
0000000000119d50 00000000000003c4 T crc32_z
000000000011a120 0000000000000008 T crc32
000000000011a130 00000000000000cc T crc32_combine64
000000000011a200 0000000000000004 T crc32_combine
000000000011a210 0000000000000090 T crc32_combine_gen64
000000000011a2a0 0000000000000004 T crc32_combine_gen
000000000011a2b0 0000000000000044 T crc32_combine_op
000000000011a300 000000000000007c t slide_hash
000000000011a380 00000000000001dc t longest_match
000000000011a560 00000000000000c8 t read_buf
000000000011a630 0000000000000268 t fill_window
000000000011a8a0 00000000000000b0 t flush_pending
000000000011a950 0000000000000570 t deflate_slow
000000000011aec0 0000000000000400 t deflate_fast
000000000011b2c0 000000000000058c t deflate_stored
000000000011b850 000000000000007c t deflateStateCheck.part.0
000000000011b8d0 000000000000008c t deflateStateCheck
000000000011b960 00000000000001e0 T deflateSetDictionary
000000000011bb40 00000000000000d8 T deflateGetDictionary
000000000011bc20 00000000000000f0 T deflateResetKeep
000000000011bd10 00000000000000b4 T deflateReset
000000000011bdd0 0000000000000058 T deflateSetHeader
000000000011be30 0000000000000068 T deflatePending
000000000011bea0 00000000000000f4 T deflatePrime
000000000011bfa0 0000000000000058 T deflateTune
000000000011c000 0000000000000158 T deflateBound
000000000011c160 0000000000001184 T deflate
000000000011d2f0 0000000000000174 T deflateParams
000000000011d470 00000000000000a0 T deflateEnd
000000000011d510 00000000000002a4 T deflateInit2_
000000000011d7c0 000000000000001c T deflateInit_
000000000011d7e0 00000000000001cc T deflateCopy
000000000011d9b0 0000000000000114 t updatewindow
000000000011dad0 0000000000000050 t inflateStateCheck
000000000011db20 0000000000000080 T inflateResetKeep
000000000011dba0 0000000000000050 T inflateReset
000000000011dbf0 00000000000000ac T inflateReset2
000000000011dca0 0000000000000118 T inflateInit2_
000000000011ddc0 0000000000000010 T inflateInit_
000000000011ddd0 00000000000000b0 T inflatePrime
000000000011de80 00000000000018ec T inflate
000000000011f770 000000000000005c T inflateEnd
000000000011f7d0 00000000000000d4 T inflateGetDictionary
000000000011f8b0 00000000000000c0 T inflateSetDictionary
000000000011f970 0000000000000068 T inflateGetHeader
000000000011f9e0 0000000000000308 T inflateSync
000000000011fcf0 0000000000000070 T inflateSyncPoint
000000000011fd60 00000000000001e0 T inflateCopy
000000000011ff40 0000000000000060 T inflateUndermine
000000000011ffa0 000000000000007c T inflateValidate
0000000000120020 0000000000000090 T inflateMark
00000000001200b0 0000000000000064 T inflateCodesUsed
0000000000120120 000000000000047c t inflate_table
00000000001205a0 0000000000000078 t bi_windup
0000000000120620 00000000000000f4 t pqdownheap
0000000000120720 00000000000004e8 t build_tree
0000000000120c10 00000000000001e0 t scan_tree
0000000000120df0 0000000000000668 t send_tree
0000000000121460 00000000000003cc t compress_block
0000000000121830 0000000000000098 t _tr_init
00000000001218d0 0000000000000148 t _tr_stored_block
0000000000121a20 0000000000000088 t _tr_flush_bits
0000000000121ab0 0000000000000148 t _tr_align
0000000000121c00 0000000000000614 t _tr_flush_block
0000000000122220 00000000000000dc T _tr_tally
0000000000122300 000000000000000c T zlibVersion
0000000000122310 0000000000000008 T zlibCompileFlags
0000000000122320 0000000000000030 T zError
0000000000122350 0000000000000008 T zcalloc
0000000000122360 0000000000000008 T zcfree
0000000000122370 00000000000004f4 t inflate_fast
0000000000122870 00000000000000d8 T jpeg_CreateCompress
0000000000122950 0000000000000004 T jpeg_destroy_compress
0000000000122960 0000000000000094 T jpeg_suppress_tables
0000000000122a00 0000000000000180 T jpeg_finish_compress
0000000000122b80 00000000000000a4 T jpeg_start_compress
0000000000122c30 00000000000000f0 T jpeg_write_scanlines
0000000000122d20 00000000000000dc T jinit_compress_master
0000000000122e00 0000000000000054 t start_pass_main
0000000000122e60 0000000000000134 t process_data_simple_main
0000000000122fa0 00000000000000d0 T jinit_c_main_controller
0000000000123070 0000000000000074 t write_marker_byte
00000000001230f0 00000000000000c8 t write_file_trailer
00000000001231c0 00000000000001a4 t write_marker_header
0000000000123370 00000000000004d0 t emit_sof
0000000000123840 00000000000003a4 t emit_dqt
0000000000123bf0 0000000000000188 t write_frame_header
0000000000123d80 0000000000000324 t emit_dht
00000000001240b0 0000000000000200 t write_tables_only
00000000001242b0 0000000000000bd4 t write_scan_header
0000000000124e90 0000000000000ba0 t write_file_header
0000000000125a30 0000000000000080 T jinit_marker_writer
0000000000125ab0 00000000000006dc t validate_script
0000000000126190 0000000000000040 t pass_startup
00000000001261d0 00000000000000c4 t finish_pass_master
00000000001262a0 0000000000000258 t per_scan_setup
0000000000126500 0000000000000144 t select_scan_parameters
0000000000126650 00000000000001f8 t prepare_for_pass
0000000000126850 000000000000039c T jinit_c_master_control
0000000000126bf0 000000000000005c T jpeg_abort
0000000000126c50 0000000000000034 T jpeg_destroy
0000000000126c90 0000000000000028 T jpeg_alloc_quant_table
0000000000126cc0 0000000000000028 T jpeg_alloc_huff_table
0000000000126cf0 00000000000000d0 t add_huff_table.part.0
0000000000126dc0 00000000000000fc T jpeg_add_quant_table
0000000000126ec0 000000000000005c T jpeg_set_linear_quality
0000000000126f20 0000000000000040 T jpeg_quality_scaling
0000000000126f60 0000000000000034 T jpeg_set_quality
0000000000126fa0 000000000000029c T jpeg_set_colorspace
0000000000127240 0000000000000068 T jpeg_default_colorspace
00000000001272b0 0000000000000198 T jpeg_set_defaults
0000000000127450 000000000000006c t encode_mcu_AC_first_prepare
00000000001274c0 000000000000009c t encode_mcu_AC_refine_prepare
0000000000127560 00000000000001fc t start_pass_phuff
0000000000127760 0000000000000144 t emit_bits.constprop.0
00000000001278b0 0000000000000170 t emit_bits
0000000000127a20 0000000000000244 t emit_eobrun
0000000000127c70 0000000000000058 t finish_pass_phuff
0000000000127cd0 0000000000000228 t finish_pass_gather_phuff
0000000000127f00 0000000000000134 t emit_restart
0000000000128040 000000000000021c t encode_mcu_DC_refine
0000000000128260 0000000000000478 t encode_mcu_AC_refine
00000000001286e0 0000000000000338 t encode_mcu_AC_first
0000000000128a20 00000000000001b8 t encode_mcu_DC_first
0000000000128be0 0000000000000054 T jinit_phuff_encoder
0000000000128c40 0000000000000050 t start_pass_prep
0000000000128c90 000000000000027c t pre_process_data
0000000000128f10 0000000000000284 t pre_process_context
00000000001291a0 0000000000000338 T jinit_c_prep_controller
00000000001294e0 0000000000000004 t start_pass_downsample
00000000001294f0 000000000000009c t sep_downsample
0000000000129590 000000000000032c t int_downsample
00000000001298c0 00000000000000f0 t h2v1_downsample
00000000001299b0 0000000000000110 t h2v2_downsample
0000000000129ac0 00000000000005cc t h2v2_smooth_downsample
000000000012a090 00000000000001e4 t fullsize_smooth_downsample
000000000012a280 00000000000000a4 t fullsize_downsample
000000000012a330 0000000000000274 T jinit_downsampler
000000000012a5b0 0000000000000118 T jpeg_CreateDecompress
000000000012a6d0 0000000000000004 T jpeg_destroy_decompress
000000000012a6e0 0000000000000284 T jpeg_consume_input
000000000012a970 0000000000000090 T jpeg_read_header
000000000012aa00 00000000000000ec T jpeg_finish_decompress
000000000012aaf0 0000000000000158 t output_pass_setup
000000000012ac50 000000000000010c T jpeg_start_decompress
000000000012ad60 00000000000000dc T jpeg_read_scanlines
000000000012ae40 0000000000000014 t finish_input_pass
000000000012ae60 0000000000000058 t reset_input_controller
000000000012aec0 000000000000048c t start_input_pass
000000000012b350 000000000000036c t consume_markers
000000000012b6c0 0000000000000068 T jinit_input_controller
000000000012b730 00000000000003cc t get_sof
000000000012bb00 0000000000000250 t examine_app0
000000000012bd50 0000000000000128 t skip_variable
000000000012be80 0000000000000134 t next_marker
000000000012bfc0 0000000000000020 t reset_marker_reader
000000000012bfe0 00000000000003bc t get_dht
000000000012c3a0 0000000000000c50 t read_markers
000000000012cff0 00000000000000dc t examine_app14
000000000012d0d0 00000000000001c8 t get_interesting_appn
000000000012d2a0 00000000000000bc t read_restart_marker
000000000012d360 000000000000015c T jpeg_resync_to_restart
000000000012d4c0 00000000000000bc T jinit_marker_reader
000000000012d580 00000000000001bc t prepare_for_output_pass
000000000012d740 000000000000003c t finish_output_pass
000000000012d780 00000000000000f4 t use_merged_upsample.part.0
000000000012d880 00000000000004f4 T jpeg_calc_output_dimensions
000000000012dd80 00000000000003e0 T jinit_master_decompress
000000000012e160 0000000000000014 t start_pass_merged_upsample
000000000012e180 0000000000000050 t merged_1v_upsample
000000000012e1d0 00000000000007bc t h2v1_merged_upsample
000000000012e990 0000000000000c58 t h2v2_merged_upsample
000000000012f5f0 000000000000017c t h2v1_merged_upsample_565
000000000012f770 00000000000001d8 t h2v1_merged_upsample_565D
000000000012f950 0000000000000254 t h2v2_merged_upsample_565
000000000012fbb0 0000000000000318 t h2v2_merged_upsample_565D
000000000012fed0 000000000000011c t merged_2v_upsample
000000000012fff0 0000000000000244 T jinit_merged_upsampler
0000000000130240 00000000000003e8 t start_pass_phuff_decoder
0000000000130630 0000000000000534 t decode_mcu_AC_refine
0000000000130b70 0000000000000188 t decode_mcu_DC_refine
0000000000130d00 0000000000000330 t decode_mcu_AC_first
0000000000131030 000000000000033c t decode_mcu_DC_first
0000000000131370 00000000000000b8 T jinit_phuff_decoder
0000000000131430 000000000000011c t start_pass_dpost
0000000000131550 000000000000008c t post_process_1pass
00000000001315e0 00000000000000f8 t post_process_prepass
00000000001316e0 00000000000000e8 t post_process_2pass
00000000001317d0 00000000000000d0 T jinit_d_post_controller
00000000001318a0 0000000000000014 t start_pass_upsample
00000000001318c0 000000000000014c t sep_upsample
0000000000131a10 0000000000000008 t fullsize_upsample
0000000000131a20 0000000000000008 t noop_upsample
0000000000131a30 00000000000001c8 t h2v1_upsample
0000000000131c00 00000000000003d4 t h2v1_fancy_upsample
0000000000131fe0 00000000000000ac t h1v2_fancy_upsample
0000000000132090 0000000000000144 t h2v2_fancy_upsample
00000000001321e0 0000000000000118 t int_upsample
0000000000132300 0000000000000214 t h2v2_upsample
0000000000132520 0000000000000334 T jinit_upsampler
0000000000132860 0000000000000070 t emit_message
00000000001328d0 0000000000000010 t reset_error_mgr
00000000001328e0 00000000000000cc t format_message
00000000001329b0 0000000000000044 t output_message
0000000000132a00 000000000000002c t error_exit
0000000000132a30 0000000000000058 T jpeg_std_error
0000000000132a90 00000000000001d8 t create_colorindex
0000000000132c70 0000000000000098 t color_quantize
0000000000132d10 0000000000000078 t color_quantize3
0000000000132d90 00000000000000e0 t quantize3_ord_dither
0000000000132e70 0000000000000004 t finish_pass_1_quant
0000000000132e80 0000000000000018 t new_color_map_1_quant
0000000000132ea0 0000000000000680 t start_pass_1_quant
0000000000133520 000000000000023c t quantize_fs_dither
0000000000133760 0000000000000180 t quantize_ord_dither
00000000001338e0 0000000000000520 T jinit_1pass_quantizer
0000000000133e00 00000000000000a4 t prescan_quantize
0000000000133eb0 00000000000009a8 t fill_inverse_cmap
0000000000134860 000000000000011c t pass2_no_dither
0000000000134980 0000000000000354 t pass2_fs_dither
0000000000134ce0 0000000000000114 t init_error_limit
0000000000134e00 0000000000000004 t finish_pass2
0000000000134e10 0000000000000010 t new_color_map_2_quant
0000000000134e20 0000000000000160 t start_pass_2_quant
0000000000134f80 00000000000005f8 t update_box.isra.0
0000000000135580 00000000000003e0 t finish_pass1
0000000000135960 00000000000001b8 T jinit_2pass_quantizer
0000000000135b20 0000000000000010 T jdiv_round_up
0000000000135b30 0000000000000018 T jround_up
0000000000135b50 0000000000000060 T jcopy_sample_rows
0000000000135bb0 0000000000000014 T jcopy_block_row
0000000000135bd0 000000000000000c T jzero_far
0000000000135be0 00000000000001d0 t alloc_small
0000000000135db0 0000000000000098 t request_virt_barray
0000000000135e50 0000000000000098 t request_virt_sarray
0000000000135ef0 0000000000000158 t free_pool
0000000000136050 0000000000000048 t self_destruct
00000000001360a0 0000000000000158 t alloc_large
0000000000136200 00000000000000e4 t alloc_barray
00000000001362f0 000000000000011c t alloc_sarray
0000000000136410 0000000000000274 t realize_virt_arrays
0000000000136690 00000000000003bc t access_virt_sarray
0000000000136a50 00000000000003c4 t access_virt_barray
0000000000136e20 0000000000000170 T jinit_memory_mgr
0000000000136f90 0000000000000008 T jpeg_get_small
0000000000136fa0 0000000000000008 T jpeg_free_small
0000000000136fb0 0000000000000008 T jpeg_get_large
0000000000136fc0 0000000000000008 T jpeg_free_large
0000000000136fd0 0000000000000020 T jpeg_mem_available
0000000000136ff0 0000000000000018 T jpeg_open_backing_store
0000000000137010 0000000000000008 T jpeg_mem_init
0000000000137020 0000000000000004 T jpeg_mem_term
0000000000137030 0000000000000228 t start_pass
0000000000137260 000000000000046c t arith_encode
00000000001376d0 000000000000046c t arith_encode.constprop.0
0000000000137b40 000000000000046c t arith_encode.constprop.1
0000000000137fb0 000000000000059c t finish_pass
0000000000138550 0000000000000198 t emit_restart
00000000001386f0 000000000000047c t encode_mcu
0000000000138b70 0000000000000288 t encode_mcu_AC_refine
0000000000138e00 00000000000000b4 t encode_mcu_DC_refine
0000000000138ec0 00000000000002dc t encode_mcu_AC_first
00000000001391a0 000000000000025c t encode_mcu_DC_first
0000000000139400 000000000000007c T jinit_arith_encoder
0000000000139480 00000000000003ec t start_pass
0000000000139870 0000000000000108 t process_restart
0000000000139980 0000000000000280 t arith_decode
0000000000139c00 00000000000003c0 t decode_mcu
0000000000139fc0 0000000000000214 t decode_mcu_AC_refine
000000000013a1e0 00000000000000d4 t decode_mcu_DC_refine
000000000013a2c0 0000000000000278 t decode_mcu_AC_first
000000000013a540 0000000000000294 t decode_mcu_DC_first
000000000013a7e0 00000000000000e8 T jinit_arith_decoder
000000000013a8d0 000000000000016c t init_simd.part.0
000000000013aa40 0000000000000044 T jsimd_can_rgb_ycc
000000000013aa90 0000000000000044 T jsimd_can_rgb_gray
000000000013aae0 0000000000000044 T jsimd_can_ycc_rgb
000000000013ab30 0000000000000044 T jsimd_can_ycc_rgb565
000000000013ab80 00000000000000f4 T jsimd_rgb_ycc_convert
000000000013ac80 00000000000000e4 T jsimd_rgb_gray_convert
000000000013ad70 00000000000000f4 T jsimd_ycc_rgb_convert
000000000013ae70 0000000000000008 T jsimd_ycc_rgb565_convert
000000000013ae80 0000000000000044 T jsimd_can_h2v2_downsample
000000000013aed0 0000000000000044 T jsimd_can_h2v1_downsample
000000000013af20 0000000000000020 T jsimd_h2v2_downsample
000000000013af40 0000000000000020 T jsimd_h2v1_downsample
000000000013af60 0000000000000044 T jsimd_can_h2v2_upsample
000000000013afb0 0000000000000044 T jsimd_can_h2v1_upsample
000000000013b000 000000000000000c T jsimd_h2v2_upsample
000000000013b010 000000000000000c T jsimd_h2v1_upsample
000000000013b020 0000000000000044 T jsimd_can_h2v2_fancy_upsample
000000000013b070 0000000000000044 T jsimd_can_h2v1_fancy_upsample
000000000013b0c0 0000000000000044 T jsimd_can_h1v2_fancy_upsample
000000000013b110 000000000000000c T jsimd_h2v2_fancy_upsample
000000000013b120 000000000000000c T jsimd_h2v1_fancy_upsample
000000000013b130 000000000000000c T jsimd_h1v2_fancy_upsample
000000000013b140 0000000000000044 T jsimd_can_h2v2_merged_upsample
000000000013b190 0000000000000044 T jsimd_can_h2v1_merged_upsample
000000000013b1e0 00000000000000e4 T jsimd_h2v2_merged_upsample
000000000013b2d0 00000000000000e4 T jsimd_h2v1_merged_upsample
000000000013b3c0 0000000000000044 T jsimd_can_convsamp
000000000013b410 0000000000000008 T jsimd_can_convsamp_float
000000000013b420 0000000000000004 T jsimd_convsamp
000000000013b430 0000000000000004 T jsimd_convsamp_float
000000000013b440 0000000000000044 T jsimd_can_fdct_islow
000000000013b490 0000000000000044 T jsimd_can_fdct_ifast
000000000013b4e0 0000000000000008 T jsimd_can_fdct_float
000000000013b4f0 0000000000000004 T jsimd_fdct_islow
000000000013b500 0000000000000004 T jsimd_fdct_ifast
000000000013b510 0000000000000004 T jsimd_fdct_float
000000000013b520 0000000000000044 T jsimd_can_quantize
000000000013b570 0000000000000008 T jsimd_can_quantize_float
000000000013b580 0000000000000004 T jsimd_quantize
000000000013b590 0000000000000004 T jsimd_quantize_float
000000000013b5a0 0000000000000044 T jsimd_can_idct_2x2
000000000013b5f0 0000000000000044 T jsimd_can_idct_4x4
000000000013b640 0000000000000014 T jsimd_idct_2x2
000000000013b660 0000000000000014 T jsimd_idct_4x4
000000000013b680 0000000000000044 T jsimd_can_idct_islow
000000000013b6d0 0000000000000044 T jsimd_can_idct_ifast
000000000013b720 0000000000000008 T jsimd_can_idct_float
000000000013b730 0000000000000014 T jsimd_idct_islow
000000000013b750 0000000000000014 T jsimd_idct_ifast
000000000013b770 0000000000000004 T jsimd_idct_float
000000000013b780 000000000000004c T jsimd_can_huff_encode_one_block
000000000013b7d0 0000000000000014 T jsimd_huff_encode_one_block
000000000013b7f0 0000000000000044 T jsimd_can_encode_mcu_AC_first_prepare
000000000013b840 0000000000000004 T jsimd_encode_mcu_AC_first_prepare
000000000013b850 0000000000000044 T jsimd_can_encode_mcu_AC_refine_prepare
000000000013b8a0 0000000000000004 T jsimd_encode_mcu_AC_refine_prepare
000000000013b8b0 0000000000000130 t start_pass_coef
000000000013b9e0 0000000000000298 t compress_output
000000000013bc80 0000000000000294 t compress_first_pass
000000000013bf20 0000000000000510 t compress_data
000000000013c430 0000000000000134 T jinit_c_coef_controller
000000000013c570 00000000000000d0 t rgb_ycc_start
000000000013c640 0000000000000608 t rgb_ycc_convert
000000000013cc50 00000000000003a8 t rgb_gray_convert
000000000013d000 000000000000148c t rgb_rgb_convert
000000000013e490 0000000000000108 t cmyk_ycck_convert
000000000013e5a0 00000000000005c0 t grayscale_convert
000000000013eb60 0000000000000afc t null_convert
000000000013f660 0000000000000004 t null_method
000000000013f670 00000000000003ac T jinit_color_converter
000000000013fa20 0000000000000338 t convsamp
000000000013fd60 000000000000014c t quantize
000000000013feb0 00000000000000ac t forward_DCT
000000000013ff60 0000000000000438 t convsamp_float
00000000001403a0 0000000000000188 t quantize_float
0000000000140530 00000000000000ac t forward_DCT_float
00000000001405e0 0000000000000130 t compute_reciprocal
0000000000140710 0000000000000388 t start_pass_fdctmgr
0000000000140aa0 0000000000000244 T jinit_forward_dct
0000000000140cf0 0000000000000244 t encode_mcu_gather
0000000000140f40 00000000000001bc t flush_bits
0000000000141100 0000000000000088 t finish_pass_huff
0000000000141190 000000000000f1ec t encode_mcu_huff
0000000000150380 00000000000002c8 T jpeg_make_c_derived_tbl
0000000000150650 00000000000001d0 t start_pass_huff
0000000000150820 00000000000003c8 T jpeg_gen_optimal_table
0000000000150bf0 0000000000000100 t finish_pass_gather
0000000000150cf0 0000000000000058 T jinit_huff_encoder
0000000000150d50 0000000000000054 t start_input_pass
0000000000150db0 0000000000000008 t dummy_consume_data
0000000000150dc0 00000000000002b4 t consume_data
0000000000151080 0000000000000278 t decompress_data
0000000000151300 00000000000002f0 t start_output_pass
00000000001515f0 0000000000000360 t decompress_onepass
0000000000151950 0000000000001e74 t decompress_smooth_data
00000000001537d0 0000000000000198 T jinit_d_coef_controller
0000000000153970 0000000000000118 t build_ycc_rgb_table
0000000000153a90 00000000000004e0 t ycc_rgb_convert
0000000000153f70 0000000000000090 t rgb_gray_convert
0000000000154000 0000000000000694 t null_convert
00000000001546a0 0000000000001384 t gray_rgb_convert
0000000000155a30 0000000000001744 t rgb_rgb_convert
0000000000157180 00000000000000e0 t ycck_cmyk_convert
0000000000157260 0000000000000244 t ycc_rgb565_convert
00000000001574b0 00000000000002c0 t ycc_rgb565D_convert
0000000000157770 000000000000068c t rgb_rgb565_convert
0000000000157e00 00000000000001fc t rgb_rgb565D_convert
0000000000158000 00000000000002d8 t gray_rgb565_convert
00000000001582e0 000000000000013c t gray_rgb565D_convert
0000000000158420 0000000000000004 t start_pass_dcolor
0000000000158430 0000000000000018 t grayscale_convert
0000000000158450 00000000000003f0 T jinit_color_deconverter
0000000000158840 00000000000006a4 t start_pass
0000000000158ef0 00000000000000c4 T jinit_inverse_dct
0000000000158fc0 00000000000000d0 t add_huff_table.part.0
0000000000159090 00000000000006d0 T jpeg_make_d_derived_tbl
0000000000159760 000000000000044c t start_pass_huff_decoder
0000000000159bb0 0000000000000150 T jpeg_fill_bit_buffer
0000000000159d00 000000000000016c T jpeg_huff_decode
0000000000159e70 000000000000128c t decode_mcu
000000000015b100 0000000000000130 T jinit_huff_decoder
000000000015b230 00000000000000a8 t process_data_simple_main
000000000015b2e0 0000000000000334 t process_data_context_main
000000000015b620 0000000000000028 t process_data_crank_post
000000000015b650 000000000000030c t start_pass_main
000000000015b960 00000000000001d0 T jinit_d_main_controller
000000000015bb30 0000000000000438 T jpeg_fdct_float
000000000015bf70 00000000000002f0 T jpeg_fdct_ifast
000000000015c260 0000000000000338 T jpeg_fdct_islow
000000000015c5a0 000000000000033c T jpeg_idct_float
000000000015c8e0 0000000000000408 T jpeg_idct_ifast
000000000015ccf0 0000000000000430 T jpeg_idct_islow
000000000015d120 0000000000000a20 T jpeg_idct_7x7
000000000015db40 00000000000004a0 T jpeg_idct_6x6
000000000015dfe0 0000000000000624 T jpeg_idct_5x5
000000000015e610 00000000000001f0 T jpeg_idct_3x3
000000000015e800 0000000000000a44 T jpeg_idct_9x9
000000000015f250 0000000000000aa4 T jpeg_idct_10x10
000000000015fd00 00000000000004b8 T jpeg_idct_11x11
00000000001601c0 0000000000000db8 T jpeg_idct_12x12
0000000000160f80 00000000000005cc T jpeg_idct_13x13
0000000000161550 0000000000000fdc T jpeg_idct_14x14
0000000000162530 0000000000000558 T jpeg_idct_15x15
0000000000162a90 0000000000000620 T jpeg_idct_16x16
00000000001630b0 00000000000002b0 T jpeg_idct_4x4
0000000000163360 0000000000000224 T jpeg_idct_2x2
0000000000163590 0000000000000030 T jpeg_idct_1x1
00000000001635c0 00000000000001bc T jsimd_rgb_gray_convert_neon
00000000001635c0 00000000000001bc t jsimd_rgb_gray_convert_neon.localalias
0000000000163780 0000000000000004 T jsimd_extrgb_gray_convert_neon
0000000000163790 00000000000001bc T jsimd_extrgbx_gray_convert_neon
0000000000163950 00000000000001bc T jsimd_extbgr_gray_convert_neon
0000000000163b10 00000000000001bc T jsimd_extbgrx_gray_convert_neon
0000000000163cd0 00000000000001bc T jsimd_extxbgr_gray_convert_neon
0000000000163e90 00000000000001bc T jsimd_extxrgb_gray_convert_neon
0000000000164050 000000000000052c T jsimd_encode_mcu_AC_first_prepare_neon
0000000000164580 00000000000006b4 T jsimd_encode_mcu_AC_refine_prepare_neon
0000000000164c40 0000000000000090 T jsimd_h2v1_downsample_neon
0000000000164cd0 00000000000000b4 T jsimd_h2v2_downsample_neon
0000000000164d90 0000000000000418 T jsimd_h2v1_merged_upsample_neon
0000000000164d90 0000000000000418 t jsimd_h2v1_merged_upsample_neon.localalias
00000000001651b0 0000000000000678 T jsimd_h2v2_merged_upsample_neon
00000000001651b0 0000000000000678 t jsimd_h2v2_merged_upsample_neon.localalias
0000000000165830 0000000000000004 T jsimd_h2v1_extrgb_merged_upsample_neon
0000000000165840 0000000000000004 T jsimd_h2v2_extrgb_merged_upsample_neon
0000000000165850 00000000000004a0 T jsimd_h2v1_extrgbx_merged_upsample_neon
0000000000165cf0 0000000000000730 T jsimd_h2v2_extrgbx_merged_upsample_neon
0000000000166420 0000000000000418 T jsimd_h2v1_extbgr_merged_upsample_neon
0000000000166840 0000000000000678 T jsimd_h2v2_extbgr_merged_upsample_neon
0000000000166ec0 00000000000004a0 T jsimd_h2v1_extbgrx_merged_upsample_neon
0000000000167360 0000000000000740 T jsimd_h2v2_extbgrx_merged_upsample_neon
0000000000167aa0 0000000000000494 T jsimd_h2v1_extxbgr_merged_upsample_neon
0000000000167f40 0000000000000750 T jsimd_h2v2_extxbgr_merged_upsample_neon
0000000000168690 0000000000000494 T jsimd_h2v1_extxrgb_merged_upsample_neon
0000000000168b30 0000000000000750 T jsimd_h2v2_extxrgb_merged_upsample_neon
0000000000169280 0000000000000154 T jsimd_h2v1_fancy_upsample_neon
00000000001693e0 00000000000002d8 T jsimd_h2v2_fancy_upsample_neon
00000000001696c0 00000000000000b8 T jsimd_h1v2_fancy_upsample_neon
0000000000169780 000000000000005c T jsimd_h2v1_upsample_neon
00000000001697e0 0000000000000078 T jsimd_h2v2_upsample_neon
0000000000169860 00000000000001c8 T jsimd_fdct_ifast_neon
0000000000169a30 0000000000000110 T jsimd_idct_2x2_neon
0000000000169b40 00000000000003bc T jsimd_idct_4x4_neon
0000000000169f00 0000000000000068 T jsimd_convsamp_neon
0000000000169f70 00000000000001e4 T jsimd_quantize_neon
000000000016a160 0000000000000578 T jsimd_idct_ifast_neon
000000000016a6e0 t jsimd_idct_islow_neon
000000000016adbc T jsimd_ycc_extrgb_convert_neon
000000000016b024 T jsimd_ycc_extbgr_convert_neon
000000000016b28c T jsimd_ycc_extrgbx_convert_neon
000000000016b4f4 T jsimd_ycc_extbgrx_convert_neon
000000000016b75c T jsimd_ycc_extxbgr_convert_neon
000000000016b9c4 T jsimd_ycc_extxrgb_convert_neon
000000000016bc2c t jsimd_ycc_rgb565_convert_neon
000000000016bea0 T jsimd_ycc_extrgb_convert_neon_slowst3
000000000016c1c0 T jsimd_ycc_extbgr_convert_neon_slowst3
000000000016c4e0 T jsimd_extrgb_ycc_convert_neon
000000000016c7a4 T jsimd_extbgr_ycc_convert_neon
000000000016ca68 T jsimd_extrgbx_ycc_convert_neon
000000000016cd2c T jsimd_extbgrx_ycc_convert_neon
000000000016cff0 T jsimd_extxbgr_ycc_convert_neon
000000000016d2b4 T jsimd_extxrgb_ycc_convert_neon
000000000016d578 T jsimd_extrgb_ycc_convert_neon_slowld3
000000000016d8f4 T jsimd_extbgr_ycc_convert_neon_slowld3
000000000016dc70 t jsimd_fdct_islow_neon
000000000016dff4 t jsimd_huff_encode_one_block_neon
000000000016e7cc t jsimd_huff_encode_one_block_neon_slowtbl
000000000016f160 000000000000003c T FT_Add_Default_Modules
000000000016f1a0 0000000000000184 T FT_Set_Default_Properties
000000000016f330 0000000000000074 T FT_Init_FreeType
000000000016f3b0 0000000000000038 T FT_Done_FreeType
000000000016f3f0 0000000000000068 t FT_GlyphLoader_Adjust_Points
000000000016f460 0000000000000028 t hash_str_lookup
000000000016f490 0000000000000038 t hash_num_lookup
000000000016f4d0 0000000000000014 t hash_num_compare
000000000016f4f0 0000000000000090 t hash_bucket
000000000016f580 0000000000000078 t destroy_size
000000000016f600 00000000000000ac t find_unicode_charmap
000000000016f6b0 000000000000004c t memory_stream_close
000000000016f700 0000000000000010 t ft_raccess_sort_ref_by_id
000000000016f710 00000000000000dc t ft_trig_pseudo_rotate
000000000016f7f0 00000000000000f8 t ft_trig_pseudo_polarize
000000000016f8f0 000000000000003c t hash_str_compare
000000000016f930 0000000000000154 t ft_property_do
000000000016fa90 00000000000000a8 t destroy_charmaps.part.0
000000000016fb40 00000000000000c0 t raccess_guess_darwin_hfsplus
000000000016fc00 00000000000000c0 t raccess_guess_darwin_newvfs
000000000016fcc0 00000000000000dc t raccess_make_file_name
000000000016fda0 0000000000000054 t raccess_guess_linux_cap
000000000016fe00 0000000000000054 t raccess_guess_vfat
000000000016fe60 0000000000000018 T FT_RoundFix
000000000016fe80 0000000000000064 T FT_MulDiv
000000000016fef0 0000000000000060 t FT_MulDiv_No_Round
000000000016ff50 0000000000000014 T FT_MulFix
000000000016ff70 000000000000007c t ft_recompute_scaled_metrics
000000000016fff0 0000000000000070 T FT_DivFix
0000000000170060 00000000000000d8 T FT_Matrix_Multiply
0000000000170140 00000000000000ac T FT_Matrix_Invert
00000000001701f0 00000000000000fc t FT_Matrix_Multiply_Scaled
00000000001702f0 00000000000000ac t FT_Matrix_Check
00000000001703a0 0000000000000098 t FT_Vector_Transform_Scaled
0000000000170440 00000000000001a0 t FT_Vector_NormLen
00000000001705e0 000000000000001c t ft_corner_orientation
0000000000170600 00000000000000d8 t ft_corner_is_flat
00000000001706e0 000000000000003c t FT_MulAddFix
0000000000170720 0000000000000078 T FT_Palette_Select
00000000001707a0 000000000000002c T FT_Get_Font_Format
00000000001707d0 000000000000002c t FT_GlyphLoader_Rewind
0000000000170800 00000000000000cc t FT_GlyphLoader_Reset
00000000001708d0 000000000000003c t FT_GlyphLoader_Done
0000000000170910 0000000000000088 t FT_GlyphLoader_Prepare
00000000001709a0 00000000000000ac t FT_GlyphLoader_Add
0000000000170a50 0000000000000080 t ft_hash_str_init
0000000000170ad0 0000000000000080 t ft_hash_num_init
0000000000170b50 0000000000000080 t ft_hash_str_free
0000000000170bd0 0000000000000024 t ft_hash_str_lookup
0000000000170c00 0000000000000028 t ft_hash_num_lookup
0000000000170c30 00000000000000e0 t ft_lcd_padding
0000000000170d10 0000000000000058 t ft_service_list_lookup
0000000000170d70 0000000000000014 t ft_validator_init
0000000000170d90 0000000000000018 t ft_validator_error
0000000000170db0 0000000000000064 t FT_Stream_Free
0000000000170e20 0000000000000068 t ft_glyphslot_free_bitmap
0000000000170e90 0000000000000114 t ft_glyphslot_done
0000000000170fb0 000000000000005c t ft_glyphslot_set_bitmap
0000000000171010 00000000000000a0 t FT_Done_GlyphSlot
00000000001710b0 0000000000000024 T FT_Get_Transform
00000000001710e0 0000000000000138 t FT_Match_Size
0000000000171220 0000000000000064 t ft_synthesize_vertical_metrics
0000000000171290 00000000000000b4 t FT_Select_Metrics
0000000000171350 00000000000002c8 t FT_Request_Metrics
0000000000171620 0000000000000064 T FT_Select_Size
0000000000171690 00000000000000b0 T FT_Request_Size
0000000000171740 0000000000000094 T FT_Set_Char_Size
00000000001717e0 0000000000000120 T FT_Get_Kerning
0000000000171900 0000000000000088 T FT_Select_Charmap
0000000000171990 000000000000004c T FT_Get_Char_Index
00000000001719e0 000000000000009c T FT_Get_Next_Char
0000000000171a80 00000000000000bc T FT_Get_Name_Index
0000000000171b40 00000000000000f4 T FT_Get_Glyph_Name
0000000000171c40 00000000000000b4 T FT_Load_Sfnt_Table
0000000000171d00 0000000000000070 T FT_Get_CMap_Format
0000000000171d70 00000000000000a4 T FT_Set_Charmap
0000000000171e20 0000000000000088 t find_variant_selector_charmap.isra.0
0000000000171eb0 0000000000000088 T FT_Face_GetCharVariantIndex
0000000000171f40 0000000000000034 T FT_Activate_Size
0000000000171f80 000000000000004c t FT_Lookup_Renderer
0000000000171fd0 000000000000009c T FT_Get_Module
0000000000172070 0000000000000020 t FT_Get_Module_Interface
0000000000172090 00000000000000bc t ft_module_get_service
0000000000172150 000000000000000c t ft_property_string_set
0000000000172160 0000000000000088 T FT_New_Library
00000000001721f0 0000000000000048 T FT_Get_Color_Glyph_Layer
0000000000172240 0000000000000034 T FT_Get_Color_Glyph_Paint
0000000000172280 0000000000000030 T FT_Get_Color_Glyph_ClipBox
00000000001722b0 0000000000000034 T FT_Get_Paint_Layers
00000000001722f0 0000000000000030 T FT_Get_Paint
0000000000172320 0000000000000034 T FT_Get_Colorline_Stops
0000000000172360 00000000000003b0 T FT_Outline_Decompose
0000000000172710 0000000000000084 T FT_Outline_Check
00000000001727a0 00000000000000c4 T FT_Outline_Copy
0000000000172870 00000000000000a0 T FT_Outline_Done
0000000000172910 0000000000000084 T FT_Outline_Get_CBox
00000000001729a0 00000000000002a0 t ft_glyphslot_preset_bitmap
0000000000172c40 0000000000000048 T FT_Outline_Translate
0000000000172c90 000000000000007c T FT_Vector_Transform
0000000000172d10 0000000000000064 T FT_Outline_Transform
0000000000172d80 00000000000001bc T FT_Outline_Get_Orientation
0000000000172f40 00000000000003ac T FT_Outline_EmboldenXY
00000000001732f0 000000000000022c T ps_property_set
0000000000173520 00000000000000cc T ps_property_get
00000000001735f0 00000000000000f0 t FT_Raccess_Guess
00000000001736e0 0000000000000014 t FT_Stream_OpenMemory
0000000000173700 0000000000000018 t FT_Stream_Close
0000000000173720 000000000000005c t FT_Stream_Seek
0000000000173780 0000000000000070 t FT_Stream_Skip
00000000001737f0 0000000000000008 t FT_Stream_Pos
0000000000173800 00000000000000a0 t FT_Stream_Read
00000000001738a0 000000000000009c t FT_Stream_ReadAt
0000000000173940 0000000000000090 t FT_Stream_TryRead
00000000001739d0 0000000000000040 t FT_Stream_ReleaseFrame
0000000000173a10 0000000000000170 t FT_Stream_EnterFrame
0000000000173b80 0000000000000034 t FT_Stream_ExtractFrame
0000000000173bc0 0000000000000040 t FT_Stream_ExitFrame
0000000000173c00 0000000000000024 t FT_Stream_GetByte
0000000000173c30 0000000000000034 t FT_Stream_GetUShort
0000000000173c70 000000000000002c t FT_Stream_GetUShortLE
0000000000173ca0 0000000000000030 t FT_Stream_GetULong
0000000000173cd0 000000000000002c t FT_Stream_GetULongLE
0000000000173d00 0000000000000094 t FT_Stream_ReadByte
0000000000173da0 00000000000000a8 t FT_Stream_ReadUShort
0000000000173e50 000000000000031c t FT_Raccess_Get_HeaderInfo
0000000000174170 00000000000000a0 t FT_Stream_ReadUShortLE
0000000000174210 00000000000000b8 t FT_Stream_ReadUOffset
00000000001742d0 00000000000000a4 t FT_Stream_ReadULong
0000000000174380 0000000000000448 t FT_Raccess_Get_DataOffsets
00000000001747d0 0000000000000198 t raccess_guess_apple_generic.isra.0
0000000000174970 0000000000000024 t raccess_guess_apple_double
00000000001749a0 0000000000000024 t raccess_guess_apple_single
00000000001749d0 00000000000000a0 t FT_Stream_ReadULongLE
0000000000174a70 0000000000000284 t FT_Stream_ReadFields
0000000000174d00 0000000000000028 T FT_Tan
0000000000174d30 000000000000008c T FT_Atan2
0000000000174dc0 0000000000000044 T FT_Vector_Unit
0000000000174e10 0000000000000020 T FT_Cos
0000000000174e30 0000000000000020 T FT_Sin
0000000000174e50 0000000000000164 T FT_Vector_Rotate
0000000000174fc0 0000000000000118 T FT_Vector_Length
00000000001750e0 0000000000000020 t FT_Hypot
0000000000175100 0000000000000018 T FT_Vector_From_Polar
0000000000175120 0000000000000048 T FT_Angle_Diff
0000000000175170 0000000000000088 t ft_mem_alloc
0000000000175200 0000000000000160 t FT_Stream_New
0000000000175360 000000000000007c t ft_glyphslot_alloc_bitmap
00000000001753e0 0000000000000220 t open_face
0000000000175600 0000000000000200 t FT_New_GlyphSlot
0000000000175800 0000000000000254 t FT_Render_Glyph_Internal
0000000000175a60 0000000000000028 T FT_Render_Glyph
0000000000175a90 0000000000000604 T FT_Load_Glyph
00000000001760a0 00000000000001ec T FT_Get_Advances
0000000000176290 000000000000011c T FT_Get_Advance
00000000001763b0 00000000000000e8 t raccess_guess_linux_double_from_file_name
00000000001764a0 00000000000000b8 t raccess_guess_linux_netatalk
0000000000176560 00000000000000b8 t raccess_guess_linux_double
0000000000176620 00000000000000b8 t raccess_guess_darwin_ufs_export
00000000001766e0 000000000000005c t ft_mem_qalloc
0000000000176740 00000000000000dc t ft_mem_qrealloc
0000000000176820 000000000000016c t FT_CMap_New
0000000000176990 0000000000000090 t ft_mem_realloc
0000000000176a20 000000000000008c t FT_GlyphLoader_CreateExtra
0000000000176ab0 000000000000025c t FT_GlyphLoader_CheckPoints
0000000000176d10 000000000000009c t FT_GlyphLoader_CheckSubGlyphs
0000000000176db0 0000000000000184 T FT_Outline_New
0000000000176f40 0000000000000134 t hash_insert
0000000000177080 0000000000000004 t ft_hash_str_insert
0000000000177090 0000000000000008 t ft_hash_num_insert
00000000001770a0 0000000000000014 t ft_mem_free
00000000001770c0 00000000000000ac t ft_mem_strdup
0000000000177170 0000000000000040 t ft_mem_strcpyn
00000000001771b0 0000000000000030 T FT_List_Find
00000000001771e0 0000000000000030 T FT_List_Add
0000000000177210 0000000000000180 T FT_New_Size
0000000000177390 0000000000000034 T FT_List_Remove
00000000001773d0 00000000000000ec T FT_Done_Size
00000000001774c0 0000000000000060 T FT_List_Iterate
0000000000177520 0000000000000084 T FT_List_Finalize
00000000001775b0 0000000000000108 t destroy_face
00000000001776c0 00000000000000c0 T FT_Done_Face
0000000000177780 0000000000000940 t ft_open_face_internal
00000000001780c0 0000000000000118 t open_face_from_buffer
00000000001781e0 000000000000038c t open_face_PS_from_sfnt_stream.isra.0
0000000000178570 00000000000007a8 t IsMacResource
0000000000178d20 0000000000000008 T FT_Open_Face
0000000000178d30 00000000000001dc T FT_Remove_Module
0000000000178f10 00000000000002e0 T FT_Add_Module
00000000001791f0 000000000000013c T FT_Done_Library
0000000000179330 0000000000000038 t ft_bitmap_glyph_bbox
0000000000179370 0000000000000034 t ft_outline_glyph_prepare
00000000001793b0 0000000000000020 t ft_bitmap_glyph_copy
00000000001793d0 000000000000000c t ft_bitmap_glyph_done
00000000001793e0 00000000000000ac t ft_bitmap_glyph_init
0000000000179490 0000000000000008 t ft_outline_glyph_bbox
00000000001794a0 0000000000000068 t ft_outline_glyph_copy
0000000000179510 0000000000000090 t ft_outline_glyph_init
00000000001795a0 000000000000000c t ft_outline_glyph_done
00000000001795b0 00000000000000ac t ft_svg_glyph_prepare
0000000000179660 00000000000000e0 t ft_svg_glyph_transform
0000000000179740 00000000000000e4 t ft_svg_glyph_copy
0000000000179830 00000000000000fc t ft_svg_glyph_init
0000000000179930 0000000000000030 t ft_svg_glyph_done
0000000000179960 0000000000000044 t ft_outline_glyph_transform
00000000001799b0 00000000000000e4 T FT_New_Glyph
0000000000179aa0 0000000000000074 T FT_Glyph_Transform
0000000000179b20 0000000000000040 T FT_Done_Glyph
0000000000179b60 0000000000000108 T FT_Glyph_Copy
0000000000179c70 0000000000000114 T FT_Get_Glyph
0000000000179d90 0000000000000278 T FT_Glyph_To_Bitmap
000000000017a010 00000000000000fc t ft_stroke_border_close
000000000017a110 0000000000000094 t ft_stroke_border_get_counts
000000000017a1b0 00000000000000e0 t ft_stroke_border_grow
000000000017a290 0000000000000084 t ft_stroke_border_cubicto
000000000017a320 0000000000000198 t ft_stroke_border_arcto
000000000017a4c0 00000000000000e4 t ft_stroke_border_lineto
000000000017a5b0 00000000000003fc t ft_stroker_process_corner
000000000017a9b0 00000000000000a4 t ft_stroker_cap.part.0.constprop.0
000000000017aa60 00000000000000d8 t ft_stroker_subpath_start
000000000017ab40 00000000000007d0 t FT_Stroker_CubicTo.part.0
000000000017b310 00000000000005b0 t FT_Stroker_ConicTo.part.0
000000000017b8c0 00000000000000a0 T FT_Stroker_New
000000000017b960 0000000000000024 T FT_Stroker_Rewind
000000000017b990 0000000000000024 T FT_Stroker_Set
000000000017b9c0 00000000000000ac T FT_Stroker_Done
000000000017ba70 0000000000000144 T FT_Stroker_LineTo
000000000017bbc0 000000000000001c T FT_Stroker_ConicTo
000000000017bbe0 0000000000000024 T FT_Stroker_CubicTo
000000000017bc10 0000000000000064 T FT_Stroker_BeginSubPath
000000000017bc80 0000000000000278 T FT_Stroker_EndSubPath
000000000017bf00 0000000000000098 T FT_Stroker_GetCounts
000000000017bfa0 000000000000013c T FT_Stroker_ExportBorder
000000000017c0e0 0000000000000038 T FT_Stroker_Export
000000000017c120 0000000000000314 T FT_Stroker_ParseOutline
000000000017c440 0000000000000148 T FT_Glyph_Stroke
000000000017c590 000000000000003c t tt_get_kerning
000000000017c5d0 000000000000007c t tt_get_metrics_incremental
000000000017c650 0000000000000074 t TT_Load_Glyph_Header
000000000017c6d0 0000000000000084 t tt_loader_set_pp
000000000017c760 0000000000000408 t ft_var_get_value_pointer
000000000017cb70 0000000000000020 t ft_size_reset_iterator
000000000017cb90 0000000000000014 t tt_cvt_ready_iterator
000000000017cbb0 0000000000000060 t tt_get_var_blend
000000000017cc10 000000000000004c t TT_MulFix14
000000000017cc60 000000000000006c t TT_DotFix14
000000000017ccd0 0000000000000008 t Current_Ppem
000000000017cce0 000000000000000c t Read_CVT
000000000017ccf0 0000000000000068 t Direct_Move_X
000000000017cd60 000000000000005c t Direct_Move_Y
000000000017cdc0 0000000000000018 t Direct_Move_Orig_X
000000000017cde0 0000000000000018 t Direct_Move_Orig_Y
000000000017ce00 0000000000000028 t Round_None
000000000017ce30 000000000000003c t Round_To_Grid
000000000017ce70 0000000000000040 t Round_To_Half_Grid
000000000017ceb0 0000000000000034 t Round_Down_To_Grid
000000000017cef0 000000000000003c t Round_Up_To_Grid
000000000017cf30 000000000000003c t Round_To_Double_Grid
000000000017cf70 0000000000000058 t Round_Super
000000000017cfd0 0000000000000058 t Round_Super_45
000000000017d030 000000000000002c t Project
000000000017d060 000000000000002c t Dual_Project
000000000017d090 0000000000000008 t Project_x
000000000017d0a0 0000000000000008 t Project_y
000000000017d0b0 000000000000012c t Compute_Funcs
000000000017d1e0 0000000000000090 t SkipCode
000000000017d270 00000000000000bc t Move_Zp2_Point
000000000017d330 0000000000000020 t tt_size_init
000000000017d350 0000000000000014 t tt_driver_init
000000000017d370 0000000000000004 t tt_driver_done
000000000017d380 00000000000000f8 t tt_face_get_location
000000000017d480 0000000000000018 t compare_ppem
000000000017d4a0 00000000000000c4 t tt_size_reset_height
000000000017d570 0000000000000110 t ft_var_apply_tuple
000000000017d680 00000000000000b4 t Direct_Move_Orig
000000000017d740 000000000000011c t Direct_Move
000000000017d860 0000000000000090 t TT_Done_Context
000000000017d8f0 0000000000000078 t tt_glyphzone_done
000000000017d970 0000000000000090 t tt_size_done_bytecode
000000000017da00 0000000000000024 t tt_size_done
000000000017da30 0000000000000040 t tt_var_done_delta_set_index_map
000000000017da70 00000000000000d8 t tt_var_done_item_variation_store
000000000017db50 000000000000002c t tt_construct_ps_name
000000000017db80 00000000000001f0 t TT_Load_Context
000000000017dd70 0000000000000170 t tt_size_run_prep
000000000017dee0 0000000000000258 t TT_Hint_Glyph
000000000017e140 0000000000000068 t TT_Access_Glyph_Frame
000000000017e1b0 0000000000000008 t TT_Forget_Glyph_Frame
000000000017e1c0 00000000000001ec t ft_var_readpackedpoints
000000000017e3b0 00000000000001a8 t ft_var_readpackeddeltas
000000000017e560 0000000000000094 t Current_Ratio
000000000017e600 00000000000003dc t TT_Load_Simple_Glyph
000000000017e9e0 000000000000000c t tt_slot_init
000000000017e9f0 000000000000067c t tt_face_vary_cvt
000000000017f070 0000000000000104 t tt_face_load_cvt
000000000017f180 0000000000000988 t tt_face_init
000000000017fb10 0000000000000284 t TT_Load_Composite_Glyph
000000000017fda0 000000000000004c t tt_property_get
000000000017fdf0 00000000000003fc t tt_var_get_item_delta
00000000001801f0 00000000000001b0 t tt_apply_mvar
00000000001803a0 00000000000002c8 t ft_var_to_normalized
0000000000180670 00000000000004e0 t tt_var_load_item_variation_store
0000000000180b50 0000000000000254 t tt_var_load_delta_set_index_mapping
0000000000180db0 0000000000000234 t ft_var_load_hvvar
0000000000180ff0 00000000000000f4 t tt_hvadvance_adjust
00000000001810f0 0000000000000008 t tt_vadvance_adjust
0000000000181100 0000000000000008 t tt_hadvance_adjust
0000000000181110 00000000000002bc t ft_var_load_avar
00000000001813d0 00000000000009bc t TT_Get_MM_Var
0000000000181d90 0000000000000044 t TT_Get_Default_Named_Instance
0000000000181de0 000000000000009c t TT_Get_VMetrics
0000000000181e80 0000000000000134 t tt_get_advances
0000000000181fc0 0000000000000188 t tt_delta_interpolate.part.0
0000000000182150 0000000000000d74 t TT_Vary_Apply_Glyph_Deltas
0000000000182ed0 000000000000019c t iup_worker_interpolate_
0000000000183070 000000000000007c t Modify_CVT_Check.part.0
00000000001830f0 000000000000004c t Write_CVT
0000000000183140 000000000000006c t Move_CVT_Stretched
00000000001831b0 0000000000000060 t Write_CVT_Stretched
0000000000183210 0000000000000088 t tt_get_interface
00000000001832a0 00000000000000b0 t tt_property_set
0000000000183350 00000000000001c0 t Ins_DELTAP.constprop.0
0000000000183510 00000000000003cc t Ins_IP.constprop.0
00000000001838e0 0000000000000264 t Ins_ISECT.constprop.0
0000000000183b50 0000000000000280 t Ins_MIRP.constprop.0
0000000000183dd0 0000000000000138 t Compute_Point_Displacement.constprop.0
0000000000183f10 000000000000008c t Ins_JMPR.constprop.0
0000000000183fa0 00000000000000fc t SetSuperRound.constprop.0
00000000001840a0 0000000000000160 t tt_size_reset
0000000000184200 0000000000000064 t tt_size_select
0000000000184270 0000000000000110 t tt_size_request
0000000000184380 0000000000000054 t Move_CVT
00000000001843e0 00000000000002b0 t Ins_IUP.constprop.0
0000000000184690 0000000000000790 t tt_set_mm_blend
0000000000184e20 0000000000000008 t TT_Set_MM_Blend
0000000000184e30 00000000000000f4 t TT_Get_Var_Design
0000000000184f30 000000000000024c t TT_Set_Var_Design
0000000000185180 0000000000000120 t TT_Set_Named_Instance
00000000001852a0 00000000000000f4 t TT_Get_MM_Blend
00000000001853a0 0000000000001084 t load_truetype_glyph
0000000000186430 0000000000000100 t Ins_SxVTL.constprop.0
0000000000186530 000000000000021c t tt_done_blend
0000000000186750 00000000000000c4 t tt_face_done
0000000000186820 0000000000000098 t Current_Ppem_Stretched
00000000001868c0 000000000000009c t Read_CVT_Stretched
0000000000186960 000000000000010c t Ins_UNKNOWN.constprop.0
0000000000186a70 0000000000002ab8 T TT_RunIns
0000000000189530 0000000000000098 T TT_New_Context
00000000001895d0 0000000000000f04 t TT_Load_Glyph
000000000018a4e0 00000000000000c8 t tt_glyph_load
000000000018a5b0 0000000000000020 t compare_kern_pairs
000000000018a5d0 0000000000000008 t t1_get_ps_name
000000000018a5e0 0000000000000024 t t1_ps_get_font_info
000000000018a610 0000000000000010 t t1_ps_get_font_extra
000000000018a620 0000000000000008 t t1_ps_has_glyph_names
000000000018a630 0000000000000044 t t1_ps_get_font_private
000000000018a680 0000000000000068 t T1_Get_Multi_Master
000000000018a6f0 00000000000000c4 t T1_Set_MM_WeightVector
000000000018a7c0 00000000000000ac t T1_Get_MM_WeightVector
000000000018a870 0000000000000038 t parse_buildchar
000000000018a8b0 0000000000000010 t parse_private
000000000018a8c0 00000000000000d0 t read_binary_data
000000000018a990 0000000000000010 t T1_GlyphSlot_Done
000000000018a9a0 0000000000000078 t T1_Driver_Init
000000000018aa20 0000000000000004 t T1_Driver_Done
000000000018aa30 0000000000000050 t T1_GlyphSlot_Init
000000000018aa80 00000000000001d0 t T1_Parse_Glyph_And_Get_Char_String
000000000018ac50 0000000000000060 t T1_Parse_Glyph
000000000018acb0 0000000000000144 t T1_Compute_Max_Advance
000000000018ae00 000000000000012c t T1_Get_Advances
000000000018af30 0000000000000174 t T1_Done_Blend
000000000018b0b0 00000000000004b4 t parse_encoding
000000000018b570 00000000000004b4 t T1_Load_Glyph
000000000018ba30 000000000000007c t t1_get_name_index
000000000018bab0 00000000000001ec t t1_allocate_blend
000000000018bca0 0000000000000164 t parse_weight_vector
000000000018be10 00000000000002b0 t parse_blend_design_positions
000000000018c0c0 0000000000000590 t parse_dict
000000000018c650 0000000000000090 t read_pfb_tag
000000000018c6e0 0000000000000644 t parse_charstrings
000000000018cd30 00000000000003d8 t parse_subrs
000000000018d110 0000000000000130 t t1_parse_font_matrix
000000000018d240 000000000000000c t Get_Interface
000000000018d250 00000000000000a0 t mm_axis_unmap
000000000018d2f0 00000000000000ec t T1_Get_Track_Kerning
000000000018d3e0 00000000000006d8 t t1_ps_get_font_value
000000000018dac0 0000000000000028 t t1_get_glyph_name
000000000018daf0 000000000000015c t mm_weights_unmap
000000000018dc50 0000000000000098 t T1_Get_MM_Blend
000000000018dcf0 00000000000000d0 t T1_Get_Var_Design
000000000018ddc0 000000000000025c t T1_Get_MM_Var
000000000018e020 00000000000000c4 t t1_get_index
000000000018e0f0 00000000000000a4 t check_type1_format.part.0
000000000018e1a0 0000000000000090 t Get_Kerning
000000000018e230 0000000000000058 t T1_Size_Get_Globals_Funcs.isra.0
000000000018e290 0000000000000060 t T1_Size_Init
000000000018e2f0 000000000000004c t T1_Size_Done
000000000018e340 0000000000000070 t T1_Size_Request
000000000018e3b0 000000000000011c t t1_set_mm_blend.isra.0
000000000018e4d0 0000000000000154 t T1_Set_MM_Design
000000000018e630 000000000000007c t T1_Set_Var_Design
000000000018e6b0 0000000000000010 t T1_Reset_MM_Blend
000000000018e6c0 0000000000000008 t T1_Set_MM_Blend
000000000018e6d0 0000000000000a88 t T1_Open_Face
000000000018f160 0000000000000428 t T1_Face_Init
000000000018f590 00000000000001b4 t T1_Face_Done
000000000018f750 00000000000003e8 t T1_Read_Metrics
000000000018fb40 00000000000001ac t parse_blend_axis_types
000000000018fcf0 00000000000002a0 t parse_blend_design_map
000000000018ff90 000000000000001c t cff_cmap_encoding_init
000000000018ffb0 0000000000000008 t cff_cmap_encoding_done
000000000018ffc0 000000000000001c t cff_cmap_encoding_char_index
000000000018ffe0 0000000000000040 t cff_cmap_encoding_char_next
0000000000190020 000000000000004c t cff_cmap_unicode_init
0000000000190070 0000000000000018 t cff_cmap_unicode_char_index
0000000000190090 0000000000000018 t cff_cmap_unicode_char_next
00000000001900b0 000000000000003c t cff_get_kerning
00000000001900f0 000000000000000c t cff_ps_has_glyph_names
0000000000190100 000000000000002c t cff_get_is_cid
0000000000190130 0000000000000048 t cff_get_cid_from_glyph_index
0000000000190180 0000000000000010 t cff_set_mm_blend
0000000000190190 0000000000000010 t cff_get_mm_blend
00000000001901a0 0000000000000010 t cff_set_mm_weightvector
00000000001901b0 0000000000000010 t cff_get_mm_weightvector
00000000001901c0 0000000000000010 t cff_construct_ps_name
00000000001901d0 0000000000000010 t cff_get_mm_var
00000000001901e0 0000000000000010 t cff_set_var_design
00000000001901f0 0000000000000010 t cff_get_var_design
0000000000190200 0000000000000010 t cff_set_named_instance
0000000000190210 0000000000000010 t cff_get_default_named_instance
0000000000190220 0000000000000010 t cff_load_item_variation_store
0000000000190230 0000000000000010 t cff_load_delta_set_index_mapping
0000000000190240 0000000000000010 t cff_get_item_delta
0000000000190250 0000000000000010 t cff_done_item_variation_store
0000000000190260 0000000000000010 t cff_done_delta_set_index_map
0000000000190270 0000000000000010 t cff_hadvance_adjust
0000000000190280 0000000000000010 t cff_metrics_adjust
0000000000190290 00000000000000d0 t cff_parse_integer
0000000000190360 0000000000000020 t cff_get_standard_encoding
0000000000190380 00000000000000ac t cff_fd_select_get
0000000000190430 0000000000000010 t cff_get_var_blend
0000000000190440 0000000000000018 t cff_done_blend
0000000000190460 0000000000000010 t cff_slot_done
0000000000190470 0000000000000078 t cff_driver_init
00000000001904f0 0000000000000004 t cff_driver_done
0000000000190500 0000000000000034 t cff_cmap_unicode_done
0000000000190540 00000000000000c4 t cff_vstore_done
0000000000190610 0000000000000054 t cff_slot_init
0000000000190670 0000000000000178 t cff_make_private_dict
00000000001907f0 0000000000000050 t cff_index_done
0000000000190840 00000000000000a0 t cff_get_cmap_info
00000000001908e0 0000000000000084 t cff_get_ps_name
0000000000190970 0000000000000420 t cff_parse_real
0000000000190d90 0000000000000128 t cff_get_name_index
0000000000190ec0 00000000000000f0 t cff_charset_compute_cids
0000000000190fb0 0000000000000064 t cff_blend_check_vector
0000000000191020 0000000000000290 t cff_blend_build_vector
00000000001912b0 0000000000000408 t cff_index_get_pointers
00000000001916c0 0000000000000058 t cff_index_get_sid_string
0000000000191720 00000000000000c4 t cff_get_ros
00000000001917f0 0000000000000118 t cff_ps_get_font_info
0000000000191910 00000000000000d4 t cff_get_glyph_name
00000000001919f0 0000000000000144 t cff_ps_get_font_extra
0000000000191b40 0000000000000068 t cff_subfont_done.part.0
0000000000191bb0 000000000000007c t cff_get_interface
0000000000191c30 0000000000000058 t cff_size_get_globals_funcs.isra.0
0000000000191c90 0000000000000170 t cff_size_init
0000000000191e00 000000000000008c t cff_size_done
0000000000191e90 0000000000000108 t cff_size_select
0000000000191fa0 00000000000001a0 t cff_size_request
0000000000192140 00000000000001e8 t cff_face_done
0000000000192330 0000000000000308 t cff_parse_font_matrix
0000000000192640 00000000000000f8 t do_fixed.isra.0
0000000000192740 00000000000000b8 t cff_parse_font_bbox
0000000000192800 0000000000000074 t cff_parse_num.isra.0
0000000000192880 000000000000008c t cff_parse_private_dict
0000000000192910 0000000000000080 t cff_parse_multiple_master
0000000000192990 0000000000000084 t cff_parse_cid_ros
0000000000192a20 0000000000000060 t cff_parse_vsindex
0000000000192a80 0000000000000354 t cff_parser_run
0000000000192de0 000000000000021c t cff_load_private_dict
0000000000193000 0000000000000058 t cff_free_glyph_data
0000000000193060 0000000000000310 t cff_parse_blend
0000000000193370 0000000000000260 t cff_index_access_element
00000000001935d0 0000000000000058 t cff_get_glyph_data
0000000000193630 0000000000000898 t cff_slot_load
0000000000193ed0 0000000000000038 t cff_glyph_load
0000000000193f10 0000000000000220 t cff_get_advances
0000000000194130 00000000000000d8 t cff_index_get_name
0000000000194210 00000000000001c4 t cff_index_init
00000000001943e0 0000000000000354 t cff_subfont_load
0000000000194740 0000000000001da4 t cff_face_init
00000000001964f0 0000000000000060 t cff_sid_to_glyph_name
0000000000196550 00000000000000b0 t cff_parse_maxstack
0000000000196600 0000000000000054 t parse_expansion_factor
0000000000196660 0000000000000004 t parse_font_name
0000000000196670 0000000000000010 t cid_slot_done
0000000000196680 0000000000000078 t cid_driver_init
0000000000196700 0000000000000004 t cid_driver_done
0000000000196710 0000000000000018 t cid_get_postscript_name
0000000000196730 0000000000000024 t cid_ps_get_font_info
0000000000196760 0000000000000010 t cid_ps_get_font_extra
0000000000196770 000000000000002c t cid_get_ros
00000000001967a0 0000000000000014 t cid_get_is_cid
00000000001967c0 0000000000000050 t cid_slot_init
0000000000196810 0000000000000154 t cid_face_done
0000000000196970 000000000000016c t cid_compute_fd_and_offsets
0000000000196ae0 00000000000003a0 t cid_load_glyph
0000000000196e80 00000000000003e0 t cid_slot_load_glyph
0000000000197260 000000000000003c t cid_get_cid_from_glyph_index
00000000001972a0 0000000000000164 t cid_parse_font_matrix
0000000000197410 0000000000000100 t parse_fd_array
0000000000197510 000000000000000c t cid_get_interface
0000000000197520 0000000000000058 t cid_size_get_globals_funcs.isra.0
0000000000197580 0000000000000070 t cid_size_init
00000000001975f0 000000000000004c t cid_size_done
0000000000197640 000000000000006c t cid_size_request
00000000001976b0 0000000000000d40 t cid_face_open
00000000001983f0 0000000000000298 t cid_face_init
0000000000198690 0000000000000060 t pfr_cmap_init
00000000001986f0 000000000000000c t pfr_cmap_done
0000000000198700 0000000000000070 t pfr_cmap_char_index
0000000000198770 00000000000000c0 t pfr_cmap_char_next
0000000000198830 0000000000000044 t pfr_get_advance
0000000000198880 00000000000000a8 t pfr_glyph_close_contour
0000000000198930 00000000000001ec t pfr_face_get_kerning
0000000000198b20 0000000000000228 t pfr_extra_item_load_bitmap_info
0000000000198d50 0000000000000058 t pfr_slot_done
0000000000198db0 0000000000000034 t pfr_slot_init
0000000000198df0 0000000000000114 t pfr_extra_item_load_stem_snaps
0000000000198f10 000000000000014c t pfr_extra_item_load_kerning_pairs
0000000000199060 000000000000009c t pfr_extra_item_load_font_id
0000000000199100 00000000000000e8 t pfr_aux_name_load
00000000001991f0 000000000000000c t pfr_get_service
0000000000199200 0000000000000090 t pfr_get_metrics
0000000000199290 0000000000000080 t pfr_get_kerning
0000000000199310 00000000000000f8 t pfr_face_done
0000000000199410 000000000000008c t pfr_glyph_line_to.isra.0
00000000001994a0 0000000000000a6c t pfr_glyph_load_rec
0000000000199f10 0000000000000a20 t pfr_slot_load
000000000019a930 0000000000000cb0 t pfr_face_init
000000000019b5e0 0000000000000008 t t42_get_ps_font_name
000000000019b5f0 0000000000000024 t t42_ps_get_font_info
000000000019b620 0000000000000010 t t42_ps_get_font_extra
000000000019b630 0000000000000008 t t42_ps_has_glyph_names
000000000019b640 0000000000000004 t T42_Driver_Done
000000000019b650 000000000000006c t T42_Size_Select
000000000019b6c0 000000000000006c t T42_Size_Request
000000000019b730 0000000000000148 t T42_GlyphSlot_Load
000000000019b880 000000000000000c t T42_GlyphSlot_Done
000000000019b890 0000000000000098 t T42_GlyphSlot_Init
000000000019b930 000000000000005c t T42_Size_Init
000000000019b990 0000000000000138 t T42_Face_Done
000000000019bad0 000000000000004c t T42_Driver_Init
000000000019bb20 0000000000000510 t t42_parse_charstrings
000000000019c030 00000000000000ac t t42_get_name_index
000000000019c0e0 00000000000004ec t t42_parse_sfnts
000000000019c5d0 0000000000000120 t t42_parse_font_matrix
000000000019c6f0 000000000000000c t T42_Get_Interface
000000000019c700 0000000000000028 t t42_get_glyph_name
000000000019c730 0000000000000040 t T42_Size_Done
000000000019c770 0000000000000a3c t T42_Face_Init
000000000019d1b0 0000000000000478 t t42_parse_encoding
000000000019d630 000000000000002c t fnt_cmap_init
000000000019d660 0000000000000014 t fnt_cmap_char_index
000000000019d680 0000000000000050 t fnt_cmap_char_next
000000000019d6d0 0000000000000048 t winfnt_get_header
000000000019d720 0000000000000058 t FNT_Size_Select
000000000019d780 0000000000000250 t FNT_Load_Glyph
000000000019d9d0 0000000000000064 t fnt_font_done
000000000019da40 00000000000000d4 t fnt_font_load
000000000019db20 000000000000000c t winfnt_get_service
000000000019db30 0000000000000aa0 t FNT_Face_Init
000000000019e5d0 0000000000000040 t FNT_Face_Done
000000000019e610 0000000000000100 t FNT_Size_Request
000000000019e710 0000000000000018 t pcf_cmap_init
000000000019e730 0000000000000008 t pcf_cmap_done
000000000019e740 0000000000000058 t pcf_cmap_char_index
000000000019e7a0 00000000000000c0 t pcf_cmap_char_next
000000000019e860 000000000000001c t pcf_get_charset_id
000000000019e880 0000000000000008 t pcf_property_set
000000000019e890 0000000000000008 t pcf_property_get
000000000019e8a0 0000000000000008 t pcf_driver_init
000000000019e8b0 0000000000000004 t pcf_driver_done
000000000019e8c0 000000000000004c t PCF_Size_Select
000000000019e910 00000000000002a8 t PCF_Glyph_Load
000000000019ebc0 000000000000000c t pcf_driver_requester
000000000019ebd0 0000000000000168 t PCF_Face_Done.part.0
000000000019ed40 000000000000000c t PCF_Face_Done
000000000019ed50 0000000000000090 t pcf_find_property.isra.0
000000000019ede0 0000000000000070 t pcf_get_bdf_property
000000000019ee50 00000000000000f0 t PCF_Size_Request
000000000019ef40 0000000000000230 t pcf_get_accel
000000000019f170 0000000000001494 t pcf_load_font
00000000001a0610 0000000000000270 t PCF_Face_Init
00000000001a0880 00000000000000b8 t bdf_atol_
00000000001a0940 00000000000000c0 t bdf_atos_
00000000001a0a00 0000000000000018 t by_encoding
00000000001a0a20 0000000000000008 t bdf_parse_end_
00000000001a0a30 000000000000001c t bdf_cmap_init
00000000001a0a50 0000000000000008 t bdf_cmap_done
00000000001a0a60 0000000000000078 t bdf_cmap_char_index
00000000001a0ae0 00000000000000c8 t bdf_cmap_char_next
00000000001a0bb0 000000000000001c t bdf_get_charset_id
00000000001a0bd0 0000000000000048 t BDF_Size_Select
00000000001a0c20 0000000000000148 t BDF_Glyph_Load
00000000001a0d70 000000000000009c t bdf_list_ensure_
00000000001a0e10 0000000000000088 t bdf_add_comment_
00000000001a0ea0 000000000000000c t bdf_driver_requester
00000000001a0eb0 0000000000000088 t bdf_atoul_
00000000001a0f40 0000000000000088 t bdf_atous_
00000000001a0fd0 00000000000001cc t bdf_free_font.part.0
00000000001a11a0 00000000000000a4 t BDF_Face_Done
00000000001a1250 0000000000000258 t bdf_list_split_.part.0
00000000001a14b0 00000000000000a4 t bdf_list_join_.constprop.0
00000000001a1560 0000000000000058 t bdf_list_shift_.constprop.0
00000000001a15c0 000000000000053c t bdf_add_property_.isra.0
00000000001a1b00 00000000000000f0 t BDF_Size_Request
00000000001a1bf0 00000000000000b0 t bdf_get_bdf_property
00000000001a1ca0 00000000000003c4 t bdf_parse_properties_
00000000001a2070 0000000000001010 t BDF_Face_Init
00000000001a3080 00000000000008a0 t bdf_parse_start_
00000000001a3920 0000000000000c64 t bdf_parse_glyphs_
00000000001a4590 0000000000000098 t premultiply_data
00000000001a4630 0000000000000048 t convert_bytes_to_data
00000000001a4680 0000000000000004 t warning_callback
00000000001a4690 0000000000000094 t get_sfnt_table
00000000001a4730 0000000000000060 t sfnt_table_info
00000000001a4790 0000000000000034 t sfnt_is_postscript
00000000001a47d0 0000000000000028 t sfnt_is_alphanumeric
00000000001a4800 00000000000000d4 t sfnt_get_name_id
00000000001a48e0 0000000000000020 t compare_offsets
00000000001a4900 0000000000000010 t tt_cmap_init
00000000001a4910 0000000000000020 t tt_cmap0_char_index
00000000001a4930 0000000000000044 t tt_cmap0_char_next
00000000001a4980 0000000000000020 t tt_cmap0_get_info
00000000001a49a0 0000000000000058 t tt_cmap2_get_subheader
00000000001a4a00 000000000000008c t tt_cmap2_char_index
00000000001a4a90 00000000000001ac t tt_cmap2_char_next
00000000001a4c40 0000000000000024 t tt_cmap2_get_info
00000000001a4c70 0000000000000028 t tt_cmap4_init
00000000001a4ca0 0000000000000114 t tt_cmap4_set_range
00000000001a4dc0 0000000000000154 t tt_cmap4_next
00000000001a4f20 0000000000000234 t tt_cmap4_char_map_linear
00000000001a5160 00000000000005a4 t tt_cmap4_char_map_binary
00000000001a5710 0000000000000050 t tt_cmap4_char_index
00000000001a5760 0000000000000080 t tt_cmap4_char_next
00000000001a57e0 0000000000000024 t tt_cmap4_get_info
00000000001a5810 0000000000000040 t tt_cmap6_char_index
00000000001a5850 00000000000000a4 t tt_cmap6_char_next
00000000001a5900 0000000000000024 t tt_cmap6_get_info
00000000001a5930 000000000000008c t tt_cmap8_char_index
00000000001a59c0 0000000000000128 t tt_cmap8_char_next
00000000001a5af0 0000000000000020 t tt_cmap8_get_info
00000000001a5b10 000000000000004c t tt_cmap10_char_index
00000000001a5b60 000000000000008c t tt_cmap10_char_next
00000000001a5bf0 0000000000000020 t tt_cmap10_get_info
00000000001a5c10 0000000000000020 t tt_cmap12_init
00000000001a5c30 00000000000000e8 t tt_cmap12_next
00000000001a5d20 0000000000000140 t tt_cmap12_char_map_binary
00000000001a5e60 0000000000000020 t tt_cmap12_char_index
00000000001a5e80 0000000000000020 t tt_cmap12_get_info
00000000001a5ea0 0000000000000020 t tt_cmap13_init
00000000001a5ec0 0000000000000084 t tt_cmap13_next
00000000001a5f50 0000000000000124 t tt_cmap13_char_map_binary
00000000001a6080 0000000000000020 t tt_cmap13_char_index
00000000001a60a0 0000000000000020 t tt_cmap13_get_info
00000000001a60c0 0000000000000024 t tt_cmap14_init
00000000001a60f0 0000000000000008 t tt_cmap14_char_index
00000000001a6100 000000000000000c t tt_cmap14_char_next
00000000001a6110 0000000000000014 t tt_cmap14_get_info
00000000001a6130 0000000000000074 t tt_cmap14_char_map_def_binary
00000000001a61b0 0000000000000074 t tt_cmap14_char_map_nondef_binary
00000000001a6230 0000000000000070 t tt_cmap14_find_variant
00000000001a62a0 000000000000007c t tt_cmap14_char_var_index
00000000001a6320 0000000000000084 t tt_cmap14_char_var_isdefault
00000000001a63b0 0000000000000038 t tt_cmap_unicode_init
00000000001a63f0 0000000000000014 t tt_cmap_unicode_char_index
00000000001a6410 0000000000000014 t tt_cmap_unicode_char_next
00000000001a6430 000000000000001c t tt_get_cmap_info
00000000001a6450 0000000000000144 t tt_face_get_colr_layer
00000000001a65a0 000000000000007c t get_child_table_pointer
00000000001a6620 00000000000000ec t get_deltas_for_var_index_base
00000000001a6710 00000000000000d4 t tt_face_get_colr_glyph_paint
00000000001a67f0 00000000000000a8 t tt_face_get_paint_layers
00000000001a68a0 00000000000000a0 t tt_face_palette_set
00000000001a6940 000000000000002c t extract_svg_doc
00000000001a6970 0000000000000188 t tt_face_get_kerning
00000000001a6b00 00000000000000a8 t tt_sbit_decoder_load_metrics
00000000001a6bb0 00000000000001ec t tt_sbit_decoder_load_byte_aligned
00000000001a6da0 000000000000022c t tt_sbit_decoder_load_bit_aligned
00000000001a6fd0 000000000000000c t sfnt_get_interface
00000000001a6fe0 00000000000001b0 t tt_face_load_kern
00000000001a7190 0000000000000030 t tt_face_free_sbit
00000000001a71c0 00000000000001fc t tt_face_get_metrics
00000000001a73c0 00000000000000a0 t tt_name_ascii_from_other
00000000001a7460 00000000000000b8 t tt_name_ascii_from_utf16
00000000001a7520 0000000000000040 t tt_face_free_svg
00000000001a7560 0000000000000288 t tt_face_get_name
00000000001a77f0 000000000000007c t tt_face_free_colr
00000000001a7870 0000000000000040 t tt_face_free_cpal
00000000001a78b0 0000000000000084 t tt_face_free_ps_names
00000000001a7940 00000000000000e4 t tt_face_free_name
00000000001a7a30 000000000000020c t sfnt_done_face
00000000001a7c40 0000000000000030 t sfnt_stream_close
00000000001a7c70 0000000000000038 t tt_cmap14_done
00000000001a7cb0 0000000000000034 t tt_cmap_unicode_done
00000000001a7cf0 00000000000002b0 t tt_face_load_svg_doc
00000000001a7fa0 0000000000000154 t tt_face_load_svg
00000000001a8100 00000000000003bc t tt_face_colr_blend_layer
00000000001a84c0 00000000000003b8 t tt_face_load_colr
00000000001a8880 0000000000000080 t tt_face_load_hmtx
00000000001a8900 00000000000003c4 t tt_face_load_cpal
00000000001a8cd0 00000000000002a4 t tt_face_load_strike_metrics
00000000001a8f80 0000000000000164 t tt_face_load_gasp
00000000001a90f0 000000000000000c t tt_face_set_sbit_strike
00000000001a9100 00000000000003f4 t tt_face_load_sbit
00000000001a9500 0000000000000058 t tt_face_load_pclt
00000000001a9560 0000000000000398 t tt_face_load_name
00000000001a9900 00000000000000e0 t tt_face_load_maxp
00000000001a99e0 0000000000000098 t tt_face_load_hhea
00000000001a9a80 0000000000000430 t Load_SBit_Png
00000000001a9eb0 000000000000007c t tt_sbit_decoder_load_png
00000000001a9f30 000000000000003c t error_callback
00000000001a9f70 00000000000000b8 t tt_cmap0_validate
00000000001aa030 000000000000024c t tt_cmap2_validate
00000000001aa280 00000000000004fc t tt_cmap4_validate
00000000001aa780 00000000000000e4 t tt_cmap6_validate
00000000001aa870 0000000000000298 t tt_cmap8_validate
00000000001aab10 00000000000000e8 t tt_cmap10_validate
00000000001aac00 0000000000000168 t tt_cmap12_validate
00000000001aad70 0000000000000158 t tt_cmap13_validate
00000000001aaed0 000000000000036c t tt_cmap14_validate
00000000001ab240 0000000000000070 t tt_cmap12_char_next
00000000001ab2b0 0000000000000070 t tt_cmap13_char_next
00000000001ab320 0000000000000060 t tt_face_load_cmap
00000000001ab380 0000000000000470 t tt_face_get_ps_name.part.0
00000000001ab7f0 0000000000000024 t tt_face_get_ps_name
00000000001ab820 0000000000000058 t tt_face_load_bhed
00000000001ab880 0000000000000084 t tt_face_load_post
00000000001ab910 00000000000000fc t tt_face_load_os2
00000000001aba10 0000000000000074 t read_data_from_FT_Stream
00000000001aba90 00000000000003f0 t tt_face_load_font_dir
00000000001abe80 000000000000027c t tt_face_build_cmaps.isra.0
00000000001ac100 0000000000000ef0 t sfnt_init_face
00000000001acff0 000000000000012c t get_apple_string.isra.0
00000000001ad120 0000000000000144 t get_win_string.isra.0
00000000001ad270 0000000000000a60 t sfnt_get_ps_name
00000000001adcd0 0000000000000058 t tt_face_load_head
00000000001add30 00000000000000cc t sfnt_get_name_index
00000000001ade00 0000000000000048 t tt_get_glyph_name
00000000001ade50 0000000000000088 t sfnt_get_glyph_name
00000000001adee0 0000000000000058 t tt_face_goto_table
00000000001adf40 0000000000000090 t sfnt_load_table
00000000001adfd0 0000000000000090 t tt_face_load_any
00000000001ae060 000000000000032c t tt_face_find_bdf_prop
00000000001ae390 0000000000000098 t sfnt_get_charset_id
00000000001ae430 00000000000000e4 t tt_cmap14_variants
00000000001ae520 00000000000000f4 t tt_cmap14_get_nondef_chars
00000000001ae620 0000000000000158 t tt_cmap14_get_def_chars
00000000001ae780 00000000000003b0 t tt_cmap14_variant_chars
00000000001aeb30 0000000000000140 t tt_cmap14_char_variants
00000000001aec70 0000000000000688 t tt_sbit_decoder_load_image
00000000001af300 0000000000000160 t tt_sbit_decoder_load_compound
00000000001af460 0000000000000544 t tt_face_load_sbit_image
00000000001af9b0 0000000000000c58 t sfnt_load_face
00000000001b0610 00000000000001cc t tt_face_get_colorline_stops
00000000001b07e0 0000000000000364 t tt_face_get_color_glyph_clipbox
00000000001b0b50 0000000000000f70 t tt_face_get_paint
00000000001b1ac0 000000000000001c t af_cjk_get_standard_widths
00000000001b1ae0 000000000000007c t af_cjk_hints_init
00000000001b1b60 0000000000000078 t af_cjk_snap_width
00000000001b1b60 0000000000000078 t af_latin_snap_width
00000000001b1be0 000000000000002c t af_dummy_hints_init
00000000001b1c10 0000000000000300 t af_sort_and_quantize_widths
00000000001b1f10 000000000000001c t af_latin_get_standard_widths
00000000001b1f30 00000000000001a4 t af_latin_hints_link_segments
00000000001b20e0 0000000000000080 t af_latin_hints_init
00000000001b2160 0000000000000044 t af_autofitter_init
00000000001b21b0 0000000000000004 t af_autofitter_done
00000000001b21c0 000000000000019c t af_cjk_hints_compute_blue_edges
00000000001b2360 0000000000000780 t af_glyph_hints_reload
00000000001b2ae0 00000000000007a8 t af_latin_hints_compute_segments
00000000001b3290 00000000000001d0 t af_axis_hints_new_edge
00000000001b3460 0000000000000260 t af_glyph_hints_align_strong_points
00000000001b36c0 00000000000001b0 t af_cjk_metrics_scale_dim
00000000001b3870 0000000000000048 t af_cjk_metrics_scale
00000000001b38c0 000000000000044c t af_latin_hints_compute_edges
00000000001b3d10 00000000000003d8 t af_latin_metrics_scale_dim
00000000001b40f0 0000000000000044 t af_latin_metrics_scale
00000000001b4140 00000000000000f0 t af_glyph_hints_done
00000000001b4230 00000000000000a0 t af_face_globals_free
00000000001b42d0 000000000000000c t af_get_interface
00000000001b42e0 0000000000000700 t af_cjk_hints_detect_features
00000000001b49e0 0000000000000110 t af_iup_interp.part.0
00000000001b4af0 00000000000002a0 t af_glyph_hints_align_weak_points
00000000001b4d90 00000000000003bc t af_face_globals_new
00000000001b5150 00000000000002b8 t af_property_set
00000000001b5410 0000000000000278 t af_loader_compute_darkening.isra.0
00000000001b5690 000000000000084c t af_autofitter_load_glyph
00000000001b5ee0 0000000000000240 t af_latin_compute_stem_width.isra.0
00000000001b6120 0000000000000044 t af_glyph_hints_save.isra.0
00000000001b6170 0000000000000058 t af_dummy_hints_apply
00000000001b61d0 0000000000000194 t af_cjk_compute_stem_width.isra.0
00000000001b6370 000000000000025c t af_hint_normal_stem
00000000001b65d0 000000000000001c t af_indic_get_standard_widths
00000000001b65f0 0000000000000048 t af_indic_metrics_scale
00000000001b6640 00000000000007d8 t af_cjk_hints_apply
00000000001b6e20 0000000000000004 t af_indic_hints_apply
00000000001b6e30 0000000000000bd4 t af_latin_hints_apply
00000000001b7a10 000000000000007c t af_indic_hints_init
00000000001b7a90 00000000000001b8 t af_property_get
00000000001b7c50 0000000000000154 t af_shaper_get_cluster
00000000001b7db0 00000000000002dc t af_cjk_metrics_init_widths
00000000001b8090 00000000000004bc t af_cjk_metrics_init_blues
00000000001b8550 00000000000002f4 t af_latin_metrics_init_widths
00000000001b8850 0000000000000ac4 t af_latin_metrics_init_blues
00000000001b9320 000000000000014c t af_latin_metrics_init
00000000001b9470 0000000000000104 t af_cjk_metrics_check_digits.isra.0
00000000001b9580 000000000000007c t af_indic_metrics_init
00000000001b9600 0000000000000088 t af_cjk_metrics_init
00000000001b9690 00000000000000a8 t psh_hint_table_record
00000000001b9740 0000000000000008 t pshinter_get_globals_funcs
00000000001b9750 0000000000000008 t pshinter_get_t1_funcs
00000000001b9760 0000000000000008 t pshinter_get_t2_funcs
00000000001b9770 0000000000000028 t t1_hints_open
00000000001b97a0 0000000000000028 t t2_hints_open
00000000001b97d0 00000000000000cc t psh_globals_scale_widths
00000000001b98a0 00000000000002b8 t psh_globals_set_scale
00000000001b9b60 00000000000000d0 t ps_hinter_init
00000000001b9c30 0000000000000078 t ps_mask_table_done
00000000001b9cb0 00000000000000dc t ps_mask_table_alloc
00000000001b9d90 000000000000008c t ps_mask_ensure
00000000001b9e20 000000000000002c t psh_globals_destroy
00000000001b9e50 0000000000000458 t psh_hint_align
00000000001ba2b0 00000000000001f0 t ps_mask_table_merge_all
00000000001ba4a0 0000000000000138 t psh_blues_set_zones_0.isra.0
00000000001ba5e0 00000000000001ec t psh_blues_set_zones
00000000001ba7d0 00000000000002c0 t psh_hint_table_find_strong_points.isra.0
00000000001baa90 000000000000021c t psh_hint_table_init.isra.0
00000000001bacb0 0000000000000128 t psh_hint_table_activate_mask.isra.0
00000000001bade0 0000000000000084 t ps_hints_close.part.0
00000000001bae70 0000000000000014 t t1_hints_close
00000000001bae90 0000000000000088 t ps_hinter_done
00000000001baf20 0000000000000014 t t2_hints_close
00000000001baf40 0000000000000140 t ps_dimension_set_mask_bits
00000000001bb080 00000000000000ac t ps_hints_t2counter
00000000001bb130 00000000000000ac t ps_hints_t2mask
00000000001bb1e0 00000000000000b0 t ps_hints_t1reset
00000000001bb290 000000000000120c t ps_hints_apply.part.0
00000000001bc4a0 000000000000001c t t1_hints_apply
00000000001bc4c0 000000000000001c t t2_hints_apply
00000000001bc4e0 0000000000000274 t psh_globals_new
00000000001bc760 00000000000001cc t ps_dimension_add_t1stem
00000000001bc930 000000000000007c t t1_hints_stem
00000000001bc9b0 0000000000000124 t t2_hints_stems
00000000001bcae0 0000000000000284 t ps_hints_t1stem3
00000000001bcd70 0000000000000004 t gray_raster_reset
00000000001bcd80 0000000000000008 t gray_raster_set_mode
00000000001bcd90 0000000000000018 t ft_smooth_set_mode
00000000001bcdb0 0000000000000048 t ft_smooth_init
00000000001bce00 0000000000000070 t ft_smooth_lcd_spans
00000000001bce70 0000000000000094 t ft_smooth_overlap_spans
00000000001bcf10 000000000000000c t gray_raster_done
00000000001bcf20 0000000000000084 t gray_convert_glyph_inner
00000000001bcfb0 00000000000000b8 t gray_set_cell
00000000001bd070 0000000000000304 t gray_render_line
00000000001bd380 000000000000002c t gray_line_to
00000000001bd3b0 000000000000004c t gray_move_to
00000000001bd400 0000000000000650 t gray_convert_glyph
00000000001bda50 0000000000000144 t gray_raster_render
00000000001bdba0 0000000000000040 t gray_raster_new
00000000001bdbe0 000000000000002c t ft_smooth_get_cbox
00000000001bdc10 0000000000000620 t ft_smooth_render
00000000001be230 0000000000000064 t ft_smooth_transform
00000000001be2a0 0000000000000210 t gray_render_cubic.isra.0
00000000001be4b0 000000000000002c t gray_cubic_to
00000000001be4e0 00000000000001a4 t gray_conic_to
00000000001be690 00000000000000b0 t New_Profile
00000000001be740 00000000000000a4 t End_Profile
00000000001be7f0 00000000000000bc t Insert_Y_Turn
00000000001be8b0 0000000000000030 t Split_Conic
00000000001be8e0 000000000000009c t Split_Cubic
00000000001be980 000000000000020c t Bezier_Up
00000000001beb90 000000000000021c t Conic_To
00000000001bedb0 000000000000009c t Sort
00000000001bee50 000000000000001c t Vertical_Sweep_Init
00000000001bee70 0000000000000148 t Vertical_Sweep_Span
00000000001befc0 0000000000000248 t Vertical_Sweep_Drop
00000000001bf210 0000000000000014 t Vertical_Sweep_Step
00000000001bf230 0000000000000004 t Horizontal_Sweep_Init
00000000001bf240 00000000000000cc t Horizontal_Sweep_Span
00000000001bf310 0000000000000268 t Horizontal_Sweep_Drop
00000000001bf580 0000000000000004 t Horizontal_Sweep_Step
00000000001bf590 0000000000000004 t ft_black_reset
00000000001bf5a0 0000000000000008 t ft_black_set_mode
00000000001bf5b0 0000000000000030 t ft_raster1_init
00000000001bf5e0 0000000000000018 t ft_raster1_set_mode
00000000001bf600 000000000000000c t ft_black_done
00000000001bf610 0000000000000254 t Line_Up
00000000001bf870 0000000000000248 t Line_To
00000000001bfac0 0000000000000040 t ft_black_new
00000000001bfb00 000000000000002c t ft_raster1_get_cbox
00000000001bfb30 00000000000001c4 t ft_raster1_render
00000000001bfd00 0000000000000064 t ft_raster1_transform
00000000001bfd70 0000000000000260 t Cubic_To
00000000001bffd0 0000000000000ae0 t Render_Single_Pass.constprop.0
00000000001c0ab0 0000000000000218 t ft_black_render
00000000001c0cd0 0000000000000010 t ft_svg_init
00000000001c0ce0 0000000000000038 t ft_svg_done
00000000001c0d20 0000000000000080 t ft_svg_preset_slot
00000000001c0da0 00000000000000e8 t ft_svg_transform
00000000001c0e90 000000000000000c t ft_svg_get_interface
00000000001c0ea0 0000000000000050 t ft_svg_property_get
00000000001c0ef0 00000000000000a4 t ft_svg_property_set
00000000001c0fa0 0000000000000128 t ft_svg_render
00000000001c10d0 000000000000001c t ft_sdf_init
00000000001c10f0 0000000000000004 t ft_sdf_done
00000000001c1100 0000000000000018 t ft_sdf_set_mode
00000000001c1120 0000000000000004 t bsdf_raster_reset
00000000001c1130 0000000000000008 t bsdf_raster_set_mode
00000000001c1140 0000000000000118 t split_cubic
00000000001c1260 000000000000002c t ft_sdf_get_cbox
00000000001c1290 000000000000000c t bsdf_raster_done
00000000001c12a0 000000000000000c t sdf_raster_done
00000000001c12b0 00000000000002a0 t ft_sdf_render
00000000001c1550 000000000000000c t ft_sdf_requester
00000000001c1560 00000000000000b4 t sdf_property_get
00000000001c1620 00000000000000e0 t sdf_property_set
00000000001c1700 00000000000001fc t ft_bsdf_render
00000000001c1900 0000000000000090 t compare_neighbor
00000000001c1990 0000000000000078 t map_fixed_to_sdf
00000000001c1a10 0000000000000040 t bsdf_raster_new
00000000001c1a50 0000000000000040 t sdf_raster_new
00000000001c1a90 0000000000000068 t sdf_edge_new
00000000001c1b00 00000000000000ac t sdf_cubic_to
00000000001c1bb0 00000000000000a4 t sdf_line_to
00000000001c1c60 00000000000000fc t sdf_conic_to
00000000001c1d60 0000000000000164 t split_sdf_conic
00000000001c1ed0 0000000000000188 t split_sdf_cubic
00000000001c2060 0000000000000064 t ft_sdf_transform
00000000001c20d0 0000000000000068 t sdf_contour_done
00000000001c2140 00000000000001f0 t split_sdf_shape
00000000001c2330 0000000000000008 t sdf_raster_set_mode
00000000001c2340 0000000000000004 t sdf_raster_reset
00000000001c2350 0000000000000f10 t sdf_generate_bounding_box.isra.0
00000000001c3260 00000000000006f8 t sdf_raster_render
00000000001c3960 000000000000007c t sdf_move_to
00000000001c39e0 0000000000000bc8 t bsdf_raster_render
00000000001c45b0 0000000000000004 t ft_gzip_free
00000000001c45c0 0000000000000130 t ft_gzip_check_header
00000000001c46f0 0000000000000020 t ft_gzip_alloc
00000000001c4710 000000000000012c t ft_gzip_file_fill_output
00000000001c4840 000000000000016c t ft_gzip_file_io
00000000001c49b0 0000000000000008 t ft_gzip_stream_io
00000000001c49c0 0000000000000090 t ft_gzip_stream_close
00000000001c4a50 00000000000002d0 T FT_Stream_OpenGzip
00000000001c4d20 0000000000000114 T FT_Gzip_Uncompress
00000000001c4e40 0000000000000064 t ft_lzw_check_header
00000000001c4eb0 00000000000001c8 t ft_lzwstate_get_code
00000000001c5080 00000000000000e8 t ft_lzwstate_stack_grow
00000000001c5170 0000000000000174 T FT_Stream_OpenLZW
00000000001c52f0 0000000000000088 t ft_lzwstate_done
00000000001c5380 0000000000000050 t ft_lzw_stream_close
00000000001c53d0 00000000000003d8 t ft_lzwstate_io
00000000001c57b0 00000000000001dc t ft_lzw_stream_io
00000000001c5990 0000000000000020 t ft_bzip2_alloc
00000000001c59b0 0000000000000004 t ft_bzip2_free
00000000001c59c0 0000000000000068 t ft_bzip2_stream_close
00000000001c5a30 0000000000000134 t ft_bzip2_file_fill_output
00000000001c5b70 000000000000018c t ft_bzip2_stream_io
00000000001c5d00 0000000000000070 t ft_bzip2_check_header
00000000001c5d70 0000000000000194 T FT_Stream_OpenBzip2
00000000001c5f10 0000000000000020 t afm_compare_kern_pairs
00000000001c5f30 0000000000000130 t PS_Conv_Strtol
00000000001c6060 0000000000000090 t PS_Conv_ToInt
00000000001c60f0 0000000000000084 t skip_spaces
00000000001c6180 0000000000000108 t skip_literal_string
00000000001c6290 0000000000000098 t skip_string
00000000001c6330 0000000000000008 t ps_parser_skip_spaces
00000000001c6340 0000000000000018 t ps_parser_to_int
00000000001c6360 0000000000000160 t ps_parser_to_bytes
00000000001c64c0 0000000000000040 t ps_parser_init
00000000001c6500 0000000000000004 t ps_parser_done
00000000001c6510 0000000000000024 t t1_builder_done
00000000001c6540 000000000000012c t t1_builder_close_contour
00000000001c6670 0000000000000024 t cff_builder_done
00000000001c66a0 0000000000000050 t cff_builder_add_point
00000000001c66f0 000000000000012c t cff_builder_close_contour
00000000001c6820 0000000000000024 t ps_builder_done
00000000001c6850 0000000000000010 t cff_random
00000000001c6860 0000000000000010 t t1_cmap_std_done
00000000001c6870 000000000000002c t t1_cmap_standard_init
00000000001c68a0 0000000000000030 t t1_cmap_expert_init
00000000001c68d0 0000000000000028 t t1_cmap_custom_init
00000000001c6900 0000000000000008 t t1_cmap_custom_done
00000000001c6910 0000000000000034 t t1_cmap_custom_char_index
00000000001c6950 0000000000000064 t t1_cmap_custom_char_next
00000000001c69c0 000000000000000c t psaux_get_glyph_name
00000000001c69d0 0000000000000038 t t1_cmap_unicode_init
00000000001c6a10 0000000000000014 t t1_cmap_unicode_char_index
00000000001c6a30 0000000000000014 t t1_cmap_unicode_char_next
00000000001c6a50 000000000000006c t cf2_stack_popInt
00000000001c6ac0 0000000000000064 t cf2_stack_popFixed
00000000001c6b30 000000000000006c t cf2_stack_getReal
00000000001c6ba0 0000000000000074 t ps_table_release
00000000001c6c20 0000000000000028 t afm_parser_done
00000000001c6c50 0000000000000034 t t1_cmap_unicode_done
00000000001c6c90 00000000000000a8 t ps_table_realloc
00000000001c6d40 0000000000000008 t ps_table_done
00000000001c6d50 00000000000000e4 t ps_table_new
00000000001c6e40 00000000000000b0 t t1_builder_add_point
00000000001c6ef0 00000000000000e4 t cf2_arrstack_setNumElements
00000000001c6fe0 0000000000000068 t cf2_arrstack_push
00000000001c7050 0000000000000114 t cf2_doStems
00000000001c7170 00000000000003b0 t PS_Conv_ToFixed
00000000001c7520 00000000000001b8 t ps_tofixedarray
00000000001c76e0 0000000000000030 t ps_parser_to_fixed_array
00000000001c7710 000000000000013c t ps_parser_to_coord_array
00000000001c7850 0000000000000020 t ps_parser_to_fixed
00000000001c7870 00000000000000b4 t ps_builder_init
00000000001c7930 00000000000000e4 t cf2_getSeacComponent
00000000001c7a20 000000000000021c t t1_make_subfont
00000000001c7c40 00000000000000b0 t t1_builder_add_contour
00000000001c7cf0 00000000000000a8 t cff_builder_add_contour
00000000001c7da0 00000000000000b4 t t1_builder_init
00000000001c7e60 00000000000000c0 t cff_builder_init
00000000001c7f20 0000000000000064 t afm_parser_init
00000000001c7f90 0000000000000110 t cf2_hintmap_map
00000000001c80a0 00000000000000e0 t cf2_glyphpath_hintPoint
00000000001c8180 000000000000032c t cf2_hintmap_insertHint
00000000001c84b0 00000000000001b4 t cf2_glyphpath_computeOffset
00000000001c8670 0000000000000378 t t1_decoder_parse_metrics
00000000001c89f0 00000000000000a0 t t1_lookup_glyph_by_stdcharcode_ps
00000000001c8a90 0000000000000098 t t1_cmap_std_char_index
00000000001c8b30 0000000000000078 t t1_cmap_std_char_next
00000000001c8bb0 00000000000000e0 t t1_decoder_init
00000000001c8c90 00000000000000cc t afm_tokenize
00000000001c8d60 00000000000000f8 t cff_decoder_prepare
00000000001c8e60 0000000000000048 t cf2_free_instance
00000000001c8eb0 0000000000000110 t ps_table_add
00000000001c8fc0 00000000000004d0 t cf2_glyphpath_pushPrevElem
00000000001c9490 000000000000022c t cf2_computeDarkening.part.0.constprop.0
00000000001c96c0 00000000000000b0 t ps_builder_add_contour.constprop.0
00000000001c9770 0000000000000034 t cff_check_points
00000000001c97b0 000000000000002c t ps_builder_check_points.part.0.isra.0
00000000001c97e0 0000000000000034 t t1_builder_check_points
00000000001c9820 0000000000000040 t cf2_stack_pushFixed
00000000001c9860 000000000000006c t afm_stream_skip_spaces.part.0.isra.0
00000000001c98d0 0000000000000038 t cf2_freeT1SeacComponent.isra.0
00000000001c9910 0000000000000074 t cf2_getT1SeacComponent.isra.0
00000000001c9990 0000000000000128 t ps_builder_close_contour.isra.0
00000000001c9ac0 0000000000000020 t cf2_builder_moveTo
00000000001c9ae0 0000000000000064 t t1_decrypt
00000000001c9b50 00000000000000b8 t afm_stream_read_one
00000000001c9c10 00000000000000d4 t cff_decoder_init
00000000001c9cf0 00000000000000e4 t afm_stream_read_string
00000000001c9de0 0000000000000188 t afm_parser_read_vals
00000000001c9f70 0000000000000064 t afm_parser_next_key.constprop.0.isra.0
00000000001c9fe0 0000000000000154 t skip_procedure
00000000001ca140 00000000000001ec t ps_parser_skip_PS_token
00000000001ca330 000000000000019c t ps_parser_to_token
00000000001ca4d0 0000000000000120 t ps_parser_to_token_array
00000000001ca5f0 00000000000004c4 t ps_parser_load_field
00000000001caac0 0000000000000150 t ps_parser_load_field_table
00000000001cac10 0000000000000084 t t1_builder_add_point1
00000000001caca0 000000000000006c t t1_builder_start_point
00000000001cad10 0000000000000044 t cf2_stack_setReal
00000000001cad60 0000000000000044 t cf2_stack_pushInt
00000000001cadb0 0000000000000060 t t1_decoder_done
00000000001cae10 00000000000000a4 t cf2_hintmask_read
00000000001caec0 00000000000000b4 t cff_builder_add_point1
00000000001caf80 0000000000000068 t cff_builder_start_point
00000000001caff0 0000000000000154 t cf2_hint_init
00000000001cb150 00000000000009d0 t cf2_hintmap_build
00000000001cbb20 0000000000000168 t ps_decoder_init
00000000001cbc90 00000000000001d0 t cf2_builder_cubeTo
00000000001cbe60 00000000000000f4 t cf2_glyphpath_moveTo
00000000001cbf60 00000000000000a0 t cf2_glyphpath_pushMove
00000000001cc000 0000000000000180 t cf2_glyphpath_lineTo
00000000001cc180 00000000000001dc t cf2_glyphpath_curveTo
00000000001cc360 00000000000001ac t cf2_doFlex
00000000001cc510 000000000000015c t cf2_builder_lineTo
00000000001cc670 0000000000000738 t afm_parser_parse
00000000001ccdb0 0000000000002e58 t cf2_interpT2CharString
00000000001cfc10 0000000000000b1c t cf2_decoder_parse_charstrings
00000000001d0730 0000000000000244 t ps_unicode_value
00000000001d0980 0000000000000034 t compare_uni_maps
00000000001d09c0 00000000000000ac t ps_unicodes_char_index
00000000001d0a70 00000000000000d0 t ps_unicodes_char_next
00000000001d0b40 0000000000000028 t ps_get_macintosh_name
00000000001d0b70 000000000000002c t ps_get_standard_strings
00000000001d0ba0 000000000000000c t psnames_get_service
00000000001d0bb0 0000000000000294 t ps_unicodes_init
00000000001d0e50 000000000000002c t ft_ansi_stream_close
00000000001d0e80 00000000000000d0 t ft_ansi_stream_io
00000000001d0f50 0000000000000008 t ft_alloc
00000000001d0f60 0000000000000008 t ft_free
00000000001d0f70 000000000000000c t ft_realloc
00000000001d0f80 00000000000000c8 t FT_Stream_Open
00000000001d1050 000000000000003c t FT_New_Memory
00000000001d1090 0000000000000004 t FT_Done_Memory
00000000001d10a0 0000000000000004 t FT_Trace_Disable
00000000001d10b0 0000000000000004 t FT_Trace_Enable
00000000001d10c0 0000000000000014 T FT_Bitmap_Init
00000000001d10e0 0000000000000014 T FT_Bitmap_New
00000000001d1100 00000000000001c4 T FT_Bitmap_Copy
00000000001d12d0 0000000000000058 T FT_Bitmap_Done
00000000001d1330 00000000000004b4 T FT_Bitmap_Convert
00000000001d17f0 00000000000000b8 t ft_face_get_mm_service
00000000001d18b0 00000000000000a0 t ft_face_get_mvar_service.constprop.0.isra.0
00000000001d1950 00000000000000c0 T FT_Get_MM_Var
00000000001d1a10 0000000000000028 T FT_Done_MM_Var
00000000001d1a40 00000000000000c8 T FT_Get_Var_Blend_Coordinates
00000000001d1b10 0000000000000104 T FT_Set_Named_Instance
00000000001d1c20 0000000000000038 T eglGetError
00000000001d1c60 00000000000000e4 t _eglSetFuncName
00000000001d1d50 0000000000000038 T eglQueryAPI
00000000001d1d90 00000000000000f8 t _eglWaitClientCommon
00000000001d1e90 000000000000003c T eglGetCurrentDisplay
00000000001d1ed0 0000000000000044 T eglGetCurrentContext
00000000001d1f20 0000000000000008 t _eglFunctionCompare
00000000001d1f30 00000000000000e4 t _eglConvertIntsToAttribs
00000000001d2020 0000000000000084 t _eglConvertAttribsToInt.part.0
00000000001d20b0 0000000000000068 t _eglAppendExtension.isra.0
00000000001d2120 00000000000000d8 t _eglGetSyncAttribCommon
00000000001d2200 00000000000000f4 t _eglDestroySync
00000000001d2300 0000000000000148 t _eglDestroyImageCommon
00000000001d2450 000000000000013c t _eglClientWaitSyncCommon
00000000001d2590 0000000000000138 t _eglWaitSyncCommon
00000000001d26d0 0000000000000198 t _eglCreateImageCommon
00000000001d2870 00000000000000d4 T eglDestroySync
00000000001d2950 00000000000000d4 t eglDestroyImageKHR
00000000001d2a30 00000000000000d4 T eglDestroyImage
00000000001d2b10 00000000000000d4 t eglDestroySyncKHR
00000000001d2bf0 00000000000000c8 T eglWaitSync
00000000001d2cc0 00000000000000c8 t eglWaitSyncKHR
00000000001d2d90 000000000000018c t _eglSwapBuffersWithDamageCommon
00000000001d2f20 00000000000000fc t eglSwapBuffersWithDamageKHR
00000000001d3020 00000000000000fc t eglSwapBuffersWithDamageEXT
00000000001d3120 0000000000000100 t eglClientWaitSyncKHR
00000000001d3220 0000000000000100 T eglClientWaitSync
00000000001d3320 00000000000001c4 t _eglCreatePixmapSurfaceCommon
00000000001d34f0 000000000000012c T eglGetSyncAttrib
00000000001d3620 00000000000001d8 t _eglCreateWindowSurfaceCommon
00000000001d3800 0000000000000150 t eglGetSyncAttribKHR
00000000001d3950 0000000000000218 t _eglCreateSync
00000000001d3b70 000000000000019c T eglSurfaceAttrib
00000000001d3d10 000000000000019c T eglQueryContext
00000000001d3eb0 000000000000016c T eglCopyBuffers
00000000001d4020 000000000000016c t eglSignalSyncKHR
00000000001d4190 000000000000016c T eglBindTexImage
00000000001d4300 000000000000016c T eglReleaseTexImage
00000000001d4470 000000000000018c T eglDestroyContext
00000000001d4600 000000000000018c T eglDestroySurface
00000000001d4790 00000000000001a4 t eglExportDMABUFImageQueryMESA
00000000001d4940 00000000000001a4 t eglExportDRMImageMESA
00000000001d4af0 00000000000001a4 t eglExportDMABUFImageMESA
00000000001d4ca0 00000000000001cc t eglPostSubBufferNV
00000000001d4e70 00000000000001ac T eglQuerySurface
00000000001d5020 0000000000000194 t eglDupNativeFenceFDANDROID
00000000001d51c0 00000000000001cc t eglGetSyncValuesCHROMIUM
00000000001d5390 00000000000001cc t eglSwapBuffersRegionNOK
00000000001d5560 0000000000000208 T eglSwapBuffers
00000000001d5770 000000000000020c T eglSwapInterval
00000000001d5980 00000000000002b0 t eglSetDamageRegionKHR
00000000001d5c30 0000000000000330 T eglMakeCurrent
00000000001d5f60 00000000000000c0 t eglQueryDevicesEXT
00000000001d6020 0000000000000074 T eglGetDisplay
00000000001d60a0 00000000000000b0 T eglGetPlatformDisplay
00000000001d6150 0000000000000070 T eglWaitClient
00000000001d61c0 0000000000000070 T eglWaitGL
00000000001d6230 0000000000000114 t eglQueryDeviceAttribEXT
00000000001d6350 00000000000000e0 T eglGetCurrentSurface
00000000001d6430 0000000000000108 t eglGetPlatformDisplayEXT
00000000001d6540 00000000000000e0 T eglBindAPI
00000000001d6620 00000000000000e0 t eglQueryDeviceStringEXT
00000000001d6700 000000000000011c t eglQueryDebugKHR
00000000001d6820 00000000000000f8 T eglGetProcAddress
00000000001d6920 0000000000000160 t eglQueryDisplayAttribEXT
00000000001d6a80 0000000000000164 t eglQueryDmaBufFormatsEXT
00000000001d6bf0 000000000000012c T eglCreatePixmapSurface
00000000001d6d20 000000000000012c T eglCreateWindowSurface
00000000001d6e50 000000000000012c t eglCreatePlatformPixmapSurfaceEXT
00000000001d6f80 000000000000012c t eglCreatePlatformWindowSurfaceEXT
00000000001d70b0 0000000000000144 t eglDebugMessageControlKHR
00000000001d7200 0000000000000184 t eglQueryDmaBufModifiersEXT
00000000001d7390 0000000000000140 t eglCreateImageKHR
00000000001d74d0 0000000000000128 T eglCreateSync
00000000001d7600 0000000000000128 t eglCreateSync64KHR
00000000001d7730 0000000000000158 T eglWaitNative
00000000001d7890 000000000000018c t eglLabelObjectKHR
00000000001d7a20 0000000000000150 T eglTerminate
00000000001d7b70 00000000000001c8 T eglCreatePlatformPixmapSurface
00000000001d7d40 00000000000001c8 T eglCreatePlatformWindowSurface
00000000001d7f10 0000000000000198 t eglCreateSyncKHR
00000000001d80b0 00000000000001d4 T eglCreateImage
00000000001d8290 0000000000000168 t eglGetDisplayDriverConfig
00000000001d8400 0000000000000168 t eglGetDisplayDriverName
00000000001d8570 00000000000000d4 T eglReleaseThread
00000000001d8650 0000000000000194 T eglCreatePbufferFromClientBuffer
00000000001d87f0 00000000000001e0 T eglGetConfigs
00000000001d89d0 00000000000001b4 t eglCreateDRMImageMESA
00000000001d8b90 00000000000001bc t eglBindWaylandDisplayWL
00000000001d8d50 0000000000000200 T eglChooseConfig
00000000001d8f50 00000000000001bc t eglUnbindWaylandDisplayWL
00000000001d9110 00000000000001f8 T eglGetConfigAttrib
00000000001d9310 00000000000001e4 t eglQueryWaylandBufferWL
00000000001d9500 0000000000000190 t eglSetBlobCacheFuncsANDROID
00000000001d9690 00000000000001f0 t eglCreateWaylandBufferFromImageWL
00000000001d9880 0000000000000228 T eglCreatePbufferSurface
00000000001d9ab0 000000000000028c T eglCreateContext
00000000001d9d40 000000000000027c T eglQueryString
00000000001d9fc0 0000000000000890 T eglInitialize
00000000001da850 0000000000000190 t _eglOffsetOfConfig
00000000001da9e0 0000000000000134 t _eglSortConfigs
00000000001dab20 0000000000000010 t _eglFlattenConfig
00000000001dab30 0000000000000048 t _eglInitConfig
00000000001dab80 0000000000000050 t _eglLinkConfig
00000000001dabd0 000000000000001c t _eglLookupConfig
00000000001dabf0 00000000000002fc t _eglValidateConfig
00000000001daef0 0000000000000268 t _eglMatchConfig
00000000001db160 0000000000000004 t _eglFallbackMatch
00000000001db170 00000000000001d8 t _eglParseConfigAttribList
00000000001db350 0000000000000174 t _eglCompareConfigs
00000000001db4d0 0000000000000008 t _eglFallbackCompare
00000000001db4e0 0000000000000130 t _eglFilterConfigArray
00000000001db610 0000000000000094 t _eglChooseConfig
00000000001db6b0 00000000000000b4 t _eglGetConfigAttrib
00000000001db770 0000000000000044 t _eglGetConfigs
00000000001db7c0 0000000000000728 t _eglInitContext
00000000001dbef0 00000000000000dc t _eglQueryContext
00000000001dbfd0 000000000000029c t _eglBindContext
00000000001dc270 0000000000000078 t _eglGetCurrentThread
00000000001dc2f0 0000000000000048 t _eglDestroyCurrentThread
00000000001dc340 0000000000000034 t _eglIsCurrentThreadDummy
00000000001dc380 0000000000000078 t _eglGetCurrentContext
00000000001dc400 00000000000003cc t _eglDebugReport
00000000001dc7d0 00000000000000b8 t _eglError
00000000001dc890 0000000000000044 T _eglFiniDevice
00000000001dc8e0 0000000000000090 t _eglCheckDeviceHandle
00000000001dc970 0000000000000024 t _eglDeviceSupports
00000000001dc9a0 0000000000000024 t _eglQueryDeviceAttribEXT
00000000001dc9d0 0000000000000038 t _eglQueryDeviceStringEXT
00000000001dca10 00000000000000e4 t _eglQueryDevicesEXT
00000000001dcb00 000000000000012c t _eglGetNativePlatform
00000000001dcc30 000000000000009c T _eglFiniDisplay
00000000001dccd0 00000000000001e4 t _eglFindDisplay
00000000001dcec0 00000000000001d0 t _eglReleaseDisplayResources
00000000001dd090 0000000000000034 t _eglCleanupDisplay
00000000001dd0d0 0000000000000090 t _eglCheckDisplayHandle
00000000001dd160 0000000000000040 t _eglCheckResource
00000000001dd1a0 0000000000000038 t _eglInitResource
00000000001dd1e0 0000000000000010 t _eglGetResource
00000000001dd1f0 0000000000000018 t _eglPutResource
00000000001dd210 000000000000002c t _eglLinkResource
00000000001dd240 0000000000000074 t _eglUnlinkResource
00000000001dd2c0 00000000000001a4 t _eglGetDeviceDisplay
00000000001dd470 0000000000000078 t _eglGetDriver
00000000001dd4f0 00000000000000c8 t _eglMatchDriver
00000000001dd5c0 000000000000004c t _eglGetDriverProc
00000000001dd610 0000000000000028 T _eglUnloadDrivers
00000000001dd640 000000000000000c t _eglPointerIsDereferencable
00000000001dd650 00000000000001f4 t _eglLog
00000000001dd850 00000000000005cc t _eglInitSurface
00000000001dde20 0000000000000424 t _eglQuerySurface
00000000001de250 0000000000000200 t _eglSurfaceAttrib
00000000001de450 0000000000000008 t _eglSwapInterval
00000000001de460 0000000000000100 t _eglGetSyncAttrib
00000000001de560 0000000000000008 t switch_st_framebuffer_flush_front
00000000001de570 0000000000000008 t switch_st_framebuffer_flush_swapbuffers
00000000001de580 0000000000000008 t switch_create_pixmap_surface
00000000001de590 0000000000000008 t switch_create_pbuffer_surface
00000000001de5a0 0000000000000008 t switch_st_get_param
00000000001de5b0 0000000000000008 t switch_get_proc_address
00000000001de5c0 00000000000000e4 t switch_swap_buffers
00000000001de6b0 0000000000000020 t switch_swap_interval
00000000001de6d0 000000000000018c t switch_create_context
00000000001de860 000000000000005c t switch_terminate
00000000001de8c0 000000000000004c t switch_destroy_context
00000000001de910 00000000000001c4 t switch_st_framebuffer_validate
00000000001deae0 000000000000012c t switch_egl_surface_cleanup
00000000001dec10 0000000000000244 t switch_create_window_surface
00000000001dee60 0000000000000050 t switch_destroy_surface
00000000001deeb0 0000000000000128 t switch_make_current
00000000001defe0 0000000000000478 t switch_initialize
00000000001df460 0000000000000084 t _eglInitDriver
00000000001df4f0 000000000000009c t st_framebuffer_update_attachments
00000000001df590 0000000000000004 t st_framebuffer_iface_hash
00000000001df5a0 000000000000000c t st_framebuffer_iface_equal
00000000001df5b0 000000000000002c t st_api_get_current
00000000001df5e0 0000000000000004 t st_api_destroy
00000000001df5f0 00000000000000b4 t st_context_validate
00000000001df6b0 0000000000000004 t st_context_destroy
00000000001df6c0 0000000000000024 t st_context_share
00000000001df6f0 0000000000000010 t st_context_copy
00000000001df700 0000000000000048 t st_manager_destroy
00000000001df750 00000000000000d4 t get_version
00000000001df830 000000000000009c t st_api_query_versions
00000000001df8d0 0000000000000078 t st_api_destroy_drawable
00000000001df950 00000000000000f0 t st_framebuffers_purge
00000000001dfa40 00000000000002b8 t st_context_teximage
00000000001dfd00 000000000000022c t st_framebuffer_add_renderbuffer
00000000001dff30 0000000000000520 t st_visual_to_context_mode
00000000001e0450 00000000000002f0 t st_framebuffer_reuse_or_create.constprop.0
00000000001e0740 0000000000000354 t st_api_create_context
00000000001e0aa0 0000000000000230 t st_set_ws_renderbuffer_surface
00000000001e0cd0 00000000000002f8 t st_framebuffer_validate
00000000001e0fd0 0000000000000184 t st_api_make_current
00000000001e1160 0000000000000014 t st_framebuffer_reference
00000000001e1180 00000000000000a4 t st_manager_flush_frontbuffer
00000000001e1230 0000000000000100 t st_context_flush
00000000001e1330 0000000000000108 t st_manager_validate_framebuffers
00000000001e1440 0000000000000078 t st_manager_flush_swapbuffers
00000000001e14c0 00000000000000cc t st_manager_add_color_renderbuffer
00000000001e1590 000000000000000c t st_gl_api_create
00000000001e15a0 00000000000000cc t st_texture_release_all_sampler_views.part.0
00000000001e1670 0000000000000220 t st_texture_set_sampler_view
00000000001e1890 0000000000000058 t st_texture_get_current_sampler_view
00000000001e18f0 00000000000000b8 t st_texture_release_context_sampler_view
00000000001e19b0 0000000000000010 t st_texture_release_all_sampler_views
00000000001e19c0 0000000000000058 t st_delete_texture_sampler_views
00000000001e1a20 0000000000000754 t st_get_texture_sampler_view_from_stobj
00000000001e2180 000000000000013c t st_get_buffer_sampler_view_from_stobj
00000000001e22c0 0000000000000018 t u_surface_default_template
00000000001e22e0 00000000000000e8 t util_copy_box
00000000001e23d0 00000000000002f8 t util_resource_copy_region
00000000001e26d0 000000000000006c t nouveau_drm_screen_unref
00000000001e2740 0000000000000110 T nouveau_switch_screen_create
00000000001e2850 0000000000000008 T nouveau_switch_resource_get_syncpoint
00000000001e2860 00000000000001fc T nouveau_switch_resource_get_buffer
00000000001e2a60 000000000000013c t nvc0_screen_get_shader_param
00000000001e2ba0 00000000000000a4 t nvc0_screen_get_paramf
00000000001e2c50 0000000000000054 t nvc0_screen_get_sample_pixel_grid
00000000001e2cb0 0000000000000054 t nvc0_screen_fence_emit
00000000001e2d10 000000000000000c t nvc0_screen_fence_update
00000000001e2d20 0000000000000444 t nvc0_screen_get_param
00000000001e3170 00000000000001c8 t nvc0_screen_is_format_supported
00000000001e3340 000000000000025c t nvc0_screen_get_compute_param
00000000001e35a0 0000000000000028 t PUSH_SPACE.isra.0
00000000001e35d0 0000000000000164 t nvc0_screen_destroy
00000000001e3740 00000000000000f8 t nvc0_graph_set_macro.isra.0
00000000001e3840 000000000000017c t nvc0_screen_resize_text_area
00000000001e39c0 000000000000022c t nvc0_screen_bind_cb_3d
00000000001e3bf0 00000000000020a8 t nvc0_screen_create
00000000001e5ca0 000000000000007c t nvc0_screen_tic_alloc
00000000001e5d20 000000000000007c t nvc0_screen_tsc_alloc
00000000001e5da0 0000000000000004 t nvc0_flush_resource
00000000001e5db0 0000000000000334 t nvc0_clear_buffer_push_nve4
00000000001e60f0 0000000000000378 t nvc0_clear_buffer_push_nvc0
00000000001e6470 0000000000000080 t nvc0_clear_buffer_push
00000000001e64f0 0000000000000084 t gm200_evaluate_depth_buffer
00000000001e6580 00000000000003b0 t nvc0_2d_texture_set
00000000001e6930 0000000000000508 t nvc0_resource_copy_region
00000000001e6e40 0000000000000698 t nvc0_clear_buffer
00000000001e74e0 00000000000004ec t nvc0_clear_depth_stencil
00000000001e79d0 000000000000056c t nvc0_clear_render_target
00000000001e7f40 00000000000026ac t nvc0_blit
00000000001ea5f0 00000000000004d8 T nvc0_clear
00000000001eaad0 0000000000000124 t nvc0_blitter_create
00000000001eac00 0000000000000084 t nvc0_blitter_destroy
00000000001eac90 0000000000000050 t nvc0_blitctx_create
00000000001eace0 0000000000000008 t nvc0_blitctx_destroy
00000000001eacf0 0000000000000074 t nvc0_init_surface_functions
00000000001ead70 0000000000000034 t nve4_delete_image_handle
00000000001eadb0 00000000000000c0 t nve4_make_texture_handle_resident
00000000001eae70 0000000000000178 t gm107_make_image_handle_resident
00000000001eaff0 00000000000000e0 t nvc0_get_surface_dims
00000000001eb0d0 0000000000000068 t gm107_delete_image_handle
00000000001eb140 0000000000000124 t nve4_delete_texture_handle
00000000001eb270 00000000000005fc t gf100_create_texture_view
00000000001eb870 00000000000006e0 t gm107_create_texture_view
00000000001ebf50 00000000000001f0 t nve4_create_texture_handle
00000000001ec140 0000000000000030 T nvc0_create_sampler_view
00000000001ec170 00000000000000d8 t gm107_create_texture_view_from_image
00000000001ec250 0000000000000144 t gm107_create_image_handle
00000000001ec3a0 0000000000000014 t nvc0_create_texture_view
00000000001ec3c0 000000000000009c t nvc0_update_tic
00000000001ec460 0000000000000414 t nvc0_validate_tic
00000000001ec880 00000000000003b8 T nvc0_validate_textures
00000000001ecc40 00000000000002e0 t nvc0_validate_tsc
00000000001ecf20 00000000000001a0 t nve4_validate_tsc
00000000001ed0c0 00000000000000ec T nvc0_validate_samplers
00000000001ed1b0 0000000000000094 t nvc0_upload_tsc0
00000000001ed250 0000000000000190 T nve4_set_tex_handles
00000000001ed3e0 00000000000000b4 t nvc0_mark_image_range_valid
00000000001ed4a0 00000000000000f0 t nve4_make_image_handle_resident
00000000001ed590 00000000000002e8 t nve4_set_surface_info
00000000001ed880 000000000000019c t nve4_create_image_handle
00000000001eda20 00000000000005b4 t nvc0_validate_suf
00000000001edfe0 00000000000004dc T nvc0_validate_surfaces
00000000001ee4c0 0000000000000088 t nvc0_init_bindless_functions
00000000001ee550 0000000000000224 t nvc0_m2mf_copy_linear
00000000001ee780 0000000000000204 t nve4_p2mf_push_linear
00000000001ee990 0000000000000254 t nvc0_m2mf_push_linear
00000000001eebf0 0000000000000190 t nve4_m2mf_copy_linear
00000000001eed80 000000000000050c t nvc0_m2mf_transfer_rect
00000000001ef290 0000000000000364 t nve4_m2mf_transfer_rect
00000000001ef600 00000000000005b8 T nvc0_miptree_transfer_map
00000000001efbc0 0000000000000160 T nvc0_miptree_transfer_unmap
00000000001efd20 00000000000001a4 t nvc0_cb_bo_push
00000000001efed0 00000000000000e8 t nvc0_cb_push
00000000001effc0 000000000000007c t nvc0_init_transfer_functions
00000000001f0040 000000000000016c t nve4_upload_indirect_desc
00000000001f01b0 00000000000000ac t nve4_compute_validate_samplers
00000000001f0260 000000000000025c t nve4_compute_validate_buffers
00000000001f04c0 0000000000000384 t nve4_compute_validate_constbufs
00000000001f0850 00000000000001f4 t nve4_compute_set_tex_handles
00000000001f0a50 000000000000048c t nve4_compute_validate_textures
00000000001f0ee0 00000000000005ec t nve4_compute_validate_surfaces
00000000001f14d0 00000000000006c0 t nve4_screen_compute_setup
00000000001f1b90 0000000000000c58 T nve4_launch_grid
00000000001f27f0 00000000000000f8 t env_var_as_boolean
00000000001f28f0 0000000000000398 t XXH32_finalize
00000000001f2c90 00000000000000f4 t hash_table_search
00000000001f2d90 0000000000000020 T _mesa_hash_pointer
00000000001f2db0 000000000000000c T _mesa_key_pointer_equal
00000000001f2dc0 000000000000016c t _mesa_hash_table_rehash
00000000001f2f30 00000000000001b8 t hash_table_insert
00000000001f30f0 0000000000000098 t _mesa_hash_table_create
00000000001f3190 00000000000000bc t _mesa_hash_table_destroy
00000000001f3250 0000000000000080 t _mesa_hash_table_clear
00000000001f32d0 0000000000000008 t _mesa_hash_table_set_deleted_key
00000000001f32e0 0000000000000038 t _mesa_hash_table_search
00000000001f3320 0000000000000004 t _mesa_hash_table_search_pre_hashed
00000000001f3330 0000000000000048 t _mesa_hash_table_insert
00000000001f3380 0000000000000004 t _mesa_hash_table_insert_pre_hashed
00000000001f3390 0000000000000020 t _mesa_hash_table_remove
00000000001f33b0 0000000000000054 t _mesa_hash_table_next_entry
00000000001f3410 00000000000001e8 t _mesa_hash_data
00000000001f3600 0000000000000034 t _mesa_hash_string
00000000001f3640 000000000000001c T _mesa_key_string_equal
00000000001f3660 0000000000000014 t _mesa_pointer_hash_table_create
00000000001f3680 000000000000005c t _mesa_hash_table_u64_create
00000000001f36e0 00000000000000ac t _mesa_hash_table_u64_clear
00000000001f3790 000000000000003c t _mesa_hash_table_u64_destroy
00000000001f37d0 0000000000000074 t _mesa_hash_table_u64_insert
00000000001f3850 0000000000000058 t _mesa_hash_table_u64_search
00000000001f38b0 000000000000009c t _mesa_hash_table_u64_remove
00000000001f3950 0000000000000084 t resize
00000000001f39e0 0000000000000034 t printf_length
00000000001f3a20 00000000000001ec t unsafe_free
00000000001f3c10 0000000000000058 t ralloc_context
00000000001f3c70 0000000000000058 t ralloc_size
00000000001f3cd0 0000000000000038 t rzalloc_size
00000000001f3d10 0000000000000018 t reralloc_size
00000000001f3d30 0000000000000080 t ralloc_array_size
00000000001f3db0 0000000000000050 t rzalloc_array_size
00000000001f3e00 000000000000002c t reralloc_array_size
00000000001f3e30 0000000000000098 t ralloc_free
00000000001f3ed0 00000000000000a0 t ralloc_steal
00000000001f3f70 0000000000000020 t ralloc_parent
00000000001f3f90 0000000000000008 t ralloc_set_destructor
00000000001f3fa0 0000000000000070 t ralloc_strdup
00000000001f4010 0000000000000074 t ralloc_strndup
00000000001f4090 0000000000000098 t ralloc_strcat
00000000001f4130 00000000000000d8 t ralloc_asprintf
00000000001f4210 0000000000000084 t ralloc_vasprintf
00000000001f42a0 000000000000014c t ralloc_vasprintf_rewrite_tail
00000000001f43f0 0000000000000060 t ralloc_vasprintf_append
00000000001f4450 000000000000006c t ralloc_asprintf_rewrite_tail
00000000001f44c0 00000000000000b8 t ralloc_asprintf_append
00000000001f4580 00000000000000b4 t linear_alloc_child
00000000001f4640 0000000000000084 t linear_alloc_parent
00000000001f46d0 0000000000000038 t linear_zalloc_child
00000000001f4710 0000000000000080 t linear_strdup
00000000001f4790 00000000000000d8 t linear_asprintf
00000000001f4870 000000000000017c t linear_vasprintf_rewrite_tail
00000000001f49f0 00000000000000c0 t linear_asprintf_append
00000000001f4ab0 00000000000000dc t linear_strcat
00000000001f4b90 000000000000009c t _debug_printf
00000000001f4c30 0000000000000040 t _debug_vprintf
00000000001f4c70 0000000000000074 t _pipe_debug_message
00000000001f4cf0 000000000000010c t debug_get_bool_option
00000000001f4e00 000000000000021c t debug_get_flags_option
00000000001f5020 0000000000000064 t debug_dump_enum
00000000001f5090 00000000000001a0 t util_copy_rect
00000000001f5230 0000000000000078 t util_format_is_float
00000000001f52b0 0000000000000038 t util_format_has_alpha
00000000001f52f0 000000000000003c t util_format_is_luminance
00000000001f5330 0000000000000040 t util_format_is_alpha
00000000001f5370 0000000000000070 t util_format_is_pure_integer
00000000001f53e0 0000000000000080 t util_format_is_pure_sint
00000000001f5460 0000000000000080 t util_format_is_pure_uint
00000000001f54e0 000000000000001c t util_format_is_snorm
00000000001f5500 000000000000003c t util_format_is_luminance_alpha
00000000001f5540 0000000000000038 t util_format_is_intensity
00000000001f5580 000000000000008c t util_format_read_4f
00000000001f5610 000000000000008c t util_format_read_4ub
00000000001f56a0 000000000000008c t util_format_read_4ui
00000000001f5730 000000000000008c t util_format_read_4i
00000000001f57c0 0000000000000110 t util_format_apply_color_swizzle
00000000001f58d0 000000000000006c t util_format_none_unpack_rgba_float
00000000001f5940 0000000000000088 t util_format_none_pack_rgba_float
00000000001f59d0 000000000000001c t util_format_none_fetch_rgba_float
00000000001f59f0 0000000000000074 t util_format_none_unpack_rgba_8unorm
00000000001f5a70 000000000000006c t util_format_none_pack_rgba_8unorm
00000000001f5ae0 00000000000000a4 t util_format_b8g8r8a8_unorm_unpack_rgba_float
00000000001f5b90 0000000000000054 t util_format_b8g8r8a8_unorm_fetch_rgba_float
00000000001f5bf0 0000000000000078 t util_format_b8g8r8a8_unorm_unpack_rgba_8unorm
00000000001f5c70 000000000000007c t util_format_b8g8r8a8_unorm_pack_rgba_8unorm
00000000001f5cf0 000000000000009c t util_format_b8g8r8x8_unorm_unpack_rgba_float
00000000001f5d90 000000000000004c t util_format_b8g8r8x8_unorm_fetch_rgba_float
00000000001f5de0 0000000000000074 t util_format_b8g8r8x8_unorm_unpack_rgba_8unorm
00000000001f5e60 0000000000000074 t util_format_b8g8r8x8_unorm_pack_rgba_8unorm
00000000001f5ee0 00000000000000a4 t util_format_a8r8g8b8_unorm_unpack_rgba_float
00000000001f5f90 0000000000000054 t util_format_a8r8g8b8_unorm_fetch_rgba_float
00000000001f5ff0 0000000000000078 t util_format_a8r8g8b8_unorm_unpack_rgba_8unorm
00000000001f6070 000000000000007c t util_format_a8r8g8b8_unorm_pack_rgba_8unorm
00000000001f60f0 000000000000009c t util_format_x8r8g8b8_unorm_unpack_rgba_float
00000000001f6190 000000000000004c t util_format_x8r8g8b8_unorm_fetch_rgba_float
00000000001f61e0 0000000000000078 t util_format_x8r8g8b8_unorm_unpack_rgba_8unorm
00000000001f6260 0000000000000074 t util_format_x8r8g8b8_unorm_pack_rgba_8unorm
00000000001f62e0 00000000000000a4 t util_format_a8b8g8r8_unorm_unpack_rgba_float
00000000001f6390 0000000000000054 t util_format_a8b8g8r8_unorm_fetch_rgba_float
00000000001f63f0 0000000000000078 t util_format_a8b8g8r8_unorm_unpack_rgba_8unorm
00000000001f6470 0000000000000048 t util_format_a8b8g8r8_unorm_pack_rgba_8unorm
00000000001f64c0 000000000000009c t util_format_x8b8g8r8_unorm_unpack_rgba_float
00000000001f6560 0000000000000050 t util_format_x8b8g8r8_unorm_fetch_rgba_float
00000000001f65b0 0000000000000078 t util_format_x8b8g8r8_unorm_unpack_rgba_8unorm
00000000001f6630 0000000000000070 t util_format_x8b8g8r8_unorm_pack_rgba_8unorm
00000000001f66a0 000000000000009c t util_format_r8g8b8x8_unorm_unpack_rgba_float
00000000001f6740 000000000000004c t util_format_r8g8b8x8_unorm_fetch_rgba_float
00000000001f6790 0000000000000074 t util_format_r8g8b8x8_unorm_unpack_rgba_8unorm
00000000001f6810 0000000000000070 t util_format_r8g8b8x8_unorm_pack_rgba_8unorm
00000000001f6880 000000000000009c t util_format_r5g5b5a1_unorm_unpack_rgba_float
00000000001f6920 000000000000017c t util_format_r5g5b5a1_unorm_pack_rgba_float
00000000001f6aa0 000000000000004c t util_format_r5g5b5a1_unorm_fetch_rgba_float
00000000001f6af0 00000000000000d8 t util_format_r5g5b5a1_unorm_unpack_rgba_8unorm
00000000001f6bd0 0000000000000090 t util_format_r5g5b5a1_unorm_pack_rgba_8unorm
00000000001f6c60 0000000000000098 t util_format_b5g5r5x1_unorm_unpack_rgba_float
00000000001f6d00 0000000000000150 t util_format_b5g5r5x1_unorm_pack_rgba_float
00000000001f6e50 0000000000000048 t util_format_b5g5r5x1_unorm_fetch_rgba_float
00000000001f6ea0 00000000000000d4 t util_format_b5g5r5x1_unorm_unpack_rgba_8unorm
00000000001f6f80 000000000000007c t util_format_b5g5r5x1_unorm_pack_rgba_8unorm
00000000001f7000 000000000000009c t util_format_b5g5r5a1_unorm_unpack_rgba_float
00000000001f70a0 000000000000017c t util_format_b5g5r5a1_unorm_pack_rgba_float
00000000001f7220 000000000000004c t util_format_b5g5r5a1_unorm_fetch_rgba_float
00000000001f7270 00000000000000d8 t util_format_b5g5r5a1_unorm_unpack_rgba_8unorm
00000000001f7350 000000000000008c t util_format_b5g5r5a1_unorm_pack_rgba_8unorm
00000000001f73e0 000000000000009c t util_format_x1b5g5r5_unorm_unpack_rgba_float
00000000001f7480 0000000000000150 t util_format_x1b5g5r5_unorm_pack_rgba_float
00000000001f75d0 0000000000000050 t util_format_x1b5g5r5_unorm_fetch_rgba_float
00000000001f7620 00000000000000d4 t util_format_x1b5g5r5_unorm_unpack_rgba_8unorm
00000000001f7700 0000000000000084 t util_format_x1b5g5r5_unorm_pack_rgba_8unorm
00000000001f7790 000000000000009c t util_format_a1r5g5b5_unorm_unpack_rgba_float
00000000001f7830 0000000000000180 t util_format_a1r5g5b5_unorm_pack_rgba_float
00000000001f79b0 000000000000004c t util_format_a1r5g5b5_unorm_fetch_rgba_float
00000000001f7a00 00000000000000d8 t util_format_a1r5g5b5_unorm_unpack_rgba_8unorm
00000000001f7ae0 0000000000000090 t util_format_a1r5g5b5_unorm_pack_rgba_8unorm
00000000001f7b70 000000000000009c t util_format_a1b5g5r5_unorm_unpack_rgba_float
00000000001f7c10 0000000000000180 t util_format_a1b5g5r5_unorm_pack_rgba_float
00000000001f7d90 000000000000004c t util_format_a1b5g5r5_unorm_fetch_rgba_float
00000000001f7de0 00000000000000d8 t util_format_a1b5g5r5_unorm_unpack_rgba_8unorm
00000000001f7ec0 0000000000000090 t util_format_a1b5g5r5_unorm_pack_rgba_8unorm
00000000001f7f50 00000000000000a0 t util_format_r4g4b4a4_unorm_unpack_rgba_float
00000000001f7ff0 00000000000001a0 t util_format_r4g4b4a4_unorm_pack_rgba_float
00000000001f8190 0000000000000050 t util_format_r4g4b4a4_unorm_fetch_rgba_float
00000000001f81e0 00000000000000c4 t util_format_r4g4b4a4_unorm_unpack_rgba_8unorm
00000000001f82b0 000000000000008c t util_format_r4g4b4a4_unorm_pack_rgba_8unorm
00000000001f8340 00000000000000a0 t util_format_b4g4r4a4_unorm_unpack_rgba_float
00000000001f83e0 00000000000001a0 t util_format_b4g4r4a4_unorm_pack_rgba_float
00000000001f8580 0000000000000050 t util_format_b4g4r4a4_unorm_fetch_rgba_float
00000000001f85d0 00000000000000c4 t util_format_b4g4r4a4_unorm_unpack_rgba_8unorm
00000000001f86a0 0000000000000088 t util_format_b4g4r4a4_unorm_pack_rgba_8unorm
00000000001f8730 0000000000000098 t util_format_b4g4r4x4_unorm_unpack_rgba_float
00000000001f87d0 0000000000000150 t util_format_b4g4r4x4_unorm_pack_rgba_float
00000000001f8920 0000000000000048 t util_format_b4g4r4x4_unorm_fetch_rgba_float
00000000001f8970 00000000000000b0 t util_format_b4g4r4x4_unorm_unpack_rgba_8unorm
00000000001f8a20 0000000000000078 t util_format_b4g4r4x4_unorm_pack_rgba_8unorm
00000000001f8aa0 00000000000000a0 t util_format_a4r4g4b4_unorm_unpack_rgba_float
00000000001f8b40 00000000000001a0 t util_format_a4r4g4b4_unorm_pack_rgba_float
00000000001f8ce0 0000000000000050 t util_format_a4r4g4b4_unorm_fetch_rgba_float
00000000001f8d30 00000000000000c4 t util_format_a4r4g4b4_unorm_unpack_rgba_8unorm
00000000001f8e00 000000000000008c t util_format_a4r4g4b4_unorm_pack_rgba_8unorm
00000000001f8e90 00000000000000a0 t util_format_a4b4g4r4_unorm_unpack_rgba_float
00000000001f8f30 00000000000001a0 t util_format_a4b4g4r4_unorm_pack_rgba_float
00000000001f90d0 0000000000000050 t util_format_a4b4g4r4_unorm_fetch_rgba_float
00000000001f9120 00000000000000c4 t util_format_a4b4g4r4_unorm_unpack_rgba_8unorm
00000000001f91f0 000000000000008c t util_format_a4b4g4r4_unorm_pack_rgba_8unorm
00000000001f9280 00000000000000a4 t util_format_r5g6b5_unorm_unpack_rgba_float
00000000001f9330 0000000000000158 t util_format_r5g6b5_unorm_pack_rgba_float
00000000001f9490 0000000000000058 t util_format_r5g6b5_unorm_fetch_rgba_float
00000000001f94f0 00000000000000dc t util_format_r5g6b5_unorm_unpack_rgba_8unorm
00000000001f95d0 0000000000000080 t util_format_r5g6b5_unorm_pack_rgba_8unorm
00000000001f9650 00000000000000a4 t util_format_b5g6r5_unorm_unpack_rgba_float
00000000001f9700 0000000000000158 t util_format_b5g6r5_unorm_pack_rgba_float
00000000001f9860 0000000000000054 t util_format_b5g6r5_unorm_fetch_rgba_float
00000000001f98c0 00000000000000dc t util_format_b5g6r5_unorm_unpack_rgba_8unorm
00000000001f99a0 000000000000007c t util_format_b5g6r5_unorm_pack_rgba_8unorm
00000000001f9a20 00000000000000b0 t util_format_r10g10b10a2_unorm_unpack_rgba_float
00000000001f9ad0 00000000000001a8 t util_format_r10g10b10a2_unorm_pack_rgba_float
00000000001f9c80 000000000000005c t util_format_r10g10b10a2_unorm_fetch_rgba_float
00000000001f9ce0 0000000000000094 t util_format_r10g10b10a2_unorm_unpack_rgba_8unorm
00000000001f9d80 00000000000000b8 t util_format_r10g10b10a2_unorm_pack_rgba_8unorm
00000000001f9e40 0000000000000098 t util_format_r10g10b10x2_unorm_unpack_rgba_float
00000000001f9ee0 0000000000000158 t util_format_r10g10b10x2_unorm_pack_rgba_float
00000000001fa040 0000000000000048 t util_format_r10g10b10x2_unorm_fetch_rgba_float
00000000001fa090 0000000000000078 t util_format_r10g10b10x2_unorm_unpack_rgba_8unorm
00000000001fa110 00000000000000a8 t util_format_r10g10b10x2_unorm_pack_rgba_8unorm
00000000001fa1c0 00000000000000b0 t util_format_b10g10r10a2_unorm_unpack_rgba_float
00000000001fa270 00000000000001a8 t util_format_b10g10r10a2_unorm_pack_rgba_float
00000000001fa420 000000000000005c t util_format_b10g10r10a2_unorm_fetch_rgba_float
00000000001fa480 0000000000000094 t util_format_b10g10r10a2_unorm_unpack_rgba_8unorm
00000000001fa520 00000000000000b8 t util_format_b10g10r10a2_unorm_pack_rgba_8unorm
00000000001fa5e0 00000000000000b0 t util_format_a2r10g10b10_unorm_unpack_rgba_float
00000000001fa690 00000000000001a8 t util_format_a2r10g10b10_unorm_pack_rgba_float
00000000001fa840 000000000000005c t util_format_a2r10g10b10_unorm_fetch_rgba_float
00000000001fa8a0 0000000000000094 t util_format_a2r10g10b10_unorm_unpack_rgba_8unorm
00000000001fa940 00000000000000b8 t util_format_a2r10g10b10_unorm_pack_rgba_8unorm
00000000001faa00 00000000000000b0 t util_format_a2b10g10r10_unorm_unpack_rgba_float
00000000001faab0 00000000000001a8 t util_format_a2b10g10r10_unorm_pack_rgba_float
00000000001fac60 000000000000005c t util_format_a2b10g10r10_unorm_fetch_rgba_float
00000000001facc0 0000000000000094 t util_format_a2b10g10r10_unorm_unpack_rgba_8unorm
00000000001fad60 00000000000000b8 t util_format_a2b10g10r10_unorm_pack_rgba_8unorm
00000000001fae20 00000000000000a4 t util_format_r3g3b2_unorm_unpack_rgba_float
00000000001faed0 0000000000000158 t util_format_r3g3b2_unorm_pack_rgba_float
00000000001fb030 0000000000000058 t util_format_r3g3b2_unorm_fetch_rgba_float
00000000001fb090 00000000000000d0 t util_format_r3g3b2_unorm_unpack_rgba_8unorm
00000000001fb160 0000000000000078 t util_format_r3g3b2_unorm_pack_rgba_8unorm
00000000001fb1e0 00000000000000a4 t util_format_b2g3r3_unorm_unpack_rgba_float
00000000001fb290 0000000000000158 t util_format_b2g3r3_unorm_pack_rgba_float
00000000001fb3f0 000000000000005c t util_format_b2g3r3_unorm_fetch_rgba_float
00000000001fb450 00000000000000d0 t util_format_b2g3r3_unorm_unpack_rgba_8unorm
00000000001fb520 000000000000007c t util_format_b2g3r3_unorm_pack_rgba_8unorm
00000000001fb5a0 000000000000007c t util_format_l8_unorm_unpack_rgba_float
00000000001fb620 0000000000000028 t util_format_l8_unorm_fetch_rgba_float
00000000001fb650 000000000000006c t util_format_l8_unorm_unpack_rgba_8unorm
00000000001fb6c0 000000000000005c t util_format_l8_unorm_pack_rgba_8unorm
00000000001fb720 0000000000000078 t util_format_a8_unorm_unpack_rgba_float
00000000001fb7a0 0000000000000028 t util_format_a8_unorm_fetch_rgba_float
00000000001fb7d0 000000000000006c t util_format_a8_unorm_unpack_rgba_8unorm
00000000001fb840 0000000000000060 t util_format_a8_unorm_pack_rgba_8unorm
00000000001fb8a0 0000000000000074 t util_format_i8_unorm_unpack_rgba_float
00000000001fb920 0000000000000024 t util_format_i8_unorm_fetch_rgba_float
00000000001fb950 000000000000006c t util_format_i8_unorm_unpack_rgba_8unorm
00000000001fb9c0 0000000000000088 t util_format_l4a4_unorm_unpack_rgba_float
00000000001fba50 0000000000000100 t util_format_l4a4_unorm_pack_rgba_float
00000000001fbb50 0000000000000038 t util_format_l4a4_unorm_fetch_rgba_float
00000000001fbb90 000000000000009c t util_format_l4a4_unorm_unpack_rgba_8unorm
00000000001fbc30 000000000000006c t util_format_l4a4_unorm_pack_rgba_8unorm
00000000001fbca0 000000000000008c t util_format_l8a8_unorm_unpack_rgba_float
00000000001fbd30 000000000000003c t util_format_l8a8_unorm_fetch_rgba_float
00000000001fbd70 0000000000000074 t util_format_l8a8_unorm_unpack_rgba_8unorm
00000000001fbdf0 0000000000000068 t util_format_l8a8_unorm_pack_rgba_8unorm
00000000001fbe60 000000000000007c t util_format_l16_unorm_unpack_rgba_float
00000000001fbee0 00000000000000b8 t util_format_l16_unorm_pack_rgba_float
00000000001fbfa0 0000000000000028 t util_format_l16_unorm_fetch_rgba_float
00000000001fbfd0 0000000000000070 t util_format_l16_unorm_unpack_rgba_8unorm
00000000001fc040 0000000000000074 t util_format_l16_unorm_pack_rgba_8unorm
00000000001fc0c0 0000000000000078 t util_format_a16_unorm_unpack_rgba_float
00000000001fc140 00000000000000b8 t util_format_a16_unorm_pack_rgba_float
00000000001fc200 0000000000000028 t util_format_a16_unorm_fetch_rgba_float
00000000001fc230 0000000000000070 t util_format_a16_unorm_unpack_rgba_8unorm
00000000001fc2a0 0000000000000078 t util_format_a16_unorm_pack_rgba_8unorm
00000000001fc320 0000000000000074 t util_format_i16_unorm_unpack_rgba_float
00000000001fc3a0 0000000000000024 t util_format_i16_unorm_fetch_rgba_float
00000000001fc3d0 0000000000000070 t util_format_i16_unorm_unpack_rgba_8unorm
00000000001fc440 0000000000000088 t util_format_l16a16_unorm_unpack_rgba_float
00000000001fc4d0 0000000000000104 t util_format_l16a16_unorm_pack_rgba_float
00000000001fc5e0 0000000000000038 t util_format_l16a16_unorm_fetch_rgba_float
00000000001fc620 0000000000000074 t util_format_l16a16_unorm_unpack_rgba_8unorm
00000000001fc6a0 000000000000008c t util_format_l16a16_unorm_pack_rgba_8unorm
00000000001fc730 0000000000000078 t util_format_a8_snorm_unpack_rgba_float
00000000001fc7b0 00000000000000b8 t util_format_a8_snorm_pack_rgba_float
00000000001fc870 0000000000000028 t util_format_a8_snorm_fetch_rgba_float
00000000001fc8a0 0000000000000098 t util_format_a8_snorm_unpack_rgba_8unorm
00000000001fc940 0000000000000064 t util_format_a8_snorm_pack_rgba_8unorm
00000000001fc9b0 000000000000007c t util_format_l8_snorm_unpack_rgba_float
00000000001fca30 00000000000000b8 t util_format_l8_snorm_pack_rgba_float
00000000001fcaf0 000000000000002c t util_format_l8_snorm_fetch_rgba_float
00000000001fcb20 000000000000009c t util_format_l8_snorm_unpack_rgba_8unorm
00000000001fcbc0 0000000000000060 t util_format_l8_snorm_pack_rgba_8unorm
00000000001fcc20 0000000000000084 t util_format_l8a8_snorm_unpack_rgba_float
00000000001fccb0 0000000000000108 t util_format_l8a8_snorm_pack_rgba_float
00000000001fcdc0 0000000000000034 t util_format_l8a8_snorm_fetch_rgba_float
00000000001fce00 00000000000000c4 t util_format_l8a8_snorm_unpack_rgba_8unorm
00000000001fced0 0000000000000070 t util_format_l8a8_snorm_pack_rgba_8unorm
00000000001fcf40 0000000000000074 t util_format_i8_snorm_unpack_rgba_float
00000000001fcfc0 0000000000000024 t util_format_i8_snorm_fetch_rgba_float
00000000001fcff0 000000000000009c t util_format_i8_snorm_unpack_rgba_8unorm
00000000001fd090 0000000000000078 t util_format_a16_snorm_unpack_rgba_float
00000000001fd110 00000000000000c0 t util_format_a16_snorm_pack_rgba_float
00000000001fd1d0 0000000000000028 t util_format_a16_snorm_fetch_rgba_float
00000000001fd200 0000000000000078 t util_format_a16_snorm_unpack_rgba_8unorm
00000000001fd280 0000000000000078 t util_format_a16_snorm_pack_rgba_8unorm
00000000001fd300 000000000000007c t util_format_l16_snorm_unpack_rgba_float
00000000001fd380 00000000000000c0 t util_format_l16_snorm_pack_rgba_float
00000000001fd440 000000000000002c t util_format_l16_snorm_fetch_rgba_float
00000000001fd470 000000000000007c t util_format_l16_snorm_unpack_rgba_8unorm
00000000001fd4f0 0000000000000074 t util_format_l16_snorm_pack_rgba_8unorm
00000000001fd570 0000000000000088 t util_format_l16a16_snorm_unpack_rgba_float
00000000001fd600 0000000000000114 t util_format_l16a16_snorm_pack_rgba_float
00000000001fd720 0000000000000038 t util_format_l16a16_snorm_fetch_rgba_float
00000000001fd760 000000000000008c t util_format_l16a16_snorm_unpack_rgba_8unorm
00000000001fd7f0 000000000000008c t util_format_l16a16_snorm_pack_rgba_8unorm
00000000001fd880 0000000000000074 t util_format_i16_snorm_unpack_rgba_float
00000000001fd900 0000000000000024 t util_format_i16_snorm_fetch_rgba_float
00000000001fd930 000000000000007c t util_format_i16_snorm_unpack_rgba_8unorm
00000000001fd9b0 00000000000000a8 t util_format_a16_float_unpack_rgba_float
00000000001fda60 0000000000000060 t util_format_a16_float_fetch_rgba_float
00000000001fdac0 00000000000000a8 t util_format_l16_float_unpack_rgba_float
00000000001fdb70 0000000000000070 t util_format_l16_float_fetch_rgba_float
00000000001fdbe0 00000000000000dc t util_format_l16a16_float_unpack_rgba_float
00000000001fdcc0 00000000000000a4 t util_format_l16a16_float_fetch_rgba_float
00000000001fdd70 00000000000000a8 t util_format_i16_float_unpack_rgba_float
00000000001fde20 0000000000000068 t util_format_i16_float_fetch_rgba_float
00000000001fde90 0000000000000068 t util_format_a32_float_unpack_rgba_float
00000000001fdf00 0000000000000054 t util_format_a32_float_pack_rgba_float
00000000001fdf60 0000000000000014 t util_format_a32_float_fetch_rgba_float
00000000001fdf80 000000000000006c t util_format_a32_float_pack_rgba_8unorm
00000000001fdff0 0000000000000068 t util_format_l32_float_unpack_rgba_float
00000000001fe060 0000000000000054 t util_format_l32_float_pack_rgba_float
00000000001fe0c0 0000000000000014 t util_format_l32_float_fetch_rgba_float
00000000001fe0e0 0000000000000064 t util_format_l32_float_pack_rgba_8unorm
00000000001fe150 0000000000000070 t util_format_l32a32_float_unpack_rgba_float
00000000001fe1c0 000000000000006c t util_format_l32a32_float_pack_rgba_float
00000000001fe230 000000000000001c t util_format_l32a32_float_fetch_rgba_float
00000000001fe250 000000000000008c t util_format_l32a32_float_pack_rgba_8unorm
00000000001fe2e0 0000000000000068 t util_format_i32_float_unpack_rgba_float
00000000001fe350 0000000000000010 t util_format_i32_float_fetch_rgba_float
00000000001fe360 0000000000000070 t util_format_l8_srgb_unpack_rgba_float
00000000001fe3d0 0000000000000024 t util_format_l8_srgb_fetch_rgba_float
00000000001fe400 0000000000000078 t util_format_l8_srgb_unpack_rgba_8unorm
00000000001fe480 0000000000000068 t util_format_l8_srgb_pack_rgba_8unorm
00000000001fe4f0 0000000000000074 t util_format_r8_srgb_unpack_rgba_float
00000000001fe570 0000000000000024 t util_format_r8_srgb_fetch_rgba_float
00000000001fe5a0 0000000000000078 t util_format_r8_srgb_unpack_rgba_8unorm
00000000001fe620 000000000000008c t util_format_l8a8_srgb_unpack_rgba_float
00000000001fe6b0 000000000000003c t util_format_l8a8_srgb_fetch_rgba_float
00000000001fe6f0 0000000000000080 t util_format_l8a8_srgb_unpack_rgba_8unorm
00000000001fe770 0000000000000078 t util_format_l8a8_srgb_pack_rgba_8unorm
00000000001fe7f0 0000000000000080 t util_format_r8g8_srgb_unpack_rgba_float
00000000001fe870 000000000000002c t util_format_r8g8_srgb_fetch_rgba_float
00000000001fe8a0 0000000000000084 t util_format_r8g8_srgb_unpack_rgba_8unorm
00000000001fe930 0000000000000078 t util_format_r8g8_srgb_pack_rgba_8unorm
00000000001fe9b0 0000000000000080 t util_format_r8g8b8_srgb_unpack_rgba_float
00000000001fea30 0000000000000034 t util_format_r8g8b8_srgb_fetch_rgba_float
00000000001fea70 0000000000000088 t util_format_r8g8b8_srgb_unpack_rgba_8unorm
00000000001feb00 0000000000000084 t util_format_r8g8b8_srgb_pack_rgba_8unorm
00000000001feb90 0000000000000084 t util_format_b8g8r8_srgb_unpack_rgba_float
00000000001fec20 0000000000000034 t util_format_b8g8r8_srgb_fetch_rgba_float
00000000001fec60 000000000000008c t util_format_b8g8r8_srgb_unpack_rgba_8unorm
00000000001fecf0 0000000000000088 t util_format_b8g8r8_srgb_pack_rgba_8unorm
00000000001fed80 000000000000009c t util_format_r8g8b8a8_srgb_unpack_rgba_float
00000000001fee20 000000000000004c t util_format_r8g8b8a8_srgb_fetch_rgba_float
00000000001fee70 0000000000000090 t util_format_r8g8b8a8_srgb_unpack_rgba_8unorm
00000000001fef00 0000000000000090 t util_format_r8g8b8a8_srgb_pack_rgba_8unorm
00000000001fef90 000000000000009c t util_format_a8b8g8r8_srgb_unpack_rgba_float
00000000001ff030 000000000000004c t util_format_a8b8g8r8_srgb_fetch_rgba_float
00000000001ff080 000000000000008c t util_format_a8b8g8r8_srgb_unpack_rgba_8unorm
00000000001ff110 0000000000000090 t util_format_a8b8g8r8_srgb_pack_rgba_8unorm
00000000001ff1a0 0000000000000084 t util_format_x8b8g8r8_srgb_unpack_rgba_float
00000000001ff230 0000000000000038 t util_format_x8b8g8r8_srgb_fetch_rgba_float
00000000001ff270 000000000000008c t util_format_x8b8g8r8_srgb_unpack_rgba_8unorm
00000000001ff300 0000000000000084 t util_format_x8b8g8r8_srgb_pack_rgba_8unorm
00000000001ff390 000000000000009c t util_format_b8g8r8a8_srgb_unpack_rgba_float
00000000001ff430 000000000000004c t util_format_b8g8r8a8_srgb_fetch_rgba_float
00000000001ff480 0000000000000090 t util_format_b8g8r8a8_srgb_unpack_rgba_8unorm
00000000001ff510 0000000000000090 t util_format_b8g8r8a8_srgb_pack_rgba_8unorm
00000000001ff5a0 0000000000000084 t util_format_b8g8r8x8_srgb_unpack_rgba_float
00000000001ff630 0000000000000038 t util_format_b8g8r8x8_srgb_fetch_rgba_float
00000000001ff670 000000000000008c t util_format_b8g8r8x8_srgb_unpack_rgba_8unorm
00000000001ff700 0000000000000088 t util_format_b8g8r8x8_srgb_pack_rgba_8unorm
00000000001ff790 000000000000009c t util_format_a8r8g8b8_srgb_unpack_rgba_float
00000000001ff830 000000000000004c t util_format_a8r8g8b8_srgb_fetch_rgba_float
00000000001ff880 000000000000008c t util_format_a8r8g8b8_srgb_unpack_rgba_8unorm
00000000001ff910 0000000000000090 t util_format_a8r8g8b8_srgb_pack_rgba_8unorm
00000000001ff9a0 0000000000000084 t util_format_x8r8g8b8_srgb_unpack_rgba_float
00000000001ffa30 0000000000000038 t util_format_x8r8g8b8_srgb_fetch_rgba_float
00000000001ffa70 000000000000008c t util_format_x8r8g8b8_srgb_unpack_rgba_8unorm
00000000001ffb00 0000000000000088 t util_format_x8r8g8b8_srgb_pack_rgba_8unorm
00000000001ffb90 00000000000000a0 t util_format_r8sg8sb8ux8u_norm_unpack_rgba_float
00000000001ffc30 0000000000000054 t util_format_r8sg8sb8ux8u_norm_fetch_rgba_float
00000000001ffc90 00000000000000c8 t util_format_r8sg8sb8ux8u_norm_unpack_rgba_8unorm
00000000001ffd60 0000000000000078 t util_format_r8sg8sb8ux8u_norm_pack_rgba_8unorm
00000000001ffde0 00000000000000b0 t util_format_r10sg10sb10sa2u_norm_unpack_rgba_float
00000000001ffe90 00000000000001b0 t util_format_r10sg10sb10sa2u_norm_pack_rgba_float
0000000000200040 000000000000005c t util_format_r10sg10sb10sa2u_norm_fetch_rgba_float
00000000002000a0 00000000000000b8 t util_format_r10sg10sb10sa2u_norm_unpack_rgba_8unorm
0000000000200160 00000000000000b8 t util_format_r10sg10sb10sa2u_norm_pack_rgba_8unorm
0000000000200220 00000000000000a4 t util_format_r5sg5sb6u_norm_unpack_rgba_float
00000000002002d0 0000000000000160 t util_format_r5sg5sb6u_norm_pack_rgba_float
0000000000200430 0000000000000058 t util_format_r5sg5sb6u_norm_fetch_rgba_float
0000000000200490 00000000000000d4 t util_format_r5sg5sb6u_norm_unpack_rgba_8unorm
0000000000200570 000000000000007c t util_format_r5sg5sb6u_norm_pack_rgba_8unorm
00000000002005f0 00000000000000a4 t util_format_z24_unorm_s8_uint_as_r8g8b8a8_unpack_rgba_float
00000000002006a0 0000000000000054 t util_format_z24_unorm_s8_uint_as_r8g8b8a8_fetch_rgba_float
0000000000200700 0000000000000078 t util_format_z24_unorm_s8_uint_as_r8g8b8a8_unpack_rgba_8unorm
0000000000200780 0000000000000044 t util_format_z24_unorm_s8_uint_as_r8g8b8a8_pack_rgba_8unorm
00000000002007d0 000000000000006c t util_format_r64_float_unpack_rgba_float
0000000000200840 000000000000004c t util_format_r64_float_pack_rgba_float
0000000000200890 000000000000001c t util_format_r64_float_fetch_rgba_float
00000000002008b0 00000000000000d4 t util_format_r64_float_unpack_rgba_8unorm
0000000000200990 0000000000000064 t util_format_r64_float_pack_rgba_8unorm
0000000000200a00 0000000000000074 t util_format_r64g64_float_unpack_rgba_float
0000000000200a80 000000000000006c t util_format_r64g64_float_pack_rgba_float
0000000000200af0 000000000000001c t util_format_r64g64_float_fetch_rgba_float
0000000000200b10 0000000000000128 t util_format_r64g64_float_unpack_rgba_8unorm
0000000000200c40 0000000000000088 t util_format_r64g64_float_pack_rgba_8unorm
0000000000200cd0 0000000000000068 t util_format_r32_float_unpack_rgba_float
0000000000200d40 0000000000000018 t util_format_r32_float_fetch_rgba_float
0000000000200d60 0000000000000074 t util_format_r32g32_float_unpack_rgba_float
0000000000200de0 0000000000000068 t util_format_r32g32_float_pack_rgba_float
0000000000200e50 000000000000001c t util_format_r32g32_float_fetch_rgba_float
0000000000200e70 000000000000008c t util_format_r32g32_float_pack_rgba_8unorm
0000000000200f00 000000000000007c t util_format_r32g32b32a32_float_unpack_rgba_float
0000000000200f80 000000000000007c t util_format_r32g32b32a32_float_pack_rgba_float
0000000000201000 0000000000000024 t util_format_r32g32b32a32_float_fetch_rgba_float
0000000000201030 00000000000000b8 t util_format_r32g32b32a32_float_pack_rgba_8unorm
00000000002010f0 0000000000000084 t util_format_r32_unorm_unpack_rgba_float
0000000000201180 000000000000008c t util_format_r32_unorm_pack_rgba_float
0000000000201210 0000000000000030 t util_format_r32_unorm_fetch_rgba_float
0000000000201240 0000000000000070 t util_format_r32_unorm_unpack_rgba_8unorm
00000000002012b0 000000000000006c t util_format_r32_unorm_pack_rgba_8unorm
0000000000201320 0000000000000094 t util_format_r32g32_unorm_unpack_rgba_float
00000000002013c0 00000000000000cc t util_format_r32g32_unorm_pack_rgba_float
0000000000201490 000000000000003c t util_format_r32g32_unorm_fetch_rgba_float
00000000002014d0 0000000000000074 t util_format_r32g32_unorm_unpack_rgba_8unorm
0000000000201550 0000000000000094 t util_format_r32g32_unorm_pack_rgba_8unorm
00000000002015f0 00000000000000a8 t util_format_r32g32b32a32_unorm_unpack_rgba_float
00000000002016a0 0000000000000134 t util_format_r32g32b32a32_unorm_pack_rgba_float
00000000002017e0 0000000000000054 t util_format_r32g32b32a32_unorm_fetch_rgba_float
0000000000201840 0000000000000080 t util_format_r32g32b32a32_unorm_unpack_rgba_8unorm
00000000002018c0 00000000000000c8 t util_format_r32g32b32a32_unorm_pack_rgba_8unorm
0000000000201990 000000000000006c t util_format_r32_uscaled_unpack_rgba_float
0000000000201a00 0000000000000078 t util_format_r32_uscaled_pack_rgba_float
0000000000201a80 000000000000001c t util_format_r32_uscaled_fetch_rgba_float
0000000000201aa0 0000000000000074 t util_format_r32_uscaled_unpack_rgba_8unorm
0000000000201b20 0000000000000064 t util_format_r32_uscaled_pack_rgba_8unorm
0000000000201b90 0000000000000074 t util_format_r32g32_uscaled_unpack_rgba_float
0000000000201c10 00000000000000ac t util_format_r32g32_uscaled_pack_rgba_float
0000000000201cc0 0000000000000020 t util_format_r32g32_uscaled_fetch_rgba_float
0000000000201ce0 000000000000007c t util_format_r32g32_uscaled_unpack_rgba_8unorm
0000000000201d60 0000000000000084 t util_format_r32g32_uscaled_pack_rgba_8unorm
0000000000201df0 0000000000000080 t util_format_r32g32b32a32_uscaled_unpack_rgba_float
0000000000201e70 00000000000000fc t util_format_r32g32b32a32_uscaled_pack_rgba_float
0000000000201f70 0000000000000028 t util_format_r32g32b32a32_uscaled_fetch_rgba_float
0000000000201fa0 0000000000000090 t util_format_r32g32b32a32_uscaled_unpack_rgba_8unorm
0000000000202030 00000000000000a8 t util_format_r32g32b32a32_uscaled_pack_rgba_8unorm
00000000002020e0 0000000000000084 t util_format_r32_snorm_unpack_rgba_float
0000000000202170 000000000000008c t util_format_r32_snorm_pack_rgba_float
0000000000202200 0000000000000030 t util_format_r32_snorm_fetch_rgba_float
0000000000202230 0000000000000078 t util_format_r32_snorm_unpack_rgba_8unorm
00000000002022b0 000000000000006c t util_format_r32_snorm_pack_rgba_8unorm
0000000000202320 0000000000000094 t util_format_r32g32_snorm_unpack_rgba_float
00000000002023c0 00000000000000cc t util_format_r32g32_snorm_pack_rgba_float
0000000000202490 000000000000003c t util_format_r32g32_snorm_fetch_rgba_float
00000000002024d0 0000000000000088 t util_format_r32g32_snorm_unpack_rgba_8unorm
0000000000202560 0000000000000094 t util_format_r32g32_snorm_pack_rgba_8unorm
0000000000202600 00000000000000a8 t util_format_r32g32b32a32_snorm_unpack_rgba_float
00000000002026b0 0000000000000134 t util_format_r32g32b32a32_snorm_pack_rgba_float
00000000002027f0 0000000000000054 t util_format_r32g32b32a32_snorm_fetch_rgba_float
0000000000202850 00000000000000a8 t util_format_r32g32b32a32_snorm_unpack_rgba_8unorm
0000000000202900 00000000000000c8 t util_format_r32g32b32a32_snorm_pack_rgba_8unorm
00000000002029d0 000000000000006c t util_format_r32_sscaled_unpack_rgba_float
0000000000202a40 0000000000000078 t util_format_r32_sscaled_pack_rgba_float
0000000000202ac0 000000000000001c t util_format_r32_sscaled_fetch_rgba_float
0000000000202ae0 0000000000000074 t util_format_r32_sscaled_unpack_rgba_8unorm
0000000000202b60 0000000000000074 t util_format_r32g32_sscaled_unpack_rgba_float
0000000000202be0 00000000000000ac t util_format_r32g32_sscaled_pack_rgba_float
0000000000202c90 0000000000000020 t util_format_r32g32_sscaled_fetch_rgba_float
0000000000202cb0 0000000000000080 t util_format_r32g32_sscaled_unpack_rgba_8unorm
0000000000202d30 0000000000000084 t util_format_r32g32_sscaled_pack_rgba_8unorm
0000000000202dc0 0000000000000080 t util_format_r32g32b32a32_sscaled_unpack_rgba_float
0000000000202e40 00000000000000fc t util_format_r32g32b32a32_sscaled_pack_rgba_float
0000000000202f40 0000000000000028 t util_format_r32g32b32a32_sscaled_fetch_rgba_float
0000000000202f70 0000000000000098 t util_format_r32g32b32a32_sscaled_unpack_rgba_8unorm
0000000000203010 00000000000000a8 t util_format_r32g32b32a32_sscaled_pack_rgba_8unorm
00000000002030c0 00000000000000ac t util_format_r16_float_unpack_rgba_float
0000000000203170 0000000000000070 t util_format_r16_float_fetch_rgba_float
00000000002031e0 00000000000000e0 t util_format_r16g16_float_unpack_rgba_float
00000000002032c0 00000000000000ac t util_format_r16g16_float_fetch_rgba_float
0000000000203370 0000000000000144 t util_format_r16g16b16a16_float_unpack_rgba_float
00000000002034c0 0000000000000128 t util_format_r16g16b16a16_float_fetch_rgba_float
00000000002035f0 0000000000000080 t util_format_r16_unorm_unpack_rgba_float
0000000000203670 000000000000002c t util_format_r16_unorm_fetch_rgba_float
00000000002036a0 0000000000000070 t util_format_r16_unorm_unpack_rgba_8unorm
0000000000203710 0000000000000094 t util_format_r16g16_unorm_unpack_rgba_float
00000000002037b0 0000000000000104 t util_format_r16g16_unorm_pack_rgba_float
00000000002038c0 000000000000003c t util_format_r16g16_unorm_fetch_rgba_float
0000000000203900 0000000000000074 t util_format_r16g16_unorm_unpack_rgba_8unorm
0000000000203980 000000000000008c t util_format_r16g16_unorm_pack_rgba_8unorm
0000000000203a10 00000000000000a8 t util_format_r16g16b16a16_unorm_unpack_rgba_float
0000000000203ac0 00000000000001ac t util_format_r16g16b16a16_unorm_pack_rgba_float
0000000000203c70 0000000000000058 t util_format_r16g16b16a16_unorm_fetch_rgba_float
0000000000203cd0 000000000000007c t util_format_r16g16b16a16_unorm_unpack_rgba_8unorm
0000000000203d50 00000000000000c4 t util_format_r16g16b16a16_unorm_pack_rgba_8unorm
0000000000203e20 000000000000006c t util_format_r16_uscaled_unpack_rgba_float
0000000000203e90 0000000000000090 t util_format_r16_uscaled_pack_rgba_float
0000000000203f20 000000000000001c t util_format_r16_uscaled_fetch_rgba_float
0000000000203f40 0000000000000074 t util_format_r16_uscaled_unpack_rgba_8unorm
0000000000203fc0 000000000000006c t util_format_r16_uscaled_pack_rgba_8unorm
0000000000204030 000000000000007c t util_format_r16g16_uscaled_unpack_rgba_float
00000000002040b0 00000000000000b0 t util_format_r16g16_uscaled_pack_rgba_float
0000000000204160 000000000000002c t util_format_r16g16_uscaled_fetch_rgba_float
0000000000204190 000000000000007c t util_format_r16g16_uscaled_unpack_rgba_8unorm
0000000000204210 000000000000007c t util_format_r16g16_uscaled_pack_rgba_8unorm
0000000000204290 0000000000000090 t util_format_r16g16b16a16_uscaled_unpack_rgba_float
0000000000204320 000000000000010c t util_format_r16g16b16a16_uscaled_pack_rgba_float
0000000000204430 000000000000003c t util_format_r16g16b16a16_uscaled_fetch_rgba_float
0000000000204470 000000000000008c t util_format_r16g16b16a16_uscaled_unpack_rgba_8unorm
0000000000204500 00000000000000a4 t util_format_r16g16b16a16_uscaled_pack_rgba_8unorm
00000000002045b0 0000000000000080 t util_format_r16_snorm_unpack_rgba_float
0000000000204630 000000000000002c t util_format_r16_snorm_fetch_rgba_float
0000000000204660 000000000000007c t util_format_r16_snorm_unpack_rgba_8unorm
00000000002046e0 0000000000000094 t util_format_r16g16_snorm_unpack_rgba_float
0000000000204780 0000000000000114 t util_format_r16g16_snorm_pack_rgba_float
00000000002048a0 000000000000003c t util_format_r16g16_snorm_fetch_rgba_float
00000000002048e0 000000000000008c t util_format_r16g16_snorm_unpack_rgba_8unorm
0000000000204970 000000000000008c t util_format_r16g16_snorm_pack_rgba_8unorm
0000000000204a00 00000000000000a4 t util_format_r16g16b16a16_snorm_unpack_rgba_float
0000000000204ab0 00000000000001b4 t util_format_r16g16b16a16_snorm_pack_rgba_float
0000000000204c70 0000000000000054 t util_format_r16g16b16a16_snorm_fetch_rgba_float
0000000000204cd0 00000000000000ac t util_format_r16g16b16a16_snorm_unpack_rgba_8unorm
0000000000204d80 00000000000000c4 t util_format_r16g16b16a16_snorm_pack_rgba_8unorm
0000000000204e50 000000000000006c t util_format_r16_sscaled_unpack_rgba_float
0000000000204ec0 0000000000000090 t util_format_r16_sscaled_pack_rgba_float
0000000000204f50 000000000000001c t util_format_r16_sscaled_fetch_rgba_float
0000000000204f70 0000000000000074 t util_format_r16_sscaled_unpack_rgba_8unorm
0000000000204ff0 000000000000007c t util_format_r16g16_sscaled_unpack_rgba_float
0000000000205070 00000000000000c0 t util_format_r16g16_sscaled_pack_rgba_float
0000000000205130 000000000000002c t util_format_r16g16_sscaled_fetch_rgba_float
0000000000205160 0000000000000084 t util_format_r16g16_sscaled_unpack_rgba_8unorm
00000000002051f0 000000000000007c t util_format_r16g16_sscaled_pack_rgba_8unorm
0000000000205270 000000000000008c t util_format_r16g16b16a16_sscaled_unpack_rgba_float
0000000000205300 000000000000010c t util_format_r16g16b16a16_sscaled_pack_rgba_float
0000000000205410 0000000000000038 t util_format_r16g16b16a16_sscaled_fetch_rgba_float
0000000000205450 000000000000009c t util_format_r16g16b16a16_sscaled_unpack_rgba_8unorm
00000000002054f0 00000000000000a4 t util_format_r16g16b16a16_sscaled_pack_rgba_8unorm
00000000002055a0 0000000000000080 t util_format_r8_unorm_unpack_rgba_float
0000000000205620 000000000000002c t util_format_r8_unorm_fetch_rgba_float
0000000000205650 000000000000006c t util_format_r8_unorm_unpack_rgba_8unorm
00000000002056c0 0000000000000098 t util_format_r8g8_unorm_unpack_rgba_float
0000000000205760 0000000000000040 t util_format_r8g8_unorm_fetch_rgba_float
00000000002057a0 0000000000000070 t util_format_r8g8_unorm_unpack_rgba_8unorm
0000000000205810 0000000000000054 t util_format_r8g8_unorm_pack_rgba_8unorm
0000000000205870 0000000000000094 t util_format_r8g8b8_unorm_unpack_rgba_float
0000000000205910 0000000000000040 t util_format_r8g8b8_unorm_fetch_rgba_float
0000000000205950 0000000000000078 t util_format_r8g8b8_unorm_unpack_rgba_8unorm
00000000002059d0 0000000000000074 t util_format_r8g8b8_unorm_pack_rgba_8unorm
0000000000205a50 0000000000000098 t util_format_b8g8r8_unorm_unpack_rgba_float
0000000000205af0 0000000000000040 t util_format_b8g8r8_unorm_fetch_rgba_float
0000000000205b30 0000000000000078 t util_format_b8g8r8_unorm_unpack_rgba_8unorm
0000000000205bb0 0000000000000070 t util_format_b8g8r8_unorm_pack_rgba_8unorm
0000000000205c20 0000000000000080 t util_format_r8g8_uscaled_unpack_rgba_float
0000000000205ca0 00000000000000b0 t util_format_r8g8_uscaled_pack_rgba_float
0000000000205d50 0000000000000030 t util_format_r8g8_uscaled_fetch_rgba_float
0000000000205d80 000000000000007c t util_format_r8g8_uscaled_unpack_rgba_8unorm
0000000000205e00 000000000000007c t util_format_r8g8_uscaled_pack_rgba_8unorm
0000000000205e80 0000000000000078 t util_format_r8g8b8_uscaled_unpack_rgba_float
0000000000205f00 00000000000000dc t util_format_r8g8b8_uscaled_pack_rgba_float
0000000000205fe0 0000000000000028 t util_format_r8g8b8_uscaled_fetch_rgba_float
0000000000206010 000000000000008c t util_format_r8g8b8_uscaled_unpack_rgba_8unorm
00000000002060a0 0000000000000090 t util_format_r8g8b8_uscaled_pack_rgba_8unorm
0000000000206130 000000000000007c t util_format_b8g8r8_uscaled_unpack_rgba_float
00000000002061b0 00000000000000dc t util_format_b8g8r8_uscaled_pack_rgba_float
0000000000206290 0000000000000028 t util_format_b8g8r8_uscaled_fetch_rgba_float
00000000002062c0 0000000000000090 t util_format_b8g8r8_uscaled_unpack_rgba_8unorm
0000000000206350 0000000000000094 t util_format_b8g8r8_uscaled_pack_rgba_8unorm
00000000002063f0 0000000000000088 t util_format_r8g8b8a8_uscaled_unpack_rgba_float
0000000000206480 00000000000000fc t util_format_r8g8b8a8_uscaled_pack_rgba_float
0000000000206580 0000000000000034 t util_format_r8g8b8a8_uscaled_fetch_rgba_float
00000000002065c0 000000000000008c t util_format_r8g8b8a8_uscaled_unpack_rgba_8unorm
0000000000206650 00000000000000a0 t util_format_r8g8b8a8_uscaled_pack_rgba_8unorm
00000000002066f0 0000000000000088 t util_format_b8g8r8a8_uscaled_unpack_rgba_float
0000000000206780 00000000000000fc t util_format_b8g8r8a8_uscaled_pack_rgba_float
0000000000206880 0000000000000034 t util_format_b8g8r8a8_uscaled_fetch_rgba_float
00000000002068c0 000000000000008c t util_format_b8g8r8a8_uscaled_unpack_rgba_8unorm
0000000000206950 00000000000000a4 t util_format_b8g8r8a8_uscaled_pack_rgba_8unorm
0000000000206a00 0000000000000088 t util_format_a8b8g8r8_uscaled_unpack_rgba_float
0000000000206a90 00000000000000fc t util_format_a8b8g8r8_uscaled_pack_rgba_float
0000000000206b90 0000000000000034 t util_format_a8b8g8r8_uscaled_fetch_rgba_float
0000000000206bd0 000000000000008c t util_format_a8b8g8r8_uscaled_unpack_rgba_8unorm
0000000000206c60 00000000000000a4 t util_format_a8b8g8r8_uscaled_pack_rgba_8unorm
0000000000206d10 0000000000000080 t util_format_r8_snorm_unpack_rgba_float
0000000000206d90 000000000000002c t util_format_r8_snorm_fetch_rgba_float
0000000000206dc0 000000000000009c t util_format_r8_snorm_unpack_rgba_8unorm
0000000000206e60 0000000000000090 t util_format_r8g8_snorm_unpack_rgba_float
0000000000206ef0 0000000000000108 t util_format_r8g8_snorm_pack_rgba_float
0000000000207000 0000000000000038 t util_format_r8g8_snorm_fetch_rgba_float
0000000000207040 00000000000000c4 t util_format_r8g8_snorm_unpack_rgba_8unorm
0000000000207110 0000000000000070 t util_format_r8g8_snorm_pack_rgba_8unorm
0000000000207180 0000000000000094 t util_format_r8g8b8_snorm_unpack_rgba_float
0000000000207220 000000000000015c t util_format_r8g8b8_snorm_pack_rgba_float
0000000000207380 0000000000000044 t util_format_r8g8b8_snorm_fetch_rgba_float
00000000002073d0 00000000000000ec t util_format_r8g8b8_snorm_unpack_rgba_8unorm
00000000002074c0 000000000000007c t util_format_r8g8b8_snorm_pack_rgba_8unorm
0000000000207540 0000000000000098 t util_format_b8g8r8_snorm_unpack_rgba_float
00000000002075e0 000000000000015c t util_format_b8g8r8_snorm_pack_rgba_float
0000000000207740 0000000000000044 t util_format_b8g8r8_snorm_fetch_rgba_float
0000000000207790 00000000000000f0 t util_format_b8g8r8_snorm_unpack_rgba_8unorm
0000000000207880 0000000000000080 t util_format_b8g8r8_snorm_pack_rgba_8unorm
0000000000207900 00000000000000a0 t util_format_r8g8b8a8_snorm_unpack_rgba_float
00000000002079a0 00000000000001b0 t util_format_r8g8b8a8_snorm_pack_rgba_float
0000000000207b50 0000000000000050 t util_format_r8g8b8a8_snorm_fetch_rgba_float
0000000000207ba0 0000000000000114 t util_format_r8g8b8a8_snorm_unpack_rgba_8unorm
0000000000207cc0 0000000000000088 t util_format_r8g8b8a8_snorm_pack_rgba_8unorm
0000000000207d50 00000000000000a0 t util_format_b8g8r8a8_snorm_unpack_rgba_float
0000000000207df0 00000000000001b0 t util_format_b8g8r8a8_snorm_pack_rgba_float
0000000000207fa0 0000000000000050 t util_format_b8g8r8a8_snorm_fetch_rgba_float
0000000000207ff0 0000000000000114 t util_format_b8g8r8a8_snorm_unpack_rgba_8unorm
0000000000208110 000000000000008c t util_format_b8g8r8a8_snorm_pack_rgba_8unorm
00000000002081a0 000000000000006c t util_format_r8_sscaled_unpack_rgba_float
0000000000208210 0000000000000090 t util_format_r8_sscaled_pack_rgba_float
00000000002082a0 000000000000001c t util_format_r8_sscaled_fetch_rgba_float
00000000002082c0 0000000000000074 t util_format_r8_sscaled_unpack_rgba_8unorm
0000000000208340 0000000000000078 t util_format_r8g8_sscaled_unpack_rgba_float
00000000002083c0 00000000000000b8 t util_format_r8g8_sscaled_pack_rgba_float
0000000000208480 0000000000000024 t util_format_r8g8_sscaled_fetch_rgba_float
00000000002084b0 0000000000000084 t util_format_r8g8_sscaled_unpack_rgba_8unorm
0000000000208540 0000000000000080 t util_format_r8g8_sscaled_pack_rgba_8unorm
00000000002085c0 0000000000000078 t util_format_r8g8b8_sscaled_unpack_rgba_float
0000000000208640 00000000000000e4 t util_format_r8g8b8_sscaled_pack_rgba_float
0000000000208730 000000000000002c t util_format_r8g8b8_sscaled_fetch_rgba_float
0000000000208760 000000000000008c t util_format_r8g8b8_sscaled_unpack_rgba_8unorm
00000000002087f0 0000000000000090 t util_format_r8g8b8_sscaled_pack_rgba_8unorm
0000000000208880 000000000000007c t util_format_b8g8r8_sscaled_unpack_rgba_float
0000000000208900 00000000000000e4 t util_format_b8g8r8_sscaled_pack_rgba_float
00000000002089f0 000000000000002c t util_format_b8g8r8_sscaled_fetch_rgba_float
0000000000208a20 0000000000000090 t util_format_b8g8r8_sscaled_unpack_rgba_8unorm
0000000000208ab0 0000000000000094 t util_format_b8g8r8_sscaled_pack_rgba_8unorm
0000000000208b50 0000000000000088 t util_format_r8g8b8a8_sscaled_unpack_rgba_float
0000000000208be0 0000000000000114 t util_format_r8g8b8a8_sscaled_pack_rgba_float
0000000000208d00 0000000000000034 t util_format_r8g8b8a8_sscaled_fetch_rgba_float
0000000000208d40 000000000000009c t util_format_r8g8b8a8_sscaled_unpack_rgba_8unorm
0000000000208de0 00000000000000a0 t util_format_r8g8b8a8_sscaled_pack_rgba_8unorm
0000000000208e80 0000000000000088 t util_format_b8g8r8a8_sscaled_unpack_rgba_float
0000000000208f10 0000000000000114 t util_format_b8g8r8a8_sscaled_pack_rgba_float
0000000000209030 0000000000000034 t util_format_b8g8r8a8_sscaled_fetch_rgba_float
0000000000209070 000000000000009c t util_format_b8g8r8a8_sscaled_unpack_rgba_8unorm
0000000000209110 00000000000000a4 t util_format_b8g8r8a8_sscaled_pack_rgba_8unorm
00000000002091c0 0000000000000088 t util_format_a8b8g8r8_sscaled_unpack_rgba_float
0000000000209250 0000000000000114 t util_format_a8b8g8r8_sscaled_pack_rgba_float
0000000000209370 0000000000000034 t util_format_a8b8g8r8_sscaled_fetch_rgba_float
00000000002093b0 000000000000009c t util_format_a8b8g8r8_sscaled_unpack_rgba_8unorm
0000000000209450 00000000000000a4 t util_format_a8b8g8r8_sscaled_pack_rgba_8unorm
0000000000209500 000000000000007c t util_format_r32_fixed_unpack_rgba_float
0000000000209580 0000000000000088 t util_format_r32_fixed_pack_rgba_float
0000000000209610 0000000000000020 t util_format_r32_fixed_fetch_rgba_float
0000000000209630 00000000000000d4 t util_format_r32_fixed_unpack_rgba_8unorm
0000000000209710 000000000000006c t util_format_r32_fixed_pack_rgba_8unorm
0000000000209780 000000000000008c t util_format_r32g32_fixed_unpack_rgba_float
0000000000209810 00000000000000c4 t util_format_r32g32_fixed_pack_rgba_float
00000000002098e0 0000000000000038 t util_format_r32g32_fixed_fetch_rgba_float
0000000000209920 0000000000000124 t util_format_r32g32_fixed_unpack_rgba_8unorm
0000000000209a50 0000000000000094 t util_format_r32g32_fixed_pack_rgba_8unorm
0000000000209af0 00000000000000a8 t util_format_r32g32b32a32_fixed_unpack_rgba_float
0000000000209ba0 0000000000000124 t util_format_r32g32b32a32_fixed_pack_rgba_float
0000000000209cd0 0000000000000050 t util_format_r32g32b32a32_fixed_fetch_rgba_float
0000000000209d20 00000000000001c0 t util_format_r32g32b32a32_fixed_unpack_rgba_8unorm
0000000000209ee0 00000000000000c8 t util_format_r32g32b32a32_fixed_pack_rgba_8unorm
0000000000209fb0 000000000000007c t util_format_r10g10b10x2_uscaled_unpack_rgba_float
000000000020a030 00000000000000e0 t util_format_r10g10b10x2_uscaled_pack_rgba_float
000000000020a110 0000000000000030 t util_format_r10g10b10x2_uscaled_fetch_rgba_float
000000000020a140 0000000000000084 t util_format_r10g10b10x2_uscaled_unpack_rgba_8unorm
000000000020a1d0 0000000000000090 t util_format_r10g10b10x2_uscaled_pack_rgba_8unorm
000000000020a260 0000000000000098 t util_format_r10g10b10x2_snorm_unpack_rgba_float
000000000020a300 0000000000000168 t util_format_r10g10b10x2_snorm_pack_rgba_float
000000000020a470 0000000000000048 t util_format_r10g10b10x2_snorm_fetch_rgba_float
000000000020a4c0 000000000000009c t util_format_r10g10b10x2_snorm_unpack_rgba_8unorm
000000000020a560 00000000000000a8 t util_format_r10g10b10x2_snorm_pack_rgba_8unorm
000000000020a610 000000000000008c t util_format_a4r4_unorm_unpack_rgba_float
000000000020a6a0 0000000000000100 t util_format_a4r4_unorm_pack_rgba_float
000000000020a7a0 000000000000003c t util_format_a4r4_unorm_fetch_rgba_float
000000000020a7e0 000000000000009c t util_format_a4r4_unorm_unpack_rgba_8unorm
000000000020a880 0000000000000070 t util_format_a4r4_unorm_pack_rgba_8unorm
000000000020a8f0 000000000000008c t util_format_r4a4_unorm_unpack_rgba_float
000000000020a980 000000000000003c t util_format_r4a4_unorm_fetch_rgba_float
000000000020a9c0 000000000000009c t util_format_r4a4_unorm_unpack_rgba_8unorm
000000000020aa60 0000000000000090 t util_format_r8a8_unorm_unpack_rgba_float
000000000020aaf0 0000000000000040 t util_format_r8a8_unorm_fetch_rgba_float
000000000020ab30 0000000000000070 t util_format_r8a8_unorm_unpack_rgba_8unorm
000000000020aba0 0000000000000090 t util_format_a8r8_unorm_unpack_rgba_float
000000000020ac30 0000000000000040 t util_format_a8r8_unorm_fetch_rgba_float
000000000020ac70 0000000000000070 t util_format_a8r8_unorm_unpack_rgba_8unorm
000000000020ace0 000000000000006c t util_format_a8r8_unorm_pack_rgba_8unorm
000000000020ad50 0000000000000088 t util_format_r10g10b10a2_uscaled_unpack_rgba_float
000000000020ade0 0000000000000104 t util_format_r10g10b10a2_uscaled_pack_rgba_float
000000000020aef0 0000000000000034 t util_format_r10g10b10a2_uscaled_fetch_rgba_float
000000000020af30 000000000000008c t util_format_r10g10b10a2_uscaled_unpack_rgba_8unorm
000000000020afc0 00000000000000a0 t util_format_r10g10b10a2_uscaled_pack_rgba_8unorm
000000000020b060 0000000000000088 t util_format_r10g10b10a2_sscaled_unpack_rgba_float
000000000020b0f0 000000000000010c t util_format_r10g10b10a2_sscaled_pack_rgba_float
000000000020b200 0000000000000034 t util_format_r10g10b10a2_sscaled_fetch_rgba_float
000000000020b240 00000000000000a0 t util_format_r10g10b10a2_sscaled_unpack_rgba_8unorm
000000000020b2e0 000000000000009c t util_format_r10g10b10a2_snorm_unpack_rgba_float
000000000020b380 00000000000001bc t util_format_r10g10b10a2_snorm_pack_rgba_float
000000000020b540 000000000000004c t util_format_r10g10b10a2_snorm_fetch_rgba_float
000000000020b590 00000000000000ac t util_format_r10g10b10a2_snorm_unpack_rgba_8unorm
000000000020b640 00000000000000b8 t util_format_r10g10b10a2_snorm_pack_rgba_8unorm
000000000020b700 0000000000000088 t util_format_b10g10r10a2_uscaled_unpack_rgba_float
000000000020b790 0000000000000104 t util_format_b10g10r10a2_uscaled_pack_rgba_float
000000000020b8a0 0000000000000034 t util_format_b10g10r10a2_uscaled_fetch_rgba_float
000000000020b8e0 000000000000008c t util_format_b10g10r10a2_uscaled_unpack_rgba_8unorm
000000000020b970 00000000000000a4 t util_format_b10g10r10a2_uscaled_pack_rgba_8unorm
000000000020ba20 0000000000000088 t util_format_b10g10r10a2_sscaled_unpack_rgba_float
000000000020bab0 000000000000010c t util_format_b10g10r10a2_sscaled_pack_rgba_float
000000000020bbc0 0000000000000034 t util_format_b10g10r10a2_sscaled_fetch_rgba_float
000000000020bc00 00000000000000a0 t util_format_b10g10r10a2_sscaled_unpack_rgba_8unorm
000000000020bca0 000000000000009c t util_format_b10g10r10a2_snorm_unpack_rgba_float
000000000020bd40 00000000000001bc t util_format_b10g10r10a2_snorm_pack_rgba_float
000000000020bf00 000000000000004c t util_format_b10g10r10a2_snorm_fetch_rgba_float
000000000020bf50 00000000000000ac t util_format_b10g10r10a2_snorm_unpack_rgba_8unorm
000000000020c000 00000000000000b8 t util_format_b10g10r10a2_snorm_pack_rgba_8unorm
000000000020c0c0 0000000000000064 t util_format_r8_uint_unpack_unsigned
000000000020c130 0000000000000064 t util_format_r8_uint_pack_unsigned
000000000020c1a0 0000000000000018 t util_format_r8_uint_fetch_unsigned
000000000020c1c0 0000000000000078 t util_format_r8_uint_pack_signed
000000000020c240 000000000000006c t util_format_r8g8_uint_unpack_unsigned
000000000020c2b0 0000000000000080 t util_format_r8g8_uint_pack_unsigned
000000000020c330 000000000000001c t util_format_r8g8_uint_fetch_unsigned
000000000020c350 0000000000000098 t util_format_r8g8_uint_pack_signed
000000000020c3f0 000000000000006c t util_format_r8g8b8_uint_unpack_unsigned
000000000020c460 0000000000000088 t util_format_r8g8b8_uint_pack_unsigned
000000000020c4f0 000000000000001c t util_format_r8g8b8_uint_fetch_unsigned
000000000020c510 00000000000000bc t util_format_r8g8b8_uint_pack_signed
000000000020c5d0 0000000000000074 t util_format_r8g8b8a8_uint_unpack_unsigned
000000000020c650 00000000000000ac t util_format_r8g8b8a8_uint_pack_unsigned
000000000020c700 0000000000000020 t util_format_r8g8b8a8_uint_fetch_unsigned
000000000020c720 00000000000000c8 t util_format_r8g8b8a8_uint_pack_signed
000000000020c7f0 0000000000000064 t util_format_r8_sint_unpack_signed
000000000020c860 0000000000000078 t util_format_r8_sint_pack_signed
000000000020c8e0 0000000000000018 t util_format_r8_sint_fetch_signed
000000000020c900 0000000000000064 t util_format_r8_sint_pack_unsigned
000000000020c970 000000000000006c t util_format_r8g8_sint_unpack_signed
000000000020c9e0 00000000000000a0 t util_format_r8g8_sint_pack_signed
000000000020ca80 000000000000001c t util_format_r8g8_sint_fetch_signed
000000000020caa0 0000000000000080 t util_format_r8g8_sint_pack_unsigned
000000000020cb20 000000000000006c t util_format_r8g8b8_sint_unpack_signed
000000000020cb90 00000000000000bc t util_format_r8g8b8_sint_pack_signed
000000000020cc50 000000000000001c t util_format_r8g8b8_sint_fetch_signed
000000000020cc70 0000000000000088 t util_format_r8g8b8_sint_pack_unsigned
000000000020cd00 0000000000000074 t util_format_r8g8b8a8_sint_unpack_signed
000000000020cd80 00000000000000f8 t util_format_r8g8b8a8_sint_pack_signed
000000000020ce80 0000000000000020 t util_format_r8g8b8a8_sint_fetch_signed
000000000020cea0 00000000000000ac t util_format_r8g8b8a8_sint_pack_unsigned
000000000020cf50 0000000000000064 t util_format_r16_uint_unpack_unsigned
000000000020cfc0 000000000000006c t util_format_r16_uint_pack_unsigned
000000000020d030 0000000000000018 t util_format_r16_uint_fetch_unsigned
000000000020d050 0000000000000078 t util_format_r16_uint_pack_signed
000000000020d0d0 000000000000006c t util_format_r16g16_uint_unpack_unsigned
000000000020d140 0000000000000088 t util_format_r16g16_uint_pack_unsigned
000000000020d1d0 000000000000001c t util_format_r16g16_uint_fetch_unsigned
000000000020d1f0 0000000000000094 t util_format_r16g16_uint_pack_signed
000000000020d290 0000000000000074 t util_format_r16g16b16a16_uint_unpack_unsigned
000000000020d310 00000000000000a0 t util_format_r16g16b16a16_uint_pack_unsigned
000000000020d3b0 0000000000000020 t util_format_r16g16b16a16_uint_fetch_unsigned
000000000020d3d0 00000000000000dc t util_format_r16g16b16a16_uint_pack_signed
000000000020d4b0 0000000000000064 t util_format_r16_sint_unpack_signed
000000000020d520 0000000000000080 t util_format_r16_sint_pack_signed
000000000020d5a0 0000000000000018 t util_format_r16_sint_fetch_signed
000000000020d5c0 000000000000006c t util_format_r16_sint_pack_unsigned
000000000020d630 000000000000006c t util_format_r16g16_sint_unpack_signed
000000000020d6a0 00000000000000a4 t util_format_r16g16_sint_pack_signed
000000000020d750 000000000000001c t util_format_r16g16_sint_fetch_signed
000000000020d770 0000000000000088 t util_format_r16g16_sint_pack_unsigned
000000000020d800 0000000000000074 t util_format_r16g16b16a16_sint_unpack_signed
000000000020d880 00000000000000e4 t util_format_r16g16b16a16_sint_pack_signed
000000000020d970 0000000000000020 t util_format_r16g16b16a16_sint_fetch_signed
000000000020d990 00000000000000a0 t util_format_r16g16b16a16_sint_pack_unsigned
000000000020da30 0000000000000064 t util_format_r32_uint_unpack_unsigned
000000000020daa0 0000000000000054 t util_format_r32_uint_pack_unsigned
000000000020db00 0000000000000018 t util_format_r32_uint_fetch_unsigned
000000000020db20 000000000000005c t util_format_r32_uint_pack_signed
000000000020db80 0000000000000068 t util_format_r32g32_uint_unpack_unsigned
000000000020dbf0 0000000000000068 t util_format_r32g32_uint_pack_unsigned
000000000020dc60 000000000000001c t util_format_r32g32_uint_fetch_unsigned
000000000020dc80 0000000000000078 t util_format_r32g32_uint_pack_signed
000000000020dd00 0000000000000074 t util_format_r32g32b32a32_uint_unpack_unsigned
000000000020dd80 000000000000007c t util_format_r32g32b32a32_uint_pack_unsigned
000000000020de00 000000000000001c t util_format_r32g32b32a32_uint_fetch_unsigned
000000000020de20 000000000000009c t util_format_r32g32b32a32_uint_pack_signed
000000000020dec0 0000000000000064 t util_format_r32_sint_unpack_signed
000000000020df30 0000000000000054 t util_format_r32_sint_pack_signed
000000000020df90 0000000000000018 t util_format_r32_sint_fetch_signed
000000000020dfb0 000000000000005c t util_format_r32_sint_pack_unsigned
000000000020e010 0000000000000068 t util_format_r32g32_sint_unpack_signed
000000000020e080 0000000000000068 t util_format_r32g32_sint_pack_signed
000000000020e0f0 000000000000001c t util_format_r32g32_sint_fetch_signed
000000000020e110 0000000000000080 t util_format_r32g32_sint_pack_unsigned
000000000020e190 0000000000000074 t util_format_r32g32b32a32_sint_unpack_signed
000000000020e210 000000000000007c t util_format_r32g32b32a32_sint_pack_signed
000000000020e290 000000000000001c t util_format_r32g32b32a32_sint_fetch_signed
000000000020e2b0 00000000000000a4 t util_format_r32g32b32a32_sint_pack_unsigned
000000000020e360 0000000000000064 t util_format_a8_uint_unpack_unsigned
000000000020e3d0 0000000000000068 t util_format_a8_uint_pack_unsigned
000000000020e440 0000000000000010 t util_format_a8_uint_fetch_unsigned
000000000020e450 0000000000000078 t util_format_a8_uint_pack_signed
000000000020e4d0 0000000000000064 t util_format_i8_uint_unpack_unsigned
000000000020e540 0000000000000010 t util_format_i8_uint_fetch_unsigned
000000000020e550 0000000000000064 t util_format_l8_uint_unpack_unsigned
000000000020e5c0 0000000000000014 t util_format_l8_uint_fetch_unsigned
000000000020e5e0 000000000000006c t util_format_l8a8_uint_unpack_unsigned
000000000020e650 0000000000000084 t util_format_l8a8_uint_pack_unsigned
000000000020e6e0 0000000000000018 t util_format_l8a8_uint_fetch_unsigned
000000000020e700 0000000000000098 t util_format_l8a8_uint_pack_signed
000000000020e7a0 0000000000000064 t util_format_a8_sint_unpack_signed
000000000020e810 0000000000000078 t util_format_a8_sint_pack_signed
000000000020e890 0000000000000010 t util_format_a8_sint_fetch_signed
000000000020e8a0 0000000000000068 t util_format_a8_sint_pack_unsigned
000000000020e910 0000000000000064 t util_format_i8_sint_unpack_signed
000000000020e980 0000000000000010 t util_format_i8_sint_fetch_signed
000000000020e990 0000000000000064 t util_format_l8_sint_unpack_signed
000000000020ea00 0000000000000014 t util_format_l8_sint_fetch_signed
000000000020ea20 000000000000006c t util_format_l8a8_sint_unpack_signed
000000000020ea90 00000000000000a0 t util_format_l8a8_sint_pack_signed
000000000020eb30 0000000000000018 t util_format_l8a8_sint_fetch_signed
000000000020eb50 0000000000000084 t util_format_l8a8_sint_pack_unsigned
000000000020ebe0 0000000000000064 t util_format_a16_uint_unpack_unsigned
000000000020ec50 0000000000000070 t util_format_a16_uint_pack_unsigned
000000000020ecc0 0000000000000010 t util_format_a16_uint_fetch_unsigned
000000000020ecd0 0000000000000078 t util_format_a16_uint_pack_signed
000000000020ed50 0000000000000064 t util_format_i16_uint_unpack_unsigned
000000000020edc0 0000000000000010 t util_format_i16_uint_fetch_unsigned
000000000020edd0 0000000000000064 t util_format_l16_uint_unpack_unsigned
000000000020ee40 0000000000000014 t util_format_l16_uint_fetch_unsigned
000000000020ee60 000000000000006c t util_format_l16a16_uint_unpack_unsigned
000000000020eed0 0000000000000088 t util_format_l16a16_uint_pack_unsigned
000000000020ef60 0000000000000018 t util_format_l16a16_uint_fetch_unsigned
000000000020ef80 0000000000000094 t util_format_l16a16_uint_pack_signed
000000000020f020 0000000000000064 t util_format_a16_sint_unpack_signed
000000000020f090 0000000000000080 t util_format_a16_sint_pack_signed
000000000020f110 0000000000000010 t util_format_a16_sint_fetch_signed
000000000020f120 0000000000000070 t util_format_a16_sint_pack_unsigned
000000000020f190 0000000000000064 t util_format_i16_sint_unpack_signed
000000000020f200 0000000000000010 t util_format_i16_sint_fetch_signed
000000000020f210 0000000000000064 t util_format_l16_sint_unpack_signed
000000000020f280 0000000000000014 t util_format_l16_sint_fetch_signed
000000000020f2a0 000000000000006c t util_format_l16a16_sint_unpack_signed
000000000020f310 00000000000000a4 t util_format_l16a16_sint_pack_signed
000000000020f3c0 0000000000000018 t util_format_l16a16_sint_fetch_signed
000000000020f3e0 0000000000000088 t util_format_l16a16_sint_pack_unsigned
000000000020f470 0000000000000064 t util_format_a32_uint_unpack_unsigned
000000000020f4e0 0000000000000054 t util_format_a32_uint_pack_unsigned
000000000020f540 0000000000000010 t util_format_a32_uint_fetch_unsigned
000000000020f550 000000000000005c t util_format_a32_uint_pack_signed
000000000020f5b0 0000000000000064 t util_format_i32_uint_unpack_unsigned
000000000020f620 0000000000000010 t util_format_i32_uint_fetch_unsigned
000000000020f630 0000000000000064 t util_format_l32_uint_unpack_unsigned
000000000020f6a0 0000000000000014 t util_format_l32_uint_fetch_unsigned
000000000020f6c0 0000000000000068 t util_format_l32a32_uint_unpack_unsigned
000000000020f730 000000000000006c t util_format_l32a32_uint_pack_unsigned
000000000020f7a0 0000000000000014 t util_format_l32a32_uint_fetch_unsigned
000000000020f7c0 000000000000007c t util_format_l32a32_uint_pack_signed
000000000020f840 0000000000000064 t util_format_a32_sint_unpack_signed
000000000020f8b0 0000000000000054 t util_format_a32_sint_pack_signed
000000000020f910 0000000000000010 t util_format_a32_sint_fetch_signed
000000000020f920 0000000000000064 t util_format_a32_sint_pack_unsigned
000000000020f990 0000000000000064 t util_format_i32_sint_unpack_signed
000000000020fa00 0000000000000010 t util_format_i32_sint_fetch_signed
000000000020fa10 0000000000000064 t util_format_l32_sint_unpack_signed
000000000020fa80 0000000000000014 t util_format_l32_sint_fetch_signed
000000000020faa0 0000000000000068 t util_format_l32a32_sint_unpack_signed
000000000020fb10 000000000000006c t util_format_l32a32_sint_pack_signed
000000000020fb80 0000000000000014 t util_format_l32a32_sint_fetch_signed
000000000020fba0 0000000000000084 t util_format_l32a32_sint_pack_unsigned
000000000020fc30 0000000000000070 t util_format_b8g8r8_uint_unpack_unsigned
000000000020fca0 0000000000000084 t util_format_b8g8r8_uint_pack_unsigned
000000000020fd30 000000000000001c t util_format_b8g8r8_uint_fetch_unsigned
000000000020fd50 00000000000000bc t util_format_b8g8r8_uint_pack_signed
000000000020fe10 0000000000000074 t util_format_b8g8r8a8_uint_unpack_unsigned
000000000020fe90 00000000000000ac t util_format_b8g8r8a8_uint_pack_unsigned
000000000020ff40 0000000000000020 t util_format_b8g8r8a8_uint_fetch_unsigned
000000000020ff60 00000000000000c8 t util_format_b8g8r8a8_uint_pack_signed
0000000000210030 0000000000000070 t util_format_b8g8r8_sint_unpack_signed
00000000002100a0 00000000000000bc t util_format_b8g8r8_sint_pack_signed
0000000000210160 000000000000001c t util_format_b8g8r8_sint_fetch_signed
0000000000210180 0000000000000084 t util_format_b8g8r8_sint_pack_unsigned
0000000000210210 0000000000000074 t util_format_b8g8r8a8_sint_unpack_signed
0000000000210290 00000000000000f8 t util_format_b8g8r8a8_sint_pack_signed
0000000000210390 0000000000000020 t util_format_b8g8r8a8_sint_fetch_signed
00000000002103b0 00000000000000ac t util_format_b8g8r8a8_sint_pack_unsigned
0000000000210460 0000000000000074 t util_format_a8r8g8b8_uint_unpack_unsigned
00000000002104e0 00000000000000ac t util_format_a8r8g8b8_uint_pack_unsigned
0000000000210590 0000000000000020 t util_format_a8r8g8b8_uint_fetch_unsigned
00000000002105b0 00000000000000c8 t util_format_a8r8g8b8_uint_pack_signed
0000000000210680 0000000000000074 t util_format_a8b8g8r8_uint_unpack_unsigned
0000000000210700 00000000000000ac t util_format_a8b8g8r8_uint_pack_unsigned
00000000002107b0 0000000000000020 t util_format_a8b8g8r8_uint_fetch_unsigned
00000000002107d0 00000000000000c8 t util_format_a8b8g8r8_uint_pack_signed
00000000002108a0 0000000000000074 t util_format_a2r10g10b10_uint_unpack_unsigned
0000000000210920 000000000000009c t util_format_a2r10g10b10_uint_pack_unsigned
00000000002109c0 0000000000000020 t util_format_a2r10g10b10_uint_fetch_unsigned
00000000002109e0 00000000000000c4 t util_format_a2r10g10b10_uint_pack_signed
0000000000210ab0 0000000000000074 t util_format_a2b10g10r10_uint_unpack_unsigned
0000000000210b30 000000000000009c t util_format_a2b10g10r10_uint_pack_unsigned
0000000000210bd0 0000000000000020 t util_format_a2b10g10r10_uint_fetch_unsigned
0000000000210bf0 00000000000000c4 t util_format_a2b10g10r10_uint_pack_signed
0000000000210cc0 0000000000000074 t util_format_b10g10r10a2_uint_unpack_unsigned
0000000000210d40 000000000000009c t util_format_b10g10r10a2_uint_pack_unsigned
0000000000210de0 0000000000000020 t util_format_b10g10r10a2_uint_fetch_unsigned
0000000000210e00 00000000000000c4 t util_format_b10g10r10a2_uint_pack_signed
0000000000210ed0 0000000000000074 t util_format_b10g10r10a2_sint_unpack_signed
0000000000210f50 00000000000000e0 t util_format_b10g10r10a2_sint_pack_signed
0000000000211030 0000000000000020 t util_format_b10g10r10a2_sint_fetch_signed
0000000000211050 0000000000000094 t util_format_b10g10r10a2_sint_pack_unsigned
00000000002110f0 0000000000000070 t util_format_r5g6b5_uint_unpack_unsigned
0000000000211160 0000000000000098 t util_format_r5g6b5_uint_pack_unsigned
0000000000211200 0000000000000024 t util_format_r5g6b5_uint_fetch_unsigned
0000000000211230 00000000000000b8 t util_format_r5g6b5_uint_pack_signed
00000000002112f0 0000000000000070 t util_format_b5g6r5_uint_unpack_unsigned
0000000000211360 0000000000000094 t util_format_b5g6r5_uint_pack_unsigned
0000000000211400 0000000000000024 t util_format_b5g6r5_uint_fetch_unsigned
0000000000211430 00000000000000b8 t util_format_b5g6r5_uint_pack_signed
00000000002114f0 0000000000000070 t util_format_r3g3b2_uint_unpack_unsigned
0000000000211560 0000000000000098 t util_format_r3g3b2_uint_pack_unsigned
0000000000211600 0000000000000024 t util_format_r3g3b2_uint_fetch_unsigned
0000000000211630 00000000000000b8 t util_format_r3g3b2_uint_pack_signed
00000000002116f0 0000000000000070 t util_format_b2g3r3_uint_unpack_unsigned
0000000000211760 0000000000000094 t util_format_b2g3r3_uint_pack_unsigned
0000000000211800 0000000000000024 t util_format_b2g3r3_uint_fetch_unsigned
0000000000211830 00000000000000b8 t util_format_b2g3r3_uint_pack_signed
00000000002118f0 0000000000000074 t util_format_r4g4b4a4_uint_unpack_unsigned
0000000000211970 00000000000000b0 t util_format_r4g4b4a4_uint_pack_unsigned
0000000000211a20 0000000000000020 t util_format_r4g4b4a4_uint_fetch_unsigned
0000000000211a40 00000000000000d8 t util_format_r4g4b4a4_uint_pack_signed
0000000000211b20 0000000000000074 t util_format_b4g4r4a4_uint_unpack_unsigned
0000000000211ba0 00000000000000b0 t util_format_b4g4r4a4_uint_pack_unsigned
0000000000211c50 0000000000000020 t util_format_b4g4r4a4_uint_fetch_unsigned
0000000000211c70 00000000000000d8 t util_format_b4g4r4a4_uint_pack_signed
0000000000211d50 0000000000000074 t util_format_a4r4g4b4_uint_unpack_unsigned
0000000000211dd0 00000000000000b0 t util_format_a4r4g4b4_uint_pack_unsigned
0000000000211e80 0000000000000020 t util_format_a4r4g4b4_uint_fetch_unsigned
0000000000211ea0 00000000000000d8 t util_format_a4r4g4b4_uint_pack_signed
0000000000211f80 0000000000000074 t util_format_a4b4g4r4_uint_unpack_unsigned
0000000000212000 00000000000000b0 t util_format_a4b4g4r4_uint_pack_unsigned
00000000002120b0 0000000000000020 t util_format_a4b4g4r4_uint_fetch_unsigned
00000000002120d0 00000000000000d8 t util_format_a4b4g4r4_uint_pack_signed
00000000002121b0 0000000000000074 t util_format_a1r5g5b5_uint_unpack_unsigned
0000000000212230 00000000000000a4 t util_format_a1r5g5b5_uint_pack_unsigned
00000000002122e0 0000000000000020 t util_format_a1r5g5b5_uint_fetch_unsigned
0000000000212300 00000000000000c4 t util_format_a1r5g5b5_uint_pack_signed
00000000002123d0 0000000000000074 t util_format_r5g5b5a1_uint_unpack_unsigned
0000000000212450 00000000000000a4 t util_format_r5g5b5a1_uint_pack_unsigned
0000000000212500 0000000000000020 t util_format_r5g5b5a1_uint_fetch_unsigned
0000000000212520 00000000000000d0 t util_format_r5g5b5a1_uint_pack_signed
00000000002125f0 0000000000000074 t util_format_b5g5r5a1_uint_unpack_unsigned
0000000000212670 00000000000000a4 t util_format_b5g5r5a1_uint_pack_unsigned
0000000000212720 0000000000000020 t util_format_b5g5r5a1_uint_fetch_unsigned
0000000000212740 00000000000000d0 t util_format_b5g5r5a1_uint_pack_signed
0000000000212810 0000000000000098 t util_format_r8g8b8x8_snorm_unpack_rgba_float
00000000002128b0 0000000000000158 t util_format_r8g8b8x8_snorm_pack_rgba_float
0000000000212a10 0000000000000048 t util_format_r8g8b8x8_snorm_fetch_rgba_float
0000000000212a60 00000000000000ec t util_format_r8g8b8x8_snorm_unpack_rgba_8unorm
0000000000212b50 0000000000000078 t util_format_r8g8b8x8_snorm_pack_rgba_8unorm
0000000000212bd0 0000000000000084 t util_format_r8g8b8x8_srgb_unpack_rgba_float
0000000000212c60 0000000000000038 t util_format_r8g8b8x8_srgb_fetch_rgba_float
0000000000212ca0 000000000000008c t util_format_r8g8b8x8_srgb_unpack_rgba_8unorm
0000000000212d30 0000000000000084 t util_format_r8g8b8x8_srgb_pack_rgba_8unorm
0000000000212dc0 0000000000000070 t util_format_r8g8b8x8_uint_unpack_unsigned
0000000000212e30 0000000000000094 t util_format_r8g8b8x8_uint_pack_unsigned
0000000000212ed0 0000000000000024 t util_format_r8g8b8x8_uint_fetch_unsigned
0000000000212f00 00000000000000ac t util_format_r8g8b8x8_uint_pack_signed
0000000000212fb0 0000000000000070 t util_format_r8g8b8x8_sint_unpack_signed
0000000000213020 00000000000000c0 t util_format_r8g8b8x8_sint_pack_signed
00000000002130e0 0000000000000024 t util_format_r8g8b8x8_sint_fetch_signed
0000000000213110 0000000000000094 t util_format_r8g8b8x8_sint_pack_unsigned
00000000002131b0 0000000000000098 t util_format_b10g10r10x2_unorm_unpack_rgba_float
0000000000213250 0000000000000158 t util_format_b10g10r10x2_unorm_pack_rgba_float
00000000002133b0 0000000000000048 t util_format_b10g10r10x2_unorm_fetch_rgba_float
0000000000213400 0000000000000078 t util_format_b10g10r10x2_unorm_unpack_rgba_8unorm
0000000000213480 00000000000000ac t util_format_b10g10r10x2_unorm_pack_rgba_8unorm
0000000000213530 00000000000000a0 t util_format_r16g16b16x16_unorm_unpack_rgba_float
00000000002135d0 000000000000015c t util_format_r16g16b16x16_unorm_pack_rgba_float
0000000000213730 0000000000000050 t util_format_r16g16b16x16_unorm_fetch_rgba_float
0000000000213780 0000000000000078 t util_format_r16g16b16x16_unorm_unpack_rgba_8unorm
0000000000213800 00000000000000ac t util_format_r16g16b16x16_unorm_pack_rgba_8unorm
00000000002138b0 000000000000009c t util_format_r16g16b16x16_snorm_unpack_rgba_float
0000000000213950 0000000000000164 t util_format_r16g16b16x16_snorm_pack_rgba_float
0000000000213ac0 000000000000004c t util_format_r16g16b16x16_snorm_fetch_rgba_float
0000000000213b10 0000000000000098 t util_format_r16g16b16x16_snorm_unpack_rgba_8unorm
0000000000213bb0 00000000000000ac t util_format_r16g16b16x16_snorm_pack_rgba_8unorm
0000000000213c60 0000000000000118 t util_format_r16g16b16x16_float_unpack_rgba_float
0000000000213d80 00000000000000f4 t util_format_r16g16b16x16_float_fetch_rgba_float
0000000000213e80 0000000000000070 t util_format_r16g16b16x16_uint_unpack_unsigned
0000000000213ef0 0000000000000090 t util_format_r16g16b16x16_uint_pack_unsigned
0000000000213f80 0000000000000024 t util_format_r16g16b16x16_uint_fetch_unsigned
0000000000213fb0 00000000000000bc t util_format_r16g16b16x16_uint_pack_signed
0000000000214070 0000000000000070 t util_format_r16g16b16x16_sint_unpack_signed
00000000002140e0 00000000000000c4 t util_format_r16g16b16x16_sint_pack_signed
00000000002141b0 0000000000000024 t util_format_r16g16b16x16_sint_fetch_signed
00000000002141e0 0000000000000090 t util_format_r16g16b16x16_sint_pack_unsigned
0000000000214270 0000000000000078 t util_format_r32g32b32x32_float_unpack_rgba_float
00000000002142f0 0000000000000074 t util_format_r32g32b32x32_float_pack_rgba_float
0000000000214370 0000000000000024 t util_format_r32g32b32x32_float_fetch_rgba_float
00000000002143a0 00000000000000a4 t util_format_r32g32b32x32_float_pack_rgba_8unorm
0000000000214450 000000000000006c t util_format_r32g32b32x32_uint_unpack_unsigned
00000000002144c0 0000000000000074 t util_format_r32g32b32x32_uint_pack_unsigned
0000000000214540 000000000000001c t util_format_r32g32b32x32_uint_fetch_unsigned
0000000000214560 000000000000008c t util_format_r32g32b32x32_uint_pack_signed
00000000002145f0 000000000000006c t util_format_r32g32b32x32_sint_unpack_signed
0000000000214660 0000000000000074 t util_format_r32g32b32x32_sint_pack_signed
00000000002146e0 000000000000001c t util_format_r32g32b32x32_sint_fetch_signed
0000000000214700 0000000000000094 t util_format_r32g32b32x32_sint_pack_unsigned
00000000002147a0 0000000000000088 t util_format_r8a8_snorm_unpack_rgba_float
0000000000214830 0000000000000038 t util_format_r8a8_snorm_fetch_rgba_float
0000000000214870 00000000000000c4 t util_format_r8a8_snorm_unpack_rgba_8unorm
0000000000214940 000000000000008c t util_format_r16a16_unorm_unpack_rgba_float
00000000002149d0 000000000000003c t util_format_r16a16_unorm_fetch_rgba_float
0000000000214a10 0000000000000074 t util_format_r16a16_unorm_unpack_rgba_8unorm
0000000000214a90 000000000000008c t util_format_r16a16_snorm_unpack_rgba_float
0000000000214b20 000000000000003c t util_format_r16a16_snorm_fetch_rgba_float
0000000000214b60 000000000000008c t util_format_r16a16_snorm_unpack_rgba_8unorm
0000000000214bf0 00000000000000e0 t util_format_r16a16_float_unpack_rgba_float
0000000000214cd0 00000000000000a0 t util_format_r16a16_float_fetch_rgba_float
0000000000214d70 000000000000006c t util_format_r32a32_float_unpack_rgba_float
0000000000214de0 000000000000006c t util_format_r32a32_float_pack_rgba_float
0000000000214e50 0000000000000018 t util_format_r32a32_float_fetch_rgba_float
0000000000214e70 000000000000008c t util_format_r32a32_float_pack_rgba_8unorm
0000000000214f00 000000000000006c t util_format_r8a8_uint_unpack_unsigned
0000000000214f70 000000000000001c t util_format_r8a8_uint_fetch_unsigned
0000000000214f90 000000000000006c t util_format_r8a8_sint_unpack_signed
0000000000215000 000000000000001c t util_format_r8a8_sint_fetch_signed
0000000000215020 000000000000006c t util_format_r16a16_uint_unpack_unsigned
0000000000215090 000000000000001c t util_format_r16a16_uint_fetch_unsigned
00000000002150b0 000000000000006c t util_format_r16a16_sint_unpack_signed
0000000000215120 000000000000001c t util_format_r16a16_sint_fetch_signed
0000000000215140 0000000000000068 t util_format_r32a32_uint_unpack_unsigned
00000000002151b0 000000000000006c t util_format_r32a32_uint_pack_unsigned
0000000000215220 0000000000000018 t util_format_r32a32_uint_fetch_unsigned
0000000000215240 000000000000007c t util_format_r32a32_uint_pack_signed
00000000002152c0 0000000000000068 t util_format_r32a32_sint_unpack_signed
0000000000215330 000000000000006c t util_format_r32a32_sint_pack_signed
00000000002153a0 0000000000000018 t util_format_r32a32_sint_fetch_signed
00000000002153c0 0000000000000084 t util_format_r32a32_sint_pack_unsigned
0000000000215450 0000000000000074 t util_format_r10g10b10a2_uint_unpack_unsigned
00000000002154d0 000000000000009c t util_format_r10g10b10a2_uint_pack_unsigned
0000000000215570 0000000000000020 t util_format_r10g10b10a2_uint_fetch_unsigned
0000000000215590 00000000000000c4 t util_format_r10g10b10a2_uint_pack_signed
0000000000215660 0000000000000074 t util_format_r10g10b10a2_sint_unpack_signed
00000000002156e0 00000000000000e0 t util_format_r10g10b10a2_sint_pack_signed
00000000002157c0 0000000000000020 t util_format_r10g10b10a2_sint_fetch_signed
00000000002157e0 0000000000000094 t util_format_r10g10b10a2_sint_pack_unsigned
0000000000215880 000000000000009c t util_format_b5g6r5_srgb_unpack_rgba_float
0000000000215920 0000000000000050 t util_format_b5g6r5_srgb_fetch_rgba_float
0000000000215970 00000000000000a4 t util_format_b5g6r5_srgb_unpack_rgba_8unorm
0000000000215a20 000000000000008c t util_format_b5g6r5_srgb_pack_rgba_8unorm
0000000000215ab0 0000000000000098 t util_format_g8r8_unorm_unpack_rgba_float
0000000000215b50 0000000000000040 t util_format_g8r8_unorm_fetch_rgba_float
0000000000215b90 0000000000000070 t util_format_g8r8_unorm_unpack_rgba_8unorm
0000000000215c00 0000000000000058 t util_format_g8r8_unorm_pack_rgba_8unorm
0000000000215c60 0000000000000090 t util_format_g8r8_snorm_unpack_rgba_float
0000000000215cf0 0000000000000108 t util_format_g8r8_snorm_pack_rgba_float
0000000000215e00 0000000000000038 t util_format_g8r8_snorm_fetch_rgba_float
0000000000215e40 00000000000000c4 t util_format_g8r8_snorm_unpack_rgba_8unorm
0000000000215f10 000000000000006c t util_format_g8r8_snorm_pack_rgba_8unorm
0000000000215f80 000000000000006c t util_format_g8r8_sint_unpack_signed
0000000000215ff0 00000000000000a0 t util_format_g8r8_sint_pack_signed
0000000000216090 000000000000001c t util_format_g8r8_sint_fetch_signed
00000000002160b0 0000000000000080 t util_format_g8r8_sint_pack_unsigned
0000000000216130 0000000000000094 t util_format_g16r16_unorm_unpack_rgba_float
00000000002161d0 0000000000000104 t util_format_g16r16_unorm_pack_rgba_float
00000000002162e0 000000000000003c t util_format_g16r16_unorm_fetch_rgba_float
0000000000216320 0000000000000074 t util_format_g16r16_unorm_unpack_rgba_8unorm
00000000002163a0 000000000000008c t util_format_g16r16_unorm_pack_rgba_8unorm
0000000000216430 0000000000000094 t util_format_g16r16_snorm_unpack_rgba_float
00000000002164d0 0000000000000114 t util_format_g16r16_snorm_pack_rgba_float
00000000002165f0 000000000000003c t util_format_g16r16_snorm_fetch_rgba_float
0000000000216630 000000000000008c t util_format_g16r16_snorm_unpack_rgba_8unorm
00000000002166c0 000000000000008c t util_format_g16r16_snorm_pack_rgba_8unorm
0000000000216750 00000000000000a0 t util_format_a8b8g8r8_snorm_unpack_rgba_float
00000000002167f0 00000000000001b0 t util_format_a8b8g8r8_snorm_pack_rgba_float
00000000002169a0 0000000000000050 t util_format_a8b8g8r8_snorm_fetch_rgba_float
00000000002169f0 0000000000000114 t util_format_a8b8g8r8_snorm_unpack_rgba_8unorm
0000000000216b10 000000000000008c t util_format_a8b8g8r8_snorm_pack_rgba_8unorm
0000000000216ba0 0000000000000074 t util_format_a8b8g8r8_sint_unpack_signed
0000000000216c20 00000000000000f8 t util_format_a8b8g8r8_sint_pack_signed
0000000000216d20 0000000000000020 t util_format_a8b8g8r8_sint_fetch_signed
0000000000216d40 00000000000000ac t util_format_a8b8g8r8_sint_pack_unsigned
0000000000216df0 000000000000009c t util_format_x8b8g8r8_snorm_unpack_rgba_float
0000000000216e90 0000000000000160 t util_format_x8b8g8r8_snorm_pack_rgba_float
0000000000216ff0 0000000000000050 t util_format_x8b8g8r8_snorm_fetch_rgba_float
0000000000217040 00000000000000ec t util_format_x8b8g8r8_snorm_unpack_rgba_8unorm
0000000000217130 000000000000007c t util_format_x8b8g8r8_snorm_pack_rgba_8unorm
00000000002171b0 0000000000000070 t util_format_x8b8g8r8_sint_unpack_signed
0000000000217220 00000000000000c0 t util_format_x8b8g8r8_sint_pack_signed
00000000002172e0 0000000000000024 t util_format_x8b8g8r8_sint_fetch_signed
0000000000217310 0000000000000094 t util_format_x8b8g8r8_sint_pack_unsigned
00000000002173b0 0000000000000040 t util_format_r64g64b64_float_fetch_rgba_float
00000000002173f0 0000000000000090 t util_format_r64g64b64_float_pack_rgba_float
0000000000217480 000000000000009c t util_format_r64g64b64_float_unpack_rgba_float
0000000000217520 00000000000000bc t util_format_r64g64b64_float_pack_rgba_8unorm
00000000002175e0 000000000000018c t util_format_r64g64b64_float_unpack_rgba_8unorm
0000000000217770 0000000000000034 t util_format_r64g64b64a64_float_fetch_rgba_float
00000000002177b0 0000000000000094 t util_format_r64g64b64a64_float_pack_rgba_float
0000000000217850 0000000000000094 t util_format_r64g64b64a64_float_unpack_rgba_float
00000000002178f0 00000000000000c4 t util_format_r64g64b64a64_float_pack_rgba_8unorm
00000000002179c0 00000000000001d4 t util_format_r64g64b64a64_float_unpack_rgba_8unorm
0000000000217ba0 000000000000002c t util_format_r32g32b32_float_fetch_rgba_float
0000000000217bd0 0000000000000084 t util_format_r32g32b32_float_pack_rgba_float
0000000000217c60 0000000000000090 t util_format_r32g32b32_float_unpack_rgba_float
0000000000217cf0 00000000000000b0 t util_format_r32g32b32_float_pack_rgba_8unorm
0000000000217da0 0000000000000058 t util_format_r32g32b32_unorm_fetch_rgba_float
0000000000217e00 000000000000010c t util_format_r32g32b32_unorm_pack_rgba_float
0000000000217f10 00000000000000b4 t util_format_r32g32b32_unorm_unpack_rgba_float
0000000000217fd0 00000000000000bc t util_format_r32g32b32_unorm_pack_rgba_8unorm
0000000000218090 0000000000000098 t util_format_r32g32b32_unorm_unpack_rgba_8unorm
0000000000218130 0000000000000030 t util_format_r32g32b32_uscaled_fetch_rgba_float
0000000000218160 00000000000000e8 t util_format_r32g32b32_uscaled_pack_rgba_float
0000000000218250 0000000000000098 t util_format_r32g32b32_uscaled_unpack_rgba_float
00000000002182f0 00000000000000a4 t util_format_r32g32b32_uscaled_pack_rgba_8unorm
00000000002183a0 00000000000000a4 t util_format_r32g32b32_uscaled_unpack_rgba_8unorm
0000000000218450 0000000000000058 t util_format_r32g32b32_snorm_fetch_rgba_float
00000000002184b0 0000000000000114 t util_format_r32g32b32_snorm_pack_rgba_float
00000000002185d0 00000000000000b4 t util_format_r32g32b32_snorm_unpack_rgba_float
0000000000218690 00000000000000bc t util_format_r32g32b32_snorm_pack_rgba_8unorm
0000000000218750 00000000000000b4 t util_format_r32g32b32_snorm_unpack_rgba_8unorm
0000000000218810 0000000000000030 t util_format_r32g32b32_sscaled_fetch_rgba_float
0000000000218840 00000000000000e8 t util_format_r32g32b32_sscaled_pack_rgba_float
0000000000218930 0000000000000098 t util_format_r32g32b32_sscaled_unpack_rgba_float
00000000002189d0 00000000000000a4 t util_format_r32g32b32_sscaled_pack_rgba_8unorm
0000000000218a80 00000000000000a8 t util_format_r32g32b32_sscaled_unpack_rgba_8unorm
0000000000218b30 0000000000000114 t util_format_r16g16b16_float_fetch_rgba_float
0000000000218c50 0000000000000134 t util_format_r16g16b16_float_unpack_rgba_float
0000000000218d90 0000000000000060 t util_format_r16g16b16_unorm_fetch_rgba_float
0000000000218df0 0000000000000174 t util_format_r16g16b16_unorm_pack_rgba_float
0000000000218f70 00000000000000c0 t util_format_r16g16b16_unorm_unpack_rgba_float
0000000000219030 00000000000000c0 t util_format_r16g16b16_unorm_pack_rgba_8unorm
00000000002190f0 0000000000000098 t util_format_r16g16b16_unorm_unpack_rgba_8unorm
0000000000219190 0000000000000048 t util_format_r16g16b16_uscaled_fetch_rgba_float
00000000002191e0 00000000000000f4 t util_format_r16g16b16_uscaled_pack_rgba_float
00000000002192e0 00000000000000ac t util_format_r16g16b16_uscaled_unpack_rgba_float
0000000000219390 00000000000000a8 t util_format_r16g16b16_uscaled_pack_rgba_8unorm
0000000000219440 00000000000000a4 t util_format_r16g16b16_uscaled_unpack_rgba_8unorm
00000000002194f0 0000000000000058 t util_format_r16g16b16_snorm_fetch_rgba_float
0000000000219550 0000000000000174 t util_format_r16g16b16_snorm_pack_rgba_float
00000000002196d0 00000000000000b8 t util_format_r16g16b16_snorm_unpack_rgba_float
0000000000219790 00000000000000c0 t util_format_r16g16b16_snorm_pack_rgba_8unorm
0000000000219850 00000000000000b4 t util_format_r16g16b16_snorm_unpack_rgba_8unorm
0000000000219910 0000000000000040 t util_format_r16g16b16_sscaled_fetch_rgba_float
0000000000219950 00000000000000fc t util_format_r16g16b16_sscaled_pack_rgba_float
0000000000219a50 00000000000000a4 t util_format_r16g16b16_sscaled_unpack_rgba_float
0000000000219b00 00000000000000a8 t util_format_r16g16b16_sscaled_pack_rgba_8unorm
0000000000219bb0 00000000000000b0 t util_format_r16g16b16_sscaled_unpack_rgba_8unorm
0000000000219c60 0000000000000054 t util_format_r32g32b32_fixed_fetch_rgba_float
0000000000219cc0 0000000000000108 t util_format_r32g32b32_fixed_pack_rgba_float
0000000000219dd0 00000000000000b4 t util_format_r32g32b32_fixed_unpack_rgba_float
0000000000219e90 00000000000000c4 t util_format_r32g32b32_fixed_pack_rgba_8unorm
0000000000219f60 0000000000000190 t util_format_r32g32b32_fixed_unpack_rgba_8unorm
000000000021a0f0 000000000000002c t util_format_r16g16b16_uint_fetch_unsigned
000000000021a120 00000000000000d4 t util_format_r16g16b16_uint_pack_signed
000000000021a200 00000000000000a0 t util_format_r16g16b16_uint_pack_unsigned
000000000021a2a0 0000000000000094 t util_format_r16g16b16_uint_unpack_unsigned
000000000021a340 000000000000002c t util_format_r16g16b16_sint_fetch_signed
000000000021a370 00000000000000d4 t util_format_r16g16b16_sint_pack_signed
000000000021a450 0000000000000094 t util_format_r16g16b16_sint_unpack_signed
000000000021a4f0 00000000000000a0 t util_format_r16g16b16_sint_pack_unsigned
000000000021a590 0000000000000020 t util_format_r32g32b32_uint_fetch_unsigned
000000000021a5b0 0000000000000094 t util_format_r32g32b32_uint_pack_signed
000000000021a650 000000000000007c t util_format_r32g32b32_uint_pack_unsigned
000000000021a6d0 0000000000000088 t util_format_r32g32b32_uint_unpack_unsigned
000000000021a760 0000000000000020 t util_format_r32g32b32_sint_fetch_signed
000000000021a780 000000000000007c t util_format_r32g32b32_sint_pack_signed
000000000021a800 0000000000000088 t util_format_r32g32b32_sint_unpack_signed
000000000021a890 000000000000009c t util_format_r32g32b32_sint_pack_unsigned
000000000021a930 000000000000001c t util_format_r8_uscaled_fetch_rgba_float
000000000021a950 0000000000000020 t util_format_a1b5g5r5_uint_fetch_unsigned
000000000021a970 0000000000000064 t util_format_r32_sscaled_pack_rgba_8unorm
000000000021a9e0 000000000000006c t util_format_r16_sscaled_pack_rgba_8unorm
000000000021aa50 0000000000000098 t util_format_l8_unorm_pack_rgba_float
000000000021aaf0 0000000000000098 t util_format_a8_unorm_pack_rgba_float
000000000021ab90 00000000000000a8 t util_format_r32_float_unpack_rgba_8unorm
000000000021ac40 00000000000000ac t util_format_a32_float_unpack_rgba_8unorm
000000000021acf0 00000000000000a8 t util_format_l32_float_unpack_rgba_8unorm
000000000021ada0 00000000000000a8 t util_format_i32_float_unpack_rgba_8unorm
000000000021ae50 0000000000000068 t util_format_r8_srgb_pack_rgba_8unorm
000000000021aec0 00000000000000e0 t util_format_r32g32_float_unpack_rgba_8unorm
000000000021afa0 00000000000000e0 t util_format_l32a32_float_unpack_rgba_8unorm
000000000021b080 00000000000000e0 t util_format_r32a32_float_unpack_rgba_8unorm
000000000021b160 00000000000000c8 t util_format_r8g8_unorm_pack_rgba_float
000000000021b230 00000000000000c8 t util_format_g8r8_unorm_pack_rgba_float
000000000021b300 00000000000000c8 t util_format_l8a8_unorm_pack_rgba_float
000000000021b3d0 00000000000000c8 t util_format_a8r8_unorm_pack_rgba_float
000000000021b4a0 00000000000000e8 t util_format_a16_float_unpack_rgba_8unorm
000000000021b590 00000000000000e8 t util_format_r16_float_unpack_rgba_8unorm
000000000021b680 00000000000000e8 t util_format_i16_float_unpack_rgba_8unorm
000000000021b770 00000000000000e8 t util_format_l16_float_unpack_rgba_8unorm
000000000021b860 0000000000000110 t util_format_r32g32b32x32_float_unpack_rgba_8unorm
000000000021b970 000000000000005c t util_format_r8_unorm_pack_rgba_8unorm
000000000021b9d0 000000000000005c t util_format_i8_unorm_pack_rgba_8unorm
000000000021ba30 00000000000000fc t util_format_r8g8b8_unorm_pack_rgba_float
000000000021bb30 00000000000000fc t util_format_b8g8r8_unorm_pack_rgba_float
000000000021bc30 00000000000000f8 t util_format_r8g8b8x8_unorm_pack_rgba_float
000000000021bd30 00000000000000f8 t util_format_b8g8r8x8_unorm_pack_rgba_float
000000000021be30 0000000000000120 t util_format_r32g32b32_float_unpack_rgba_8unorm
000000000021bf50 00000000000000f4 t util_format_x8b8g8r8_unorm_pack_rgba_float
000000000021c050 00000000000000f4 t util_format_x8r8g8b8_unorm_pack_rgba_float
000000000021c150 0000000000000140 t util_format_r32g32b32a32_float_unpack_rgba_8unorm
000000000021c290 0000000000000068 t util_format_r8a8_unorm_pack_rgba_8unorm
000000000021c300 0000000000000144 t util_format_l16a16_float_unpack_rgba_8unorm
000000000021c450 0000000000000144 t util_format_r16a16_float_unpack_rgba_8unorm
000000000021c5a0 0000000000000144 t util_format_r16g16_float_unpack_rgba_8unorm
000000000021c6f0 0000000000000124 t util_format_a8r8g8b8_unorm_pack_rgba_float
000000000021c820 0000000000000124 t util_format_a8b8g8r8_unorm_pack_rgba_float
000000000021c950 0000000000000124 t util_format_z24_unorm_s8_uint_as_r8g8b8a8_pack_rgba_float
000000000021ca80 0000000000000124 t util_format_b8g8r8a8_unorm_pack_rgba_float
000000000021cbb0 0000000000000148 t util_format_r8sg8sb8ux8u_norm_pack_rgba_float
000000000021cd00 0000000000000054 t util_format_r8g8b8a8_unorm_fetch_rgba_float
000000000021cd60 00000000000001a4 t util_format_r16g16b16x16_float_unpack_rgba_8unorm
000000000021cf10 0000000000000060 t util_format_i8_snorm_pack_rgba_8unorm
000000000021cf70 000000000000006c t util_format_r8_uscaled_pack_rgba_8unorm
000000000021cfe0 0000000000000060 t util_format_r8_snorm_pack_rgba_8unorm
000000000021d040 000000000000006c t util_format_r8_sscaled_pack_rgba_8unorm
000000000021d0b0 00000000000001c0 t util_format_r16g16b16_float_unpack_rgba_8unorm
000000000021d270 0000000000000200 t util_format_r16g16b16a16_float_unpack_rgba_8unorm
000000000021d470 0000000000000074 t util_format_r8_uscaled_unpack_rgba_8unorm
000000000021d4f0 000000000000006c t util_format_r4a4_unorm_pack_rgba_8unorm
000000000021d560 0000000000000070 t util_format_r8a8_snorm_pack_rgba_8unorm
000000000021d5d0 0000000000000054 t util_format_r32_float_pack_rgba_float
000000000021d630 0000000000000064 t util_format_i32_float_pack_rgba_8unorm
000000000021d6a0 0000000000000054 t util_format_i32_sint_pack_signed
000000000021d700 0000000000000054 t util_format_l32_sint_pack_signed
000000000021d760 0000000000000054 t util_format_i32_uint_pack_unsigned
000000000021d7c0 0000000000000054 t util_format_l32_uint_pack_unsigned
000000000021d820 0000000000000054 t util_format_i32_float_pack_rgba_float
000000000021d880 0000000000000074 t util_format_i16_unorm_pack_rgba_8unorm
000000000021d900 0000000000000074 t util_format_r16_unorm_pack_rgba_8unorm
000000000021d980 0000000000000074 t util_format_r16_snorm_pack_rgba_8unorm
000000000021da00 0000000000000074 t util_format_i16_snorm_pack_rgba_8unorm
000000000021da80 0000000000000064 t util_format_r32_float_pack_rgba_8unorm
000000000021daf0 0000000000000078 t util_format_r8g8b8a8_unorm_unpack_rgba_8unorm
000000000021db70 000000000000006c t util_format_r8_uscaled_unpack_rgba_float
000000000021dbe0 000000000000005c t util_format_i32_uint_pack_signed
000000000021dc40 000000000000005c t util_format_l32_uint_pack_signed
000000000021dca0 000000000000005c t util_format_i32_sint_pack_unsigned
000000000021dd00 000000000000005c t util_format_l32_sint_pack_unsigned
000000000021dd60 0000000000000088 t util_format_r8_uscaled_pack_rgba_float
000000000021ddf0 000000000000008c t util_format_r16a16_unorm_pack_rgba_8unorm
000000000021de80 000000000000008c t util_format_r16a16_snorm_pack_rgba_8unorm
000000000021df10 000000000000006c t util_format_i16_sint_pack_unsigned
000000000021df80 000000000000006c t util_format_l16_sint_pack_unsigned
000000000021dff0 0000000000000064 t util_format_i8_uint_pack_unsigned
000000000021e060 0000000000000064 t util_format_l8_uint_pack_unsigned
000000000021e0d0 0000000000000064 t util_format_i8_sint_pack_unsigned
000000000021e140 0000000000000064 t util_format_l8_sint_pack_unsigned
000000000021e1b0 000000000000006c t util_format_i16_uint_pack_unsigned
000000000021e220 000000000000006c t util_format_l16_uint_pack_unsigned
000000000021e290 0000000000000084 t util_format_r8a8_sint_pack_unsigned
000000000021e320 0000000000000088 t util_format_r16a16_uint_pack_unsigned
000000000021e3b0 0000000000000088 t util_format_r16a16_sint_pack_unsigned
000000000021e440 0000000000000044 t util_format_r8g8b8a8_unorm_pack_rgba_8unorm
000000000021e490 0000000000000084 t util_format_r8a8_uint_pack_unsigned
000000000021e520 0000000000000074 t util_format_a1b5g5r5_uint_unpack_unsigned
000000000021e5a0 0000000000000080 t util_format_l16_sint_pack_signed
000000000021e620 0000000000000078 t util_format_i8_uint_pack_signed
000000000021e6a0 0000000000000078 t util_format_l8_uint_pack_signed
000000000021e720 0000000000000078 t util_format_i8_sint_pack_signed
000000000021e7a0 0000000000000080 t util_format_i16_sint_pack_signed
000000000021e820 0000000000000078 t util_format_l16_uint_pack_signed
000000000021e8a0 0000000000000078 t util_format_l8_sint_pack_signed
000000000021e920 0000000000000078 t util_format_i16_uint_pack_signed
000000000021e9a0 0000000000000094 t util_format_r16a16_uint_pack_signed
000000000021ea40 0000000000000098 t util_format_r8a8_uint_pack_signed
000000000021eae0 0000000000000098 t util_format_r8_unorm_pack_rgba_float
000000000021eb80 0000000000000098 t util_format_i8_unorm_pack_rgba_float
000000000021ec20 00000000000000a0 t util_format_r8a8_sint_pack_signed
000000000021ecc0 00000000000000a4 t util_format_r16a16_sint_pack_signed
000000000021ed70 00000000000000a0 t util_format_r10g10b10a2_sscaled_pack_rgba_8unorm
000000000021ee10 00000000000000a4 t util_format_b10g10r10a2_sscaled_pack_rgba_8unorm
000000000021eec0 00000000000000c8 t util_format_r8a8_unorm_pack_rgba_float
000000000021ef90 00000000000000a4 t util_format_r8g8b8a8_unorm_unpack_rgba_float
000000000021f040 00000000000000d0 t util_format_r16_float_pack_rgba_8unorm
000000000021f110 00000000000000d0 t util_format_a16_float_pack_rgba_8unorm
000000000021f1e0 00000000000000b4 t util_format_l16_float_pack_rgba_float
000000000021f2a0 00000000000000d0 t util_format_l16_float_pack_rgba_8unorm
000000000021f370 00000000000000b4 t util_format_r16_float_pack_rgba_float
000000000021f430 00000000000000b4 t util_format_a16_float_pack_rgba_float
000000000021f4f0 00000000000000d0 t util_format_i16_float_pack_rgba_8unorm
000000000021f5c0 00000000000000b4 t util_format_i16_float_pack_rgba_float
000000000021f680 00000000000000c8 t util_format_l8_srgb_pack_rgba_float
000000000021f750 00000000000000c8 t util_format_r8_srgb_pack_rgba_float
000000000021f820 00000000000000a4 t util_format_a1b5g5r5_uint_pack_unsigned
000000000021f8d0 00000000000000b8 t util_format_i8_snorm_pack_rgba_float
000000000021f990 00000000000000b8 t util_format_i16_unorm_pack_rgba_float
000000000021fa50 00000000000000b8 t util_format_r8_snorm_pack_rgba_float
000000000021fb10 00000000000000c0 t util_format_i16_snorm_pack_rgba_float
000000000021fbd0 00000000000000b8 t util_format_r16_unorm_pack_rgba_float
000000000021fc90 00000000000000c0 t util_format_r16_snorm_pack_rgba_float
000000000021fd50 0000000000000108 t util_format_r16a16_float_pack_rgba_float
000000000021fe60 0000000000000108 t util_format_l16a16_float_pack_rgba_float
000000000021ff70 0000000000000108 t util_format_r16g16_float_pack_rgba_float
0000000000220080 0000000000000108 t util_format_l8a8_srgb_pack_rgba_float
0000000000220190 0000000000000128 t util_format_l16a16_float_pack_rgba_8unorm
00000000002202c0 0000000000000128 t util_format_r16g16_float_pack_rgba_8unorm
00000000002203f0 0000000000000128 t util_format_r16a16_float_pack_rgba_8unorm
0000000000220520 0000000000000120 t util_format_r8g8_srgb_pack_rgba_float
0000000000220640 000000000000019c t util_format_r16g16b16x16_float_pack_rgba_float
00000000002207e0 0000000000000170 t util_format_r16g16b16_float_pack_rgba_float
0000000000220950 00000000000001c8 t util_format_r16g16b16x16_float_pack_rgba_8unorm
0000000000220b20 00000000000001a0 t util_format_r16g16b16_float_pack_rgba_8unorm
0000000000220cc0 00000000000001dc t util_format_r16g16b16a16_float_pack_rgba_8unorm
0000000000220ea0 00000000000001b8 t util_format_r8g8b8a8_srgb_pack_rgba_float
0000000000221060 000000000000019c t util_format_r16g16b16a16_float_pack_rgba_float
0000000000221200 000000000000017c t util_format_r8g8b8_srgb_pack_rgba_float
0000000000221380 000000000000017c t util_format_b8g8r8_srgb_pack_rgba_float
0000000000221500 000000000000017c t util_format_r8g8b8x8_srgb_pack_rgba_float
0000000000221680 000000000000017c t util_format_b8g8r8x8_srgb_pack_rgba_float
0000000000221800 000000000000017c t util_format_x8b8g8r8_srgb_pack_rgba_float
0000000000221980 000000000000017c t util_format_x8r8g8b8_srgb_pack_rgba_float
0000000000221b00 0000000000000178 t util_format_b5g6r5_srgb_pack_rgba_float
0000000000221c80 00000000000001bc t util_format_a8r8g8b8_srgb_pack_rgba_float
0000000000221e40 00000000000001bc t util_format_a8b8g8r8_srgb_pack_rgba_float
0000000000222000 00000000000001b8 t util_format_b8g8r8a8_srgb_pack_rgba_float
00000000002221c0 00000000000000c4 t util_format_a1b5g5r5_uint_pack_signed
0000000000222290 0000000000000114 t util_format_r16a16_snorm_pack_rgba_float
00000000002223b0 0000000000000108 t util_format_r8a8_snorm_pack_rgba_float
00000000002224c0 0000000000000104 t util_format_r16a16_unorm_pack_rgba_float
00000000002225d0 0000000000000100 t util_format_r4a4_unorm_pack_rgba_float
00000000002226d0 0000000000000124 t util_format_r8g8b8a8_unorm_pack_rgba_float
0000000000222800 00000000000011d4 t util_format_description
00000000002239e0 0000000000000078 t _eglGrowArray
0000000000223a60 0000000000000078 t _eglCreateArray
0000000000223ae0 0000000000000068 t _eglDestroyArray
0000000000223b50 0000000000000050 t _eglAppendArray
0000000000223ba0 0000000000000044 t _eglFindArray
0000000000223bf0 00000000000000e0 t _eglFilterArray
0000000000223cd0 00000000000000c0 t _eglFlattenArray
0000000000223d90 0000000000000014 t one_time_fini
0000000000223db0 0000000000000034 t generic_nop
0000000000223df0 0000000000000128 t check_compatible
0000000000223f20 00000000000000a4 t _mesa_initialize
0000000000223fd0 00000000000003d8 t _mesa_init_constants
00000000002243b0 0000000000000078 t _mesa_alloc_dispatch_table
0000000000224430 0000000000000038 t _mesa_initialize_dispatch_tables
0000000000224470 00000000000006c8 t _mesa_initialize_context
0000000000224b40 0000000000000344 t _mesa_copy_context
0000000000224e90 000000000000048c t _mesa_make_current
0000000000225320 00000000000003cc t _mesa_free_context_data
00000000002256f0 000000000000002c t _mesa_destroy_context
0000000000225720 00000000000000b8 t _mesa_share_state
00000000002257e0 0000000000000004 t _mesa_get_current_context
00000000002257f0 0000000000000088 T _mesa_Finish
0000000000225880 0000000000000088 T _mesa_Flush
0000000000225910 0000000000000004 t _mesa_get_cpu_features
0000000000225920 00000000000000a4 t _mesa_print_info
00000000002259d0 0000000000000024 t _mesa_init_debug
0000000000225a00 0000000000000170 t validate_params
0000000000225b70 000000000000011c t _mesa_lock_debug_state
0000000000225c90 00000000000000a0 t validate_length
0000000000225d30 0000000000000104 t debug_message_store
0000000000225e40 00000000000000bc t debug_clear_group
0000000000225f00 000000000000027c t debug_make_group_writable.isra.0
0000000000226180 0000000000000214 t log_msg_locked_and_unlock
00000000002263a0 000000000000005c t _mesa_debug_get_id
0000000000226400 0000000000000088 t _mesa_debug_is_message_enabled
0000000000226490 0000000000000090 t _mesa_set_debug_state_int
0000000000226520 00000000000000d0 t _mesa_get_debug_state_int
00000000002265f0 0000000000000070 t _mesa_get_debug_state_ptr
0000000000226660 0000000000000088 t _mesa_log_msg
00000000002266f0 0000000000000250 T _mesa_DebugMessageInsert
0000000000226940 00000000000002ac T _mesa_GetDebugMessageLog
0000000000226bf0 000000000000058c T _mesa_DebugMessageControl
0000000000227180 0000000000000064 T _mesa_DebugMessageCallback
00000000002271f0 00000000000001e0 T _mesa_PushDebugGroup
00000000002273d0 0000000000000144 T _mesa_PopDebugGroup
0000000000227520 0000000000000010 t _mesa_init_debug_output
0000000000227530 000000000000010c t _mesa_free_errors_data
0000000000227640 000000000000009c T _mesa_StringMarkerGREMEDY
00000000002276e0 0000000000000050 t _mesa_ClearDepth
0000000000227730 0000000000000054 t _mesa_ClearDepthf
0000000000227790 00000000000000b8 T _mesa_DepthFunc_no_error
0000000000227850 00000000000000e4 t _mesa_DepthFunc
0000000000227940 00000000000000b8 t _mesa_DepthMask
0000000000227a00 000000000000010c t _mesa_DepthBoundsEXT
0000000000227b10 0000000000000024 t _mesa_init_depth
0000000000227b40 0000000000000038 t check_atlas_for_deleted_list
0000000000227b80 000000000000010c t dlist_alloc
0000000000227c90 00000000000000b8 t save_SetFragmentShaderConstantATI
0000000000227d50 0000000000000084 t save_BindFragmentShaderATI
0000000000227de0 000000000000002c t save_MultiDrawElementsIndirect
0000000000227e10 000000000000002c t save_MultiDrawArraysIndirect
0000000000227e40 000000000000002c t save_DrawElementsIndirect
0000000000227e70 000000000000002c t save_DrawArraysIndirect
0000000000227ea0 000000000000002c t save_DrawElementsInstancedBaseVertexBaseInstance
0000000000227ed0 000000000000002c t save_DrawElementsInstancedBaseInstance
0000000000227f00 000000000000002c t save_DrawArraysInstancedBaseInstance
0000000000227f30 000000000000002c t save_DrawElementsInstancedBaseVertexARB
0000000000227f60 000000000000002c t save_DrawElementsInstancedARB
0000000000227f90 000000000000002c t save_DrawArraysInstancedARB
0000000000227fc0 000000000000002c t save_DispatchComputeIndirect
0000000000227ff0 000000000000002c t save_NewList
0000000000228020 0000000000000180 t save_VertexAttrib4fvNV
00000000002281a0 00000000000001bc t save_VertexAttribL1ui64vARB
0000000000228360 00000000000001b0 t save_VertexAttribL1ui64ARB
0000000000228510 0000000000000220 t save_VertexAttribL2dv
0000000000228730 00000000000001d8 t save_VertexAttribL1dv
0000000000228910 0000000000000220 t save_VertexAttribL2d
0000000000228b30 00000000000001d8 t save_VertexAttribL1d
0000000000228d10 00000000000001d4 t save_MultiTexCoordP4uiv
0000000000228ef0 00000000000001d0 t save_MultiTexCoordP4ui
00000000002290c0 00000000000001b8 t save_MultiTexCoordP3uiv
0000000000229280 00000000000001b4 t save_MultiTexCoordP3ui
0000000000229440 000000000000017c t save_MultiTexCoordP2uiv
00000000002295c0 0000000000000178 t save_MultiTexCoordP2ui
0000000000229740 0000000000000158 t save_MultiTexCoordP1uiv
00000000002298a0 0000000000000154 t save_MultiTexCoordP1ui
0000000000229a00 00000000000001b4 t save_TexCoordP4uiv
0000000000229bc0 00000000000001b0 t save_TexCoordP4ui
0000000000229d70 0000000000000198 t save_TexCoordP3uiv
0000000000229f10 0000000000000194 t save_TexCoordP3ui
000000000022a0b0 000000000000015c t save_TexCoordP2uiv
000000000022a210 0000000000000158 t save_TexCoordP2ui
000000000022a370 0000000000000138 t save_TexCoordP1uiv
000000000022a4b0 0000000000000134 t save_TexCoordP1ui
000000000022a5f0 00000000000001b0 t save_VertexP4uiv
000000000022a7a0 00000000000001ac t save_VertexP4ui
000000000022a950 0000000000000194 t save_VertexP3uiv
000000000022aaf0 0000000000000190 t save_VertexP3ui
000000000022ac80 0000000000000158 t save_VertexP2uiv
000000000022ade0 0000000000000154 t save_VertexP2ui
000000000022af40 0000000000000230 t save_VertexAttribI4uiv
000000000022b170 000000000000020c t save_VertexAttribI3uiv
000000000022b380 00000000000001fc t save_VertexAttribI2uiv
000000000022b580 0000000000000228 t save_VertexAttribI4ui
000000000022b7b0 0000000000000204 t save_VertexAttribI3ui
000000000022b9c0 00000000000001f4 t save_VertexAttribI2ui
000000000022bbc0 00000000000001c8 t save_VertexAttribI1ui
000000000022bd90 0000000000000238 t save_VertexAttribI4iv
000000000022bfd0 0000000000000230 t save_VertexAttribI3iv
000000000022c200 00000000000001f4 t save_VertexAttribI2iv
000000000022c400 0000000000000228 t save_VertexAttribI4i
000000000022c630 0000000000000204 t save_VertexAttribI3i
000000000022c840 00000000000001f4 t save_VertexAttribI2i
000000000022ca40 00000000000001c8 t save_VertexAttribI1i
000000000022cc10 000000000000023c t save_VertexAttrib4fvARB
000000000022ce50 000000000000023c t save_VertexAttrib4fARB
000000000022d090 0000000000000224 t save_VertexAttrib3fvARB
000000000022d2c0 000000000000021c t save_VertexAttrib3fARB
000000000022d4e0 0000000000000214 t save_VertexAttrib2fvARB
000000000022d700 0000000000000214 t save_VertexAttrib2fARB
000000000022d920 00000000000001e8 t save_VertexAttrib1fvARB
000000000022db10 00000000000001e0 t save_VertexAttrib1fARB
000000000022dcf0 000000000000009c t save_EvalPoint2
000000000022dd90 0000000000000088 t save_EvalPoint1
000000000022de20 000000000000009c t save_EvalCoord2f
000000000022dec0 0000000000000008 t save_EvalCoord2fv
000000000022ded0 0000000000000094 t save_EvalCoord1f
000000000022df70 0000000000000008 t save_EvalCoord1fv
000000000022df80 0000000000000080 t save_End
000000000022e000 0000000000000278 t save_VertexAttribL4dv
000000000022e280 000000000000026c t save_VertexAttribL3dv
000000000022e4f0 0000000000000278 t save_VertexAttribL4d
000000000022e770 0000000000000268 t save_VertexAttribL3d
000000000022e9e0 0000000000000178 t unpack_image.part.0
000000000022eb60 00000000000000dc t save_TexCoord1f
000000000022ec40 00000000000000dc t save_FogCoordfEXT
000000000022ed20 00000000000000dc t save_Indexf
000000000022ee00 00000000000000e0 t save_TexCoord1fv
000000000022eee0 00000000000000e0 t save_Indexfv
000000000022efc0 00000000000000e0 t save_EdgeFlag
000000000022f0a0 00000000000000e0 t save_FogCoordfvEXT
000000000022f180 00000000000000e8 t save_Vertex2f
000000000022f270 00000000000000ec t save_TexCoord2f
000000000022f360 00000000000000ec t save_TexCoord2fv
000000000022f450 0000000000000114 t save_TexCoord3f
000000000022f570 00000000000000e8 t save_Vertex2fv
000000000022f660 0000000000000110 t save_Vertex3f
000000000022f770 0000000000000114 t save_SecondaryColor3fEXT
000000000022f890 0000000000000114 t save_Color3f
000000000022f9b0 0000000000000114 t save_Normal3f
000000000022fad0 0000000000000120 t save_TexCoord4f
000000000022fbf0 0000000000000120 t save_Color4f
000000000022fd10 000000000000011c t save_Vertex4f
000000000022fe30 0000000000000114 t save_Color3fv
000000000022ff50 0000000000000110 t save_Vertex3fv
0000000000230060 0000000000000114 t save_Normal3fv
0000000000230180 0000000000000100 t save_MultiTexCoord1f
0000000000230280 0000000000000114 t save_SecondaryColor3fvEXT
00000000002303a0 0000000000000114 t save_TexCoord3fv
00000000002304c0 0000000000000100 t save_MultiTexCoord1fv
00000000002305c0 0000000000000110 t save_MultiTexCoord2f
00000000002306d0 0000000000000118 t save_Vertex4fv
00000000002307f0 000000000000011c t save_Color4fv
0000000000230910 000000000000011c t save_TexCoord4fv
0000000000230a30 000000000000010c t save_MultiTexCoord2fv
0000000000230b40 0000000000000138 t save_MultiTexCoord3f
0000000000230c80 0000000000000144 t save_MultiTexCoord4f
0000000000230dd0 0000000000000134 t save_MultiTexCoord3fv
0000000000230f10 000000000000013c t save_MultiTexCoord4fv
0000000000231050 000000000000005c t execute_list
00000000002310b0 0000000000004ba8 t execute_list.part.0
0000000000235c60 0000000000000144 t save_VertexAttrib1fNV
0000000000235db0 0000000000000144 t save_VertexAttrib1fvNV
0000000000235f00 0000000000000154 t save_VertexAttrib2fNV
0000000000236060 0000000000000150 t save_VertexAttrib2fvNV
00000000002361b0 000000000000017c t save_VertexAttrib3fNV
0000000000236330 0000000000000178 t save_VertexAttrib3fvNV
00000000002364b0 0000000000000188 t save_VertexAttrib4fNV
0000000000236640 000000000000017c t r11g11b10f_to_float3.constprop.0
00000000002367c0 00000000000003f0 t save_SecondaryColorP3ui
0000000000236bb0 00000000000003f0 t save_ColorP3ui
0000000000236fa0 00000000000003f0 t save_NormalP3ui
0000000000237390 00000000000003f8 t save_SecondaryColorP3uiv
0000000000237790 00000000000003f8 t save_NormalP3uiv
0000000000237b90 00000000000003f8 t save_ColorP3uiv
0000000000237f90 00000000000004c4 t save_ColorP4ui
0000000000238460 00000000000004c8 t save_ColorP4uiv
0000000000238930 0000000000000150 t save_CallLists
0000000000238a80 0000000000000954 t save_VertexAttribP4ui
00000000002393e0 000000000000095c t save_VertexAttribP4uiv
0000000000239d40 00000000000003e8 t save_VertexAttribP1ui
000000000023a130 00000000000003fc t save_VertexAttribP1uiv
000000000023a530 000000000000070c t save_VertexAttribP2ui
000000000023ac40 00000000000006f0 t save_VertexAttribP2uiv
000000000023b330 0000000000000a90 t save_VertexAttribP3uiv
000000000023bdc0 0000000000000a90 t save_VertexAttribP3ui
000000000023c850 000000000000003c t _mesa_delete_bitmap_atlas
000000000023c890 000000000000000c t _mesa_lookup_list
000000000023c8a0 0000000000000410 t _mesa_delete_list
000000000023ccb0 00000000000000a4 t destroy_list
000000000023cd60 0000000000000024 t _mesa_dlist_alloc_aligned
000000000023cd90 0000000000000050 t _mesa_dlist_alloc_opcode
000000000023cde0 0000000000000088 t _mesa_compile_error
000000000023ce70 0000000000000128 t save_NamedProgramLocalParameter4fEXT
000000000023cfa0 000000000000000c t save_NamedProgramLocalParameter4fvEXT
000000000023cfb0 000000000000001c t save_NamedProgramLocalParameter4dvEXT
000000000023cfd0 0000000000000014 t save_NamedProgramLocalParameter4dEXT
000000000023cff0 0000000000000170 t save_NamedProgramStringEXT
000000000023d160 0000000000000218 t save_CompressedMultiTexSubImage3DEXT
000000000023d380 00000000000001f0 t save_CompressedMultiTexSubImage2DEXT
000000000023d570 00000000000001c4 t save_CompressedMultiTexSubImage1DEXT
000000000023d740 0000000000000284 t save_CompressedMultiTexImage3DEXT
000000000023d9d0 0000000000000264 t save_CompressedMultiTexImage2DEXT
000000000023dc40 0000000000000250 t save_CompressedMultiTexImage1DEXT
000000000023de90 0000000000000218 t save_CompressedTextureSubImage3DEXT
000000000023e0b0 00000000000001f0 t save_CompressedTextureSubImage2DEXT
000000000023e2a0 00000000000001c4 t save_CompressedTextureSubImage1DEXT
000000000023e470 0000000000000284 t save_CompressedTextureImage3DEXT
000000000023e700 0000000000000264 t save_CompressedTextureImage2DEXT
000000000023e970 0000000000000250 t save_CompressedTextureImage1DEXT
000000000023ebc0 0000000000000148 t save_MultiTexEnvfvEXT
000000000023ed10 00000000000000c4 t save_MultiTexEnvivEXT
000000000023ede0 000000000000002c t save_MultiTexEnviEXT
000000000023ee10 0000000000000024 t save_MultiTexEnvfEXT
000000000023ee40 0000000000000160 t save_CopyMultiTexSubImage3DEXT
000000000023efa0 000000000000014c t save_CopyMultiTexSubImage2DEXT
000000000023f0f0 0000000000000128 t save_CopyMultiTexSubImage1DEXT
000000000023f220 000000000000014c t save_CopyMultiTexImage2DEXT
000000000023f370 000000000000013c t save_CopyMultiTexImage1DEXT
000000000023f4b0 00000000000001f8 t save_MultiTexSubImage3DEXT
000000000023f6b0 00000000000001e4 t save_MultiTexSubImage2DEXT
000000000023f8a0 00000000000001b4 t save_MultiTexSubImage1DEXT
000000000023fa60 0000000000000264 t save_MultiTexImage3DEXT
000000000023fcd0 0000000000000258 t save_MultiTexImage2DEXT
000000000023ff30 0000000000000240 t save_MultiTexImage1DEXT
0000000000240170 000000000000011c t save_MultiTexParameterfvEXT
0000000000240290 0000000000000024 t save_MultiTexParameterfEXT
00000000002402c0 000000000000011c t save_MultiTexParameterIuivEXT
00000000002403e0 000000000000011c t save_MultiTexParameterIivEXT
0000000000240500 000000000000011c t save_MultiTexParameterivEXT
0000000000240620 0000000000000024 t save_MultiTexParameteriEXT
0000000000240650 00000000000000e8 t save_BindMultiTextureEXT
0000000000240740 0000000000000160 t save_CopyTextureSubImage3DEXT
00000000002408a0 000000000000014c t save_CopyTextureSubImage2DEXT
00000000002409f0 0000000000000128 t save_CopyTextureSubImage1DEXT
0000000000240b20 000000000000014c t save_CopyTextureImage2DEXT
0000000000240c70 000000000000013c t save_CopyTextureImage1DEXT
0000000000240db0 00000000000001f8 t save_TextureSubImage3DEXT
0000000000240fb0 00000000000001e4 t save_TextureSubImage2DEXT
00000000002411a0 00000000000001b4 t save_TextureSubImage1DEXT
0000000000241360 0000000000000264 t save_TextureImage3DEXT
00000000002415d0 0000000000000258 t save_TextureImage2DEXT
0000000000241830 0000000000000240 t save_TextureImage1DEXT
0000000000241a70 000000000000011c t save_TextureParameterIuivEXT
0000000000241b90 000000000000011c t save_TextureParameterIivEXT
0000000000241cb0 000000000000011c t save_TextureParameterfvEXT
0000000000241dd0 0000000000000024 t save_TextureParameterfEXT
0000000000241e00 000000000000011c t save_TextureParameterivEXT
0000000000241f20 0000000000000024 t save_TextureParameteriEXT
0000000000241f50 00000000000000c4 t save_MatrixPopEXT
0000000000242020 00000000000000c4 t save_MatrixPushEXT
00000000002420f0 000000000000013c t save_MatrixFrustumEXT
0000000000242230 000000000000013c t save_MatrixOrthoEXT
0000000000242370 00000000000000c4 t save_MatrixLoadIdentityEXT
0000000000242440 00000000000000fc t save_MatrixTranslatefEXT
0000000000242540 0000000000000010 t save_MatrixTranslatedEXT
0000000000242550 00000000000000fc t save_MatrixScalefEXT
0000000000242650 0000000000000010 t save_MatrixScaledEXT
0000000000242660 0000000000000104 t save_MatrixRotatefEXT
0000000000242770 0000000000000014 t save_MatrixRotatedEXT
0000000000242790 00000000000000fc t save_MatrixMultfEXT
0000000000242890 0000000000000034 t save_MatrixMultTransposedEXT
00000000002428d0 0000000000000034 t save_MatrixMultTransposefEXT
0000000000242910 0000000000000040 t save_MatrixMultdEXT
0000000000242950 00000000000000fc t save_MatrixLoadfEXT
0000000000242a50 0000000000000034 t save_MatrixLoadTransposedEXT
0000000000242a90 0000000000000034 t save_MatrixLoadTransposefEXT
0000000000242ad0 0000000000000040 t save_MatrixLoaddEXT
0000000000242b10 00000000000000dc t save_ConservativeRasterParameteriNV
0000000000242bf0 00000000000000dc t save_ConservativeRasterParameterfNV
0000000000242cd0 00000000000000dc t save_SubpixelPrecisionBiasNV
0000000000242db0 0000000000000154 t save_WindowRectanglesEXT
0000000000242f10 00000000000000f0 t save_PolygonOffsetClampEXT
0000000000243000 0000000000000164 t save_ProgramUniformMatrix4x3dv
0000000000243170 0000000000000164 t save_ProgramUniformMatrix3x4dv
00000000002432e0 0000000000000160 t save_ProgramUniformMatrix4x2dv
0000000000243440 0000000000000160 t save_ProgramUniformMatrix2x4dv
00000000002435a0 0000000000000164 t save_ProgramUniformMatrix3x2dv
0000000000243710 0000000000000164 t save_ProgramUniformMatrix2x3dv
0000000000243880 0000000000000160 t save_ProgramUniformMatrix4dv
00000000002439e0 0000000000000164 t save_ProgramUniformMatrix3dv
0000000000243b50 0000000000000160 t save_ProgramUniformMatrix2dv
0000000000243cb0 0000000000000164 t save_ProgramUniformMatrix4x3fv
0000000000243e20 0000000000000164 t save_ProgramUniformMatrix3x4fv
0000000000243f90 0000000000000160 t save_ProgramUniformMatrix4x2fv
00000000002440f0 0000000000000160 t save_ProgramUniformMatrix2x4fv
0000000000244250 0000000000000164 t save_ProgramUniformMatrix3x2fv
00000000002443c0 0000000000000164 t save_ProgramUniformMatrix2x3fv
0000000000244530 0000000000000160 t save_ProgramUniformMatrix4fv
0000000000244690 0000000000000164 t save_ProgramUniformMatrix3fv
0000000000244800 0000000000000160 t save_ProgramUniformMatrix2fv
0000000000244960 0000000000000148 t save_ProgramUniform4uiv
0000000000244ab0 000000000000014c t save_ProgramUniform3uiv
0000000000244c00 0000000000000148 t save_ProgramUniform2uiv
0000000000244d50 0000000000000148 t save_ProgramUniform1uiv
0000000000244ea0 0000000000000120 t save_ProgramUniform4ui
0000000000244fc0 000000000000010c t save_ProgramUniform3ui
00000000002450d0 00000000000000fc t save_ProgramUniform2ui
00000000002451d0 00000000000000e8 t save_ProgramUniform1ui
00000000002452c0 0000000000000148 t save_ProgramUniform4iv
0000000000245410 000000000000014c t save_ProgramUniform3iv
0000000000245560 0000000000000148 t save_ProgramUniform2iv
00000000002456b0 0000000000000148 t save_ProgramUniform1iv
0000000000245800 0000000000000120 t save_ProgramUniform4i
0000000000245920 000000000000010c t save_ProgramUniform3i
0000000000245a30 00000000000000fc t save_ProgramUniform2i
0000000000245b30 00000000000000e8 t save_ProgramUniform1i
0000000000245c20 0000000000000148 t save_ProgramUniform4dv
0000000000245d70 000000000000014c t save_ProgramUniform3dv
0000000000245ec0 0000000000000148 t save_ProgramUniform2dv
0000000000246010 0000000000000148 t save_ProgramUniform1dv
0000000000246160 0000000000000148 t save_ProgramUniform4d
00000000002462b0 0000000000000130 t save_ProgramUniform3d
00000000002463e0 0000000000000110 t save_ProgramUniform2d
00000000002464f0 00000000000000fc t save_ProgramUniform1d
00000000002465f0 0000000000000148 t save_ProgramUniform4fv
0000000000246740 000000000000014c t save_ProgramUniform3fv
0000000000246890 0000000000000148 t save_ProgramUniform2fv
00000000002469e0 0000000000000148 t save_ProgramUniform1fv
0000000000246b30 000000000000011c t save_ProgramUniform4f
0000000000246c50 0000000000000114 t save_ProgramUniform3f
0000000000246d70 00000000000000fc t save_ProgramUniform2f
0000000000246e70 00000000000000f4 t save_ProgramUniform1f
0000000000246f70 00000000000000e8 t save_UseProgramStages
0000000000247060 0000000000000154 t save_UniformSubroutinesuiv
00000000002471c0 00000000000000e8 t save_UniformBlockBinding
00000000002472b0 00000000000000e8 t save_WaitSync
00000000002473a0 00000000000000b4 t save_EndConditionalRender
0000000000247460 00000000000000dc t save_BeginConditionalRender
0000000000247540 00000000000000e8 t save_BlendEquationSeparatei
0000000000247630 00000000000000dc t save_BlendEquationi
0000000000247710 000000000000010c t save_BlendFuncSeparatei
0000000000247820 00000000000000e8 t save_BlendFunci
0000000000247910 0000000000000128 t save_SamplerParameterIuiv
0000000000247a40 0000000000000128 t save_SamplerParameterIiv
0000000000247b70 0000000000000128 t save_SamplerParameterfv
0000000000247ca0 0000000000000024 t save_SamplerParameterf
0000000000247cd0 0000000000000128 t save_SamplerParameteriv
0000000000247e00 0000000000000024 t save_SamplerParameteri
0000000000247e30 00000000000000dc t save_BindSampler
0000000000247f10 00000000000000b4 t save_TextureBarrierNV
0000000000247fd0 00000000000000dc t save_VertexAttribDivisor
00000000002480b0 00000000000000dc t save_EndQueryIndexed
0000000000248190 00000000000000e8 t save_BeginQueryIndexed
0000000000248280 00000000000000fc t save_DrawTransformFeedbackStreamInstanced
0000000000248380 00000000000000e8 t save_DrawTransformFeedbackInstanced
0000000000248470 00000000000000e8 t save_DrawTransformFeedbackStream
0000000000248560 00000000000000dc t save_DrawTransformFeedback
0000000000248640 00000000000000b4 t save_ResumeTransformFeedback
0000000000248700 00000000000000b4 t save_PauseTransformFeedback
00000000002487c0 00000000000000dc t save_BindTransformFeedback
00000000002488a0 00000000000000b4 t save_EndTransformFeedback
0000000000248960 00000000000000c4 t save_BeginTransformFeedback
0000000000248a30 0000000000000148 t save_ProgramUniform4ui64vARB
0000000000248b80 0000000000000148 t save_ProgramUniform3ui64vARB
0000000000248cd0 0000000000000148 t save_ProgramUniform2ui64vARB
0000000000248e20 0000000000000148 t save_ProgramUniform1ui64vARB
0000000000248f70 0000000000000124 t save_ProgramUniform4ui64ARB
00000000002490a0 0000000000000110 t save_ProgramUniform3ui64ARB
00000000002491b0 0000000000000100 t save_ProgramUniform2ui64ARB
00000000002492b0 00000000000000e8 t save_ProgramUniform1ui64ARB
00000000002493a0 0000000000000148 t save_ProgramUniform4i64vARB
00000000002494f0 0000000000000148 t save_ProgramUniform3i64vARB
0000000000249640 0000000000000148 t save_ProgramUniform2i64vARB
0000000000249790 0000000000000148 t save_ProgramUniform1i64vARB
00000000002498e0 0000000000000124 t save_ProgramUniform4i64ARB
0000000000249a10 0000000000000110 t save_ProgramUniform3i64ARB
0000000000249b20 0000000000000100 t save_ProgramUniform2i64ARB
0000000000249c20 00000000000000e8 t save_ProgramUniform1i64ARB
0000000000249d10 000000000000013c t save_Uniform4ui64vARB
0000000000249e50 0000000000000140 t save_Uniform3ui64vARB
0000000000249f90 000000000000013c t save_Uniform2ui64vARB
000000000024a0d0 000000000000013c t save_Uniform1ui64vARB
000000000024a210 000000000000010c t save_Uniform4ui64ARB
000000000024a320 0000000000000100 t save_Uniform3ui64ARB
000000000024a420 00000000000000e8 t save_Uniform2ui64ARB
000000000024a510 00000000000000e0 t save_Uniform1ui64ARB
000000000024a5f0 000000000000013c t save_Uniform4i64vARB
000000000024a730 0000000000000140 t save_Uniform3i64vARB
000000000024a870 000000000000013c t save_Uniform2i64vARB
000000000024a9b0 000000000000013c t save_Uniform1i64vARB
000000000024aaf0 000000000000010c t save_Uniform4i64ARB
000000000024ac00 0000000000000100 t save_Uniform3i64ARB
000000000024ad00 00000000000000e8 t save_Uniform2i64ARB
000000000024adf0 00000000000000e0 t save_Uniform1i64ARB
000000000024aed0 0000000000000154 t save_UniformMatrix4x3dv
000000000024b030 0000000000000154 t save_UniformMatrix3x4dv
000000000024b190 0000000000000150 t save_UniformMatrix4x2dv
000000000024b2e0 0000000000000150 t save_UniformMatrix2x4dv
000000000024b430 0000000000000154 t save_UniformMatrix3x2dv
000000000024b590 0000000000000154 t save_UniformMatrix2x3dv
000000000024b6f0 0000000000000150 t save_UniformMatrix4dv
000000000024b840 0000000000000154 t save_UniformMatrix3dv
000000000024b9a0 0000000000000150 t save_UniformMatrix2dv
000000000024baf0 000000000000013c t save_Uniform4dv
000000000024bc30 0000000000000140 t save_Uniform3dv
000000000024bd70 000000000000013c t save_Uniform2dv
000000000024beb0 000000000000013c t save_Uniform1dv
000000000024bff0 000000000000012c t save_Uniform4d
000000000024c120 0000000000000118 t save_Uniform3d
000000000024c240 00000000000000f8 t save_Uniform2d
000000000024c340 00000000000000e4 t save_Uniform1d
000000000024c430 000000000000013c t save_Uniform4uiv
000000000024c570 0000000000000140 t save_Uniform3uiv
000000000024c6b0 000000000000013c t save_Uniform2uiv
000000000024c7f0 000000000000013c t save_Uniform1uiv
000000000024c930 000000000000010c t save_Uniform4ui
000000000024ca40 00000000000000fc t save_Uniform3ui
000000000024cb40 00000000000000e8 t save_Uniform2ui
000000000024cc30 00000000000000dc t save_Uniform1ui
000000000024cd10 0000000000000100 t save_ClearBufferfi
000000000024ce10 0000000000000128 t save_ClearBufferfv
000000000024cf40 0000000000000128 t save_ClearBufferuiv
000000000024d070 0000000000000128 t save_ClearBufferiv
000000000024d1a0 00000000000000dc t save_ClampColorARB
000000000024d280 00000000000000dc t save_ClipControl
000000000024d360 0000000000000104 t save_TexParameterIuiv
000000000024d470 0000000000000104 t save_TexParameterIiv
000000000024d580 00000000000000fc t save_ClearColorIui
000000000024d680 00000000000000fc t save_ClearColorIi
000000000024d780 00000000000000a4 t save_ProvokingVertexEXT
000000000024d830 0000000000000140 t save_ProgramLocalParameters4fvEXT
000000000024d970 0000000000000140 t save_ProgramEnvParameters4fvEXT
000000000024dab0 00000000000000dc t save_BlendEquationSeparateEXT
000000000024db90 0000000000000154 t save_UniformMatrix4x3fv
000000000024dcf0 0000000000000154 t save_UniformMatrix3x4fv
000000000024de50 0000000000000150 t save_UniformMatrix4x2fv
000000000024dfa0 0000000000000150 t save_UniformMatrix2x4fv
000000000024e0f0 0000000000000154 t save_UniformMatrix3x2fv
000000000024e250 0000000000000154 t save_UniformMatrix2x3fv
000000000024e3b0 0000000000000150 t save_UniformMatrix4fvARB
000000000024e500 0000000000000154 t save_UniformMatrix3fvARB
000000000024e660 0000000000000150 t save_UniformMatrix2fvARB
000000000024e7b0 000000000000013c t save_Uniform4ivARB
000000000024e8f0 0000000000000140 t save_Uniform3ivARB
000000000024ea30 000000000000013c t save_Uniform2ivARB
000000000024eb70 000000000000013c t save_Uniform1ivARB
000000000024ecb0 000000000000010c t save_Uniform4iARB
000000000024edc0 00000000000000fc t save_Uniform3iARB
000000000024eec0 00000000000000e8 t save_Uniform2iARB
000000000024efb0 00000000000000dc t save_Uniform1iARB
000000000024f090 000000000000013c t save_Uniform4fvARB
000000000024f1d0 0000000000000140 t save_Uniform3fvARB
000000000024f310 000000000000013c t save_Uniform2fvARB
000000000024f450 000000000000013c t save_Uniform1fvARB
000000000024f590 0000000000000104 t save_Uniform4fARB
000000000024f6a0 00000000000000fc t save_Uniform3fARB
000000000024f7a0 00000000000000e4 t save_Uniform2fARB
000000000024f890 00000000000000dc t save_Uniform1fARB
000000000024f970 00000000000000c4 t save_UseProgram
000000000024fa40 0000000000000160 t save_BlitFramebufferEXT
000000000024fba0 0000000000000110 t save_DrawBuffersARB
000000000024fcb0 00000000000000dc t save_QueryCounter
000000000024fd90 00000000000000c4 t save_EndQueryARB
000000000024fe60 00000000000000dc t save_BeginQueryARB
000000000024ff40 0000000000000104 t save_ProgramLocalParameter4fvARB
0000000000250050 000000000000011c t save_ProgramLocalParameter4fARB
0000000000250170 0000000000000104 t save_ProgramLocalParameter4dvARB
0000000000250280 000000000000012c t save_ProgramLocalParameter4dARB
00000000002503b0 000000000000011c t save_ProgramEnvParameter4fARB
00000000002504d0 000000000000000c t save_ProgramEnvParameter4fvARB
00000000002504e0 000000000000001c t save_ProgramEnvParameter4dvARB
0000000000250500 0000000000000014 t save_ProgramEnvParameter4dARB
0000000000250520 00000000000000dc t save_BindProgramARB
0000000000250600 0000000000000158 t save_ProgramStringARB
0000000000250760 00000000000001b4 t save_CompressedTexSubImage1DARB
0000000000250920 00000000000001d8 t save_CompressedTexSubImage2DARB
0000000000250b00 0000000000000200 t save_CompressedTexSubImage3DARB
0000000000250d00 000000000000023c t save_CompressedTexImage1DARB
0000000000250f40 0000000000000250 t save_CompressedTexImage2DARB
0000000000251190 0000000000000264 t save_CompressedTexImage3DARB
0000000000251400 00000000000000dc t save_SampleCoverageARB
00000000002514e0 00000000000000b0 t save_ActiveTextureARB
0000000000251590 00000000000000e0 t save_DepthBoundsEXT
0000000000251670 00000000000000c4 t save_ActiveStencilFaceEXT
0000000000251740 00000000000000f8 t save_WindowPos4fMESA
0000000000251840 0000000000000024 t save_WindowPos4svMESA
0000000000251870 0000000000000024 t save_WindowPos4sMESA
00000000002518a0 000000000000001c t save_WindowPos4ivMESA
00000000002518c0 0000000000000014 t save_WindowPos4iMESA
00000000002518e0 000000000000000c t save_WindowPos4fvMESA
00000000002518f0 000000000000001c t save_WindowPos4dvMESA
0000000000251910 0000000000000014 t save_WindowPos4dMESA
0000000000251930 0000000000000020 t save_WindowPos3svMESA
0000000000251950 0000000000000020 t save_WindowPos3sMESA
0000000000251970 000000000000001c t save_WindowPos3ivMESA
0000000000251990 0000000000000014 t save_WindowPos3iMESA
00000000002519b0 0000000000000010 t save_WindowPos3fvMESA
00000000002519c0 0000000000000008 t save_WindowPos3fMESA
00000000002519d0 000000000000001c t save_WindowPos3dvMESA
00000000002519f0 0000000000000014 t save_WindowPos3dMESA
0000000000251a10 000000000000001c t save_WindowPos2svMESA
0000000000251a30 000000000000001c t save_WindowPos2sMESA
0000000000251a50 0000000000000018 t save_WindowPos2ivMESA
0000000000251a70 0000000000000014 t save_WindowPos2iMESA
0000000000251a90 0000000000000010 t save_WindowPos2fvMESA
0000000000251aa0 000000000000000c t save_WindowPos2fMESA
0000000000251ab0 0000000000000018 t save_WindowPos2dvMESA
0000000000251ad0 0000000000000014 t save_WindowPos2dMESA
0000000000251af0 00000000000000fc t save_BlendFuncSeparateEXT
0000000000251bf0 000000000000000c t save_BlendFunc
0000000000251c00 00000000000000e8 t save_DispatchCompute
0000000000251cf0 00000000000000ec t save_DepthRangeIndexed
0000000000251de0 000000000000013c t save_DepthRangeArrayv
0000000000251f20 00000000000000fc t save_ScissorIndexedv
0000000000252020 000000000000010c t save_ScissorIndexed
0000000000252130 000000000000013c t save_ScissorArrayv
0000000000252270 00000000000000fc t save_ViewportIndexedfv
0000000000252370 0000000000000104 t save_ViewportIndexedf
0000000000252480 000000000000013c t save_ViewportArrayv
00000000002525c0 0000000000000140 t save_PatchParameterfv
0000000000252700 00000000000000dc t save_PatchParameteri
00000000002527e0 00000000000000f4 t save_PointParameterfvEXT
00000000002528e0 000000000000002c t save_PointParameterivNV
0000000000252910 0000000000000028 t save_PointParameteriNV
0000000000252940 0000000000000020 t save_PointParameterfEXT
0000000000252960 00000000000000b0 t save_BlendEquation
0000000000252a10 00000000000000e4 t save_BlendColor
0000000000252b00 0000000000000154 t save_StencilFuncSeparateATI
0000000000252c60 00000000000000fc t save_StencilOpSeparate
0000000000252d60 00000000000000dc t save_StencilMaskSeparate
0000000000252e40 00000000000000fc t save_StencilFuncSeparate
0000000000252f40 00000000000001dc t save_TexSubImage3D
0000000000253120 0000000000000210 t save_TexImage3D
0000000000253330 0000000000000138 t save_CopyTexSubImage3D
0000000000253470 00000000000001b8 t save_TexSubImage2D
0000000000253630 0000000000000198 t save_TexSubImage1D
00000000002537d0 0000000000000108 t save_PrioritizeTextures
00000000002538e0 0000000000000128 t save_CopyTexSubImage2D
0000000000253a10 000000000000010c t save_CopyTexSubImage1D
0000000000253b20 0000000000000128 t save_CopyTexImage2D
0000000000253c50 0000000000000114 t save_CopyTexImage1D
0000000000253d70 00000000000000c8 t save_BindTexture
0000000000253e40 00000000000000e8 t save_Viewport
0000000000253f30 00000000000000dc t save_Translatef
0000000000254010 0000000000000010 t save_Translated
0000000000254020 00000000000000f0 t save_TexParameterfv
0000000000254110 0000000000000030 t save_TexParameteriv
0000000000254140 000000000000002c t save_TexParameteri
0000000000254170 0000000000000024 t save_TexParameterf
00000000002541a0 0000000000000204 t save_TexImage2D
00000000002543b0 00000000000001f0 t save_TexImage1D
00000000002545a0 00000000000000f0 t save_TexGenfv
0000000000254690 000000000000003c t save_TexGeniv
00000000002546d0 0000000000000024 t save_TexGenf
0000000000254700 000000000000003c t save_TexGendv
0000000000254740 0000000000000028 t save_TexGend
0000000000254770 000000000000002c t save_TexGeni
00000000002547a0 0000000000000118 t save_TexEnvfv
00000000002548c0 00000000000000c4 t save_TexEnviv
0000000000254990 000000000000002c t save_TexEnvi
00000000002549c0 0000000000000024 t save_TexEnvf
00000000002549f0 00000000000000d4 t save_StencilOp
0000000000254ad0 00000000000000b0 t save_StencilMask
0000000000254b80 00000000000000d4 t save_StencilFunc
0000000000254c60 00000000000000e0 t save_ShadeModel
0000000000254d40 00000000000000e8 t save_Scissor
0000000000254e30 00000000000000dc t save_Scalef
0000000000254f10 0000000000000010 t save_Scaled
0000000000254f20 00000000000000e4 t save_Rotatef
0000000000255010 0000000000000014 t save_Rotated
0000000000255030 00000000000000e4 t save_Rectf
0000000000255120 00000000000000b0 t save_ReadBuffer
00000000002551d0 00000000000000e4 t save_RasterPos4f
00000000002552c0 0000000000000024 t save_RasterPos4sv
00000000002552f0 0000000000000024 t save_RasterPos4s
0000000000255320 000000000000001c t save_RasterPos4iv
0000000000255340 0000000000000014 t save_RasterPos4i
0000000000255360 000000000000000c t save_RasterPos4fv
0000000000255370 000000000000001c t save_RasterPos4dv
0000000000255390 0000000000000014 t save_RasterPos4d
00000000002553b0 0000000000000020 t save_RasterPos3sv
00000000002553d0 0000000000000020 t save_RasterPos3s
00000000002553f0 000000000000001c t save_RasterPos3iv
0000000000255410 0000000000000014 t save_RasterPos3i
0000000000255430 0000000000000010 t save_RasterPos3fv
0000000000255440 0000000000000008 t save_RasterPos3f
0000000000255450 000000000000001c t save_RasterPos3dv
0000000000255470 0000000000000014 t save_RasterPos3d
0000000000255490 000000000000001c t save_RasterPos2sv
00000000002554b0 000000000000001c t save_RasterPos2s
00000000002554d0 0000000000000018 t save_RasterPos2iv
00000000002554f0 0000000000000014 t save_RasterPos2i
0000000000255510 0000000000000010 t save_RasterPos2fv
0000000000255520 000000000000000c t save_RasterPos2f
0000000000255530 0000000000000018 t save_RasterPos2dv
0000000000255550 0000000000000014 t save_RasterPos2d
0000000000255570 00000000000000b0 t save_PushName
0000000000255620 00000000000000a0 t save_PushMatrix
00000000002556c0 00000000000000b0 t save_PushAttrib
0000000000255770 00000000000000a0 t save_PopName
0000000000255810 00000000000000a0 t save_PopMatrix
00000000002558b0 00000000000000a0 t save_PopAttrib
0000000000255950 000000000000012c t save_PolygonStipple
0000000000255a80 00000000000000c4 t save_PolygonOffset
0000000000255b50 00000000000000c8 t save_PolygonMode
0000000000255c20 00000000000000bc t save_PointSize
0000000000255ce0 00000000000000c4 t save_PixelZoom
0000000000255db0 00000000000000c8 t save_PixelTransferf
0000000000255e80 0000000000000008 t save_PixelTransferi
0000000000255e90 0000000000000128 t save_PixelMapfv
0000000000255fc0 00000000000000c8 t save_PixelMapusv
0000000000256090 00000000000000d0 t save_PixelMapuiv
0000000000256160 00000000000000bc t save_PassThrough
0000000000256220 000000000000011c t save_Ortho
0000000000256340 00000000000000c8 t save_MultMatrixf
0000000000256410 0000000000000030 t save_MultTransposeMatrixfARB
0000000000256440 0000000000000030 t save_MultTransposeMatrixdARB
0000000000256470 0000000000000040 t save_MultMatrixd
00000000002564b0 00000000000000b0 t save_MatrixMode
0000000000256560 000000000000010c t save_MapGrid2f
0000000000256670 0000000000000014 t save_MapGrid2d
0000000000256690 00000000000000d0 t save_MapGrid1f
0000000000256760 000000000000000c t save_MapGrid1d
0000000000256770 0000000000000198 t save_Map2f
0000000000256910 00000000000001a8 t save_Map2d
0000000000256ac0 000000000000013c t save_Map1f
0000000000256c00 0000000000000144 t save_Map1d
0000000000256d50 00000000000000b0 t save_LogicOp
0000000000256e00 00000000000000b0 t save_LoadName
0000000000256eb0 00000000000000c8 t save_LoadMatrixf
0000000000256f80 0000000000000030 t save_LoadTransposeMatrixfARB
0000000000256fb0 0000000000000030 t save_LoadTransposeMatrixdARB
0000000000256fe0 0000000000000040 t save_LoadMatrixd
0000000000257020 00000000000000a0 t save_LoadIdentity
00000000002570c0 00000000000000b0 t save_ListBase
0000000000257170 00000000000000bc t save_LineWidth
0000000000257230 00000000000000cc t save_LineStipple
0000000000257300 0000000000000114 t save_Lightfv
0000000000257420 0000000000000148 t save_Lightiv
0000000000257570 0000000000000024 t save_Lighti
00000000002575a0 0000000000000024 t save_Lightf
00000000002575d0 00000000000000e8 t save_LightModelfv
00000000002576c0 0000000000000108 t save_LightModeliv
00000000002577d0 0000000000000024 t save_LightModeli
0000000000257800 0000000000000024 t save_LightModelf
0000000000257830 00000000000000a0 t save_InitNames
00000000002578d0 00000000000000b0 t save_IndexMask
0000000000257980 00000000000000c8 t save_Hint
0000000000257a50 000000000000011c t save_Frustum
0000000000257b70 00000000000000b0 t save_FrontFace
0000000000257c20 00000000000000e8 t save_Fogfv
0000000000257d10 0000000000000108 t save_Fogiv
0000000000257e20 0000000000000024 t save_Fogi
0000000000257e50 0000000000000024 t save_Fogf
0000000000257e80 00000000000000f4 t save_EvalMesh2
0000000000257f80 00000000000000d4 t save_EvalMesh1
0000000000258060 00000000000000dc t save_EnableIndexed
0000000000258140 00000000000000b0 t save_Enable
00000000002581f0 0000000000000178 t save_DrawPixels
0000000000258370 00000000000000b0 t save_DrawBuffer
0000000000258420 00000000000000dc t save_DisableIndexed
0000000000258500 00000000000000b0 t save_Disable
00000000002585b0 00000000000000cc t save_DepthRange
0000000000258680 00000000000000b0 t save_DepthMask
0000000000258730 00000000000000b0 t save_DepthFunc
00000000002587e0 00000000000000b0 t save_CullFace
0000000000258890 00000000000000f4 t save_CopyPixels
0000000000258990 00000000000000c8 t save_ColorMaterial
0000000000258a60 00000000000000bc t save_ColorMaskIndexed
0000000000258b20 00000000000000f0 t save_ColorMask
0000000000258c10 00000000000000e8 t save_ClipPlane
0000000000258d00 00000000000000b0 t save_ClearStencil
0000000000258db0 00000000000000bc t save_ClearIndex
0000000000258e70 00000000000000c0 t save_ClearDepth
0000000000258f30 00000000000000e4 t save_ClearColor
0000000000259020 00000000000000e4 t save_ClearAccum
0000000000259110 00000000000000b0 t save_Clear
00000000002591c0 0000000000000198 t save_Bitmap
0000000000259360 00000000000000c8 t save_AlphaFunc
0000000000259430 00000000000000c8 t save_Accum
0000000000259500 00000000000002d0 t save_Materialfv
00000000002597d0 00000000000000b4 t save_PrimitiveRestartNV
0000000000259890 0000000000000098 t save_Begin
0000000000259930 00000000000000a4 T _mesa_IsList
00000000002599e0 0000000000000130 T _mesa_DeleteLists
0000000000259b10 0000000000000208 T _mesa_GenLists
0000000000259d20 00000000000001cc T _mesa_NewList
0000000000259ef0 000000000000019c T _mesa_EndList
000000000025a090 00000000000000b8 t _mesa_CallList
000000000025a150 00000000000000c0 t save_CallList
000000000025a210 00000000000006cc T _mesa_CallLists
000000000025a8e0 0000000000000088 T _mesa_ListBase
000000000025a970 00000000000027ac t _mesa_initialize_save_table
000000000025d120 000000000000000c t _mesa_install_dlist_vtxfmt
000000000025d130 000000000000061c t _mesa_init_display_list
000000000025d750 0000000000000028 t _mesa_free_display_list_data
000000000025d780 000000000000009c t need_xfb_remaining_prims_check
000000000025d820 0000000000000150 t count_tessellated_primitives
000000000025d970 00000000000000c0 t valid_draw_indirect_parameters
000000000025da30 0000000000000164 t check_valid_to_render.part.0
000000000025dba0 0000000000000354 t _mesa_valid_to_render
000000000025df00 00000000000000e4 t _mesa_is_valid_prim_mode
000000000025dff0 0000000000000374 t _mesa_valid_prim_mode
000000000025e370 0000000000000210 t valid_draw_indirect
000000000025e580 0000000000000108 t validate_draw_arrays.constprop.0
000000000025e690 0000000000000160 t validate_DrawElements_common.constprop.0
000000000025e7f0 000000000000000c t _mesa_validate_DrawElements
000000000025e800 0000000000000194 t _mesa_validate_MultiDrawElements
000000000025e9a0 0000000000000040 t _mesa_validate_DrawRangeElements
000000000025e9e0 0000000000000014 t _mesa_validate_DrawArrays
000000000025ea00 0000000000000098 t _mesa_validate_DrawArraysInstanced
000000000025eaa0 0000000000000190 t _mesa_validate_MultiDrawArrays
000000000025ec30 0000000000000060 t _mesa_validate_DrawElementsInstanced
000000000025ec90 0000000000000128 t _mesa_validate_DrawTransformFeedback
000000000025edc0 0000000000000064 t _mesa_valid_draw_indirect_multi
000000000025ee30 0000000000000010 t _mesa_validate_DrawArraysIndirect
000000000025ee40 00000000000000bc t _mesa_validate_DrawElementsIndirect
000000000025ef00 0000000000000090 t _mesa_validate_MultiDrawArraysIndirect
000000000025ef90 000000000000012c t _mesa_validate_MultiDrawElementsIndirect
000000000025f0c0 00000000000000c4 t _mesa_validate_MultiDrawArraysIndirectCount
000000000025f190 0000000000000154 t _mesa_validate_MultiDrawElementsIndirectCount
000000000025f2f0 000000000000014c t output_if_debug
000000000025f440 0000000000000094 t flush_delayed_errors
000000000025f4e0 000000000000000c t _mesa_get_log_file
000000000025f4f0 00000000000000d0 t _mesa_warning
000000000025f5c0 0000000000000108 t _mesa_problem
000000000025f6d0 00000000000000b0 t _mesa_gl_vdebugf
000000000025f780 0000000000000064 t _mesa_gl_debugf
000000000025f7f0 00000000000002f4 t _mesa_error
000000000025faf0 0000000000000030 t _mesa_error_no_memory
000000000025fb20 0000000000000004 t _mesa_debug
000000000025fb30 00000000000000c4 t _mesa_log
000000000025fc00 0000000000000068 t _mesa_shader_debug
000000000025fc70 00000000000000c4 t get_1d_map
000000000025fd40 00000000000000c0 t get_2d_map
000000000025fe00 0000000000000024 t _mesa_evaluator_components
000000000025fe30 00000000000000d8 t _mesa_copy_map_points1f
000000000025ff10 00000000000000d4 t _mesa_copy_map_points1d
000000000025fff0 00000000000001ec t map1
00000000002601e0 0000000000000190 t _mesa_copy_map_points2f
0000000000260370 0000000000000158 t _mesa_copy_map_points2d
00000000002604d0 0000000000000260 t map2
0000000000260730 0000000000000008 T _mesa_Map1f
0000000000260740 0000000000000010 T _mesa_Map1d
0000000000260750 0000000000000008 T _mesa_Map2f
0000000000260760 0000000000000018 T _mesa_Map2d
0000000000260780 00000000000001b8 t _mesa_GetnMapdvARB
0000000000260940 000000000000000c T _mesa_GetMapdv
0000000000260950 00000000000001b4 t _mesa_GetnMapfvARB
0000000000260b10 000000000000000c T _mesa_GetMapfv
0000000000260b20 00000000000001b0 t _mesa_GetnMapivARB
0000000000260cd0 000000000000000c T _mesa_GetMapiv
0000000000260ce0 000000000000009c t _mesa_MapGrid1f
0000000000260d80 000000000000000c T _mesa_MapGrid1d
0000000000260d90 00000000000000f8 t _mesa_MapGrid2f
0000000000260e90 0000000000000014 T _mesa_MapGrid2d
0000000000260eb0 000000000000002c t _mesa_install_eval_vtxfmt
0000000000260ee0 0000000000000410 t _mesa_init_eval
00000000002612f0 00000000000000a8 t _mesa_free_eval_data
00000000002613a0 0000000000000040 t free_unknown_extensions_strings
00000000002613e0 0000000000000008 t extension_name_compare
00000000002613f0 0000000000000048 t extension_compare
0000000000261440 000000000000006c t _mesa_override_extensions
00000000002614b0 0000000000000294 t _mesa_one_time_init_extension_overrides
0000000000261750 0000000000000034 t _mesa_init_extensions
0000000000261790 000000000000022c t _mesa_make_extension_string
00000000002619c0 0000000000000098 t _mesa_get_extension_count
0000000000261a60 00000000000000b8 t _mesa_get_enabled_extension
0000000000261b20 0000000000000004 t delete_dummy_renderbuffer
0000000000261b30 0000000000000004 t delete_dummy_framebuffer
0000000000261b40 00000000000000b8 t get_framebuffer_target
0000000000261c00 00000000000000ec t get_attachment
0000000000261cf0 0000000000000078 t driver_RenderTexture_is_safe
0000000000261d70 000000000000009c t validate_framebuffer_parameter_extensions
0000000000261e10 0000000000000268 t framebuffer_parameteri
0000000000262080 0000000000000130 t check_layer
00000000002621b0 00000000000000b4 t remove_attachment
0000000000262270 000000000000018c t create_framebuffers
0000000000262400 00000000000000fc t check_texture_target
0000000000262500 0000000000000208 t sample_locations
0000000000262710 0000000000000044 t invalidate_rb
0000000000262760 0000000000000070 t check_end_texture_render
00000000002627d0 0000000000000198 t discard_framebuffer.part.0
0000000000262970 0000000000000140 t create_render_buffers
0000000000262ab0 00000000000002f0 t get_framebuffer_parameteriv
0000000000262da0 00000000000001b4 t invalidate_framebuffer_storage.constprop.0
0000000000262f60 0000000000000118 t check_layered_texture_target.constprop.0
0000000000263080 0000000000000194 t get_render_buffer_parameteriv
0000000000263220 00000000000000cc t lookup_named_framebuffer_ext_dsa
00000000002632f0 00000000000007bc t get_framebuffer_attachment_parameter
0000000000263ab0 00000000000001f4 t framebuffer_renderbuffer_error
0000000000263cb0 0000000000000158 t bind_renderbuffer
0000000000263e10 0000000000000078 t _mesa_init_fbobjects
0000000000263e90 000000000000000c t _mesa_get_incomplete_framebuffer
0000000000263ea0 0000000000000018 t _mesa_lookup_renderbuffer
0000000000263ec0 0000000000000018 t _mesa_lookup_framebuffer
0000000000263ee0 000000000000012c t _mesa_lookup_framebuffer_dsa
0000000000264010 0000000000000080 t _mesa_lookup_framebuffer_err
0000000000264090 0000000000000124 t _mesa_update_texture_renderbuffer
00000000002641c0 0000000000000110 T _mesa_FramebufferRenderbuffer_sw
00000000002642d0 0000000000000064 t _mesa_has_depthstencil_combined
0000000000264340 00000000000000a8 t _mesa_is_legal_color_format
00000000002643f0 000000000000022c t test_attachment_completeness
0000000000264620 0000000000000c54 t _mesa_test_framebuffer_completeness
0000000000265280 0000000000000080 T _mesa_IsRenderbuffer
0000000000265300 0000000000000004 T _mesa_BindRenderbuffer
0000000000265310 0000000000000004 T _mesa_BindRenderbufferEXT
0000000000265320 00000000000000c4 t _mesa_FramebufferParameteri
00000000002653f0 0000000000000004 T _mesa_FramebufferParameteriMESA
0000000000265400 00000000000000c4 t _mesa_GetFramebufferParameteriv
00000000002654d0 0000000000000004 T _mesa_GetFramebufferParameterivMESA
00000000002654e0 0000000000000090 t _mesa_detach_renderbuffer
0000000000265570 0000000000000234 T _mesa_DeleteRenderbuffers
00000000002657b0 0000000000000030 T _mesa_GenRenderbuffers_no_error
00000000002657e0 0000000000000050 T _mesa_GenRenderbuffers
0000000000265830 0000000000000030 T _mesa_CreateRenderbuffers_no_error
0000000000265860 0000000000000050 T _mesa_CreateRenderbuffers
00000000002658b0 0000000000000ff8 t _mesa_base_fbo_format
00000000002668b0 0000000000000148 t _mesa_renderbuffer_storage
0000000000266a00 00000000000001a0 t renderbuffer_storage
0000000000266ba0 00000000000000e4 T _mesa_EGLImageTargetRenderbufferStorageOES
0000000000266c90 0000000000000094 T _mesa_RenderbufferStorage
0000000000266d30 0000000000000084 T _mesa_RenderbufferStorageMultisample
0000000000266dc0 0000000000000094 T _mesa_RenderbufferStorageMultisampleAdvancedAMD
0000000000266e60 00000000000000c4 T _mesa_NamedRenderbufferStorage
0000000000266f30 0000000000000110 T _mesa_NamedRenderbufferStorageEXT
0000000000267040 00000000000000c8 T _mesa_NamedRenderbufferStorageMultisample
0000000000267110 0000000000000118 T _mesa_NamedRenderbufferStorageMultisampleEXT
0000000000267230 00000000000000d8 T _mesa_NamedRenderbufferStorageMultisampleAdvancedAMD
0000000000267310 0000000000000078 T _mesa_GetRenderbufferParameteriv
0000000000267390 00000000000000a0 T _mesa_GetNamedRenderbufferParameteriv
0000000000267430 0000000000000100 T _mesa_GetNamedRenderbufferParameterivEXT
0000000000267530 0000000000000084 T _mesa_IsFramebuffer
00000000002675c0 00000000000001e0 t _mesa_bind_framebuffers
00000000002677a0 0000000000000170 t bind_framebuffer
0000000000267910 0000000000000004 t _mesa_BindFramebuffer
0000000000267920 0000000000000004 T _mesa_BindFramebufferEXT
0000000000267930 0000000000000170 T _mesa_DeleteFramebuffers
0000000000267aa0 0000000000000008 T _mesa_GenFramebuffers
0000000000267ab0 0000000000000008 T _mesa_CreateFramebuffers
0000000000267ac0 0000000000000160 T _mesa_CheckFramebufferStatus_no_error
0000000000267c20 000000000000016c T _mesa_CheckFramebufferStatus
0000000000267d90 0000000000000170 t _mesa_CheckNamedFramebufferStatus
0000000000267f00 0000000000000150 T _mesa_CheckNamedFramebufferStatusEXT
0000000000268050 000000000000015c t _mesa_get_and_validate_attachment
00000000002681b0 00000000000002f4 t _mesa_framebuffer_texture
00000000002684b0 00000000000000bc t framebuffer_texture_with_dims_no_error
0000000000268570 000000000000042c t framebuffer_texture_with_dims
00000000002689a0 0000000000000008 T _mesa_FramebufferTexture1D_no_error
00000000002689b0 0000000000000054 T _mesa_FramebufferTexture1D
0000000000268a10 0000000000000008 T _mesa_FramebufferTexture2D_no_error
0000000000268a20 0000000000000054 T _mesa_FramebufferTexture2D
0000000000268a80 0000000000000058 T _mesa_FramebufferTexture2DMultisampleEXT
0000000000268ae0 0000000000000004 T _mesa_FramebufferTexture3D_no_error
0000000000268af0 0000000000000054 T _mesa_FramebufferTexture3D
0000000000268b50 0000000000000100 T _mesa_FramebufferTextureLayer_no_error
0000000000268c50 0000000000000264 T _mesa_FramebufferTextureLayer
0000000000268ec0 000000000000010c T _mesa_NamedFramebufferTextureLayer_no_error
0000000000268fd0 0000000000000280 T _mesa_NamedFramebufferTextureLayer
0000000000269250 0000000000000110 T _mesa_FramebufferTexture_no_error
0000000000269360 0000000000000290 T _mesa_FramebufferTexture
00000000002695f0 000000000000011c T _mesa_NamedFramebufferTexture_no_error
0000000000269710 000000000000028c T _mesa_NamedFramebufferTexture
00000000002699a0 0000000000000058 T _mesa_NamedFramebufferTexture1DEXT
0000000000269a00 0000000000000058 T _mesa_NamedFramebufferTexture2DEXT
0000000000269a60 0000000000000058 T _mesa_NamedFramebufferTexture3DEXT
0000000000269ac0 00000000000000bc T _mesa_FramebufferRenderbuffer_no_error
0000000000269b80 0000000000000104 T _mesa_FramebufferRenderbuffer
0000000000269c90 00000000000000c8 T _mesa_NamedFramebufferRenderbuffer_no_error
0000000000269d60 00000000000000bc T _mesa_NamedFramebufferRenderbuffer
0000000000269e20 0000000000000084 T _mesa_NamedFramebufferRenderbufferEXT
0000000000269eb0 0000000000000104 T _mesa_GetFramebufferAttachmentParameteriv
0000000000269fc0 00000000000000c4 T _mesa_GetNamedFramebufferAttachmentParameteriv
000000000026a090 000000000000009c T _mesa_GetNamedFramebufferAttachmentParameterivEXT
000000000026a130 00000000000000f8 T _mesa_NamedFramebufferParameteri
000000000026a230 000000000000007c T _mesa_NamedFramebufferParameteriEXT
000000000026a2b0 00000000000000e0 T _mesa_GetFramebufferParameterivEXT
000000000026a390 00000000000000ec T _mesa_GetNamedFramebufferParameteriv
000000000026a480 000000000000007c T _mesa_GetNamedFramebufferParameterivEXT
000000000026a500 0000000000000004 T _mesa_InvalidateSubFramebuffer_no_error
000000000026a510 000000000000008c T _mesa_InvalidateSubFramebuffer
000000000026a5a0 00000000000000cc T _mesa_InvalidateNamedFramebufferSubData
000000000026a670 00000000000000d4 T _mesa_InvalidateFramebuffer_no_error
000000000026a750 00000000000000d8 T _mesa_InvalidateFramebuffer
000000000026a830 00000000000000bc T _mesa_InvalidateNamedFramebufferData
000000000026a8f0 000000000000013c T _mesa_DiscardFramebufferEXT
000000000026aa30 0000000000000108 T _mesa_FramebufferSampleLocationsfvARB
000000000026ab40 00000000000000c8 T _mesa_NamedFramebufferSampleLocationsfvARB
000000000026ac10 0000000000000120 T _mesa_FramebufferSampleLocationsfvARB_no_error
000000000026ad30 0000000000000078 T _mesa_NamedFramebufferSampleLocationsfvARB_no_error
000000000026adb0 0000000000000058 T _mesa_EvaluateDepthValuesARB
000000000026ae10 0000000000000100 t write_hit_record
000000000026af10 00000000000001a4 T _mesa_FeedbackBuffer
000000000026b0c0 00000000000000b0 T _mesa_PassThrough
000000000026b170 0000000000000194 t _mesa_feedback_vertex
000000000026b310 00000000000000e4 T _mesa_SelectBuffer
000000000026b400 000000000000003c t _mesa_update_hitflag
000000000026b440 000000000000009c T _mesa_InitNames
000000000026b4e0 00000000000000ec T _mesa_LoadName
000000000026b5d0 00000000000000f4 T _mesa_PushName
000000000026b6d0 00000000000000d4 T _mesa_PopName
000000000026b7b0 00000000000001f4 T _mesa_RenderMode
000000000026b9b0 0000000000000034 t _mesa_init_feedback
000000000026b9f0 00000000000004e0 t _mesa_Fogfv
000000000026bed0 0000000000000024 t _mesa_Fogf
000000000026bf00 000000000000002c t _mesa_Fogi
000000000026bf30 00000000000000f8 T _mesa_Fogiv
000000000026c030 0000000000000040 t _mesa_init_fog
000000000026c070 000000000000000c t array_formats_equal
000000000026c080 0000000000000010 t format_array_format_table_destroy
000000000026c090 00000000000000bc t format_array_format_table_init
000000000026c150 0000000000000038 t _mesa_get_format_name
000000000026c190 0000000000000050 t _mesa_get_format_bytes
000000000026c1e0 0000000000000250 t _mesa_get_format_bits
000000000026c430 0000000000000094 t _mesa_get_format_max_bits
000000000026c4d0 000000000000003c t _mesa_get_format_layout
000000000026c510 000000000000003c t _mesa_get_format_datatype
000000000026c550 0000000000000140 t _mesa_get_format_base_format
000000000026c690 0000000000000048 t _mesa_get_format_block_size
000000000026c6e0 0000000000000050 t _mesa_get_format_block_size_3d
000000000026c730 000000000000003c t _mesa_format_to_array_format
000000000026c770 0000000000000068 t _mesa_format_from_array_format
000000000026c7e0 0000000000000058 t _mesa_is_format_compressed
000000000026c840 0000000000000048 t _mesa_is_format_packed_depth_stencil
000000000026c890 0000000000000080 t _mesa_is_format_integer_color
000000000026c910 0000000000000054 t _mesa_is_format_unsigned
000000000026c970 0000000000000070 t _mesa_is_format_signed
000000000026c9e0 000000000000004c t _mesa_is_format_integer
000000000026ca30 000000000000003c t _mesa_is_format_srgb
000000000026ca70 0000000000000010 t _mesa_is_format_etc2
000000000026ca80 0000000000000010 t _mesa_is_format_astc_2d
000000000026ca90 00000000000000d4 t _mesa_get_uncompressed_format
000000000026cb70 0000000000000098 t _mesa_format_num_components
000000000026cc10 00000000000000b8 t _mesa_format_has_color_component
000000000026ccd0 0000000000000098 t _mesa_format_image_size
000000000026cd70 00000000000000b4 t _mesa_format_image_size64
000000000026ce30 000000000000006c t _mesa_format_row_stride
000000000026cea0 00000000000004b4 t _mesa_uncompressed_format_to_type_and_comps
000000000026d360 0000000000000148 t _mesa_format_matches_format_and_type
000000000026d4b0 0000000000000140 t renderbuffer_exists.part.0
000000000026d5f0 00000000000001c0 t update_framebuffer
000000000026d7b0 0000000000000070 T _mesa_new_framebuffer
000000000026d820 0000000000000170 t _mesa_initialize_window_framebuffer
000000000026d990 0000000000000074 t _mesa_free_framebuffer_data
000000000026da10 0000000000000034 T _mesa_destroy_framebuffer
000000000026da50 0000000000000084 t _mesa_reference_framebuffer_
000000000026dae0 00000000000000b0 t _mesa_intersect_scissor_bounding_box
000000000026db90 0000000000000128 t _mesa_resize_framebuffer
000000000026dcc0 0000000000000078 t _mesa_update_draw_buffer_bounds
000000000026dd40 0000000000000260 t _mesa_update_framebuffer_visual
000000000026dfa0 000000000000005c t _mesa_update_framebuffer
000000000026e000 0000000000000078 t _mesa_source_buffer_exists
000000000026e080 0000000000000078 t _mesa_dest_buffer_exists
000000000026e100 000000000000019c t _mesa_get_color_read_format
000000000026e2a0 0000000000000098 t _mesa_get_color_read_type
000000000026e340 0000000000000084 t _mesa_get_read_renderbuffer_for_format
000000000026e3d0 0000000000000044 t _mesa_is_multisample_enabled
000000000026e420 0000000000000024 t _mesa_is_alpha_test_enabled
000000000026e450 00000000000003c8 t _mesa_GetString
000000000026e820 00000000000001b8 T _mesa_GetStringi
000000000026e9e0 00000000000001e8 t _get_vao_pointerv
000000000026ebd0 0000000000000060 T _mesa_GetPointerv
000000000026ec30 0000000000000064 T _mesa_GetPointerIndexedvEXT
000000000026eca0 0000000000000078 T _mesa_GetError
000000000026ed20 00000000000001cc t get_map_idx
000000000026eef0 000000000000007c t _mesa_compute_component_mapping
000000000026ef70 000000000000009c t _mesa_type_is_packed
000000000026f010 00000000000000b8 t _mesa_sizeof_type
000000000026f0d0 0000000000000170 t _mesa_sizeof_packed_type
000000000026f240 0000000000000180 t _mesa_components_in_format
000000000026f3c0 0000000000000300 t _mesa_bytes_per_pixel
000000000026f6c0 00000000000000e0 t _mesa_bytes_per_vertex_attrib
000000000026f7a0 00000000000000ec t _mesa_is_enum_format_unsized
000000000026f890 00000000000000fc t _mesa_is_enum_format_unorm
000000000026f990 0000000000000030 t _mesa_is_enum_format_snorm
000000000026f9c0 000000000000005c t _mesa_is_enum_format_unsigned_int
000000000026fa20 000000000000004c t _mesa_is_enum_format_signed_int
000000000026fa70 0000000000000064 t _mesa_is_astc_format
000000000026fae0 0000000000000014 t _mesa_is_etc2_format
000000000026fb00 00000000000000a8 t _mesa_is_enum_format_integer
000000000026fbb0 0000000000000070 t _mesa_is_type_unsigned
000000000026fc20 000000000000027c t _mesa_is_color_format
000000000026fea0 0000000000000040 t _mesa_is_depth_format
000000000026fee0 0000000000000010 t _mesa_is_stencil_format
000000000026fef0 0000000000000010 t _mesa_is_ycbcr_format
000000000026ff00 0000000000000030 t _mesa_is_depthstencil_format
000000000026ff30 000000000000008c t _mesa_is_depth_or_stencil_format
000000000026ffc0 000000000000042c t _mesa_is_compressed_format
00000000002703f0 0000000000000084 t _mesa_is_srgb_format
0000000000270480 00000000000000cc t _mesa_unpack_format_to_base_format
0000000000270550 00000000000000cc t _mesa_base_format_to_integer_format
0000000000270620 0000000000000298 t _mesa_base_format_has_channel
00000000002708c0 00000000000000e4 t _mesa_generic_compressed_format_to_uncompressed_format
00000000002709b0 00000000000001cc t _mesa_get_nongeneric_internalformat
0000000000270b80 0000000000000020 t _mesa_get_linear_internalformat
0000000000270ba0 00000000000008ec t _mesa_error_check_format_and_type
0000000000271490 0000000000000214 t _mesa_es_error_check_format_and_type
00000000002716b0 0000000000000b88 t _mesa_base_tex_format
0000000000272240 0000000000001318 t _mesa_gles_error_check_format_and_type
0000000000273560 000000000000008c t _mesa_swap_bytes_in_type_enum
00000000002735f0 0000000000001158 t _mesa_format_from_format_and_type
0000000000274750 000000000000021c t _mesa_is_es3_color_renderable
0000000000274970 00000000000001ac t _mesa_is_es3_texture_filterable
0000000000274b20 000000000000000c t uint_key_compare
0000000000274b30 0000000000000004 t uint_key_hash
0000000000274b40 0000000000000088 t hash_walk_unlocked
0000000000274bd0 0000000000000090 t _mesa_NewHashTable
0000000000274c60 0000000000000058 t _mesa_DeleteHashTable
0000000000274cc0 0000000000000084 t _mesa_HashLookup
0000000000274d50 0000000000000034 t _mesa_HashLookupLocked
0000000000274d90 0000000000000094 t _mesa_HashInsertLocked
0000000000274e30 00000000000000ac t _mesa_HashInsert
0000000000274ee0 0000000000000048 t _mesa_HashRemoveLocked
0000000000274f30 0000000000000074 t _mesa_HashRemove
0000000000274fb0 00000000000000ac t _mesa_HashDeleteAll
0000000000275060 000000000000004c t _mesa_HashWalk
00000000002750b0 0000000000000004 t _mesa_HashWalkLocked
00000000002750c0 00000000000000d4 t _mesa_HashFindFreeKeyBlock
00000000002751a0 0000000000000380 t _mesa_Hint
0000000000275520 0000000000000040 T _mesa_MaxShaderCompilerThreadsKHR
0000000000275560 0000000000000028 t _mesa_init_hint
0000000000275590 0000000000000028 t _mesa_swap2
00000000002755c0 0000000000000024 t _mesa_swap4
00000000002755f0 0000000000000130 t _mesa_image_offset
0000000000275720 0000000000000050 t _mesa_image_address
0000000000275770 0000000000000044 t _mesa_image_address2d
00000000002757c0 00000000000000b4 t _mesa_image_row_stride
0000000000275880 00000000000000cc t _mesa_image_image_stride
0000000000275950 00000000000001cc t _mesa_expand_bitmap
0000000000275b20 000000000000016c t _mesa_clip_drawpixels
0000000000275c90 00000000000000e8 t _mesa_clip_readpixels
0000000000275d80 00000000000000d4 t _mesa_clip_copytexsubimage
0000000000275e60 00000000000006c4 t _mesa_clip_blit
0000000000276530 0000000000000130 t _mesa_swap_bytes_2d_image
0000000000276660 00000000000000b0 t update_modelview_scale
0000000000276710 00000000000003fc t _mesa_update_material.part.0
0000000000276b10 0000000000000594 t compute_light_positions.part.0
00000000002770b0 00000000000000e4 t _mesa_ShadeModel
00000000002771a0 00000000000000a8 t _mesa_ProvokingVertex
0000000000277250 000000000000073c t _mesa_light
0000000000277990 00000000000002cc t _mesa_Lightfv
0000000000277c60 0000000000000024 t _mesa_Lightf
0000000000277c90 0000000000000148 t _mesa_Lightiv
0000000000277de0 0000000000000024 T _mesa_Lighti
0000000000277e10 000000000000029c t _mesa_GetLightfv
00000000002780b0 00000000000002f0 T _mesa_GetLightiv
00000000002783a0 00000000000002a0 t _mesa_LightModelfv
0000000000278640 00000000000000ec t _mesa_LightModeliv
0000000000278730 0000000000000024 T _mesa_LightModeli
0000000000278760 0000000000000024 t _mesa_LightModelf
0000000000278790 00000000000000f8 t _mesa_material_bitmask
0000000000278890 0000000000000060 t _mesa_update_color_material
00000000002788f0 000000000000015c t _mesa_ColorMaterial
0000000000278a50 00000000000001ec t _mesa_GetMaterialfv
0000000000278c40 0000000000000234 T _mesa_GetMaterialiv
0000000000278e80 00000000000000e8 t _mesa_update_lighting
0000000000278f70 0000000000000130 t _mesa_update_tnl_spaces
00000000002790a0 00000000000001f4 t _mesa_init_lighting
00000000002792a0 00000000000000a0 T _mesa_LineWidth_no_error
0000000000279340 00000000000000e8 t _mesa_LineWidth
0000000000279430 00000000000000e8 t _mesa_LineStipple
0000000000279520 000000000000001c t _mesa_init_line
0000000000279540 0000000000000110 t get_named_matrix_stack
0000000000279650 000000000000018c t push_matrix
00000000002797e0 000000000000010c t matrix_load.constprop.0
00000000002798f0 00000000000000d8 t _mesa_Frustum
00000000002799d0 00000000000001e0 T _mesa_MatrixFrustumEXT
0000000000279bb0 00000000000000c8 t _mesa_Ortho
0000000000279c80 00000000000001d0 T _mesa_MatrixOrthoEXT
0000000000279e50 000000000000017c t _mesa_MatrixMode
0000000000279fd0 0000000000000038 T _mesa_PushMatrix
000000000027a010 00000000000001a8 T _mesa_MatrixPushEXT
000000000027a1c0 00000000000000e4 T _mesa_PopMatrix
000000000027a2b0 00000000000001e4 T _mesa_MatrixPopEXT
000000000027a4a0 0000000000000064 T _mesa_LoadIdentity
000000000027a510 0000000000000184 T _mesa_MatrixLoadIdentityEXT
000000000027a6a0 0000000000000108 t _mesa_LoadMatrixf
000000000027a7b0 0000000000000130 T _mesa_MatrixLoadfEXT
000000000027a8e0 000000000000007c t _mesa_MultMatrixf
000000000027a960 0000000000000188 t _mesa_MatrixMultfEXT
000000000027aaf0 000000000000008c t _mesa_Rotatef
000000000027ab80 00000000000001b0 T _mesa_MatrixRotatefEXT
000000000027ad30 0000000000000078 t _mesa_Scalef
000000000027adb0 0000000000000184 t _mesa_MatrixScalefEXT
000000000027af40 0000000000000078 t _mesa_Translatef
000000000027afc0 0000000000000184 t _mesa_MatrixTranslatefEXT
000000000027b150 000000000000005c T _mesa_LoadMatrixd
000000000027b1b0 000000000000007c T _mesa_MatrixLoaddEXT
000000000027b230 0000000000000044 T _mesa_MultMatrixd
000000000027b280 0000000000000044 T _mesa_MatrixMultdEXT
000000000027b2d0 00000000000000b4 T _mesa_Rotated
000000000027b390 00000000000001c0 T _mesa_MatrixRotatedEXT
000000000027b550 0000000000000084 T _mesa_Scaled
000000000027b5e0 0000000000000010 T _mesa_MatrixScaledEXT
000000000027b5f0 0000000000000084 T _mesa_Translated
000000000027b680 0000000000000010 T _mesa_MatrixTranslatedEXT
000000000027b690 0000000000000050 T _mesa_LoadTransposeMatrixf
000000000027b6e0 000000000000005c T _mesa_MatrixLoadTransposefEXT
000000000027b740 0000000000000050 T _mesa_LoadTransposeMatrixd
000000000027b790 000000000000005c T _mesa_MatrixLoadTransposedEXT
000000000027b7f0 0000000000000038 T _mesa_MultTransposeMatrixf
000000000027b830 000000000000003c T _mesa_MatrixMultTransposefEXT
000000000027b870 0000000000000038 T _mesa_MultTransposeMatrixd
000000000027b8b0 000000000000003c T _mesa_MatrixMultTransposedEXT
000000000027b8f0 00000000000000cc t _mesa_update_modelview_project
000000000027b9c0 0000000000000164 t _mesa_init_matrix
000000000027bb30 000000000000016c t _mesa_free_matrix_data
000000000027bca0 000000000000005c t _mesa_init_transform
000000000027bd00 00000000000000dc t _mesa_SampleCoverage
000000000027bde0 000000000000003c t _mesa_init_multisample
000000000027be20 0000000000000138 T _mesa_GetMultisamplefv
000000000027bf60 0000000000000088 T _mesa_SampleMaski_no_error
000000000027bff0 00000000000000d4 T _mesa_SampleMaski
000000000027c0d0 00000000000000a4 T _mesa_MinSampleShading_no_error
000000000027c180 000000000000011c T _mesa_MinSampleShading
000000000027c2a0 00000000000001ec t _mesa_check_sample_count
000000000027c490 00000000000000ac t _mesa_AlphaToCoverageDitherControlNV
000000000027c540 0000000000000074 t flip_bytes
000000000027c5c0 000000000000048c t extract_uint_indexes
000000000027ca50 0000000000000350 t _mesa_unpack_image.part.0
000000000027cda0 00000000000000e0 t convert_integer_luminance64
000000000027ce80 0000000000000074 t _mesa_unpack_polygon_stipple
000000000027cf00 00000000000001fc t _mesa_pack_bitmap
000000000027d100 0000000000000060 t _mesa_pack_polygon_stipple
000000000027d160 00000000000002d8 t _mesa_unpack_stencil_span
000000000027d440 00000000000003a8 t _mesa_pack_stencil_span
000000000027d7f0 00000000000008ac t _mesa_unpack_depth_span
000000000027e0a0 0000000000000388 t _mesa_pack_depth_span
000000000027e430 00000000000001e0 t _mesa_pack_depth_stencil_span
000000000027e610 0000000000000020 t _mesa_unpack_image
000000000027e630 0000000000000140 t _mesa_pack_luminance_from_rgba_float
000000000027e770 0000000000000280 t _mesa_pack_luminance_from_rgba_integer
000000000027e9f0 00000000000001a4 t _mesa_unpack_color_index_to_rgba_float
000000000027eba0 00000000000000e0 t _mesa_unpack_color_index_to_rgba_ubyte
000000000027ec80 0000000000000198 t _mesa_validate_pbo_access
000000000027ee20 000000000000005c t _mesa_map_pbo_source
000000000027ee80 0000000000000110 t _mesa_validate_pbo_source
000000000027ef90 0000000000000088 t _mesa_validate_pbo_source_compressed
000000000027f020 000000000000009c t _mesa_map_validate_pbo_source
000000000027f0c0 0000000000000020 t _mesa_unmap_pbo_source
000000000027f0e0 000000000000005c t _mesa_map_pbo_dest
000000000027f140 000000000000015c t _mesa_map_validate_pbo_dest
000000000027f2a0 0000000000000020 t _mesa_unmap_pbo_dest
000000000027f2c0 00000000000000f4 t _mesa_validate_pbo_teximage
000000000027f3c0 00000000000000c0 t _mesa_validate_pbo_compressed_teximage
000000000027f480 0000000000000020 t _mesa_unmap_teximage_pbo
000000000027f4a0 0000000000000044 t free_performance_monitor
000000000027f4f0 0000000000000034 t _mesa_init_performance_monitors
000000000027f530 0000000000000034 t _mesa_free_performance_monitors
000000000027f570 00000000000000a4 T _mesa_GetPerfMonitorGroupsAMD
000000000027f620 00000000000000fc T _mesa_GetPerfMonitorCountersAMD
000000000027f720 00000000000000fc T _mesa_GetPerfMonitorGroupStringAMD
000000000027f820 000000000000013c T _mesa_GetPerfMonitorCounterStringAMD
000000000027f960 0000000000000194 T _mesa_GetPerfMonitorCounterInfoAMD
000000000027fb00 0000000000000218 T _mesa_GenPerfMonitorsAMD
000000000027fd20 0000000000000114 T _mesa_DeletePerfMonitorsAMD
000000000027fe40 000000000000021c T _mesa_SelectPerfMonitorCountersAMD
0000000000280060 00000000000000c0 T _mesa_BeginPerfMonitorAMD
0000000000280120 000000000000009c T _mesa_EndPerfMonitorAMD
00000000002801c0 0000000000000294 T _mesa_GetPerfMonitorCounterDataAMD
0000000000280460 0000000000000020 t free_performance_query
0000000000280480 0000000000000028 t _mesa_init_performance_queries
00000000002804b0 0000000000000034 t _mesa_free_performance_queries
00000000002804f0 000000000000008c T _mesa_GetFirstPerfQueryIdINTEL
0000000000280580 000000000000009c T _mesa_GetNextPerfQueryIdINTEL
0000000000280620 0000000000000114 T _mesa_GetPerfQueryIdByNameINTEL
0000000000280740 000000000000012c T _mesa_GetPerfQueryInfoINTEL
0000000000280870 0000000000000208 T _mesa_GetPerfCounterInfoINTEL
0000000000280a80 000000000000011c T _mesa_CreatePerfQueryINTEL
0000000000280ba0 000000000000011c T _mesa_BeginPerfQueryINTEL
0000000000280cc0 00000000000000a0 t _mesa_EndPerfQueryINTEL
0000000000280d60 00000000000000d8 T _mesa_DeletePerfQueryINTEL
0000000000280e40 00000000000001c4 T _mesa_GetPerfQueryDataINTEL
0000000000281010 0000000000000120 t create_program_pipelines
0000000000281130 0000000000000170 t use_program_stages
00000000002812a0 0000000000000090 t _mesa_delete_pipeline_object
0000000000281330 0000000000000008 t delete_pipelineobj_cb
0000000000281340 00000000000000ac t _mesa_init_pipeline
00000000002813f0 0000000000000068 t _mesa_free_pipeline_data
0000000000281460 0000000000000018 t _mesa_lookup_pipeline_object
0000000000281480 000000000000005c t _mesa_reference_pipeline_object_
00000000002814e0 0000000000000088 T _mesa_UseProgramStages_no_error
0000000000281570 0000000000000268 T _mesa_UseProgramStages
00000000002817e0 0000000000000098 T _mesa_ActiveShaderProgram_no_error
0000000000281880 0000000000000118 T _mesa_ActiveShaderProgram
00000000002819a0 0000000000000190 t _mesa_bind_pipeline
0000000000281b30 0000000000000070 t _mesa_BindProgramPipeline_no_error
0000000000281ba0 00000000000000cc t _mesa_BindProgramPipeline
0000000000281c70 00000000000000fc T _mesa_DeleteProgramPipelines
0000000000281d70 0000000000000030 T _mesa_GenProgramPipelines_no_error
0000000000281da0 0000000000000050 T _mesa_GenProgramPipelines
0000000000281df0 0000000000000030 T _mesa_CreateProgramPipelines_no_error
0000000000281e20 0000000000000050 T _mesa_CreateProgramPipelines
0000000000281e70 0000000000000048 T _mesa_IsProgramPipeline
0000000000281ec0 00000000000002cc T _mesa_GetProgramPipelineiv
0000000000282190 0000000000000284 t _mesa_validate_program_pipeline
0000000000282420 0000000000000064 T _mesa_ValidateProgramPipeline
0000000000282490 00000000000000ac T _mesa_GetProgramPipelineInfoLog
0000000000282540 00000000000000d0 t get_pixelmap
0000000000282610 0000000000000104 t store_pixelmap
0000000000282720 0000000000000120 t validate_pbo_access.constprop.0
0000000000282840 0000000000000084 T _mesa_PixelZoom
00000000002828d0 0000000000000150 T _mesa_PixelMapfv
0000000000282a20 00000000000001f4 T _mesa_PixelMapuiv
0000000000282c20 00000000000001f4 T _mesa_PixelMapusv
0000000000282e20 0000000000000160 t _mesa_GetnPixelMapfvARB
0000000000282f80 000000000000000c T _mesa_GetPixelMapfv
0000000000282f90 0000000000000160 t _mesa_GetnPixelMapuivARB
00000000002830f0 000000000000000c T _mesa_GetPixelMapuiv
0000000000283100 0000000000000210 t _mesa_GetnPixelMapusvARB
0000000000283310 000000000000000c T _mesa_GetPixelMapusv
0000000000283320 00000000000004ec t _mesa_PixelTransferf
0000000000283810 0000000000000008 T _mesa_PixelTransferi
0000000000283820 00000000000000a0 t _mesa_update_pixel
00000000002838c0 00000000000000b0 t _mesa_init_pixel
0000000000283970 000000000000053c t _mesa_PixelStorei
0000000000283eb0 0000000000000008 T _mesa_PixelStoref
0000000000283ec0 0000000000000234 t _mesa_PixelStorei_no_error
0000000000284100 0000000000000008 T _mesa_PixelStoref_no_error
0000000000284110 00000000000000e8 t _mesa_init_pixelstore
0000000000284200 00000000000000fc t _mesa_compressed_pixel_storage_error_check
0000000000284300 0000000000000150 t _mesa_scale_and_bias_rgba
0000000000284450 0000000000000150 t _mesa_map_rgba
00000000002845a0 0000000000000098 t _mesa_map_ci_to_rgba
0000000000284640 0000000000000050 t _mesa_scale_and_bias_depth
0000000000284690 0000000000000070 t _mesa_scale_and_bias_depth_uint
0000000000284700 0000000000000120 t _mesa_apply_rgba_transfer_ops
0000000000284820 00000000000000b0 t _mesa_shift_and_offset_ci
00000000002848d0 0000000000000130 t _mesa_apply_stencil_transfer_ops
0000000000284a00 00000000000000a4 T _mesa_PointSize_no_error
0000000000284ab0 00000000000000c8 t _mesa_PointSize
0000000000284b80 00000000000003b0 t _mesa_PointParameterfv
0000000000284f30 0000000000000028 t _mesa_PointParameteri
0000000000284f60 0000000000000040 T _mesa_PointParameteriv
0000000000284fa0 0000000000000020 t _mesa_PointParameterf
0000000000284fc0 0000000000000064 t _mesa_init_point
0000000000285030 00000000000000b0 T _mesa_CullFace_no_error
00000000002850e0 00000000000000e4 t _mesa_CullFace
00000000002851d0 00000000000000b0 T _mesa_FrontFace_no_error
0000000000285280 00000000000000dc t _mesa_FrontFace
0000000000285360 0000000000000190 T _mesa_PolygonMode_no_error
00000000002854f0 0000000000000210 t _mesa_PolygonMode
0000000000285700 000000000000010c T _mesa_PolygonStipple
0000000000285810 00000000000000a4 t _mesa_GetnPolygonStippleARB
00000000002858c0 000000000000000c T _mesa_GetPolygonStipple
00000000002858d0 00000000000000bc t _mesa_polygon_offset_clamp
0000000000285990 00000000000000c4 t _mesa_PolygonOffset
0000000000285a60 00000000000000f0 T _mesa_PolygonOffsetClampEXT
0000000000285b50 0000000000000060 t _mesa_init_polygon
0000000000285bb0 0000000000000014 t delete_queryobj_cb
0000000000285bd0 0000000000000028 t _mesa_delete_query
0000000000285c00 0000000000000120 t create_queries
0000000000285d20 0000000000000370 t get_query_object
0000000000286090 00000000000005c0 t get_query_binding_point
0000000000286650 0000000000000030 T _mesa_GenQueries
0000000000286680 00000000000000d8 T _mesa_CreateQueries
0000000000286760 0000000000000128 T _mesa_DeleteQueries
0000000000286890 0000000000000074 T _mesa_IsQuery
0000000000286910 0000000000000254 t _mesa_BeginQueryIndexed
0000000000286b70 0000000000000184 t _mesa_EndQueryIndexed
0000000000286d00 000000000000000c T _mesa_BeginQuery
0000000000286d10 0000000000000008 T _mesa_EndQuery
0000000000286d20 000000000000016c T _mesa_QueryCounter
0000000000286e90 0000000000000494 t _mesa_GetQueryIndexediv
0000000000287330 0000000000000010 T _mesa_GetQueryiv
0000000000287340 0000000000000044 T _mesa_GetQueryObjectiv
0000000000287390 0000000000000044 T _mesa_GetQueryObjectuiv
00000000002873e0 0000000000000044 T _mesa_GetQueryObjecti64v
0000000000287430 0000000000000044 T _mesa_GetQueryObjectui64v
0000000000287480 000000000000008c T _mesa_GetQueryBufferObjectiv
0000000000287510 000000000000008c T _mesa_GetQueryBufferObjectuiv
00000000002875a0 000000000000008c T _mesa_GetQueryBufferObjecti64v
0000000000287630 000000000000008c T _mesa_GetQueryBufferObjectui64v
00000000002876c0 000000000000004c t _mesa_init_queryobj
0000000000287710 0000000000000034 t _mesa_free_queryobj_data
0000000000287750 0000000000000338 t window_pos3f
0000000000287a90 00000000000000ac t rasterpos
0000000000287b40 0000000000000014 T _mesa_RasterPos2d
0000000000287b60 000000000000000c T _mesa_RasterPos2f
0000000000287b70 0000000000000014 T _mesa_RasterPos2i
0000000000287b90 000000000000001c T _mesa_RasterPos2s
0000000000287bb0 0000000000000014 T _mesa_RasterPos3d
0000000000287bd0 0000000000000008 T _mesa_RasterPos3f
0000000000287be0 0000000000000014 T _mesa_RasterPos3i
0000000000287c00 0000000000000020 T _mesa_RasterPos3s
0000000000287c20 0000000000000014 T _mesa_RasterPos4d
0000000000287c40 0000000000000004 T _mesa_RasterPos4f
0000000000287c50 0000000000000014 T _mesa_RasterPos4i
0000000000287c70 0000000000000024 T _mesa_RasterPos4s
0000000000287ca0 0000000000000018 T _mesa_RasterPos2dv
0000000000287cc0 0000000000000010 T _mesa_RasterPos2fv
0000000000287cd0 0000000000000018 T _mesa_RasterPos2iv
0000000000287cf0 000000000000001c T _mesa_RasterPos2sv
0000000000287d10 000000000000001c T _mesa_RasterPos3dv
0000000000287d30 0000000000000010 T _mesa_RasterPos3fv
0000000000287d40 000000000000001c T _mesa_RasterPos3iv
0000000000287d60 0000000000000020 T _mesa_RasterPos3sv
0000000000287d80 000000000000001c T _mesa_RasterPos4dv
0000000000287da0 000000000000000c T _mesa_RasterPos4fv
0000000000287db0 000000000000001c T _mesa_RasterPos4iv
0000000000287dd0 0000000000000024 T _mesa_RasterPos4sv
0000000000287e00 0000000000000044 T _mesa_WindowPos2d
0000000000287e50 000000000000003c T _mesa_WindowPos2f
0000000000287e90 0000000000000048 T _mesa_WindowPos2i
0000000000287ee0 000000000000004c T _mesa_WindowPos2s
0000000000287f30 0000000000000044 T _mesa_WindowPos3d
0000000000287f80 0000000000000038 T _mesa_WindowPos3f
0000000000287fc0 0000000000000048 T _mesa_WindowPos3i
0000000000288010 0000000000000050 T _mesa_WindowPos3s
0000000000288060 0000000000000050 T _mesa_WindowPos4dMESA
00000000002880b0 0000000000000040 T _mesa_WindowPos4fMESA
00000000002880f0 0000000000000054 T _mesa_WindowPos4iMESA
0000000000288150 0000000000000054 T _mesa_WindowPos4sMESA
00000000002881b0 000000000000004c T _mesa_WindowPos2dv
0000000000288200 0000000000000044 T _mesa_WindowPos2fv
0000000000288250 000000000000004c T _mesa_WindowPos2iv
00000000002882a0 0000000000000050 T _mesa_WindowPos2sv
00000000002882f0 0000000000000050 T _mesa_WindowPos3dv
0000000000288340 0000000000000044 T _mesa_WindowPos3fv
0000000000288390 0000000000000050 T _mesa_WindowPos3iv
00000000002883e0 0000000000000054 T _mesa_WindowPos3sv
0000000000288440 000000000000005c T _mesa_WindowPos4dvMESA
00000000002884a0 000000000000004c T _mesa_WindowPos4fvMESA
00000000002884f0 000000000000005c T _mesa_WindowPos4ivMESA
0000000000288550 0000000000000060 T _mesa_WindowPos4svMESA
00000000002885b0 0000000000000068 t _mesa_init_rastpos
0000000000288620 0000000000000144 t _mesa_get_readpixels_transfer_ops
0000000000288770 0000000000000170 t _mesa_readpixels_needs_slow_path
00000000002888e0 0000000000000ffc t _mesa_readpixels
00000000002898e0 000000000000010c t _mesa_ReadnPixelsARB_no_error
00000000002899f0 0000000000000750 t _mesa_ReadnPixelsARB
000000000028a140 000000000000000c T _mesa_ReadPixels_no_error
000000000028a150 000000000000000c T _mesa_ReadPixels
000000000028a160 0000000000000158 t _mesa_init_remap_table
000000000028a2c0 0000000000000030 t _mesa_delete_renderbuffer
000000000028a2f0 0000000000000084 t _mesa_init_renderbuffer
000000000028a380 0000000000000094 t _mesa_reference_renderbuffer_
000000000028a420 000000000000006c t _mesa_attach_and_own_rb
000000000028a490 0000000000000040 t _mesa_attach_and_reference_rb
000000000028a4d0 00000000000000d0 t set_scissor_no_notify
000000000028a5a0 0000000000000120 t scissor_array
000000000028a6c0 0000000000000130 T _mesa_Scissor_no_error
000000000028a7f0 0000000000000158 T _mesa_Scissor
000000000028a950 0000000000000104 t _mesa_set_scissor
000000000028aa60 0000000000000034 T _mesa_ScissorArrayv_no_error
000000000028aaa0 00000000000000a8 T _mesa_ScissorArrayv
000000000028ab50 0000000000000114 T _mesa_ScissorIndexed_no_error
000000000028ac70 00000000000000dc T _mesa_ScissorIndexed
000000000028ad50 0000000000000110 T _mesa_ScissorIndexedv_no_error
000000000028ae60 00000000000000d0 T _mesa_ScissorIndexedv
000000000028af30 000000000000017c t _mesa_WindowRectanglesEXT
000000000028b0b0 00000000000000d4 t _mesa_init_scissor
000000000028b190 000000000000008c t attach_shader
000000000028b220 00000000000000bc t get_attached_shaders
000000000028b2e0 00000000000000ec t attach_shader_err
000000000028b3d0 000000000000006c t create_shader_program
000000000028b440 0000000000000164 t detach_shader_error
000000000028b5b0 0000000000000114 t detach_shader_no_error
000000000028b6d0 000000000000016c t get_shaderiv
000000000028b840 0000000000000038 t destroy_shader_include
000000000028b880 000000000000025c t validate_and_tokenise_sh_incl
000000000028bae0 00000000000001e0 t lookup_shader_include
000000000028bcc0 0000000000000078 t copy_string
000000000028bd40 00000000000001fc t _mesa_compile_shader.part.0
000000000028bf40 00000000000000cc t create_shader
000000000028c010 0000000000000950 t get_programiv
000000000028c960 0000000000000144 t _mesa_get_shader_flags
000000000028cab0 0000000000000054 t _mesa_get_shader_capture_path
000000000028cb10 00000000000000b0 t _mesa_init_shader_state
000000000028cbc0 00000000000000d0 t _mesa_free_shader_state
000000000028cc90 0000000000000050 t _mesa_copy_string
000000000028cce0 0000000000000198 t _mesa_validate_shader_target
000000000028ce80 0000000000000054 t _mesa_active_program
000000000028cee0 0000000000000058 T _mesa_AttachObjectARB_no_error
000000000028cf40 0000000000000034 T _mesa_AttachObjectARB
000000000028cf80 0000000000000058 T _mesa_AttachShader_no_error
000000000028cfe0 0000000000000034 T _mesa_AttachShader
000000000028d020 0000000000000078 T _mesa_CompileShader
000000000028d0a0 0000000000000024 T _mesa_CreateShader_no_error
000000000028d0d0 0000000000000080 T _mesa_CreateShader
000000000028d150 0000000000000024 T _mesa_CreateShaderObjectARB_no_error
000000000028d180 0000000000000080 T _mesa_CreateShaderObjectARB
000000000028d200 0000000000000020 T _mesa_CreateProgram
000000000028d220 0000000000000020 T _mesa_CreateProgramObjectARB
000000000028d240 0000000000000104 T _mesa_DeleteObjectARB
000000000028d350 00000000000000bc T _mesa_DeleteProgram
000000000028d410 00000000000000bc T _mesa_DeleteShader
000000000028d4d0 000000000000002c T _mesa_DetachObjectARB_no_error
000000000028d500 000000000000002c T _mesa_DetachObjectARB
000000000028d530 000000000000002c T _mesa_DetachShader_no_error
000000000028d560 000000000000002c T _mesa_DetachShader
000000000028d590 0000000000000040 T _mesa_GetAttachedObjectsARB
000000000028d5d0 0000000000000040 T _mesa_GetAttachedShaders
000000000028d610 00000000000001a0 T _mesa_GetInfoLogARB
000000000028d7b0 00000000000000e8 T _mesa_GetObjectParameterivARB
000000000028d8a0 0000000000000108 T _mesa_GetObjectParameterfvARB
000000000028d9b0 0000000000000034 T _mesa_GetProgramiv
000000000028d9f0 0000000000000034 T _mesa_GetShaderiv
000000000028da30 00000000000000c0 T _mesa_GetProgramInfoLog
000000000028daf0 00000000000000c0 T _mesa_GetShaderInfoLog
000000000028dbb0 00000000000000c0 T _mesa_GetShaderSource
000000000028dc70 0000000000000064 T _mesa_GetHandleARB
000000000028dce0 0000000000000030 T _mesa_IsProgram
000000000028dd10 0000000000000030 T _mesa_IsShader
000000000028dd40 00000000000001cc T _mesa_ShaderSource_no_error
000000000028df10 000000000000022c t _mesa_ShaderSource
000000000028e140 00000000000000d4 T _mesa_ValidateProgram
000000000028e220 0000000000000118 T _mesa_GetShaderPrecisionFormat
000000000028e340 0000000000000048 T _mesa_ReleaseShaderCompiler
000000000028e390 0000000000000174 T _mesa_ShaderBinary
000000000028e510 0000000000000124 T _mesa_GetProgramBinary
000000000028e640 0000000000000108 T _mesa_ProgramBinary
000000000028e750 0000000000000068 T _mesa_ProgramParameteri_no_error
000000000028e7c0 00000000000000f0 T _mesa_ProgramParameteri
000000000028e8b0 000000000000008c t _mesa_copy_linked_program_data
000000000028e940 0000000000000060 T _mesa_PatchParameteri_no_error
000000000028e9a0 00000000000000fc T _mesa_PatchParameteri
000000000028eaa0 0000000000000148 T _mesa_PatchParameterfv
000000000028ebf0 000000000000011c T _mesa_GetSubroutineUniformLocation
000000000028ed10 0000000000000160 T _mesa_GetSubroutineIndex
000000000028ee70 0000000000000288 T _mesa_GetActiveSubroutineUniformiv
000000000028f100 000000000000015c T _mesa_GetActiveSubroutineUniformName
000000000028f260 000000000000015c T _mesa_GetActiveSubroutineName
000000000028f3c0 0000000000000294 T _mesa_UniformSubroutinesuiv
000000000028f660 0000000000000108 T _mesa_GetUniformSubroutineuiv
000000000028f770 00000000000002ac T _mesa_GetProgramStageiv
000000000028fa20 000000000000004c t _mesa_init_shader_includes
000000000028fa70 000000000000000c t _mesa_get_shader_include_cursor
000000000028fa80 000000000000000c t _mesa_set_shader_include_cursor
000000000028fa90 0000000000000034 t _mesa_destroy_shader_includes
000000000028fad0 000000000000001c t _mesa_lookup_shader_include
000000000028faf0 0000000000000220 T _mesa_NamedStringARB
000000000028fd10 00000000000000d0 T _mesa_DeleteNamedStringARB
000000000028fde0 00000000000001ec T _mesa_CompileShaderIncludeARB
000000000028ffd0 000000000000008c T _mesa_IsNamedStringARB
0000000000290060 0000000000000108 T _mesa_GetNamedStringARB
0000000000290170 0000000000000140 T _mesa_GetNamedStringivARB
00000000002902b0 00000000000000d0 t _mesa_shader_write_subroutine_indices
0000000000290380 00000000000000e4 t _mesa_program_init_subroutine_defaults
0000000000290470 0000000000000124 t _mesa_use_program
00000000002905a0 000000000000035c t link_program_error.part.0
0000000000290900 0000000000000220 T _mesa_CreateShaderProgramv
0000000000290b20 0000000000000088 T _mesa_LinkProgram
0000000000290bb0 0000000000000378 T _mesa_LinkProgram_no_error
0000000000290f30 000000000000007c t update_programs_in_pipeline
0000000000290fb0 0000000000000088 t _mesa_use_shader_program
0000000000291040 0000000000000114 T _mesa_UseProgram_no_error
0000000000291160 0000000000000298 T _mesa_UseProgram
0000000000291400 0000000000000248 t _mesa_get_shader_image_format
0000000000291650 00000000000000b4 t set_image_binding
0000000000291710 000000000000004c t _mesa_get_image_format_class
0000000000291760 000000000000018c t _mesa_is_shader_image_format_supported
00000000002918f0 0000000000000050 t _mesa_default_image_unit
0000000000291940 0000000000000098 t _mesa_init_image_units
00000000002919e0 000000000000004c t _mesa_free_image_textures
0000000000291a30 00000000000001cc t _mesa_is_image_unit_valid
0000000000291c00 00000000000000e4 T _mesa_BindImageTexture_no_error
0000000000291cf0 0000000000000240 T _mesa_BindImageTexture
0000000000291f30 000000000000018c T _mesa_BindImageTextureEXT
00000000002920c0 00000000000001a8 T _mesa_BindImageTextures_no_error
0000000000292270 00000000000002ec T _mesa_BindImageTextures
0000000000292560 00000000000000c4 t _mesa_reference_shader
0000000000292630 0000000000000050 t _mesa_new_shader
0000000000292680 0000000000000044 t _mesa_delete_shader
00000000002926d0 0000000000000048 t _mesa_delete_linked_shader
0000000000292720 0000000000000048 t _mesa_lookup_shader
0000000000292770 000000000000008c t _mesa_lookup_shader_err
0000000000292800 00000000000000a4 t _mesa_reference_shader_program_data
00000000002928b0 0000000000000048 t _mesa_create_shader_program_data
0000000000292900 00000000000000c8 t _mesa_new_shader_program
00000000002929d0 00000000000000d0 t _mesa_clear_shader_program_data
0000000000292aa0 00000000000000e0 t _mesa_free_shader_program_data
0000000000292b80 00000000000000b0 t _mesa_reference_shader_program_
0000000000292c30 0000000000000024 t _mesa_delete_shader_program
0000000000292c60 0000000000000048 t _mesa_lookup_shader_program
0000000000292cb0 0000000000000094 t _mesa_lookup_shader_program_err
0000000000292d50 000000000000012c t program_resource_location(gl_program_resource*, unsigned int)
0000000000292e80 0000000000000078 t compute_resource_key(unsigned int, char const*)
0000000000292f00 000000000000009c T _mesa_BindAttribLocation_no_error
0000000000292fa0 000000000000012c T _mesa_BindAttribLocation
00000000002930d0 0000000000000068 t _mesa_count_active_attribs
0000000000293140 00000000000000c0 t _mesa_longest_attribute_name_length
0000000000293200 00000000000000f4 T _mesa_BindFragDataLocation_no_error
0000000000293300 00000000000001b8 t _mesa_BindFragDataLocationIndexed
00000000002934c0 000000000000000c T _mesa_BindFragDataLocation
00000000002934d0 00000000000000f4 T _mesa_BindFragDataLocationIndexed_no_error
00000000002935d0 00000000000000a4 t _mesa_program_resource_name
0000000000293680 00000000000000b8 t _mesa_program_resource_array_size
0000000000293740 0000000000000330 t _mesa_program_resource_find_name
0000000000293a70 00000000000000a0 T _mesa_GetAttribLocation
0000000000293b10 00000000000000e0 T _mesa_GetFragDataLocation
0000000000293bf0 00000000000000fc T _mesa_GetFragDataIndex
0000000000293cf0 0000000000000108 t _mesa_program_resource_find_active_variable
0000000000293e00 00000000000000a8 t _mesa_program_resource_index
0000000000293eb0 000000000000011c t _mesa_program_resource_find_index
0000000000293fd0 00000000000000ec t _mesa_program_resource_name_len
00000000002940c0 0000000000000170 t _mesa_get_program_resource_name
0000000000294230 0000000000000030 t _mesa_program_resource_location
0000000000294260 0000000000000050 t _mesa_program_resource_location_index
00000000002942b0 0000000000000a7c t _mesa_program_resource_prop
0000000000294d30 0000000000000188 T _mesa_GetActiveAttrib
0000000000294ec0 0000000000000144 t _mesa_get_program_resourceiv
0000000000295010 000000000000041c t _mesa_validate_pipeline_io
0000000000295430 00000000000000a4 t _mesa_create_program_resource_hash
00000000002954e0 0000000000000014 t delete_texture_cb
0000000000295500 000000000000002c t delete_program_cb
0000000000295530 000000000000001c t delete_framebuffer_cb
0000000000295550 000000000000001c t delete_renderbuffer_cb
0000000000295570 0000000000000014 t delete_memory_object_cb
0000000000295590 0000000000000014 t delete_semaphore_object_cb
00000000002955b0 0000000000000008 t delete_fragshader_cb
00000000002955c0 0000000000000028 t delete_sampler_object_cb
00000000002955f0 0000000000000040 t delete_bufferobj_cb
0000000000295630 0000000000000048 t delete_shader_cb
0000000000295680 000000000000001c t free_shader_program_data_cb
00000000002956a0 0000000000000008 t delete_bitmap_atlas_cb
00000000002956b0 0000000000000008 t delete_displaylist_cb
00000000002956c0 0000000000000194 t _mesa_alloc_shared_state
0000000000295860 0000000000000354 t _mesa_reference_shared_state
0000000000295bc0 000000000000001c t _mesa_get_spirv_extension_count
0000000000295be0 00000000000000cc t _mesa_spirv_extensions_to_string
0000000000295cb0 0000000000000044 t _mesa_get_enabled_spirv_extension
0000000000295d00 0000000000000074 t _mesa_fill_supported_spirv_extensions
0000000000295d80 000000000000038c t update_program
0000000000296110 0000000000000120 t _mesa_update_allow_draw_out_of_order
0000000000296230 000000000000030c t _mesa_update_state_locked
0000000000296540 000000000000002c t _mesa_update_state
0000000000296570 000000000000002c t _mesa_set_vp_override
00000000002965a0 00000000000000b0 t _mesa_update_vertex_processing_mode
0000000000296650 0000000000000140 t _mesa_set_draw_vao
0000000000296790 0000000000000214 t stencil_func
00000000002969b0 0000000000000208 t stencil_op
0000000000296bc0 00000000000001b4 t stencil_op_separate
0000000000296d80 000000000000002c t _mesa_ClearStencil
0000000000296db0 000000000000018c T _mesa_StencilFuncSeparateATI
0000000000296f40 0000000000000034 T _mesa_StencilFunc_no_error
0000000000296f80 0000000000000050 T _mesa_StencilFunc
0000000000296fd0 0000000000000178 T _mesa_StencilMask
0000000000297150 0000000000000034 T _mesa_StencilOp_no_error
0000000000297190 0000000000000114 T _mesa_StencilOp
00000000002972b0 0000000000000078 t _mesa_ActiveStencilFaceEXT
0000000000297330 000000000000003c T _mesa_StencilOpSeparate_no_error
0000000000297370 0000000000000140 t _mesa_StencilOpSeparate
00000000002974b0 00000000000000f8 T _mesa_StencilFuncSeparate_no_error
00000000002975b0 0000000000000144 t _mesa_StencilFuncSeparate
0000000000297700 00000000000000c4 T _mesa_StencilMaskSeparate_no_error
00000000002977d0 00000000000000ec t _mesa_StencilMaskSeparate
00000000002978c0 0000000000000050 t _mesa_init_stencil
0000000000297910 00000000000000a4 t fence_sync
00000000002979c0 0000000000000004 t _mesa_init_sync
00000000002979d0 0000000000000004 t _mesa_free_sync_data
00000000002979e0 0000000000000090 t _mesa_get_and_ref_sync
0000000000297a70 0000000000000090 t _mesa_unref_sync_object
0000000000297b00 0000000000000094 t client_wait_sync
0000000000297ba0 00000000000000a4 T _mesa_IsSync
0000000000297c50 000000000000009c T _mesa_DeleteSync_no_error
0000000000297cf0 00000000000000c4 T _mesa_DeleteSync
0000000000297dc0 000000000000002c T _mesa_FenceSync_no_error
0000000000297df0 00000000000000a0 T _mesa_FenceSync
0000000000297e90 0000000000000090 T _mesa_ClientWaitSync_no_error
0000000000297f20 0000000000000120 T _mesa_ClientWaitSync
0000000000298040 00000000000000a8 T _mesa_WaitSync_no_error
00000000002980f0 0000000000000118 T _mesa_WaitSync
0000000000298210 00000000000001a4 T _mesa_GetSynciv
00000000002983c0 000000000000032c t _mesa_gl_compressed_format_base_format
00000000002986f0 00000000000005b8 t _mesa_get_compressed_formats
0000000000298cb0 0000000000000460 t _mesa_glenum_to_compressed_format
0000000000299110 00000000000002e4 t _mesa_compressed_format_to_glenum
0000000000299400 00000000000000a4 t _mesa_get_compressed_fetch_func
00000000002994b0 00000000000000f4 t _mesa_decompress_image
00000000002995b0 000000000000006c t write_bits
0000000000299620 0000000000000070 t count_anchors_before_texel
0000000000299690 00000000000007f4 t texstore_bptc_rgb_float.constprop.0
0000000000299e90 00000000000005d8 t fetch_rgb_float_from_block
000000000029a470 0000000000000070 t fetch_bptc_rgb_unsigned_float
000000000029a4e0 0000000000000070 t fetch_bptc_rgb_signed_float
000000000029a550 000000000000093c t fetch_rgba_unorm_from_block
000000000029ae90 00000000000000c0 t fetch_bptc_rgba_unorm
000000000029af50 00000000000000c4 t fetch_bptc_srgb_alpha_unorm
000000000029b020 000000000000005c t _mesa_get_bptc_fetch_func
000000000029b080 00000000000008cc T _mesa_texstore_bptc_rgba_unorm
000000000029b950 0000000000000044 T _mesa_texstore_bptc_rgb_signed_float
000000000029b9a0 0000000000000040 T _mesa_texstore_bptc_rgb_unsigned_float
000000000029b9e0 000000000000013c t etc1_parse_block
000000000029bb20 00000000000000c8 t etc1_fetch_texel
000000000029bbf0 00000000000005ec t etc2_rgb8_parse_block
000000000029c1e0 000000000000005c t etc2_alpha8_parse_block
000000000029c240 00000000000000bc t fetch_etc1_rgb8
000000000029c300 0000000000000254 t etc2_rgb8_fetch_texel
000000000029c560 00000000000000d0 t fetch_etc2_srgb8_punchthrough_alpha1
000000000029c630 00000000000000cc t fetch_etc2_rgb8_punchthrough_alpha1
000000000029c700 00000000000000c4 t fetch_etc2_srgb8
000000000029c7d0 00000000000000c4 t fetch_etc2_rgb8
000000000029c8a0 00000000000000c8 t etc2_signed_r11_fetch_texel.isra.0
000000000029c970 000000000000011c t fetch_etc2_signed_rg11_eac
000000000029ca90 00000000000000cc t fetch_etc2_signed_r11_eac
000000000029cb60 00000000000000a0 t etc2_r11_fetch_texel.isra.0
000000000029cc00 0000000000000108 t fetch_etc2_rg11_eac
000000000029cd10 0000000000000090 t etc2_rgba8_fetch_texel
000000000029cda0 00000000000000e0 t fetch_etc2_srgb8_alpha8_eac
000000000029ce80 00000000000000dc t fetch_etc2_rgba8_eac
000000000029cf60 0000000000000180 t fetch_etc2_r11_eac
000000000029d0e0 0000000000000008 T _mesa_texstore_etc1_rgb8
000000000029d0f0 0000000000000128 t _mesa_etc1_unpack_rgba8888
000000000029d220 0000000000000008 T _mesa_texstore_etc2_rgb8
000000000029d230 0000000000000008 T _mesa_texstore_etc2_srgb8
000000000029d240 0000000000000008 T _mesa_texstore_etc2_rgba8_eac
000000000029d250 0000000000000008 T _mesa_texstore_etc2_srgb8_alpha8_eac
000000000029d260 0000000000000008 T _mesa_texstore_etc2_r11_eac
000000000029d270 0000000000000008 T _mesa_texstore_etc2_signed_r11_eac
000000000029d280 0000000000000008 T _mesa_texstore_etc2_rg11_eac
000000000029d290 0000000000000008 T _mesa_texstore_etc2_signed_rg11_eac
000000000029d2a0 0000000000000008 T _mesa_texstore_etc2_rgb8_punchthrough_alpha1
000000000029d2b0 0000000000000008 T _mesa_texstore_etc2_srgb8_punchthrough_alpha1
000000000029d2c0 0000000000000f4c t _mesa_unpack_etc2_format
000000000029e210 00000000000000e4 t _mesa_get_etc_fetch_func
000000000029e300 0000000000000100 t fxt1_decode_1HI
000000000029e400 0000000000000074 t fxt1_decode_1CHROMA
000000000029e480 0000000000000228 t fxt1_decode_1MIXED
000000000029e6b0 0000000000000210 t fxt1_decode_1ALPHA
000000000029e8c0 0000000000000078 t fxt1_decode_1
000000000029e940 0000000000000054 t fetch_rgb_fxt1
000000000029e9a0 000000000000005c t fetch_rgba_fxt1
000000000029ea00 0000000000000080 t fxt1_variance.constprop.0
000000000029ea80 0000000000001094 t fxt1_encode
000000000029fb20 0000000000000198 T _mesa_texstore_rgb_fxt1
000000000029fcc0 0000000000000174 T _mesa_texstore_rgba_fxt1
000000000029fe40 0000000000000028 t _mesa_get_fxt_fetch_func
000000000029fe70 00000000000000c0 t fetch_signed_la_latc2
000000000029ff30 00000000000000c4 t fetch_signed_rg_rgtc2
00000000002a0000 0000000000000060 t fetch_signed_l_latc1
00000000002a0060 0000000000000068 t fetch_signed_red_rgtc1
00000000002a00d0 0000000000000090 t fetch_la_latc2
00000000002a0160 0000000000000094 t fetch_rg_rgtc2
00000000002a0200 0000000000000050 t fetch_l_latc1
00000000002a0250 0000000000000054 t fetch_red_rgtc1
00000000002a02b0 0000000000000240 T _mesa_texstore_red_rgtc1
00000000002a04f0 0000000000000264 T _mesa_texstore_signed_red_rgtc1
00000000002a0760 00000000000002f0 T _mesa_texstore_rg_rgtc2
00000000002a0a50 000000000000033c T _mesa_texstore_signed_rg_rgtc2
00000000002a0d90 00000000000000b0 t _mesa_get_compressed_rgtc_func
00000000002a0e40 00000000000001fc t dxt135_decode_imageblock
00000000002a1040 000000000000008c t fetch_2d_texel_rgba_dxt3
00000000002a10d0 0000000000000150 t fetch_2d_texel_rgba_dxt5
00000000002a1220 0000000000000c44 t encodedxtcolorblockfaster
00000000002a1e70 00000000000000cc t writedxt5encodedalphablock
00000000002a1f40 00000000000000a0 t fetch_rgba_dxt1
00000000002a1fe0 0000000000000060 t fetch_rgba_dxt3
00000000002a2040 0000000000000060 t fetch_rgba_dxt5
00000000002a20a0 00000000000000a4 t fetch_srgb_dxt1
00000000002a2150 0000000000000064 t fetch_srgba_dxt3
00000000002a21c0 0000000000000064 t fetch_srgba_dxt5
00000000002a2230 00000000000000a4 t fetch_srgba_dxt1
00000000002a22e0 00000000000000a0 t fetch_rgb_dxt1
00000000002a2380 0000000000001234 t tx_compress_dxtn
00000000002a35c0 000000000000017c T _mesa_texstore_rgb_dxt1
00000000002a3740 000000000000017c T _mesa_texstore_rgba_dxt1
00000000002a38c0 000000000000017c T _mesa_texstore_rgba_dxt3
00000000002a3a40 000000000000017c T _mesa_texstore_rgba_dxt5
00000000002a3bc0 00000000000000ac t _mesa_get_dxt_fetch_func
00000000002a3c70 0000000000000078 t adjust_for_oes_float_texture
00000000002a3cf0 00000000000000bc t strip_texture_border
00000000002a3db0 0000000000000110 t copytexsubimage_by_slice
00000000002a3ec0 00000000000001b0 t get_proxy_tex_image
00000000002a4070 00000000000000b8 t error_check_subtexture_negative_dimensions
00000000002a4130 00000000000000dc t check_texture_buffer_range
00000000002a4210 00000000000000a0 t get_tex_images_for_clear
00000000002a42b0 0000000000000144 t proxy_target
00000000002a4400 00000000000000e0 t check_rtt_cb
00000000002a44e0 00000000000000b0 t texture_format_error_check_gles
00000000002a4590 00000000000000fc t texture_formats_agree
00000000002a4690 0000000000000318 t error_check_subtexture_dimensions
00000000002a49b0 0000000000000170 t lookup_texture_ext_dsa
00000000002a4b20 0000000000000100 t formats_differ_in_component_sizes
00000000002a4c20 0000000000000298 t check_clear_tex_image
00000000002a4ec0 0000000000000150 t compressed_texture_sub_image
00000000002a5010 00000000000001b8 t texture_sub_image
00000000002a51d0 00000000000001c8 t texturesubimage_no_error.constprop.0
00000000002a53a0 00000000000001f0 t copy_texture_sub_image
00000000002a5590 00000000000001c4 t legal_texsubimage_target
00000000002a5760 000000000000021c t legal_teximage_target
00000000002a5980 000000000000002c t _mesa_delete_texture_image
00000000002a59b0 000000000000003c t _mesa_is_proxy_texture
00000000002a59f0 000000000000003c t _mesa_is_array_texture
00000000002a5a30 0000000000000024 t _mesa_is_cube_map_texture
00000000002a5a60 0000000000000028 t _mesa_select_tex_image
00000000002a5a90 00000000000000c4 t _mesa_get_tex_image
00000000002a5b60 00000000000002a4 t egl_image_target_texture
00000000002a5e10 0000000000000064 t egl_image_target_texture_storage
00000000002a5e80 0000000000000290 t _mesa_max_texture_levels
00000000002a6110 00000000000007c0 t compressed_tex_sub_image
00000000002a68d0 0000000000000150 t _mesa_get_texture_dimensions
00000000002a6a20 0000000000000088 t _mesa_tex_target_is_layered
00000000002a6ab0 0000000000000090 t _mesa_get_texture_layers
00000000002a6b40 0000000000000110 t _mesa_get_tex_max_num_levels
00000000002a6c50 0000000000000298 t _mesa_init_teximage_fields_ms
00000000002a6ef0 0000000000000028 t _mesa_init_teximage_fields
00000000002a6f20 000000000000004c t _mesa_clear_texture_image
00000000002a6f70 0000000000000458 t _mesa_legal_texture_dimensions
00000000002a73d0 00000000000006a4 t texture_image_multisample
00000000002a7a80 0000000000000128 t _mesa_test_proxy_teximage
00000000002a7bb0 000000000000008c t _mesa_format_no_online_compression
00000000002a7c40 000000000000044c t texsubimage_error_check
00000000002a8090 00000000000002f8 t texturesubimage_error
00000000002a8390 00000000000001a0 t texsubimage_err
00000000002a8530 000000000000041c t copy_texture_sub_image_err
00000000002a8950 0000000000000218 t _mesa_target_can_be_compressed
00000000002a8b70 0000000000000290 t compressed_texture_error_check
00000000002a8e00 0000000000000698 t copytexture_error_check
00000000002a94a0 0000000000000174 t _mesa_legal_texture_base_format_for_target
00000000002a9620 0000000000000554 t texture_error_check
00000000002a9b80 0000000000000044 t _mesa_update_fbo_texture
00000000002a9bd0 0000000000000078 t _mesa_choose_texture_format
00000000002a9c50 00000000000006d8 t teximage_err
00000000002aa330 0000000000000464 t teximage_no_error
00000000002aa7a0 00000000000005c8 t copyteximage_err
00000000002aad70 00000000000004c4 t copyteximage_no_error
00000000002ab240 0000000000000074 T _mesa_TexImage1D
00000000002ab2c0 0000000000000580 T _mesa_TextureImage1DEXT
00000000002ab840 0000000000000580 T _mesa_MultiTexImage1DEXT
00000000002abdc0 0000000000000078 t _mesa_TexImage2D
00000000002abe40 00000000000005e0 T _mesa_TextureImage2DEXT
00000000002ac420 00000000000005e0 T _mesa_MultiTexImage2DEXT
00000000002aca00 0000000000000078 T _mesa_TexImage3D
00000000002aca80 00000000000005e4 T _mesa_TextureImage3DEXT
00000000002ad070 00000000000005e4 T _mesa_MultiTexImage3DEXT
00000000002ad660 0000000000000074 T _mesa_TexImage1D_no_error
00000000002ad6e0 0000000000000078 T _mesa_TexImage2D_no_error
00000000002ad760 0000000000000078 T _mesa_TexImage3D_no_error
00000000002ad7e0 0000000000000090 T _mesa_EGLImageTargetTexture2DOES
00000000002ad870 0000000000000094 T _mesa_EGLImageTargetTexStorageEXT
00000000002ad910 00000000000000f8 T _mesa_EGLImageTargetTextureStorageEXT
00000000002ada10 00000000000000d0 T _mesa_TexSubImage1D_no_error
00000000002adae0 0000000000000078 T _mesa_TexSubImage1D
00000000002adb60 00000000000000e4 T _mesa_TexSubImage2D_no_error
00000000002adc50 0000000000000078 T _mesa_TexSubImage2D
00000000002adcd0 00000000000000e8 T _mesa_TexSubImage3D_no_error
00000000002addc0 0000000000000084 T _mesa_TexSubImage3D
00000000002ade50 0000000000000070 T _mesa_TextureSubImage1D_no_error
00000000002adec0 0000000000000084 T _mesa_TextureSubImage1DEXT
00000000002adf50 00000000000000e4 T _mesa_MultiTexSubImage1DEXT
00000000002ae040 0000000000000080 T _mesa_TextureSubImage1D
00000000002ae0c0 0000000000000078 T _mesa_TextureSubImage2D_no_error
00000000002ae140 0000000000000090 T _mesa_TextureSubImage2DEXT
00000000002ae1d0 00000000000000f0 T _mesa_MultiTexSubImage2DEXT
00000000002ae2c0 0000000000000088 T _mesa_TextureSubImage2D
00000000002ae350 000000000000007c T _mesa_TextureSubImage3D_no_error
00000000002ae3d0 0000000000000094 T _mesa_TextureSubImage3DEXT
00000000002ae470 00000000000000f4 T _mesa_MultiTexSubImage3DEXT
00000000002ae570 0000000000000088 T _mesa_TextureSubImage3D
00000000002ae600 0000000000000064 T _mesa_CopyTexImage1D
00000000002ae670 0000000000000588 T _mesa_CopyTextureImage1DEXT
00000000002aec00 0000000000000588 T _mesa_CopyMultiTexImage1DEXT
00000000002af190 0000000000000064 T _mesa_CopyTexImage2D
00000000002af200 00000000000005b0 T _mesa_CopyTextureImage2DEXT
00000000002af7b0 00000000000005ac T _mesa_CopyMultiTexImage2DEXT
00000000002afd60 0000000000000064 T _mesa_CopyTexImage1D_no_error
00000000002afdd0 0000000000000064 T _mesa_CopyTexImage2D_no_error
00000000002afe40 0000000000000100 T _mesa_CopyTexSubImage1D
00000000002aff40 0000000000000198 T _mesa_CopyTexSubImage2D
00000000002b00e0 0000000000000124 T _mesa_CopyTexSubImage3D
00000000002b0210 0000000000000104 T _mesa_CopyTextureSubImage1D
00000000002b0320 000000000000010c T _mesa_CopyTextureSubImage1DEXT
00000000002b0430 00000000000000bc T _mesa_CopyMultiTexSubImage1DEXT
00000000002b04f0 0000000000000128 T _mesa_CopyTextureSubImage2D
00000000002b0620 0000000000000130 T _mesa_CopyTextureSubImage2DEXT
00000000002b0750 00000000000000c4 T _mesa_CopyMultiTexSubImage2DEXT
00000000002b0820 0000000000000194 T _mesa_CopyTextureSubImage3D
00000000002b09c0 000000000000019c T _mesa_CopyTextureSubImage3DEXT
00000000002b0b60 0000000000000130 T _mesa_CopyMultiTexSubImage3DEXT
00000000002b0c90 00000000000000f0 T _mesa_CopyTexSubImage1D_no_error
00000000002b0d80 0000000000000100 T _mesa_CopyTexSubImage2D_no_error
00000000002b0e80 0000000000000104 T _mesa_CopyTexSubImage3D_no_error
00000000002b0f90 00000000000000f4 T _mesa_CopyTextureSubImage1D_no_error
00000000002b1090 0000000000000104 T _mesa_CopyTextureSubImage2D_no_error
00000000002b11a0 00000000000001c0 T _mesa_CopyTextureSubImage3D_no_error
00000000002b1360 0000000000000318 T _mesa_ClearTexSubImage
00000000002b1680 00000000000001c4 T _mesa_ClearTexImage
00000000002b1850 0000000000000070 T _mesa_CompressedTexImage1D
00000000002b18c0 00000000000004f4 T _mesa_CompressedTextureImage1DEXT
00000000002b1dc0 00000000000004f4 T _mesa_CompressedMultiTexImage1DEXT
00000000002b22c0 0000000000000074 T _mesa_CompressedTexImage2D
00000000002b2340 000000000000058c T _mesa_CompressedTextureImage2DEXT
00000000002b28d0 000000000000058c T _mesa_CompressedMultiTexImage2DEXT
00000000002b2e60 0000000000000074 T _mesa_CompressedTexImage3D
00000000002b2ee0 0000000000000554 T _mesa_CompressedTextureImage3DEXT
00000000002b3440 0000000000000554 T _mesa_CompressedMultiTexImage3DEXT
00000000002b39a0 0000000000000070 T _mesa_CompressedTexImage1D_no_error
00000000002b3a10 0000000000000074 T _mesa_CompressedTexImage2D_no_error
00000000002b3a90 0000000000000074 T _mesa_CompressedTexImage3D_no_error
00000000002b3b10 0000000000000068 T _mesa_CompressedTexSubImage1D_no_error
00000000002b3b80 0000000000000068 T _mesa_CompressedTexSubImage1D
00000000002b3bf0 0000000000000068 T _mesa_CompressedTextureSubImage1D_no_error
00000000002b3c60 0000000000000068 T _mesa_CompressedTextureSubImage1D
00000000002b3cd0 000000000000006c T _mesa_CompressedTextureSubImage1DEXT
00000000002b3d40 0000000000000070 T _mesa_CompressedMultiTexSubImage1DEXT
00000000002b3db0 000000000000006c T _mesa_CompressedTexSubImage2D_no_error
00000000002b3e20 000000000000006c T _mesa_CompressedTexSubImage2D
00000000002b3e90 0000000000000078 T _mesa_CompressedTextureSubImage2DEXT
00000000002b3f10 000000000000007c T _mesa_CompressedMultiTexSubImage2DEXT
00000000002b3f90 0000000000000070 T _mesa_CompressedTextureSubImage2D_no_error
00000000002b4000 0000000000000070 T _mesa_CompressedTextureSubImage2D
00000000002b4070 0000000000000074 T _mesa_CompressedTexSubImage3D_no_error
00000000002b40f0 0000000000000078 T _mesa_CompressedTexSubImage3D
00000000002b4170 0000000000000078 T _mesa_CompressedTextureSubImage3D_no_error
00000000002b41f0 0000000000000078 T _mesa_CompressedTextureSubImage3D
00000000002b4270 0000000000000080 T _mesa_CompressedTextureSubImage3DEXT
00000000002b42f0 0000000000000084 T _mesa_CompressedMultiTexSubImage3DEXT
00000000002b4380 00000000000004e8 t _mesa_get_texbuffer_format
00000000002b4870 000000000000009c t _mesa_validate_texbuffer_format
00000000002b4910 0000000000000238 t texture_buffer_range
00000000002b4b50 00000000000000f8 T _mesa_TexBuffer
00000000002b4c50 000000000000010c T _mesa_TexBufferRange
00000000002b4d60 0000000000000144 T _mesa_TextureBufferRangeEXT
00000000002b4eb0 000000000000010c T _mesa_TextureBuffer
00000000002b4fc0 0000000000000114 T _mesa_TextureBufferEXT
00000000002b50e0 0000000000000114 T _mesa_MultiTexBufferEXT
00000000002b5200 000000000000012c T _mesa_TextureBufferRange
00000000002b5330 000000000000003c t _mesa_is_renderable_texture_format
00000000002b5370 00000000000000b4 T _mesa_TexImage2DMultisample
00000000002b5430 00000000000000b4 T _mesa_TexImage3DMultisample
00000000002b54f0 0000000000000110 T _mesa_TexStorage2DMultisample
00000000002b5600 0000000000000114 T _mesa_TexStorage3DMultisample
00000000002b5720 0000000000000114 T _mesa_TextureStorage2DMultisample
00000000002b5840 0000000000000118 T _mesa_TextureStorage3DMultisample
00000000002b5960 0000000000000114 T _mesa_TextureStorage2DMultisampleEXT
00000000002b5a80 0000000000000118 T _mesa_TextureStorage3DMultisampleEXT
00000000002b5ba0 000000000000004c t _mesa_texture_storage_ms_memory
00000000002b5bf0 0000000000000124 t finish_texture_init
00000000002b5d20 00000000000000e0 t invalidate_tex_image_error_check
00000000002b5e00 00000000000000a4 t unbind_texobj_from_fbo
00000000002b5eb0 0000000000000100 t create_textures.part.0
00000000002b5fb0 000000000000000c t _mesa_lookup_texture
00000000002b5fc0 000000000000005c t _mesa_lookup_texture_err
00000000002b6020 000000000000000c t _mesa_lookup_texture_locked
00000000002b6030 0000000000000484 t _mesa_get_current_tex_object
00000000002b64c0 00000000000000b0 t _mesa_delete_texture_object
00000000002b6570 000000000000010c t _mesa_copy_texture_object
00000000002b6680 0000000000000088 t _mesa_clear_texture_object
00000000002b6710 00000000000000c0 t _mesa_reference_texobj_
00000000002b67d0 00000000000000dc t unbind_texobj_from_texunits
00000000002b68b0 00000000000001a0 t delete_textures
00000000002b6a50 00000000000001a8 t bind_texture_object
00000000002b6c00 00000000000000ec t unbind_textures_from_unit
00000000002b6cf0 00000000000003a8 t _mesa_test_texobj_completeness
00000000002b70a0 0000000000000090 t _mesa_cube_level_complete
00000000002b7130 000000000000009c t _mesa_cube_complete
00000000002b71d0 0000000000000018 t _mesa_dirty_texobj
00000000002b71f0 0000000000000218 t _mesa_get_fallback_texture
00000000002b7410 0000000000000020 t _mesa_texture_base_format
00000000002b7430 000000000000003c T _mesa_GenTextures_no_error
00000000002b7470 0000000000000060 T _mesa_GenTextures
00000000002b74d0 0000000000000040 T _mesa_CreateTextures_no_error
00000000002b7510 000000000000002c T _mesa_DeleteTextures_no_error
00000000002b7540 0000000000000044 T _mesa_DeleteTextures
00000000002b7590 00000000000002f4 t _mesa_tex_target_to_index
00000000002b7890 00000000000000f4 t _mesa_get_texobj_by_target_and_texunit
00000000002b7990 000000000000014c t _mesa_initialize_texture_object
00000000002b7ae0 0000000000000054 t _mesa_new_texture_object
00000000002b7b40 000000000000009c T _mesa_CreateTextures
00000000002b7be0 0000000000000204 t _mesa_lookup_or_create_texture
00000000002b7df0 0000000000000070 T _mesa_BindTexture_no_error
00000000002b7e60 0000000000000070 t _mesa_BindTexture
00000000002b7ed0 00000000000000b8 T _mesa_BindMultiTextureEXT
00000000002b7f90 000000000000005c T _mesa_BindTextureUnit_no_error
00000000002b7ff0 00000000000000dc T _mesa_BindTextureUnit
00000000002b80d0 0000000000000124 T _mesa_BindTextures_no_error
00000000002b8200 000000000000019c T _mesa_BindTextures
00000000002b83a0 000000000000010c T _mesa_PrioritizeTextures
00000000002b84b0 0000000000000110 T _mesa_AreTexturesResident
00000000002b85c0 0000000000000098 T _mesa_IsTexture
00000000002b8660 0000000000000050 t _mesa_lock_context_textures
00000000002b86b0 000000000000000c t _mesa_unlock_context_textures
00000000002b86c0 0000000000000004 T _mesa_InvalidateTexSubImage_no_error
00000000002b86d0 00000000000002d8 T _mesa_InvalidateTexSubImage
00000000002b89b0 0000000000000004 T _mesa_InvalidateTexImage_no_error
00000000002b89c0 0000000000000034 T _mesa_InvalidateTexImage
00000000002b8a00 00000000000000e8 t tex_combine_translate_mode
00000000002b8af0 0000000000000230 t update_single_program_texture
00000000002b8d20 00000000000002e8 t _mesa_copy_texture_state
00000000002b9010 00000000000000a0 t _mesa_ActiveTexture_no_error
00000000002b90b0 00000000000000f4 t _mesa_ActiveTexture
00000000002b91b0 0000000000000080 t _mesa_ClientActiveTexture
00000000002b9230 00000000000000cc t _mesa_update_texture_matrices
00000000002b9300 0000000000000f84 t _mesa_update_texture_state
00000000002ba290 0000000000000278 t _mesa_init_texture
00000000002ba510 0000000000000110 t _mesa_free_texture_data
00000000002ba620 0000000000000098 t _mesa_update_default_objects_texture
00000000002ba6c0 00000000000002c8 t tex_storage_error_check
00000000002ba990 000000000000015c t initialize_texture_fields
00000000002baaf0 0000000000000088 t update_fbo_texture
00000000002bab80 00000000000001e4 t legal_texobj_target
00000000002bad70 00000000000000d0 t clear_texture_fields
00000000002bae40 000000000000017c t texture_storage_no_error.constprop.0
00000000002bafc0 00000000000002c8 t texture_storage_error.constprop.0
00000000002bb290 0000000000000110 t _mesa_is_legal_tex_storage_format
00000000002bb3a0 0000000000000134 t texstorage_error
00000000002bb4e0 0000000000000160 t texturestorage_error
00000000002bb640 0000000000000084 T _mesa_TexStorage1D_no_error
00000000002bb6d0 0000000000000030 T _mesa_TexStorage1D
00000000002bb700 000000000000008c T _mesa_TexStorage2D_no_error
00000000002bb790 0000000000000034 T _mesa_TexStorage2D
00000000002bb7d0 0000000000000094 T _mesa_TexStorage3D_no_error
00000000002bb870 0000000000000038 T _mesa_TexStorage3D
00000000002bb8b0 000000000000007c T _mesa_TextureStorage1D_no_error
00000000002bb930 0000000000000030 T _mesa_TextureStorage1D
00000000002bb960 000000000000008c T _mesa_TextureStorage2D_no_error
00000000002bb9f0 0000000000000034 T _mesa_TextureStorage2D
00000000002bba30 000000000000008c T _mesa_TextureStorage3D_no_error
00000000002bbac0 0000000000000038 T _mesa_TextureStorage3D
00000000002bbb00 000000000000009c T _mesa_TextureStorage1DEXT
00000000002bbba0 00000000000000a0 T _mesa_TextureStorage2DEXT
00000000002bbc40 00000000000000b0 T _mesa_TextureStorage3DEXT
00000000002bbcf0 0000000000000350 t _mesa_texture_storage_memory
00000000002bc040 000000000000011c t _mesa_texstore_z32
00000000002bc160 000000000000013c t _mesa_texstore_z24_x8
00000000002bc2a0 0000000000000114 t _mesa_texstore_x8_z24
00000000002bc3c0 0000000000000114 t _mesa_texstore_z16
00000000002bc4e0 00000000000001bc t _mesa_texstore_z32f_x24s8
00000000002bc6a0 0000000000000184 t _mesa_texstore_s8
00000000002bc830 0000000000000290 t _mesa_texstore_s8_z24
00000000002bcac0 0000000000000290 t _mesa_texstore_z24_s8
00000000002bcd50 00000000000001ac t _mesa_memcpy_texture
00000000002bcf00 00000000000000a4 t _mesa_texstore_needs_transfer_ops
00000000002bcfb0 0000000000000118 t _mesa_texstore_can_use_memcpy
00000000002bd0d0 000000000000086c t _mesa_texstore
00000000002bd940 0000000000000424 t store_texsubimage
00000000002bdd70 000000000000004c t _mesa_store_texsubimage
00000000002bddc0 0000000000000174 t _mesa_compute_compressed_pixelstore
00000000002bdf40 000000000000022c t _mesa_store_compressed_texsubimage
00000000002be170 0000000000000100 t make_texture_handle_resident
00000000002be270 00000000000000d0 t is_sampler_border_color_valid
00000000002be340 0000000000000308 t get_texture_handle
00000000002be650 00000000000002b8 t get_image_handle
00000000002be910 000000000000003c t _mesa_init_resident_handles
00000000002be950 0000000000000030 t _mesa_free_resident_handles
00000000002be980 0000000000000044 t _mesa_init_shared_handles
00000000002be9d0 0000000000000040 t _mesa_free_shared_handles
00000000002bea10 000000000000001c t _mesa_init_texture_handles
00000000002bea30 000000000000013c t _mesa_make_texture_handles_non_resident
00000000002beb70 00000000000001c8 t _mesa_delete_texture_handles
00000000002bed40 000000000000000c t _mesa_init_sampler_handles
00000000002bed50 0000000000000124 t _mesa_delete_sampler_handles
00000000002bee80 0000000000000134 T _mesa_GetTextureHandleARB_no_error
00000000002befc0 00000000000002b4 T _mesa_GetTextureHandleARB
00000000002bf280 0000000000000148 T _mesa_GetTextureSamplerHandleARB_no_error
00000000002bf3d0 00000000000002dc T _mesa_GetTextureSamplerHandleARB
00000000002bf6b0 0000000000000064 T _mesa_MakeTextureHandleResidentARB_no_error
00000000002bf720 000000000000012c T _mesa_MakeTextureHandleResidentARB
00000000002bf850 0000000000000064 T _mesa_MakeTextureHandleNonResidentARB_no_error
00000000002bf8c0 000000000000012c T _mesa_MakeTextureHandleNonResidentARB
00000000002bf9f0 000000000000014c T _mesa_GetImageHandleARB_no_error
00000000002bfb40 00000000000003ac T _mesa_GetImageHandleARB
00000000002bfef0 00000000000000b4 T _mesa_MakeImageHandleResidentARB_no_error
00000000002bffb0 0000000000000198 T _mesa_MakeImageHandleResidentARB
00000000002c0150 00000000000000ac T _mesa_MakeImageHandleNonResidentARB_no_error
00000000002c0200 000000000000014c T _mesa_MakeImageHandleNonResidentARB
00000000002c0350 0000000000000038 T _mesa_IsTextureHandleResidentARB_no_error
00000000002c0390 00000000000000fc T _mesa_IsTextureHandleResidentARB
00000000002c0490 0000000000000038 T _mesa_IsImageHandleResidentARB_no_error
00000000002c04d0 0000000000000104 T _mesa_IsImageHandleResidentARB
00000000002c05e0 000000000000016c t initialize_texture_fields
00000000002c0750 000000000000018c t _mesa_texture_view_lookup_view_class
00000000002c08e0 0000000000000054 t _mesa_texture_view_compatible_format
00000000002c0940 0000000000000100 t _mesa_set_texture_view_state
00000000002c0a40 000000000000024c T _mesa_TextureView_no_error
00000000002c0c90 0000000000000770 T _mesa_TextureView
00000000002c1400 0000000000000080 t reference_transform_feedback_object
00000000002c1480 0000000000000014 t delete_cb
00000000002c14a0 000000000000004c t compute_transform_feedback_buffer_sizes
00000000002c14f0 0000000000000060 t _mesa_delete_transform_feedback_object
00000000002c1550 0000000000000088 t end_transform_feedback
00000000002c15e0 0000000000000158 t create_transform_feedbacks
00000000002c1740 0000000000000028 t active_xfb_object_references_program
00000000002c1770 0000000000000078 t _mesa_transform_feedback_is_using_program
00000000002c17f0 0000000000000070 t _mesa_init_transform_feedback
00000000002c1860 000000000000006c t _mesa_free_transform_feedback
00000000002c18d0 0000000000000010 t _mesa_init_transform_feedback_object
00000000002c18e0 0000000000000198 T _mesa_BeginTransformFeedback_no_error
00000000002c1a80 0000000000000288 T _mesa_BeginTransformFeedback
00000000002c1d10 0000000000000028 T _mesa_EndTransformFeedback_no_error
00000000002c1d40 0000000000000044 T _mesa_EndTransformFeedback
00000000002c1d90 0000000000000130 t _mesa_validate_buffer_range_xfb
00000000002c1ec0 000000000000013c t _mesa_bind_buffer_base_transform_feedback
00000000002c2000 00000000000000e4 T _mesa_TransformFeedbackBufferBase
00000000002c20f0 0000000000000184 T _mesa_TransformFeedbackBufferRange
00000000002c2280 00000000000000ec T _mesa_BindBufferOffsetEXT_no_error
00000000002c2370 00000000000001b8 T _mesa_BindBufferOffsetEXT
00000000002c2530 0000000000000108 T _mesa_TransformFeedbackVaryings_no_error
00000000002c2640 000000000000033c T _mesa_TransformFeedbackVaryings
00000000002c2980 0000000000000140 T _mesa_GetTransformFeedbackVarying
00000000002c2ac0 0000000000000018 t _mesa_lookup_transform_feedback_object
00000000002c2ae0 0000000000000030 T _mesa_GenTransformFeedbacks
00000000002c2b10 0000000000000030 T _mesa_CreateTransformFeedbacks
00000000002c2b40 0000000000000074 T _mesa_IsTransformFeedback
00000000002c2bc0 00000000000000a4 T _mesa_BindTransformFeedback_no_error
00000000002c2c70 00000000000000d4 T _mesa_BindTransformFeedback
00000000002c2d50 0000000000000130 T _mesa_DeleteTransformFeedbacks
00000000002c2e80 0000000000000080 T _mesa_PauseTransformFeedback_no_error
00000000002c2f00 00000000000000a0 T _mesa_PauseTransformFeedback
00000000002c2fa0 000000000000007c T _mesa_ResumeTransformFeedback_no_error
00000000002c3020 00000000000000e0 T _mesa_ResumeTransformFeedback
00000000002c3100 00000000000000e4 T _mesa_GetTransformFeedbackiv
00000000002c31f0 0000000000000110 T _mesa_GetTransformFeedbacki_v
00000000002c3300 0000000000000170 T _mesa_GetTransformFeedbacki64_v
00000000002c3470 0000000000000140 t glsl_type_name(glsl_base_type)
00000000002c35b0 000000000000012c t validate_uniform_parameters(int, int, unsigned int*, gl_context*, gl_shader_program*, char const*)
00000000002c36e0 0000000000000134 t copy_uniform_matrix_to_storage(gl_constant_value*, int, void const*, unsigned int, unsigned int, unsigned int, unsigned int, bool, unsigned int, unsigned int, glsl_base_type) [clone .constprop.0]
00000000002c3820 00000000000000c0 t copy_uniforms_to_storage(gl_constant_value*, gl_uniform_storage*, gl_context*, int, void const*, int, unsigned int, unsigned int, glsl_base_type) [clone .constprop.0] [clone .isra.0]
00000000002c38e0 00000000000001b4 t log_uniform(void const*, glsl_base_type, unsigned int, unsigned int, unsigned int, bool, gl_shader_program const*, int, gl_uniform_storage const*) [clone .isra.0]
00000000002c3aa0 0000000000000160 T _mesa_GetActiveUniform
00000000002c3c00 00000000000001e8 T _mesa_GetActiveUniformsiv
00000000002c3df0 0000000000000760 t _mesa_get_uniform
00000000002c4550 0000000000000298 t _mesa_propagate_uniforms_to_driver_storage
00000000002c47f0 00000000000000e8 t _mesa_flush_vertices_for_uniforms
00000000002c48e0 00000000000006e0 t _mesa_uniform
00000000002c4fc0 000000000000032c t _mesa_uniform_matrix
00000000002c52f0 0000000000000344 t _mesa_uniform_handle
00000000002c5640 0000000000000054 t _mesa_sampler_uniforms_are_valid
00000000002c56a0 0000000000000108 t _mesa_sampler_uniforms_pipeline_are_valid
00000000002c57b0 00000000000002e8 t mesa_bufferiv
00000000002c5aa0 00000000000002e0 t _mesa_update_shader_textures_used
00000000002c5d80 0000000000000078 t _mesa_uniform_attach_driver_storage
00000000002c5e00 000000000000002c t _mesa_uniform_detach_all_driver_storage
00000000002c5e30 0000000000000050 T _mesa_Uniform1f
00000000002c5e80 0000000000000050 T _mesa_Uniform2f
00000000002c5ed0 0000000000000054 T _mesa_Uniform3f
00000000002c5f30 0000000000000050 T _mesa_Uniform4f
00000000002c5f80 0000000000000050 T _mesa_Uniform1i
00000000002c5fd0 0000000000000058 T _mesa_Uniform2i
00000000002c6030 0000000000000058 T _mesa_Uniform3i
00000000002c6090 0000000000000058 T _mesa_Uniform4i
00000000002c60f0 0000000000000040 T _mesa_Uniform1fv
00000000002c6130 0000000000000040 T _mesa_Uniform2fv
00000000002c6170 0000000000000040 T _mesa_Uniform3fv
00000000002c61b0 0000000000000040 T _mesa_Uniform4fv
00000000002c61f0 0000000000000040 T _mesa_Uniform1iv
00000000002c6230 0000000000000040 T _mesa_Uniform2iv
00000000002c6270 0000000000000040 T _mesa_Uniform3iv
00000000002c62b0 0000000000000040 T _mesa_Uniform4iv
00000000002c62f0 0000000000000048 T _mesa_UniformHandleui64ARB
00000000002c6340 0000000000000038 T _mesa_UniformHandleui64vARB
00000000002c6380 0000000000000068 T _mesa_ProgramUniform1f
00000000002c63f0 0000000000000068 T _mesa_ProgramUniform2f
00000000002c6460 000000000000006c T _mesa_ProgramUniform3f
00000000002c64d0 000000000000006c T _mesa_ProgramUniform4f
00000000002c6540 0000000000000068 T _mesa_ProgramUniform1i
00000000002c65b0 000000000000006c T _mesa_ProgramUniform2i
00000000002c6620 0000000000000070 T _mesa_ProgramUniform3i
00000000002c6690 000000000000006c T _mesa_ProgramUniform4i
00000000002c6700 0000000000000070 T _mesa_ProgramUniform1fv
00000000002c6770 0000000000000070 T _mesa_ProgramUniform2fv
00000000002c67e0 0000000000000070 T _mesa_ProgramUniform3fv
00000000002c6850 0000000000000070 T _mesa_ProgramUniform4fv
00000000002c68c0 0000000000000070 T _mesa_ProgramUniform1iv
00000000002c6930 0000000000000070 T _mesa_ProgramUniform2iv
00000000002c69a0 0000000000000070 T _mesa_ProgramUniform3iv
00000000002c6a10 0000000000000070 T _mesa_ProgramUniform4iv
00000000002c6a80 0000000000000060 T _mesa_ProgramUniformHandleui64ARB
00000000002c6ae0 0000000000000068 T _mesa_ProgramUniformHandleui64vARB
00000000002c6b50 0000000000000050 T _mesa_Uniform1ui
00000000002c6ba0 0000000000000054 T _mesa_Uniform2ui
00000000002c6c00 000000000000005c T _mesa_Uniform3ui
00000000002c6c60 0000000000000058 T _mesa_Uniform4ui
00000000002c6cc0 0000000000000040 T _mesa_Uniform1uiv
00000000002c6d00 0000000000000040 T _mesa_Uniform2uiv
00000000002c6d40 0000000000000040 T _mesa_Uniform3uiv
00000000002c6d80 0000000000000040 T _mesa_Uniform4uiv
00000000002c6dc0 0000000000000050 T _mesa_UniformMatrix2fv
00000000002c6e10 0000000000000054 T _mesa_UniformMatrix3fv
00000000002c6e70 0000000000000054 T _mesa_UniformMatrix4fv
00000000002c6ed0 0000000000000068 T _mesa_ProgramUniform1ui
00000000002c6f40 000000000000006c T _mesa_ProgramUniform2ui
00000000002c6fb0 0000000000000070 T _mesa_ProgramUniform3ui
00000000002c7020 000000000000006c T _mesa_ProgramUniform4ui
00000000002c7090 0000000000000070 T _mesa_ProgramUniform1uiv
00000000002c7100 0000000000000070 T _mesa_ProgramUniform2uiv
00000000002c7170 0000000000000070 T _mesa_ProgramUniform3uiv
00000000002c71e0 0000000000000070 T _mesa_ProgramUniform4uiv
00000000002c7250 0000000000000090 T _mesa_ProgramUniformMatrix2fv
00000000002c72e0 0000000000000094 T _mesa_ProgramUniformMatrix3fv
00000000002c7380 0000000000000094 T _mesa_ProgramUniformMatrix4fv
00000000002c7420 0000000000000050 T _mesa_UniformMatrix2x3fv
00000000002c7470 0000000000000050 T _mesa_UniformMatrix3x2fv
00000000002c74c0 0000000000000050 T _mesa_UniformMatrix2x4fv
00000000002c7510 0000000000000050 T _mesa_UniformMatrix4x2fv
00000000002c7560 0000000000000054 T _mesa_UniformMatrix3x4fv
00000000002c75c0 0000000000000054 T _mesa_UniformMatrix4x3fv
00000000002c7620 0000000000000090 T _mesa_ProgramUniformMatrix2x3fv
00000000002c76b0 0000000000000090 T _mesa_ProgramUniformMatrix3x2fv
00000000002c7740 0000000000000090 T _mesa_ProgramUniformMatrix2x4fv
00000000002c77d0 0000000000000090 T _mesa_ProgramUniformMatrix4x2fv
00000000002c7860 0000000000000094 T _mesa_ProgramUniformMatrix3x4fv
00000000002c7900 0000000000000094 T _mesa_ProgramUniformMatrix4x3fv
00000000002c79a0 0000000000000040 T _mesa_GetnUniformfvARB
00000000002c79e0 000000000000003c T _mesa_GetUniformfv
00000000002c7a20 0000000000000040 T _mesa_GetnUniformivARB
00000000002c7a60 000000000000003c T _mesa_GetUniformiv
00000000002c7aa0 0000000000000040 T _mesa_GetnUniformuivARB
00000000002c7ae0 000000000000003c T _mesa_GetUniformuiv
00000000002c7b20 0000000000000040 T _mesa_GetnUniformdvARB
00000000002c7b60 000000000000003c T _mesa_GetUniformdv
00000000002c7ba0 0000000000000040 T _mesa_GetnUniformi64vARB
00000000002c7be0 000000000000003c T _mesa_GetUniformi64vARB
00000000002c7c20 0000000000000040 T _mesa_GetnUniformui64vARB
00000000002c7c60 000000000000003c T _mesa_GetUniformui64vARB
00000000002c7ca0 0000000000000088 T _mesa_GetUniformLocation
00000000002c7d30 0000000000000040 T _mesa_GetUniformLocation_no_error
00000000002c7d70 0000000000000090 T _mesa_GetUniformBlockIndex
00000000002c7e00 00000000000000f4 T _mesa_GetUniformIndices
00000000002c7f00 00000000000000ac T _mesa_UniformBlockBinding_no_error
00000000002c7fb0 0000000000000140 T _mesa_UniformBlockBinding
00000000002c80f0 00000000000000ac T _mesa_ShaderStorageBlockBinding_no_error
00000000002c81a0 0000000000000140 T _mesa_ShaderStorageBlockBinding
00000000002c82e0 00000000000000a0 T _mesa_GetActiveUniformBlockiv
00000000002c8380 00000000000000d4 T _mesa_GetActiveUniformBlockName
00000000002c8460 00000000000000d4 T _mesa_GetActiveUniformName
00000000002c8540 00000000000000a0 T _mesa_GetActiveAtomicCounterBufferiv
00000000002c85e0 0000000000000050 T _mesa_Uniform1d
00000000002c8630 0000000000000050 T _mesa_Uniform2d
00000000002c8680 0000000000000054 T _mesa_Uniform3d
00000000002c86e0 0000000000000054 T _mesa_Uniform4d
00000000002c8740 0000000000000040 T _mesa_Uniform1dv
00000000002c8780 0000000000000040 T _mesa_Uniform2dv
00000000002c87c0 0000000000000040 T _mesa_Uniform3dv
00000000002c8800 0000000000000040 T _mesa_Uniform4dv
00000000002c8840 0000000000000054 T _mesa_UniformMatrix2dv
00000000002c88a0 0000000000000054 T _mesa_UniformMatrix3dv
00000000002c8900 0000000000000050 T _mesa_UniformMatrix4dv
00000000002c8950 0000000000000054 T _mesa_UniformMatrix2x3dv
00000000002c89b0 0000000000000054 T _mesa_UniformMatrix3x2dv
00000000002c8a10 0000000000000050 T _mesa_UniformMatrix2x4dv
00000000002c8a60 0000000000000050 T _mesa_UniformMatrix4x2dv
00000000002c8ab0 0000000000000050 T _mesa_UniformMatrix3x4dv
00000000002c8b00 0000000000000050 T _mesa_UniformMatrix4x3dv
00000000002c8b50 0000000000000068 T _mesa_ProgramUniform1d
00000000002c8bc0 0000000000000068 T _mesa_ProgramUniform2d
00000000002c8c30 000000000000006c T _mesa_ProgramUniform3d
00000000002c8ca0 0000000000000078 T _mesa_ProgramUniform4d
00000000002c8d20 0000000000000070 T _mesa_ProgramUniform1dv
00000000002c8d90 0000000000000070 T _mesa_ProgramUniform2dv
00000000002c8e00 0000000000000070 T _mesa_ProgramUniform3dv
00000000002c8e70 0000000000000070 T _mesa_ProgramUniform4dv
00000000002c8ee0 0000000000000094 T _mesa_ProgramUniformMatrix2dv
00000000002c8f80 0000000000000094 T _mesa_ProgramUniformMatrix3dv
00000000002c9020 0000000000000090 T _mesa_ProgramUniformMatrix4dv
00000000002c90b0 0000000000000094 T _mesa_ProgramUniformMatrix2x3dv
00000000002c9150 0000000000000094 T _mesa_ProgramUniformMatrix3x2dv
00000000002c91f0 0000000000000090 T _mesa_ProgramUniformMatrix2x4dv
00000000002c9280 0000000000000090 T _mesa_ProgramUniformMatrix4x2dv
00000000002c9310 0000000000000090 T _mesa_ProgramUniformMatrix3x4dv
00000000002c93a0 0000000000000090 T _mesa_ProgramUniformMatrix4x3dv
00000000002c9430 0000000000000050 T _mesa_Uniform1i64ARB
00000000002c9480 0000000000000054 T _mesa_Uniform2i64ARB
00000000002c94e0 000000000000005c T _mesa_Uniform3i64ARB
00000000002c9540 0000000000000060 T _mesa_Uniform4i64ARB
00000000002c95a0 0000000000000040 T _mesa_Uniform1i64vARB
00000000002c95e0 0000000000000040 T _mesa_Uniform2i64vARB
00000000002c9620 0000000000000040 T _mesa_Uniform3i64vARB
00000000002c9660 0000000000000040 T _mesa_Uniform4i64vARB
00000000002c96a0 0000000000000050 T _mesa_Uniform1ui64ARB
00000000002c96f0 0000000000000054 T _mesa_Uniform2ui64ARB
00000000002c9750 000000000000005c T _mesa_Uniform3ui64ARB
00000000002c97b0 0000000000000060 T _mesa_Uniform4ui64ARB
00000000002c9810 0000000000000040 T _mesa_Uniform1ui64vARB
00000000002c9850 0000000000000040 T _mesa_Uniform2ui64vARB
00000000002c9890 0000000000000040 T _mesa_Uniform3ui64vARB
00000000002c98d0 0000000000000040 T _mesa_Uniform4ui64vARB
00000000002c9910 0000000000000068 T _mesa_ProgramUniform1i64ARB
00000000002c9980 0000000000000078 T _mesa_ProgramUniform2i64ARB
00000000002c9a00 0000000000000088 T _mesa_ProgramUniform3i64ARB
00000000002c9a90 0000000000000090 T _mesa_ProgramUniform4i64ARB
00000000002c9b20 0000000000000070 T _mesa_ProgramUniform1i64vARB
00000000002c9b90 0000000000000070 T _mesa_ProgramUniform2i64vARB
00000000002c9c00 0000000000000070 T _mesa_ProgramUniform3i64vARB
00000000002c9c70 0000000000000070 T _mesa_ProgramUniform4i64vARB
00000000002c9ce0 0000000000000068 T _mesa_ProgramUniform1ui64ARB
00000000002c9d50 0000000000000078 T _mesa_ProgramUniform2ui64ARB
00000000002c9dd0 0000000000000088 T _mesa_ProgramUniform3ui64ARB
00000000002c9e60 0000000000000090 T _mesa_ProgramUniform4ui64ARB
00000000002c9ef0 0000000000000070 T _mesa_ProgramUniform1ui64vARB
00000000002c9f60 0000000000000070 T _mesa_ProgramUniform2ui64vARB
00000000002c9fd0 0000000000000070 T _mesa_ProgramUniform3ui64vARB
00000000002ca040 0000000000000070 T _mesa_ProgramUniform4ui64vARB
00000000002ca0b0 00000000000002c0 t get_vertex_array_attrib
00000000002ca370 00000000000000a8 t get_current_attrib
00000000002ca420 0000000000000008 t delete_arrayobj_cb
00000000002ca430 00000000000000cc t _lookup_vao_and_vbo_dsa
00000000002ca500 00000000000003c0 t validate_array_format.constprop.0
00000000002ca8c0 0000000000000154 t validate_array_and_format.isra.0
00000000002caa20 00000000000000c4 t vertex_array_binding_divisor
00000000002caaf0 00000000000000a0 t _mesa_vertex_attrib_binding
00000000002cab90 0000000000000074 t vertex_array_attrib_binding
00000000002cac10 0000000000000184 t _mesa_bind_vertex_buffer
00000000002cada0 00000000000001e0 t vertex_array_vertex_buffer_err.part.0
00000000002caf80 0000000000000274 t vertex_array_vertex_buffers_err.part.0
00000000002cb200 00000000000001a4 t _mesa_set_vertex_format
00000000002cb3b0 00000000000000b8 t _mesa_update_array_format
00000000002cb470 000000000000020c t vertex_attrib_format
00000000002cb680 00000000000001ec t vertex_array_attrib_format
00000000002cb870 0000000000000108 t update_array.constprop.0
00000000002cb980 0000000000000140 T _mesa_VertexPointer_no_error
00000000002cbac0 00000000000000e8 t _mesa_VertexPointer
00000000002cbbb0 0000000000000160 T _mesa_VertexArrayVertexOffsetEXT
00000000002cbd10 0000000000000140 T _mesa_NormalPointer_no_error
00000000002cbe50 00000000000000e8 t _mesa_NormalPointer
00000000002cbf40 000000000000015c T _mesa_VertexArrayNormalOffsetEXT
00000000002cc0a0 000000000000008c T _mesa_ColorPointer_no_error
00000000002cc130 0000000000000140 t _mesa_ColorPointer
00000000002cc270 00000000000001a4 T _mesa_VertexArrayColorOffsetEXT
00000000002cc420 0000000000000140 T _mesa_FogCoordPointer_no_error
00000000002cc560 00000000000000cc t _mesa_FogCoordPointer
00000000002cc630 0000000000000138 T _mesa_VertexArrayFogCoordOffsetEXT
00000000002cc770 0000000000000140 T _mesa_IndexPointer_no_error
00000000002cc8b0 00000000000000cc t _mesa_IndexPointer
00000000002cc980 0000000000000138 T _mesa_VertexArrayIndexOffsetEXT
00000000002ccac0 000000000000008c T _mesa_SecondaryColorPointer_no_error
00000000002ccb50 0000000000000104 t _mesa_SecondaryColorPointer
00000000002ccc60 0000000000000174 T _mesa_VertexArraySecondaryColorOffsetEXT
00000000002ccde0 0000000000000064 T _mesa_TexCoordPointer_no_error
00000000002cce50 00000000000000f0 t _mesa_TexCoordPointer
00000000002ccf40 0000000000000158 T _mesa_VertexArrayTexCoordOffsetEXT
00000000002cd0a0 0000000000000188 T _mesa_VertexArrayMultiTexCoordOffsetEXT
00000000002cd230 0000000000000138 T _mesa_EdgeFlagPointer_no_error
00000000002cd370 00000000000000cc t _mesa_EdgeFlagPointer
00000000002cd440 0000000000000130 T _mesa_VertexArrayEdgeFlagOffsetEXT
00000000002cd570 0000000000000140 T _mesa_PointSizePointerOES_no_error
00000000002cd6b0 0000000000000120 T _mesa_PointSizePointerOES
00000000002cd7d0 0000000000000088 T _mesa_VertexAttribPointer_no_error
00000000002cd860 0000000000000168 t _mesa_VertexAttribPointer
00000000002cd9d0 0000000000000184 T _mesa_VertexArrayVertexAttribOffsetEXT
00000000002cdb60 0000000000000178 T _mesa_VertexArrayVertexAttribLOffsetEXT
00000000002cdce0 0000000000000068 T _mesa_VertexAttribIPointer_no_error
00000000002cdd50 0000000000000130 T _mesa_VertexAttribIPointer
00000000002cde80 0000000000000068 T _mesa_VertexAttribLPointer_no_error
00000000002cdef0 0000000000000178 T _mesa_VertexArrayVertexAttribIOffsetEXT
00000000002ce070 0000000000000130 T _mesa_VertexAttribLPointer
00000000002ce1a0 000000000000004c t _mesa_enable_vertex_array_attribs
00000000002ce1f0 00000000000000ac T _mesa_EnableVertexAttribArray
00000000002ce2a0 0000000000000080 T _mesa_EnableVertexAttribArray_no_error
00000000002ce320 00000000000000b0 T _mesa_EnableVertexArrayAttrib
00000000002ce3d0 00000000000000b0 T _mesa_EnableVertexArrayAttribEXT
00000000002ce480 0000000000000090 T _mesa_EnableVertexArrayAttrib_no_error
00000000002ce510 000000000000004c t _mesa_disable_vertex_array_attribs
00000000002ce560 00000000000000a4 t _mesa_DisableVertexAttribArray
00000000002ce610 0000000000000080 T _mesa_DisableVertexAttribArray_no_error
00000000002ce690 0000000000000098 T _mesa_DisableVertexArrayAttrib
00000000002ce730 0000000000000098 T _mesa_DisableVertexArrayAttribEXT
00000000002ce7d0 0000000000000090 T _mesa_DisableVertexArrayAttrib_no_error
00000000002ce860 00000000000000a0 T _mesa_GetVertexAttribfv
00000000002ce900 00000000000000a0 T _mesa_GetVertexAttribdv
00000000002ce9a0 00000000000000a0 T _mesa_GetVertexAttribLdv
00000000002cea40 000000000000009c T _mesa_GetVertexAttribiv
00000000002ceae0 00000000000000a0 T _mesa_GetVertexAttribLui64vARB
00000000002ceb80 000000000000009c T _mesa_GetVertexAttribIiv
00000000002cec20 000000000000009c T _mesa_GetVertexAttribIuiv
00000000002cecc0 0000000000000080 T _mesa_GetVertexAttribPointerv
00000000002ced40 0000000000000160 T _mesa_GetVertexArrayIndexediv
00000000002ceea0 00000000000000d0 T _mesa_GetVertexArrayIndexed64iv
00000000002cef70 0000000000000008 T _mesa_VertexPointerEXT
00000000002cef80 0000000000000008 T _mesa_NormalPointerEXT
00000000002cef90 0000000000000008 T _mesa_ColorPointerEXT
00000000002cefa0 0000000000000008 T _mesa_IndexPointerEXT
00000000002cefb0 0000000000000008 T _mesa_TexCoordPointerEXT
00000000002cefc0 00000000000000e0 T _mesa_MultiTexCoordPointerEXT
00000000002cf0a0 0000000000000008 T _mesa_EdgeFlagPointerEXT
00000000002cf0b0 00000000000001d8 T _mesa_InterleavedArrays
00000000002cf290 0000000000000080 T _mesa_LockArraysEXT
00000000002cf310 000000000000004c T _mesa_UnlockArraysEXT
00000000002cf360 000000000000002c t _mesa_PrimitiveRestartIndex_no_error
00000000002cf390 000000000000005c T _mesa_PrimitiveRestartIndex
00000000002cf3f0 0000000000000098 T _mesa_VertexAttribDivisor_no_error
00000000002cf490 00000000000000dc T _mesa_VertexAttribDivisor
00000000002cf570 0000000000000128 T _mesa_VertexArrayVertexAttribDivisorEXT
00000000002cf6a0 00000000000000e4 T _mesa_BindVertexBuffer_no_error
00000000002cf790 00000000000000b0 T _mesa_BindVertexBuffer
00000000002cf840 00000000000000f8 T _mesa_VertexArrayVertexBuffer_no_error
00000000002cf940 00000000000000d0 T _mesa_VertexArrayVertexBuffer
00000000002cfa10 00000000000000d0 T _mesa_VertexArrayBindVertexBufferEXT
00000000002cfae0 0000000000000190 T _mesa_BindVertexBuffers_no_error
00000000002cfc70 000000000000009c T _mesa_BindVertexBuffers
00000000002cfd10 00000000000001a0 T _mesa_VertexArrayVertexBuffers_no_error
00000000002cfeb0 00000000000000e8 T _mesa_VertexArrayVertexBuffers
00000000002cffa0 000000000000003c T _mesa_VertexAttribFormat
00000000002cffe0 0000000000000040 T _mesa_VertexAttribIFormat
00000000002d0020 0000000000000040 T _mesa_VertexAttribLFormat
00000000002d0060 0000000000000060 T _mesa_VertexArrayAttribFormat
00000000002d00c0 0000000000000060 T _mesa_VertexArrayVertexAttribFormatEXT
00000000002d0120 000000000000005c T _mesa_VertexArrayAttribIFormat
00000000002d0180 000000000000005c T _mesa_VertexArrayVertexAttribIFormatEXT
00000000002d01e0 000000000000005c T _mesa_VertexArrayAttribLFormat
00000000002d0240 000000000000005c T _mesa_VertexArrayVertexAttribLFormatEXT
00000000002d02a0 0000000000000034 T _mesa_VertexAttribBinding_no_error
00000000002d02e0 00000000000000f8 T _mesa_VertexAttribBinding
00000000002d03e0 0000000000000058 T _mesa_VertexArrayAttribBinding_no_error
00000000002d0440 0000000000000080 T _mesa_VertexArrayAttribBinding
00000000002d04c0 0000000000000080 T _mesa_VertexArrayVertexAttribBindingEXT
00000000002d0540 0000000000000088 T _mesa_VertexBindingDivisor_no_error
00000000002d05d0 0000000000000144 T _mesa_VertexBindingDivisor
00000000002d0720 0000000000000094 T _mesa_VertexArrayBindingDivisor_no_error
00000000002d07c0 0000000000000080 T _mesa_VertexArrayBindingDivisor
00000000002d0840 0000000000000080 T _mesa_VertexArrayVertexBindingDivisorEXT
00000000002d08c0 000000000000003c t _mesa_copy_vertex_attrib_array
00000000002d0900 0000000000000040 t _mesa_copy_vertex_buffer_binding
00000000002d0940 0000000000000370 t _mesa_init_varray
00000000002d0cb0 0000000000000034 t _mesa_free_varray_data
00000000002d0cf0 0000000000000464 T _mesa_GetVertexArrayIntegervEXT
00000000002d1160 00000000000000c4 T _mesa_GetVertexArrayPointervEXT
00000000002d1230 0000000000000194 T _mesa_GetVertexArrayIntegeri_vEXT
00000000002d13d0 00000000000000f4 T _mesa_GetVertexArrayPointeri_vEXT
00000000002d14d0 00000000000000b8 t create_version_string
00000000002d1590 0000000000000220 t get_gl_override
00000000002d17b0 00000000000000c4 t _mesa_override_gl_version_contextless
00000000002d1880 00000000000000e0 t _mesa_override_gl_version
00000000002d1960 000000000000007c t _mesa_override_glsl_version
00000000002d19e0 00000000000008ac t _mesa_get_version
00000000002d2290 00000000000001cc t _mesa_compute_version
00000000002d2460 0000000000000010 t _mesa_get_driver_uuid
00000000002d2470 0000000000000010 t _mesa_get_device_uuid
00000000002d2480 00000000000004f0 t _mesa_get_shading_language_version
00000000002d2970 0000000000000108 t clamp_viewport
00000000002d2a80 00000000000000e8 t set_depth_range_no_notify
00000000002d2b70 0000000000000150 t viewport_array
00000000002d2cc0 000000000000013c t viewport
00000000002d2e00 000000000000003c T _mesa_Viewport_no_error
00000000002d2e40 0000000000000060 T _mesa_Viewport
00000000002d2ea0 000000000000010c t _mesa_set_viewport
00000000002d2fb0 0000000000000034 T _mesa_ViewportArrayv_no_error
00000000002d2ff0 00000000000000b4 T _mesa_ViewportArrayv
00000000002d30b0 0000000000000024 T _mesa_ViewportIndexedf_no_error
00000000002d30e0 0000000000000090 T _mesa_ViewportIndexedf
00000000002d3170 0000000000000030 T _mesa_ViewportIndexedfv_no_error
00000000002d31a0 000000000000009c T _mesa_ViewportIndexedfv
00000000002d3240 0000000000000108 t _mesa_set_depth_range
00000000002d3350 0000000000000148 T _mesa_DepthRange
00000000002d34a0 0000000000000120 t _mesa_DepthRangef
00000000002d35c0 0000000000000158 T _mesa_DepthRangeArrayv_no_error
00000000002d3720 000000000000018c T _mesa_DepthRangeArrayv
00000000002d38b0 000000000000017c T _mesa_DepthRangeArrayfvOES
00000000002d3a30 0000000000000128 T _mesa_DepthRangeIndexed_no_error
00000000002d3b60 0000000000000080 T _mesa_DepthRangeIndexed
00000000002d3be0 0000000000000088 T _mesa_DepthRangeIndexedfOES
00000000002d3c70 0000000000000074 t _mesa_init_viewport
00000000002d3cf0 0000000000000128 T _mesa_ClipControl_no_error
00000000002d3e20 00000000000001b4 t _mesa_ClipControl
00000000002d3fe0 00000000000000a4 t _mesa_get_viewport_xform
00000000002d4090 0000000000000074 T _mesa_SubpixelPrecisionBiasNV_no_error
00000000002d4110 00000000000000ec t _mesa_SubpixelPrecisionBiasNV
00000000002d4200 00000000000000d8 T _mesa_ViewportSwizzleNV_no_error
00000000002d42e0 00000000000001bc T _mesa_ViewportSwizzleNV
00000000002d44a0 00000000000000cc t matmul4
00000000002d4570 00000000000000c4 t matmul34
00000000002d4640 0000000000000734 t invert_matrix_general
00000000002d4d80 000000000000008c t invert_matrix_2d_no_rot
00000000002d4e10 00000000000000ac t invert_matrix_3d_no_rot
00000000002d4ec0 0000000000000028 t invert_matrix_identity
00000000002d4ef0 0000000000000464 t invert_matrix_3d
00000000002d5360 000000000000003c t _math_matrix_mul_matrix
00000000002d53a0 0000000000000024 t _math_matrix_mul_floats
00000000002d53d0 000000000000023c t _math_matrix_rotate
00000000002d5610 00000000000000a0 t _math_matrix_frustum
00000000002d56b0 00000000000000b8 t _math_matrix_ortho
00000000002d5770 00000000000000b0 t _math_matrix_scale
00000000002d5820 00000000000000a4 t _math_matrix_translate
00000000002d58d0 000000000000003c t _math_matrix_set_identity
00000000002d5910 0000000000000590 t _math_matrix_analyse
00000000002d5ea0 0000000000000014 t _math_matrix_is_length_preserving
00000000002d5ec0 0000000000000010 t _math_matrix_is_dirty
00000000002d5ed0 000000000000003c t _math_matrix_copy
00000000002d5f10 0000000000000020 t _math_matrix_loadf
00000000002d5f30 000000000000007c t _math_matrix_ctr
00000000002d5fb0 0000000000000034 t _math_matrix_dtr
00000000002d5ff0 0000000000000084 t _math_transposef
00000000002d6080 000000000000009c t _math_transposefd
00000000002d6120 00000000000000b0 t _mesa_transform_vector
00000000002d61d0 0000000000000010 t _vbo_install_exec_vtxfmt
00000000002d61e0 0000000000000018 t vbo_exec_update_eval_maps
00000000002d6200 0000000000000234 t _vbo_CreateContext
00000000002d6440 000000000000008c t _vbo_DestroyContext
00000000002d64d0 0000000000000030 t _vbo_current_attrib
00000000002d6500 0000000000000140 t vbo_exec_wrap_buffers
00000000002d6640 0000000000000070 t vbo_exec_vtx_wrap
00000000002d66b0 0000000000000204 t vbo_exec_End
00000000002d68c0 0000000000000278 t vbo_exec_copy_to_current
00000000002d6b40 0000000000000568 t vbo_exec_wrap_upgrade_vertex
00000000002d70b0 00000000000000b0 t vbo_exec_fixup_vertex
00000000002d7160 00000000000001b4 t vbo_exec_TexCoordP4uiv
00000000002d7320 0000000000000184 t vbo_exec_TexCoordP4ui
00000000002d74b0 000000000000016c t vbo_exec_TexCoordP3uiv
00000000002d7620 000000000000016c t vbo_exec_TexCoordP3ui
00000000002d7790 0000000000000148 t vbo_exec_TexCoordP2uiv
00000000002d78e0 0000000000000150 t vbo_exec_TexCoordP2ui
00000000002d7a30 0000000000000124 t vbo_exec_TexCoordP1uiv
00000000002d7b60 0000000000000118 t vbo_exec_TexCoordP1ui
00000000002d7c80 0000000000000094 t vbo_exec_Indexfv
00000000002d7d20 000000000000008c t vbo_exec_Indexf
00000000002d7db0 0000000000000094 t vbo_exec_EdgeFlag
00000000002d7e50 00000000000007f0 t vbo_exec_Materialfv
00000000002d8640 000000000000009c t vbo_exec_TexCoord4fv
00000000002d86e0 00000000000000a8 t vbo_exec_TexCoord4f
00000000002d8790 000000000000009c t vbo_exec_TexCoord3fv
00000000002d8830 00000000000000a0 t vbo_exec_TexCoord3f
00000000002d88d0 0000000000000094 t vbo_exec_TexCoord2fv
00000000002d8970 0000000000000094 t vbo_exec_TexCoord2f
00000000002d8a10 0000000000000094 t vbo_exec_TexCoord1fv
00000000002d8ab0 000000000000008c t vbo_exec_TexCoord1f
00000000002d8b40 000000000000009c t vbo_exec_SecondaryColor3fvEXT
00000000002d8be0 00000000000000a0 t vbo_exec_SecondaryColor3fEXT
00000000002d8c80 000000000000009c t vbo_exec_Normal3fv
00000000002d8d20 00000000000000a0 t vbo_exec_Normal3f
00000000002d8dc0 0000000000000094 t vbo_exec_FogCoordfvEXT
00000000002d8e60 000000000000008c t vbo_exec_FogCoordfEXT
00000000002d8ef0 000000000000009c t vbo_exec_Color4fv
00000000002d8f90 00000000000000a8 t vbo_exec_Color4f
00000000002d9040 000000000000009c t vbo_exec_Color3fv
00000000002d90e0 00000000000000a0 t vbo_exec_Color3f
00000000002d9180 00000000000001cc t vbo_exec_MultiTexCoordP4uiv
00000000002d9350 000000000000019c t vbo_exec_MultiTexCoordP4ui
00000000002d94f0 0000000000000184 t vbo_exec_MultiTexCoordP3uiv
00000000002d9680 0000000000000184 t vbo_exec_MultiTexCoordP3ui
00000000002d9810 0000000000000160 t vbo_exec_MultiTexCoordP2uiv
00000000002d9970 0000000000000168 t vbo_exec_MultiTexCoordP2ui
00000000002d9ae0 000000000000013c t vbo_exec_MultiTexCoordP1uiv
00000000002d9c20 000000000000012c t vbo_exec_MultiTexCoordP1ui
00000000002d9d50 00000000000000b4 t vbo_exec_MultiTexCoord4fv
00000000002d9e10 00000000000000c4 t vbo_exec_MultiTexCoord4f
00000000002d9ee0 00000000000000b4 t vbo_exec_MultiTexCoord3fv
00000000002d9fa0 00000000000000bc t vbo_exec_MultiTexCoord3f
00000000002da060 00000000000000ac t vbo_exec_MultiTexCoord2fv
00000000002da110 00000000000000b0 t vbo_exec_MultiTexCoord2f
00000000002da1c0 00000000000000ac t vbo_exec_MultiTexCoord1fv
00000000002da270 00000000000000a8 t vbo_exec_MultiTexCoord1f
00000000002da320 00000000000000f0 T _es_VertexAttrib4fv
00000000002da410 0000000000000130 t vbo_exec_EvalCoord2f
00000000002da540 0000000000000070 t vbo_exec_EvalPoint2
00000000002da5b0 0000000000000008 t vbo_exec_EvalCoord2fv
00000000002da5c0 00000000000000f0 t vbo_exec_EvalCoord1f
00000000002da6b0 000000000000004c t vbo_exec_EvalPoint1
00000000002da700 0000000000000008 t vbo_exec_EvalCoord1fv
00000000002da710 00000000000001d4 t vbo_exec_VertexAttribL1ui64vARB
00000000002da8f0 00000000000001d0 t vbo_exec_VertexAttribL1ui64ARB
00000000002daac0 00000000000001ac t vbo_exec_VertexAttribL4dv
00000000002dac70 00000000000001bc t vbo_exec_VertexAttribL3dv
00000000002dae30 00000000000001cc t vbo_exec_VertexAttribL2dv
00000000002db000 00000000000001d8 t vbo_exec_VertexAttribL1dv
00000000002db1e0 00000000000001dc t vbo_exec_VertexAttribL4d
00000000002db3c0 00000000000001d8 t vbo_exec_VertexAttribL3d
00000000002db5a0 00000000000001d4 t vbo_exec_VertexAttribL2d
00000000002db780 00000000000001dc t vbo_exec_VertexAttribL1d
00000000002db960 000000000000022c t vbo_exec_VertexP4uiv
00000000002dbb90 00000000000001fc t vbo_exec_VertexP4ui
00000000002dbd90 0000000000000230 t vbo_exec_VertexP3uiv
00000000002dbfc0 0000000000000210 t vbo_exec_VertexP3ui
00000000002dc1d0 0000000000000230 t vbo_exec_VertexP2uiv
00000000002dc400 00000000000001e4 t vbo_exec_VertexP2ui
00000000002dc5f0 00000000000001c4 t vbo_exec_VertexAttribI4uiv
00000000002dc7c0 00000000000001cc t vbo_exec_VertexAttribI3uiv
00000000002dc990 00000000000001d0 t vbo_exec_VertexAttribI2uiv
00000000002dcb60 00000000000001cc t vbo_exec_VertexAttribI4ui
00000000002dcd30 00000000000001cc t vbo_exec_VertexAttribI3ui
00000000002dcf00 00000000000001d4 t vbo_exec_VertexAttribI2ui
00000000002dd0e0 00000000000001c4 t vbo_exec_VertexAttribI1ui
00000000002dd2b0 00000000000001c4 t vbo_exec_VertexAttribI4iv
00000000002dd480 00000000000001cc t vbo_exec_VertexAttribI3iv
00000000002dd650 00000000000001d0 t vbo_exec_VertexAttribI2iv
00000000002dd820 00000000000001cc t vbo_exec_VertexAttribI4i
00000000002dd9f0 00000000000001cc t vbo_exec_VertexAttribI3i
00000000002ddbc0 00000000000001d4 t vbo_exec_VertexAttribI2i
00000000002ddda0 00000000000001c4 t vbo_exec_VertexAttribI1i
00000000002ddf70 000000000000017c t vbo_exec_VertexAttrib4fvNV
00000000002de0f0 0000000000000194 t vbo_exec_VertexAttrib4fNV
00000000002de290 000000000000018c t vbo_exec_VertexAttrib3fvNV
00000000002de420 00000000000001a8 t vbo_exec_VertexAttrib3fNV
00000000002de5d0 0000000000000190 t vbo_exec_VertexAttrib2fvNV
00000000002de760 000000000000019c t vbo_exec_VertexAttrib2fNV
00000000002de900 000000000000019c t vbo_exec_VertexAttrib1fvNV
00000000002deaa0 0000000000000198 t vbo_exec_VertexAttrib1fNV
00000000002dec40 00000000000001ac t vbo_exec_VertexAttrib4fvARB
00000000002dedf0 00000000000001dc t vbo_exec_VertexAttrib4fARB
00000000002defd0 00000000000001bc t vbo_exec_VertexAttrib3fvARB
00000000002df190 00000000000001d8 t vbo_exec_VertexAttrib3fARB
00000000002df370 00000000000001c4 t vbo_exec_VertexAttrib2fvARB
00000000002df540 00000000000001d0 t vbo_exec_VertexAttrib2fARB
00000000002df710 00000000000001d0 t vbo_exec_VertexAttrib1fvARB
00000000002df8e0 00000000000001cc t vbo_exec_VertexAttrib1fARB
00000000002dfab0 00000000000000f4 t vbo_exec_Vertex4fv
00000000002dfbb0 00000000000000f4 t vbo_exec_Vertex4f
00000000002dfcb0 0000000000000104 t vbo_exec_Vertex3fv
00000000002dfdc0 0000000000000114 t vbo_exec_Vertex3f
00000000002dfee0 0000000000000110 t vbo_exec_Vertex2fv
00000000002dfff0 0000000000000114 t vbo_exec_Vertex2f
00000000002e0110 000000000000017c t r11g11b10f_to_float3
00000000002e0290 00000000000000c8 t vbo_exec_FlushVertices_internal
00000000002e0360 0000000000000158 t vbo_exec_Begin
00000000002e04c0 0000000000000058 t vbo_exec_PrimitiveRestartNV
00000000002e0520 00000000000000e0 T _es_VertexAttrib4f
00000000002e0600 00000000000000d0 T _es_VertexAttrib1f
00000000002e06d0 00000000000000d4 T _es_VertexAttrib2f
00000000002e07b0 00000000000000e0 T _es_VertexAttrib3f
00000000002e0890 00000000000000dc T _es_VertexAttrib1fv
00000000002e0970 00000000000000dc T _es_VertexAttrib2fv
00000000002e0a50 00000000000000f0 T _es_VertexAttrib3fv
00000000002e0b40 0000000000000300 t vbo_exec_NormalP3ui
00000000002e0e40 0000000000000300 t vbo_exec_SecondaryColorP3ui
00000000002e1140 0000000000000300 t vbo_exec_ColorP3ui
00000000002e1440 000000000000031c t vbo_exec_ColorP3uiv
00000000002e1760 000000000000031c t vbo_exec_SecondaryColorP3uiv
00000000002e1a80 000000000000031c t vbo_exec_NormalP3uiv
00000000002e1da0 000000000000038c t vbo_exec_ColorP4ui
00000000002e2130 00000000000003b4 t vbo_exec_ColorP4uiv
00000000002e24f0 00000000000009c0 t vbo_exec_VertexAttribP4ui
00000000002e2eb0 0000000000000a68 t vbo_exec_VertexAttribP4uiv
00000000002e3920 00000000000007bc t vbo_exec_VertexAttribP1ui
00000000002e40e0 0000000000000860 t vbo_exec_VertexAttribP1uiv
00000000002e4940 000000000000093c t vbo_exec_VertexAttribP2ui
00000000002e5280 00000000000009b0 t vbo_exec_VertexAttribP2uiv
00000000002e5c30 0000000000000a58 t vbo_exec_VertexAttribP3ui
00000000002e6690 0000000000000ae8 t vbo_exec_VertexAttribP3uiv
00000000002e7180 00000000000006a8 t vbo_exec_vtx_init
00000000002e7830 0000000000000080 t vbo_exec_vtx_destroy
00000000002e78b0 0000000000000024 t vbo_exec_FlushVertices
00000000002e78e0 00000000000000a8 t _es_Color4f
00000000002e7990 00000000000000a0 t _es_Normal3f
00000000002e7a30 00000000000000c4 t _es_MultiTexCoord4f
00000000002e7b00 0000000000000004 t _es_Materialfv
00000000002e7b10 0000000000000024 t _es_Materialf
00000000002e7b40 0000000000000050 t vbo_exec_init
00000000002e7b90 0000000000000010 t vbo_exec_destroy
00000000002e7ba0 0000000000000050 t vbo_try_prim_conversion
00000000002e7bf0 0000000000000148 t vbo_merge_draws
00000000002e7d40 000000000000024c t vbo_copy_vertices
00000000002e7f90 00000000000000ac t vbo_exec_vtx_unmap
00000000002e8040 00000000000001a0 t vbo_exec_vtx_map
00000000002e81e0 00000000000004b8 t vbo_exec_vtx_flush
00000000002e86a0 0000000000000300 t vbo_exec_eval_update
00000000002e89a0 00000000000001b0 t vbo_exec_do_EvalCoord1f
00000000002e8b50 000000000000035c t vbo_exec_do_EvalCoord2f
00000000002e8eb0 0000000000000004 t _mesa_noop_Materialfv
00000000002e8ec0 0000000000000004 t _mesa_noop_EvalCoord1f
00000000002e8ed0 0000000000000004 t _mesa_noop_EvalCoord1fv
00000000002e8ee0 0000000000000004 t _mesa_noop_EvalCoord2f
00000000002e8ef0 0000000000000004 t _mesa_noop_EvalPoint1
00000000002e8f00 0000000000000004 t _mesa_noop_EvalPoint2
00000000002e8f10 0000000000000004 t _mesa_noop_Begin
00000000002e8f20 0000000000000004 t _mesa_noop_End
00000000002e8f30 0000000000000004 t _mesa_noop_Vertex3f
00000000002e8f40 0000000000000004 t _mesa_noop_Vertex4f
00000000002e8f50 0000000000000004 t _mesa_noop_EdgeFlag
00000000002e8f60 0000000000000004 t _mesa_noop_MultiTexCoord1f
00000000002e8f70 0000000000000004 t _mesa_noop_MultiTexCoord1fv
00000000002e8f80 0000000000000004 t _mesa_noop_MultiTexCoord2f
00000000002e8f90 0000000000000004 t _mesa_noop_MultiTexCoord3f
00000000002e8fa0 0000000000000004 t _mesa_noop_MultiTexCoord4f
00000000002e8fb0 0000000000000038 t _mesa_noop_VertexAttribL1ui64vARB
00000000002e8ff0 0000000000000038 t _mesa_noop_VertexAttribL1ui64ARB
00000000002e9030 0000000000000038 t _mesa_noop_VertexAttribL4dv
00000000002e9070 0000000000000038 t _mesa_noop_VertexAttribL3dv
00000000002e90b0 0000000000000038 t _mesa_noop_VertexAttribL2dv
00000000002e90f0 0000000000000038 t _mesa_noop_VertexAttribL1dv
00000000002e9130 0000000000000038 t _mesa_noop_VertexAttribL4d
00000000002e9170 0000000000000038 t _mesa_noop_VertexAttribL3d
00000000002e91b0 0000000000000038 t _mesa_noop_VertexAttribL2d
00000000002e91f0 0000000000000038 t _mesa_noop_VertexAttribL1d
00000000002e9230 0000000000000070 t _mesa_noop_VertexAttribP4uiv
00000000002e92a0 0000000000000070 t _mesa_noop_VertexAttribP4ui
00000000002e9310 000000000000004c t _mesa_noop_SecondaryColorP3uiv
00000000002e9360 000000000000004c t _mesa_noop_SecondaryColorP3ui
00000000002e93b0 000000000000004c t _mesa_noop_ColorP4uiv
00000000002e9400 000000000000004c t _mesa_noop_ColorP4ui
00000000002e9450 000000000000004c t _mesa_noop_ColorP3uiv
00000000002e94a0 000000000000004c t _mesa_noop_ColorP3ui
00000000002e94f0 000000000000004c t _mesa_noop_NormalP3uiv
00000000002e9540 000000000000004c t _mesa_noop_NormalP3ui
00000000002e9590 000000000000004c t _mesa_noop_MultiTexCoordP4uiv
00000000002e95e0 000000000000004c t _mesa_noop_MultiTexCoordP4ui
00000000002e9630 000000000000004c t _mesa_noop_MultiTexCoordP3uiv
00000000002e9680 000000000000004c t _mesa_noop_MultiTexCoordP3ui
00000000002e96d0 000000000000004c t _mesa_noop_MultiTexCoordP2uiv
00000000002e9720 000000000000004c t _mesa_noop_MultiTexCoordP2ui
00000000002e9770 000000000000004c t _mesa_noop_MultiTexCoordP1uiv
00000000002e97c0 000000000000004c t _mesa_noop_MultiTexCoordP1ui
00000000002e9810 000000000000004c t _mesa_noop_TexCoordP4uiv
00000000002e9860 000000000000004c t _mesa_noop_TexCoordP4ui
00000000002e98b0 000000000000004c t _mesa_noop_TexCoordP3uiv
00000000002e9900 000000000000004c t _mesa_noop_TexCoordP3ui
00000000002e9950 000000000000004c t _mesa_noop_TexCoordP2uiv
00000000002e99a0 000000000000004c t _mesa_noop_TexCoordP2ui
00000000002e99f0 000000000000004c t _mesa_noop_TexCoordP1uiv
00000000002e9a40 000000000000004c t _mesa_noop_TexCoordP1ui
00000000002e9a90 000000000000004c t _mesa_noop_VertexP4uiv
00000000002e9ae0 000000000000004c t _mesa_noop_VertexP4ui
00000000002e9b30 000000000000004c t _mesa_noop_VertexP3uiv
00000000002e9b80 000000000000004c t _mesa_noop_VertexP3ui
00000000002e9bd0 000000000000004c t _mesa_noop_VertexP2uiv
00000000002e9c20 000000000000004c t _mesa_noop_VertexP2ui
00000000002e9c70 0000000000000038 t _mesa_noop_VertexAttribI4uiv
00000000002e9cb0 0000000000000038 t _mesa_noop_VertexAttribI3uiv
00000000002e9cf0 0000000000000038 t _mesa_noop_VertexAttribI2uiv
00000000002e9d30 0000000000000038 t _mesa_noop_VertexAttribI4ui
00000000002e9d70 0000000000000038 t _mesa_noop_VertexAttribI3ui
00000000002e9db0 0000000000000038 t _mesa_noop_VertexAttribI2ui
00000000002e9df0 0000000000000038 t _mesa_noop_VertexAttribI1ui
00000000002e9e30 0000000000000038 t _mesa_noop_VertexAttribI4iv
00000000002e9e70 0000000000000038 t _mesa_noop_VertexAttribI3iv
00000000002e9eb0 0000000000000038 t _mesa_noop_VertexAttribI2iv
00000000002e9ef0 0000000000000038 t _mesa_noop_VertexAttribI4i
00000000002e9f30 0000000000000038 t _mesa_noop_VertexAttribI3i
00000000002e9f70 0000000000000038 t _mesa_noop_VertexAttribI2i
00000000002e9fb0 0000000000000038 t _mesa_noop_VertexAttribI1i
00000000002e9ff0 0000000000000038 t _mesa_noop_VertexAttrib4fvARB
00000000002ea030 0000000000000038 t _mesa_noop_VertexAttrib4fARB
00000000002ea070 0000000000000038 t _mesa_noop_VertexAttrib3fvARB
00000000002ea0b0 0000000000000038 t _mesa_noop_VertexAttrib3fARB
00000000002ea0f0 0000000000000038 t _mesa_noop_VertexAttrib2fvARB
00000000002ea130 0000000000000038 t _mesa_noop_VertexAttrib2fARB
00000000002ea170 0000000000000038 t _mesa_noop_VertexAttrib1fvARB
00000000002ea1b0 0000000000000038 t _mesa_noop_VertexAttrib1fARB
00000000002ea1f0 0000000000000004 t _mesa_noop_VertexAttrib4fNV
00000000002ea200 0000000000000004 t _mesa_noop_VertexAttrib3fNV
00000000002ea210 0000000000000004 t _mesa_noop_VertexAttrib2fNV
00000000002ea220 0000000000000004 t _mesa_noop_VertexAttrib4fvNV
00000000002ea230 0000000000000004 t _mesa_noop_Color4f
00000000002ea240 0000000000000004 t _mesa_noop_TexCoord3f
00000000002ea250 0000000000000004 t _mesa_noop_Vertex2f
00000000002ea260 0000000000000004 t _mesa_noop_Vertex4fv
00000000002ea270 0000000000000004 t _mesa_noop_TexCoord1f
00000000002ea280 0000000000000004 t _mesa_noop_TexCoord4f
00000000002ea290 0000000000000004 t _mesa_noop_Normal3f
00000000002ea2a0 0000000000000004 t _mesa_noop_SecondaryColor3fEXT
00000000002ea2b0 0000000000000004 t _mesa_noop_Color3f
00000000002ea2c0 0000000000000004 t _mesa_noop_MultiTexCoord3fv
00000000002ea2d0 0000000000000004 t _mesa_noop_MultiTexCoord4fv
00000000002ea2e0 0000000000000004 t _mesa_noop_VertexAttrib1fNV
00000000002ea2f0 0000000000000004 t _mesa_noop_VertexAttrib1fvNV
00000000002ea300 0000000000000004 t _mesa_noop_VertexAttrib2fvNV
00000000002ea310 0000000000000004 t _mesa_noop_MultiTexCoord2fv
00000000002ea320 0000000000000004 t _mesa_noop_TexCoord2f
00000000002ea330 0000000000000004 t _mesa_noop_VertexAttrib3fvNV
00000000002ea340 0000000000000004 t _mesa_noop_EvalCoord2fv
00000000002ea350 0000000000000004 t _mesa_noop_ArrayElement
00000000002ea360 0000000000000004 t _mesa_noop_Color4fv
00000000002ea370 0000000000000004 t _mesa_noop_Indexfv
00000000002ea380 0000000000000004 t _mesa_noop_SecondaryColor3fvEXT
00000000002ea390 0000000000000004 t _mesa_noop_Indexf
00000000002ea3a0 0000000000000004 t _mesa_noop_TexCoord1fv
00000000002ea3b0 0000000000000004 t _mesa_noop_TexCoord4fv
00000000002ea3c0 0000000000000004 t _mesa_noop_Normal3fv
00000000002ea3d0 0000000000000004 t _mesa_noop_FogCoordfEXT
00000000002ea3e0 0000000000000004 t _mesa_noop_TexCoord3fv
00000000002ea3f0 0000000000000004 t _mesa_noop_Color3fv
00000000002ea400 0000000000000004 t _mesa_noop_FogCoordfvEXT
00000000002ea410 0000000000000004 t _mesa_noop_TexCoord2fv
00000000002ea420 0000000000000004 t _mesa_noop_Vertex2fv
00000000002ea430 0000000000000004 t _mesa_noop_Vertex3fv
00000000002ea440 0000000000000004 t _mesa_noop_PrimitiveRestartNV
00000000002ea450 000000000000017c t r11g11b10f_to_float3
00000000002ea5d0 00000000000000bc t _mesa_noop_VertexAttribP3uiv
00000000002ea690 00000000000000bc t _mesa_noop_VertexAttribP3ui
00000000002ea750 00000000000000bc t _mesa_noop_VertexAttribP2uiv
00000000002ea810 00000000000000bc t _mesa_noop_VertexAttribP2ui
00000000002ea8d0 00000000000000bc t _mesa_noop_VertexAttribP1uiv
00000000002ea990 00000000000000bc t _mesa_noop_VertexAttribP1ui
00000000002eaa50 0000000000000570 t _mesa_noop_vtxfmt_init
00000000002eafc0 0000000000000018 t _mesa_using_noop_vtxfmt
00000000002eafe0 0000000000000068 t reset_counters
00000000002eb050 0000000000000094 t _save_OBE_MultiDrawElements
00000000002eb0f0 00000000000000bc t _save_OBE_MultiDrawElementsBaseVertex
00000000002eb1b0 000000000000002c t _save_Begin
00000000002eb1e0 0000000000000084 t vbo_destroy_vertex_list
00000000002eb270 00000000000000f0 t alloc_vertex_store
00000000002eb360 00000000000000f4 t vbo_print_vertex_list
00000000002eb460 000000000000013c t copy_to_current
00000000002eb5a0 000000000000017c t r11g11b10f_to_float3
00000000002eb720 0000000000000074 t vbo_save_map_vertex_store
00000000002eb7a0 0000000000000074 t vbo_save_unmap_vertex_store
00000000002eb820 0000000000000868 t compile_vertex_list
00000000002ec090 0000000000000070 t wrap_buffers
00000000002ec100 000000000000049c t fixup_vertex
00000000002ec5a0 0000000000000314 t _save_SecondaryColorP3uiv
00000000002ec8c0 00000000000002f4 t _save_SecondaryColorP3ui
00000000002ecbc0 00000000000003b4 t _save_ColorP4uiv
00000000002ecf80 0000000000000388 t _save_ColorP4ui
00000000002ed310 0000000000000314 t _save_ColorP3uiv
00000000002ed630 00000000000002f4 t _save_ColorP3ui
00000000002ed930 0000000000000314 t _save_NormalP3uiv
00000000002edc50 00000000000002f4 t _save_NormalP3ui
00000000002edf50 0000000000000164 t _save_TexCoordP4uiv
00000000002ee0c0 0000000000000134 t _save_TexCoordP4ui
00000000002ee200 000000000000013c t _save_TexCoordP3uiv
00000000002ee340 000000000000011c t _save_TexCoordP3ui
00000000002ee460 0000000000000118 t _save_TexCoordP2uiv
00000000002ee580 0000000000000120 t _save_TexCoordP2ui
00000000002ee6a0 0000000000000110 t _save_TexCoordP1uiv
00000000002ee7b0 00000000000000f0 t _save_TexCoordP1ui
00000000002ee8a0 0000000000000068 t _save_Indexfv
00000000002ee910 0000000000000070 t _save_Indexf
00000000002ee980 0000000000000068 t _save_EdgeFlag
00000000002ee9f0 000000000000064c t _save_Materialfv
00000000002ef040 0000000000000070 t _save_TexCoord4fv
00000000002ef0b0 0000000000000094 t _save_TexCoord4f
00000000002ef150 0000000000000070 t _save_TexCoord3fv
00000000002ef1c0 000000000000008c t _save_TexCoord3f
00000000002ef250 0000000000000068 t _save_TexCoord2fv
00000000002ef2c0 0000000000000078 t _save_TexCoord2f
00000000002ef340 0000000000000068 t _save_TexCoord1fv
00000000002ef3b0 0000000000000070 t _save_TexCoord1f
00000000002ef420 0000000000000070 t _save_SecondaryColor3fvEXT
00000000002ef490 000000000000008c t _save_SecondaryColor3fEXT
00000000002ef520 0000000000000070 t _save_Normal3fv
00000000002ef590 000000000000008c t _save_Normal3f
00000000002ef620 0000000000000068 t _save_FogCoordfvEXT
00000000002ef690 0000000000000070 t _save_FogCoordfEXT
00000000002ef700 0000000000000070 t _save_Color4fv
00000000002ef770 0000000000000094 t _save_Color4f
00000000002ef810 0000000000000070 t _save_Color3fv
00000000002ef880 000000000000008c t _save_Color3f
00000000002ef910 0000000000000194 t _save_MultiTexCoordP4uiv
00000000002efab0 0000000000000164 t _save_MultiTexCoordP4ui
00000000002efc20 000000000000016c t _save_MultiTexCoordP3uiv
00000000002efd90 000000000000014c t _save_MultiTexCoordP3ui
00000000002efee0 0000000000000148 t _save_MultiTexCoordP2uiv
00000000002f0030 0000000000000130 t _save_MultiTexCoordP2ui
00000000002f0160 0000000000000124 t _save_MultiTexCoordP1uiv
00000000002f0290 00000000000000fc t _save_MultiTexCoordP1ui
00000000002f0390 0000000000000094 t _save_MultiTexCoord4fv
00000000002f0430 00000000000000b0 t _save_MultiTexCoord4f
00000000002f04e0 0000000000000094 t _save_MultiTexCoord3fv
00000000002f0580 00000000000000a8 t _save_MultiTexCoord3f
00000000002f0630 000000000000008c t _save_MultiTexCoord2fv
00000000002f06c0 0000000000000094 t _save_MultiTexCoord2f
00000000002f0760 000000000000008c t _save_MultiTexCoord1fv
00000000002f07f0 000000000000008c t _save_MultiTexCoord1f
00000000002f0880 0000000000000078 t wrap_filled_vertex
00000000002f0900 0000000000000184 t _save_VertexAttribL1ui64vARB
00000000002f0a90 0000000000000178 t _save_VertexAttribL1ui64ARB
00000000002f0c10 0000000000000190 t _save_VertexAttribL4dv
00000000002f0da0 0000000000000190 t _save_VertexAttribL3dv
00000000002f0f30 0000000000000180 t _save_VertexAttribL2dv
00000000002f10b0 0000000000000184 t _save_VertexAttribL1dv
00000000002f1240 00000000000001cc t _save_VertexAttribL4d
00000000002f1410 00000000000001bc t _save_VertexAttribL3d
00000000002f15d0 000000000000019c t _save_VertexAttribL2d
00000000002f1770 0000000000000184 t _save_VertexAttribL1d
00000000002f1900 00000000000009ec t _save_VertexAttribP4uiv
00000000002f22f0 000000000000093c t _save_VertexAttribP4ui
00000000002f2c30 00000000000009e0 t _save_VertexAttribP3uiv
00000000002f3610 0000000000000948 t _save_VertexAttribP3ui
00000000002f3f60 0000000000000828 t _save_VertexAttribP2uiv
00000000002f4790 00000000000007d0 t _save_VertexAttribP2ui
00000000002f4f60 0000000000000670 t _save_VertexAttribP1uiv
00000000002f55d0 0000000000000630 t _save_VertexAttribP1ui
00000000002f5c00 0000000000000228 t _save_VertexP4uiv
00000000002f5e30 00000000000001f8 t _save_VertexP4ui
00000000002f6030 0000000000000200 t _save_VertexP3uiv
00000000002f6230 00000000000001e0 t _save_VertexP3ui
00000000002f6410 00000000000001c4 t _save_VertexP2uiv
00000000002f65e0 00000000000001a4 t _save_VertexP2ui
00000000002f6790 00000000000001b0 t _save_VertexAttribI4uiv
00000000002f6940 00000000000001a0 t _save_VertexAttribI3uiv
00000000002f6ae0 0000000000000190 t _save_VertexAttribI2uiv
00000000002f6c70 00000000000001ac t _save_VertexAttribI4ui
00000000002f6e20 0000000000000198 t _save_VertexAttribI3ui
00000000002f6fc0 000000000000018c t _save_VertexAttribI2ui
00000000002f7150 0000000000000178 t _save_VertexAttribI1ui
00000000002f72d0 00000000000001b0 t _save_VertexAttribI4iv
00000000002f7480 00000000000001a0 t _save_VertexAttribI3iv
00000000002f7620 0000000000000190 t _save_VertexAttribI2iv
00000000002f77b0 00000000000001ac t _save_VertexAttribI4i
00000000002f7960 0000000000000198 t _save_VertexAttribI3i
00000000002f7b00 000000000000018c t _save_VertexAttribI2i
00000000002f7c90 0000000000000178 t _save_VertexAttribI1i
00000000002f7e10 0000000000000114 t _save_VertexAttrib4fvNV
00000000002f7f30 000000000000012c t _save_VertexAttrib4fNV
00000000002f8060 0000000000000114 t _save_VertexAttrib3fvNV
00000000002f8180 0000000000000124 t _save_VertexAttrib3fNV
00000000002f82b0 000000000000010c t _save_VertexAttrib2fvNV
00000000002f83c0 0000000000000114 t _save_VertexAttrib2fNV
00000000002f84e0 000000000000010c t _save_VertexAttrib1fvNV
00000000002f85f0 000000000000012c t _save_VertexAttrib1fNV
00000000002f8720 0000000000000190 t _save_VertexAttrib4fvARB
00000000002f88b0 00000000000001cc t _save_VertexAttrib4fARB
00000000002f8a80 0000000000000190 t _save_VertexAttrib3fvARB
00000000002f8c10 00000000000001bc t _save_VertexAttrib3fARB
00000000002f8dd0 0000000000000180 t _save_VertexAttrib2fvARB
00000000002f8f50 000000000000019c t _save_VertexAttrib2fARB
00000000002f90f0 0000000000000184 t _save_VertexAttrib1fvARB
00000000002f9280 0000000000000184 t _save_VertexAttrib1fARB
00000000002f9410 00000000000000e4 t _save_Vertex4fv
00000000002f9500 000000000000010c t _save_Vertex4f
00000000002f9610 00000000000000e4 t _save_Vertex3fv
00000000002f9700 0000000000000104 t _save_Vertex3f
00000000002f9810 00000000000000dc t _save_Vertex2fv
00000000002f98f0 00000000000000ec t _save_Vertex2f
00000000002f99e0 0000000000000128 t dlist_fallback
00000000002f9b10 0000000000000054 t _save_EvalPoint2
00000000002f9b70 0000000000000044 t _save_EvalPoint1
00000000002f9bc0 0000000000000044 t _save_EvalCoord2fv
00000000002f9c10 0000000000000054 t _save_EvalCoord2f
00000000002f9c70 0000000000000044 t _save_EvalCoord1fv
00000000002f9cc0 000000000000004c t _save_EvalCoord1f
00000000002f9d10 000000000000005c t _save_CallLists
00000000002f9d70 0000000000000044 t _save_CallList
00000000002f9dc0 00000000000000b0 t _save_End
00000000002f9e70 00000000000000a4 t vbo_save_NotifyBegin
00000000002f9f20 00000000000000bc t _save_OBE_Rectf
00000000002f9fe0 0000000000000318 t _save_OBE_DrawElementsBaseVertex
00000000002fa300 0000000000000008 t _save_OBE_DrawElements
00000000002fa310 0000000000000160 t _save_OBE_DrawRangeElements
00000000002fa470 0000000000000144 t _save_OBE_DrawArrays
00000000002fa5c0 000000000000010c t _save_OBE_MultiDrawArrays
00000000002fa6d0 00000000000000a0 t _save_PrimitiveRestartNV
00000000002fa770 0000000000000098 t vbo_initialize_save_dispatch
00000000002fa810 00000000000000bc t vbo_save_SaveFlushVertices
00000000002fa8d0 00000000000000dc t vbo_save_NewList
00000000002fa9b0 0000000000000098 t vbo_save_EndList
00000000002faa50 0000000000000024 t vbo_save_BeginCallList
00000000002faa80 000000000000002c t vbo_save_EndCallList
00000000002faab0 000000000000064c t vbo_save_api_init
00000000002fb100 0000000000000050 t vbo_save_init
00000000002fb150 00000000000000b8 t vbo_save_destroy
00000000002fb210 0000000000000298 t copy_vao
00000000002fb4b0 00000000000002f4 T vbo_save_playback_vertex_list
00000000002fb7b0 0000000000000030 t VertexAttrib1fvNV
00000000002fb7e0 0000000000000030 t VertexAttrib2fvNV
00000000002fb810 0000000000000030 t VertexAttrib3fvNV
00000000002fb840 0000000000000030 t VertexAttrib4fvNV
00000000002fb870 0000000000000318 t _vbo_loopback_vertex_list
00000000002fbb90 0000000000000038 t unpack_float_z_X8_UINT_Z24_UNORM
00000000002fbbd0 0000000000000038 t unpack_float_z_Z24_UNORM_X8_UINT
00000000002fbc10 0000000000000038 t unpack_float_Z_UNORM16
00000000002fbc50 0000000000000030 t unpack_float_Z_UNORM32
00000000002fbc80 0000000000000024 t unpack_float_z_Z32X24S8
00000000002fbcb0 0000000000000028 t unpack_uint_z_X8_UINT_Z24_UNORM
00000000002fbce0 0000000000000028 t unpack_uint_z_Z24_UNORM_X8_UINT
00000000002fbd10 0000000000000024 t unpack_uint_Z_UNORM16
00000000002fbd40 0000000000000058 t unpack_uint_Z_FLOAT32
00000000002fbda0 000000000000005c t unpack_uint_Z_FLOAT32_X24S8
00000000002fbe00 0000000000000010 t unpack_float_Z_FLOAT32
00000000002fbe10 0000000000000014 t unpack_uint_Z_UNORM32
00000000002fbe30 000000000000007c t _mesa_unorm_to_unorm.constprop.0
00000000002fbeb0 000000000000252c t _mesa_unpack_rgba_row
00000000002fe3e0 0000000000001d58 t _mesa_unpack_ubyte_rgba_row
0000000000300140 0000000000000de0 t _mesa_unpack_uint_rgba_row
0000000000300f20 00000000000000a0 t _mesa_unpack_float_z_row
0000000000300fc0 00000000000000a0 t _mesa_unpack_uint_z_row
0000000000301060 000000000000009c t _mesa_unpack_ubyte_stencil_row
0000000000301100 0000000000000094 t _mesa_unpack_uint_24_8_depth_stencil_row
00000000003011a0 00000000000000b4 t _mesa_unpack_float_32_uint_24_8_depth_stencil_row
0000000000301260 0000000000008cec t _mesa_initialize_exec_table
0000000000309f50 0000000000000010 t compar_nr
0000000000309f60 0000000000000080 t _mesa_enum_to_string
0000000000309fe0 0000000000000024 t _mesa_lookup_prim_by_nr
000000000030a010 0000000000000184 t _mesa_get_srgb_format_linear
000000000030a1a0 00000000000000c0 t _mesa_get_intensity_format_red
000000000030a260 0000000000000298 t setup_render_state
000000000030a500 0000000000000184 t draw_bitmap_quad
000000000030a690 0000000000000168 t init_bitmap_state
000000000030a800 00000000000001a4 t st_flush_bitmap_cache.part.0
000000000030a9b0 0000000000000584 t st_Bitmap
000000000030af40 00000000000004c4 t st_DrawAtlasBitmaps
000000000030b410 0000000000000018 t st_flush_bitmap_cache
000000000030b430 0000000000000018 t st_init_bitmap_functions
000000000030b450 0000000000000084 t st_destroy_bitmap
000000000030b4e0 00000000000000f8 t get_color_fp_variant
000000000030b5e0 0000000000000560 t draw_textured_quad.constprop.0
000000000030bb40 00000000000000d8 t pipe_resource_reference
000000000030bc20 00000000000003ac t make_drawpix_z_stencil_program_tgsi
000000000030bfd0 0000000000000068 t st_make_passthrough_vertex_shader
000000000030c040 0000000000000e3c t st_CopyPixels
000000000030ce80 0000000000001518 t st_DrawPixels
000000000030e3a0 000000000000001c t st_init_drawpixels_functions
000000000030e3c0 00000000000000d8 t st_destroy_drawpix
000000000030e4a0 0000000000000058 t st_discard_framebuffer
000000000030e500 0000000000000040 t st_UnmapRenderbuffer
000000000030e540 0000000000000050 t st_new_renderbuffer
000000000030e590 0000000000000038 t st_EvaluateDepthValues
000000000030e5d0 0000000000000178 t st_MapRenderbuffer
000000000030e750 0000000000000070 t st_DrawBufferAllocate
000000000030e7c0 0000000000000070 t st_ReadBuffer
000000000030e830 00000000000000e4 t st_validate_attachment
000000000030e920 00000000000001c4 t st_validate_framebuffer
000000000030eaf0 0000000000000018 t st_finish_render_texture
000000000030eb10 00000000000001f4 t st_renderbuffer_delete
000000000030ed10 00000000000001f0 t st_new_renderbuffer_fb
000000000030ef00 00000000000004e0 t st_update_renderbuffer_surface
000000000030f3e0 000000000000045c t st_renderbuffer_alloc_storage
000000000030f840 0000000000000124 t st_render_texture
000000000030f970 0000000000000090 t st_init_fbo_functions
000000000030fa00 0000000000000010 t st_device_reset_callback
000000000030fa10 0000000000000074 t st_get_graphics_reset_status
000000000030fa90 0000000000000048 t st_glFlush
000000000030fae0 0000000000000044 t st_flush
000000000030fb30 0000000000000080 t st_finish
000000000030fbb0 000000000000002c t st_glFinish
000000000030fbe0 0000000000000038 t st_install_device_reset_callback
000000000030fc20 000000000000004c t st_init_flush_functions
000000000030fc70 000000000000019c t util_format_linear
000000000030fe10 00000000000000dc t guess_base_level_size
000000000030fef0 00000000000000c0 t alpha_to_red
000000000030ffb0 0000000000000018 t st_DeleteTextureHandle
000000000030ffd0 0000000000000018 t st_MakeTextureHandleResident
000000000030fff0 0000000000000018 t st_DeleteImageHandle
0000000000310010 0000000000000018 t st_MakeImageHandleResident
0000000000310030 0000000000000074 t st_TexParameter
00000000003100b0 0000000000000044 t st_NewImageHandle
0000000000310100 0000000000000004 t st_DeleteTextureImage
0000000000310110 000000000000000c t st_NewTextureImage
0000000000310120 00000000000000b0 t st_NewTextureObject
00000000003101d0 0000000000000064 t compressed_tex_fallback_allocate.part.0
0000000000310240 0000000000000224 t try_pbo_upload_common
0000000000310470 00000000000000d0 t default_bindings.isra.0
0000000000310540 00000000000000d8 t pipe_resource_reference
0000000000310620 0000000000000098 t st_DeleteTextureObject
00000000003106c0 00000000000000a4 t st_FreeTextureImageBuffer
0000000000310770 000000000000023c t st_TextureView
00000000003109b0 0000000000000104 t prep_teximage
0000000000310ac0 0000000000000240 t st_ClearTexSubImage
0000000000310d00 000000000000015c t gl_target_to_pipe
0000000000310e60 000000000000018c t st_TestProxyTexImage
0000000000310ff0 0000000000000290 t guess_and_alloc_texture
0000000000311280 0000000000000064 t st_astc_format_fallback
00000000003112f0 00000000000000a4 t st_compressed_format_fallback
00000000003113a0 0000000000000324 t st_AllocTextureImageBuffer
00000000003116d0 0000000000000118 t st_UnmapTextureImage
00000000003117f0 00000000000001a0 t st_MapTextureImage
0000000000311990 000000000000042c t st_CompressedTexSubImage
0000000000311dc0 00000000000000fc t st_CompressedTexImage
0000000000311ec0 0000000000000350 t st_texture_storage
0000000000312210 000000000000001c t st_SetTextureStorageForMemoryObject
0000000000312230 000000000000000c t st_AllocTextureStorage
0000000000312240 00000000000000a0 t st_get_blit_mask
00000000003122e0 0000000000000b10 t st_GetTexSubImage
0000000000312df0 0000000000000c08 t st_CopyTexSubImage
0000000000313a00 0000000000001730 t st_TexSubImage
0000000000315130 00000000000000fc t st_TexImage
0000000000315230 000000000000067c t st_finalize_texture
00000000003158b0 00000000000000e4 t st_NewTextureHandle
00000000003159a0 0000000000000154 t st_init_texture_functions
0000000000315b00 0000000000000050 t st_query_memory_info
0000000000315b50 000000000000025c t st_invalidate_state
0000000000315db0 0000000000000018 t st_emit_string_marker
0000000000315dd0 0000000000000018 t st_set_background_context
0000000000315df0 00000000000001c4 t free_zombie_shaders
0000000000315fc0 0000000000000020 t st_get_device_uuid
0000000000315fe0 0000000000000020 t st_get_driver_uuid
0000000000316000 0000000000000058 t st_Enable
0000000000316060 000000000000004c t destroy_framebuffer_attachment_sampler_cb
00000000003160b0 0000000000000008 t destroy_tex_sampler_cb
00000000003160c0 00000000000000c8 t free_zombie_sampler_views
0000000000316190 00000000000001c4 t st_destroy_context_priv
0000000000316360 0000000000000018 t st_invalidate_buffers
0000000000316380 000000000000008c t st_save_zombie_sampler_view
0000000000316410 0000000000000094 t st_save_zombie_shader
00000000003164b0 0000000000000024 t st_context_free_zombie_objects
00000000003164e0 0000000000000b60 t st_create_context
0000000000317040 0000000000000290 t st_destroy_context
00000000003172d0 0000000000000050 t st_debug_message
0000000000317320 000000000000005c t st_debug_init
0000000000317380 000000000000009c t st_update_debug_callback
0000000000317420 0000000000000330 t st_draw_vbo
0000000000317750 00000000000002a4 t st_indirect_draw_vbo
0000000000317a00 0000000000000018 t st_init_draw_functions
0000000000317a20 0000000000000220 t st_draw_quad
0000000000317c40 00000000000000f0 t init_format_extensions
0000000000317d30 0000000000000f78 t st_init_limits
0000000000318cb0 00000000000013f0 t st_init_extensions
000000000031a0a0 0000000000000134 t st_mesa_format_to_pipe_format
000000000031a1e0 0000000000000028 t st_pipe_format_to_mesa_format
000000000031a210 00000000000000bc t st_choose_matching_format
000000000031a2d0 0000000000000278 t st_choose_format
000000000031a550 0000000000000074 t st_choose_renderbuffer_format
000000000031a5d0 00000000000000d4 t st_QuerySamplesForFormat
000000000031a6b0 000000000000032c T st_ChooseTextureFormat
000000000031a9e0 00000000000000f0 T st_QueryInternalFormat
000000000031aad0 0000000000000254 t st_translate_color
000000000031ad30 00000000000004a8 T st_generate_mipmap
000000000031b1e0 0000000000000074 t get_pbo_conversion
000000000031b260 0000000000000284 t build_conversion
000000000031b4f0 00000000000010e8 t create_fs_tgsi.isra.0
000000000031c5e0 00000000000000a8 t st_pbo_addresses_setup
000000000031c690 0000000000000120 t st_pbo_addresses_pixelstore
000000000031c7b0 0000000000000024 t st_pbo_addresses_invert_y
000000000031c7e0 00000000000002b4 t st_pbo_create_vs
000000000031caa0 0000000000000344 t st_pbo_create_gs
000000000031cdf0 0000000000000344 t st_pbo_draw
000000000031d140 0000000000000064 t st_pbo_get_upload_fs
000000000031d1b0 000000000000007c t st_pbo_get_download_fs
000000000031d230 0000000000000194 t st_init_pbo_helpers
000000000031d3d0 00000000000000d0 t st_destroy_pbo_helpers
000000000031d4a0 000000000000017c t delete_variant
000000000031d620 0000000000000164 t st_create_vp_variant
000000000031d790 0000000000000420 t st_create_fp_variant
000000000031dbb0 0000000000000110 t st_unbind_program.isra.0
000000000031dcc0 0000000000000094 t set_affected_state_flags.isra.0
000000000031dd60 00000000000000a8 t destroy_program_variants_cb
000000000031de10 00000000000000e0 t destroy_shader_program_variants_cb
000000000031def0 000000000000018c t st_set_prog_affected_state_flags
000000000031e080 000000000000006c t st_release_variants
000000000031e0f0 00000000000000d8 t st_release_program
000000000031e1d0 00000000000000cc t st_prepare_vertex_program
000000000031e2a0 00000000000000e4 t st_translate_stream_output_info
000000000031e390 0000000000000318 t st_translate_vertex_program
000000000031e6b0 00000000000000dc t st_get_vp_variant
000000000031e790 0000000000000694 t st_translate_fragment_program
000000000031ee30 00000000000000d0 t st_get_fp_variant
000000000031ef00 0000000000000480 t st_translate_common_program
000000000031f380 0000000000000200 t st_get_common_variant
000000000031f580 0000000000000064 t st_destroy_program_variants
000000000031f5f0 000000000000015c t st_finalize_program
000000000031f750 000000000000008c t st_window_rectangles_to_blit
000000000031f7e0 00000000000001d0 t st_deserialise_ir_program
000000000031f9b0 000000000000013c t st_serialise_ir_program.part.0
000000000031faf0 0000000000000004 T st_get_program_binary_driver_sha1
000000000031fb00 00000000000000bc t st_store_ir_in_disk_cache
000000000031fbc0 00000000000000fc t st_load_ir_from_disk_cache
000000000031fcc0 0000000000000014 T st_serialise_tgsi_program
000000000031fce0 0000000000000014 T st_serialise_tgsi_program_binary
000000000031fd00 0000000000000008 T st_deserialise_tgsi_program
000000000031fd10 0000000000000094 t st_destroy_bound_texture_handles_per_stage
000000000031fdb0 0000000000000098 t st_destroy_bound_image_handles_per_stage
000000000031fe50 000000000000006c t st_texture_create
000000000031fec0 00000000000001b4 t st_gl_texture_dims_to_pipe_dims
0000000000320080 00000000000000e4 t st_texture_match_image
0000000000320170 0000000000000148 t st_texture_image_map
00000000003202c0 0000000000000050 t st_texture_image_unmap
0000000000320310 000000000000015c t st_texture_image_copy
0000000000320470 00000000000000a4 t st_create_color_map_texture
0000000000320520 000000000000003c t st_destroy_bound_texture_handles
0000000000320560 000000000000003c t st_destroy_bound_image_handles
00000000003205a0 0000000000000170 t st_make_bound_samplers_resident
0000000000320710 0000000000000120 t st_make_bound_images_resident
0000000000320830 00000000000000a8 t transform_decl
00000000003208e0 00000000000000d4 t prolog_common
00000000003209c0 00000000000000f0 t prolog_last_vertex_stage
0000000000320ab0 0000000000000320 t prolog_fs
0000000000320dd0 0000000000000388 t epilog_fs
0000000000321160 00000000000004f0 t epilog_last_vertex_stage
0000000000321650 000000000000013c t transform_instr
0000000000321790 0000000000000144 t st_tgsi_lower_depth_clamp
00000000003218e0 0000000000000008 t st_tgsi_lower_depth_clamp_fs
00000000003218f0 00000000000000b8 t emit_samp
00000000003219b0 0000000000000424 t yuv_to_rgb
0000000000321de0 0000000000000a20 t transform_instr
0000000000322800 00000000000000b0 t st_tgsi_lower_yuv
00000000003228b0 0000000000000008 t always_available(_mesa_glsl_parse_state const*)
00000000003228c0 000000000000003c t compatibility_vs_only(_mesa_glsl_parse_state const*)
0000000000322900 0000000000000030 t derivatives_only(_mesa_glsl_parse_state const*)
0000000000322930 0000000000000010 t gs_only(_mesa_glsl_parse_state const*)
0000000000322940 000000000000000c t v110(_mesa_glsl_parse_state const*)
0000000000322950 000000000000002c t v120(_mesa_glsl_parse_state const*)
0000000000322980 000000000000002c t v130(_mesa_glsl_parse_state const*)
00000000003229b0 0000000000000030 t v130_desktop(_mesa_glsl_parse_state const*)
00000000003229e0 0000000000000030 t v460_desktop(_mesa_glsl_parse_state const*)
0000000000322a10 000000000000002c t v140_or_es3(_mesa_glsl_parse_state const*)
0000000000322a40 0000000000000008 t texture_rectangle(_mesa_glsl_parse_state const*)
0000000000322a50 0000000000000008 t texture_external(_mesa_glsl_parse_state const*)
0000000000322a60 0000000000000008 t shader_texture_lod(_mesa_glsl_parse_state const*)
0000000000322a70 0000000000000014 t shader_texture_lod_and_rect(_mesa_glsl_parse_state const*)
0000000000322a90 000000000000005c t shader_integer_mix(_mesa_glsl_parse_state const*)
0000000000322af0 0000000000000008 t gpu_shader4(_mesa_glsl_parse_state const*)
0000000000322b00 0000000000000024 t gpu_shader4_integer(_mesa_glsl_parse_state const*)
0000000000322b30 0000000000000024 t gpu_shader4_array(_mesa_glsl_parse_state const*)
0000000000322b60 0000000000000030 t gpu_shader4_array_integer(_mesa_glsl_parse_state const*)
0000000000322b90 0000000000000024 t gpu_shader4_rect(_mesa_glsl_parse_state const*)
0000000000322bc0 0000000000000030 t gpu_shader4_rect_integer(_mesa_glsl_parse_state const*)
0000000000322bf0 0000000000000024 t gpu_shader4_tbo(_mesa_glsl_parse_state const*)
0000000000322c20 0000000000000030 t gpu_shader4_tbo_integer(_mesa_glsl_parse_state const*)
0000000000322c50 0000000000000038 t v130_or_gpu_shader4(_mesa_glsl_parse_state const*)
0000000000322c90 000000000000004c t gpu_shader5(_mesa_glsl_parse_state const*)
0000000000322ce0 0000000000000038 t gpu_shader5_or_es31(_mesa_glsl_parse_state const*)
0000000000322d20 0000000000000038 t texture_multisample(_mesa_glsl_parse_state const*)
0000000000322d60 000000000000004c t texture_query_levels(_mesa_glsl_parse_state const*)
0000000000322db0 0000000000000038 t texture_query_lod(_mesa_glsl_parse_state const*)
0000000000322df0 0000000000000008 t texture_texture4(_mesa_glsl_parse_state const*)
0000000000322e00 0000000000000068 t texture_gather_only_or_es31(_mesa_glsl_parse_state const*)
0000000000322e70 000000000000003c t derivatives_tex3d(_mesa_glsl_parse_state const*)
0000000000322eb0 0000000000000008 t shader_atomic_counter_ops(_mesa_glsl_parse_state const*)
0000000000322ec0 0000000000000008 t shader_ballot(_mesa_glsl_parse_state const*)
0000000000322ed0 0000000000000008 t supports_arb_fragment_shader_interlock(_mesa_glsl_parse_state const*)
0000000000322ee0 0000000000000008 t supports_nv_fragment_shader_interlock(_mesa_glsl_parse_state const*)
0000000000322ef0 0000000000000008 t shader_clock(_mesa_glsl_parse_state const*)
0000000000322f00 0000000000000020 t shader_clock_int64(_mesa_glsl_parse_state const*)
0000000000322f20 0000000000000008 t shader_trinary_minmax(_mesa_glsl_parse_state const*)
0000000000322f30 0000000000000008 t shader_image_load_store_ext(_mesa_glsl_parse_state const*)
0000000000322f40 0000000000000008 t shader_image_atomic_add_float(_mesa_glsl_parse_state const*)
0000000000322f50 0000000000000038 t shader_image_size(_mesa_glsl_parse_state const*)
0000000000322f90 000000000000004c t shader_samples(_mesa_glsl_parse_state const*)
0000000000322fe0 0000000000000014 t int64(_mesa_glsl_parse_state const*)
0000000000323000 0000000000000010 t compute_shader(_mesa_glsl_parse_state const*)
0000000000323010 0000000000000014 t barrier_supported(_mesa_glsl_parse_state const*)
0000000000323030 0000000000000008 t vote(_mesa_glsl_parse_state const*)
0000000000323040 0000000000000014 t integer_functions_supported(_mesa_glsl_parse_state const*)
0000000000323060 0000000000000014 t NV_shader_atomic_float_supported(_mesa_glsl_parse_state const*)
0000000000323080 0000000000000014 t shader_atomic_float_exchange(_mesa_glsl_parse_state const*)
00000000003230a0 0000000000000014 t INTEL_shader_atomic_float_minmax_supported(_mesa_glsl_parse_state const*)
00000000003230c0 0000000000000008 t shader_atomic_float_minmax(_mesa_glsl_parse_state const*)
00000000003230d0 0000000000000008 t demote_to_helper_invocation(_mesa_glsl_parse_state const*)
00000000003230e0 0000000000000008 t shader_integer_functions2(_mesa_glsl_parse_state const*)
00000000003230f0 0000000000000024 t is_nir(_mesa_glsl_parse_state const*)
0000000000323120 0000000000000024 t is_not_nir(_mesa_glsl_parse_state const*)
0000000000323150 0000000000000004 W glsl_symbol_table::_ralloc_destructor(void*)
0000000000323160 00000000000000f8 t (anonymous namespace)::builtin_builder::new_sig(glsl_type const*, bool (*)(_mesa_glsl_parse_state const*), int, ...)
0000000000323260 0000000000000044 t shader_image_load_store(_mesa_glsl_parse_state const*)
00000000003232b0 000000000000004c t shader_image_atomic_exchange_float(_mesa_glsl_parse_state const*)
0000000000323300 0000000000000064 t lod_exists_in_stage(_mesa_glsl_parse_state const*)
0000000000323370 0000000000000044 t texture_multisample_array(_mesa_glsl_parse_state const*)
00000000003233c0 000000000000006c t derivative_control(_mesa_glsl_parse_state const*)
0000000000323430 0000000000000064 t fs_interpolate_at(_mesa_glsl_parse_state const*)
00000000003234a0 0000000000000020 t shader_integer_functions2_int64(_mesa_glsl_parse_state const*)
00000000003234c0 00000000000000d4 t (anonymous namespace)::builtin_builder::add_function(char const*, ...) [clone .constprop.0]
00000000003235a0 000000000000004c t fp64(_mesa_glsl_parse_state const*)
00000000003235f0 0000000000000044 t compute_shader_supported(_mesa_glsl_parse_state const*)
0000000000323640 0000000000000044 t shader_atomic_counters(_mesa_glsl_parse_state const*)
0000000000323690 0000000000000074 t derivatives(_mesa_glsl_parse_state const*)
0000000000323710 0000000000000044 t shader_bit_encoding(_mesa_glsl_parse_state const*)
0000000000323760 0000000000000050 t shader_packing_or_es3_or_gpu_shader5(_mesa_glsl_parse_state const*)
00000000003237b0 0000000000000044 t shader_packing_or_es3(_mesa_glsl_parse_state const*)
0000000000323800 0000000000000050 t shader_packing_or_es31_or_gpu_shader5(_mesa_glsl_parse_state const*)
0000000000323850 0000000000000044 t texture_buffer(_mesa_glsl_parse_state const*)
00000000003238a0 0000000000000038 t texture_external_es3(_mesa_glsl_parse_state const*)
00000000003238e0 0000000000000044 t texture_gather_or_es31(_mesa_glsl_parse_state const*)
0000000000323930 0000000000000058 t texture_gather_cube_map_array(_mesa_glsl_parse_state const*)
0000000000323990 0000000000000050 t gpu_shader5_es(_mesa_glsl_parse_state const*)
00000000003239e0 0000000000000050 t shader_image_atomic(_mesa_glsl_parse_state const*)
0000000000323a30 000000000000004c t shader_atomic_counter_ops_or_v460_desktop(_mesa_glsl_parse_state const*)
0000000000323a80 000000000000002c t texture_array(_mesa_glsl_parse_state const*)
0000000000323ab0 0000000000000008 t shader_atomic_float_add(_mesa_glsl_parse_state const*)
0000000000323ac0 000000000000005c t buffer_atomics_supported(_mesa_glsl_parse_state const*)
0000000000323b20 0000000000000050 t texture_array_derivs_only(_mesa_glsl_parse_state const*)
0000000000323b70 0000000000000028 t tex3d(_mesa_glsl_parse_state const*)
0000000000323ba0 0000000000000060 t int64_fp64(_mesa_glsl_parse_state const*)
0000000000323c00 0000000000000050 t gpu_shader5_or_OES_texture_cube_map_array(_mesa_glsl_parse_state const*)
0000000000323c50 000000000000004c t vote_or_v460_desktop(_mesa_glsl_parse_state const*)
0000000000323ca0 000000000000004c t texture_cube_map_array(_mesa_glsl_parse_state const*)
0000000000323cf0 0000000000000070 t derivatives_texture_cube_map_array(_mesa_glsl_parse_state const*)
0000000000323d60 000000000000003c t texture_samples_identical(_mesa_glsl_parse_state const*)
0000000000323da0 0000000000000044 t gpu_shader5_or_es31_or_integer_functions(_mesa_glsl_parse_state const*)
0000000000323df0 000000000000004c t texture_samples_identical_array(_mesa_glsl_parse_state const*)
0000000000323e40 0000000000000060 t gs_streams(_mesa_glsl_parse_state const*)
0000000000323ea0 0000000000000030 t gpu_shader4_derivs_only(_mesa_glsl_parse_state const*)
0000000000323ed0 000000000000003c t v110_derivatives_only(_mesa_glsl_parse_state const*)
0000000000323f10 000000000000003c t v130_or_gpu_shader4_and_tex_shadow_lod(_mesa_glsl_parse_state const*)
0000000000323f50 0000000000000048 t gpu_shader4_integer_derivs_only(_mesa_glsl_parse_state const*)
0000000000323fa0 0000000000000048 t gpu_shader4_array_derivs_only(_mesa_glsl_parse_state const*)
0000000000323ff0 0000000000000058 t v130_derivatives_only(_mesa_glsl_parse_state const*)
0000000000324050 000000000000006c t v400_derivatives_only(_mesa_glsl_parse_state const*)
00000000003240c0 0000000000000054 t gpu_shader4_array_integer_derivs_only(_mesa_glsl_parse_state const*)
0000000000324120 0000000000000060 t es31_not_gs5(_mesa_glsl_parse_state const*)
0000000000324180 0000000000000090 t v130_or_gpu_shader4_and_tex_cube_map_array(_mesa_glsl_parse_state const*)
0000000000324210 0000000000000088 t texture_array_lod(_mesa_glsl_parse_state const*)
00000000003242a0 000000000000006c t tex3d_lod(_mesa_glsl_parse_state const*)
0000000000324310 000000000000005c t v110_lod(_mesa_glsl_parse_state const*)
0000000000324370 000000000000005c t tex1d_lod(_mesa_glsl_parse_state const*)
00000000003243d0 00000000000000e4 t (anonymous namespace)::builtin_builder::_EndStreamPrimitive(bool (*)(_mesa_glsl_parse_state const*), glsl_type const*) [clone .constprop.0]
00000000003244c0 00000000000000e4 t (anonymous namespace)::builtin_builder::_EmitStreamVertex(bool (*)(_mesa_glsl_parse_state const*), glsl_type const*) [clone .constprop.0]
00000000003245b0 000000000000007c t (anonymous namespace)::builtin_builder::_image_samples_prototype(glsl_type const*, unsigned int, unsigned int)
0000000000324630 00000000000000a4 t (anonymous namespace)::builtin_builder::_atomic_intrinsic2(bool (*)(_mesa_glsl_parse_state const*), glsl_type const*, ir_intrinsic_id) [clone .constprop.0]
00000000003246e0 00000000000000b0 t (anonymous namespace)::builtin_builder::_read_invocation_intrinsic(glsl_type const*) [clone .constprop.0]
0000000000324790 00000000000001dc t (anonymous namespace)::builtin_builder::call(ir_function*, ir_variable*, exec_list) [clone .constprop.0] [clone .isra.0]
0000000000324970 0000000000000400 t (anonymous namespace)::builtin_builder::add_image_function(char const*, char const*, ir_function_signature* ((anonymous namespace)::builtin_builder::*)(glsl_type const*, unsigned int, unsigned int), unsigned int, unsigned int, ir_intrinsic_id) [clone .constprop.0]
0000000000324d70 000000000000046c t (anonymous namespace)::builtin_builder::add_image_functions(bool) [clone .constprop.0]
00000000003251e0 0000000000000090 t (anonymous namespace)::builtin_builder::_memory_barrier(char const*, bool (*)(_mesa_glsl_parse_state const*)) [clone .constprop.0]
0000000000325270 00000000000000b8 t (anonymous namespace)::builtin_builder::_atomic_counter_intrinsic1(bool (*)(_mesa_glsl_parse_state const*), ir_intrinsic_id) [clone .constprop.0]
0000000000325330 00000000000000b0 t (anonymous namespace)::builtin_builder::_image_size_prototype(glsl_type const*, unsigned int, unsigned int)
00000000003253e0 00000000000000cc t (anonymous namespace)::builtin_builder::_atomic_intrinsic3(bool (*)(_mesa_glsl_parse_state const*), glsl_type const*, ir_intrinsic_id) [clone .constprop.0]
00000000003254b0 00000000000000e0 t (anonymous namespace)::builtin_builder::_noise2(glsl_type const*) [clone .constprop.0]
0000000000325590 00000000000000e0 t (anonymous namespace)::builtin_builder::_noise1(glsl_type const*) [clone .constprop.0]
0000000000325670 00000000000000e0 t (anonymous namespace)::builtin_builder::_noise4(glsl_type const*) [clone .constprop.0]
0000000000325750 00000000000000e0 t (anonymous namespace)::builtin_builder::_noise3(glsl_type const*) [clone .constprop.0]
0000000000325830 00000000000000d4 t (anonymous namespace)::builtin_builder::unop(bool (*)(_mesa_glsl_parse_state const*), ir_expression_operation, glsl_type const*, glsl_type const*) [clone .constprop.0]
0000000000325910 00000000000000cc t (anonymous namespace)::builtin_builder::_interpolateAtCentroid(glsl_type const*) [clone .constprop.0]
00000000003259e0 00000000000000c8 t (anonymous namespace)::builtin_builder::_doubleBitsToUint64(bool (*)(_mesa_glsl_parse_state const*), glsl_type const*) [clone .constprop.0]
0000000000325ab0 00000000000000c8 t (anonymous namespace)::builtin_builder::_uint64BitsToDouble(bool (*)(_mesa_glsl_parse_state const*), glsl_type const*) [clone .constprop.0]
0000000000325b80 00000000000000c8 t (anonymous namespace)::builtin_builder::_uintBitsToFloat(glsl_type const*) [clone .constprop.0]
0000000000325c50 00000000000000c8 t (anonymous namespace)::builtin_builder::_int64BitsToDouble(bool (*)(_mesa_glsl_parse_state const*), glsl_type const*) [clone .constprop.0]
0000000000325d20 00000000000000c8 t (anonymous namespace)::builtin_builder::_floatBitsToUint(glsl_type const*) [clone .constprop.0]
0000000000325df0 00000000000000c8 t (anonymous namespace)::builtin_builder::_doubleBitsToInt64(bool (*)(_mesa_glsl_parse_state const*), glsl_type const*) [clone .constprop.0]
0000000000325ec0 00000000000000c8 t (anonymous namespace)::builtin_builder::_intBitsToFloat(glsl_type const*) [clone .constprop.0]
0000000000325f90 00000000000000c8 t (anonymous namespace)::builtin_builder::_floatBitsToInt(glsl_type const*) [clone .constprop.0]
0000000000326060 00000000000000e8 t (anonymous namespace)::builtin_builder::_degrees(glsl_type const*) [clone .constprop.0]
0000000000326150 00000000000000e8 t (anonymous namespace)::builtin_builder::_radians(glsl_type const*) [clone .constprop.0]
0000000000326240 000000000000011c t (anonymous namespace)::builtin_builder::_textureQueryLevels(bool (*)(_mesa_glsl_parse_state const*), glsl_type const*) [clone .constprop.0]
0000000000326360 00000000000000f4 t (anonymous namespace)::builtin_builder::_all(glsl_type const*) [clone .constprop.0]
0000000000326460 000000000000011c t (anonymous namespace)::builtin_builder::_textureSamples(bool (*)(_mesa_glsl_parse_state const*), glsl_type const*) [clone .constprop.0]
0000000000326580 00000000000000f4 t (anonymous namespace)::builtin_builder::_any(glsl_type const*) [clone .constprop.0]
0000000000326680 0000000000000138 t (anonymous namespace)::builtin_builder::_shader_clock(bool (*)(_mesa_glsl_parse_state const*), glsl_type const*) [clone .constprop.0]
00000000003267c0 00000000000000e8 t (anonymous namespace)::builtin_builder::_isnan(bool (*)(_mesa_glsl_parse_state const*), glsl_type const*) [clone .constprop.0]
00000000003268b0 0000000000000078 t (anonymous namespace)::builtin_builder::matrix_elt(ir_variable*, int, int) [clone .constprop.0]
0000000000326930 000000000000010c t (anonymous namespace)::builtin_builder::_read_first_invocation(glsl_type const*) [clone .constprop.0]
0000000000326a40 000000000000011c t (anonymous namespace)::builtin_builder::_vote(char const*, bool (*)(_mesa_glsl_parse_state const*)) [clone .constprop.0]
0000000000326b60 00000000000000ec t (anonymous namespace)::builtin_builder::_length(bool (*)(_mesa_glsl_parse_state const*), glsl_type const*) [clone .constprop.0]
0000000000326c50 0000000000000120 t (anonymous namespace)::builtin_builder::_atomic_counter_op(char const*, bool (*)(_mesa_glsl_parse_state const*)) [clone .constprop.0]
0000000000326d70 00000000000000f4 t (anonymous namespace)::builtin_builder::_tan(glsl_type const*) [clone .constprop.0]
0000000000326e70 0000000000000254 t (anonymous namespace)::builtin_builder::asin_expr(ir_variable*, float, float) [clone .constprop.0]
00000000003270d0 00000000000000ec t (anonymous namespace)::builtin_builder::_acos(glsl_type const*) [clone .constprop.0]
00000000003271c0 00000000000000bc t (anonymous namespace)::builtin_builder::_asin(glsl_type const*) [clone .constprop.0]
0000000000327280 0000000000000100 t (anonymous namespace)::builtin_builder::_countTrailingZeros(bool (*)(_mesa_glsl_parse_state const*), glsl_type const*) [clone .constprop.0]
0000000000327380 0000000000000120 t (anonymous namespace)::builtin_builder::_interpolateAtSample(glsl_type const*) [clone .constprop.0]
00000000003274a0 0000000000000120 t (anonymous namespace)::builtin_builder::_interpolateAtOffset(glsl_type const*) [clone .constprop.0]
00000000003275c0 0000000000000140 t (anonymous namespace)::builtin_builder::_atomic_op2(char const*, bool (*)(_mesa_glsl_parse_state const*), glsl_type const*) [clone .constprop.0]
0000000000327700 0000000000000148 t (anonymous namespace)::builtin_builder::_read_invocation(glsl_type const*) [clone .constprop.0]
0000000000327850 0000000000000104 t (anonymous namespace)::builtin_builder::_fwidthFine(glsl_type const*) [clone .constprop.0]
0000000000327960 0000000000000104 t (anonymous namespace)::builtin_builder::_fwidthCoarse(glsl_type const*) [clone .constprop.0]
0000000000327a70 0000000000000104 t (anonymous namespace)::builtin_builder::_fwidth(glsl_type const*) [clone .constprop.0]
0000000000327b80 0000000000000118 t (anonymous namespace)::builtin_builder::_determinant_mat2(bool (*)(_mesa_glsl_parse_state const*), glsl_type const*) [clone .constprop.0]
0000000000327ca0 0000000000000160 t (anonymous namespace)::builtin_builder::_textureSamplesIdentical(bool (*)(_mesa_glsl_parse_state const*), glsl_type const*, glsl_type const*) [clone .constprop.0]
0000000000327e00 0000000000000160 t (anonymous namespace)::builtin_builder::_textureQueryLod(bool (*)(_mesa_glsl_parse_state const*), glsl_type const*, glsl_type const*) [clone .constprop.0]
0000000000327f60 0000000000000164 t (anonymous namespace)::builtin_builder::_isinf(bool (*)(_mesa_glsl_parse_state const*), glsl_type const*) [clone .constprop.0]
00000000003280d0 0000000000000120 t (anonymous namespace)::builtin_builder::_sinh(glsl_type const*) [clone .constprop.0]
00000000003281f0 0000000000000168 t (anonymous namespace)::builtin_builder::_atomic_op3(char const*, bool (*)(_mesa_glsl_parse_state const*), glsl_type const*) [clone .constprop.0]
0000000000328360 0000000000000120 t (anonymous namespace)::builtin_builder::_cosh(glsl_type const*) [clone .constprop.0]
0000000000328480 0000000000000178 t (anonymous namespace)::builtin_builder::_atomic_counter_op2(char const*, bool (*)(_mesa_glsl_parse_state const*)) [clone .constprop.0]
0000000000328600 0000000000000160 t (anonymous namespace)::builtin_builder::_mix_sel(bool (*)(_mesa_glsl_parse_state const*), glsl_type const*, glsl_type const*) [clone .constprop.0]
0000000000328760 0000000000000158 t (anonymous namespace)::builtin_builder::_dfrexp(glsl_type const*, glsl_type const*) [clone .constprop.0]
00000000003288c0 0000000000000168 t (anonymous namespace)::builtin_builder::_clamp(bool (*)(_mesa_glsl_parse_state const*), glsl_type const*, glsl_type const*) [clone .constprop.0]
0000000000328a30 0000000000000168 t (anonymous namespace)::builtin_builder::_mix_lrp(bool (*)(_mesa_glsl_parse_state const*), glsl_type const*, glsl_type const*) [clone .constprop.0]
0000000000328ba0 000000000000015c t (anonymous namespace)::builtin_builder::_fma(bool (*)(_mesa_glsl_parse_state const*), glsl_type const*) [clone .constprop.0]
0000000000328d00 0000000000000164 t (anonymous namespace)::builtin_builder::_max3(glsl_type const*) [clone .constprop.0]
0000000000328e70 0000000000000164 t (anonymous namespace)::builtin_builder::_min3(glsl_type const*) [clone .constprop.0]
0000000000328fe0 0000000000000144 t (anonymous namespace)::builtin_builder::_acosh(glsl_type const*) [clone .constprop.0]
0000000000329130 000000000000015c t (anonymous namespace)::builtin_builder::_normalize(bool (*)(_mesa_glsl_parse_state const*), glsl_type const*) [clone .constprop.0]
0000000000329290 0000000000000174 t (anonymous namespace)::builtin_builder::binop(bool (*)(_mesa_glsl_parse_state const*), ir_expression_operation, glsl_type const*, glsl_type const*, glsl_type const*, bool) [clone .constprop.0]
0000000000329410 0000000000000090 t (anonymous namespace)::builtin_builder::_absoluteDifference(bool (*)(_mesa_glsl_parse_state const*), glsl_type const*) [clone .constprop.0]
00000000003294a0 000000000000006c t (anonymous namespace)::builtin_builder::_dot(bool (*)(_mesa_glsl_parse_state const*), glsl_type const*) [clone .constprop.0]
0000000000329510 000000000000016c t (anonymous namespace)::builtin_builder::_atanh(glsl_type const*) [clone .constprop.0]
0000000000329680 00000000000001ec t (anonymous namespace)::builtin_builder::_transpose(bool (*)(_mesa_glsl_parse_state const*), glsl_type const*) [clone .constprop.0]
0000000000329870 0000000000000184 t (anonymous namespace)::builtin_builder::_asinh(glsl_type const*) [clone .constprop.0]
0000000000329a00 00000000000001c0 t (anonymous namespace)::builtin_builder::_uaddCarry(glsl_type const*) [clone .constprop.0]
0000000000329bc0 00000000000001c0 t (anonymous namespace)::builtin_builder::_usubBorrow(glsl_type const*) [clone .constprop.0]
0000000000329d80 00000000000001ac t (anonymous namespace)::builtin_builder::_cross(bool (*)(_mesa_glsl_parse_state const*), glsl_type const*) [clone .constprop.0]
0000000000329f30 00000000000001b0 t (anonymous namespace)::builtin_builder::_reflect(bool (*)(_mesa_glsl_parse_state const*), glsl_type const*) [clone .constprop.0]
000000000032a0e0 0000000000000204 t (anonymous namespace)::builtin_builder::_matrixCompMult(bool (*)(_mesa_glsl_parse_state const*), glsl_type const*) [clone .constprop.0]
000000000032a2f0 00000000000001dc t (anonymous namespace)::builtin_builder::_modf(bool (*)(_mesa_glsl_parse_state const*), glsl_type const*) [clone .constprop.0]
000000000032a4d0 00000000000001e8 t (anonymous namespace)::builtin_builder::_faceforward(bool (*)(_mesa_glsl_parse_state const*), glsl_type const*) [clone .constprop.0]
000000000032a6c0 00000000000001f0 t (anonymous namespace)::builtin_builder::_bitfieldExtract(glsl_type const*) [clone .constprop.0]
000000000032a8b0 00000000000001e4 t (anonymous namespace)::builtin_builder::_mid3(glsl_type const*) [clone .constprop.0]
000000000032aaa0 0000000000000234 t (anonymous namespace)::builtin_builder::_bitfieldInsert(glsl_type const*) [clone .constprop.0]
000000000032ace0 0000000000000580 t (anonymous namespace)::builtin_builder::do_atan(ir_builder::ir_factory&, glsl_type const*, ir_variable*, ir_builder::operand) [clone .constprop.0]
000000000032b260 0000000000000110 t (anonymous namespace)::builtin_builder::_atan(glsl_type const*) [clone .constprop.0]
000000000032b370 0000000000000228 t (anonymous namespace)::builtin_builder::_distance(bool (*)(_mesa_glsl_parse_state const*), glsl_type const*) [clone .constprop.0]
000000000032b5a0 0000000000000274 t (anonymous namespace)::builtin_builder::_atomic_counter_op1(char const*, bool (*)(_mesa_glsl_parse_state const*)) [clone .constprop.0]
000000000032b820 0000000000000234 t (anonymous namespace)::builtin_builder::_tanh(glsl_type const*) [clone .constprop.0]
000000000032ba60 00000000000001d4 t (anonymous namespace)::builtin_builder::_textureSize(bool (*)(_mesa_glsl_parse_state const*), glsl_type const*, glsl_type const*) [clone .constprop.0]
000000000032bc40 0000000000000274 t (anonymous namespace)::builtin_builder::_determinant_mat3(bool (*)(_mesa_glsl_parse_state const*), glsl_type const*) [clone .constprop.0]
000000000032bec0 00000000000003a8 t (anonymous namespace)::builtin_builder::_smoothstep(bool (*)(_mesa_glsl_parse_state const*), glsl_type const*, glsl_type const*) [clone .constprop.0]
000000000032c270 0000000000000470 t (anonymous namespace)::builtin_builder::_mulExtended(glsl_type const*) [clone .constprop.0]
000000000032c6e0 00000000000004c8 t (anonymous namespace)::builtin_builder::_refract(bool (*)(_mesa_glsl_parse_state const*), glsl_type const*) [clone .constprop.0]
000000000032cbb0 00000000000004e8 t (anonymous namespace)::builtin_builder::_frexp(glsl_type const*, glsl_type const*) [clone .constprop.0]
000000000032d0a0 000000000000023c t (anonymous namespace)::builtin_builder::_outerProduct(bool (*)(_mesa_glsl_parse_state const*), glsl_type const*) [clone .constprop.0]
000000000032d2e0 00000000000002f8 t (anonymous namespace)::builtin_builder::_inverse_mat2(bool (*)(_mesa_glsl_parse_state const*), glsl_type const*) [clone .constprop.0]
000000000032d5e0 0000000000000748 t (anonymous namespace)::builtin_builder::_atan2(glsl_type const*) [clone .constprop.0]
000000000032dd30 0000000000000274 t (anonymous namespace)::builtin_builder::_image_prototype(glsl_type const*, unsigned int, unsigned int)
000000000032dfb0 000000000000025c t (anonymous namespace)::builtin_builder::_textureCubeArrayShadow(ir_texture_opcode, bool (*)(_mesa_glsl_parse_state const*), glsl_type const*) [clone .constprop.0]
000000000032e210 00000000000004fc t (anonymous namespace)::builtin_builder::_step(bool (*)(_mesa_glsl_parse_state const*), glsl_type const*, glsl_type const*) [clone .constprop.0]
000000000032e710 0000000000000e28 t (anonymous namespace)::builtin_builder::create_intrinsics() [clone .constprop.0]
000000000032f540 000000000000031c t (anonymous namespace)::builtin_builder::_texelFetch(bool (*)(_mesa_glsl_parse_state const*), glsl_type const*, glsl_type const*, glsl_type const*, glsl_type const*) [clone .constprop.0]
000000000032f860 0000000000000a50 t (anonymous namespace)::builtin_builder::_inverse_mat3(bool (*)(_mesa_glsl_parse_state const*), glsl_type const*) [clone .constprop.0]
00000000003302b0 000000000000064c t (anonymous namespace)::builtin_builder::_texture(ir_texture_opcode, bool (*)(_mesa_glsl_parse_state const*), glsl_type const*, glsl_type const*, glsl_type const*, int) [clone .constprop.0]
0000000000330900 0000000000001624 t (anonymous namespace)::builtin_builder::_determinant_mat4(bool (*)(_mesa_glsl_parse_state const*), glsl_type const*) [clone .constprop.0]
0000000000331f30 00000000000025dc t (anonymous namespace)::builtin_builder::_inverse_mat4(bool (*)(_mesa_glsl_parse_state const*), glsl_type const*) [clone .constprop.0]
0000000000334510 0000000000016530 t _mesa_glsl_builtin_functions_init_or_ref
000000000034aa40 0000000000000078 t _mesa_glsl_builtin_functions_decref
000000000034aac0 00000000000000a4 t _mesa_glsl_find_builtin_function(_mesa_glsl_parse_state*, char const*, exec_list*)
000000000034ab70 0000000000000094 t _mesa_glsl_has_builtin_function(_mesa_glsl_parse_state*, char const*)
000000000034ac10 000000000000000c t _mesa_glsl_get_builtin_function_shader()
000000000034ac20 0000000000000064 t _mesa_get_main_function_signature(glsl_symbol_table*)
000000000034ac90 00000000000003cc t generate_ir::umul64(void*, bool (*)(_mesa_glsl_parse_state const*))
000000000034b060 00000000000002b8 t generate_ir::sign64(void*, bool (*)(_mesa_glsl_parse_state const*))
000000000034b320 0000000000001494 t generate_ir::udiv64(void*, bool (*)(_mesa_glsl_parse_state const*))
000000000034c7c0 000000000000184c t generate_ir::idiv64(void*, bool (*)(_mesa_glsl_parse_state const*))
000000000034e010 0000000000001570 t generate_ir::umod64(void*, bool (*)(_mesa_glsl_parse_state const*))
000000000034f580 0000000000001940 t generate_ir::imod64(void*, bool (*)(_mesa_glsl_parse_state const*))
0000000000350ec0 0000000000000034 t has_AMD_conservative_depth(gl_context const*, gl_api, unsigned char)
0000000000350f00 0000000000000034 t has_AMD_gpu_shader_int64(gl_context const*, gl_api, unsigned char)
0000000000350f40 0000000000000034 t has_AMD_shader_stencil_export(gl_context const*, gl_api, unsigned char)
0000000000350f80 0000000000000034 t has_AMD_shader_trinary_minmax(gl_context const*, gl_api, unsigned char)
0000000000350fc0 0000000000000034 t has_AMD_texture_texture4(gl_context const*, gl_api, unsigned char)
0000000000351000 0000000000000034 t has_AMD_vertex_shader_layer(gl_context const*, gl_api, unsigned char)
0000000000351040 0000000000000034 t has_AMD_vertex_shader_viewport_index(gl_context const*, gl_api, unsigned char)
0000000000351080 0000000000000034 t has_ANDROID_extension_pack_es31a(gl_context const*, gl_api, unsigned char)
00000000003510c0 0000000000000034 t has_ARB_ES3_1_compatibility(gl_context const*, gl_api, unsigned char)
0000000000351100 0000000000000034 t has_ARB_ES3_2_compatibility(gl_context const*, gl_api, unsigned char)
0000000000351140 0000000000000034 t has_ARB_arrays_of_arrays(gl_context const*, gl_api, unsigned char)
0000000000351180 0000000000000034 t has_ARB_bindless_texture(gl_context const*, gl_api, unsigned char)
00000000003511c0 0000000000000034 t has_ARB_compatibility(gl_context const*, gl_api, unsigned char)
0000000000351200 0000000000000034 t has_ARB_compute_shader(gl_context const*, gl_api, unsigned char)
0000000000351240 0000000000000034 t has_ARB_compute_variable_group_size(gl_context const*, gl_api, unsigned char)
0000000000351280 0000000000000034 t has_ARB_conservative_depth(gl_context const*, gl_api, unsigned char)
00000000003512c0 0000000000000034 t has_ARB_cull_distance(gl_context const*, gl_api, unsigned char)
0000000000351300 0000000000000034 t has_ARB_derivative_control(gl_context const*, gl_api, unsigned char)
0000000000351340 0000000000000034 t has_ARB_draw_buffers(gl_context const*, gl_api, unsigned char)
0000000000351380 0000000000000034 t has_ARB_draw_instanced(gl_context const*, gl_api, unsigned char)
00000000003513c0 0000000000000034 t has_ARB_enhanced_layouts(gl_context const*, gl_api, unsigned char)
0000000000351400 0000000000000034 t has_ARB_explicit_attrib_location(gl_context const*, gl_api, unsigned char)
0000000000351440 0000000000000034 t has_ARB_explicit_uniform_location(gl_context const*, gl_api, unsigned char)
0000000000351480 0000000000000034 t has_ARB_fragment_coord_conventions(gl_context const*, gl_api, unsigned char)
00000000003514c0 0000000000000034 t has_ARB_fragment_layer_viewport(gl_context const*, gl_api, unsigned char)
0000000000351500 0000000000000034 t has_ARB_fragment_shader_interlock(gl_context const*, gl_api, unsigned char)
0000000000351540 0000000000000034 t has_ARB_gpu_shader5(gl_context const*, gl_api, unsigned char)
0000000000351580 0000000000000034 t has_ARB_gpu_shader_fp64(gl_context const*, gl_api, unsigned char)
00000000003515c0 0000000000000034 t has_ARB_gpu_shader_int64(gl_context const*, gl_api, unsigned char)
0000000000351600 0000000000000034 t has_ARB_post_depth_coverage(gl_context const*, gl_api, unsigned char)
0000000000351640 0000000000000034 t has_ARB_sample_shading(gl_context const*, gl_api, unsigned char)
0000000000351680 0000000000000034 t has_ARB_separate_shader_objects(gl_context const*, gl_api, unsigned char)
00000000003516c0 0000000000000034 t has_ARB_shader_atomic_counter_ops(gl_context const*, gl_api, unsigned char)
0000000000351700 0000000000000034 t has_ARB_shader_atomic_counters(gl_context const*, gl_api, unsigned char)
0000000000351740 0000000000000034 t has_ARB_shader_ballot(gl_context const*, gl_api, unsigned char)
0000000000351780 0000000000000034 t has_ARB_shader_bit_encoding(gl_context const*, gl_api, unsigned char)
00000000003517c0 0000000000000034 t has_ARB_shader_clock(gl_context const*, gl_api, unsigned char)
0000000000351800 0000000000000034 t has_ARB_shader_draw_parameters(gl_context const*, gl_api, unsigned char)
0000000000351840 0000000000000034 t has_ARB_shader_group_vote(gl_context const*, gl_api, unsigned char)
0000000000351880 0000000000000034 t has_ARB_shader_image_load_store(gl_context const*, gl_api, unsigned char)
00000000003518c0 0000000000000034 t has_ARB_shader_image_size(gl_context const*, gl_api, unsigned char)
0000000000351900 0000000000000034 t has_ARB_shader_precision(gl_context const*, gl_api, unsigned char)
0000000000351940 0000000000000034 t has_ARB_shader_stencil_export(gl_context const*, gl_api, unsigned char)
0000000000351980 0000000000000034 t has_ARB_shader_storage_buffer_object(gl_context const*, gl_api, unsigned char)
00000000003519c0 0000000000000034 t has_ARB_shader_subroutine(gl_context const*, gl_api, unsigned char)
0000000000351a00 0000000000000034 t has_ARB_shader_texture_image_samples(gl_context const*, gl_api, unsigned char)
0000000000351a40 0000000000000034 t has_ARB_shader_texture_lod(gl_context const*, gl_api, unsigned char)
0000000000351a80 0000000000000034 t has_ARB_shader_viewport_layer_array(gl_context const*, gl_api, unsigned char)
0000000000351ac0 0000000000000034 t has_ARB_shading_language_420pack(gl_context const*, gl_api, unsigned char)
0000000000351b00 0000000000000034 t has_ARB_shading_language_include(gl_context const*, gl_api, unsigned char)
0000000000351b40 0000000000000034 t has_ARB_shading_language_packing(gl_context const*, gl_api, unsigned char)
0000000000351b80 0000000000000034 t has_ARB_tessellation_shader(gl_context const*, gl_api, unsigned char)
0000000000351bc0 0000000000000034 t has_ARB_texture_cube_map_array(gl_context const*, gl_api, unsigned char)
0000000000351c00 0000000000000034 t has_ARB_texture_gather(gl_context const*, gl_api, unsigned char)
0000000000351c40 0000000000000034 t has_ARB_texture_multisample(gl_context const*, gl_api, unsigned char)
0000000000351c80 0000000000000034 t has_ARB_texture_query_levels(gl_context const*, gl_api, unsigned char)
0000000000351cc0 0000000000000034 t has_ARB_texture_query_lod(gl_context const*, gl_api, unsigned char)
0000000000351d00 0000000000000034 t has_ARB_texture_rectangle(gl_context const*, gl_api, unsigned char)
0000000000351d40 0000000000000038 t has_ARB_uniform_buffer_object(gl_context const*, gl_api, unsigned char)
0000000000351d80 0000000000000038 t has_ARB_vertex_attrib_64bit(gl_context const*, gl_api, unsigned char)
0000000000351dc0 0000000000000038 t has_ARB_viewport_array(gl_context const*, gl_api, unsigned char)
0000000000351e00 0000000000000038 t has_EXT_blend_func_extended(gl_context const*, gl_api, unsigned char)
0000000000351e40 0000000000000038 t has_EXT_clip_cull_distance(gl_context const*, gl_api, unsigned char)
0000000000351e80 0000000000000038 t has_EXT_demote_to_helper_invocation(gl_context const*, gl_api, unsigned char)
0000000000351ec0 0000000000000038 t has_EXT_draw_buffers(gl_context const*, gl_api, unsigned char)
0000000000351f00 0000000000000038 t has_EXT_draw_instanced(gl_context const*, gl_api, unsigned char)
0000000000351f40 0000000000000038 t has_EXT_frag_depth(gl_context const*, gl_api, unsigned char)
0000000000351f80 0000000000000038 t has_EXT_geometry_point_size(gl_context const*, gl_api, unsigned char)
0000000000351fc0 0000000000000038 t has_EXT_geometry_shader(gl_context const*, gl_api, unsigned char)
0000000000352000 0000000000000038 t has_EXT_gpu_shader4(gl_context const*, gl_api, unsigned char)
0000000000352040 0000000000000038 t has_EXT_gpu_shader5(gl_context const*, gl_api, unsigned char)
0000000000352080 0000000000000038 t has_EXT_primitive_bounding_box(gl_context const*, gl_api, unsigned char)
00000000003520c0 0000000000000038 t has_EXT_separate_shader_objects(gl_context const*, gl_api, unsigned char)
0000000000352100 0000000000000038 t has_EXT_shader_framebuffer_fetch(gl_context const*, gl_api, unsigned char)
0000000000352140 0000000000000038 t has_EXT_shader_framebuffer_fetch_non_coherent(gl_context const*, gl_api, unsigned char)
0000000000352180 0000000000000038 t has_EXT_shader_image_load_formatted(gl_context const*, gl_api, unsigned char)
00000000003521c0 0000000000000038 t has_EXT_shader_image_load_store(gl_context const*, gl_api, unsigned char)
0000000000352200 0000000000000038 t has_EXT_shader_implicit_conversions(gl_context const*, gl_api, unsigned char)
0000000000352240 0000000000000038 t has_EXT_shader_integer_mix(gl_context const*, gl_api, unsigned char)
0000000000352280 0000000000000038 t has_EXT_shader_io_blocks(gl_context const*, gl_api, unsigned char)
00000000003522c0 0000000000000038 t has_EXT_shader_samples_identical(gl_context const*, gl_api, unsigned char)
0000000000352300 0000000000000038 t has_EXT_tessellation_point_size(gl_context const*, gl_api, unsigned char)
0000000000352340 0000000000000038 t has_EXT_tessellation_shader(gl_context const*, gl_api, unsigned char)
0000000000352380 0000000000000038 t has_EXT_texture_array(gl_context const*, gl_api, unsigned char)
00000000003523c0 0000000000000038 t has_EXT_texture_buffer(gl_context const*, gl_api, unsigned char)
0000000000352400 0000000000000038 t has_EXT_texture_cube_map_array(gl_context const*, gl_api, unsigned char)
0000000000352440 0000000000000038 t has_EXT_texture_query_lod(gl_context const*, gl_api, unsigned char)
0000000000352480 0000000000000038 t has_EXT_texture_shadow_lod(gl_context const*, gl_api, unsigned char)
00000000003524c0 0000000000000038 t has_INTEL_conservative_rasterization(gl_context const*, gl_api, unsigned char)
0000000000352500 0000000000000038 t has_INTEL_shader_atomic_float_minmax(gl_context const*, gl_api, unsigned char)
0000000000352540 0000000000000038 t has_INTEL_shader_integer_functions2(gl_context const*, gl_api, unsigned char)
0000000000352580 0000000000000038 t has_KHR_blend_equation_advanced(gl_context const*, gl_api, unsigned char)
00000000003525c0 0000000000000038 t has_MESA_shader_integer_functions(gl_context const*, gl_api, unsigned char)
0000000000352600 0000000000000038 t has_NV_compute_shader_derivatives(gl_context const*, gl_api, unsigned char)
0000000000352640 0000000000000038 t has_NV_fragment_shader_interlock(gl_context const*, gl_api, unsigned char)
0000000000352680 0000000000000038 t has_NV_image_formats(gl_context const*, gl_api, unsigned char)
00000000003526c0 0000000000000038 t has_NV_shader_atomic_float(gl_context const*, gl_api, unsigned char)
0000000000352700 0000000000000038 t has_NV_viewport_array2(gl_context const*, gl_api, unsigned char)
0000000000352740 0000000000000038 t has_OES_EGL_image_external(gl_context const*, gl_api, unsigned char)
0000000000352780 0000000000000038 t has_OES_EGL_image_external_essl3(gl_context const*, gl_api, unsigned char)
00000000003527c0 0000000000000038 t has_OES_geometry_point_size(gl_context const*, gl_api, unsigned char)
0000000000352800 0000000000000038 t has_OES_geometry_shader(gl_context const*, gl_api, unsigned char)
0000000000352840 0000000000000038 t has_OES_gpu_shader5(gl_context const*, gl_api, unsigned char)
0000000000352880 0000000000000038 t has_OES_primitive_bounding_box(gl_context const*, gl_api, unsigned char)
00000000003528c0 0000000000000038 t has_OES_sample_variables(gl_context const*, gl_api, unsigned char)
0000000000352900 0000000000000038 t has_OES_shader_image_atomic(gl_context const*, gl_api, unsigned char)
0000000000352940 0000000000000038 t has_OES_shader_io_blocks(gl_context const*, gl_api, unsigned char)
0000000000352980 0000000000000038 t has_OES_shader_multisample_interpolation(gl_context const*, gl_api, unsigned char)
00000000003529c0 0000000000000038 t has_OES_standard_derivatives(gl_context const*, gl_api, unsigned char)
0000000000352a00 0000000000000038 t has_OES_tessellation_point_size(gl_context const*, gl_api, unsigned char)
0000000000352a40 0000000000000038 t has_OES_tessellation_shader(gl_context const*, gl_api, unsigned char)
0000000000352a80 0000000000000038 t has_OES_texture_3D(gl_context const*, gl_api, unsigned char)
0000000000352ac0 0000000000000038 t has_OES_texture_buffer(gl_context const*, gl_api, unsigned char)
0000000000352b00 0000000000000038 t has_OES_texture_cube_map_array(gl_context const*, gl_api, unsigned char)
0000000000352b40 0000000000000038 t has_OES_texture_storage_multisample_2d_array(gl_context const*, gl_api, unsigned char)
0000000000352b80 0000000000000038 t has_OES_viewport_array(gl_context const*, gl_api, unsigned char)
0000000000352bc0 000000000000003c T ast_function_definition::print() const
0000000000352c00 0000000000000050 T ast_case_statement_list::print() const
0000000000352c50 0000000000000108 t add_builtin_defines
0000000000352d60 00000000000000f4 t _mesa_glsl_msg(YYLTYPE const*, _mesa_glsl_parse_state*, unsigned int, char const*, std::__va_list)
0000000000352e60 000000000000000c T ast_node::print() const
0000000000352e70 0000000000000038 T ast_expression_statement::print() const
0000000000352eb0 000000000000000c T ast_demote_statement::print() const
0000000000352ec0 0000000000000084 T ast_selection_statement::print() const
0000000000352f50 0000000000000054 T ast_switch_statement::print() const
0000000000352fb0 000000000000005c T ast_case_label::print() const
0000000000353010 0000000000000120 T ast_iteration_statement::print() const
0000000000353130 0000000000000068 T ast_struct_specifier::print() const
00000000003531a0 0000000000000088 T ast_subroutine_list::print() const
0000000000353230 0000000000000068 T ast_compound_statement::print() const
00000000003532a0 0000000000000044 T ast_switch_body::print() const
00000000003532f0 0000000000000054 T ast_case_label_list::print() const
0000000000353350 0000000000000068 T ast_case_statement::print() const
00000000003533c0 000000000000020c t _mesa_ast_type_qualifier_print(ast_type_qualifier const*)
00000000003535d0 0000000000000034 T ast_fully_specified_type::print() const
0000000000353610 0000000000000070 T ast_declaration::print() const
0000000000353680 00000000000000a8 T ast_jump_statement::print() const
0000000000353730 0000000000000090 T ast_parameter_declarator::print() const
00000000003537c0 00000000000000a8 T ast_function::print() const
0000000000353870 00000000000000fc T ast_declarator_list::print() const
0000000000353970 0000000000000040 t glsl_compute_version_string(void*, bool, unsigned int)
00000000003539b0 0000000000000080 t _mesa_glsl_error(YYLTYPE*, _mesa_glsl_parse_state*, char const*, ...)
0000000000353a30 0000000000000230 t _mesa_glsl_parse_state::check_version(unsigned int, unsigned int, YYLTYPE*, char const*, ...)
0000000000353c60 0000000000000340 t _mesa_glsl_parse_state::process_version_directive(YYLTYPE*, int, char const*)
0000000000353fa0 0000000000000080 t _mesa_glsl_warning(YYLTYPE const*, _mesa_glsl_parse_state*, char const*, ...)
0000000000354020 0000000000000300 t _mesa_glsl_process_extension(char const*, YYLTYPE*, char const*, YYLTYPE*, _mesa_glsl_parse_state*)
0000000000354320 0000000000000780 t _mesa_glsl_parse_state::_mesa_glsl_parse_state(gl_context*, gl_shader_stage, void*)
0000000000354320 0000000000000780 T _mesa_glsl_parse_state::_mesa_glsl_parse_state(gl_context*, gl_shader_stage, void*)
0000000000354aa0 000000000000019c t _mesa_ast_set_aggregate_type(glsl_type const*, ast_expression*)
0000000000354c40 000000000000043c t _mesa_ast_process_interface_block(YYLTYPE*, _mesa_glsl_parse_state*, ast_interface_block*, ast_type_qualifier const&)
0000000000355080 000000000000001c T ast_node::ast_node()
0000000000355080 000000000000001c t ast_node::ast_node()
00000000003550a0 0000000000000050 t ast_compound_statement::ast_compound_statement(int, ast_node*)
00000000003550a0 0000000000000050 T ast_compound_statement::ast_compound_statement(int, ast_node*)
00000000003550f0 0000000000000498 T ast_expression::print() const
0000000000355590 0000000000000048 t ast_expression::ast_expression(int, ast_expression*, ast_expression*, ast_expression*)
0000000000355590 0000000000000048 t ast_expression::ast_expression(int, ast_expression*, ast_expression*, ast_expression*)
00000000003555e0 0000000000000020 t ast_expression_statement::ast_expression_statement(ast_expression*)
00000000003555e0 0000000000000020 T ast_expression_statement::ast_expression_statement(ast_expression*)
0000000000355600 000000000000003c t ast_function::ast_function()
0000000000355600 000000000000003c T ast_function::ast_function()
0000000000355640 0000000000000024 t ast_declaration::ast_declaration(char const*, ast_array_specifier*, ast_expression*)
0000000000355640 0000000000000024 T ast_declaration::ast_declaration(char const*, ast_array_specifier*, ast_expression*)
0000000000355670 0000000000000038 t ast_declarator_list::ast_declarator_list(ast_fully_specified_type*)
0000000000355670 0000000000000038 T ast_declarator_list::ast_declarator_list(ast_fully_specified_type*)
00000000003556b0 000000000000002c t ast_jump_statement::ast_jump_statement(int, ast_expression*)
00000000003556b0 000000000000002c T ast_jump_statement::ast_jump_statement(int, ast_expression*)
00000000003556e0 0000000000000024 t ast_selection_statement::ast_selection_statement(ast_expression*, ast_node*, ast_node*)
00000000003556e0 0000000000000024 T ast_selection_statement::ast_selection_statement(ast_expression*, ast_node*, ast_node*)
0000000000355710 0000000000000020 t ast_switch_statement::ast_switch_statement(ast_expression*, ast_node*)
0000000000355710 0000000000000020 T ast_switch_statement::ast_switch_statement(ast_expression*, ast_node*)
0000000000355730 0000000000000020 t ast_switch_body::ast_switch_body(ast_case_statement_list*)
0000000000355730 0000000000000020 T ast_switch_body::ast_switch_body(ast_case_statement_list*)
0000000000355750 0000000000000020 t ast_case_label::ast_case_label(ast_expression*)
0000000000355750 0000000000000020 T ast_case_label::ast_case_label(ast_expression*)
0000000000355770 0000000000000030 t ast_case_label_list::ast_case_label_list()
0000000000355770 0000000000000030 T ast_case_label_list::ast_case_label_list()
00000000003557a0 0000000000000034 t ast_case_statement::ast_case_statement(ast_case_label_list*)
00000000003557a0 0000000000000034 T ast_case_statement::ast_case_statement(ast_case_label_list*)
00000000003557e0 0000000000000030 t ast_case_statement_list::ast_case_statement_list()
00000000003557e0 0000000000000030 T ast_case_statement_list::ast_case_statement_list()
0000000000355810 0000000000000028 t ast_iteration_statement::ast_iteration_statement(int, ast_node*, ast_node*, ast_expression*, ast_node*)
0000000000355810 0000000000000028 T ast_iteration_statement::ast_iteration_statement(int, ast_node*, ast_node*, ast_expression*, ast_node*)
0000000000355840 0000000000000058 t ast_struct_specifier::ast_struct_specifier(char const*, ast_declarator_list*)
0000000000355840 0000000000000058 T ast_struct_specifier::ast_struct_specifier(char const*, ast_declarator_list*)
00000000003558a0 00000000000000fc t _mesa_glsl_copy_symbols_from_table
00000000003559a0 000000000000048c t do_common_optimization(exec_list*, bool, bool, gl_shader_compiler_options const*, bool)
0000000000355e30 0000000000000a44 t _mesa_glsl_compile_shader
0000000000356880 0000000000000044 t glsl_symbol_table::glsl_symbol_table()
0000000000356880 0000000000000044 T glsl_symbol_table::glsl_symbol_table()
00000000003568d0 0000000000000028 t glsl_symbol_table::~glsl_symbol_table()
00000000003568d0 0000000000000028 T glsl_symbol_table::~glsl_symbol_table()
0000000000356900 0000000000000008 t glsl_symbol_table::push_scope()
0000000000356910 0000000000000008 t glsl_symbol_table::pop_scope()
0000000000356920 0000000000000020 t glsl_symbol_table::name_declared_this_scope(char const*)
0000000000356940 0000000000000104 t glsl_symbol_table::add_variable(ir_variable*)
0000000000356a50 0000000000000060 t glsl_symbol_table::add_type(char const*, glsl_type const*)
0000000000356ab0 000000000000015c t glsl_symbol_table::add_interface(char const*, glsl_type const*, ir_variable_mode)
0000000000356c10 000000000000009c t glsl_symbol_table::add_function(ir_function*)
0000000000356cb0 00000000000000e4 t glsl_symbol_table::add_default_precision_qualifier(char const*, int)
0000000000356da0 0000000000000020 t glsl_symbol_table::get_variable(char const*)
0000000000356dc0 0000000000000020 t glsl_symbol_table::get_type(char const*)
0000000000356de0 0000000000000090 t glsl_symbol_table::get_interface(char const*, ir_variable_mode)
0000000000356e70 0000000000000020 t glsl_symbol_table::get_function(char const*)
0000000000356e90 000000000000005c t glsl_symbol_table::get_default_precision_qualifier(char const*)
0000000000356ef0 0000000000000020 t glsl_symbol_table::disable_variable(char const*)
0000000000356f10 000000000000002c t glsl_symbol_table::replace_variable(char const*, ir_variable*)
0000000000356f40 000000000000002c t ir_builder::ir_factory::emit(ir_instruction*)
0000000000356f70 000000000000007c t ir_builder::ir_factory::make_temp(glsl_type const*, char const*)
0000000000356ff0 0000000000000058 t ir_builder::assign(ir_builder::deref, ir_builder::operand, ir_builder::operand, int)
0000000000357050 0000000000000064 t ir_builder::assign(ir_builder::deref, ir_builder::operand)
00000000003570c0 0000000000000054 t ir_builder::assign(ir_builder::deref, ir_builder::operand, int)
0000000000357120 0000000000000068 t ir_builder::assign(ir_builder::deref, ir_builder::operand, ir_builder::operand)
0000000000357190 0000000000000048 t ir_builder::ret(ir_builder::operand)
00000000003571e0 000000000000005c t ir_builder::swizzle(ir_builder::operand, int, int)
0000000000357240 00000000000000a0 t ir_builder::swizzle_for_size(ir_builder::operand, unsigned int)
00000000003572e0 000000000000004c t ir_builder::swizzle_xxxx(ir_builder::operand)
0000000000357330 000000000000004c t ir_builder::swizzle_x(ir_builder::operand)
0000000000357380 000000000000004c t ir_builder::swizzle_y(ir_builder::operand)
00000000003573d0 000000000000004c t ir_builder::swizzle_z(ir_builder::operand)
0000000000357420 000000000000004c t ir_builder::swizzle_w(ir_builder::operand)
0000000000357470 000000000000004c t ir_builder::swizzle_xy(ir_builder::operand)
00000000003574c0 000000000000004c t ir_builder::swizzle_xyz(ir_builder::operand)
0000000000357510 0000000000000044 t ir_builder::expr(ir_expression_operation, ir_builder::operand)
0000000000357560 0000000000000054 t ir_builder::expr(ir_expression_operation, ir_builder::operand, ir_builder::operand)
00000000003575c0 000000000000005c t ir_builder::expr(ir_expression_operation, ir_builder::operand, ir_builder::operand, ir_builder::operand)
0000000000357620 0000000000000044 t ir_builder::add(ir_builder::operand, ir_builder::operand)
0000000000357670 0000000000000044 t ir_builder::sub(ir_builder::operand, ir_builder::operand)
00000000003576c0 0000000000000044 t ir_builder::min2(ir_builder::operand, ir_builder::operand)
0000000000357710 0000000000000044 t ir_builder::max2(ir_builder::operand, ir_builder::operand)
0000000000357760 0000000000000044 t ir_builder::mul(ir_builder::operand, ir_builder::operand)
00000000003577b0 0000000000000044 t ir_builder::imul_high(ir_builder::operand, ir_builder::operand)
0000000000357800 0000000000000044 t ir_builder::div(ir_builder::operand, ir_builder::operand)
0000000000357850 0000000000000044 t ir_builder::carry(ir_builder::operand, ir_builder::operand)
00000000003578a0 0000000000000044 t ir_builder::borrow(ir_builder::operand, ir_builder::operand)
00000000003578f0 000000000000003c t ir_builder::trunc(ir_builder::operand)
0000000000357930 000000000000003c t ir_builder::round_even(ir_builder::operand)
0000000000357970 000000000000003c t ir_builder::fract(ir_builder::operand)
00000000003579b0 0000000000000084 t ir_builder::dot(ir_builder::operand, ir_builder::operand)
0000000000357a40 0000000000000074 t ir_builder::clamp(ir_builder::operand, ir_builder::operand, ir_builder::operand)
0000000000357ac0 000000000000003c t ir_builder::saturate(ir_builder::operand)
0000000000357b00 000000000000003c t ir_builder::abs(ir_builder::operand)
0000000000357b40 000000000000003c t ir_builder::neg(ir_builder::operand)
0000000000357b80 000000000000003c t ir_builder::sin(ir_builder::operand)
0000000000357bc0 000000000000003c t ir_builder::cos(ir_builder::operand)
0000000000357c00 000000000000003c t ir_builder::exp(ir_builder::operand)
0000000000357c40 000000000000003c t ir_builder::rcp(ir_builder::operand)
0000000000357c80 000000000000003c t ir_builder::rsq(ir_builder::operand)
0000000000357cc0 000000000000003c t ir_builder::sqrt(ir_builder::operand)
0000000000357d00 000000000000003c t ir_builder::log(ir_builder::operand)
0000000000357d40 000000000000003c t ir_builder::sign(ir_builder::operand)
0000000000357d80 000000000000003c t ir_builder::subr_to_int(ir_builder::operand)
0000000000357dc0 0000000000000044 t ir_builder::equal(ir_builder::operand, ir_builder::operand)
0000000000357e10 0000000000000044 t ir_builder::nequal(ir_builder::operand, ir_builder::operand)
0000000000357e60 0000000000000044 t ir_builder::less(ir_builder::operand, ir_builder::operand)
0000000000357eb0 0000000000000048 t ir_builder::greater(ir_builder::operand, ir_builder::operand)
0000000000357f00 0000000000000048 t ir_builder::lequal(ir_builder::operand, ir_builder::operand)
0000000000357f50 0000000000000044 t ir_builder::gequal(ir_builder::operand, ir_builder::operand)
0000000000357fa0 000000000000003c t ir_builder::logic_not(ir_builder::operand)
0000000000357fe0 0000000000000044 t ir_builder::logic_and(ir_builder::operand, ir_builder::operand)
0000000000358030 0000000000000044 t ir_builder::logic_or(ir_builder::operand, ir_builder::operand)
0000000000358080 000000000000003c t ir_builder::bit_not(ir_builder::operand)
00000000003580c0 0000000000000044 t ir_builder::bit_and(ir_builder::operand, ir_builder::operand)
0000000000358110 0000000000000044 t ir_builder::bit_or(ir_builder::operand, ir_builder::operand)
0000000000358160 0000000000000044 t ir_builder::lshift(ir_builder::operand, ir_builder::operand)
00000000003581b0 0000000000000044 t ir_builder::rshift(ir_builder::operand, ir_builder::operand)
0000000000358200 000000000000003c t ir_builder::f2i(ir_builder::operand)
0000000000358240 000000000000003c t ir_builder::bitcast_f2i(ir_builder::operand)
0000000000358280 000000000000003c t ir_builder::i2f(ir_builder::operand)
00000000003582c0 000000000000003c t ir_builder::bitcast_i2f(ir_builder::operand)
0000000000358300 000000000000003c t ir_builder::i2u(ir_builder::operand)
0000000000358340 000000000000003c t ir_builder::u2i(ir_builder::operand)
0000000000358380 000000000000003c t ir_builder::f2u(ir_builder::operand)
00000000003583c0 000000000000003c t ir_builder::bitcast_f2u(ir_builder::operand)
0000000000358400 000000000000003c t ir_builder::u2f(ir_builder::operand)
0000000000358440 000000000000003c t ir_builder::bitcast_u2f(ir_builder::operand)
0000000000358480 000000000000003c t ir_builder::b2i(ir_builder::operand)
00000000003584c0 000000000000003c t ir_builder::b2f(ir_builder::operand)
0000000000358500 000000000000003c t ir_builder::bitcast_d2i64(ir_builder::operand)
0000000000358540 000000000000003c t ir_builder::bitcast_d2u64(ir_builder::operand)
0000000000358580 000000000000003c t ir_builder::bitcast_i642d(ir_builder::operand)
00000000003585c0 000000000000003c t ir_builder::bitcast_u642d(ir_builder::operand)
0000000000358600 000000000000003c t ir_builder::interpolate_at_centroid(ir_builder::operand)
0000000000358640 0000000000000044 t ir_builder::interpolate_at_offset(ir_builder::operand, ir_builder::operand)
0000000000358690 0000000000000044 t ir_builder::interpolate_at_sample(ir_builder::operand, ir_builder::operand)
00000000003586e0 000000000000003c t ir_builder::f2d(ir_builder::operand)
0000000000358720 0000000000000054 t ir_builder::fma(ir_builder::operand, ir_builder::operand, ir_builder::operand)
0000000000358780 0000000000000054 t ir_builder::lrp(ir_builder::operand, ir_builder::operand, ir_builder::operand)
00000000003587e0 0000000000000054 t ir_builder::csel(ir_builder::operand, ir_builder::operand, ir_builder::operand)
0000000000358840 0000000000000054 t ir_builder::bitfield_extract(ir_builder::operand, ir_builder::operand, ir_builder::operand)
00000000003588a0 0000000000000060 t ir_builder::bitfield_insert(ir_builder::operand, ir_builder::operand, ir_builder::operand, ir_builder::operand)
0000000000358900 0000000000000088 t ir_builder::if_tree(ir_builder::operand, ir_instruction*)
0000000000358990 00000000000000ac t ir_builder::if_tree(ir_builder::operand, ir_instruction*, ir_instruction*)
0000000000358a40 0000000000000004 W ir_visitor::visit(ir_rvalue*)
0000000000358a50 0000000000000004 W ir_control_flow_visitor::visit(ir_variable*)
0000000000358a60 0000000000000004 W ir_control_flow_visitor::visit(ir_texture*)
0000000000358a70 0000000000000004 W ir_control_flow_visitor::visit(ir_swizzle*)
0000000000358a80 0000000000000004 W ir_control_flow_visitor::visit(ir_dereference_variable*)
0000000000358a90 0000000000000004 W ir_control_flow_visitor::visit(ir_dereference_array*)
0000000000358aa0 0000000000000004 W ir_control_flow_visitor::visit(ir_dereference_record*)
0000000000358ab0 0000000000000004 W ir_control_flow_visitor::visit(ir_assignment*)
0000000000358ac0 0000000000000004 W ir_control_flow_visitor::visit(ir_constant*)
0000000000358ad0 0000000000000004 W ir_control_flow_visitor::visit(ir_call*)
0000000000358ae0 0000000000000004 W ir_control_flow_visitor::visit(ir_demote*)
0000000000358af0 0000000000000008 W ir_rvalue::is_lvalue(_mesa_glsl_parse_state const*) const
0000000000358b00 0000000000000008 W ir_rvalue::variable_referenced() const
0000000000358b10 0000000000000008 W ir_rvalue::whole_variable_referenced()
0000000000358b20 0000000000000008 W ir_rvalue::is_uint16_constant() const
0000000000358b30 000000000000001c W ir_function_signature::accept(ir_visitor*)
0000000000358b50 000000000000001c W ir_function::accept(ir_visitor*)
0000000000358b70 000000000000001c W ir_if::accept(ir_visitor*)
0000000000358b90 000000000000001c W ir_loop::accept(ir_visitor*)
0000000000358bb0 000000000000001c W ir_return::accept(ir_visitor*)
0000000000358bd0 000000000000001c W ir_loop_jump::accept(ir_visitor*)
0000000000358bf0 000000000000001c W ir_discard::accept(ir_visitor*)
0000000000358c10 0000000000000004 W ir_rvalue::~ir_rvalue()
0000000000358c10 0000000000000004 W ir_rvalue::~ir_rvalue()
0000000000358c20 0000000000000040 W ir_swizzle::is_lvalue(_mesa_glsl_parse_state const*) const
0000000000358c60 0000000000000008 W ir_dereference_variable::variable_referenced() const
0000000000358c70 0000000000000010 W ir_dereference_variable::precision() const
0000000000358c80 0000000000000008 W ir_dereference_variable::whole_variable_referenced()
0000000000358c90 0000000000000014 W ir_dereference_array::variable_referenced() const
0000000000358cb0 0000000000000028 W ir_dereference_array::precision() const
0000000000358ce0 0000000000000014 W ir_dereference_record::variable_referenced() const
0000000000358d00 0000000000000024 W ir_dereference_record::precision() const
0000000000358d30 0000000000000004 W ir_constant::~ir_constant()
0000000000358d30 0000000000000004 W ir_constant::~ir_constant()
0000000000358d40 0000000000000004 W ir_function_signature::~ir_function_signature()
0000000000358d40 0000000000000004 W ir_function_signature::~ir_function_signature()
0000000000358d50 0000000000000004 W ir_function::~ir_function()
0000000000358d50 0000000000000004 W ir_function::~ir_function()
0000000000358d60 0000000000000004 W ir_assignment::~ir_assignment()
0000000000358d60 0000000000000004 W ir_assignment::~ir_assignment()
0000000000358d70 0000000000000004 W ir_texture::~ir_texture()
0000000000358d70 0000000000000004 W ir_texture::~ir_texture()
0000000000358d80 0000000000000004 W ir_dereference_record::~ir_dereference_record()
0000000000358d80 0000000000000004 W ir_dereference_record::~ir_dereference_record()
0000000000358d90 0000000000000004 W ir_dereference_array::~ir_dereference_array()
0000000000358d90 0000000000000004 W ir_dereference_array::~ir_dereference_array()
0000000000358da0 0000000000000004 W ir_dereference_variable::~ir_dereference_variable()
0000000000358da0 0000000000000004 W ir_dereference_variable::~ir_dereference_variable()
0000000000358db0 0000000000000004 W ir_call::~ir_call()
0000000000358db0 0000000000000004 W ir_call::~ir_call()
0000000000358dc0 0000000000000004 W ir_loop::~ir_loop()
0000000000358dc0 0000000000000004 W ir_loop::~ir_loop()
0000000000358dd0 0000000000000004 W ir_if::~ir_if()
0000000000358dd0 0000000000000004 W ir_if::~ir_if()
0000000000358de0 0000000000000004 W ir_loop_jump::~ir_loop_jump()
0000000000358de0 0000000000000004 W ir_loop_jump::~ir_loop_jump()
0000000000358df0 0000000000000004 W ir_demote::~ir_demote()
0000000000358df0 0000000000000004 W ir_demote::~ir_demote()
0000000000358e00 0000000000000004 W ir_discard::~ir_discard()
0000000000358e00 0000000000000004 W ir_discard::~ir_discard()
0000000000358e10 0000000000000004 W ir_return::~ir_return()
0000000000358e10 0000000000000004 W ir_return::~ir_return()
0000000000358e20 0000000000000004 W ir_swizzle::~ir_swizzle()
0000000000358e20 0000000000000004 W ir_swizzle::~ir_swizzle()
0000000000358e30 0000000000000004 W ir_variable::~ir_variable()
0000000000358e30 0000000000000004 W ir_variable::~ir_variable()
0000000000358e40 0000000000000008 T ir_rvalue::clone(void*, hash_table*) const
0000000000358e50 0000000000000158 T ir_if::clone(void*, hash_table*) const
0000000000358fb0 0000000000000060 T ir_return::clone(void*, hash_table*) const
0000000000359010 0000000000000044 T ir_loop_jump::clone(void*, hash_table*) const
0000000000359060 0000000000000060 T ir_discard::clone(void*, hash_table*) const
00000000003590c0 0000000000000034 T ir_demote::clone(void*, hash_table*) const
0000000000359100 00000000000001c8 T ir_variable::clone(void*, hash_table*) const
00000000003592d0 0000000000000064 t ir_swizzle::clone(void*, hash_table*) const
0000000000359340 00000000000000ac T ir_loop::clone(void*, hash_table*) const
00000000003593f0 0000000000000038 W fixup_ir_call_visitor::visit_enter(ir_call*)
0000000000359430 0000000000000068 T ir_dereference_variable::clone(void*, hash_table*) const
00000000003594a0 0000000000000080 T ir_dereference_array::clone(void*, hash_table*) const
0000000000359520 0000000000000074 T ir_dereference_record::clone(void*, hash_table*) const
00000000003595a0 00000000000001e4 T ir_texture::clone(void*, hash_table*) const
0000000000359790 00000000000000c0 T ir_assignment::clone(void*, hash_table*) const
0000000000359850 000000000000010c T ir_function::clone(void*, hash_table*) const
0000000000359960 0000000000000004 W ir_rvalue::~ir_rvalue()
0000000000359970 0000000000000004 W ir_constant::~ir_constant()
0000000000359980 0000000000000004 W ir_texture::~ir_texture()
0000000000359990 0000000000000004 W ir_swizzle::~ir_swizzle()
00000000003599a0 0000000000000004 W ir_function_signature::~ir_function_signature()
00000000003599b0 0000000000000004 W ir_function::~ir_function()
00000000003599c0 0000000000000004 W ir_assignment::~ir_assignment()
00000000003599d0 0000000000000004 W ir_call::~ir_call()
00000000003599e0 0000000000000004 W ir_loop::~ir_loop()
00000000003599f0 0000000000000004 W ir_if::~ir_if()
0000000000359a00 0000000000000004 W ir_demote::~ir_demote()
0000000000359a10 0000000000000004 W ir_variable::~ir_variable()
0000000000359a20 0000000000000004 W ir_loop_jump::~ir_loop_jump()
0000000000359a30 0000000000000004 W ir_discard::~ir_discard()
0000000000359a40 0000000000000004 W ir_return::~ir_return()
0000000000359a50 0000000000000004 W ir_dereference_record::~ir_dereference_record()
0000000000359a60 0000000000000004 W ir_dereference_array::~ir_dereference_array()
0000000000359a70 0000000000000004 W ir_dereference_variable::~ir_dereference_variable()
0000000000359a80 0000000000000118 T ir_constant::clone(void*, hash_table*) const
0000000000359ba0 0000000000000030 W ir_constant::accept(ir_visitor*)
0000000000359bd0 0000000000000030 W ir_rvalue::accept(ir_visitor*)
0000000000359c00 0000000000000030 W ir_variable::accept(ir_visitor*)
0000000000359c30 0000000000000030 W ir_assignment::accept(ir_visitor*)
0000000000359c60 0000000000000030 W ir_call::accept(ir_visitor*)
0000000000359c90 0000000000000030 W ir_demote::accept(ir_visitor*)
0000000000359cc0 0000000000000030 W ir_texture::accept(ir_visitor*)
0000000000359cf0 0000000000000030 W ir_swizzle::accept(ir_visitor*)
0000000000359d20 0000000000000030 W ir_dereference_variable::accept(ir_visitor*)
0000000000359d50 0000000000000030 W ir_dereference_array::accept(ir_visitor*)
0000000000359d80 0000000000000030 W ir_dereference_record::accept(ir_visitor*)
0000000000359db0 000000000000016c T ir_call::clone(void*, hash_table*) const
0000000000359f20 00000000000000e0 T ir_expression::clone(void*, hash_table*) const
000000000035a000 00000000000000cc t ir_function_signature::clone_prototype(void*, hash_table*) const
000000000035a0d0 00000000000000b0 T ir_function_signature::clone(void*, hash_table*) const
000000000035a180 00000000000000d0 t clone_ir_list(void*, exec_list*, exec_list const*)
000000000035a250 000000000000024c t constant_referenced(ir_dereference const*, hash_table*, ir_constant*&, int&)
000000000035a4a0 0000000000000008 T ir_texture::constant_expression_value(void*, hash_table*)
000000000035a4a0 0000000000000008 T ir_assignment::constant_expression_value(void*, hash_table*)
000000000035a4a0 0000000000000008 T ir_rvalue::constant_expression_value(void*, hash_table*)
000000000035a4b0 00000000000043c0 t ir_expression::constant_expression_value(void*, hash_table*)
000000000035e870 0000000000000230 T ir_swizzle::constant_expression_value(void*, hash_table*)
000000000035eaa0 0000000000000080 T ir_dereference_variable::constant_expression_value(void*, hash_table*)
000000000035eb20 0000000000000250 T ir_dereference_array::constant_expression_value(void*, hash_table*)
000000000035ed70 0000000000000044 T ir_dereference_record::constant_expression_value(void*, hash_table*)
000000000035edc0 0000000000000004 T ir_constant::constant_expression_value(void*, hash_table*)
000000000035edd0 00000000000002e0 t ir_function_signature::constant_expression_evaluate_expression_list(void*, exec_list const&, hash_table*, ir_constant**)
000000000035f0b0 00000000000001d4 t ir_function_signature::constant_expression_value(void*, exec_list*, hash_table*) [clone .part.0]
000000000035f290 000000000000007c T ir_call::constant_expression_value(void*, hash_table*)
000000000035f310 0000000000000078 t ir_function_signature::constant_expression_value(void*, exec_list*, hash_table*)
000000000035f390 0000000000000008 T ir_rvalue::is_negative_one() const
000000000035f390 0000000000000008 T ir_rvalue::is_one() const
000000000035f390 0000000000000008 T ir_rvalue::is_zero() const
000000000035f3a0 00000000000000f4 t steal_memory(ir_instruction*, void*)
000000000035f4a0 00000000000000a0 T ir_dereference::is_lvalue(_mesa_glsl_parse_state const*) const
000000000035f540 000000000000002c T ir_rvalue::ir_rvalue(ir_node_type)
000000000035f540 000000000000002c t ir_rvalue::ir_rvalue(ir_node_type)
000000000035f570 00000000000003c0 t ir_assignment::set_lhs(ir_rvalue*)
000000000035f930 0000000000000074 t ir_assignment::whole_variable_written()
000000000035f9b0 0000000000000034 t ir_assignment::ir_assignment(ir_dereference*, ir_rvalue*, ir_rvalue*, unsigned int)
000000000035f9b0 0000000000000034 T ir_assignment::ir_assignment(ir_dereference*, ir_rvalue*, ir_rvalue*, unsigned int)
000000000035f9f0 000000000000009c t ir_assignment::ir_assignment(ir_rvalue*, ir_rvalue*, ir_rvalue*)
000000000035f9f0 000000000000009c T ir_assignment::ir_assignment(ir_rvalue*, ir_rvalue*, ir_rvalue*)
000000000035fa90 000000000000006c t ir_expression::ir_expression(int, glsl_type const*, ir_rvalue*, ir_rvalue*, ir_rvalue*, ir_rvalue*)
000000000035fa90 000000000000006c T ir_expression::ir_expression(int, glsl_type const*, ir_rvalue*, ir_rvalue*, ir_rvalue*, ir_rvalue*)
000000000035fb00 000000000000024c t ir_expression::ir_expression(int, ir_rvalue*)
000000000035fb00 000000000000024c T ir_expression::ir_expression(int, ir_rvalue*)
000000000035fd50 0000000000000288 t ir_expression::ir_expression(int, ir_rvalue*, ir_rvalue*)
000000000035fd50 0000000000000288 T ir_expression::ir_expression(int, ir_rvalue*, ir_rvalue*)
000000000035ffe0 00000000000000d8 t ir_expression::ir_expression(int, ir_rvalue*, ir_rvalue*, ir_rvalue*)
000000000035ffe0 00000000000000d8 T ir_expression::ir_expression(int, ir_rvalue*, ir_rvalue*, ir_rvalue*)
00000000003600c0 000000000000002c t ir_expression::get_num_operands(ir_expression_operation)
00000000003600f0 0000000000000068 t depth_layout_string(ir_depth_layout)
0000000000360160 000000000000002c T ir_expression::variable_referenced() const
0000000000360190 0000000000000034 t ir_constant::ir_constant()
0000000000360190 0000000000000034 T ir_constant::ir_constant()
00000000003601d0 000000000000004c t ir_constant::ir_constant(glsl_type const*, ir_constant_data const*)
00000000003601d0 000000000000004c T ir_constant::ir_constant(glsl_type const*, ir_constant_data const*)
0000000000360220 00000000000000b4 t ir_constant::ir_constant(float16_t, unsigned int)
0000000000360220 00000000000000b4 T ir_constant::ir_constant(float16_t, unsigned int)
00000000003602e0 00000000000000b4 t ir_constant::ir_constant(float, unsigned int)
00000000003602e0 00000000000000b4 T ir_constant::ir_constant(float, unsigned int)
00000000003603a0 00000000000000b4 t ir_constant::ir_constant(double, unsigned int)
00000000003603a0 00000000000000b4 T ir_constant::ir_constant(double, unsigned int)
0000000000360460 00000000000000b4 t ir_constant::ir_constant(unsigned int, unsigned int)
0000000000360460 00000000000000b4 T ir_constant::ir_constant(unsigned int, unsigned int)
0000000000360520 00000000000000b4 t ir_constant::ir_constant(int, unsigned int)
0000000000360520 00000000000000b4 T ir_constant::ir_constant(int, unsigned int)
00000000003605e0 00000000000000b4 t ir_constant::ir_constant(unsigned long, unsigned int)
00000000003605e0 00000000000000b4 T ir_constant::ir_constant(unsigned long, unsigned int)
00000000003606a0 00000000000000b4 t ir_constant::ir_constant(long, unsigned int)
00000000003606a0 00000000000000b4 T ir_constant::ir_constant(long, unsigned int)
0000000000360760 00000000000000b0 t ir_constant::ir_constant(bool, unsigned int)
0000000000360760 00000000000000b0 T ir_constant::ir_constant(bool, unsigned int)
0000000000360810 0000000000000118 t ir_constant::ir_constant(ir_constant const*, unsigned int)
0000000000360810 0000000000000118 T ir_constant::ir_constant(ir_constant const*, unsigned int)
0000000000360930 0000000000000164 t ir_constant::zero(void*, glsl_type const*)
0000000000360aa0 00000000000000f8 t ir_constant::get_bool_component(unsigned int) const
0000000000360ba0 00000000000000ec t ir_constant::get_float_component(unsigned int) const
0000000000360c90 0000000000000104 t ir_constant::get_double_component(unsigned int) const
0000000000360da0 00000000000000d4 t ir_constant::get_int_component(unsigned int) const
0000000000360e80 00000000000000d4 t ir_constant::get_uint_component(unsigned int) const
0000000000360f60 00000000000000e0 t ir_constant::get_int64_component(unsigned int) const
0000000000361040 00000000000000e0 t ir_constant::get_uint64_component(unsigned int) const
0000000000361120 0000000000000594 t ir_constant::ir_constant(glsl_type const*, exec_list*)
0000000000361120 0000000000000594 T ir_constant::ir_constant(glsl_type const*, exec_list*)
00000000003616c0 000000000000003c t ir_constant::get_array_element(unsigned int) const
0000000000361700 000000000000000c t ir_constant::get_record_field(int)
0000000000361710 0000000000000230 t ir_constant::copy_offset(ir_constant*, int)
0000000000361940 000000000000028c t ir_constant::copy_masked_offset(ir_constant*, int, unsigned int)
0000000000361bd0 0000000000000250 t ir_constant::has_value(ir_constant const*) const
0000000000361e20 00000000000001e0 T ir_constant::is_value(float, int) const
0000000000362000 0000000000000018 T ir_constant::is_zero() const
0000000000362020 0000000000000018 T ir_constant::is_one() const
0000000000362040 0000000000000018 T ir_constant::is_negative_one() const
0000000000362060 000000000000002c T ir_constant::is_uint16_constant() const
0000000000362090 0000000000000034 t ir_loop::ir_loop()
0000000000362090 0000000000000034 T ir_loop::ir_loop()
00000000003620d0 0000000000000038 t ir_dereference_variable::ir_dereference_variable(ir_variable*)
00000000003620d0 0000000000000038 T ir_dereference_variable::ir_dereference_variable(ir_variable*)
0000000000362110 00000000000000c4 t ir_dereference_array::set_array(ir_rvalue*)
00000000003621e0 0000000000000030 t ir_dereference_array::ir_dereference_array(ir_rvalue*, ir_rvalue*)
00000000003621e0 0000000000000030 T ir_dereference_array::ir_dereference_array(ir_rvalue*, ir_rvalue*)
0000000000362210 0000000000000094 t ir_dereference_array::ir_dereference_array(ir_variable*, ir_rvalue*)
0000000000362210 0000000000000094 T ir_dereference_array::ir_dereference_array(ir_variable*, ir_rvalue*)
00000000003622b0 0000000000000074 t ir_dereference_record::ir_dereference_record(ir_rvalue*, char const*)
00000000003622b0 0000000000000074 T ir_dereference_record::ir_dereference_record(ir_rvalue*, char const*)
0000000000362330 0000000000000014 t ir_texture::opcode_string()
0000000000362350 000000000000000c t ir_texture::set_sampler(ir_dereference*, glsl_type const*)
0000000000362360 000000000000014c t ir_swizzle::init_mask(unsigned int const*, unsigned int)
00000000003624b0 0000000000000058 t ir_swizzle::ir_swizzle(ir_rvalue*, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int)
00000000003624b0 0000000000000058 T ir_swizzle::ir_swizzle(ir_rvalue*, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int)
0000000000362510 000000000000003c t ir_swizzle::ir_swizzle(ir_rvalue*, unsigned int const*, unsigned int)
0000000000362510 000000000000003c T ir_swizzle::ir_swizzle(ir_rvalue*, unsigned int const*, unsigned int)
0000000000362550 0000000000000074 t ir_swizzle::ir_swizzle(ir_rvalue*, ir_swizzle_mask)
0000000000362550 0000000000000074 T ir_swizzle::ir_swizzle(ir_rvalue*, ir_swizzle_mask)
00000000003625d0 0000000000000130 t ir_swizzle::create(ir_rvalue*, char const*, unsigned int)
0000000000362700 0000000000000014 T ir_swizzle::variable_referenced() const
0000000000362720 0000000000000238 t ir_variable::ir_variable(glsl_type const*, char const*, ir_variable_mode)
0000000000362720 0000000000000238 T ir_variable::ir_variable(glsl_type const*, char const*, ir_variable_mode)
0000000000362960 0000000000000050 t interpolation_string(unsigned int)
00000000003629b0 0000000000000084 t ir_variable::enable_extension_warning(char const*)
0000000000362a40 0000000000000060 t ir_function_signature::ir_function_signature(glsl_type const*, bool (*)(_mesa_glsl_parse_state const*))
0000000000362a40 0000000000000060 T ir_function_signature::ir_function_signature(glsl_type const*, bool (*)(_mesa_glsl_parse_state const*))
0000000000362aa0 0000000000000010 t ir_function_signature::is_builtin() const
0000000000362ab0 0000000000000020 t ir_function_signature::is_builtin_available(_mesa_glsl_parse_state const*) const
0000000000362ad0 00000000000000bc t ir_function_signature::qualifiers_match(exec_list*)
0000000000362b90 0000000000000050 t ir_function_signature::replace_parameters(exec_list*)
0000000000362be0 000000000000005c t ir_function::ir_function(char const*)
0000000000362be0 000000000000005c T ir_function::ir_function(char const*)
0000000000362c40 000000000000003c t ir_function::has_user_signature()
0000000000362c80 0000000000000044 t ir_rvalue::error_value(void*)
0000000000362cd0 000000000000008c t visit_exec_list(exec_list*, ir_visitor*)
0000000000362d60 0000000000000068 t reparent_ir(exec_list*, void*)
0000000000362dd0 0000000000000020 t vertices_per_prim(unsigned int)
0000000000362df0 00000000000000f4 t mode_string(ir_variable const*)
0000000000362ef0 0000000000000004 W ir_control_flow_visitor::visit(ir_expression*)
0000000000362f00 0000000000000008 T ir_instruction::equals(ir_instruction const*, ir_node_type) const
0000000000362f10 0000000000000004 W ir_expression::~ir_expression()
0000000000362f10 0000000000000004 W ir_expression::~ir_expression()
0000000000362f20 0000000000000004 W ir_expression::~ir_expression()
0000000000362f30 00000000000000c0 T ir_expression::equals(ir_instruction const*, ir_node_type) const
0000000000362ff0 0000000000000030 W ir_expression::accept(ir_visitor*)
0000000000363020 0000000000000090 T ir_constant::equals(ir_instruction const*, ir_node_type) const
00000000003630b0 0000000000000028 T ir_dereference_variable::equals(ir_instruction const*, ir_node_type) const
00000000003630e0 000000000000009c T ir_dereference_array::equals(ir_instruction const*, ir_node_type) const
0000000000363180 0000000000000068 T ir_swizzle::equals(ir_instruction const*, ir_node_type) const
00000000003631f0 0000000000000208 T ir_texture::equals(ir_instruction const*, ir_node_type) const
0000000000363400 0000000000000414 t ir_function::matching_signature(_mesa_glsl_parse_state*, exec_list const*, bool, bool*)
0000000000363820 0000000000000018 t ir_function::matching_signature(_mesa_glsl_parse_state*, exec_list const*, bool)
0000000000363840 00000000000000c4 t ir_function::exact_matching_signature(_mesa_glsl_parse_state*, exec_list const*)
0000000000363910 0000000000000034 T ir_hierarchical_visitor::visit_enter(ir_discard*)
0000000000363910 0000000000000034 T ir_hierarchical_visitor::visit_enter(ir_swizzle*)
0000000000363910 0000000000000034 t ir_hierarchical_visitor::visit_enter(ir_texture*)
0000000000363910 0000000000000034 T ir_hierarchical_visitor::visit_enter(ir_function*)
0000000000363910 0000000000000034 T ir_hierarchical_visitor::visit_enter(ir_assignment*)
0000000000363910 0000000000000034 t ir_hierarchical_visitor::visit_enter(ir_expression*)
0000000000363910 0000000000000034 T ir_hierarchical_visitor::visit_enter(ir_emit_vertex*)
0000000000363910 0000000000000034 T ir_hierarchical_visitor::visit_enter(ir_end_primitive*)
0000000000363910 0000000000000034 t ir_hierarchical_visitor::visit_enter(ir_dereference_array*)
0000000000363910 0000000000000034 t ir_hierarchical_visitor::visit_enter(ir_dereference_record*)
0000000000363910 0000000000000034 T ir_hierarchical_visitor::visit_enter(ir_function_signature*)
0000000000363910 0000000000000034 T ir_hierarchical_visitor::visit_enter(ir_if*)
0000000000363910 0000000000000034 T ir_hierarchical_visitor::visit_enter(ir_call*)
0000000000363910 0000000000000034 T ir_hierarchical_visitor::visit_enter(ir_loop*)
0000000000363910 0000000000000034 T ir_hierarchical_visitor::visit_enter(ir_demote*)
0000000000363910 0000000000000034 T ir_hierarchical_visitor::visit_enter(ir_return*)
0000000000363950 0000000000000034 T ir_hierarchical_visitor::visit_leave(ir_discard*)
0000000000363950 0000000000000034 T ir_hierarchical_visitor::visit_leave(ir_swizzle*)
0000000000363950 0000000000000034 T ir_hierarchical_visitor::visit_leave(ir_texture*)
0000000000363950 0000000000000034 T ir_hierarchical_visitor::visit_leave(ir_function*)
0000000000363950 0000000000000034 t ir_hierarchical_visitor::visit_leave(ir_assignment*)
0000000000363950 0000000000000034 T ir_hierarchical_visitor::visit_leave(ir_expression*)
0000000000363950 0000000000000034 T ir_hierarchical_visitor::visit_leave(ir_emit_vertex*)
0000000000363950 0000000000000034 T ir_hierarchical_visitor::visit_leave(ir_end_primitive*)
0000000000363950 0000000000000034 T ir_hierarchical_visitor::visit_leave(ir_dereference_array*)
0000000000363950 0000000000000034 T ir_hierarchical_visitor::visit_leave(ir_dereference_record*)
0000000000363950 0000000000000034 T ir_hierarchical_visitor::visit_leave(ir_function_signature*)
0000000000363950 0000000000000034 T ir_hierarchical_visitor::visit_leave(ir_if*)
0000000000363950 0000000000000034 t ir_hierarchical_visitor::visit_leave(ir_call*)
0000000000363950 0000000000000034 T ir_hierarchical_visitor::visit_leave(ir_loop*)
0000000000363950 0000000000000034 T ir_hierarchical_visitor::visit_leave(ir_demote*)
0000000000363950 0000000000000034 T ir_hierarchical_visitor::visit_leave(ir_return*)
0000000000363990 000000000000004c T ir_hierarchical_visitor::visit(ir_barrier*)
0000000000363990 000000000000004c T ir_hierarchical_visitor::visit(ir_constant*)
0000000000363990 000000000000004c T ir_hierarchical_visitor::visit(ir_variable*)
0000000000363990 000000000000004c T ir_hierarchical_visitor::visit(ir_loop_jump*)
0000000000363990 000000000000004c T ir_hierarchical_visitor::visit(ir_dereference_variable*)
0000000000363990 000000000000004c T ir_hierarchical_visitor::visit(ir_rvalue*)
00000000003639e0 000000000000001c T ir_hierarchical_visitor::ir_hierarchical_visitor()
00000000003639e0 000000000000001c t ir_hierarchical_visitor::ir_hierarchical_visitor()
0000000000363a00 0000000000000008 t ir_hierarchical_visitor::run(exec_list*)
0000000000363a10 000000000000003c t visit_tree(ir_instruction*, void (*)(ir_instruction*, void*), void*, void (*)(ir_instruction*, void*), void*)
0000000000363a50 0000000000000004 W ir_control_flow_visitor::visit(ir_emit_vertex*)
0000000000363a60 0000000000000004 W ir_control_flow_visitor::visit(ir_end_primitive*)
0000000000363a70 0000000000000004 W ir_control_flow_visitor::visit(ir_barrier*)
0000000000363a80 000000000000001c T ir_dereference_variable::accept(ir_hierarchical_visitor*)
0000000000363aa0 000000000000001c T ir_barrier::accept(ir_hierarchical_visitor*)
0000000000363ac0 0000000000000004 W ir_barrier::~ir_barrier()
0000000000363ac0 0000000000000004 W ir_barrier::~ir_barrier()
0000000000363ad0 0000000000000004 W ir_end_primitive::~ir_end_primitive()
0000000000363ad0 0000000000000004 W ir_end_primitive::~ir_end_primitive()
0000000000363ae0 0000000000000004 W ir_emit_vertex::~ir_emit_vertex()
0000000000363ae0 0000000000000004 W ir_emit_vertex::~ir_emit_vertex()
0000000000363af0 0000000000000058 W ir_emit_vertex::clone(void*, hash_table*) const
0000000000363b50 0000000000000058 W ir_end_primitive::clone(void*, hash_table*) const
0000000000363bb0 0000000000000034 W ir_barrier::clone(void*, hash_table*) const
0000000000363bf0 0000000000000004 W ir_barrier::~ir_barrier()
0000000000363c00 0000000000000004 W ir_end_primitive::~ir_end_primitive()
0000000000363c10 0000000000000004 W ir_emit_vertex::~ir_emit_vertex()
0000000000363c20 0000000000000088 T ir_emit_vertex::accept(ir_hierarchical_visitor*)
0000000000363cb0 0000000000000088 T ir_end_primitive::accept(ir_hierarchical_visitor*)
0000000000363d40 0000000000000030 W ir_barrier::accept(ir_visitor*)
0000000000363d70 0000000000000030 W ir_emit_vertex::accept(ir_visitor*)
0000000000363da0 0000000000000030 W ir_end_primitive::accept(ir_visitor*)
0000000000363dd0 00000000000000c0 t visit_list_elements(ir_hierarchical_visitor*, exec_list*, bool)
0000000000363e90 000000000000001c T ir_rvalue::accept(ir_hierarchical_visitor*)
0000000000363eb0 000000000000001c T ir_variable::accept(ir_hierarchical_visitor*)
0000000000363ed0 0000000000000078 T ir_loop::accept(ir_hierarchical_visitor*)
0000000000363f50 000000000000001c T ir_loop_jump::accept(ir_hierarchical_visitor*)
0000000000363f70 00000000000000a0 T ir_function_signature::accept(ir_hierarchical_visitor*)
0000000000364010 0000000000000078 T ir_function::accept(ir_hierarchical_visitor*)
0000000000364090 00000000000000bc T ir_expression::accept(ir_hierarchical_visitor*)
0000000000364150 0000000000000168 T ir_texture::accept(ir_hierarchical_visitor*)
00000000003642c0 000000000000007c T ir_swizzle::accept(ir_hierarchical_visitor*)
0000000000364340 00000000000000c4 T ir_dereference_array::accept(ir_hierarchical_visitor*)
0000000000364410 000000000000007c T ir_dereference_record::accept(ir_hierarchical_visitor*)
0000000000364490 00000000000000cc t ir_assignment::accept(ir_hierarchical_visitor*)
0000000000364560 000000000000001c T ir_constant::accept(ir_hierarchical_visitor*)
0000000000364580 00000000000000d8 T ir_call::accept(ir_hierarchical_visitor*)
0000000000364660 0000000000000080 T ir_return::accept(ir_hierarchical_visitor*)
00000000003646e0 0000000000000080 T ir_discard::accept(ir_hierarchical_visitor*)
0000000000364760 0000000000000060 T ir_demote::accept(ir_hierarchical_visitor*)
00000000003647c0 00000000000000c8 T ir_if::accept(ir_hierarchical_visitor*)
0000000000364890 000000000000001c T ir_print_visitor::visit(ir_rvalue*)
00000000003648b0 0000000000000074 T ir_print_visitor::visit(ir_dereference_array*)
0000000000364930 0000000000000074 T ir_print_visitor::visit(ir_dereference_record*)
00000000003649b0 000000000000001c T ir_print_visitor::visit(ir_demote*)
00000000003649d0 0000000000000060 T ir_print_visitor::visit(ir_emit_vertex*)
0000000000364a30 0000000000000060 T ir_print_visitor::visit(ir_end_primitive*)
0000000000364a90 000000000000001c T ir_print_visitor::visit(ir_barrier*)
0000000000364ab0 00000000000000d4 T ir_print_visitor::visit(ir_swizzle*)
0000000000364b90 00000000000000ec T ir_print_visitor::visit(ir_assignment*)
0000000000364c80 0000000000000068 T ir_print_visitor::visit(ir_discard*)
0000000000364cf0 0000000000000068 T ir_print_visitor::visit(ir_return*)
0000000000364d60 00000000000000c4 t print_type(__sFILE*, glsl_type const*)
0000000000364e30 00000000000000b4 T ir_print_visitor::visit(ir_expression*)
0000000000364ef0 0000000000000024 T ir_print_visitor::visit(ir_loop_jump*)
0000000000364f20 0000000000000040 T ir_print_visitor::~ir_print_visitor()
0000000000364f20 0000000000000040 T ir_print_visitor::~ir_print_visitor()
0000000000364f60 0000000000000294 T ir_print_visitor::visit(ir_texture*)
0000000000365200 0000000000000060 t print_float_constant(__sFILE*, float)
0000000000365260 00000000000000dc T ir_print_visitor::visit(ir_call*)
0000000000365340 00000000000003f8 T ir_print_visitor::visit(ir_constant*)
0000000000365740 000000000000004c T ir_print_visitor::~ir_print_visitor()
0000000000365790 0000000000000130 T ir_print_visitor::visit(ir_loop*)
00000000003658c0 0000000000000188 T ir_print_visitor::visit(ir_function*)
0000000000365a50 0000000000000348 T ir_print_visitor::visit(ir_function_signature*)
0000000000365da0 00000000000002e0 T ir_print_visitor::visit(ir_if*)
0000000000366080 000000000000008c t ir_instruction::fprint(__sFILE*) const
0000000000366110 000000000000002c t ir_instruction::print() const
0000000000366140 000000000000018c t _mesa_print_ir
00000000003662d0 00000000000000e0 t ir_print_visitor::unique_name(ir_variable*)
00000000003663b0 000000000000033c T ir_print_visitor::visit(ir_variable*)
00000000003666f0 0000000000000064 T ir_print_visitor::visit(ir_dereference_variable*)
0000000000366760 0000000000000004 t validate_ir_tree(exec_list*)
0000000000366770 0000000000000014 t (anonymous namespace)::deref_type_updater::visit(ir_dereference_variable*)
0000000000366790 0000000000000024 t (anonymous namespace)::deref_type_updater::visit_leave(ir_dereference_array*)
00000000003667c0 0000000000000028 t (anonymous namespace)::deref_type_updater::visit_leave(ir_dereference_record*)
00000000003667f0 0000000000000004 t (anonymous namespace)::array_resize_visitor::~array_resize_visitor()
00000000003667f0 0000000000000004 t (anonymous namespace)::array_resize_visitor::~array_resize_visitor()
0000000000366800 000000000000005c t (anonymous namespace)::find_emit_vertex_visitor::visit_leave(ir_emit_vertex*)
0000000000366860 000000000000005c t (anonymous namespace)::find_emit_vertex_visitor::visit_leave(ir_end_primitive*)
00000000003668c0 0000000000000010 t assign_attribute_or_color_locations(void*, gl_shader_program*, gl_constants*, unsigned int, bool)::temp_attr::compare(void const*, void const*)
00000000003668d0 0000000000000170 t match_explicit_outputs_to_inputs(gl_linked_shader*, gl_linked_shader*)
0000000000366a40 000000000000004c t (anonymous namespace)::find_deref_visitor::visit(ir_dereference_variable*)
0000000000366a90 00000000000001dc t move_non_declarations(exec_list*, exec_node*, bool, gl_linked_shader*)
0000000000366c70 0000000000000008 t (anonymous namespace)::array_resize_visitor::~array_resize_visitor()
0000000000366c80 0000000000000098 t linker_optimisation_loop(gl_context*, exec_list*, unsigned int)
0000000000366d20 00000000000000ec t remap_variables(ir_instruction*, gl_linked_shader*, hash_table*)::remap_visitor::visit(ir_dereference_variable*)
0000000000366e10 0000000000000058 t set_always_active_io(exec_list*, ir_variable_mode) [clone .isra.0]
0000000000366e70 0000000000000474 t add_shader_variable(gl_context const*, gl_shader_program*, set*, unsigned int, unsigned int, ir_variable*, char const*, glsl_type const*, bool, int, bool, glsl_type const*) [clone .isra.0]
00000000003672f0 00000000000001fc t add_interface_variables(gl_context const*, gl_shader_program*, set*, unsigned int, unsigned int) [clone .isra.0]
00000000003674f0 00000000000000dc t (anonymous namespace)::dynamic_sampler_array_indexing_visitor::visit_enter(ir_dereference_array*)
00000000003675d0 00000000000002ac t add_packed_varyings(gl_context const*, gl_shader_program*, set*, int, unsigned int) [clone .isra.0]
0000000000367880 00000000000001bc t (anonymous namespace)::find_assignment_visitor::visit_enter(ir_call*)
0000000000367a40 00000000000000a8 t (anonymous namespace)::find_assignment_visitor::visit_enter(ir_assignment*)
0000000000367af0 00000000000000a8 t linker_error
0000000000367ba0 0000000000000104 t (anonymous namespace)::array_resize_visitor::visit(ir_variable*)
0000000000367cb0 0000000000000240 t analyze_clip_cull_usage(gl_shader_program*, gl_linked_shader*, gl_context*, shader_info*)
0000000000367ef0 00000000000002e0 t interstage_cross_validate_uniform_blocks(gl_shader_program*, bool)
00000000003681d0 00000000000000a0 t linker_warning
0000000000368270 000000000000095c t assign_attribute_or_color_locations(void*, gl_shader_program*, gl_constants*, unsigned int, bool)
0000000000368bd0 00000000000000c8 t parse_program_resource_name(char const*, char const**)
0000000000368ca0 000000000000006c t link_invalidate_variable_locations(exec_list*)
0000000000368d10 0000000000000128 t validate_intrastage_arrays(gl_shader_program*, ir_variable*, ir_variable*, bool)
0000000000368e40 0000000000000624 t cross_validate_globals(gl_context*, gl_shader_program*, exec_list*, glsl_symbol_table*, bool) [clone .isra.0]
0000000000369470 00000000000000a8 t array_sizing_visitor::update_interface_members_array(glsl_type const*, glsl_type const*)
0000000000369520 00000000000005d8 W array_sizing_visitor::visit(ir_variable*)
0000000000369b00 0000000000001340 t link_intrastage_shaders(void*, gl_context*, gl_shader_program*, gl_shader**, unsigned int, bool)
000000000036ae40 00000000000005d0 t build_program_resource_list(gl_context*, gl_shader_program*, bool)
000000000036b410 0000000000001a60 t link_shaders(gl_context*, gl_shader_program*)
000000000036ce70 0000000000000050 t link_util_should_add_buffer_variable
000000000036cec0 00000000000000e0 t link_util_add_program_resource
000000000036cfa0 000000000000008c t link_util_find_empty_block
000000000036d030 00000000000000ac t link_util_update_empty_uniform_locations
000000000036d0e0 0000000000000098 t link_util_check_subroutine_resources
000000000036d180 0000000000000264 t link_util_check_uniform_resources
000000000036d3f0 0000000000000134 t link_util_calculate_subroutine_compat
000000000036d530 00000000000000f4 t _mark_array_elements_referenced(array_deref_range const*, unsigned int, unsigned int, unsigned int, unsigned int*)
000000000036d630 000000000000001c t link_util_mark_array_elements_referenced
000000000036d650 0000000000000018 t (anonymous namespace)::cmp_actives(void const*, void const*)
000000000036d670 00000000000002a4 t (anonymous namespace)::process_atomic_variable(glsl_type const*, gl_shader_program*, unsigned int*, ir_variable*, (anonymous namespace)::active_atomic_buffer*, unsigned int*, int*, unsigned int)
000000000036d920 00000000000002f8 t (anonymous namespace)::find_active_atomic_counters(gl_context*, gl_shader_program*, unsigned int*)
000000000036dc20 000000000000036c t link_assign_atomic_counter_resources(gl_context*, gl_shader_program*)
000000000036df90 000000000000025c t link_check_atomic_counter_resources(gl_context*, gl_shader_program*)
000000000036e1f0 00000000000000c0 t (anonymous namespace)::call_link_visitor::visit_leave(ir_call*)
000000000036e2b0 0000000000000064 t find_matching_signature(char const*, exec_list const*, glsl_symbol_table*)
000000000036e320 0000000000000320 t (anonymous namespace)::call_link_visitor::visit_enter(ir_call*)
000000000036e640 000000000000001c t (anonymous namespace)::call_link_visitor::visit(ir_variable*)
000000000036e660 0000000000000180 t (anonymous namespace)::call_link_visitor::visit(ir_dereference_variable*)
000000000036e7e0 000000000000009c t link_function_calls(gl_shader_program*, gl_linked_shader*, gl_shader**, unsigned int)
000000000036e880 000000000000011c t (anonymous namespace)::interstage_member_mismatch(gl_shader_program*, glsl_type const*, glsl_type const*)
000000000036e9a0 0000000000000260 t (anonymous namespace)::intrastage_match(ir_variable*, ir_variable*, gl_shader_program*, bool)
000000000036ec00 0000000000000310 t validate_intrastage_interface_blocks(gl_shader_program*, gl_shader const**, unsigned int)
000000000036ef10 00000000000004e0 t validate_interstage_inout_blocks(gl_shader_program*, gl_linked_shader const*, gl_linked_shader const*)
000000000036f3f0 00000000000001f0 t validate_interstage_uniform_blocks(gl_shader_program*, gl_linked_shader**)
000000000036f5e0 0000000000000004 T program_resource_visitor::enter_record(glsl_type const*, char const*, bool, glsl_interface_packing)
000000000036f5e0 0000000000000004 T program_resource_visitor::leave_record(glsl_type const*, char const*, bool, glsl_interface_packing)
000000000036f5f0 0000000000000004 T program_resource_visitor::set_buffer_offset(unsigned int)
000000000036f5f0 0000000000000004 T program_resource_visitor::set_record_array_count(unsigned int)
000000000036f600 0000000000000008 W parcel_out_uniform_storage::set_buffer_offset(unsigned int)
000000000036f610 0000000000000008 W parcel_out_uniform_storage::set_record_array_count(unsigned int)
000000000036f620 0000000000000028 W parcel_out_uniform_storage::~parcel_out_uniform_storage()
000000000036f620 0000000000000028 W parcel_out_uniform_storage::~parcel_out_uniform_storage()
000000000036f650 000000000000007c t get_top_level_name(char const*)
000000000036f6d0 00000000000000dc t is_top_level_shader_storage_block_member(char const*, char const*, char const*)
000000000036f7b0 0000000000000078 W parcel_out_uniform_storage::leave_record(glsl_type const*, char const*, bool, glsl_interface_packing)
000000000036f830 0000000000000078 W parcel_out_uniform_storage::enter_record(glsl_type const*, char const*, bool, glsl_interface_packing)
000000000036f8b0 0000000000000034 W parcel_out_uniform_storage::~parcel_out_uniform_storage()
000000000036f8f0 0000000000000070 t assign_hidden_uniform_slot_id(char const*, unsigned int, void*)
000000000036f960 00000000000001dc t parcel_out_uniform_storage::set_opaque_indices(glsl_type const*, gl_uniform_storage*, char const*, unsigned int&, string_to_uint_map*) [clone .isra.0]
000000000036fb40 0000000000000214 t (anonymous namespace)::count_uniform_size::visit_field(glsl_type const*, char const*, bool, glsl_type const*, glsl_interface_packing, bool)
000000000036fd60 0000000000000ad4 W parcel_out_uniform_storage::visit_field(glsl_type const*, char const*, bool, glsl_type const*, glsl_interface_packing, bool)
0000000000370840 00000000000003d4 t program_resource_visitor::recursion(glsl_type const*, char**, unsigned long, bool, glsl_type const*, glsl_interface_packing, bool, unsigned int, glsl_struct_field const*)
0000000000370c20 00000000000000b4 t program_resource_visitor::process(glsl_type const*, char const*, bool)
0000000000370ce0 0000000000000228 t program_resource_visitor::process(ir_variable*, glsl_type const*, bool)
0000000000370f10 000000000000001c t program_resource_visitor::process(ir_variable*, bool)
0000000000370f30 000000000000005c t link_calculate_matrix_stride(glsl_type const*, bool, glsl_interface_packing)
0000000000370f90 00000000000004b8 t parcel_out_uniform_storage::set_and_process(ir_variable*)
0000000000371450 0000000000000ea0 t link_assign_uniform_locations(gl_shader_program*, gl_context*)
00000000003722f0 0000000000000288 t linker::set_opaque_binding(void*, gl_shader_program*, ir_variable const*, glsl_type const*, char const*, int*)
0000000000372580 00000000000000a8 t linker::copy_constant_to_storage(gl_constant_value*, ir_constant const*, glsl_base_type, unsigned int, unsigned int)
0000000000372630 00000000000002c8 t linker::set_uniform_initializer(void*, gl_shader_program*, char const*, glsl_type const*, ir_constant*, unsigned int)
0000000000372900 00000000000001b4 t link_set_uniform_initializers(gl_shader_program*, unsigned int)
0000000000372ac0 0000000000000008 t (anonymous namespace)::ubo_visitor::set_buffer_offset(unsigned int)
0000000000372ad0 0000000000000010 t (anonymous namespace)::count_block_size::visit_field(glsl_type const*, char const*, bool, glsl_type const*, glsl_interface_packing, bool)
0000000000372ae0 0000000000000068 t resize_block_array(glsl_type const*, uniform_block_array_elements*)
0000000000372b50 0000000000000188 t process_block_array_leaf(char const*, gl_uniform_block*, (anonymous namespace)::ubo_visitor*, gl_uniform_buffer_variable*, link_uniform_block_active const*, unsigned int*, unsigned int, unsigned int, gl_context*, gl_shader_program*)
0000000000372ce0 0000000000000204 t (anonymous namespace)::ubo_visitor::visit_field(glsl_type const*, char const*, bool, glsl_type const*, glsl_interface_packing, bool)
0000000000372ef0 0000000000000134 t process_block_array(uniform_block_array_elements*, char**, unsigned long, gl_uniform_block*, (anonymous namespace)::ubo_visitor*, gl_uniform_buffer_variable*, link_uniform_block_active const*, unsigned int*, unsigned int, gl_context*, gl_shader_program*, unsigned int)
0000000000373030 0000000000000068 t (anonymous namespace)::ubo_visitor::enter_record(glsl_type const*, char const*, bool, glsl_interface_packing)
0000000000373030 0000000000000068 t (anonymous namespace)::ubo_visitor::leave_record(glsl_type const*, char const*, bool, glsl_interface_packing)
00000000003730a0 00000000000001ac t create_buffer_blocks(void*, gl_context*, gl_shader_program*, gl_uniform_block**, unsigned int, hash_table*, unsigned int, bool) [clone .part.0]
0000000000373250 0000000000000318 t link_uniform_blocks(void*, gl_context*, gl_shader_program*, gl_linked_shader*, gl_uniform_block**, unsigned int*, gl_uniform_block**, unsigned int*)
0000000000373570 000000000000023c t link_cross_validate_uniform_block(void*, gl_uniform_block**, unsigned int*, gl_uniform_block*)
00000000003737b0 0000000000000090 t compute_variable_location_slot(ir_variable*, gl_shader_stage)
0000000000373840 0000000000000028 t cmp_xfb_offset(void const*, void const*)
0000000000373870 0000000000000028 t (anonymous namespace)::varying_matches::match_comparator(void const*, void const*)
00000000003738a0 0000000000000430 t check_location_aliasing(explicit_location_info (*) [4], ir_variable*, unsigned int, unsigned int, unsigned int, glsl_type const*, unsigned int, bool, bool, bool, gl_shader_program*, gl_shader_stage)
0000000000373cd0 0000000000000060 t io_variable_cmp(void const*, void const*)
0000000000373d30 0000000000000438 t cross_validate_types_and_qualifiers(gl_context*, gl_shader_program*, ir_variable const*, ir_variable const*, gl_shader_stage, gl_shader_stage)
0000000000374170 0000000000000094 t cross_validate_front_and_back_color(gl_context*, gl_shader_program*, ir_variable const*, ir_variable const*, ir_variable const*, gl_shader_stage, gl_shader_stage)
0000000000374210 000000000000023c t create_xfb_varying_names(void*, glsl_type const*, char**, unsigned long, unsigned int*, char const*, glsl_type const*, char***)
0000000000374450 00000000000000ec t canonicalize_shader_io(exec_list*, ir_variable_mode)
0000000000374540 000000000000007c W tfeedback_candidate_generator::visit_field(glsl_type const*, char const*, bool, glsl_type const*, glsl_interface_packing, bool)
00000000003745c0 0000000000000048 t (anonymous namespace)::varying_matches::xfb_comparator(void const*, void const*)
0000000000374610 00000000000000d8 t remove_unused_shader_inputs_and_outputs(bool, gl_linked_shader*, ir_variable_mode) [clone .part.0]
00000000003746f0 0000000000000048 t (anonymous namespace)::varying_matches::not_xfb_comparator(void const*, void const*)
0000000000374740 000000000000029c t validate_explicit_variable_location(gl_context*, explicit_location_info (*) [4], ir_variable*, gl_shader_program*, gl_linked_shader*)
00000000003749e0 0000000000000170 t reserved_varying_slot(gl_linked_shader*, ir_variable_mode)
0000000000374b50 00000000000004a4 t (anonymous namespace)::varying_matches::record(ir_variable*, ir_variable*) [clone .part.0]
0000000000375000 0000000000000148 t validate_first_and_last_interface_explicit_locations(gl_context*, gl_shader_program*, gl_shader_stage, gl_shader_stage)
0000000000375150 00000000000003ec t cross_validate_outputs_to_inputs(gl_context*, gl_shader_program*, gl_linked_shader*, gl_linked_shader*)
0000000000375540 0000000000000214 t tfeedback_decl::init(gl_context*, void const*, char const*)
0000000000375760 0000000000000304 t tfeedback_decl::assign_location(gl_context*, gl_shader_program*)
0000000000375a70 00000000000000c0 t tfeedback_decl::get_num_outputs() const
0000000000375b30 00000000000004b8 t tfeedback_decl::store(gl_context*, gl_shader_program*, gl_transform_feedback_info*, unsigned int, unsigned int, unsigned int, unsigned int**, bool*, bool, void const*) const
0000000000375ff0 00000000000000c0 t tfeedback_decl::find_candidate(gl_shader_program*, hash_table*)
00000000003760b0 0000000000000110 t linker::populate_consumer_input_sets(void*, exec_list*, hash_table*, hash_table*, ir_variable**)
00000000003761c0 00000000000000cc t linker::get_matching_input(void*, ir_variable const*, hash_table*, hash_table*, ir_variable**)
0000000000376290 0000000000001058 t assign_varying_locations(gl_context*, void*, gl_shader_program*, gl_linked_shader*, gl_linked_shader*, unsigned int, tfeedback_decl*, unsigned long)
00000000003772f0 0000000000000c2c t link_varyings(gl_shader_program*, unsigned int, unsigned int, gl_context*, void*)
0000000000377f20 0000000000000030 t (anonymous namespace)::loop_analysis::visit(ir_loop_jump*)
0000000000377f50 0000000000000028 t (anonymous namespace)::loop_analysis::visit_enter(ir_call*)
0000000000377f80 0000000000000024 t (anonymous namespace)::loop_analysis::visit_enter(ir_if*)
0000000000377fb0 0000000000000024 t (anonymous namespace)::loop_analysis::visit_leave(ir_if*)
0000000000377fe0 0000000000000028 t (anonymous namespace)::loop_analysis::visit_enter(ir_assignment*)
0000000000378010 0000000000000010 t (anonymous namespace)::loop_analysis::visit_leave(ir_assignment*)
0000000000378020 000000000000000c W loop_variable_state::_ralloc_destructor(void*)
0000000000378030 0000000000000088 W examine_rhs::visit(ir_dereference_variable*)
00000000003780c0 0000000000000198 t (anonymous namespace)::loop_analysis::visit(ir_dereference_variable*)
0000000000378260 000000000000002c t loop_state::~loop_state()
0000000000378260 000000000000002c T loop_state::~loop_state()
0000000000378290 00000000000000cc t loop_state::insert(ir_loop*)
0000000000378360 0000000000000040 t (anonymous namespace)::loop_analysis::visit_enter(ir_loop*)
00000000003783a0 0000000000000020 t loop_state::get(ir_loop const*)
00000000003783c0 0000000000000038 t loop_variable_state::get(ir_variable const*)
0000000000378400 000000000000009c t analyze_loop_variables(exec_list*)
00000000003784a0 0000000000000b9c t (anonymous namespace)::loop_analysis::visit_leave(ir_loop*)
0000000000379040 0000000000000018 W loop_unroll_count::visit_enter(ir_assignment*)
0000000000379060 0000000000000018 W loop_unroll_count::visit_enter(ir_expression*)
0000000000379080 0000000000000014 W loop_unroll_count::visit_enter(ir_loop*)
00000000003790a0 00000000000001e8 W loop_unroll_count::visit_enter(ir_dereference_array*)
0000000000379290 00000000000001c0 t (anonymous namespace)::loop_unroll_visitor::complex_unroll(ir_loop*, int, bool, bool, bool)
0000000000379450 000000000000025c t (anonymous namespace)::loop_unroll_visitor::simple_unroll(ir_loop*, int)
00000000003796b0 000000000000055c t (anonymous namespace)::loop_unroll_visitor::visit_leave(ir_loop*)
0000000000379c10 0000000000000064 t unroll_loops(exec_list*, loop_state*, gl_shader_compiler_options const*)
0000000000379c80 0000000000000058 t (anonymous namespace)::lower_builtins_visitor::visit_leave(ir_call*)
0000000000379ce0 0000000000000050 t lower_builtins(exec_list*)
0000000000379d30 0000000000000008 t (anonymous namespace)::lower_const_array_visitor::visit_enter(ir_texture*)
0000000000379d40 000000000000013c t (anonymous namespace)::lower_const_array_visitor::handle_rvalue(ir_rvalue**)
0000000000379e80 00000000000000c8 t lower_const_arrays_to_uniforms(exec_list*, unsigned int, unsigned int)
0000000000379f50 000000000000009c t (anonymous namespace)::lower_cs_derived_visitor::add_system_value(int, glsl_type const*, char const*)
0000000000379ff0 00000000000001cc t (anonymous namespace)::lower_cs_derived_visitor::find_sysvals() [clone .part.0]
000000000037a1c0 00000000000003b8 t (anonymous namespace)::lower_cs_derived_visitor::visit(ir_dereference_variable*)
000000000037a580 0000000000000098 t lower_cs_derived(gl_linked_shader*)
000000000037a620 00000000000000cc t (anonymous namespace)::lower_discard_flow_visitor::generate_discard_break()
000000000037a6f0 000000000000004c t (anonymous namespace)::lower_discard_flow_visitor::visit_enter(ir_loop*)
000000000037a740 00000000000000d8 t (anonymous namespace)::lower_discard_flow_visitor::visit_enter(ir_discard*)
000000000037a820 00000000000000d0 t (anonymous namespace)::lower_discard_flow_visitor::visit_enter(ir_function_signature*)
000000000037a8f0 0000000000000068 t (anonymous namespace)::lower_discard_flow_visitor::visit(ir_loop_jump*)
000000000037a960 00000000000000b0 t lower_discard_flow(exec_list*)
000000000037aa10 0000000000000004 t (anonymous namespace)::lower_distance_visitor_counter::handle_rvalue(ir_rvalue**)
000000000037aa20 0000000000000138 t (anonymous namespace)::lower_distance_visitor_counter::visit(ir_variable*)
000000000037ab60 00000000000000a8 t (anonymous namespace)::lower_distance_visitor::is_distance_vec8(ir_rvalue*)
000000000037ac10 00000000000000a4 t (anonymous namespace)::lower_distance_visitor::fix_lhs(ir_assignment*) [clone .part.0]
000000000037acc0 00000000000001b4 t (anonymous namespace)::lower_distance_visitor::visit(ir_variable*)
000000000037ae80 0000000000000478 t (anonymous namespace)::lower_distance_visitor::handle_rvalue(ir_rvalue**)
000000000037b300 0000000000000224 t (anonymous namespace)::lower_distance_visitor::visit_leave(ir_assignment*)
000000000037b530 000000000000016c t lower_clip_cull_distance(gl_shader_program*, gl_linked_shader*)
000000000037b6a0 00000000000002a8 t (anonymous namespace)::lower_distance_visitor::visit_leave(ir_call*)
000000000037b950 00000000000000e4 t (anonymous namespace)::lower_instructions_visitor::_imm_fp(void*, glsl_type const*, double, unsigned int) [clone .constprop.0] [clone .isra.0]
000000000037ba40 0000000000000078 t (anonymous namespace)::lower_instructions_visitor::_carry(ir_builder::operand, ir_builder::operand) [clone .isra.0]
000000000037bac0 0000000000000070 t (anonymous namespace)::lower_instructions_visitor::div_to_mul_rcp(ir_expression*)
000000000037bb30 000000000000005c t (anonymous namespace)::lower_instructions_visitor::dfloor_to_dfrac(ir_expression*)
000000000037bb90 00000000000002fc t (anonymous namespace)::lower_instructions_visitor::mod_to_floor(ir_expression*)
000000000037be90 000000000000023c t (anonymous namespace)::lower_instructions_visitor::int_div_to_mul_rcp(ir_expression*)
000000000037c0d0 0000000000000290 t (anonymous namespace)::lower_instructions_visitor::double_dot_to_fma(ir_expression*)
000000000037c360 00000000000001e8 t (anonymous namespace)::lower_instructions_visitor::dceil_to_dfrac(ir_expression*)
000000000037c550 0000000000000318 t (anonymous namespace)::lower_instructions_visitor::dfrexp_exp_to_arith(ir_expression*)
000000000037c870 0000000000000308 t (anonymous namespace)::lower_instructions_visitor::dtrunc_to_dfrac(ir_expression*)
000000000037cb80 0000000000000428 t (anonymous namespace)::lower_instructions_visitor::dround_even_to_dfrac(ir_expression*)
000000000037cfb0 000000000000058c t (anonymous namespace)::lower_instructions_visitor::dfrexp_sig_to_arith(ir_expression*)
000000000037d540 0000000000000404 t (anonymous namespace)::lower_instructions_visitor::extract_to_shifts(ir_expression*)
000000000037d950 0000000000000474 t (anonymous namespace)::lower_instructions_visitor::bit_count_to_math(ir_expression*)
000000000037ddd0 0000000000000ba0 t (anonymous namespace)::lower_instructions_visitor::dldexp_to_arith(ir_expression*)
000000000037e970 0000000000000af4 t (anonymous namespace)::lower_instructions_visitor::ldexp_to_arith(ir_expression*)
000000000037f470 0000000000001380 t (anonymous namespace)::lower_instructions_visitor::imul_high_to_mul(ir_expression*)
00000000003807f0 00000000000021e8 t (anonymous namespace)::lower_instructions_visitor::visit_leave(ir_expression*)
00000000003829e0 0000000000000060 t lower_instructions(exec_list*, unsigned int)
0000000000382a40 0000000000000004 t (anonymous namespace)::ir_lower_jumps_visitor::visit(ir_discard*)
0000000000382a50 0000000000000004 t (anonymous namespace)::ir_lower_jumps_visitor::~ir_lower_jumps_visitor()
0000000000382a50 0000000000000004 t (anonymous namespace)::ir_lower_jumps_visitor::~ir_lower_jumps_visitor()
0000000000382a60 0000000000000178 t (anonymous namespace)::ir_lower_jumps_visitor::create_lowered_break()
0000000000382be0 0000000000000284 t (anonymous namespace)::ir_lower_jumps_visitor::insert_lowered_return(ir_return*)
0000000000382e70 0000000000000008 t (anonymous namespace)::ir_lower_jumps_visitor::~ir_lower_jumps_visitor()
0000000000382e80 0000000000000040 t (anonymous namespace)::ir_lower_jumps_visitor::visit(ir_return*)
0000000000382ec0 000000000000004c t (anonymous namespace)::ir_lower_jumps_visitor::visit(ir_loop_jump*)
0000000000382f10 0000000000000070 t (anonymous namespace)::ir_lower_jumps_visitor::visit(ir_function*)
0000000000382f80 00000000000001ec t (anonymous namespace)::ir_lower_jumps_visitor::visit(ir_function_signature*)
0000000000383170 0000000000000544 t (anonymous namespace)::ir_lower_jumps_visitor::visit(ir_loop*)
00000000003836c0 0000000000000ab8 t (anonymous namespace)::ir_lower_jumps_visitor::visit(ir_if*)
0000000000384180 000000000000008c t do_lower_jumps(exec_list*, bool, bool, bool, bool, bool)
0000000000384210 0000000000000094 T lower_packed_varyings_gs_splicer::visit_leave(ir_emit_vertex*)
00000000003842b0 0000000000000094 T lower_packed_varyings_return_splicer::visit_leave(ir_return*)
0000000000384350 00000000000011b0 t (anonymous namespace)::lower_packed_varyings_visitor::lower_rvalue(ir_rvalue*, unsigned int, ir_variable*, char const*, bool, unsigned int)
0000000000385500 0000000000000530 t lower_packed_varyings(void*, unsigned int, unsigned char const*, ir_variable_mode, unsigned int, gl_linked_shader*, bool, bool, bool)
0000000000385a30 0000000000000144 t (anonymous namespace)::lower_packed_varyings_visitor::lower_arraylike(ir_rvalue*, unsigned int, unsigned int, ir_variable*, char const*, bool, unsigned int)
0000000000385b80 000000000000008c t process_array_ir(void*, ir_dereference_array*, ir_rvalue*)
0000000000385c10 0000000000000060 t process_array_type(glsl_type const*, unsigned int)
0000000000385c70 0000000000000058 t (anonymous namespace)::flatten_named_interface_blocks_declarations::visit_leave(ir_expression*)
0000000000385cd0 0000000000000170 t (anonymous namespace)::flatten_named_interface_blocks_declarations::handle_rvalue(ir_rvalue**)
0000000000385e40 00000000000000c4 t (anonymous namespace)::flatten_named_interface_blocks_declarations::visit_leave(ir_assignment*)
0000000000385f10 00000000000003f0 t lower_named_interface_blocks(void*, gl_linked_shader*)
0000000000386300 0000000000000008 t (anonymous namespace)::lower_precision_visitor::visit_enter(ir_texture*)
0000000000386300 0000000000000008 t (anonymous namespace)::lower_precision_visitor::visit_enter(ir_dereference_array*)
0000000000386300 0000000000000008 t (anonymous namespace)::lower_precision_visitor::visit_enter(ir_dereference_record*)
0000000000386300 0000000000000008 t (anonymous namespace)::lower_precision_visitor::visit_enter(ir_call*)
0000000000386310 00000000000000a4 t (anonymous namespace)::find_lowerable_rvalues_visitor::visit_leave(ir_assignment*)
00000000003863c0 0000000000000070 t (anonymous namespace)::find_lowerable_rvalues_visitor::visit_enter(ir_expression*)
0000000000386430 0000000000000058 t (anonymous namespace)::lower_precision_visitor::visit_leave(ir_expression*)
0000000000386490 0000000000000080 t (anonymous namespace)::convert_precision(int, ir_rvalue*)
0000000000386510 00000000000000e8 t (anonymous namespace)::lower_precision_visitor::handle_rvalue(ir_rvalue**)
0000000000386600 00000000000000c8 t (anonymous namespace)::find_precision_visitor::handle_rvalue(ir_rvalue**)
00000000003866d0 0000000000000104 t (anonymous namespace)::find_lowerable_rvalues_visitor::visit_enter(ir_dereference_array*)
00000000003867e0 00000000000001b4 t (anonymous namespace)::find_lowerable_rvalues_visitor::stack_enter(ir_instruction*, void*)
00000000003869a0 000000000000008c t (anonymous namespace)::find_lowerable_rvalues_visitor::visit_enter(ir_texture*)
0000000000386a30 00000000000000f0 t (anonymous namespace)::find_lowerable_rvalues_visitor::visit_enter(ir_dereference_record*)
0000000000386b20 000000000000014c t (anonymous namespace)::find_lowerable_rvalues_visitor::visit_leave(ir_call*)
0000000000386c70 0000000000000150 t lower_precision(exec_list*)
0000000000386dc0 000000000000016c t (anonymous namespace)::find_precision_visitor::visit_enter(ir_call*)
0000000000386f30 0000000000000128 t void std::vector<ir_instruction*, std::allocator<ir_instruction*> >::_M_realloc_insert<ir_instruction* const&>(__gnu_cxx::__normal_iterator<ir_instruction**, std::vector<ir_instruction*, std::allocator<ir_instruction*> > >, ir_instruction* const&)
0000000000387060 00000000000001e4 t (anonymous namespace)::find_lowerable_rvalues_visitor::pop_stack_entry()
0000000000387250 0000000000000008 t (anonymous namespace)::find_lowerable_rvalues_visitor::stack_leave(ir_instruction*, void*)
0000000000387260 00000000000000ec t (anonymous namespace)::find_lowerable_rvalues_visitor::visit(ir_dereference_variable*)
0000000000387350 0000000000000064 t (anonymous namespace)::find_lowerable_rvalues_visitor::visit(ir_constant*)
00000000003873c0 0000000000000324 t (anonymous namespace)::lower_subroutine_visitor::visit_leave(ir_call*)
00000000003876f0 0000000000000060 t lower_subroutine(exec_list*, _mesa_glsl_parse_state*)
0000000000387750 0000000000000154 t (anonymous namespace)::lower_tess_level_visitor::handle_rvalue(ir_rvalue**)
00000000003878b0 0000000000000150 t (anonymous namespace)::lower_tess_level_visitor::visit(ir_variable*)
0000000000387a00 00000000000000a8 t (anonymous namespace)::lower_tess_level_visitor::is_tess_level_array(ir_rvalue*)
0000000000387ab0 0000000000000120 t (anonymous namespace)::lower_tess_level_visitor::fix_lhs(ir_assignment*) [clone .part.0]
0000000000387bd0 0000000000000238 t (anonymous namespace)::lower_tess_level_visitor::visit_leave(ir_assignment*)
0000000000387e10 00000000000000a4 t lower_tess_level(gl_linked_shader*)
0000000000387ec0 0000000000000288 t (anonymous namespace)::lower_tess_level_visitor::visit_leave(ir_call*)
0000000000388150 00000000000000e8 t (anonymous namespace)::ir_vec_index_to_swizzle_visitor::handle_rvalue(ir_rvalue**)
0000000000388240 000000000000004c t do_vec_index_to_swizzle(exec_list*)
0000000000388290 0000000000000004 t (anonymous namespace)::vector_deref_visitor::~vector_deref_visitor()
0000000000388290 0000000000000004 t (anonymous namespace)::vector_deref_visitor::~vector_deref_visitor()
00000000003882a0 0000000000000008 t (anonymous namespace)::vector_deref_visitor::~vector_deref_visitor()
00000000003882b0 00000000000000e4 t (anonymous namespace)::vector_deref_visitor::handle_rvalue(ir_rvalue**)
00000000003883a0 00000000000004e8 t (anonymous namespace)::vector_deref_visitor::visit_enter(ir_assignment*)
0000000000388890 000000000000007c t lower_vector_derefs(gl_linked_shader*)
0000000000388910 0000000000000004 t (anonymous namespace)::vector_insert_visitor::~vector_insert_visitor()
0000000000388910 0000000000000004 t (anonymous namespace)::vector_insert_visitor::~vector_insert_visitor()
0000000000388920 0000000000000008 t (anonymous namespace)::vector_insert_visitor::~vector_insert_visitor()
0000000000388930 0000000000000394 t (anonymous namespace)::vector_insert_visitor::handle_rvalue(ir_rvalue**)
0000000000388cd0 0000000000000078 t lower_vector_insert(exec_list*, bool)
0000000000388d50 000000000000024c t (anonymous namespace)::lower_vertex_id_visitor::visit(ir_dereference_variable*)
0000000000388fa0 00000000000000dc t lower_vertex_id(gl_linked_shader*)
0000000000389080 0000000000000010 t (anonymous namespace)::compute_shader_enabled(_mesa_glsl_parse_state const*)
0000000000389090 00000000000000cc t (anonymous namespace)::lower_shared_reference_visitor::get_shared_offset(ir_variable const*)
0000000000389160 000000000000051c t (anonymous namespace)::lower_shared_reference_visitor::visit_enter(ir_call*)
0000000000389680 0000000000000254 t (anonymous namespace)::lower_shared_reference_visitor::visit_enter(ir_assignment*)
00000000003898e0 00000000000005a4 t (anonymous namespace)::lower_shared_reference_visitor::insert_buffer_access(void*, ir_dereference*, glsl_type const*, ir_rvalue*, unsigned int, int)
0000000000389e90 000000000000023c t (anonymous namespace)::lower_shared_reference_visitor::handle_rvalue(ir_rvalue**)
000000000038a0d0 00000000000000e0 t lower_shared_reference(gl_context*, gl_shader_program*, gl_linked_shader*)
000000000038a1b0 0000000000000044 t (anonymous namespace)::shader_storage_buffer_object(_mesa_glsl_parse_state const*)
000000000038a200 0000000000000080 t (anonymous namespace)::lower_ubo_reference_visitor::ssbo_access_params()
000000000038a280 000000000000052c t (anonymous namespace)::lower_ubo_reference_visitor::setup_for_load_or_store(void*, ir_variable*, ir_rvalue*, ir_rvalue**, unsigned int*, bool*, glsl_type const**, glsl_interface_packing)
000000000038a7b0 00000000000005bc t (anonymous namespace)::lower_ubo_reference_visitor::visit_enter(ir_call*)
000000000038ad70 000000000000028c t (anonymous namespace)::lower_ubo_reference_visitor::handle_rvalue(ir_rvalue**)
000000000038b000 0000000000000040 t (anonymous namespace)::lower_ubo_reference_visitor::visit_enter(ir_texture*)
000000000038b040 0000000000000348 t (anonymous namespace)::lower_ubo_reference_visitor::calculate_ssbo_unsized_array_length(ir_expression*)
000000000038b390 00000000000000a0 t (anonymous namespace)::lower_ubo_reference_visitor::visit_enter(ir_expression*)
000000000038b430 00000000000003c8 t (anonymous namespace)::lower_ubo_reference_visitor::ssbo_store(void*, ir_rvalue*, ir_rvalue*, unsigned int)
000000000038b800 0000000000000540 t (anonymous namespace)::lower_ubo_reference_visitor::insert_buffer_access(void*, ir_dereference*, glsl_type const*, ir_rvalue*, unsigned int, int)
000000000038bd40 0000000000000684 t (anonymous namespace)::lower_ubo_reference_visitor::visit_enter(ir_assignment*)
000000000038c3d0 0000000000000074 t lower_ubo_reference(gl_linked_shader*, bool, bool)
000000000038c450 0000000000000094 t (anonymous namespace)::lower_xfb_var_splicer::visit_leave(ir_return*)
000000000038c4f0 000000000000007c t get_field_name(char const*)
000000000038c570 0000000000000200 t get_deref(void*, char const*, gl_linked_shader*, ir_dereference**, glsl_type const**)
000000000038c770 00000000000000d0 t (anonymous namespace)::lower_xfb_var_splicer::visit_leave(ir_function_signature*)
000000000038c840 0000000000000214 t lower_xfb_varying(void*, gl_linked_shader*, char const*)
000000000038ca60 0000000000000004 t (anonymous namespace)::ir_algebraic_visitor::~ir_algebraic_visitor()
000000000038ca60 0000000000000004 t (anonymous namespace)::ir_algebraic_visitor::~ir_algebraic_visitor()
000000000038ca70 000000000000002c t (anonymous namespace)::ir_algebraic_visitor::visit_enter(ir_assignment*)
000000000038caa0 000000000000001c t is_vec_negative_one(ir_constant*)
000000000038cac0 0000000000000008 t (anonymous namespace)::ir_algebraic_visitor::~ir_algebraic_visitor()
000000000038cad0 00000000000000d0 t is_greater_than_zero(ir_constant*)
000000000038cba0 00000000000000dc t is_less_than_one(ir_constant*)
000000000038cc80 000000000000026c t (anonymous namespace)::ir_algebraic_visitor::reassociate_constant(ir_expression*, int, ir_constant*, ir_expression*) [clone .part.0] [clone .isra.0]
000000000038cef0 0000000000000020 t (anonymous namespace)::ir_algebraic_visitor::reassociate_constant(ir_expression*, int, ir_constant*, ir_expression*) [clone .isra.0]
000000000038cf10 0000000000000040 t ir_builder::operand::operand(ir_variable*)
000000000038cf10 0000000000000040 W ir_builder::operand::operand(ir_variable*)
000000000038cf50 0000000000000040 t ir_builder::deref::deref(ir_variable*)
000000000038cf50 0000000000000040 W ir_builder::deref::deref(ir_variable*)
000000000038cf90 0000000000001d1c t (anonymous namespace)::ir_algebraic_visitor::handle_rvalue(ir_rvalue**)
000000000038ecb0 0000000000000068 t do_algebraic(exec_list*, bool, gl_shader_compiler_options const*)
000000000038ed20 0000000000000010 t (anonymous namespace)::ir_array_reference_visitor::visit_leave(ir_assignment*)
000000000038ed30 0000000000000004 W ir_array_splitting_visitor::~ir_array_splitting_visitor()
000000000038ed30 0000000000000004 W ir_array_splitting_visitor::~ir_array_splitting_visitor()
000000000038ed40 0000000000000060 t (anonymous namespace)::ir_array_reference_visitor::visit_enter(ir_assignment*)
000000000038eda0 0000000000000020 t (anonymous namespace)::ir_array_reference_visitor::visit_enter(ir_function_signature*)
000000000038edc0 0000000000000008 W ir_array_splitting_visitor::~ir_array_splitting_visitor()
000000000038edd0 0000000000000120 t (anonymous namespace)::ir_array_reference_visitor::get_variable_entry(ir_variable*)
000000000038eef0 0000000000000040 t (anonymous namespace)::ir_array_reference_visitor::visit(ir_dereference_variable*)
000000000038ef30 0000000000000024 t (anonymous namespace)::ir_array_reference_visitor::visit(ir_variable*)
000000000038ef60 0000000000000074 t (anonymous namespace)::ir_array_reference_visitor::visit_enter(ir_dereference_array*)
000000000038efe0 0000000000000138 t ir_array_splitting_visitor::split_deref(ir_dereference**)
000000000038f120 0000000000000048 T ir_array_splitting_visitor::handle_rvalue(ir_rvalue**)
000000000038f170 000000000000039c t optimize_split_arrays(exec_list*, bool)
000000000038f510 000000000000037c T ir_array_splitting_visitor::visit_leave(ir_assignment*)
000000000038f890 00000000000000c8 t (anonymous namespace)::opt_conditional_discard_visitor::visit_leave(ir_if*)
000000000038f960 000000000000004c t opt_conditional_discard(exec_list*)
000000000038f9b0 0000000000000004 t (anonymous namespace)::ir_constant_folding_visitor::~ir_constant_folding_visitor()
000000000038f9b0 0000000000000004 t (anonymous namespace)::ir_constant_folding_visitor::~ir_constant_folding_visitor()
000000000038f9c0 0000000000000008 t (anonymous namespace)::ir_constant_folding_visitor::~ir_constant_folding_visitor()
000000000038f9d0 0000000000000110 t ir_constant_fold(ir_rvalue**)
000000000038fae0 0000000000000034 t (anonymous namespace)::ir_constant_folding_visitor::handle_rvalue(ir_rvalue**)
000000000038fb20 000000000000008c t (anonymous namespace)::ir_constant_folding_visitor::visit_enter(ir_discard*)
000000000038fbb0 000000000000018c t (anonymous namespace)::ir_constant_folding_visitor::visit_enter(ir_call*)
000000000038fd40 00000000000000c4 t (anonymous namespace)::ir_constant_folding_visitor::visit_enter(ir_assignment*)
000000000038fe10 0000000000000050 t do_constant_folding(exec_list*)
000000000038fe60 0000000000000008 t (anonymous namespace)::ir_constant_propagation_visitor::visit_enter(ir_function*)
000000000038fe70 00000000000002c0 t (anonymous namespace)::ir_constant_propagation_visitor::constant_propagation(ir_rvalue**)
0000000000390130 000000000000008c t (anonymous namespace)::ir_constant_propagation_visitor::visit_enter(ir_function_signature*)
00000000003901c0 0000000000000134 t (anonymous namespace)::ir_constant_propagation_visitor::kill(ir_variable*, unsigned int)
0000000000390300 000000000000013c t (anonymous namespace)::ir_constant_propagation_visitor::handle_loop(ir_loop*, bool)
0000000000390440 000000000000003c t (anonymous namespace)::ir_constant_propagation_visitor::visit_enter(ir_loop*)
0000000000390480 00000000000000a8 t (anonymous namespace)::ir_constant_propagation_visitor::constant_folding(ir_rvalue**)
0000000000390530 000000000000002c t (anonymous namespace)::ir_constant_propagation_visitor::handle_rvalue(ir_rvalue**)
0000000000390560 0000000000000138 t (anonymous namespace)::ir_constant_propagation_visitor::visit_leave(ir_assignment*)
00000000003906a0 00000000000000f4 t (anonymous namespace)::ir_constant_propagation_visitor::handle_if_block(exec_list*, hash_table*, bool*) [clone .constprop.0]
00000000003907a0 0000000000000124 t (anonymous namespace)::ir_constant_propagation_visitor::visit_enter(ir_call*)
00000000003908d0 0000000000000124 t (anonymous namespace)::ir_constant_propagation_visitor::visit_enter(ir_if*)
0000000000390a00 00000000000000b4 t do_constant_propagation(exec_list*)
0000000000390ac0 0000000000000008 t (anonymous namespace)::ir_constant_variable_visitor::visit_enter(ir_dereference_variable*)
0000000000390ad0 0000000000000084 t (anonymous namespace)::ir_constant_variable_visitor::visit(ir_variable*)
0000000000390b60 0000000000000180 t (anonymous namespace)::ir_constant_variable_visitor::visit_enter(ir_call*)
0000000000390ce0 00000000000000f4 t (anonymous namespace)::ir_constant_variable_visitor::visit_enter(ir_assignment*)
0000000000390de0 0000000000000108 t do_constant_variable(exec_list*)
0000000000390ef0 0000000000000090 t do_constant_variable_unlinked(exec_list*)
0000000000390f80 0000000000000008 t (anonymous namespace)::ir_copy_propagation_elements_visitor::visit_leave(ir_swizzle*)
0000000000390f90 000000000000021c t (anonymous namespace)::ir_copy_propagation_elements_visitor::handle_rvalue(ir_rvalue**)
00000000003911b0 000000000000009c t (anonymous namespace)::ir_copy_propagation_elements_visitor::visit(ir_dereference_variable*)
0000000000391250 00000000000000bc t (anonymous namespace)::ir_copy_propagation_elements_visitor::handle_if_block(exec_list*, exec_list*, bool*) [clone .constprop.0]
0000000000391310 00000000000000cc t (anonymous namespace)::ir_copy_propagation_elements_visitor::visit_enter(ir_function_signature*)
00000000003913e0 0000000000000328 t (anonymous namespace)::ir_copy_propagation_elements_visitor::kill((anonymous namespace)::kill_entry*)
0000000000391710 000000000000012c t (anonymous namespace)::ir_copy_propagation_elements_visitor::visit_enter(ir_if*)
0000000000391840 0000000000000174 t (anonymous namespace)::ir_copy_propagation_elements_visitor::handle_loop(ir_loop*, bool)
00000000003919c0 000000000000003c t (anonymous namespace)::ir_copy_propagation_elements_visitor::visit_enter(ir_loop*)
0000000000391a00 00000000000001a8 t (anonymous namespace)::ir_copy_propagation_elements_visitor::visit_enter(ir_call*)
0000000000391bb0 000000000000085c t (anonymous namespace)::ir_copy_propagation_elements_visitor::visit_leave(ir_assignment*)
0000000000392410 00000000000000dc t do_copy_propagation_elements(exec_list*)
00000000003924f0 0000000000000148 t optimize_dead_builtin_variables(exec_list*, ir_variable_mode)
0000000000392640 00000000000001b0 t (anonymous namespace)::replace_varyings_visitor::visit(ir_variable*)
00000000003927f0 00000000000000b0 t (anonymous namespace)::varying_info_visitor::visit(ir_variable*)
00000000003928a0 00000000000000d4 t (anonymous namespace)::varying_info_visitor::visit(ir_dereference_variable*)
0000000000392980 00000000000001f0 t (anonymous namespace)::varying_info_visitor::visit_enter(ir_dereference_array*)
0000000000392b70 00000000000002a4 t (anonymous namespace)::replace_varyings_visitor::handle_rvalue(ir_rvalue**)
0000000000392e20 0000000000000064 t (anonymous namespace)::replace_varyings_visitor::visit_leave(ir_assignment*)
0000000000392e90 0000000000000464 t (anonymous namespace)::replace_varyings_visitor::replace_varyings_visitor(gl_linked_shader*, (anonymous namespace)::varying_info_visitor const*, unsigned int, unsigned int, bool)
0000000000392e90 0000000000000464 t (anonymous namespace)::replace_varyings_visitor::replace_varyings_visitor(gl_linked_shader*, (anonymous namespace)::varying_info_visitor const*, unsigned int, unsigned int, bool)
0000000000393300 0000000000000434 t do_dead_builtin_varyings(gl_context*, gl_linked_shader*, gl_linked_shader*, unsigned int, tfeedback_decl*)
0000000000393740 00000000000001cc t do_dead_code(exec_list*, bool)
0000000000393910 0000000000000094 t do_dead_code_unlinked(exec_list*)
00000000003939b0 000000000000002c t (anonymous namespace)::array_index_visit::visit_enter(ir_dereference_array*)
00000000003939e0 0000000000000128 t (anonymous namespace)::kill_for_derefs_visitor::visit(ir_swizzle*)
0000000000393b10 0000000000000078 t (anonymous namespace)::kill_for_derefs_visitor::visit_leave(ir_emit_vertex*)
0000000000393b90 0000000000000464 t dead_code_local_basic_block(ir_instruction*, ir_instruction*, void*)
0000000000394000 00000000000000c4 t (anonymous namespace)::kill_for_derefs_visitor::visit(ir_dereference_variable*)
00000000003940d0 0000000000000028 t do_dead_code_local(exec_list*)
0000000000394100 0000000000000080 t (anonymous namespace)::ir_dead_functions_visitor::get_signature_entry(ir_function_signature*)
0000000000394180 0000000000000028 t (anonymous namespace)::ir_dead_functions_visitor::visit_enter(ir_call*)
00000000003941b0 0000000000000048 t (anonymous namespace)::ir_dead_functions_visitor::visit_enter(ir_function_signature*)
0000000000394200 0000000000000188 t do_dead_functions(exec_list*)
0000000000394390 0000000000000008 t (anonymous namespace)::nested_if_flattener::visit_enter(ir_assignment*)
00000000003943a0 00000000000000fc t (anonymous namespace)::nested_if_flattener::visit_leave(ir_if*)
00000000003944a0 000000000000004c t opt_flatten_nested_if_blocks(exec_list*)
00000000003944f0 0000000000000178 t (anonymous namespace)::matrix_flipper::visit_enter(ir_expression*)
0000000000394670 00000000000000d4 t opt_flip_matrices(exec_list*)
0000000000394750 0000000000000004 t (anonymous namespace)::ir_function_inlining_visitor::~ir_function_inlining_visitor()
0000000000394750 0000000000000004 t (anonymous namespace)::ir_function_inlining_visitor::~ir_function_inlining_visitor()
0000000000394760 0000000000000008 t (anonymous namespace)::ir_function_inlining_visitor::visit_enter(ir_swizzle*)
0000000000394760 0000000000000008 t (anonymous namespace)::ir_function_inlining_visitor::visit_enter(ir_texture*)
0000000000394760 0000000000000008 t (anonymous namespace)::ir_function_inlining_visitor::visit_enter(ir_expression*)
0000000000394760 0000000000000008 t (anonymous namespace)::ir_function_inlining_visitor::visit_enter(ir_return*)
0000000000394770 0000000000000004 W ir_variable_replacement_visitor::~ir_variable_replacement_visitor()
0000000000394770 0000000000000004 W ir_variable_replacement_visitor::~ir_variable_replacement_visitor()
0000000000394780 0000000000000008 t (anonymous namespace)::ir_function_inlining_visitor::~ir_function_inlining_visitor()
0000000000394790 0000000000000008 W ir_variable_replacement_visitor::~ir_variable_replacement_visitor()
00000000003947a0 0000000000000138 t (anonymous namespace)::ir_save_lvalue_visitor::visit_enter(ir_dereference_array*)
00000000003948e0 00000000000000cc t replace_return_with_assignment(ir_instruction*, void*)
00000000003949b0 00000000000000b0 T ir_variable_replacement_visitor::visit_leave(ir_expression*)
0000000000394a60 0000000000000074 T ir_variable_replacement_visitor::visit_leave(ir_texture*)
0000000000394ae0 0000000000000088 T ir_variable_replacement_visitor::visit_leave(ir_dereference_array*)
0000000000394ae0 0000000000000088 T ir_variable_replacement_visitor::visit_leave(ir_dereference_record*)
0000000000394b70 0000000000000088 T ir_variable_replacement_visitor::visit_leave(ir_return*)
0000000000394c00 000000000000004c t do_function_inlining(exec_list*)
0000000000394c50 000000000000055c t ir_call::generate_inline(ir_instruction*)
00000000003951b0 0000000000000068 t (anonymous namespace)::ir_function_inlining_visitor::visit_enter(ir_call*)
0000000000395220 0000000000000070 t ir_variable_replacement_visitor::replace_deref(ir_dereference**)
0000000000395290 00000000000000b8 T ir_variable_replacement_visitor::visit_leave(ir_call*)
0000000000395350 00000000000000a0 T ir_variable_replacement_visitor::visit_leave(ir_assignment*)
00000000003953f0 0000000000000008 t (anonymous namespace)::ir_if_simplification_visitor::visit_enter(ir_assignment*)
0000000000395400 00000000000001e0 t (anonymous namespace)::ir_if_simplification_visitor::visit_leave(ir_if*)
00000000003955e0 000000000000004c t do_if_simplification(exec_list*)
0000000000395630 0000000000000250 t (anonymous namespace)::compare_components(ir_constant*, ir_constant*)
0000000000395880 000000000000028c t (anonymous namespace)::combine_constant(bool, ir_constant*, ir_constant*)
0000000000395b10 00000000000001b4 t (anonymous namespace)::get_range(ir_rvalue*)
0000000000395cd0 0000000000000324 t (anonymous namespace)::ir_minmax_visitor::prune_expression(ir_expression*, (anonymous namespace)::minmax_range)
0000000000396000 00000000000000e0 t (anonymous namespace)::ir_minmax_visitor::handle_rvalue(ir_rvalue**)
00000000003960e0 0000000000000050 t do_minmax_prune(exec_list*)
0000000000396130 000000000000002c t (anonymous namespace)::ir_rebalance_visitor::visit_enter(ir_assignment*)
0000000000396160 0000000000000180 t handle_expression(ir_expression*)
00000000003962e0 0000000000000064 t update_types(ir_instruction*, void*)
0000000000396350 00000000000000a8 t (anonymous namespace)::ir_rebalance_visitor::handle_rvalue(ir_rvalue**)
0000000000396400 0000000000000124 t is_reduction(ir_instruction*, void*)
0000000000396530 000000000000004c t do_rebalance_tree(exec_list*)
0000000000396580 0000000000000008 t (anonymous namespace)::redundant_jumps_visitor::visit_enter(ir_assignment*)
0000000000396590 00000000000000d0 t (anonymous namespace)::redundant_jumps_visitor::visit_leave(ir_if*)
0000000000396660 0000000000000054 t (anonymous namespace)::redundant_jumps_visitor::visit_leave(ir_loop*)
00000000003966c0 000000000000004c t optimize_redundant_jumps(exec_list*)
0000000000396710 0000000000000008 t (anonymous namespace)::ir_structure_reference_visitor::visit_enter(ir_dereference_record*)
0000000000396720 0000000000000004 t (anonymous namespace)::ir_structure_splitting_visitor::~ir_structure_splitting_visitor()
0000000000396720 0000000000000004 t (anonymous namespace)::ir_structure_splitting_visitor::~ir_structure_splitting_visitor()
0000000000396730 0000000000000020 t (anonymous namespace)::ir_structure_reference_visitor::visit_enter(ir_function_signature*)
0000000000396750 0000000000000008 t (anonymous namespace)::ir_structure_splitting_visitor::~ir_structure_splitting_visitor()
0000000000396760 00000000000000d0 t (anonymous namespace)::ir_structure_reference_visitor::get_variable_entry(ir_variable*)
0000000000396830 0000000000000024 t (anonymous namespace)::ir_structure_reference_visitor::visit(ir_variable*)
0000000000396860 000000000000004c t (anonymous namespace)::ir_structure_reference_visitor::visit_enter(ir_assignment*)
00000000003968b0 0000000000000064 t (anonymous namespace)::ir_structure_reference_visitor::visit(ir_dereference_variable*)
0000000000396920 00000000000000c0 t (anonymous namespace)::ir_structure_splitting_visitor::handle_rvalue(ir_rvalue**)
00000000003969e0 0000000000000350 t (anonymous namespace)::ir_structure_splitting_visitor::visit_leave(ir_assignment*)
0000000000396d30 0000000000000328 t do_structure_splitting(exec_list*)
0000000000397060 00000000000001fc t (anonymous namespace)::ir_opt_swizzle_visitor::handle_rvalue(ir_rvalue**)
0000000000397260 0000000000000050 t optimize_swizzles(exec_list*)
00000000003972b0 0000000000000008 t (anonymous namespace)::ir_tree_grafting_visitor::visit_enter(ir_loop*)
00000000003972c0 0000000000000008 t (anonymous namespace)::ir_tree_grafting_visitor::visit_enter(ir_function*)
00000000003972c0 0000000000000008 t (anonymous namespace)::ir_tree_grafting_visitor::visit_enter(ir_function_signature*)
00000000003972d0 00000000000001ec t (anonymous namespace)::tree_grafting_basic_block(ir_instruction*, ir_instruction*, void*)
00000000003974c0 0000000000000040 t (anonymous namespace)::ir_tree_grafting_visitor::check_graft(ir_instruction*, ir_variable*)
0000000000397500 0000000000000064 t (anonymous namespace)::ir_tree_grafting_visitor::do_graft(ir_rvalue**)
0000000000397570 0000000000000020 t (anonymous namespace)::ir_tree_grafting_visitor::visit_enter(ir_if*)
0000000000397590 000000000000012c t (anonymous namespace)::ir_tree_grafting_visitor::visit_enter(ir_call*)
00000000003976c0 000000000000001c t (anonymous namespace)::ir_tree_grafting_visitor::visit_enter(ir_swizzle*)
00000000003976e0 00000000000000d4 t (anonymous namespace)::ir_tree_grafting_visitor::visit_enter(ir_texture*)
00000000003977c0 0000000000000068 t (anonymous namespace)::ir_tree_grafting_visitor::visit_enter(ir_expression*)
0000000000397830 0000000000000070 t (anonymous namespace)::ir_tree_grafting_visitor::visit_leave(ir_assignment*)
00000000003978a0 000000000000002c t (anonymous namespace)::dereferences_variable_callback(ir_instruction*, void*)
00000000003978d0 0000000000000064 t do_tree_grafting(exec_list*)
0000000000397940 0000000000000098 t (anonymous namespace)::ir_vectorize_visitor::visit_enter(ir_swizzle*)
00000000003979e0 0000000000000010 t (anonymous namespace)::ir_vectorize_visitor::visit_enter(ir_texture*)
00000000003979e0 0000000000000010 t (anonymous namespace)::ir_vectorize_visitor::visit_enter(ir_dereference_array*)
00000000003979f0 0000000000000048 t (anonymous namespace)::ir_vectorize_visitor::visit_enter(ir_expression*)
0000000000397a40 0000000000000134 t (anonymous namespace)::ir_vectorize_visitor::try_vectorize()
0000000000397b80 0000000000000058 t (anonymous namespace)::ir_vectorize_visitor::visit_enter(ir_if*)
0000000000397be0 00000000000000e8 t (anonymous namespace)::ir_vectorize_visitor::visit_enter(ir_assignment*)
0000000000397cd0 0000000000000040 t (anonymous namespace)::ir_vectorize_visitor::visit_enter(ir_loop*)
0000000000397d10 0000000000000154 t rewrite_swizzle(ir_instruction*, void*)
0000000000397e70 0000000000000064 t (anonymous namespace)::ir_vectorize_visitor::visit_leave(ir_assignment*)
0000000000397ee0 0000000000000064 t do_vectorize(exec_list*)
0000000000397f50 0000000000000004 t (anonymous namespace)::ir_invariance_propagation_visitor::~ir_invariance_propagation_visitor()
0000000000397f50 0000000000000004 t (anonymous namespace)::ir_invariance_propagation_visitor::~ir_invariance_propagation_visitor()
0000000000397f60 0000000000000058 t (anonymous namespace)::ir_invariance_propagation_visitor::visit_enter(ir_assignment*)
0000000000397fc0 0000000000000010 t (anonymous namespace)::ir_invariance_propagation_visitor::visit_leave(ir_assignment*)
0000000000397fd0 0000000000000008 t (anonymous namespace)::ir_invariance_propagation_visitor::~ir_invariance_propagation_visitor()
0000000000397fe0 0000000000000060 t (anonymous namespace)::ir_invariance_propagation_visitor::visit(ir_dereference_variable*)
0000000000398040 0000000000000058 t propagate_invariance(exec_list*)
00000000003980a0 0000000000000048 t string_to_uint_map_ctor
00000000003980f0 0000000000000074 t string_to_uint_map_dtor
0000000000398170 00000000000000c0 t yytnamerr(char*, char const*)
0000000000398230 0000000000000280 t yysyntax_error(unsigned long*, char**, short*, int)
00000000003984b0 0000000000000024 t _mesa_glsl_parse_state::has_shader_storage_buffer_objects() const [clone .part.0] [clone .isra.0]
00000000003984e0 0000000000000038 t match_layout_qualifier(char const*, char const*, _mesa_glsl_parse_state*) [clone .isra.0]
0000000000398520 000000000000004c t _mesa_glsl_parse_state::has_tessellation_shader() const
0000000000398570 0000000000007ec4 t _mesa_glsl_parse(_mesa_glsl_parse_state*)
00000000003a0440 00000000000000f8 t yy_get_previous_state(void*)
00000000003a0540 000000000000022c t literal_integer(char*, int, _mesa_glsl_parse_state*, YYSTYPE*, YYLTYPE*, int)
00000000003a0770 00000000000000b0 t classify_identifier(_mesa_glsl_parse_state*, char const*, unsigned int, YYSTYPE*)
00000000003a0820 0000000000000030 t yy_fatal_error(char const*, void*) [clone .constprop.0]
00000000003a0850 00000000000000a0 t _mesa_glsl_lexer_ensure_buffer_stack(void*)
00000000003a08f0 00000000000000b4 t _mesa_glsl_lexer__switch_to_buffer(yy_buffer_state*, void*)
00000000003a09b0 000000000000006c t _mesa_glsl_lexer__delete_buffer(yy_buffer_state*, void*)
00000000003a0a20 000000000000006c t _mesa_glsl_lexer__flush_buffer(yy_buffer_state*, void*)
00000000003a0a90 000000000000007c t _mesa_glsl_lexer__init_buffer(yy_buffer_state*, __sFILE*, void*)
00000000003a0b10 000000000000007c t _mesa_glsl_lexer__create_buffer(__sFILE*, int, void*)
00000000003a0b90 00000000000000bc t _mesa_glsl_lexer_restart(__sFILE*, void*)
00000000003a0c50 000000000000d6a0 t _mesa_glsl_lexer_lex(YYSTYPE*, YYLTYPE*, void*)
00000000003ae2f0 000000000000008c t _mesa_glsl_lexer_pop_buffer_state(void*)
00000000003ae380 00000000000000bc t _mesa_glsl_lexer__scan_buffer(char*, unsigned long, void*)
00000000003ae440 00000000000000a4 t _mesa_glsl_lexer__scan_bytes(char const*, int, void*)
00000000003ae4f0 0000000000000098 t _mesa_glsl_lexer_lex_init_extra(_mesa_glsl_parse_state*, void**)
00000000003ae590 000000000000007c t _mesa_glsl_lexer_lex_destroy(void*)
00000000003ae610 000000000000003c t _mesa_glsl_lexer_ctor(_mesa_glsl_parse_state*, char const*)
00000000003ae650 0000000000000008 t _mesa_glsl_lexer_dtor(_mesa_glsl_parse_state*)
00000000003ae660 00000000000000d0 t glcpp_error
00000000003ae730 00000000000000bc t glcpp_warning
00000000003ae7f0 0000000000000330 t glcpp_preprocess
00000000003aeb20 00000000000000e0 t yy_get_previous_state
00000000003aec00 0000000000000030 t yy_fatal_error.constprop.0
00000000003aec30 00000000000000a0 t glcpp_ensure_buffer_stack
00000000003aecd0 00000000000000b4 t glcpp__switch_to_buffer
00000000003aed90 000000000000006c t glcpp__delete_buffer
00000000003aee00 000000000000006c t glcpp__flush_buffer
00000000003aee70 000000000000007c t glcpp__init_buffer
00000000003aeef0 000000000000007c t glcpp__create_buffer
00000000003aef70 00000000000000bc t glcpp_restart
00000000003af030 0000000000002710 t glcpp_lex
00000000003b1740 000000000000008c t glcpp_pop_buffer_state
00000000003b17d0 00000000000000bc t glcpp__scan_buffer
00000000003b1890 00000000000000a4 t glcpp__scan_bytes
00000000003b1940 0000000000000098 t glcpp_lex_init_extra
00000000003b19e0 000000000000007c t glcpp_lex_destroy
00000000003b1a60 0000000000000034 t glcpp_lex_set_source_string
00000000003b1aa0 00000000000000c0 t yytnamerr
00000000003b1b60 0000000000000280 t yysyntax_error
00000000003b1de0 0000000000000088 t yy_stack_print
00000000003b1e70 00000000000000d4 t _check_for_reserved_macro_name
00000000003b1f50 00000000000000b0 t _glcpp_parser_skip_stack_push_if
00000000003b2000 000000000000019c t _glcpp_parser_evaluate_defined_in_list
00000000003b21a0 0000000000000124 t yy_symbol_print.constprop.0
00000000003b22d0 0000000000000078 t yydestruct.isra.0
00000000003b2350 0000000000000288 t _macro_equal
00000000003b25e0 000000000000009c t glcpp_parser_copy_defines
00000000003b2680 00000000000000c8 t _define_object_macro
00000000003b2750 0000000000000130 t _define_function_macro
00000000003b2880 00000000000000d0 t _token_list_copy
00000000003b2950 00000000000000a0 t _token_list_create_with_one_ival
00000000003b29f0 00000000000000b0 t add_builtin_define
00000000003b2aa0 0000000000000264 t _glcpp_parser_handle_version_declaration.part.0
00000000003b2d10 00000000000001a4 t _token_print
00000000003b2ec0 00000000000004b8 t _glcpp_parser_apply_pastes
00000000003b3380 0000000000000900 t _glcpp_parser_expand_token_list
00000000003b3c80 000000000000019c t _glcpp_parser_expand_and_lex_from
00000000003b3e20 0000000000000108 t glcpp_parser_create
00000000003b3f30 000000000000203c t glcpp_parser_parse
00000000003b5f70 0000000000000034 t glcpp_parser_destroy
00000000003b5fb0 000000000000002c t glcpp_parser_resolve_implicit_version
00000000003b5fe0 0000000000000060 T glsl_type::record_key_hash(void const*)
00000000003b6040 000000000000005c t hash_free_type_function(hash_entry*)
00000000003b60a0 0000000000000084 t glsl_type::glsl_type(unsigned int, glsl_base_type, unsigned int, unsigned int, char const*, unsigned int, bool)
00000000003b60a0 0000000000000084 T glsl_type::glsl_type(unsigned int, glsl_base_type, unsigned int, unsigned int, char const*, unsigned int, bool)
00000000003b6130 0000000000000074 t glsl_type::glsl_type(unsigned int, glsl_base_type, glsl_sampler_dim, bool, bool, glsl_base_type, char const*)
00000000003b6130 0000000000000074 T glsl_type::glsl_type(unsigned int, glsl_base_type, glsl_sampler_dim, bool, bool, glsl_base_type, char const*)
00000000003b61b0 00000000000000d8 t glsl_type::glsl_type(glsl_struct_field const*, unsigned int, char const*, bool)
00000000003b61b0 00000000000000d8 T glsl_type::glsl_type(glsl_struct_field const*, unsigned int, char const*, bool)
00000000003b6290 00000000000000e0 t glsl_type::glsl_type(glsl_struct_field const*, unsigned int, glsl_interface_packing, bool, char const*)
00000000003b6290 00000000000000e0 T glsl_type::glsl_type(glsl_struct_field const*, unsigned int, glsl_interface_packing, bool, char const*)
00000000003b6370 0000000000000008 t glsl_type::~glsl_type()
00000000003b6370 0000000000000008 T glsl_type::~glsl_type()
00000000003b6380 0000000000000088 t glsl_type::contains_sampler() const
00000000003b6410 0000000000000078 t glsl_type::contains_array() const
00000000003b6490 000000000000009c t glsl_type::contains_integer() const
00000000003b6530 0000000000000088 t glsl_type::contains_double() const
00000000003b65c0 0000000000000098 t glsl_type::contains_opaque() const
00000000003b6660 0000000000000088 t glsl_type::contains_subroutine() const
00000000003b66f0 00000000000000c4 t glsl_type::sampler_index() const
00000000003b67c0 0000000000000088 t glsl_type::contains_image() const
00000000003b6850 00000000000000fc t glsl_type::get_base_type() const
00000000003b6950 0000000000000048 t glsl_type::get_scalar_type() const
00000000003b69a0 000000000000003c t glsl_type_singleton_init_or_ref
00000000003b69e0 00000000000000e4 t glsl_type_singleton_decref
00000000003b6ad0 0000000000000158 t glsl_type::glsl_type(glsl_type const*, unsigned int, unsigned int)
00000000003b6ad0 0000000000000158 T glsl_type::glsl_type(glsl_type const*, unsigned int, unsigned int)
00000000003b6c30 00000000000000dc t glsl_type::vec(unsigned int)
00000000003b6d10 00000000000000dc t glsl_type::f16vec(unsigned int)
00000000003b6df0 00000000000000dc t glsl_type::dvec(unsigned int)
00000000003b6ed0 00000000000000dc t glsl_type::ivec(unsigned int)
00000000003b6fb0 00000000000000dc t glsl_type::uvec(unsigned int)
00000000003b7090 00000000000000dc t glsl_type::bvec(unsigned int)
00000000003b7170 00000000000000dc t glsl_type::i64vec(unsigned int)
00000000003b7250 00000000000000dc t glsl_type::u64vec(unsigned int)
00000000003b7330 00000000000000dc t glsl_type::i16vec(unsigned int)
00000000003b7410 00000000000000dc t glsl_type::u16vec(unsigned int)
00000000003b74f0 00000000000000dc t glsl_type::i8vec(unsigned int)
00000000003b75d0 00000000000000dc t glsl_type::u8vec(unsigned int)
00000000003b76b0 00000000000005a8 t glsl_type::get_instance(unsigned int, unsigned int, unsigned int, unsigned int, bool)
00000000003b7c60 00000000000003c0 t glsl_type::get_sampler_instance(glsl_sampler_dim, bool, bool, glsl_base_type)
00000000003b8020 0000000000000390 t glsl_type::get_image_instance(glsl_sampler_dim, bool, glsl_base_type)
00000000003b83b0 00000000000000f8 t glsl_type::get_array_instance(glsl_type const*, unsigned int, unsigned int)
00000000003b84b0 00000000000000c0 t glsl_type::compare_no_precision(glsl_type const*) const
00000000003b8570 0000000000000170 t glsl_type::record_compare(glsl_type const*, bool, bool, bool) const [clone .part.0]
00000000003b86e0 000000000000007c T glsl_type::record_key_compare(void const*, void const*)
00000000003b8760 000000000000004c t glsl_type::record_compare(glsl_type const*, bool, bool, bool) const
00000000003b87b0 0000000000000100 t glsl_type::get_struct_instance(glsl_struct_field const*, unsigned int, char const*, bool)
00000000003b88b0 000000000000010c t glsl_type::get_interface_instance(glsl_struct_field const*, unsigned int, glsl_interface_packing, bool, char const*)
00000000003b89c0 000000000000011c t glsl_type::get_subroutine_instance(char const*)
00000000003b8ae0 000000000000036c t glsl_type::get_mul_type(glsl_type const*, glsl_type const*)
00000000003b8e50 00000000000000a4 t glsl_type::field_type(char const*) const
00000000003b8f00 0000000000000090 t glsl_type::field_index(char const*) const
00000000003b8f90 0000000000000138 t glsl_type::component_slots() const
00000000003b90d0 0000000000000154 t glsl_type::struct_location_offset(unsigned int) const
00000000003b9230 00000000000000f0 t glsl_type::uniform_locations() const
00000000003b9320 0000000000000138 t glsl_type::varying_count() const
00000000003b9460 00000000000001ac t glsl_type::can_implicitly_convert_to(glsl_type const*, _mesa_glsl_parse_state*) const
00000000003b9610 0000000000000264 t glsl_type::std140_base_alignment(bool) const
00000000003b9880 0000000000000390 t glsl_type::std140_size(bool) const
00000000003b9c10 00000000000001f0 t glsl_type::std430_base_alignment(bool) const
00000000003b9e00 0000000000000310 t glsl_type::std430_size(bool) const
00000000003ba110 000000000000005c t glsl_type::std430_array_stride(bool) const
00000000003ba170 0000000000000160 t glsl_type::count_vec4_slots(bool, bool) const
00000000003ba2d0 0000000000000064 t glsl_type::coordinate_components() const
00000000003ba340 0000000000000378 t encode_type_to_blob
00000000003ba6c0 00000000000002a4 t decode_type_from_blob
00000000003ba970 0000000000000080 t _mesa_shader_stage_to_string
00000000003ba9f0 000000000000013c t cso_set_vertex_elements_direct
00000000003bab30 0000000000000114 t cso_single_sampler.part.0
00000000003bac50 0000000000000078 t cso_init_vbuf.constprop.0
00000000003bacd0 000000000000026c t sanitize_hash
00000000003baf40 000000000000016c t cso_set_vertex_buffers_direct
00000000003bb0b0 00000000000005a4 t cso_destroy_context
00000000003bb660 0000000000000138 t cso_create_context
00000000003bb7a0 0000000000000138 t cso_set_blend
00000000003bb8e0 0000000000000110 t cso_set_depth_stencil_alpha
00000000003bb9f0 0000000000000110 t cso_set_rasterizer
00000000003bbb00 0000000000000028 t cso_set_fragment_shader_handle
00000000003bbb30 0000000000000028 t cso_set_vertex_shader_handle
00000000003bbb60 000000000000006c t cso_set_framebuffer
00000000003bbbd0 000000000000007c t cso_set_viewport
00000000003bbc50 0000000000000054 t cso_set_viewport_dims
00000000003bbcb0 0000000000000044 t cso_set_blend_color
00000000003bbd00 0000000000000028 t cso_set_sample_mask
00000000003bbd30 000000000000002c t cso_set_min_samples
00000000003bbd60 000000000000002c t cso_set_stencil_ref
00000000003bbd90 000000000000008c t cso_set_render_condition
00000000003bbe20 0000000000000030 t cso_set_geometry_shader_handle
00000000003bbe50 0000000000000030 t cso_set_tessctrl_shader_handle
00000000003bbe80 0000000000000030 t cso_set_tesseval_shader_handle
00000000003bbeb0 0000000000000030 t cso_set_compute_shader_handle
00000000003bbee0 0000000000000034 t cso_set_vertex_elements
00000000003bbf20 000000000000001c t cso_set_vertex_buffers
00000000003bbf40 000000000000025c t cso_set_vertex_buffers_and_elements
00000000003bc1a0 00000000000000a0 t cso_set_samplers
00000000003bc240 00000000000001b4 t cso_set_sampler_views
00000000003bc400 0000000000000194 t cso_set_shader_images
00000000003bc5a0 0000000000000188 t cso_set_stream_outputs
00000000003bc730 0000000000000184 t cso_set_constant_buffer
00000000003bc8c0 00000000000000dc t cso_save_constant_buffer_slot0
00000000003bc9a0 000000000000019c t cso_restore_constant_buffer_slot0
00000000003bcb40 00000000000004fc t cso_save_state
00000000003bd040 000000000000084c t cso_restore_state
00000000003bd890 0000000000000020 t cso_draw_vbo
00000000003bd8b0 0000000000000068 t cso_draw_arrays
00000000003bd920 0000000000000064 t cso_draw_arrays_instanced
00000000003bd990 0000000000000278 t cso_data_rehash
00000000003bdc10 00000000000000c8 t cso_hash_insert
00000000003bdce0 0000000000000014 t cso_hash_init
00000000003bdd00 0000000000000070 t cso_hash_deinit
00000000003bdd70 0000000000000020 t cso_hash_iter_key
00000000003bdd90 0000000000000064 t cso_hash_data_next
00000000003bde00 00000000000000cc t cso_hash_take
00000000003bded0 0000000000000038 t cso_hash_first_node
00000000003bdf10 0000000000000008 t cso_hash_size
00000000003bdf20 00000000000000a4 t cso_hash_erase
00000000003bdfd0 0000000000000064 t cso_hash_contains
00000000003be040 0000000000000008 t tgsi_build_header
00000000003be050 0000000000000014 t tgsi_build_processor
00000000003be070 0000000000000024 t tgsi_default_full_declaration
00000000003be0a0 000000000000020c t tgsi_build_full_declaration
00000000003be2b0 0000000000000010 t tgsi_default_full_immediate
00000000003be2c0 00000000000000b8 t tgsi_build_full_immediate
00000000003be380 000000000000000c t tgsi_default_instruction
00000000003be390 0000000000000098 t tgsi_default_full_instruction
00000000003be430 0000000000000554 t tgsi_build_full_instruction
00000000003be990 0000000000000034 t tgsi_default_full_property
00000000003be9d0 00000000000000e0 t tgsi_build_full_property
00000000003beab0 000000000000004c t tgsi_full_src_register_from_dst
00000000003beb00 0000000000000090 t dump_ctx_printf
00000000003beb90 00000000000000b0 t _dump_writemask.part.0
00000000003bec40 0000000000000070 t prolog
00000000003becb0 000000000000029c t iter_immediate
00000000003bef50 0000000000000228 t iter_property
00000000003bf180 0000000000000e3c t iter_instruction
00000000003bffc0 0000000000000a20 t iter_declaration
00000000003c09e0 0000000000000070 t tgsi_dump_to_file
00000000003c0a50 0000000000000008 t tgsi_dump
00000000003c0a60 0000000000000040 t transform_decl
00000000003c0aa0 0000000000000208 t transform_instr
00000000003c0cb0 00000000000000c0 t tgsi_emulate
00000000003c0d70 0000000000000040 t tgsi_get_generic_gl_varying_index
00000000003c0db0 00000000000001d4 t tgsi_get_gl_varying_semantic
00000000003c0f90 00000000000000f0 t tgsi_get_sysval_semantic
00000000003c1080 0000000000000028 t tgsi_get_opcode_info
00000000003c10b0 0000000000000024 t tgsi_get_opcode_name
00000000003c10e0 0000000000000134 t tgsi_iterate_shader
00000000003c1220 0000000000000038 t tgsi_parse_init
00000000003c1260 0000000000000004 t tgsi_parse_free
00000000003c1270 0000000000000020 t tgsi_parse_end_of_tokens
00000000003c1290 000000000000042c t tgsi_parse_token
00000000003c16c0 0000000000000054 t tgsi_dup_tokens
00000000003c1720 0000000000000008 t tgsi_alloc_tokens
00000000003c1730 0000000000000004 t tgsi_free_tokens
00000000003c1740 0000000000000598 t scan_src_operand
00000000003c1ce0 0000000000001048 t tgsi_scan_shader
00000000003c2d30 0000000000000024 t tgsi_file_name
00000000003c2d60 0000000000000044 t emit_property
00000000003c2db0 0000000000000044 t emit_immediate
00000000003c2e00 0000000000000044 t emit_declaration
00000000003c2e50 0000000000000044 t emit_instruction
00000000003c2ea0 00000000000002b0 t tgsi_transform_shader
00000000003c3150 0000000000000178 t match_or_expand_immediate
00000000003c32d0 000000000000004c t tokens_error
00000000003c3320 0000000000000104 t get_tokens
00000000003c3430 00000000000000c0 t emit_decl_semantic
00000000003c34f0 00000000000000ec t alloc_temporary
00000000003c35e0 0000000000000230 t decl_immediate
00000000003c3810 0000000000000018 t ureg_property
00000000003c3830 0000000000000140 t ureg_DECL_fs_input_cyl_centroid_layout
00000000003c3970 0000000000000034 t ureg_DECL_fs_input_cyl_centroid
00000000003c39b0 000000000000003c t ureg_DECL_vs_input
00000000003c39f0 000000000000003c t ureg_DECL_input
00000000003c3a30 0000000000000114 t ureg_DECL_system_value
00000000003c3b50 0000000000000160 t ureg_DECL_output_layout
00000000003c3cb0 0000000000000038 t ureg_DECL_output
00000000003c3cf0 0000000000000040 t ureg_DECL_constant2D
00000000003c3d30 0000000000000160 t ureg_DECL_constant
00000000003c3e90 00000000000000a0 t ureg_DECL_hw_atomic
00000000003c3f30 0000000000000008 t ureg_DECL_temporary
00000000003c3f40 0000000000000008 t ureg_DECL_local_temporary
00000000003c3f50 00000000000000b4 t ureg_DECL_array_temporary
00000000003c4010 0000000000000024 t ureg_release_temporary
00000000003c4040 0000000000000048 t ureg_DECL_address
00000000003c4090 00000000000000d0 t ureg_DECL_sampler
00000000003c4160 00000000000000b8 t ureg_DECL_sampler_view
00000000003c4220 00000000000000bc t ureg_DECL_image
00000000003c42e0 00000000000000a8 t ureg_DECL_buffer
00000000003c4390 000000000000002c t ureg_DECL_memory
00000000003c43c0 000000000000004c t ureg_DECL_immediate
00000000003c4410 000000000000003c t ureg_DECL_immediate_f64
00000000003c4450 0000000000000008 t ureg_DECL_immediate_uint
00000000003c4460 0000000000000008 t ureg_DECL_immediate_int
00000000003c4470 000000000000003c t ureg_DECL_immediate_uint64
00000000003c44b0 000000000000003c t ureg_DECL_immediate_int64
00000000003c44f0 000000000000019c t ureg_emit_src
00000000003c4690 0000000000000158 t ureg_emit_dst
00000000003c47f0 00000000000000a4 t ureg_emit_insn
00000000003c48a0 000000000000011c t ureg_emit_texture
00000000003c49c0 0000000000000038 t ureg_fixup_insn_size
00000000003c4a00 0000000000000170 t ureg_insn
00000000003c4b70 00000000000001fc t ureg_tex_insn
00000000003c4d70 0000000000000184 t ureg_memory_insn
00000000003c4f00 0000000000000afc t ureg_finalize
00000000003c5a00 0000000000000144 t ureg_create_shader
00000000003c5b50 0000000000000044 t ureg_get_tokens
00000000003c5ba0 0000000000000004 t ureg_free_tokens
00000000003c5bb0 00000000000000ec t ureg_create_with_screen
00000000003c5ca0 0000000000000008 t ureg_create
00000000003c5cb0 0000000000000008 t ureg_set_next_shader_processor
00000000003c5cc0 000000000000007c t ureg_destroy
00000000003c5d40 0000000000000050 t tgsi_util_get_src_register_swizzle
00000000003c5d90 000000000000046c t tgsi_util_get_inst_usage_mask
00000000003c6200 0000000000000028 t tgsi_util_get_src_from_ind
00000000003c6230 0000000000000058 t util_bitmask_create
00000000003c6290 0000000000000100 t util_bitmask_set
00000000003c6390 000000000000003c t util_bitmask_clear
00000000003c63d0 000000000000005c t util_bitmask_get
00000000003c6430 000000000000009c t util_bitmask_get_next_index
00000000003c64d0 0000000000000008 t util_bitmask_get_first_index
00000000003c64e0 0000000000000030 t util_bitmask_destroy
00000000003c6510 0000000000000250 t util_copy_framebuffer_state
00000000003c6760 00000000000000b8 t util_unreference_framebuffer_state
00000000003c6820 000000000000007c t util_framebuffer_get_num_layers
00000000003c68a0 000000000000009c t util_framebuffer_get_num_samples
00000000003c6940 00000000000000d0 t util_sample_locations_flip_y
00000000003c6a10 00000000000002e8 t util_gen_mipmap
00000000003c6d00 0000000000000240 t util_set_vertex_buffers_mask
00000000003c6f40 000000000000008c t util_set_vertex_buffers_count
00000000003c6fd0 0000000000000008 t util_throttle_init
00000000003c6fe0 0000000000000050 t util_throttle_deinit
00000000003c7030 000000000000024c t util_throttle_memory_usage
00000000003c7280 0000000000000010 t u_prim_name
00000000003c7290 00000000000000d8 t u_sampler_view_default_template
00000000003c7370 0000000000000198 t u_pipe_screen_get_param_defaults
00000000003c7510 000000000000022c t util_make_vertex_passthrough_shader_with_so
00000000003c7740 000000000000000c t util_make_vertex_passthrough_shader
00000000003c7750 0000000000000034 t util_make_layered_clear_vertex_shader
00000000003c7790 000000000000009c t util_make_layered_clear_helper_vertex_shader
00000000003c7830 000000000000009c t util_make_layered_clear_geometry_shader
00000000003c78d0 00000000000000e0 t util_make_fragment_passthrough_shader
00000000003c79b0 0000000000000124 t pipe_get_tile_raw
00000000003c7ae0 0000000000000770 t pipe_get_tile_rgba
00000000003c8250 00000000000000a4 t upload_unmap_internal
00000000003c8300 0000000000000088 t u_upload_create
00000000003c8390 0000000000000014 t u_upload_create_default
00000000003c83b0 0000000000000008 t u_upload_unmap
00000000003c83c0 0000000000000070 t u_upload_destroy
00000000003c8430 000000000000039c t u_upload_alloc
00000000003c87d0 0000000000000050 t u_upload_data
00000000003c8820 0000000000000034 t u_vbuf_delete_vertex_elements
00000000003c8860 00000000000001e8 t u_vbuf_get_minmax_index_mapped
00000000003c8a50 0000000000000068 t u_vbuf_set_driver_vertex_buffers
00000000003c8ac0 0000000000000398 t u_vbuf_set_vertex_elements_internal
00000000003c8e60 00000000000009cc t u_vbuf_translate_begin
00000000003c9830 0000000000000254 t u_vbuf_get_caps
00000000003c9a90 00000000000000ac t u_vbuf_create
00000000003c9b40 0000000000000024 t u_vbuf_set_vertex_elements
00000000003c9b70 0000000000000008 t u_vbuf_unset_vertex_elements
00000000003c9b80 00000000000001a8 t u_vbuf_destroy
00000000003c9d30 0000000000000594 t u_vbuf_set_vertex_buffers
00000000003ca2d0 00000000000000c4 t u_vbuf_get_minmax_index
00000000003ca3a0 00000000000008c0 t u_vbuf_draw_vbo
00000000003cac60 00000000000000c4 t u_vbuf_split_indexed_multidraw
00000000003cad30 000000000000000c t u_vbuf_save_vertex_elements
00000000003cad40 0000000000000048 t u_vbuf_restore_vertex_elements
00000000003cad90 00000000000000bc t u_vbuf_save_vertex_buffer0
00000000003cae50 000000000000009c t u_vbuf_restore_vertex_buffer0
00000000003caef0 000000000000009c t nouveau_transfer_read
00000000003caf90 000000000000005c t nouveau_scratch_unref_bos
00000000003caff0 00000000000000e4 t nouveau_transfer_staging.isra.0
00000000003cb0e0 00000000000001ec t nouveau_scratch_more
00000000003cb2d0 00000000000000f8 t nouveau_buffer_destroy
00000000003cb3d0 000000000000013c t nouveau_buffer_cache.isra.0
00000000003cb510 0000000000000190 t nouveau_transfer_write
00000000003cb6a0 00000000000000dc t nouveau_buffer_transfer_flush_region
00000000003cb780 0000000000000160 t nouveau_buffer_transfer_unmap
00000000003cb8e0 0000000000000590 t nouveau_buffer_transfer_map
00000000003cbe70 0000000000000214 t nouveau_copy_buffer
00000000003cc090 0000000000000174 t nouveau_resource_map_offset
00000000003cc210 0000000000000248 t nouveau_buffer_create
00000000003cc460 0000000000000258 t nouveau_buffer_invalidate
00000000003cc6c0 000000000000004c t nouveau_scratch_runout_release
00000000003cc710 00000000000000b8 t nouveau_scratch_data
00000000003cc7d0 0000000000000094 t nouveau_scratch_get
00000000003cc870 0000000000000064 t nouveau_fence_trigger_work
00000000003cc8e0 0000000000000058 t nouveau_fence_new
00000000003cc940 0000000000000060 t nouveau_fence_emit
00000000003cc9a0 00000000000000a8 t nouveau_fence_del
00000000003cca50 00000000000000ec t nouveau_fence_update
00000000003ccb40 000000000000005c t nouveau_fence_signalled
00000000003ccba0 00000000000000c0 t nouveau_fence_next
00000000003ccc60 0000000000000104 t nouveau_fence_kick
00000000003ccd70 0000000000000114 t nouveau_fence_wait
00000000003cce90 0000000000000024 T nouveau_fence_unref_bo
00000000003ccec0 00000000000000d4 t nouveau_fence_work
00000000003ccfa0 0000000000000054 t nouveau_heap_init
00000000003cd000 000000000000002c t nouveau_heap_destroy
00000000003cd030 00000000000000e8 t nouveau_heap_alloc
00000000003cd120 00000000000000b8 t nouveau_heap_free
00000000003cd1e0 00000000000002d8 t nouveau_mm_allocate
00000000003cd4c0 00000000000000dc t nouveau_mm_free
00000000003cd5a0 0000000000000004 T nouveau_mm_free_work
00000000003cd5b0 0000000000000078 t nouveau_mm_create
00000000003cd630 000000000000013c t nouveau_mm_destroy
00000000003cd770 000000000000000c t nouveau_screen_get_vendor
00000000003cd780 000000000000000c t nouveau_screen_get_device_vendor
00000000003cd790 0000000000000008 t nouveau_screen_get_disk_shader_cache
00000000003cd7a0 0000000000000060 t nouveau_screen_fence_ref
00000000003cd800 0000000000000040 t nouveau_screen_get_name
00000000003cd840 0000000000000050 t nouveau_screen_get_timestamp
00000000003cd890 000000000000002c t nouveau_set_debug_callback
00000000003cd8c0 0000000000000014 t nouveau_screen_fence_finish
00000000003cd8e0 0000000000000088 t nouveau_screen_bo_from_handle
00000000003cd970 0000000000000080 t nouveau_screen_bo_get_handle
00000000003cd9f0 000000000000027c t nouveau_screen_init
00000000003cdc70 0000000000000060 t nouveau_screen_fini
00000000003cdcd0 0000000000000010 t nouveau_context_init
00000000003cdce0 0000000000000008 t nouveau_vp3_video_buffer_sampler_view_planes
00000000003cdcf0 0000000000000008 t nouveau_vp3_video_buffer_sampler_view_components
00000000003cdd00 0000000000000008 t nouveau_vp3_video_buffer_surfaces
00000000003cdd10 0000000000000004 t nouveau_vp3_decoder_flush
00000000003cdd20 0000000000000004 t nouveau_vp3_decoder_begin_frame
00000000003cdd30 00000000000000e4 t nouveau_vp3_decoder_destroy
00000000003cde20 00000000000000a4 t vp4_getpath
00000000003cded0 0000000000000088 t vp3_getpath
00000000003cdf60 00000000000001f8 t firmware_present
00000000003ce160 0000000000000004 t nouveau_vp3_decoder_end_frame
00000000003ce170 000000000000014c t nouveau_vp3_video_buffer_destroy
00000000003ce2c0 0000000000000320 t nouveau_vp3_video_buffer_create
00000000003ce5e0 0000000000000030 t nouveau_vp3_decoder_init_common
00000000003ce610 0000000000000200 t nouveau_vp3_load_firmware
00000000003ce810 0000000000000108 T nouveau_vp3_screen_get_video_param
00000000003ce920 0000000000000014 T nouveau_vp3_screen_video_supported
00000000003ce940 000000000000029c T nv50_clear_texture
00000000003cebe0 0000000000001108 t nv50_blitter_make_fp
00000000003cfcf0 0000000000000124 t nv50_blit_select_mode
00000000003cfe20 000000000000021c t nv50_m2mf_rect_setup
00000000003d0040 0000000000000570 t nv50_m2mf_transfer_rect
00000000003d05b0 00000000000003a4 T nv50_miptree_transfer_map
00000000003d0960 000000000000012c T nv50_miptree_transfer_unmap
00000000003d0a90 0000000000000078 T nvc0_compute_validate_globals
00000000003d0b10 0000000000000168 t nvc0_compute_validate_surfaces
00000000003d0c80 00000000000000e8 t nvc0_compute_validate_driverconst
00000000003d0d70 00000000000000ac t nvc0_compute_validate_samplers
00000000003d0e20 0000000000000210 t nvc0_compute_validate_buffers
00000000003d1030 00000000000000fc t nvc0_compute_validate_textures
00000000003d1130 0000000000000330 t nvc0_compute_validate_constbufs
00000000003d1460 0000000000000684 t nvc0_screen_compute_setup
00000000003d1af0 0000000000000120 t nvc0_update_compute_invocations_counter
00000000003d1c10 00000000000008cc T nvc0_launch_grid
00000000003d24e0 0000000000000008 t nvc0_get_device_reset_status
00000000003d24f0 0000000000000044 T nvc0_default_kick_notify
00000000003d2540 000000000000045c t nvc0_invalidate_resource_storage
00000000003d29a0 0000000000000084 t nvc0_context_get_sample_position
00000000003d2a30 00000000000000bc t nvc0_flush
00000000003d2af0 00000000000000bc t nvc0_texture_barrier
00000000003d2bb0 000000000000013c t nvc0_emit_string_marker
00000000003d2cf0 00000000000001d4 t nvc0_memory_barrier
00000000003d2ed0 00000000000005a0 t nvc0_destroy
00000000003d3470 0000000000000448 T nvc0_create
00000000003d38c0 0000000000000110 t nvc0_bufctx_fence
00000000003d39d0 0000000000000054 t nvc0_get_sample_locations
00000000003d3a30 000000000000007c t nvc0_miptree_get_handle
00000000003d3ab0 00000000000006c0 t nvc0_miptree_create
00000000003d4170 00000000000000cc t nvc0_mt_zslice_offset
00000000003d4240 0000000000000034 t nvc0_miptree_surface_new
00000000003d4280 00000000000000dc t nvc0_shader_input_address
00000000003d4360 00000000000003d8 t nvc0_program_assign_varying_slots
00000000003d4740 0000000000000298 t nvc0_vtgp_gen_header
00000000003d49e0 0000000000000198 t nvc0_program_upload_code
00000000003d4b80 00000000000000a8 t nvc0_tp_get_tess_mode.isra.0
00000000003d4c30 0000000000000904 t nvc0_program_translate
00000000003d5540 0000000000000088 t nvc0_program_library_upload
00000000003d55d0 00000000000005c8 t nvc0_program_upload
00000000003d5ba0 00000000000000c4 t nvc0_program_destroy
00000000003d5c70 0000000000000060 t nvc0_program_symbol_offset
00000000003d5cd0 0000000000000084 t nvc0_program_init_tcp_empty
00000000003d5d60 0000000000000010 t nvc0_destroy_query
00000000003d5d70 0000000000000010 t nvc0_begin_query
00000000003d5d80 0000000000000020 t nvc0_end_query
00000000003d5da0 0000000000000010 t nvc0_get_query_result
00000000003d5db0 000000000000001c t nvc0_get_query_result_resource
00000000003d5dd0 0000000000000004 t nvc0_set_active_query_state
00000000003d5de0 0000000000000050 t nvc0_create_query
00000000003d5e30 00000000000002e0 t nvc0_render_condition
00000000003d6110 0000000000000098 T nvc0_screen_get_driver_query_info
00000000003d61b0 00000000000000fc T nvc0_screen_get_driver_query_group_info
00000000003d62b0 0000000000000064 t nvc0_init_query_functions
00000000003d6320 00000000000000b0 t nvc0_hw_query_write_compute_invocations
00000000003d63d0 00000000000002a4 t nvc0_hw_get_query_result
00000000003d6680 00000000000000b8 t nvc0_hw_query_get
00000000003d6740 00000000000000bc t nvc0_hw_destroy_query
00000000003d6800 000000000000010c t nvc0_hw_query_allocate
00000000003d6910 00000000000003dc t nvc0_hw_end_query
00000000003d6cf0 0000000000000364 t nvc0_hw_begin_query
00000000003d7060 00000000000001a4 t nvc0_hw_create_query
00000000003d7210 0000000000000090 t nvc0_hw_get_driver_query_info
00000000003d72a0 0000000000000060 t nvc0_hw_query_pushbuf_submit
00000000003d7300 000000000000010c t nvc0_hw_query_fifo_wait
00000000003d7410 0000000000000658 t nvc0_hw_get_query_result_resource
00000000003d7a70 000000000000007c t nvc0_hw_metric_begin_query
00000000003d7af0 000000000000005c t nvc0_hw_metric_end_query
00000000003d7b50 0000000000000128 t sm20_hw_metric_calc_result
00000000003d7c80 00000000000001b0 t sm30_hw_metric_calc_result
00000000003d7e30 00000000000002e0 t nvc0_hw_metric_get_query_result
00000000003d8110 0000000000000064 t nvc0_hw_metric_destroy_query
00000000003d8180 0000000000000068 t nvc0_hw_metric_get_num_queries
00000000003d81f0 0000000000000240 t nvc0_hw_metric_create_query
00000000003d8430 00000000000001a4 t nvc0_hw_metric_get_driver_query_info
00000000003d85e0 0000000000000054 t nvc0_hw_sm_destroy_query
00000000003d8640 000000000000012c t nvc0_hw_sm_query_get_cfg.isra.0
00000000003d8770 0000000000000534 t nvc0_hw_sm_begin_query
00000000003d8cb0 00000000000004f8 t nvc0_hw_sm_end_query
00000000003d91b0 0000000000000350 t nvc0_hw_sm_get_query_result
00000000003d9500 0000000000000064 t nvc0_hw_sm_get_num_queries
00000000003d9570 00000000000000d0 t nvc0_hw_sm_create_query
00000000003d9640 00000000000001a0 t nvc0_hw_sm_get_driver_query_info
00000000003d97e0 0000000000000008 t nvc0_sw_create_query
00000000003d97f0 0000000000000008 t nvc0_sw_get_driver_query_info
00000000003d9800 0000000000000064 t nvc0_query_dmabuf_modifiers
00000000003d9870 0000000000000010 t nvc0_surface_create
00000000003d9880 0000000000000010 t nvc0_resource_create_with_modifiers
00000000003d9890 0000000000000038 t nvc0_resource_create
00000000003d98d0 0000000000000034 t nvc0_resource_from_handle
00000000003d9910 0000000000000060 t nvc0_init_resource_functions
00000000003d9970 0000000000000048 t nvc0_screen_init_resource_functions
00000000003d99c0 0000000000000190 t nvc0_vertprog_validate
00000000003d9b50 000000000000042c T nvc0_fragprog_validate
00000000003d9f80 00000000000002b0 T nvc0_tctlprog_validate
00000000003da230 0000000000000324 t nvc0_tevlprog_validate
00000000003da560 00000000000002d0 t nvc0_gmtyprog_validate
00000000003da830 00000000000000e0 T nvc0_compprog_validate
00000000003da910 0000000000000130 T nvc0_layer_validate
00000000003daa40 00000000000004e8 T nvc0_tfb_validate
00000000003daf30 0000000000000014 t nvc0_blend_state_bind
00000000003daf50 0000000000000014 t nvc0_rasterizer_state_bind
00000000003daf70 0000000000000014 t nvc0_zsa_state_bind
00000000003daf90 0000000000000014 t nvc0_vp_state_bind
00000000003dafb0 0000000000000014 t nvc0_fp_state_bind
00000000003dafd0 0000000000000014 t nvc0_gp_state_bind
00000000003daff0 0000000000000014 t nvc0_tcp_state_bind
00000000003db010 0000000000000014 t nvc0_tep_state_bind
00000000003db030 0000000000000014 t nvc0_cp_state_bind
00000000003db050 0000000000000020 t nvc0_set_blend_color
00000000003db070 000000000000001c t nvc0_set_stencil_ref
00000000003db090 0000000000000014 t nvc0_set_sample_mask
00000000003db0b0 0000000000000020 t nvc0_set_min_samples
00000000003db0d0 0000000000000038 t nvc0_set_polygon_stipple
00000000003db110 0000000000000028 t nvc0_set_tess_state
00000000003db140 0000000000000014 t nvc0_vertex_state_bind
00000000003db160 0000000000000008 t nvc0_blend_state_delete
00000000003db170 0000000000000168 t nvc0_set_vertex_buffers
00000000003db2e0 0000000000000054 t nvc0_set_window_rectangles
00000000003db340 000000000000005c t nvc0_set_sample_locations
00000000003db3a0 0000000000000038 t nvc0_set_clip_state
00000000003db3e0 00000000000000c0 t nvc0_set_viewport_states
00000000003db4a0 0000000000000060 t nvc0_set_scissor_states
00000000003db500 0000000000000054 t nvc0_set_framebuffer_state
00000000003db560 000000000000022c t nvc0_zsa_state_create
00000000003db790 00000000000003e8 t nvc0_rasterizer_state_create
00000000003dbb80 00000000000000b0 t nvc0_cp_state_create
00000000003dbc30 00000000000000b4 t nvc0_sp_state_create
00000000003dbcf0 0000000000000008 t nvc0_tep_state_create
00000000003dbd00 0000000000000008 t nvc0_tcp_state_create
00000000003dbd10 0000000000000008 t nvc0_gp_state_create
00000000003dbd20 0000000000000008 t nvc0_fp_state_create
00000000003dbd30 0000000000000008 t nvc0_vp_state_create
00000000003dbd40 0000000000000044 t nvc0_sp_state_delete
00000000003dbd90 00000000000000b0 t nvc0_sampler_state_delete
00000000003dbe40 00000000000000fc t nvc0_bind_sampler_states
00000000003dbf40 0000000000000008 t nvc0_zsa_state_delete
00000000003dbf50 0000000000000008 t nvc0_rasterizer_state_delete
00000000003dbf60 0000000000000308 t nvc0_set_constant_buffer
00000000003dc270 00000000000000c4 t nvc0_so_target_save_offset
00000000003dc340 0000000000000560 t nvc0_blend_state_create
00000000003dc8a0 00000000000001cc t nvc0_set_compute_resources
00000000003dca70 000000000000021c t nvc0_set_transform_feedback_targets
00000000003dcc90 0000000000000350 t nvc0_set_sampler_views
00000000003dcfe0 0000000000000074 t nvc0_so_target_destroy
00000000003dd060 00000000000000a8 t nvc0_sampler_view_destroy
00000000003dd110 000000000000029c t nvc0_set_global_bindings
00000000003dd3b0 0000000000000330 t nvc0_set_shader_buffers
00000000003dd6e0 000000000000014c t nvc0_so_target_create
00000000003dd830 00000000000004b0 t nvc0_set_shader_images
00000000003ddce0 0000000000000270 t nvc0_init_state_functions
00000000003ddf50 000000000000006c t nvc0_validate_driverconst
00000000003ddfc0 000000000000023c t nvc0_constbufs_validate
00000000003de200 0000000000000150 t nvc0_validate_scissor
00000000003de350 0000000000000248 t nvc0_validate_buffers
00000000003de5a0 0000000000000094 t nvc0_validate_tess_state
00000000003de640 0000000000000070 t nvc0_validate_sample_mask
00000000003de6b0 000000000000008c t nvc0_validate_stipple
00000000003de740 0000000000000080 t nvc0_validate_blend_colour
00000000003de7c0 0000000000000084 t nvc0_validate_zsa
00000000003de850 0000000000000084 t nvc0_validate_blend
00000000003de8e0 0000000000000084 t nvc0_validate_rasterizer
00000000003de970 00000000000000fc t nvc0_validate_min_samples
00000000003dea70 00000000000000bc t nvc0_validate_stencil_ref
00000000003deb30 00000000000003b0 t nvc0_validate_viewport
00000000003deee0 00000000000000d0 t nvc0_validate_fp_zsa_rast
00000000003defb0 00000000000000b8 t nvc0_validate_rast_fb
00000000003df070 00000000000001c0 t nvc0_validate_window_rects
00000000003df230 00000000000003c4 t gm200_validate_sample_locations
00000000003df600 000000000000016c t validate_sample_locations
00000000003df770 00000000000000e4 t nvc0_validate_zsa_fb
00000000003df860 00000000000002f8 t nvc0_validate_fbread
00000000003dfb60 00000000000002f4 t nvc0_validate_clip
00000000003dfe60 000000000000075c t nvc0_validate_fb
00000000003e05c0 0000000000000200 t nvc0_state_validate
00000000003e07c0 0000000000000068 t nvc0_state_validate_3d
00000000003e0830 000000000000000c t nvc0_draw_vbo_kick_notify
00000000003e0840 0000000000000170 t nvc0_set_constant_vertex_attrib
00000000003e09b0 00000000000001a4 t nvc0_update_user_vbufs_shared
00000000003e0b60 0000000000000248 t nvc0_update_user_vbufs
00000000003e0db0 0000000000000030 T nvc0_vertex_state_delete
00000000003e0de0 00000000000003c0 T nvc0_vertex_state_create
00000000003e11a0 00000000000008b8 T nvc0_vertex_arrays_validate
00000000003e1a60 000000000000146c T nvc0_draw_vbo
00000000003e2ed0 0000000000001c18 t nvc0_push_vbo
00000000003e4af0 0000000000000200 t nvc0_push_vbo_indirect
00000000003e4cf0 000000000000009c t nvc0_decoder_end_frame
00000000003e4d90 0000000000000014 t nvc0_decoder_decode_bitstream
00000000003e4db0 0000000000000010 t nvc0_decoder_begin_frame
00000000003e4dc0 0000000000000838 T nvc0_create_decoder
00000000003e5600 0000000000000008 T nvc0_video_buffer_create
00000000003e5610 0000000000000214 t nvc0_decoder_setup_ppp
00000000003e5830 0000000000000228 t nvc0_decoder_ppp
00000000003e5a60 0000000000000574 t nvc0_decoder_vp
00000000003e5fe0 0000000000000098 t grow_to_fit.part.0
00000000003e6080 0000000000000010 t blob_init
00000000003e6090 0000000000000014 t blob_init_fixed
00000000003e60b0 0000000000000100 t blob_write_bytes
00000000003e61b0 000000000000007c t blob_write_uint32
00000000003e6230 000000000000007c t blob_write_uint64
00000000003e62b0 0000000000000038 t blob_overwrite_uint32
00000000003e62f0 0000000000000038 t blob_write_string
00000000003e6330 0000000000000014 t blob_reader_init
00000000003e6350 0000000000000048 t blob_read_bytes
00000000003e63a0 000000000000004c t blob_copy_bytes
00000000003e63f0 0000000000000068 t blob_read_uint32
00000000003e6460 0000000000000068 t blob_read_uint64
00000000003e64d0 000000000000006c t blob_read_string
00000000003e6540 00000000000000e8 t _mesa_float_to_half
00000000003e6630 0000000000000058 t _mesa_half_to_float
00000000003e6690 000000000000002c t _mesa_half_to_unorm8
00000000003e66c0 0000000000000038 t _mesa_uint16_div_64k_to_half
00000000003e6700 0000000000000048 t _mesa_sha1_format
00000000003e6750 000000000000003c t os_time_get_nano
00000000003e6790 0000000000000038 t os_file_create_unique
00000000003e67d0 0000000000000068 t os_log_message
00000000003e6840 0000000000000004 t os_get_option
00000000003e6850 0000000000000ff0 t SHA1Transform
00000000003e7840 0000000000000038 t SHA1Init
00000000003e7880 00000000000000ec t SHA1Update
00000000003e7970 00000000000000b0 t SHA1Pad
00000000003e7a20 0000000000000060 t SHA1Final
00000000003e7a80 00000000000000cc t util_format_unsigned_write_rgtc_encoded_channel
00000000003e7b50 00000000000000c4 t util_format_signed_write_rgtc_encoded_channel
00000000003e7c20 000000000000011c t util_format_unsigned_fetch_texel_rgtc
00000000003e7d40 0000000000000b7c t util_format_unsigned_encode_rgtc_ubyte
00000000003e88c0 0000000000000124 t util_format_signed_fetch_texel_rgtc
00000000003e89f0 0000000000000b90 t util_format_signed_encode_rgtc_ubyte
00000000003e9580 00000000000000f4 t set_search
00000000003e9680 0000000000000168 t set_rehash
00000000003e97f0 00000000000001c0 t set_search_or_add
00000000003e99b0 000000000000008c t _mesa_set_create
00000000003e9a40 0000000000000084 t _mesa_set_clone
00000000003e9ad0 00000000000000c0 t _mesa_set_destroy
00000000003e9b90 0000000000000038 t _mesa_set_search
00000000003e9bd0 0000000000000048 t _mesa_set_add
00000000003e9c20 0000000000000024 t _mesa_set_remove
00000000003e9c50 000000000000005c t _mesa_set_remove_key
00000000003e9cb0 000000000000004c t _mesa_set_next_entry
00000000003e9d00 0000000000000014 t _mesa_pointer_set_create
00000000003e9d20 000000000000006c t _mesa_string_buffer_create
00000000003e9d90 00000000000000c0 t _mesa_string_buffer_append_len
00000000003e9e50 00000000000000ec t _mesa_string_buffer_vprintf
00000000003e9f40 000000000000006c t _mesa_string_buffer_printf
00000000003e9fb0 000000000000002c t _mesa_locale_init
00000000003e9fe0 000000000000000c t _mesa_locale_fini
00000000003e9ff0 000000000000000c t _mesa_strtod
00000000003ea000 000000000000000c t _mesa_strtof
00000000003ea010 000000000000002c t util_cpu_detect_once
00000000003ea040 0000000000000014 t util_cpu_detect
00000000003ea060 000000000000006c t write_bits
00000000003ea0d0 00000000000006f8 t compress_rgba_unorm
00000000003ea7d0 00000000000006c4 t compress_rgb_float
00000000003eaea0 0000000000000070 t count_anchors_before_texel
00000000003eaf10 0000000000000308 t extract_float_endpoints
00000000003eb220 0000000000000430 t extract_unorm_endpoints
00000000003eb650 0000000000000358 t fetch_rgb_float_from_block
00000000003eb9b0 0000000000000598 t decompress_rgb_float
00000000003ebf50 00000000000004ec t fetch_rgba_unorm_from_block
00000000003ec440 00000000000006e0 t decompress_rgba_unorm
00000000003ecb20 000000000000001c T util_format_bptc_rgba_unorm_unpack_rgba_8unorm
00000000003ecb40 000000000000001c T util_format_bptc_rgba_unorm_pack_rgba_8unorm
00000000003ecb60 00000000000000ac T util_format_bptc_rgba_unorm_unpack_rgba_float
00000000003ecc10 00000000000000ac T util_format_bptc_rgba_unorm_pack_rgba_float
00000000003eccc0 0000000000000078 T util_format_bptc_rgba_unorm_fetch_rgba_float
00000000003ecd40 000000000000001c T util_format_bptc_srgba_unpack_rgba_8unorm
00000000003ecd60 000000000000001c T util_format_bptc_srgba_pack_rgba_8unorm
00000000003ecd80 00000000000000ac T util_format_bptc_srgba_unpack_rgba_float
00000000003ece30 0000000000000020 T util_format_bptc_srgba_pack_rgba_float
00000000003ece50 0000000000000084 T util_format_bptc_srgba_fetch_rgba_float
00000000003ecee0 00000000000000b0 T util_format_bptc_rgb_float_unpack_rgba_8unorm
00000000003ecf90 000000000000001c T util_format_bptc_rgb_float_pack_rgba_8unorm
00000000003ecfb0 0000000000000020 T util_format_bptc_rgb_float_unpack_rgba_float
00000000003ecfd0 0000000000000020 T util_format_bptc_rgb_float_pack_rgba_float
00000000003ecff0 000000000000002c T util_format_bptc_rgb_float_fetch_rgba_float
00000000003ed020 00000000000000b0 T util_format_bptc_rgb_ufloat_unpack_rgba_8unorm
00000000003ed0d0 000000000000001c T util_format_bptc_rgb_ufloat_pack_rgba_8unorm
00000000003ed0f0 0000000000000020 T util_format_bptc_rgb_ufloat_unpack_rgba_float
00000000003ed110 0000000000000020 T util_format_bptc_rgb_ufloat_pack_rgba_float
00000000003ed130 000000000000002c T util_format_bptc_rgb_ufloat_fetch_rgba_float
00000000003ed160 000000000000013c t etc1_parse_block
00000000003ed2a0 00000000000000c8 t etc1_fetch_texel
00000000003ed370 0000000000000128 T util_format_etc1_rgb8_unpack_rgba_8unorm
00000000003ed4a0 0000000000000004 T util_format_etc1_rgb8_pack_rgba_8unorm
00000000003ed4b0 0000000000000134 T util_format_etc1_rgb8_unpack_rgba_float
00000000003ed5f0 0000000000000004 T util_format_etc1_rgb8_pack_rgba_float
00000000003ed600 0000000000000070 T util_format_etc1_rgb8_fetch_rgba_float
00000000003ed670 0000000000000040 T util_format_latc1_unorm_fetch_rgba_8unorm
00000000003ed6b0 0000000000000004 T util_format_latc1_unorm_unpack_rgba_8unorm
00000000003ed6c0 0000000000000004 T util_format_latc1_unorm_pack_rgba_8unorm
00000000003ed6d0 0000000000000168 T util_format_latc1_unorm_unpack_rgba_float
00000000003ed840 0000000000000004 T util_format_latc1_unorm_pack_rgba_float
00000000003ed850 0000000000000050 T util_format_latc1_unorm_fetch_rgba_float
00000000003ed8a0 0000000000000028 T util_format_latc1_snorm_fetch_rgba_8unorm
00000000003ed8d0 0000000000000028 T util_format_latc1_snorm_unpack_rgba_8unorm
00000000003ed900 0000000000000028 T util_format_latc1_snorm_pack_rgba_8unorm
00000000003ed930 0000000000000004 T util_format_latc1_snorm_pack_rgba_float
00000000003ed940 000000000000016c T util_format_latc1_snorm_unpack_rgba_float
00000000003edab0 0000000000000058 T util_format_latc1_snorm_fetch_rgba_float
00000000003edb10 0000000000000064 T util_format_latc2_unorm_fetch_rgba_8unorm
00000000003edb80 0000000000000004 T util_format_latc2_unorm_unpack_rgba_8unorm
00000000003edb90 0000000000000004 T util_format_latc2_unorm_pack_rgba_8unorm
00000000003edba0 0000000000000008 T util_format_latc2_unorm_pack_rgba_float
00000000003edbb0 00000000000001e4 T util_format_latc2_unorm_unpack_rgba_float
00000000003edda0 0000000000000088 T util_format_latc2_unorm_fetch_rgba_float
00000000003ede30 0000000000000028 T util_format_latc2_snorm_fetch_rgba_8unorm
00000000003ede60 0000000000000028 T util_format_latc2_snorm_unpack_rgba_8unorm
00000000003ede90 0000000000000028 T util_format_latc2_snorm_pack_rgba_8unorm
00000000003edec0 00000000000001e4 T util_format_latc2_snorm_unpack_rgba_float
00000000003ee0b0 0000000000000008 T util_format_latc2_snorm_pack_rgba_float
00000000003ee0c0 00000000000000a8 T util_format_latc2_snorm_fetch_rgba_float
00000000003ee170 0000000000000098 T util_format_r9g9b9e5_float_unpack_rgba_float
00000000003ee210 0000000000000268 T util_format_r9g9b9e5_float_pack_rgba_float
00000000003ee480 000000000000004c T util_format_r9g9b9e5_float_fetch_rgba_float
00000000003ee4d0 000000000000012c T util_format_r9g9b9e5_float_unpack_rgba_8unorm
00000000003ee600 0000000000000274 T util_format_r9g9b9e5_float_pack_rgba_8unorm
00000000003ee880 00000000000001e4 T util_format_r11g11b10_float_unpack_rgba_float
00000000003eea70 0000000000000218 T util_format_r11g11b10_float_pack_rgba_float
00000000003eec90 000000000000018c T util_format_r11g11b10_float_fetch_rgba_float
00000000003eee20 000000000000025c T util_format_r11g11b10_float_unpack_rgba_8unorm
00000000003ef080 0000000000000288 T util_format_r11g11b10_float_pack_rgba_8unorm
00000000003ef310 0000000000000004 T util_format_r1_unorm_unpack_rgba_float
00000000003ef320 0000000000000004 T util_format_r1_unorm_pack_rgba_float
00000000003ef330 0000000000000004 T util_format_r1_unorm_fetch_rgba_float
00000000003ef340 0000000000000004 T util_format_r1_unorm_unpack_rgba_8unorm
00000000003ef350 0000000000000004 T util_format_r1_unorm_pack_rgba_8unorm
00000000003ef360 00000000000000e0 T util_format_r8g8bx_snorm_unpack_rgba_float
00000000003ef440 0000000000000150 T util_format_r8g8bx_snorm_unpack_rgba_8unorm
00000000003ef590 00000000000000c8 T util_format_r8g8bx_snorm_pack_rgba_float
00000000003ef660 000000000000006c T util_format_r8g8bx_snorm_pack_rgba_8unorm
00000000003ef6d0 0000000000000090 T util_format_r8g8bx_snorm_fetch_rgba_float
00000000003ef760 0000000000000038 T util_format_rgtc1_unorm_fetch_rgba_8unorm
00000000003ef7a0 0000000000000138 t util_format_rgtc1_unorm_unpack_rgba_8unorm
00000000003ef8e0 0000000000000110 t util_format_rgtc1_unorm_pack_rgba_8unorm
00000000003ef9f0 0000000000000168 T util_format_rgtc1_unorm_unpack_rgba_float
00000000003efb60 0000000000000154 t util_format_rgtc1_unorm_pack_rgba_float
00000000003efcc0 0000000000000054 T util_format_rgtc1_unorm_fetch_rgba_float
00000000003efd20 0000000000000028 T util_format_rgtc1_snorm_fetch_rgba_8unorm
00000000003efd50 0000000000000028 T util_format_rgtc1_snorm_unpack_rgba_8unorm
00000000003efd80 0000000000000028 T util_format_rgtc1_snorm_pack_rgba_8unorm
00000000003efdb0 0000000000000128 t util_format_rgtc1_snorm_pack_rgba_float
00000000003efee0 000000000000016c T util_format_rgtc1_snorm_unpack_rgba_float
00000000003f0050 000000000000005c T util_format_rgtc1_snorm_fetch_rgba_float
00000000003f00b0 0000000000000064 T util_format_rgtc2_unorm_fetch_rgba_8unorm
00000000003f0120 0000000000000158 t util_format_rgtc2_unorm_unpack_rgba_8unorm
00000000003f0280 0000000000000130 t util_format_rgtc2_unorm_pack_rgba_8unorm
00000000003f03b0 00000000000001bc t util_format_rxtc2_unorm_pack_rgba_float
00000000003f0570 0000000000000008 T util_format_rgtc2_unorm_pack_rgba_float
00000000003f0580 00000000000001e8 T util_format_rgtc2_unorm_unpack_rgba_float
00000000003f0770 000000000000008c T util_format_rgtc2_unorm_fetch_rgba_float
00000000003f0800 0000000000000028 T util_format_rgtc2_snorm_fetch_rgba_8unorm
00000000003f0830 0000000000000028 T util_format_rgtc2_snorm_unpack_rgba_8unorm
00000000003f0860 0000000000000028 T util_format_rgtc2_snorm_pack_rgba_8unorm
00000000003f0890 00000000000001e8 T util_format_rgtc2_snorm_unpack_rgba_float
00000000003f0a80 000000000000016c t util_format_rxtc2_snorm_pack_rgba_float
00000000003f0bf0 0000000000000008 T util_format_rgtc2_snorm_pack_rgba_float
00000000003f0c00 00000000000000ac T util_format_rgtc2_snorm_fetch_rgba_float
00000000003f0cb0 00000000000001fc t dxt135_decode_imageblock
00000000003f0eb0 0000000000000054 t fetch_2d_texel_rgb_dxt1
00000000003f0f10 0000000000000054 t fetch_2d_texel_rgba_dxt1
00000000003f0f70 000000000000008c t fetch_2d_texel_rgba_dxt3
00000000003f1000 0000000000000150 t fetch_2d_texel_rgba_dxt5
00000000003f1150 0000000000000c44 t encodedxtcolorblockfaster
00000000003f1da0 00000000000000cc t writedxt5encodedalphablock
00000000003f1e70 0000000000001268 t tx_compress_dxtn
00000000003f30e0 0000000000000018 T util_format_dxt1_rgb_fetch_rgba_8unorm
00000000003f3100 0000000000000018 T util_format_dxt1_rgba_fetch_rgba_8unorm
00000000003f3120 0000000000000018 T util_format_dxt3_rgba_fetch_rgba_8unorm
00000000003f3140 0000000000000018 T util_format_dxt5_rgba_fetch_rgba_8unorm
00000000003f3160 000000000000006c T util_format_dxt1_rgb_fetch_rgba_float
00000000003f31d0 0000000000000074 T util_format_dxt1_rgba_fetch_rgba_float
00000000003f3250 0000000000000074 T util_format_dxt3_rgba_fetch_rgba_float
00000000003f32d0 0000000000000074 T util_format_dxt5_rgba_fetch_rgba_float
00000000003f3350 0000000000000120 T util_format_dxt1_rgb_unpack_rgba_8unorm
00000000003f3470 0000000000000120 T util_format_dxt1_rgba_unpack_rgba_8unorm
00000000003f3590 0000000000000120 T util_format_dxt3_rgba_unpack_rgba_8unorm
00000000003f36b0 0000000000000120 T util_format_dxt5_rgba_unpack_rgba_8unorm
00000000003f37d0 0000000000000188 T util_format_dxt1_rgb_unpack_rgba_float
00000000003f3960 0000000000000188 T util_format_dxt1_rgba_unpack_rgba_float
00000000003f3af0 0000000000000188 T util_format_dxt3_rgba_unpack_rgba_float
00000000003f3c80 0000000000000188 T util_format_dxt5_rgba_unpack_rgba_float
00000000003f3e10 0000000000000134 T util_format_dxt1_rgb_pack_rgba_8unorm
00000000003f3f50 0000000000000134 T util_format_dxt1_rgba_pack_rgba_8unorm
00000000003f4090 0000000000000134 T util_format_dxt3_rgba_pack_rgba_8unorm
00000000003f41d0 0000000000000134 T util_format_dxt5_rgba_pack_rgba_8unorm
00000000003f4310 00000000000001a4 T util_format_dxt1_rgb_pack_rgba_float
00000000003f44c0 00000000000001a4 T util_format_dxt1_rgba_pack_rgba_float
00000000003f4670 00000000000001a4 T util_format_dxt3_rgba_pack_rgba_float
00000000003f4820 00000000000001a4 T util_format_dxt5_rgba_pack_rgba_float
00000000003f49d0 0000000000000064 T util_format_dxt1_srgb_fetch_rgba_8unorm
00000000003f4a40 0000000000000064 T util_format_dxt1_srgba_fetch_rgba_8unorm
00000000003f4ab0 0000000000000064 T util_format_dxt3_srgba_fetch_rgba_8unorm
00000000003f4b20 0000000000000064 T util_format_dxt5_srgba_fetch_rgba_8unorm
00000000003f4b90 0000000000000060 T util_format_dxt1_srgb_fetch_rgba_float
00000000003f4bf0 0000000000000070 T util_format_dxt1_srgba_fetch_rgba_float
00000000003f4c60 0000000000000070 T util_format_dxt3_srgba_fetch_rgba_float
00000000003f4cd0 0000000000000070 T util_format_dxt5_srgba_fetch_rgba_float
00000000003f4d40 0000000000000164 T util_format_dxt1_srgb_unpack_rgba_8unorm
00000000003f4eb0 0000000000000164 T util_format_dxt1_srgba_unpack_rgba_8unorm
00000000003f5020 0000000000000164 T util_format_dxt3_srgba_unpack_rgba_8unorm
00000000003f5190 0000000000000164 T util_format_dxt5_srgba_unpack_rgba_8unorm
00000000003f5300 000000000000018c T util_format_dxt1_srgb_unpack_rgba_float
00000000003f5490 000000000000018c T util_format_dxt1_srgba_unpack_rgba_float
00000000003f5620 000000000000018c T util_format_dxt3_srgba_unpack_rgba_float
00000000003f57b0 000000000000018c T util_format_dxt5_srgba_unpack_rgba_float
00000000003f5940 000000000000014c T util_format_dxt1_srgb_pack_rgba_8unorm
00000000003f5a90 000000000000014c T util_format_dxt1_srgba_pack_rgba_8unorm
00000000003f5be0 000000000000014c T util_format_dxt3_srgba_pack_rgba_8unorm
00000000003f5d30 000000000000014c T util_format_dxt5_srgba_pack_rgba_8unorm
00000000003f5e80 00000000000001e8 T util_format_dxt1_srgb_pack_rgba_float
00000000003f6070 00000000000001e8 T util_format_dxt1_srgba_pack_rgba_float
00000000003f6260 00000000000001e8 T util_format_dxt3_srgba_pack_rgba_float
00000000003f6450 00000000000001e8 T util_format_dxt5_srgba_pack_rgba_float
00000000003f6640 000000000000011c T util_format_r8g8_b8g8_unorm_unpack_rgba_float
00000000003f6760 00000000000000cc T util_format_r8g8_b8g8_unorm_unpack_rgba_8unorm
00000000003f6830 00000000000001f8 T util_format_r8g8_b8g8_unorm_pack_rgba_float
00000000003f6a30 00000000000000ec T util_format_r8g8_b8g8_unorm_pack_rgba_8unorm
00000000003f6b20 000000000000004c T util_format_r8g8_b8g8_unorm_fetch_rgba_float
00000000003f6b70 0000000000000120 T util_format_g8r8_g8b8_unorm_unpack_rgba_float
00000000003f6c90 00000000000000cc T util_format_g8r8_g8b8_unorm_unpack_rgba_8unorm
00000000003f6d60 00000000000001f4 T util_format_g8r8_g8b8_unorm_pack_rgba_float
00000000003f6f60 00000000000000ec T util_format_g8r8_g8b8_unorm_pack_rgba_8unorm
00000000003f7050 0000000000000048 T util_format_g8r8_g8b8_unorm_fetch_rgba_float
00000000003f70a0 00000000000001cc T util_format_uyvy_unpack_rgba_float
00000000003f7270 0000000000000274 T util_format_uyvy_unpack_rgba_8unorm
00000000003f74f0 000000000000043c T util_format_uyvy_pack_rgba_float
00000000003f7930 0000000000000274 T util_format_uyvy_pack_rgba_8unorm
00000000003f7bb0 00000000000000b8 T util_format_uyvy_fetch_rgba_float
00000000003f7c70 00000000000001cc T util_format_yuyv_unpack_rgba_float
00000000003f7e40 0000000000000274 T util_format_yuyv_unpack_rgba_8unorm
00000000003f80c0 000000000000043c T util_format_yuyv_pack_rgba_float
00000000003f8500 0000000000000278 T util_format_yuyv_pack_rgba_8unorm
00000000003f8780 00000000000000b4 T util_format_yuyv_fetch_rgba_float
00000000003f8840 0000000000000004 T util_format_yv12_unpack_rgba_8unorm
00000000003f8850 0000000000000004 T util_format_yv12_pack_rgba_8unorm
00000000003f8860 0000000000000004 T util_format_yv12_unpack_rgba_float
00000000003f8870 0000000000000004 T util_format_yv12_pack_rgba_float
00000000003f8880 0000000000000004 T util_format_yv12_fetch_rgba_float
00000000003f8890 0000000000000004 T util_format_yv16_unpack_rgba_8unorm
00000000003f88a0 0000000000000004 T util_format_yv16_pack_rgba_8unorm
00000000003f88b0 0000000000000004 T util_format_yv16_unpack_rgba_float
00000000003f88c0 0000000000000004 T util_format_yv16_pack_rgba_float
00000000003f88d0 0000000000000004 T util_format_yv16_fetch_rgba_float
00000000003f88e0 0000000000000004 T util_format_iyuv_unpack_rgba_8unorm
00000000003f88f0 0000000000000004 T util_format_iyuv_pack_rgba_8unorm
00000000003f8900 0000000000000004 T util_format_iyuv_unpack_rgba_float
00000000003f8910 0000000000000004 T util_format_iyuv_pack_rgba_float
00000000003f8920 0000000000000004 T util_format_iyuv_fetch_rgba_float
00000000003f8930 0000000000000004 T util_format_nv12_unpack_rgba_8unorm
00000000003f8940 0000000000000004 T util_format_nv12_pack_rgba_8unorm
00000000003f8950 0000000000000004 T util_format_nv12_unpack_rgba_float
00000000003f8960 0000000000000004 T util_format_nv12_pack_rgba_float
00000000003f8970 0000000000000004 T util_format_nv12_fetch_rgba_float
00000000003f8980 0000000000000004 T util_format_nv21_unpack_rgba_8unorm
00000000003f8990 0000000000000004 T util_format_nv21_pack_rgba_8unorm
00000000003f89a0 0000000000000004 T util_format_nv21_unpack_rgba_float
00000000003f89b0 0000000000000004 T util_format_nv21_pack_rgba_float
00000000003f89c0 0000000000000004 T util_format_nv21_fetch_rgba_float
00000000003f89d0 0000000000000004 T util_format_p010_unpack_rgba_8unorm
00000000003f89e0 0000000000000004 T util_format_p010_pack_rgba_8unorm
00000000003f89f0 0000000000000004 T util_format_p010_unpack_rgba_float
00000000003f8a00 0000000000000004 T util_format_p010_pack_rgba_float
00000000003f8a10 0000000000000004 T util_format_p010_fetch_rgba_float
00000000003f8a20 0000000000000004 T util_format_p016_unpack_rgba_8unorm
00000000003f8a30 0000000000000004 T util_format_p016_pack_rgba_8unorm
00000000003f8a40 0000000000000004 T util_format_p016_unpack_rgba_float
00000000003f8a50 0000000000000004 T util_format_p016_pack_rgba_float
00000000003f8a60 0000000000000004 T util_format_p016_fetch_rgba_float
00000000003f8a70 0000000000000004 T util_format_xyuv_unpack_rgba_float
00000000003f8a80 0000000000000004 T util_format_xyuv_unpack_rgba_8unorm
00000000003f8a90 0000000000000004 T util_format_xyuv_pack_rgba_float
00000000003f8aa0 0000000000000004 T util_format_xyuv_pack_rgba_8unorm
00000000003f8ab0 0000000000000004 T util_format_xyuv_fetch_rgba_float
00000000003f8ac0 0000000000000004 T util_format_ayuv_unpack_rgba_float
00000000003f8ad0 0000000000000004 T util_format_ayuv_unpack_rgba_8unorm
00000000003f8ae0 0000000000000004 T util_format_ayuv_pack_rgba_float
00000000003f8af0 0000000000000004 T util_format_ayuv_pack_rgba_8unorm
00000000003f8b00 0000000000000004 T util_format_ayuv_fetch_rgba_float
00000000003f8b10 0000000000000004 T util_format_r8g8_r8b8_unorm_unpack_rgba_float
00000000003f8b20 0000000000000004 T util_format_r8g8_r8b8_unorm_unpack_rgba_8unorm
00000000003f8b30 0000000000000004 T util_format_r8g8_r8b8_unorm_pack_rgba_float
00000000003f8b40 0000000000000004 T util_format_r8g8_r8b8_unorm_pack_rgba_8unorm
00000000003f8b50 0000000000000004 T util_format_r8g8_r8b8_unorm_fetch_rgba_float
00000000003f8b60 0000000000000004 T util_format_g8r8_b8r8_unorm_unpack_rgba_float
00000000003f8b70 0000000000000004 T util_format_g8r8_b8r8_unorm_unpack_rgba_8unorm
00000000003f8b80 0000000000000004 T util_format_g8r8_b8r8_unorm_pack_rgba_float
00000000003f8b90 0000000000000004 T util_format_g8r8_b8r8_unorm_pack_rgba_8unorm
00000000003f8ba0 0000000000000004 T util_format_g8r8_b8r8_unorm_fetch_rgba_float
00000000003f8bb0 0000000000000074 T util_format_s8_uint_unpack_s_8uint
00000000003f8c30 0000000000000074 T util_format_s8_uint_pack_s_8uint
00000000003f8cb0 000000000000005c T util_format_z16_unorm_unpack_z_float
00000000003f8d10 0000000000000060 T util_format_z16_unorm_pack_z_float
00000000003f8d70 0000000000000048 T util_format_z16_unorm_unpack_z_32unorm
00000000003f8dc0 0000000000000048 T util_format_z16_unorm_pack_z_32unorm
00000000003f8e10 0000000000000060 T util_format_z32_unorm_unpack_z_float
00000000003f8e70 0000000000000060 T util_format_z32_unorm_pack_z_float
00000000003f8ed0 0000000000000074 T util_format_z32_unorm_unpack_z_32unorm
00000000003f8f50 0000000000000074 T util_format_z32_unorm_pack_z_32unorm
00000000003f8fd0 0000000000000074 T util_format_z32_float_unpack_z_float
00000000003f9050 0000000000000074 T util_format_z32_float_pack_z_float
00000000003f90d0 0000000000000060 T util_format_z32_float_unpack_z_32unorm
00000000003f9130 0000000000000060 T util_format_z32_float_pack_z_32unorm
00000000003f9190 000000000000005c T util_format_z24_unorm_s8_uint_unpack_z_float
00000000003f91f0 0000000000000068 T util_format_z24_unorm_s8_uint_pack_z_float
00000000003f9260 000000000000004c T util_format_z24_unorm_s8_uint_unpack_z_32unorm
00000000003f92b0 0000000000000050 T util_format_z24_unorm_s8_uint_pack_z_32unorm
00000000003f9300 0000000000000048 T util_format_z24_unorm_s8_uint_unpack_s_8uint
00000000003f9350 0000000000000048 T util_format_z24_unorm_s8_uint_pack_s_8uint
00000000003f93a0 000000000000005c T util_format_s8_uint_z24_unorm_unpack_z_float
00000000003f9400 0000000000000068 T util_format_s8_uint_z24_unorm_pack_z_float
00000000003f9470 000000000000004c T util_format_s8_uint_z24_unorm_unpack_z_32unorm
00000000003f94c0 000000000000004c T util_format_s8_uint_z24_unorm_pack_z_32unorm
00000000003f9510 0000000000000044 T util_format_s8_uint_z24_unorm_unpack_s_8uint
00000000003f9560 0000000000000048 T util_format_s8_uint_z24_unorm_pack_s_8uint
00000000003f95b0 000000000000005c T util_format_z24x8_unorm_unpack_z_float
00000000003f9610 0000000000000064 T util_format_z24x8_unorm_pack_z_float
00000000003f9680 000000000000004c T util_format_z24x8_unorm_unpack_z_32unorm
00000000003f96d0 0000000000000048 T util_format_z24x8_unorm_pack_z_32unorm
00000000003f9720 000000000000005c T util_format_x8z24_unorm_unpack_z_float
00000000003f9780 0000000000000064 T util_format_x8z24_unorm_pack_z_float
00000000003f97f0 000000000000004c T util_format_x8z24_unorm_unpack_z_32unorm
00000000003f9840 0000000000000048 T util_format_x8z24_unorm_pack_z_32unorm
00000000003f9890 0000000000000048 T util_format_z32_float_s8x24_uint_unpack_z_float
00000000003f98e0 0000000000000048 T util_format_z32_float_s8x24_uint_pack_z_float
00000000003f9930 0000000000000064 T util_format_z32_float_s8x24_uint_unpack_z_32unorm
00000000003f99a0 0000000000000060 T util_format_z32_float_s8x24_uint_pack_z_32unorm
00000000003f9a00 000000000000005c T util_format_z32_float_s8x24_uint_unpack_s_8uint
00000000003f9a60 000000000000005c T util_format_z32_float_s8x24_uint_pack_s_8uint
00000000003f9ac0 0000000000000048 T util_format_x24s8_uint_unpack_s_8uint
00000000003f9b10 0000000000000048 T util_format_x24s8_uint_pack_s_8uint
00000000003f9b60 0000000000000044 T util_format_s8x24_uint_unpack_s_8uint
00000000003f9bb0 0000000000000048 T util_format_s8x24_uint_pack_s_8uint
00000000003f9c00 000000000000005c T util_format_x32_s8x24_uint_unpack_s_8uint
00000000003f9c60 000000000000005c T util_format_x32_s8x24_uint_pack_s_8uint
00000000003f9cc0 00000000000002dc t (anonymous namespace)::add_uniform_to_shader::visit_field(glsl_type const*, char const*, bool, glsl_type const*, glsl_interface_packing, bool)
00000000003f9fa0 00000000000000f4 t _mesa_generate_parameters_list_for_uniforms
00000000003fa0a0 0000000000000408 t _mesa_associate_uniform_storage
00000000003fa4b0 000000000000024c t _mesa_glsl_link_shader
00000000003fa700 00000000000000f0 t get_src_arg_mask
00000000003fa7f0 0000000000000018 t compare_start
00000000003fa810 0000000000000078 t update_interval
00000000003fa890 000000000000019c t find_next_use
00000000003faa30 00000000000000ec t remove_instructions
00000000003fab20 000000000000022c t _mesa_remove_dead_code_global
00000000003fad50 0000000000000198 t _mesa_simplify_cmp
00000000003faef0 0000000000000180 t _mesa_find_temp_intervals
00000000003fb070 000000000000039c t _mesa_reallocate_registers
00000000003fb410 0000000000000790 t _mesa_optimize_program
00000000003fbba0 000000000000000c t _mesa_new_parameter_list
00000000003fbbb0 00000000000000d8 t _mesa_new_parameter_list_sized
00000000003fbc90 0000000000000068 t _mesa_free_parameter_list
00000000003fbd00 00000000000000c4 t _mesa_reserve_parameter_storage
00000000003fbdd0 0000000000000274 t _mesa_add_parameter
00000000003fc050 00000000000002b8 t _mesa_add_typed_unnamed_constant
00000000003fc310 00000000000000f4 t _mesa_add_sized_state_reference
00000000003fc410 000000000000000c t _mesa_add_state_reference
00000000003fc420 000000000000007c t binary
00000000003fc4a0 0000000000000188 t _mesa_register_file_name
00000000003fc630 0000000000000214 t reg_string
00000000003fc850 00000000000000e0 t _mesa_fprint_parameter_list.part.0
00000000003fc930 0000000000000268 t _mesa_swizzle_string
00000000003fcba0 0000000000000068 t fprint_src_reg
00000000003fcc10 0000000000000084 t _mesa_writemask_string
00000000003fcca0 0000000000000170 t _mesa_fprint_alu_instruction
00000000003fce10 0000000000000684 t _mesa_fprint_instruction_opt
00000000003fd4a0 0000000000000154 t _mesa_fprint_program_opt
00000000003fd600 0000000000000030 t _mesa_print_program
00000000003fd630 00000000000001b8 t _mesa_print_program_parameters
00000000003fd7f0 0000000000000038 t _mesa_print_parameter_list
00000000003fd830 0000000000000190 t _mesa_write_shader_to_file
00000000003fd9c0 0000000000000048 t _mesa_set_program_error
00000000003fda10 00000000000000c8 t _mesa_init_gl_program
00000000003fdae0 0000000000000070 t _mesa_delete_program
00000000003fdb50 0000000000000018 t _mesa_lookup_program
00000000003fdb70 0000000000000094 t _mesa_reference_program_
00000000003fdc10 00000000000000e4 t _mesa_init_program
00000000003fdd00 00000000000000a0 t _mesa_free_program_data
00000000003fdda0 00000000000000a0 t _mesa_update_default_objects_program
00000000003fde40 00000000000000f8 t _mesa_insert_instructions
00000000003fdf40 00000000000000e0 t _mesa_delete_instructions
00000000003fe020 00000000000000f0 t _mesa_find_used_registers
00000000003fe110 0000000000000038 t _mesa_find_free_register
00000000003fe150 00000000000000a0 t _mesa_get_min_invocations_per_fragment
00000000003fe1f0 0000000000000360 t _mesa_insert_mvp_code
00000000003fe550 00000000000003fc t _mesa_append_fog_code
00000000003fe950 0000000000000250 t _mesa_remove_output_reads
00000000003feba0 00000000000000d4 t _mesa_program_fragment_position_to_sysval
00000000003fec80 0000000000000ee8 t append_token
00000000003ffb70 0000000000000104 t _mesa_program_state_flags
00000000003ffc80 0000000000000778 t _mesa_program_state_string
0000000000400400 0000000000001314 t _mesa_load_state_parameters
0000000000401720 0000000000000098 t _mesa_symbol_table_pop_scope
00000000004017c0 0000000000000058 t _mesa_symbol_table_push_scope
0000000000401820 000000000000004c t _mesa_symbol_table_symbol_scope
0000000000401870 0000000000000028 t _mesa_symbol_table_find_symbol
00000000004018a0 00000000000000e4 t _mesa_symbol_table_add_symbol
0000000000401990 0000000000000048 t _mesa_symbol_table_replace_symbol
00000000004019e0 0000000000000088 t _mesa_symbol_table_ctor
0000000000401a70 0000000000000044 t _mesa_symbol_table_dtor
0000000000401ac0 00000000000001cc t accum_scale_or_bias
0000000000401c90 000000000000030c t accum_or_load
0000000000401fa0 0000000000000124 t _mesa_ClearAccum
00000000004020d0 00000000000001e8 t _mesa_clear_accum_buffer
00000000004022c0 0000000000000010 t _mesa_init_accum
00000000004022d0 0000000000000764 T _mesa_Accum
0000000000402a40 000000000000006c t VertexAttrib1NbvNV
0000000000402ab0 000000000000004c t VertexAttrib1bvNV
0000000000402b00 000000000000007c t VertexAttrib2NbvNV
0000000000402b80 0000000000000054 t VertexAttrib2bvNV
0000000000402be0 0000000000000094 t VertexAttrib3NbvNV
0000000000402c80 000000000000005c t VertexAttrib3bvNV
0000000000402ce0 00000000000000a8 t VertexAttrib4NbvNV
0000000000402d90 0000000000000064 t VertexAttrib4bvNV
0000000000402e00 0000000000000058 t VertexAttrib1NubvNV
0000000000402e60 000000000000004c t VertexAttrib1ubvNV
0000000000402eb0 0000000000000060 t VertexAttrib2NubvNV
0000000000402f10 0000000000000054 t VertexAttrib2ubvNV
0000000000402f70 0000000000000068 t VertexAttrib3NubvNV
0000000000402fe0 000000000000005c t VertexAttrib3ubvNV
0000000000403040 0000000000000070 t VertexAttrib4NubvNV
00000000004030b0 0000000000000064 t VertexAttrib4ubvNV
0000000000403120 000000000000006c t VertexAttrib1NsvNV
0000000000403190 000000000000004c t VertexAttrib1svNV
00000000004031e0 000000000000007c t VertexAttrib2NsvNV
0000000000403260 0000000000000054 t VertexAttrib2svNV
00000000004032c0 0000000000000094 t VertexAttrib3NsvNV
0000000000403360 000000000000005c t VertexAttrib3svNV
00000000004033c0 00000000000000a8 t VertexAttrib4NsvNV
0000000000403470 0000000000000064 t VertexAttrib4svNV
00000000004034e0 0000000000000060 t VertexAttrib1NusvNV
0000000000403540 000000000000004c t VertexAttrib1usvNV
0000000000403590 000000000000006c t VertexAttrib2NusvNV
0000000000403600 0000000000000054 t VertexAttrib2usvNV
0000000000403660 0000000000000078 t VertexAttrib3NusvNV
00000000004036e0 000000000000005c t VertexAttrib3usvNV
0000000000403740 0000000000000084 t VertexAttrib4NusvNV
00000000004037d0 0000000000000064 t VertexAttrib4usvNV
0000000000403840 0000000000000074 t VertexAttrib1NivNV
00000000004038c0 000000000000004c t VertexAttrib1ivNV
0000000000403910 000000000000008c t VertexAttrib2NivNV
00000000004039a0 0000000000000050 t VertexAttrib2ivNV
00000000004039f0 00000000000000a8 t VertexAttrib3NivNV
0000000000403aa0 0000000000000058 t VertexAttrib3ivNV
0000000000403b00 00000000000000c0 t VertexAttrib4NivNV
0000000000403bc0 000000000000005c t VertexAttrib4ivNV
0000000000403c20 0000000000000064 t VertexAttrib1NuivNV
0000000000403c90 000000000000004c t VertexAttrib1uivNV
0000000000403ce0 0000000000000070 t VertexAttrib2NuivNV
0000000000403d50 0000000000000050 t VertexAttrib2uivNV
0000000000403da0 0000000000000080 t VertexAttrib3NuivNV
0000000000403e20 0000000000000058 t VertexAttrib3uivNV
0000000000403e80 000000000000008c t VertexAttrib4NuivNV
0000000000403f10 000000000000005c t VertexAttrib4uivNV
0000000000403f70 0000000000000044 t VertexAttrib1fvNV
0000000000403fc0 0000000000000044 t VertexAttrib2fvNV
0000000000404010 0000000000000044 t VertexAttrib3fvNV
0000000000404060 0000000000000044 t VertexAttrib4fvNV
00000000004040b0 0000000000000044 t VertexAttrib1dvNV
0000000000404100 0000000000000044 t VertexAttrib2dvNV
0000000000404150 0000000000000044 t VertexAttrib3dvNV
00000000004041a0 0000000000000044 t VertexAttrib4dvNV
00000000004041f0 000000000000006c t VertexAttrib1NbvARB
0000000000404260 000000000000004c t VertexAttrib1bvARB
00000000004042b0 000000000000007c t VertexAttrib2NbvARB
0000000000404330 0000000000000054 t VertexAttrib2bvARB
0000000000404390 0000000000000094 t VertexAttrib3NbvARB
0000000000404430 000000000000005c t VertexAttrib3bvARB
0000000000404490 00000000000000a8 t VertexAttrib4NbvARB
0000000000404540 0000000000000064 t VertexAttrib4bvARB
00000000004045b0 0000000000000058 t VertexAttrib1NubvARB
0000000000404610 000000000000004c t VertexAttrib1ubvARB
0000000000404660 0000000000000060 t VertexAttrib2NubvARB
00000000004046c0 0000000000000054 t VertexAttrib2ubvARB
0000000000404720 0000000000000068 t VertexAttrib3NubvARB
0000000000404790 000000000000005c t VertexAttrib3ubvARB
00000000004047f0 0000000000000070 t VertexAttrib4NubvARB
0000000000404860 0000000000000064 t VertexAttrib4ubvARB
00000000004048d0 000000000000006c t VertexAttrib1NsvARB
0000000000404940 000000000000004c t VertexAttrib1svARB
0000000000404990 000000000000007c t VertexAttrib2NsvARB
0000000000404a10 0000000000000054 t VertexAttrib2svARB
0000000000404a70 0000000000000094 t VertexAttrib3NsvARB
0000000000404b10 000000000000005c t VertexAttrib3svARB
0000000000404b70 00000000000000a8 t VertexAttrib4NsvARB
0000000000404c20 0000000000000064 t VertexAttrib4svARB
0000000000404c90 0000000000000060 t VertexAttrib1NusvARB
0000000000404cf0 000000000000004c t VertexAttrib1usvARB
0000000000404d40 000000000000006c t VertexAttrib2NusvARB
0000000000404db0 0000000000000054 t VertexAttrib2usvARB
0000000000404e10 0000000000000078 t VertexAttrib3NusvARB
0000000000404e90 000000000000005c t VertexAttrib3usvARB
0000000000404ef0 0000000000000084 t VertexAttrib4NusvARB
0000000000404f80 0000000000000064 t VertexAttrib4usvARB
0000000000404ff0 0000000000000074 t VertexAttrib1NivARB
0000000000405070 000000000000004c t VertexAttrib1ivARB
00000000004050c0 000000000000008c t VertexAttrib2NivARB
0000000000405150 0000000000000050 t VertexAttrib2ivARB
00000000004051a0 00000000000000a8 t VertexAttrib3NivARB
0000000000405250 0000000000000058 t VertexAttrib3ivARB
00000000004052b0 00000000000000c0 t VertexAttrib4NivARB
0000000000405370 000000000000005c t VertexAttrib4ivARB
00000000004053d0 0000000000000064 t VertexAttrib1NuivARB
0000000000405440 000000000000004c t VertexAttrib1uivARB
0000000000405490 0000000000000070 t VertexAttrib2NuivARB
0000000000405500 0000000000000050 t VertexAttrib2uivARB
0000000000405550 0000000000000080 t VertexAttrib3NuivARB
00000000004055d0 0000000000000058 t VertexAttrib3uivARB
0000000000405630 000000000000008c t VertexAttrib4NuivARB
00000000004056c0 000000000000005c t VertexAttrib4uivARB
0000000000405720 0000000000000044 t VertexAttrib1fvARB
0000000000405770 0000000000000044 t VertexAttrib2fvARB
00000000004057c0 0000000000000044 t VertexAttrib3fvARB
0000000000405810 0000000000000044 t VertexAttrib4fvARB
0000000000405860 0000000000000044 t VertexAttrib1dvARB
00000000004058b0 0000000000000044 t VertexAttrib2dvARB
0000000000405900 0000000000000044 t VertexAttrib3dvARB
0000000000405950 0000000000000044 t VertexAttrib4dvARB
00000000004059a0 0000000000000048 t VertexAttribI1bv
00000000004059f0 000000000000004c t VertexAttribI2bv
0000000000405a40 0000000000000050 t VertexAttribI3bv
0000000000405a90 0000000000000044 t VertexAttribI4bv
0000000000405ae0 0000000000000048 t VertexAttribI1ubv
0000000000405b30 000000000000004c t VertexAttribI2ubv
0000000000405b80 0000000000000050 t VertexAttribI3ubv
0000000000405bd0 0000000000000044 t VertexAttribI4ubv
0000000000405c20 0000000000000048 t VertexAttribI1sv
0000000000405c70 000000000000004c t VertexAttribI2sv
0000000000405cc0 0000000000000050 t VertexAttribI3sv
0000000000405d10 0000000000000044 t VertexAttribI4sv
0000000000405d60 0000000000000048 t VertexAttribI1usv
0000000000405db0 000000000000004c t VertexAttribI2usv
0000000000405e00 0000000000000050 t VertexAttribI3usv
0000000000405e50 0000000000000044 t VertexAttribI4usv
0000000000405ea0 0000000000000048 t VertexAttribI1iv
0000000000405ef0 0000000000000050 t VertexAttribI2iv
0000000000405f40 0000000000000050 t VertexAttribI3iv
0000000000405f90 0000000000000044 t VertexAttribI4iv
0000000000405fe0 0000000000000048 t VertexAttribI1uiv
0000000000406030 0000000000000050 t VertexAttribI2uiv
0000000000406080 0000000000000050 t VertexAttribI3uiv
00000000004060d0 0000000000000044 t VertexAttribI4uiv
0000000000406120 0000000000000044 t VertexAttribL1dv
0000000000406170 0000000000000044 t VertexAttribL2dv
00000000004061c0 0000000000000044 t VertexAttribL3dv
0000000000406210 0000000000000044 t VertexAttribL4dv
0000000000406260 0000000000000374 t _mesa_array_element
00000000004065e0 00000000000000b8 T _ae_ArrayElement
00000000004066a0 000000000000000c t _mesa_install_arrayelt_vtxfmt
00000000004066b0 0000000000000074 T _mesa_Color3b
0000000000406730 0000000000000038 T _mesa_Color3d
0000000000406770 0000000000000080 T _mesa_Color3i
00000000004067f0 0000000000000074 T _mesa_Color3s
0000000000406870 0000000000000060 T _mesa_Color3ui
00000000004068d0 000000000000005c T _mesa_Color3us
0000000000406930 000000000000004c T _mesa_Color3ub
0000000000406980 0000000000000078 T _mesa_Color3bv
0000000000406a00 0000000000000044 T _mesa_Color3dv
0000000000406a50 000000000000008c T _mesa_Color3iv
0000000000406ae0 0000000000000078 T _mesa_Color3sv
0000000000406b60 0000000000000068 T _mesa_Color3uiv
0000000000406bd0 0000000000000060 T _mesa_Color3usv
0000000000406c30 0000000000000050 T _mesa_Color3ubv
0000000000406c80 0000000000000088 T _mesa_Color4b
0000000000406d10 0000000000000038 T _mesa_Color4d
0000000000406d50 0000000000000098 T _mesa_Color4i
0000000000406df0 0000000000000088 T _mesa_Color4s
0000000000406e80 0000000000000068 T _mesa_Color4ui
0000000000406ef0 0000000000000064 T _mesa_Color4us
0000000000406f60 0000000000000050 T _mesa_Color4ub
0000000000406fb0 00000000000000a4 T _mesa_Color4iv
0000000000407060 000000000000008c T _mesa_Color4bv
00000000004070f0 0000000000000044 T _mesa_Color4dv
0000000000407140 000000000000008c T _mesa_Color4sv
00000000004071d0 0000000000000070 T _mesa_Color4uiv
0000000000407240 0000000000000068 T _mesa_Color4usv
00000000004072b0 0000000000000054 T _mesa_Color4ubv
0000000000407310 0000000000000040 T _mesa_FogCoordd
0000000000407350 0000000000000048 T _mesa_FogCoorddv
00000000004073a0 000000000000002c T _mesa_Indexd
00000000004073d0 0000000000000030 T _mesa_Indexi
0000000000407400 0000000000000030 T _mesa_Indexs
0000000000407430 0000000000000030 T _mesa_Indexub
0000000000407460 0000000000000034 T _mesa_Indexdv
00000000004074a0 0000000000000034 T _mesa_Indexiv
00000000004074e0 0000000000000034 T _mesa_Indexsv
0000000000407520 0000000000000034 T _mesa_Indexubv
0000000000407560 0000000000000034 T _mesa_EdgeFlagv
00000000004075a0 0000000000000074 T _mesa_Normal3b
0000000000407620 0000000000000034 T _mesa_Normal3d
0000000000407660 0000000000000080 T _mesa_Normal3i
00000000004076e0 0000000000000074 T _mesa_Normal3s
0000000000407760 0000000000000078 T _mesa_Normal3bv
00000000004077e0 0000000000000040 T _mesa_Normal3dv
0000000000407820 000000000000008c T _mesa_Normal3iv
00000000004078b0 0000000000000078 T _mesa_Normal3sv
0000000000407930 000000000000002c T _mesa_TexCoord1d
0000000000407960 0000000000000030 T _mesa_TexCoord1i
0000000000407990 0000000000000030 T _mesa_TexCoord1s
00000000004079c0 0000000000000030 T _mesa_TexCoord2d
00000000004079f0 0000000000000038 T _mesa_TexCoord2s
0000000000407a30 0000000000000034 T _mesa_TexCoord2i
0000000000407a70 0000000000000034 T _mesa_TexCoord3d
0000000000407ab0 0000000000000038 T _mesa_TexCoord3i
0000000000407af0 0000000000000040 T _mesa_TexCoord3s
0000000000407b30 0000000000000038 T _mesa_TexCoord4d
0000000000407b70 000000000000003c T _mesa_TexCoord4i
0000000000407bb0 0000000000000048 T _mesa_TexCoord4s
0000000000407c00 0000000000000034 T _mesa_TexCoord1dv
0000000000407c40 0000000000000034 T _mesa_TexCoord1iv
0000000000407c80 0000000000000034 T _mesa_TexCoord1sv
0000000000407cc0 0000000000000038 T _mesa_TexCoord2dv
0000000000407d00 0000000000000038 T _mesa_TexCoord2iv
0000000000407d40 000000000000003c T _mesa_TexCoord2sv
0000000000407d80 0000000000000040 T _mesa_TexCoord3dv
0000000000407dc0 0000000000000040 T _mesa_TexCoord3iv
0000000000407e00 0000000000000044 T _mesa_TexCoord3sv
0000000000407e50 0000000000000044 T _mesa_TexCoord4dv
0000000000407ea0 0000000000000044 T _mesa_TexCoord4iv
0000000000407ef0 000000000000004c T _mesa_TexCoord4sv
0000000000407f40 0000000000000030 T _mesa_Vertex2d
0000000000407f70 0000000000000034 T _mesa_Vertex2i
0000000000407fb0 0000000000000038 T _mesa_Vertex2s
0000000000407ff0 0000000000000034 T _mesa_Vertex3d
0000000000408030 0000000000000038 T _mesa_Vertex3i
0000000000408070 0000000000000040 T _mesa_Vertex3s
00000000004080b0 0000000000000038 T _mesa_Vertex4d
00000000004080f0 000000000000003c T _mesa_Vertex4i
0000000000408130 0000000000000048 T _mesa_Vertex4s
0000000000408180 0000000000000038 T _mesa_Vertex2dv
00000000004081c0 0000000000000038 T _mesa_Vertex2iv
0000000000408200 000000000000003c T _mesa_Vertex2sv
0000000000408240 0000000000000040 T _mesa_Vertex3dv
0000000000408280 0000000000000040 T _mesa_Vertex3iv
00000000004082c0 0000000000000044 T _mesa_Vertex3sv
0000000000408310 0000000000000044 T _mesa_Vertex4dv
0000000000408360 0000000000000044 T _mesa_Vertex4iv
00000000004083b0 000000000000004c T _mesa_Vertex4sv
0000000000408400 0000000000000038 T _mesa_MultiTexCoord1d
0000000000408440 000000000000003c T _mesa_MultiTexCoord1dv
0000000000408480 0000000000000038 T _mesa_MultiTexCoord1i
00000000004084c0 000000000000003c T _mesa_MultiTexCoord1iv
0000000000408500 000000000000003c T _mesa_MultiTexCoord1s
0000000000408540 000000000000003c T _mesa_MultiTexCoord1sv
0000000000408580 000000000000003c T _mesa_MultiTexCoord2d
00000000004085c0 0000000000000040 T _mesa_MultiTexCoord2dv
0000000000408600 000000000000003c T _mesa_MultiTexCoord2i
0000000000408640 0000000000000040 T _mesa_MultiTexCoord2iv
0000000000408680 0000000000000044 T _mesa_MultiTexCoord2s
00000000004086d0 0000000000000044 T _mesa_MultiTexCoord2sv
0000000000408720 0000000000000040 T _mesa_MultiTexCoord3d
0000000000408760 0000000000000048 T _mesa_MultiTexCoord3dv
00000000004087b0 0000000000000040 T _mesa_MultiTexCoord3i
00000000004087f0 0000000000000048 T _mesa_MultiTexCoord3iv
0000000000408840 000000000000004c T _mesa_MultiTexCoord3s
0000000000408890 000000000000004c T _mesa_MultiTexCoord3sv
00000000004088e0 0000000000000040 T _mesa_MultiTexCoord4d
0000000000408920 000000000000004c T _mesa_MultiTexCoord4dv
0000000000408970 0000000000000044 T _mesa_MultiTexCoord4i
00000000004089c0 000000000000004c T _mesa_MultiTexCoord4iv
0000000000408a10 0000000000000054 T _mesa_MultiTexCoord4s
0000000000408a70 0000000000000054 T _mesa_MultiTexCoord4sv
0000000000408ad0 0000000000000038 T _mesa_EvalCoord2dv
0000000000408b10 0000000000000030 T _mesa_EvalCoord2d
0000000000408b40 0000000000000034 T _mesa_EvalCoord1dv
0000000000408b80 000000000000002c T _mesa_EvalCoord1d
0000000000408bb0 000000000000003c T _mesa_Materialf
0000000000408bf0 0000000000000044 T _mesa_Materiali
0000000000408c40 0000000000000138 T _mesa_Materialiv
0000000000408d80 0000000000000038 T _mesa_Rectd
0000000000408dc0 0000000000000044 T _mesa_Rectdv
0000000000408e10 0000000000000034 T _mesa_Rectfv
0000000000408e50 000000000000003c T _mesa_Recti
0000000000408e90 0000000000000044 T _mesa_Rectiv
0000000000408ee0 0000000000000048 T _mesa_Rects
0000000000408f30 000000000000004c T _mesa_Rectsv
0000000000408f80 0000000000000088 T _mesa_SecondaryColor3b
0000000000409010 0000000000000048 T _mesa_SecondaryColor3d
0000000000409060 00000000000000a4 T _mesa_SecondaryColor3i
0000000000409110 0000000000000088 T _mesa_SecondaryColor3s
00000000004091a0 0000000000000074 T _mesa_SecondaryColor3ui
0000000000409220 000000000000006c T _mesa_SecondaryColor3us
0000000000409290 000000000000005c T _mesa_SecondaryColor3ub
00000000004092f0 000000000000008c T _mesa_SecondaryColor3bv
0000000000409380 0000000000000054 T _mesa_SecondaryColor3dv
00000000004093e0 00000000000000a0 T _mesa_SecondaryColor3iv
0000000000409480 000000000000008c T _mesa_SecondaryColor3sv
0000000000409510 0000000000000078 T _mesa_SecondaryColor3uiv
0000000000409590 0000000000000070 T _mesa_SecondaryColor3usv
0000000000409600 0000000000000060 T _mesa_SecondaryColor3ubv
0000000000409660 000000000000004c T _mesa_VertexAttrib1sNV
00000000004096b0 0000000000000048 T _mesa_VertexAttrib1dNV
0000000000409700 0000000000000054 T _mesa_VertexAttrib2sNV
0000000000409760 000000000000004c T _mesa_VertexAttrib2dNV
00000000004097b0 000000000000005c T _mesa_VertexAttrib3sNV
0000000000409810 0000000000000054 T _mesa_VertexAttrib3dNV
0000000000409870 0000000000000064 T _mesa_VertexAttrib4sNV
00000000004098e0 0000000000000054 T _mesa_VertexAttrib4dNV
0000000000409940 0000000000000070 T _mesa_VertexAttrib4ubNV
00000000004099b0 000000000000004c T _mesa_VertexAttrib1svNV
0000000000409a00 000000000000004c T _mesa_VertexAttrib1dvNV
0000000000409a50 0000000000000054 T _mesa_VertexAttrib2svNV
0000000000409ab0 0000000000000050 T _mesa_VertexAttrib2dvNV
0000000000409b00 000000000000005c t _mesa_VertexAttrib3svNV
0000000000409b60 0000000000000058 T _mesa_VertexAttrib3dvNV
0000000000409bc0 0000000000000064 t _mesa_VertexAttrib4svNV
0000000000409c30 000000000000005c T _mesa_VertexAttrib4dvNV
0000000000409c90 0000000000000070 t _mesa_VertexAttrib4ubvNV
0000000000409d00 0000000000000080 T _mesa_VertexAttribs1fvNV
0000000000409d80 000000000000008c T _mesa_VertexAttribs2fvNV
0000000000409e10 000000000000005c T _mesa_VertexAttribs3svNV
0000000000409e70 000000000000008c T _mesa_VertexAttribs3fvNV
0000000000409f00 000000000000005c T _mesa_VertexAttribs4svNV
0000000000409f60 0000000000000090 T _mesa_VertexAttribs4fvNV
0000000000409ff0 000000000000005c T _mesa_VertexAttribs4ubvNV
000000000040a050 000000000000004c T _mesa_VertexAttrib1s
000000000040a0a0 0000000000000048 T _mesa_VertexAttrib1d
000000000040a0f0 0000000000000054 T _mesa_VertexAttrib2s
000000000040a150 000000000000004c T _mesa_VertexAttrib2d
000000000040a1a0 000000000000005c T _mesa_VertexAttrib3s
000000000040a200 0000000000000054 T _mesa_VertexAttrib3d
000000000040a260 0000000000000064 T _mesa_VertexAttrib4s
000000000040a2d0 0000000000000054 T _mesa_VertexAttrib4d
000000000040a330 000000000000004c T _mesa_VertexAttrib1sv
000000000040a380 000000000000004c T _mesa_VertexAttrib1dv
000000000040a3d0 0000000000000054 T _mesa_VertexAttrib2sv
000000000040a430 0000000000000050 T _mesa_VertexAttrib2dv
000000000040a480 000000000000005c T _mesa_VertexAttrib3sv
000000000040a4e0 0000000000000058 T _mesa_VertexAttrib3dv
000000000040a540 0000000000000064 T _mesa_VertexAttrib4sv
000000000040a5b0 000000000000005c T _mesa_VertexAttrib4dv
000000000040a610 0000000000000064 T _mesa_VertexAttrib4bv
000000000040a680 000000000000005c T _mesa_VertexAttrib4iv
000000000040a6e0 0000000000000064 T _mesa_VertexAttrib4ubv
000000000040a750 0000000000000064 T _mesa_VertexAttrib4usv
000000000040a7c0 000000000000005c T _mesa_VertexAttrib4uiv
000000000040a820 00000000000000a8 T _mesa_VertexAttrib4Nbv
000000000040a8d0 00000000000000a8 T _mesa_VertexAttrib4Nsv
000000000040a980 00000000000000c0 T _mesa_VertexAttrib4Niv
000000000040aa40 0000000000000070 T _mesa_VertexAttrib4Nub
000000000040aab0 0000000000000070 T _mesa_VertexAttrib4Nubv
000000000040ab20 0000000000000084 T _mesa_VertexAttrib4Nusv
000000000040abb0 000000000000008c T _mesa_VertexAttrib4Nuiv
000000000040ac40 0000000000000048 T _mesa_VertexAttribI1iv
000000000040ac90 0000000000000048 T _mesa_VertexAttribI1uiv
000000000040ace0 0000000000000054 T _mesa_VertexAttribI4bv
000000000040ad40 0000000000000054 T _mesa_VertexAttribI4sv
000000000040ada0 0000000000000054 T _mesa_VertexAttribI4ubv
000000000040ae00 0000000000000054 T _mesa_VertexAttribI4usv
000000000040ae60 0000000000000084 T _mesa_VertexAttribs1dvNV
000000000040aef0 0000000000000084 T _mesa_VertexAttribs1svNV
000000000040af80 0000000000000098 T _mesa_VertexAttribs2dvNV
000000000040b020 0000000000000098 T _mesa_VertexAttribs3dvNV
000000000040b0c0 000000000000009c T _mesa_VertexAttribs2svNV
000000000040b160 00000000000000ac T _mesa_VertexAttribs4dvNV
000000000040b210 00000000000010cc t _mesa_loopback_init_api_table
000000000040c2e0 00000000000001c4 t lookup_or_create_program
000000000040c4b0 000000000000032c t set_program_string
000000000040c7e0 00000000000000b4 t get_local_param_pointer
000000000040c8a0 00000000000003ec t get_program_iv
000000000040cc90 0000000000000194 t program_local_parameters4fv
000000000040ce30 00000000000001fc t _mesa_BindProgramARB
000000000040d030 00000000000001bc T _mesa_DeleteProgramsARB
000000000040d1f0 0000000000000114 T _mesa_GenProgramsARB
000000000040d310 0000000000000084 T _mesa_IsProgramARB
000000000040d3a0 00000000000000a0 T _mesa_ProgramStringARB
000000000040d440 0000000000000060 T _mesa_NamedProgramStringEXT
000000000040d4a0 00000000000001d0 T _mesa_ProgramEnvParameter4dARB
000000000040d670 00000000000001c8 T _mesa_ProgramEnvParameter4dvARB
000000000040d840 00000000000001c0 T _mesa_ProgramEnvParameter4fARB
000000000040da00 00000000000001d8 T _mesa_ProgramEnvParameter4fvARB
000000000040dbe0 00000000000001a0 T _mesa_ProgramEnvParameters4fvEXT
000000000040dd80 00000000000000f0 T _mesa_GetProgramEnvParameterdvARB
000000000040de70 00000000000000f0 T _mesa_GetProgramEnvParameterfvARB
000000000040df60 0000000000000178 t _mesa_ProgramLocalParameter4fARB
000000000040e0e0 0000000000000164 t _mesa_NamedProgramLocalParameter4fEXT
000000000040e250 000000000000000c T _mesa_ProgramLocalParameter4fvARB
000000000040e260 000000000000000c T _mesa_NamedProgramLocalParameter4fvEXT
000000000040e270 0000000000000098 T _mesa_ProgramLocalParameters4fvEXT
000000000040e310 0000000000000060 T _mesa_NamedProgramLocalParameters4fvEXT
000000000040e370 0000000000000188 T _mesa_ProgramLocalParameter4dARB
000000000040e500 0000000000000174 T _mesa_NamedProgramLocalParameter4dEXT
000000000040e680 000000000000001c T _mesa_ProgramLocalParameter4dvARB
000000000040e6a0 000000000000001c T _mesa_NamedProgramLocalParameter4dvEXT
000000000040e6c0 0000000000000134 T _mesa_GetProgramLocalParameterfvARB
000000000040e800 00000000000000fc T _mesa_GetNamedProgramLocalParameterfvEXT
000000000040e900 0000000000000138 T _mesa_GetProgramLocalParameterdvARB
000000000040ea40 0000000000000100 T _mesa_GetNamedProgramLocalParameterdvEXT
000000000040eb40 000000000000009c T _mesa_GetProgramivARB
000000000040ebe0 00000000000000fc T _mesa_GetNamedProgramivEXT
000000000040ece0 00000000000000cc T _mesa_GetProgramStringARB
000000000040edb0 00000000000000b0 T _mesa_GetNamedProgramStringEXT
000000000040ee60 00000000000000e8 t gen_vertex_arrays.part.0
000000000040ef50 0000000000000050 t _mesa_new_vao
000000000040efa0 0000000000000078 t _mesa_delete_vao
000000000040f020 00000000000000a0 t _mesa_reference_vao_
000000000040f0c0 00000000000000a8 t _mesa_lookup_vao
000000000040f170 0000000000000140 t _mesa_lookup_vao_err
000000000040f2b0 0000000000000038 t _mesa_initialize_vao
000000000040f2f0 00000000000004e0 t _mesa_update_vao_derived_arrays
000000000040f7d0 0000000000000028 t _mesa_set_vao_immutable
000000000040f800 0000000000000054 t _mesa_all_varyings_in_vbos
000000000040f860 0000000000000060 t _mesa_all_buffers_are_unmapped
000000000040f8c0 00000000000000a8 t _mesa_vao_map_arrays
000000000040f970 000000000000007c t _mesa_vao_map
000000000040f9f0 0000000000000084 t _mesa_vao_unmap_arrays
000000000040fa80 0000000000000048 t _mesa_vao_unmap
000000000040fad0 00000000000000a4 t _mesa_BindVertexArray_no_error
000000000040fb80 0000000000000158 t delete_vertex_arrays
000000000040fce0 00000000000000c8 t _mesa_BindVertexArray
000000000040fdb0 000000000000002c T _mesa_DeleteVertexArrays_no_error
000000000040fde0 0000000000000044 T _mesa_DeleteVertexArrays
000000000040fe30 000000000000003c T _mesa_GenVertexArrays_no_error
000000000040fe70 0000000000000064 T _mesa_GenVertexArrays
000000000040fee0 000000000000003c T _mesa_CreateVertexArrays_no_error
000000000040ff20 0000000000000064 T _mesa_CreateVertexArrays
000000000040ff90 0000000000000070 t _mesa_IsVertexArray
0000000000410000 000000000000011c T _mesa_VertexArrayElementBuffer_no_error
0000000000410120 00000000000000e4 T _mesa_VertexArrayElementBuffer
0000000000410210 00000000000000c4 T _mesa_GetVertexArrayiv
00000000004102e0 00000000000000e8 t check_arith_arg
00000000004103d0 000000000000005c t _mesa_delete_ati_fragment_shader.part.0
0000000000410430 00000000000005f8 t _mesa_FragmentOpXATI
0000000000410a30 0000000000000034 t _mesa_new_ati_fragment_shader
0000000000410a70 0000000000000018 t _mesa_delete_ati_fragment_shader
0000000000410a90 0000000000000118 T _mesa_GenFragmentShadersATI
0000000000410bb0 0000000000000174 t _mesa_BindFragmentShaderATI
0000000000410d30 0000000000000168 T _mesa_DeleteFragmentShaderATI
0000000000410ea0 0000000000000140 T _mesa_BeginFragmentShaderATI
0000000000410fe0 0000000000000180 T _mesa_EndFragmentShaderATI
0000000000411160 0000000000000208 T _mesa_PassTexCoordATI
0000000000411370 0000000000000208 T _mesa_SampleMapATI
0000000000411580 0000000000000060 T _mesa_ColorFragmentOp1ATI
00000000004115e0 0000000000000068 T _mesa_ColorFragmentOp2ATI
0000000000411650 0000000000000074 T _mesa_ColorFragmentOp3ATI
00000000004116d0 000000000000005c T _mesa_AlphaFragmentOp1ATI
0000000000411730 000000000000005c T _mesa_AlphaFragmentOp2ATI
0000000000411790 0000000000000070 T _mesa_AlphaFragmentOp3ATI
0000000000411800 0000000000000128 T _mesa_SetFragmentShaderConstantATI
0000000000411930 0000000000000138 t copy_array_attrib
0000000000411a70 00000000000000b4 t push_attrib
0000000000411b30 00000000000009b8 T _mesa_PushAttrib
00000000004124f0 0000000000001ebc T _mesa_PopAttrib
00000000004143b0 00000000000003e4 t _mesa_PushClientAttrib
00000000004147a0 0000000000000380 T _mesa_PopClientAttrib
0000000000414b20 0000000000000324 t _mesa_ClientAttribDefaultEXT
0000000000414e50 0000000000000024 T _mesa_PushClientAttribDefaultEXT
0000000000414e80 0000000000000128 t _mesa_free_attrib_data
0000000000414fb0 0000000000000014 t _mesa_init_attrib
0000000000414fd0 000000000000004c T _mesa_TextureBarrierNV
0000000000415020 000000000000003c T _mesa_MemoryBarrier
0000000000415060 0000000000000054 T _mesa_MemoryBarrierByRegion_no_error
00000000004150c0 0000000000000084 T _mesa_MemoryBarrierByRegion
0000000000415150 000000000000004c T _mesa_BlendBarrier
00000000004151a0 000000000000004c T _mesa_FramebufferFetchBarrierEXT
00000000004151f0 0000000000000044 T _mesa_PrimitiveBoundingBox
0000000000415240 000000000000002c t _mesa_init_bbox
0000000000415270 00000000000000e0 t legal_dst_factor
0000000000415350 00000000000000b0 t update_uses_dual_src
0000000000415400 0000000000000188 t blend_func_separate
0000000000415590 0000000000000090 t legal_src_factor
0000000000415620 0000000000000154 t validate_blend_factors
0000000000415780 00000000000000bc t skip_blend_state_update
0000000000415840 0000000000000268 t blend_equation_separate
0000000000415ab0 00000000000000a4 T _mesa_BlendFunc
0000000000415b60 0000000000000054 T _mesa_BlendFunc_no_error
0000000000415bc0 00000000000000b8 t _mesa_BlendFuncSeparate
0000000000415c80 0000000000000058 T _mesa_BlendFuncSeparate_no_error
0000000000415ce0 0000000000000118 t _mesa_BlendFuncSeparateiARB_no_error
0000000000415e00 000000000000000c T _mesa_BlendFunciARB_no_error
0000000000415e10 00000000000001a4 t _mesa_BlendFuncSeparateiARB
0000000000415fc0 000000000000000c T _mesa_BlendFunciARB
0000000000415fd0 00000000000002b8 t _mesa_BlendEquation
0000000000416290 00000000000001fc T _mesa_BlendEquationiARB_no_error
0000000000416490 00000000000002a8 T _mesa_BlendEquationiARB
0000000000416740 0000000000000030 T _mesa_BlendEquationSeparate_no_error
0000000000416770 0000000000000030 t _mesa_BlendEquationSeparate
00000000004167a0 00000000000000f8 T _mesa_BlendEquationSeparateiARB_no_error
00000000004168a0 000000000000020c t _mesa_BlendEquationSeparateiARB
0000000000416ab0 00000000000001b4 t _mesa_BlendColor
0000000000416c70 0000000000000128 t _mesa_AlphaFunc
0000000000416da0 00000000000000fc t _mesa_LogicOp
0000000000416ea0 00000000000000cc T _mesa_LogicOp_no_error
0000000000416f70 0000000000000088 t _mesa_IndexMask
0000000000417000 0000000000000138 t _mesa_ColorMask
0000000000417140 0000000000000128 t _mesa_ColorMaski
0000000000417270 00000000000001f8 t _mesa_ClampColor
0000000000417470 000000000000002c t _mesa_get_clamp_fragment_color
00000000004174a0 000000000000002c t _mesa_get_clamp_read_color
00000000004174d0 0000000000000054 t _mesa_update_clamp_fragment_color
0000000000417530 0000000000000044 t _mesa_update_clamp_vertex_color
0000000000417580 00000000000000fc t _mesa_init_color
0000000000417680 0000000000000124 t validate_depth_buffer.isra.0
00000000004177b0 0000000000000148 t validate_stencil_buffer.isra.0
0000000000417900 00000000000001f8 t validate_color_buffer
0000000000417b00 0000000000000074 t _mesa_regions_overlap
0000000000417b80 0000000000000194 T _mesa_BlitFramebuffer_no_error
0000000000417d20 0000000000000458 T _mesa_BlitFramebuffer
0000000000418180 00000000000001e4 T _mesa_BlitNamedFramebuffer_no_error
0000000000418370 00000000000004c0 T _mesa_BlitNamedFramebuffer
0000000000418830 00000000000003c8 t get_buffer_target
0000000000418c00 0000000000000048 t _mesa_delete_buffer_object
0000000000418c50 0000000000000128 t validate_buffer_storage
0000000000418d80 0000000000000110 t buffer_object_subdata_range_good
0000000000418e90 0000000000000130 t copy_buffer_sub_data
0000000000418fc0 00000000000000d0 t map_buffer_range
0000000000419090 00000000000000bc t buffer_page_commitment
0000000000419150 00000000000000e4 t _mesa_ClearBufferSubData_sw
0000000000419240 00000000000001e4 t get_buffer_parameter
0000000000419430 0000000000000080 t buffer_usage_warning
00000000004194b0 00000000000000e0 t convert_clear_buffer_data
0000000000419590 0000000000000254 t clear_buffer_sub_data_error
00000000004197f0 0000000000000084 t validate_and_unmap_buffer
0000000000419880 00000000000000d4 t flush_mapped_buffer_range
0000000000419960 0000000000000124 t create_buffers.part.0
0000000000419a90 00000000000000dc t validate_buffer_sub_data
0000000000419b70 00000000000002f0 t validate_map_buffer_range.part.0
0000000000419e60 0000000000000068 t validate_map_buffer_range
0000000000419ed0 0000000000000130 t clear_buffer_sub_data_no_error.constprop.0
000000000041a000 000000000000010c t buffer_data_no_error
000000000041a110 000000000000016c t buffer_storage
000000000041a280 000000000000020c t buffer_data_error
000000000041a490 0000000000000064 t _mesa_reference_buffer_object_
000000000041a500 0000000000000114 t bind_buffer
000000000041a620 00000000000000cc t bind_buffer_base_uniform_buffer
000000000041a6f0 00000000000000d0 t bind_buffer_base_shader_storage_buffer
000000000041a7c0 00000000000000cc t bind_buffer_base_atomic_buffer
000000000041a890 00000000000000a8 t _mesa_initialize_buffer_object
000000000041a940 0000000000000158 t _mesa_init_buffer_objects
000000000041aaa0 0000000000000314 t _mesa_free_buffer_objects
000000000041adc0 00000000000000e4 t _mesa_handle_bind_buffer_gen
000000000041aeb0 00000000000000f4 t bind_buffer_object
000000000041afb0 000000000000057c t delete_buffers
000000000041b530 0000000000000068 t _mesa_update_default_objects_buffer_objects
000000000041b5a0 0000000000000018 t _mesa_lookup_bufferobj
000000000041b5c0 0000000000000080 t _mesa_lookup_bufferobj_err
000000000041b640 00000000000000bc t _mesa_multi_bind_lookup_bufferobj
000000000041b700 000000000000036c t bind_xfb_buffers
000000000041ba70 0000000000000100 t set_buffer_multi_binding
000000000041bb70 00000000000002e0 t bind_uniform_buffers
000000000041be50 00000000000002e4 t bind_shader_storage_buffers
000000000041c140 00000000000002c4 t bind_atomic_buffers
000000000041c410 0000000000000060 t _mesa_buffer_unmap_all_mappings
000000000041c470 00000000000003e8 T _mesa_BindBuffer_no_error
000000000041c860 0000000000000074 t _mesa_BindBuffer
000000000041c8e0 000000000000002c T _mesa_DeleteBuffers_no_error
000000000041c910 0000000000000044 T _mesa_DeleteBuffers
000000000041c960 0000000000000034 T _mesa_GenBuffers_no_error
000000000041c9a0 000000000000005c T _mesa_GenBuffers
000000000041ca00 0000000000000034 T _mesa_CreateBuffers_no_error
000000000041ca40 000000000000005c T _mesa_CreateBuffers
000000000041caa0 000000000000007c t _mesa_IsBuffer
000000000041cb20 0000000000000070 T _mesa_BufferStorage_no_error
000000000041cb90 0000000000000110 T _mesa_BufferStorage
000000000041cca0 000000000000019c T _mesa_NamedBufferStorageEXT
000000000041ce40 00000000000001dc T _mesa_BufferStorageMemEXT
000000000041d020 000000000000009c T _mesa_BufferStorageMemEXT_no_error
000000000041d0c0 0000000000000090 T _mesa_NamedBufferStorage_no_error
000000000041d150 0000000000000100 T _mesa_NamedBufferStorage
000000000041d250 00000000000001b0 T _mesa_NamedBufferStorageMemEXT
000000000041d400 00000000000000b8 T _mesa_NamedBufferStorageMemEXT_no_error
000000000041d4c0 000000000000005c T _mesa_BufferData_no_error
000000000041d520 00000000000000a4 T _mesa_BufferData
000000000041d5d0 0000000000000078 T _mesa_NamedBufferData_no_error
000000000041d650 00000000000000c0 T _mesa_NamedBufferData
000000000041d710 00000000000000d4 T _mesa_NamedBufferDataEXT
000000000041d7f0 0000000000000080 T _mesa_BufferSubData_no_error
000000000041d870 0000000000000128 T _mesa_BufferSubData
000000000041d9a0 00000000000000a4 T _mesa_NamedBufferSubData_no_error
000000000041da50 0000000000000124 T _mesa_NamedBufferSubData
000000000041db80 0000000000000120 T _mesa_NamedBufferSubDataEXT
000000000041dca0 0000000000000104 T _mesa_GetBufferSubData
000000000041ddb0 0000000000000100 T _mesa_GetNamedBufferSubData
000000000041deb0 0000000000000100 T _mesa_GetNamedBufferSubDataEXT
000000000041dfb0 0000000000000070 T _mesa_ClearBufferData_no_error
000000000041e020 00000000000000c4 T _mesa_ClearBufferData
000000000041e0f0 00000000000000a4 T _mesa_ClearNamedBufferData_no_error
000000000041e1a0 00000000000000e4 T _mesa_ClearNamedBufferData
000000000041e290 000000000000014c T _mesa_ClearNamedBufferDataEXT
000000000041e3e0 0000000000000078 T _mesa_ClearBufferSubData_no_error
000000000041e460 00000000000000d4 T _mesa_ClearBufferSubData
000000000041e540 00000000000000ac T _mesa_ClearNamedBufferSubData_no_error
000000000041e5f0 00000000000000fc T _mesa_ClearNamedBufferSubData
000000000041e6f0 0000000000000164 T _mesa_ClearNamedBufferSubDataEXT
000000000041e860 0000000000000054 T _mesa_UnmapBuffer_no_error
000000000041e8c0 0000000000000090 T _mesa_UnmapBuffer
000000000041e950 0000000000000080 T _mesa_UnmapNamedBufferEXT_no_error
000000000041e9d0 00000000000000b8 T _mesa_UnmapNamedBufferEXT
000000000041ea90 00000000000000bc T _mesa_GetBufferParameteriv
000000000041eb50 00000000000000bc T _mesa_GetBufferParameteri64v
000000000041ec10 00000000000000bc T _mesa_GetNamedBufferParameteriv
000000000041ecd0 00000000000000dc T _mesa_GetNamedBufferParameterivEXT
000000000041edb0 00000000000000bc T _mesa_GetNamedBufferParameteri64v
000000000041ee70 00000000000000ac T _mesa_GetBufferPointerv
000000000041ef20 00000000000000c0 T _mesa_GetNamedBufferPointerv
000000000041efe0 00000000000000cc T _mesa_GetNamedBufferPointervEXT
000000000041f0b0 0000000000000080 T _mesa_CopyBufferSubData_no_error
000000000041f130 00000000000000c0 T _mesa_CopyBufferSubData
000000000041f1f0 00000000000000f4 T _mesa_NamedCopyBufferSubDataEXT
000000000041f2f0 00000000000000b4 T _mesa_CopyNamedBufferSubData_no_error
000000000041f3b0 0000000000000128 T _mesa_CopyNamedBufferSubData
000000000041f4e0 0000000000000058 T _mesa_MapBufferRange_no_error
000000000041f540 000000000000013c T _mesa_MapBufferRange
000000000041f680 00000000000000fc T _mesa_MapNamedBufferRange_no_error
000000000041f780 0000000000000130 T _mesa_MapNamedBufferRangeEXT
000000000041f8b0 0000000000000138 T _mesa_MapNamedBufferRange
000000000041f9f0 000000000000007c T _mesa_MapBuffer_no_error
000000000041fa70 00000000000001a4 T _mesa_MapBuffer
000000000041fc20 0000000000000098 T _mesa_MapNamedBuffer_no_error
000000000041fcc0 00000000000001ac T _mesa_MapNamedBuffer
000000000041fe70 00000000000001b8 T _mesa_MapNamedBufferEXT
0000000000420030 0000000000000064 T _mesa_FlushMappedBufferRange_no_error
00000000004200a0 0000000000000098 T _mesa_FlushMappedBufferRange
0000000000420140 0000000000000088 T _mesa_FlushMappedNamedBufferRange_no_error
00000000004201d0 00000000000000a8 T _mesa_FlushMappedNamedBufferRange
0000000000420280 00000000000000c8 T _mesa_FlushMappedNamedBufferRangeEXT
0000000000420350 00000000000002f0 T _mesa_BindBufferRange_no_error
0000000000420640 00000000000003e8 T _mesa_BindBufferRange
0000000000420a30 0000000000000178 T _mesa_BindBufferBase
0000000000420bb0 0000000000000100 T _mesa_BindBuffersRange
0000000000420cb0 000000000000010c T _mesa_BindBuffersBase
0000000000420dc0 0000000000000084 T _mesa_InvalidateBufferSubData_no_error
0000000000420e50 0000000000000134 T _mesa_InvalidateBufferSubData
0000000000420f90 0000000000000074 T _mesa_InvalidateBufferData_no_error
0000000000421010 00000000000000cc T _mesa_InvalidateBufferData
00000000004210e0 00000000000000a4 T _mesa_BufferPageCommitmentARB
0000000000421190 00000000000000b4 T _mesa_NamedBufferPageCommitmentARB
0000000000421250 00000000000000d0 T _mesa_NamedBufferPageCommitmentEXT
0000000000421320 0000000000000194 t draw_buffer_enum_to_bitmask
00000000004214c0 0000000000000078 t supported_buffer_bitmask
0000000000421540 0000000000000178 t read_buffer_enum_to_index
00000000004216c0 0000000000000198 t read_buffer_err
0000000000421860 000000000000003c t _mesa_back_to_front_if_single_buffered
00000000004218a0 0000000000000404 t _mesa_drawbuffers
0000000000421cb0 000000000000013c t draw_buffer_error
0000000000421df0 0000000000000034 t _mesa_DrawBuffer
0000000000421e30 0000000000000080 T _mesa_FramebufferDrawBufferEXT
0000000000421eb0 0000000000000080 T _mesa_NamedFramebufferDrawBuffer
0000000000421f30 00000000000003c8 t draw_buffers_error
0000000000422300 0000000000000038 t _mesa_DrawBuffers
0000000000422340 0000000000000088 T _mesa_FramebufferDrawBuffersEXT
00000000004223d0 0000000000000088 T _mesa_NamedFramebufferDrawBuffers
0000000000422460 0000000000000134 t draw_buffers_no_error.constprop.0
00000000004225a0 0000000000000080 T _mesa_NamedFramebufferDrawBuffers_no_error
0000000000422620 0000000000000030 T _mesa_DrawBuffers_no_error
0000000000422650 00000000000000d0 t draw_buffer_no_error.constprop.0
0000000000422720 0000000000000068 T _mesa_NamedFramebufferDrawBuffer_no_error
0000000000422790 000000000000002c T _mesa_DrawBuffer_no_error
00000000004227c0 000000000000001c t _mesa_update_draw_buffers
00000000004227e0 000000000000005c t _mesa_readbuffer
0000000000422840 00000000000000f8 T _mesa_ReadBuffer_no_error
0000000000422940 0000000000000034 t _mesa_ReadBuffer
0000000000422980 00000000000000f8 T _mesa_NamedFramebufferReadBuffer_no_error
0000000000422a80 0000000000000080 T _mesa_FramebufferReadBufferEXT
0000000000422b00 0000000000000080 T _mesa_NamedFramebufferReadBuffer
0000000000422b80 000000000000018c t make_color_buffer_mask
0000000000422d10 000000000000007c t color_buffer_writes_enabled
0000000000422d90 000000000000002c t _mesa_ClearIndex
0000000000422dc0 0000000000000034 t _mesa_ClearColor
0000000000422e00 0000000000000038 T _mesa_ClearColorIiEXT
0000000000422e40 0000000000000038 T _mesa_ClearColorIuiEXT
0000000000422e80 000000000000019c T _mesa_Clear_no_error
0000000000423020 0000000000000258 T _mesa_Clear
0000000000423280 0000000000000130 T _mesa_ClearBufferiv_no_error
00000000004233b0 00000000000001c8 t _mesa_ClearBufferiv
0000000000423580 0000000000000064 T _mesa_ClearNamedFramebufferiv
00000000004235f0 00000000000000ec T _mesa_ClearBufferuiv_no_error
00000000004236e0 0000000000000148 t _mesa_ClearBufferuiv
0000000000423830 0000000000000064 T _mesa_ClearNamedFramebufferuiv
00000000004238a0 000000000000013c T _mesa_ClearBufferfv_no_error
00000000004239e0 00000000000001a0 t _mesa_ClearBufferfv
0000000000423b80 0000000000000064 T _mesa_ClearNamedFramebufferfv
0000000000423bf0 00000000000000e4 T _mesa_ClearBufferfi_no_error
0000000000423ce0 000000000000018c t _mesa_ClearBufferfi
0000000000423e70 0000000000000074 T _mesa_ClearNamedFramebufferfi
0000000000423ef0 000000000000006c t _mesa_update_clip_plane
0000000000423f60 00000000000001fc t _mesa_ClipPlane
0000000000424160 0000000000000090 t _mesa_GetClipPlane
00000000004241f0 000000000000002c T _mesa_ColorTable
0000000000424220 000000000000002c T _mesa_ColorSubTable
0000000000424250 000000000000002c T _mesa_CopyColorTable
0000000000424280 000000000000002c T _mesa_CopyColorSubTable
00000000004242b0 000000000000002c T _mesa_GetnColorTableARB
00000000004242e0 000000000000002c T _mesa_GetColorTable
0000000000424310 000000000000002c T _mesa_ColorTableParameterfv
0000000000424340 000000000000002c T _mesa_ColorTableParameteriv
0000000000424370 000000000000002c T _mesa_GetColorTableParameterfv
00000000004243a0 000000000000002c T _mesa_GetColorTableParameteriv
00000000004243d0 00000000000000a8 t check_valid_to_compute
0000000000424480 0000000000000088 T _mesa_DispatchCompute_no_error
0000000000424510 000000000000014c T _mesa_DispatchCompute
0000000000424660 000000000000007c T _mesa_DispatchComputeIndirect_no_error
00000000004246e0 000000000000019c T _mesa_DispatchComputeIndirect
0000000000424880 0000000000000094 T _mesa_DispatchComputeGroupSizeARB_no_error
0000000000424920 0000000000000204 T _mesa_DispatchComputeGroupSizeARB
0000000000424b30 00000000000000a0 T _mesa_BeginConditionalRender_no_error
0000000000424bd0 00000000000001a4 T _mesa_BeginConditionalRender
0000000000424d80 0000000000000068 T _mesa_EndConditionalRender_no_error
0000000000424df0 00000000000000a8 T _mesa_EndConditionalRender
0000000000424ea0 0000000000000174 t _mesa_check_conditional_render
0000000000425020 0000000000000124 T _mesa_ConservativeRasterParameteriNV_no_error
0000000000425150 00000000000001ec T _mesa_ConservativeRasterParameteriNV
0000000000425340 0000000000000120 T _mesa_ConservativeRasterParameterfNV_no_error
0000000000425460 00000000000001e0 T _mesa_ConservativeRasterParameterfNV
0000000000425640 0000000000000018 t _mesa_init_conservative_raster
0000000000425660 000000000000002c T _mesa_ConvolutionFilter1D
0000000000425690 000000000000002c T _mesa_ConvolutionFilter2D
00000000004256c0 000000000000002c T _mesa_ConvolutionParameterf
00000000004256f0 000000000000002c T _mesa_ConvolutionParameterfv
0000000000425720 000000000000002c T _mesa_ConvolutionParameteri
0000000000425750 000000000000002c T _mesa_ConvolutionParameteriv
0000000000425780 000000000000002c T _mesa_CopyConvolutionFilter1D
00000000004257b0 000000000000002c T _mesa_CopyConvolutionFilter2D
00000000004257e0 000000000000002c T _mesa_GetnConvolutionFilterARB
0000000000425810 000000000000002c T _mesa_GetConvolutionFilter
0000000000425840 000000000000002c T _mesa_GetConvolutionParameterfv
0000000000425870 000000000000002c T _mesa_GetConvolutionParameteriv
00000000004258a0 000000000000002c T _mesa_GetnSeparableFilterARB
00000000004258d0 000000000000002c T _mesa_GetSeparableFilter
0000000000425900 000000000000002c T _mesa_SeparableFilter2D
0000000000425930 0000000000000160 t copy_image_subdata
0000000000425a90 00000000000001bc t check_region_bounds
0000000000425c50 0000000000000398 t prepare_target_err
0000000000425ff0 00000000000000a4 t prepare_target
00000000004260a0 0000000000000224 t compressed_format_compatible.part.0
00000000004262d0 0000000000000110 T _mesa_CopyImageSubData_no_error
00000000004263e0 0000000000000490 T _mesa_CopyImageSubData
0000000000426870 00000000000003a0 T _mesa_CopyImageSubDataNV
0000000000426c10 0000000000000378 t _mesa_validated_multidrawelements
0000000000426f90 00000000000000e8 t _mesa_exec_Rectf
0000000000427080 0000000000000060 t skip_validated_draw
00000000004270e0 0000000000000124 T _mesa_MultiDrawElements
0000000000427210 0000000000000178 T _mesa_MultiDrawElementsBaseVertex
0000000000427390 0000000000000298 t _mesa_exec_MultiDrawArrays
0000000000427630 00000000000000c0 t _mesa_validated_drawrangeelements
00000000004276f0 0000000000000284 t _mesa_DrawRangeElementsBaseVertex
0000000000427980 0000000000000008 T _mesa_DrawRangeElements
0000000000427990 0000000000000150 T _mesa_DrawElements
0000000000427ae0 0000000000000160 T _mesa_DrawElementsBaseVertex
0000000000427c40 00000000000000c8 t _mesa_draw_arrays.constprop.0
0000000000427d10 00000000000001dc t _mesa_draw_transform_feedback
0000000000427ef0 000000000000011c T _mesa_DrawArrays
0000000000428010 0000000000000114 T _mesa_EvalMesh1
0000000000428130 0000000000000330 T _mesa_EvalMesh2
0000000000428460 0000000000000128 T _mesa_DrawArraysInstancedARB
0000000000428590 0000000000000138 t _mesa_DrawArraysInstancedBaseInstance
00000000004286d0 0000000000000160 T _mesa_DrawElementsInstancedARB
0000000000428830 0000000000000164 T _mesa_DrawElementsInstancedBaseVertex
00000000004289a0 0000000000000164 T _mesa_DrawElementsInstancedBaseInstance
0000000000428b10 0000000000000174 t _mesa_DrawElementsInstancedBaseVertexBaseInstance
0000000000428c90 0000000000000048 T _mesa_DrawTransformFeedback
0000000000428ce0 0000000000000054 T _mesa_DrawTransformFeedbackStream
0000000000428d40 0000000000000054 T _mesa_DrawTransformFeedbackInstanced
0000000000428da0 0000000000000058 T _mesa_DrawTransformFeedbackStreamInstanced
0000000000428e00 00000000000001ac T _mesa_DrawArraysIndirect
0000000000428fb0 0000000000000224 t _mesa_DrawElementsIndirect
00000000004291e0 00000000000001e0 T _mesa_MultiDrawArraysIndirect
00000000004293c0 000000000000024c T _mesa_MultiDrawElementsIndirect
0000000000429610 0000000000000178 T _mesa_MultiDrawArraysIndirectCountARB
0000000000429790 00000000000001b0 T _mesa_MultiDrawElementsIndirectCountARB
0000000000429940 0000000000000124 t _mesa_initialize_exec_dispatch
0000000000429a70 00000000000000b8 T _mesa_MultiModeDrawArraysIBM
0000000000429b30 00000000000000c0 T _mesa_MultiModeDrawElementsIBM
0000000000429bf0 0000000000000360 T _mesa_DrawPixels
0000000000429f50 00000000000002c4 T _mesa_CopyPixels
000000000042a220 00000000000002f4 T _mesa_Bitmap
000000000042a520 00000000000000e0 t draw_texture
000000000042a600 0000000000000104 t _mesa_DrawTexfOES
000000000042a710 0000000000000030 t _mesa_DrawTexfvOES
000000000042a740 0000000000000038 T _mesa_DrawTexiOES
000000000042a780 0000000000000044 T _mesa_DrawTexivOES
000000000042a7d0 0000000000000048 T _mesa_DrawTexsOES
000000000042a820 000000000000004c T _mesa_DrawTexsvOES
000000000042a870 00000000000000b0 t enable_texture
000000000042a920 00000000000002dc t client_state
000000000042ac00 00000000000000a4 t client_state_i.part.0
000000000042acb0 0000000000000060 t _mesa_update_derived_primitive_restart_state
000000000042ad10 0000000000000030 t _mesa_EnableClientState
000000000042ad40 00000000000000d0 T _mesa_EnableVertexArrayEXT
000000000042ae10 000000000000007c T _mesa_EnableClientStateiEXT
000000000042ae90 0000000000000030 t _mesa_DisableClientState
000000000042aec0 00000000000000d0 T _mesa_DisableVertexArrayEXT
000000000042af90 000000000000007c T _mesa_DisableClientStateiEXT
000000000042b010 00000000000000d8 t _mesa_set_multisample
000000000042b0f0 00000000000000a4 t _mesa_set_framebuffer_srgb
000000000042b1a0 00000000000026e8 t _mesa_set_enable
000000000042d890 0000000000000028 T _mesa_Enable
000000000042d8c0 0000000000000028 t _mesa_Disable
000000000042d8f0 00000000000003a8 t _mesa_set_enablei
000000000042dca0 0000000000000030 T _mesa_Disablei
000000000042dcd0 0000000000000030 T _mesa_Enablei
000000000042dd00 0000000000001340 t _mesa_IsEnabled
000000000042f040 00000000000001ec T _mesa_IsEnabledi
000000000042f230 0000000000000008 t _mesa_delete_memory_object
000000000042f240 0000000000000080 t lookup_memory_object_err
000000000042f2c0 0000000000000008 t _mesa_initialize_memory_object
000000000042f2d0 0000000000000134 T _mesa_DeleteMemoryObjectsEXT
000000000042f410 0000000000000078 T _mesa_IsMemoryObjectEXT
000000000042f490 0000000000000164 T _mesa_CreateMemoryObjectsEXT
000000000042f600 00000000000000fc T _mesa_MemoryObjectParameterivEXT
000000000042f700 00000000000000cc T _mesa_GetMemoryObjectParameterivEXT
000000000042f7d0 0000000000000104 T _mesa_TexStorageMem2DEXT
000000000042f8e0 0000000000000114 T _mesa_TexStorageMem2DMultisampleEXT
000000000042fa00 0000000000000104 T _mesa_TexStorageMem3DEXT
000000000042fb10 0000000000000118 T _mesa_TexStorageMem3DMultisampleEXT
000000000042fc30 0000000000000100 T _mesa_TextureStorageMem2DEXT
000000000042fd30 000000000000010c T _mesa_TextureStorageMem2DMultisampleEXT
000000000042fe40 0000000000000108 T _mesa_TextureStorageMem3DEXT
000000000042ff50 0000000000000118 T _mesa_TextureStorageMem3DMultisampleEXT
0000000000430070 00000000000000fc T _mesa_TexStorageMem1DEXT
0000000000430170 00000000000000f8 T _mesa_TextureStorageMem1DEXT
0000000000430270 000000000000001c t _mesa_delete_semaphore_object
0000000000430290 0000000000000008 t _mesa_initialize_semaphore_object
00000000004302a0 0000000000000114 T _mesa_GenSemaphoresEXT
00000000004303c0 0000000000000144 T _mesa_DeleteSemaphoresEXT
0000000000430510 0000000000000078 T _mesa_IsSemaphoreEXT
0000000000430590 000000000000005c T _mesa_SemaphoreParameterui64vEXT
00000000004305f0 000000000000005c T _mesa_GetSemaphoreParameterui64vEXT
0000000000430650 00000000000001fc T _mesa_WaitSemaphoreEXT
0000000000430850 00000000000001fc T _mesa_SignalSemaphoreEXT
0000000000430a50 00000000000000e8 T _mesa_ImportMemoryFdEXT
0000000000430b40 0000000000000158 T _mesa_ImportSemaphoreFdEXT
0000000000430ca0 00000000000000a4 t get_current_attrib(texenv_fragment_program*, unsigned int)
0000000000430d50 0000000000000068 t get_gl_Color(texenv_fragment_program*)
0000000000430dc0 0000000000000524 t load_texture(texenv_fragment_program*, unsigned int) [clone .part.0]
00000000004312f0 0000000000000040 t load_texenv_source(texenv_fragment_program*, unsigned int, unsigned int)
0000000000431330 0000000000000654 t emit_combine(texenv_fragment_program*, unsigned int, unsigned int, unsigned int, gl_tex_env_argument const*)
0000000000431990 0000000000001270 t _mesa_get_fixed_func_fragment_program
0000000000432c00 0000000000000084 t get_temp
0000000000432c90 0000000000000210 t emit_op3fn.constprop.0
0000000000432ea0 0000000000000090 t make_temp
0000000000432f30 00000000000000b8 t emit_matrix_transform_vec4
0000000000432ff0 0000000000000074 t get_identity_param
0000000000433070 000000000000007c t register_input
00000000004330f0 0000000000000080 t get_material
0000000000433170 0000000000000064 t emit_passthrough
00000000004331e0 0000000000000128 t get_lightprod
0000000000433310 0000000000000150 t get_scenecolor
0000000000433460 00000000000000a8 t emit_degenerate_lit
0000000000433510 00000000000000ec t emit_normalize_vec3
0000000000433600 0000000000000264 t get_transformed_normal
0000000000433870 0000000000000194 t emit_transpose_matrix_transform_vec4
0000000000433a10 0000000000000194 t get_eye_position
0000000000433bb0 0000000000000078 t get_eye_position_normalized
0000000000433c30 0000000000000148 t get_eye_position_z
0000000000433d80 00000000000003ec t calculate_light_attenuation
0000000000434170 0000000000002c1c t _mesa_get_fixed_func_vertex_program
0000000000436d90 0000000000000068 t _set_default_response
0000000000436e00 000000000000024c t _mesa_query_internal_format_default
0000000000437050 0000000000001870 t _mesa_GetInternalformativ
00000000004388c0 0000000000000190 T _mesa_GetInternalformati64v
0000000000438a50 0000000000000100 t convert_ubyte_rgba_to_bgra
0000000000438b50 0000000000006194 t convert_float
000000000043ecf0 0000000000007698 t convert_half_float
0000000000446390 0000000000007d64 t convert_int
000000000044e100 0000000000008ac8 t convert_byte
0000000000456bd0 0000000000008928 t convert_ushort
000000000045f500 0000000000008a2c t convert_ubyte
0000000000467f30 0000000000007590 t convert_uint
000000000046f4c0 0000000000000090 t _mesa_compute_rgba2base2rgba_component_mapping
000000000046f550 0000000000008c84 t _mesa_swizzle_and_convert
00000000004781e0 0000000000000e98 t _mesa_format_convert
0000000000479080 000000000000007c t get_value_size
0000000000479100 0000000000001330 t find_value_indexed
000000000047a430 0000000000001f44 t find_value
000000000047c380 00000000000002f4 T _mesa_GetBooleanv
000000000047c680 00000000000002dc t _mesa_GetFloatv
000000000047c960 0000000000000344 t _mesa_GetIntegerv
000000000047ccb0 0000000000000368 T _mesa_GetInteger64v
000000000047d020 00000000000002c8 T _mesa_GetDoublev
000000000047d2f0 0000000000000198 T _mesa_GetUnsignedBytevEXT
000000000047d490 00000000000000e4 T _mesa_GetBooleani_v
000000000047d580 0000000000000188 T _mesa_GetIntegeri_v
000000000047d710 00000000000000dc T _mesa_GetInteger64i_v
000000000047d7f0 00000000000001f0 T _mesa_GetFloati_v
000000000047d9e0 0000000000000200 T _mesa_GetDoublei_v
000000000047dbe0 0000000000000148 T _mesa_GetUnsignedBytei_vEXT
000000000047dd30 00000000000004c0 T _mesa_GetFixedv
000000000047e1f0 0000000000000148 t _mesa_is_valid_generate_texture_mipmap_target
000000000047e340 00000000000000f0 t _mesa_is_valid_generate_texture_mipmap_internalformat
000000000047e430 0000000000000220 t validate_params_and_generate_mipmap
000000000047e650 000000000000012c T _mesa_GenerateMipmap_no_error
000000000047e780 0000000000000234 T _mesa_GenerateMipmap
000000000047e9c0 000000000000012c T _mesa_GenerateTextureMipmap_no_error
000000000047eaf0 0000000000000040 T _mesa_GenerateTextureMipmap
000000000047eb30 0000000000000048 T _mesa_GenerateTextureMipmapEXT
000000000047eb80 000000000000004c T _mesa_GenerateMultiTexMipmapEXT
000000000047ebd0 000000000000005c t _mesa_spirv_module_reference
000000000047ec30 0000000000000094 t _mesa_shader_spirv_data_reference
000000000047ecd0 0000000000000100 t _mesa_spirv_shader_binary
000000000047edd0 000000000000022c t _mesa_spirv_link_shaders
000000000047f000 0000000000000040 T _mesa_SpecializeShaderARB
000000000047f040 000000000000002c T _mesa_GetnMinmaxARB
000000000047f070 000000000000002c T _mesa_GetMinmax
000000000047f0a0 000000000000002c T _mesa_GetnHistogramARB
000000000047f0d0 000000000000002c T _mesa_GetHistogram
000000000047f100 000000000000002c T _mesa_GetHistogramParameterfv
000000000047f130 000000000000002c T _mesa_GetHistogramParameteriv
000000000047f160 000000000000002c T _mesa_GetMinmaxParameterfv
000000000047f190 000000000000002c T _mesa_GetMinmaxParameteriv
000000000047f1c0 000000000000002c T _mesa_Histogram
000000000047f1f0 000000000000002c T _mesa_Minmax
000000000047f220 000000000000002c T _mesa_ResetHistogram
000000000047f250 000000000000002c T _mesa_ResetMinmax
000000000047f280 00000000000001e8 t float3_to_rgb9e5
000000000047f470 0000000000000040 t rgb9e5_to_float3
000000000047f4b0 0000000000000184 t float3_to_r11g11b10f
000000000047f640 000000000000017c t r11g11b10f_to_float3
000000000047f7c0 0000000000001978 t do_row
0000000000481140 00000000000000f4 t make_1d_mipmap
0000000000481240 0000000000000450 t make_2d_mipmap
0000000000481690 0000000000000050 t _mesa_compute_num_levels
00000000004816e0 0000000000003424 t _mesa_generate_mipmap_level
0000000000484b10 00000000000000a0 t _mesa_next_mipmap_level_size
0000000000484bb0 0000000000000208 t _mesa_prepare_mipmap_levels
0000000000484dc0 0000000000000924 t _mesa_generate_mipmap
00000000004856f0 0000000000000254 t get_label_pointer
0000000000485950 000000000000008c t copy_label
00000000004859e0 00000000000000f8 t set_label
0000000000485ae0 000000000000009c T _mesa_ObjectLabel
0000000000485b80 00000000000000b4 T _mesa_GetObjectLabel
0000000000485c40 00000000000000b8 T _mesa_ObjectPtrLabel
0000000000485d00 00000000000000f4 T _mesa_GetObjectPtrLabel
0000000000485e00 0000000000000228 T _mesa_ObjectPurgeableAPPLE
0000000000486030 0000000000000210 T _mesa_ObjectUnpurgeableAPPLE
0000000000486240 0000000000000178 T _mesa_GetObjectParameterivAPPLE
00000000004863c0 00000000000000bc t write_program_payload
0000000000486480 000000000000007c t _mesa_get_program_binary_length
0000000000486500 0000000000000148 t _mesa_get_program_binary
0000000000486650 00000000000001f8 t _mesa_program_binary
0000000000486850 000000000000025c t supported_interface_enum
0000000000486ab0 00000000000004c8 T _mesa_GetProgramInterfaceiv
0000000000486f80 000000000000015c T _mesa_GetProgramResourceIndex
00000000004870e0 0000000000000110 T _mesa_GetProgramResourceName
00000000004871f0 00000000000000e4 T _mesa_GetProgramResourceiv
00000000004872e0 00000000000002a4 T _mesa_GetProgramResourceLocation
0000000000487590 00000000000000cc T _mesa_GetProgramResourceLocationIndex
0000000000487660 0000000000000174 T _mesa_QueryMatrixxOES
00000000004877e0 0000000000000058 t _context_lost_GetQueryObjectuiv
0000000000487840 0000000000000068 t _context_lost_GetSynciv
00000000004878b0 0000000000000038 t context_lost_nop_handler
00000000004878f0 00000000000000fc t _mesa_set_context_lost_dispatch
00000000004879f0 00000000000000dc T _mesa_GetGraphicsResetStatusARB
0000000000487ad0 0000000000000088 T _mesa_new_sampler_object
0000000000487b60 00000000000000e4 t create_samplers.part.0
0000000000487c50 000000000000009c t sampler_parameter_error_check
0000000000487cf0 00000000000000b4 t set_sampler_cube_map_seamless
0000000000487db0 000000000000016c t set_sampler_wrap_r
0000000000487f20 000000000000016c t set_sampler_wrap_t
0000000000488090 000000000000016c t set_sampler_wrap_s
0000000000488200 0000000000000018 t _mesa_lookup_samplerobj
0000000000488220 00000000000000c0 t _mesa_reference_sampler_object_
00000000004882e0 0000000000000190 t delete_samplers
0000000000488470 0000000000000038 T _mesa_GenSamplers_no_error
00000000004884b0 0000000000000060 T _mesa_GenSamplers
0000000000488510 0000000000000038 T _mesa_CreateSamplers_no_error
0000000000488550 0000000000000060 T _mesa_CreateSamplers
00000000004885b0 000000000000002c T _mesa_DeleteSamplers_no_error
00000000004885e0 0000000000000044 T _mesa_DeleteSamplers
0000000000488630 0000000000000070 T _mesa_IsSampler
00000000004886a0 00000000000000b0 t _mesa_bind_sampler
0000000000488750 00000000000000d4 T _mesa_BindSampler_no_error
0000000000488830 00000000000000b0 T _mesa_BindSampler
00000000004888e0 00000000000001c0 T _mesa_BindSamplers_no_error
0000000000488aa0 000000000000024c T _mesa_BindSamplers
0000000000488cf0 0000000000000520 T _mesa_SamplerParameteri
0000000000489210 00000000000004fc T _mesa_SamplerParameterf
0000000000489710 000000000000062c T _mesa_SamplerParameteriv
0000000000489d40 00000000000005b0 T _mesa_SamplerParameterfv
000000000048a2f0 00000000000005bc T _mesa_SamplerParameterIiv
000000000048a8b0 00000000000005bc T _mesa_SamplerParameterIuiv
000000000048ae70 000000000000027c T _mesa_GetSamplerParameteriv
000000000048b0f0 0000000000000254 T _mesa_GetSamplerParameterfv
000000000048b350 0000000000000240 T _mesa_GetSamplerParameterIiv
000000000048b590 0000000000000240 T _mesa_GetSamplerParameterIuiv
000000000048b7d0 0000000000000010 t _mesa_init_sampler_object_functions
000000000048b7e0 0000000000000150 t unpack_quint_block(int, unsigned int, unsigned char*)
000000000048b930 0000000000000074 t Block::decode_void_extent(InputBitVector)
000000000048b9b0 0000000000000178 t Block::decode_block_mode(InputBitVector)
000000000048bb30 0000000000000798 t Block::decode_cem(InputBitVector)
000000000048c2d0 00000000000005a4 t Block::unpack_colour_endpoints(InputBitVector)
000000000048c880 000000000000059c t Block::decode_colour_endpoints()
000000000048ce20 0000000000000690 t Block::unpack_weights(InputBitVector)
000000000048d4b0 00000000000001f0 t Block::unquantise_weights()
000000000048d6a0 0000000000000294 t Block::compute_infill_weights(int, int, int)
000000000048d940 00000000000002c8 t Block::unquantise_colour_endpoints()
000000000048dc10 00000000000006c0 t Block::write_decoded(Decoder const&, unsigned short*)
000000000048e2d0 0000000000000270 t Block::calculate_from_weights()
000000000048e540 0000000000000104 t Block::calculate_colour_endpoints_size()
000000000048e650 00000000000002c0 t Block::decode(Decoder const&, InputBitVector)
000000000048e910 00000000000000d4 t Decoder::decode(unsigned char const*, unsigned short*) const
000000000048e9f0 00000000000001d0 t _mesa_unpack_astc_2d_ldr
000000000048ebc0 0000000000000088 t _mesa_cpal_compressed_size
000000000048ec50 0000000000000390 t _mesa_cpal_compressed_teximage2d
000000000048efe0 00000000000001c8 t get_texenvi
000000000048f1b0 00000000000001cc t _mesa_gettexenviv_indexed
000000000048f380 0000000000000c1c t _mesa_texenvfv_indexed
000000000048ffa0 0000000000000230 t _mesa_gettexenvfv_indexed
00000000004901d0 0000000000000038 t _mesa_TexEnvfv
0000000000490210 0000000000000044 t _mesa_TexEnvf
0000000000490260 000000000000004c t _mesa_TexEnvi
00000000004902b0 00000000000000dc T _mesa_TexEnviv
0000000000490390 000000000000004c T _mesa_MultiTexEnvfEXT
00000000004903e0 0000000000000040 T _mesa_MultiTexEnvfvEXT
0000000000490420 0000000000000050 T _mesa_MultiTexEnviEXT
0000000000490470 00000000000000f4 T _mesa_MultiTexEnvivEXT
0000000000490570 000000000000003c t _mesa_GetTexEnvfv
00000000004905b0 000000000000000c T _mesa_GetMultiTexEnvfvEXT
00000000004905c0 000000000000003c T _mesa_GetTexEnviv
0000000000490600 000000000000000c T _mesa_GetMultiTexEnvivEXT
0000000000490610 0000000000000418 t texgenfv
0000000000490a30 0000000000000198 t gettexgendv
0000000000490bd0 00000000000001bc t gettexgenfv
0000000000490d90 000000000000019c t gettexgeniv
0000000000490f30 0000000000000044 t _mesa_TexGenfv
0000000000490f80 0000000000000014 T _mesa_MultiTexGenfvEXT
0000000000490fa0 00000000000000a4 T _mesa_TexGeniv
0000000000491050 0000000000000084 T _mesa_MultiTexGenivEXT
00000000004910e0 0000000000000054 T _mesa_TexGend
0000000000491140 0000000000000038 T _mesa_MultiTexGendEXT
0000000000491180 0000000000000104 t _es_TexGenf
0000000000491290 00000000000000a4 T _mesa_TexGendv
0000000000491340 0000000000000084 T _mesa_MultiTexGendvEXT
00000000004913d0 0000000000000050 T _mesa_TexGenf
0000000000491420 0000000000000034 T _mesa_MultiTexGenfEXT
0000000000491460 0000000000000058 t _mesa_TexGeni
00000000004914c0 0000000000000038 T _mesa_MultiTexGeniEXT
0000000000491500 0000000000000044 T _mesa_GetTexGendv
0000000000491550 0000000000000014 T _mesa_GetMultiTexGendvEXT
0000000000491570 0000000000000044 T _mesa_GetTexGenfv
00000000004915c0 0000000000000014 T _mesa_GetMultiTexGenfvEXT
00000000004915e0 0000000000000044 t _mesa_GetTexGeniv
0000000000491630 0000000000000014 T _mesa_GetMultiTexGenivEXT
0000000000491650 00000000000000c8 t legal_getteximage_target
0000000000491720 0000000000000120 t pbo_error_check
0000000000491840 00000000000001b8 t teximage_error_check
0000000000491a00 0000000000000478 t dimensions_error_check
0000000000491e80 0000000000000128 t common_error_check.part.0
0000000000491fb0 000000000000025c t getcompressedteximage_error_check.part.0
0000000000492210 00000000000003e0 t get_compressed_texture_image.constprop.0
00000000004925f0 0000000000000258 t get_texture_image.constprop.0
0000000000492850 0000000000000154 t getteximage_error_check
00000000004929b0 000000000000013c t _get_texture_image
0000000000492af0 0000000000000104 t _mesa_base_pack_format
0000000000492c00 00000000000010b8 t _mesa_GetTexSubImage_sw
0000000000493cc0 0000000000000110 T _mesa_GetnTexImageARB
0000000000493dd0 000000000000010c T _mesa_GetTexImage
0000000000493ee0 00000000000000f0 T _mesa_GetTextureImage
0000000000493fd0 00000000000000f8 T _mesa_GetTextureImageEXT
00000000004940d0 00000000000001d4 T _mesa_GetMultiTexImageEXT
00000000004942b0 0000000000000238 T _mesa_GetTextureSubImage
00000000004944f0 000000000000019c T _mesa_GetnCompressedTexImageARB
0000000000494690 000000000000019c T _mesa_GetCompressedTexImage
0000000000494830 0000000000000178 T _mesa_GetCompressedTextureImageEXT
00000000004949b0 0000000000000178 T _mesa_GetCompressedMultiTexImageEXT
0000000000494b30 000000000000018c T _mesa_GetCompressedTextureImage
0000000000494cc0 0000000000000144 T _mesa_GetCompressedTextureSubImage
0000000000494e10 00000000000000a0 t is_texparameteri_target_valid
0000000000494eb0 0000000000000198 t validate_texture_wrap_mode
0000000000495050 0000000000000834 t get_tex_level_parameteriv
0000000000495890 0000000000000858 t get_tex_parameteriv
00000000004960f0 00000000000009e8 t get_tex_parameterfv
0000000000496ae0 000000000000053c t set_tex_parameterf
0000000000497020 0000000000000d4c t set_tex_parameteri
0000000000497d70 0000000000000014 t _mesa_target_allows_setting_sampler_parameters
0000000000497d90 0000000000000228 t _mesa_texture_parameterf
0000000000497fc0 00000000000001f8 t _mesa_texture_parameterfv
00000000004981c0 0000000000000154 t _mesa_texture_parameteri
0000000000498320 0000000000000198 t _mesa_texture_parameteriv
00000000004984c0 00000000000000d8 t _mesa_texture_parameterIiv
00000000004985a0 00000000000000d8 t _mesa_texture_parameterIuiv
0000000000498680 0000000000000084 t _mesa_TexParameterf
0000000000498710 0000000000000084 t _mesa_TexParameterfv
00000000004987a0 0000000000000084 t _mesa_TexParameteri
0000000000498830 0000000000000084 T _mesa_TexParameteriv
00000000004988c0 0000000000000084 T _mesa_TexParameterIiv
0000000000498950 0000000000000084 T _mesa_TexParameterIuiv
00000000004989e0 00000000000000b4 T _mesa_TextureParameterfvEXT
0000000000498aa0 00000000000000b4 T _mesa_TextureParameterfv
0000000000498b60 00000000000000b4 T _mesa_MultiTexParameterfvEXT
0000000000498c20 00000000000000c4 T _mesa_TextureParameterfEXT
0000000000498cf0 00000000000000c4 T _mesa_MultiTexParameterfEXT
0000000000498dc0 00000000000000c4 T _mesa_TextureParameterf
0000000000498e90 00000000000000b4 T _mesa_TextureParameteriEXT
0000000000498f50 00000000000000b4 T _mesa_MultiTexParameteriEXT
0000000000499010 00000000000000b4 T _mesa_TextureParameteri
00000000004990d0 00000000000000b4 T _mesa_TextureParameterivEXT
0000000000499190 00000000000000b4 T _mesa_MultiTexParameterivEXT
0000000000499250 00000000000000b4 T _mesa_TextureParameteriv
0000000000499310 00000000000000b4 T _mesa_TextureParameterIiv
00000000004993d0 0000000000000080 T _mesa_TextureParameterIivEXT
0000000000499450 0000000000000080 T _mesa_MultiTexParameterIivEXT
00000000004994d0 00000000000000b4 T _mesa_TextureParameterIuiv
0000000000499590 0000000000000080 T _mesa_TextureParameterIuivEXT
0000000000499610 0000000000000080 T _mesa_MultiTexParameterIuivEXT
0000000000499690 000000000000025c t _mesa_legal_get_tex_level_parameter_target
00000000004998f0 00000000000000d4 T _mesa_GetTexLevelParameterfv
00000000004999d0 00000000000000d8 T _mesa_GetTexLevelParameteriv
0000000000499ab0 00000000000000d8 T _mesa_GetTextureLevelParameterfv
0000000000499b90 00000000000000e0 T _mesa_GetTextureLevelParameterfvEXT
0000000000499c70 00000000000000e0 T _mesa_GetMultiTexLevelParameterfvEXT
0000000000499d50 00000000000000d8 T _mesa_GetTextureLevelParameteriv
0000000000499e30 00000000000000e0 T _mesa_GetTextureLevelParameterivEXT
0000000000499f10 00000000000000e0 T _mesa_GetMultiTexLevelParameterivEXT
0000000000499ff0 0000000000000084 t _mesa_GetTexParameterfv
000000000049a080 0000000000000084 T _mesa_GetTexParameteriv
000000000049a110 00000000000000b0 T _mesa_GetTexParameterIiv
000000000049a1c0 00000000000000b0 T _mesa_GetTexParameterIuiv
000000000049a270 00000000000000b4 T _mesa_GetTextureParameterfvEXT
000000000049a330 00000000000000b4 T _mesa_GetMultiTexParameterfvEXT
000000000049a3f0 00000000000000b4 T _mesa_GetTextureParameterfv
000000000049a4b0 00000000000000b4 T _mesa_GetTextureParameterivEXT
000000000049a570 00000000000000b4 T _mesa_GetMultiTexParameterivEXT
000000000049a630 00000000000000b4 T _mesa_GetTextureParameteriv
000000000049a6f0 00000000000000e0 T _mesa_GetTextureParameterIiv
000000000049a7d0 00000000000000ac T _mesa_GetTextureParameterIivEXT
000000000049a880 00000000000000ac T _mesa_GetMultiTexParameterIivEXT
000000000049a930 00000000000000e0 T _mesa_GetTextureParameterIuiv
000000000049aa10 00000000000000ac T _mesa_GetTextureParameterIuivEXT
000000000049aac0 00000000000000ac T _mesa_GetMultiTexParameterIuivEXT
000000000049ab70 0000000000000228 t register_surface.part.0
000000000049ada0 00000000000000b4 T _mesa_VDPAUInitNV
000000000049ae60 0000000000000078 T _mesa_VDPAUFiniNV
000000000049aee0 0000000000000094 T _mesa_VDPAURegisterVideoSurfaceNV
000000000049af80 0000000000000094 T _mesa_VDPAURegisterOutputSurfaceNV
000000000049b020 000000000000006c T _mesa_VDPAUIsSurfaceNV
000000000049b090 00000000000000fc T _mesa_VDPAUUnregisterSurfaceNV
000000000049b190 0000000000000104 T _mesa_VDPAUGetSurfaceivNV
000000000049b2a0 00000000000000c4 T _mesa_VDPAUSurfaceAccessNV
000000000049b370 000000000000022c T _mesa_VDPAUMapSurfacesNV
000000000049b5a0 00000000000001e8 t _mesa_VDPAUUnmapSurfacesNV
000000000049b790 0000000000000070 t unregister_surface
000000000049b800 000000000000087c t install_vtxfmt
000000000049c080 0000000000000048 t _mesa_install_exec_vtxfmt
000000000049c0d0 0000000000000020 t _mesa_install_save_vtxfmt
000000000049c0f0 0000000000000044 t _mesa_initialize_vbo_vtxfmt
000000000049c140 0000000000000008 T _mesa_AlphaFuncx
000000000049c150 000000000000002c T _mesa_ClearColorx
000000000049c180 0000000000000008 T _mesa_ClearDepthx
000000000049c190 0000000000000040 T _mesa_ClipPlanef
000000000049c1d0 0000000000000048 T _mesa_ClipPlanex
000000000049c220 000000000000002c T _mesa_Color4x
000000000049c250 000000000000001c T _mesa_DepthRangex
000000000049c270 0000000000000034 T _mesa_DrawTexxOES
000000000049c2b0 0000000000000048 T _mesa_DrawTexxvOES
000000000049c300 0000000000000020 T _mesa_Fogx
000000000049c320 00000000000000c4 T _mesa_Fogxv
000000000049c3f0 000000000000001c T _mesa_Frustumf
000000000049c410 000000000000003c T _mesa_Frustumx
000000000049c450 0000000000000048 T _mesa_GetClipPlanef
000000000049c4a0 000000000000004c T _mesa_GetClipPlanex
000000000049c4f0 00000000000000d4 T _mesa_GetLightxv
000000000049c5d0 00000000000000fc T _mesa_GetMaterialxv
000000000049c6d0 0000000000000220 T _mesa_GetTexEnvxv
000000000049c8f0 0000000000000004 T _mesa_GetTexGenxvOES
000000000049c900 0000000000000114 T _mesa_GetTexParameterxv
000000000049ca20 0000000000000008 T _mesa_LightModelx
000000000049ca30 00000000000000ac T _mesa_LightModelxv
000000000049cae0 0000000000000008 T _mesa_Lightx
000000000049caf0 00000000000000e8 T _mesa_Lightxv
000000000049cbe0 0000000000000008 T _mesa_LineWidthx
000000000049cbf0 000000000000004c T _mesa_LoadMatrixx
000000000049cc40 000000000000007c T _mesa_Materialx
000000000049ccc0 0000000000000110 T _mesa_Materialxv
000000000049cdd0 000000000000004c T _mesa_MultMatrixx
000000000049ce20 000000000000002c T _mesa_MultiTexCoord4x
000000000049ce50 0000000000000024 T _mesa_Normal3x
000000000049ce80 000000000000001c T _mesa_Orthof
000000000049cea0 000000000000003c T _mesa_Orthox
000000000049cee0 0000000000000008 T _mesa_PointParameterx
000000000049cef0 00000000000000a8 T _mesa_PointParameterxv
000000000049cfa0 0000000000000008 T _mesa_PointSizex
000000000049cfb0 000000000000001c T _mesa_PolygonOffsetx
000000000049cfd0 000000000000002c T _mesa_Rotatex
000000000049d000 0000000000000010 T _mesa_SampleCoveragex
000000000049d010 0000000000000024 T _mesa_Scalex
000000000049d040 0000000000000140 T _mesa_TexEnvx
000000000049d180 00000000000001a0 T _mesa_TexEnvxv
000000000049d320 0000000000000008 T _mesa_TexGenxOES
000000000049d330 000000000000000c T _mesa_TexGenxvOES
000000000049d340 0000000000000024 T _mesa_TexParameterx
000000000049d370 0000000000000130 T _mesa_TexParameterxv
000000000049d4a0 0000000000000024 T _mesa_Translatex
000000000049d4d0 00000000000000f8 t _math_horner_bezier_curve
000000000049d5d0 00000000000001cc t _math_horner_bezier_surf
000000000049d7a0 0000000000000d44 t _math_de_casteljau_surf
000000000049e4f0 000000000000002c t _math_init_eval
000000000049e520 000000000000002c t vbo_minmax_cache_key_equal
000000000049e550 0000000000000008 t vbo_minmax_cache_delete_entry
000000000049e560 0000000000000008 t vbo_minmax_cache_hash
000000000049e570 0000000000000030 t vbo_delete_minmax_cache
000000000049e5a0 00000000000001c0 t vbo_get_minmax_index_mapped
000000000049e760 00000000000004b0 t vbo_get_minmax_indices
000000000049ec10 000000000000006c t util_format_linear_float_to_srgb_8unorm
000000000049ec80 0000000000000080 t pack_ubyte_rgb_float16
000000000049ed00 000000000000003c t _mesa_float_to_unorm
000000000049ed40 0000000000000044 t _mesa_float_to_snorm
000000000049ed90 0000000000000070 t _mesa_unorm_to_unorm.constprop.0
000000000049ee00 0000000000000184 t float3_to_r11g11b10f
000000000049ef90 00000000000000d0 t pack_float_rgb_snorm16
000000000049f060 0000000000000034 t pack_ubyte_rgb_snorm16
000000000049f0a0 00000000000000e0 t pack_float_a1r5g5b5_unorm
000000000049f180 00000000000000e8 t pack_float_r4g4b4a4_unorm
000000000049f270 00000000000000e8 t pack_float_a4b4g4r4_unorm
000000000049f360 00000000000000e8 t pack_float_b4g4r4a4_unorm
000000000049f450 00000000000000f4 t pack_float_r8g8b8a8_unorm
000000000049f550 00000000000000f4 t pack_float_a8r8g8b8_unorm
000000000049f650 00000000000000f4 t pack_float_b8g8r8a8_unorm
000000000049f750 00000000000000f4 t pack_float_a8b8g8r8_unorm
000000000049f850 0000000000000060 t pack_ubyte_b2g3r3_unorm
000000000049f8b0 0000000000000064 t pack_ubyte_r8g8b8x8_snorm
000000000049f920 0000000000000064 t pack_ubyte_x8b8g8r8_snorm
000000000049f990 0000000000000064 t pack_ubyte_b5g5r5x1_unorm
000000000049fa00 0000000000000068 t pack_ubyte_x1b5g5r5_unorm
000000000049fa70 0000000000000020 t pack_ubyte_r8g8b8x8_unorm
000000000049fa90 0000000000000020 t pack_ubyte_b8g8r8x8_unorm
000000000049fab0 0000000000000064 t pack_ubyte_b4g4r4x4_unorm
000000000049fb20 0000000000000020 t pack_ubyte_x8b8g8r8_unorm
000000000049fb40 0000000000000020 t pack_ubyte_x8r8g8b8_unorm
000000000049fb60 0000000000000038 t pack_ubyte_b10g10r10x2_unorm
000000000049fba0 0000000000000038 t pack_ubyte_r10g10b10x2_unorm
000000000049fbe0 0000000000000034 t pack_ubyte_rgba_unorm16
000000000049fc20 0000000000000044 t pack_ubyte_rgba_snorm16
000000000049fc70 0000000000000080 t pack_ubyte_r4g4b4a4_unorm
000000000049fcf0 0000000000000080 t pack_ubyte_a4b4g4r4_unorm
000000000049fd70 0000000000000078 t pack_ubyte_b5g5r5a1_unorm
000000000049fdf0 0000000000000078 t pack_ubyte_a1b5g5r5_unorm
000000000049fe70 0000000000000078 t pack_ubyte_a1r5g5b5_unorm
000000000049fef0 0000000000000080 t pack_ubyte_b4g4r4a4_unorm
000000000049ff70 0000000000000080 t pack_ubyte_a4r4g4b4_unorm
000000000049fff0 0000000000000080 t pack_ubyte_a8b8g8r8_snorm
00000000004a0070 0000000000000078 t pack_ubyte_r5g5b5a1_unorm
00000000004a00f0 0000000000000080 t pack_ubyte_r8g8b8a8_snorm
00000000004a0170 000000000000000c t pack_ubyte_r8g8b8a8_unorm
00000000004a0180 0000000000000028 t pack_ubyte_a8r8g8b8_unorm
00000000004a01b0 0000000000000010 t pack_ubyte_a8b8g8r8_unorm
00000000004a01c0 0000000000000028 t pack_ubyte_b8g8r8a8_unorm
00000000004a01f0 0000000000000058 t pack_ubyte_a2r10g10b10_unorm
00000000004a0250 0000000000000058 t pack_ubyte_b10g10r10a2_unorm
00000000004a02b0 0000000000000058 t pack_ubyte_a2b10g10r10_unorm
00000000004a0310 0000000000000058 t pack_ubyte_r10g10b10a2_unorm
00000000004a0370 00000000000000fc t pack_float_a2b10g10r10_unorm
00000000004a0470 00000000000000fc t pack_float_a2r10g10b10_unorm
00000000004a0570 00000000000000fc t pack_float_r10g10b10a2_unorm
00000000004a0670 00000000000000fc t pack_float_b10g10r10a2_unorm
00000000004a0770 0000000000002b8c t _mesa_pack_ubyte_rgba_row
00000000004a3300 00000000000014cc t _mesa_pack_uint_rgba_row
00000000004a47d0 0000000000003048 t _mesa_pack_float_rgba_row
00000000004a7820 000000000000009c t _mesa_pack_ubyte_stencil_row
00000000004a78c0 0000000000000040 t transform_decl
00000000004a7900 00000000000007dc t transform_instr
00000000004a80e0 0000000000001994 t st_translate_atifs_program
00000000004a9a80 0000000000000210 t st_init_atifs_prog
00000000004a9c90 00000000000000a0 t st_fixup_atifs
00000000004a9d30 0000000000000200 t check_program_state
00000000004a9f30 0000000000000004 t st_init_atoms
00000000004a9f40 0000000000000004 t st_destroy_atoms
00000000004a9f50 0000000000000278 t st_validate_state
00000000004aa1d0 00000000000000cc T st_update_clip
00000000004aa2a0 00000000000000e4 t st_bind_ubos
00000000004aa390 0000000000000214 t st_upload_constants
00000000004aa5b0 0000000000000008 T st_update_vs_constants
00000000004aa5c0 0000000000000008 T st_update_fs_constants
00000000004aa5d0 0000000000000010 T st_update_gs_constants
00000000004aa5e0 0000000000000010 T st_update_tcs_constants
00000000004aa5f0 0000000000000010 T st_update_tes_constants
00000000004aa600 0000000000000010 T st_update_cs_constants
00000000004aa610 0000000000000018 T st_bind_vs_ubos
00000000004aa630 0000000000000018 T st_bind_fs_ubos
00000000004aa650 0000000000000018 T st_bind_gs_ubos
00000000004aa670 0000000000000018 T st_bind_tcs_ubos
00000000004aa690 0000000000000018 T st_bind_tes_ubos
00000000004aa6b0 0000000000000018 T st_bind_cs_ubos
00000000004aa6d0 0000000000000008 t st_compare_func_to_pipe
00000000004aa6e0 0000000000000578 T st_update_depth_stencil_alpha
00000000004aac60 0000000000000410 T st_update_framebuffer_state
00000000004ab070 00000000000001bc t st_convert_image
00000000004ab230 0000000000000164 t st_bind_images.part.0
00000000004ab3a0 0000000000000078 t st_convert_image_from_unit
00000000004ab420 000000000000002c T st_bind_vs_images
00000000004ab450 000000000000002c T st_bind_fs_images
00000000004ab480 000000000000002c T st_bind_gs_images
00000000004ab4b0 000000000000002c T st_bind_tcs_images
00000000004ab4e0 000000000000002c T st_bind_tes_images
00000000004ab510 000000000000002c T st_bind_cs_images
00000000004ab540 000000000000023c t update_sample_locations
00000000004ab780 00000000000000ac T st_update_sample_state
00000000004ab830 0000000000000048 T st_update_sample_shading
00000000004ab880 00000000000005e8 T st_update_pixel_transfer
00000000004abe70 0000000000000778 T st_update_rasterizer
00000000004ac5f0 000000000000031c t st_convert_sampler
00000000004ac910 0000000000000084 t st_convert_sampler_from_unit
00000000004ac9a0 0000000000000288 t update_shader_samplers
00000000004acc30 000000000000001c T st_update_vertex_samplers
00000000004acc50 0000000000000024 T st_update_tessctrl_samplers
00000000004acc80 0000000000000024 T st_update_tesseval_samplers
00000000004accb0 0000000000000024 T st_update_geometry_samplers
00000000004acce0 000000000000001c T st_update_fragment_samplers
00000000004acd00 0000000000000024 T st_update_compute_samplers
00000000004acd30 00000000000001b4 T st_update_scissor
00000000004acef0 00000000000001a8 T st_update_window_rectangles
00000000004ad0a0 0000000000000134 t st_update_common_program
00000000004ad1e0 0000000000000470 T st_update_fp
00000000004ad650 00000000000001e0 T st_update_vp
00000000004ad830 0000000000000040 T st_update_gp
00000000004ad870 0000000000000040 T st_update_tcp
00000000004ad8b0 0000000000000040 T st_update_tep
00000000004ad8f0 0000000000000040 T st_update_cp
00000000004ad930 00000000000000f8 T st_update_polygon_stipple
00000000004ada30 0000000000000160 t st_bind_ssbos
00000000004adb90 0000000000000018 T st_bind_vs_ssbos
00000000004adbb0 0000000000000018 T st_bind_fs_ssbos
00000000004adbd0 0000000000000018 T st_bind_gs_ssbos
00000000004adbf0 0000000000000018 T st_bind_tcs_ssbos
00000000004adc10 0000000000000018 T st_bind_tes_ssbos
00000000004adc30 0000000000000018 T st_bind_cs_ssbos
00000000004adc50 0000000000000030 T st_update_tess
00000000004adc80 0000000000000100 t st_update_single_texture
00000000004add80 000000000000047c t update_textures
00000000004ae200 00000000000000a4 t update_textures_local
00000000004ae2b0 0000000000000028 T st_update_vertex_textures
00000000004ae2e0 0000000000000018 T st_update_fragment_textures
00000000004ae300 000000000000001c T st_update_geometry_textures
00000000004ae320 000000000000001c T st_update_tessctrl_textures
00000000004ae340 000000000000001c T st_update_tesseval_textures
00000000004ae360 000000000000001c T st_update_compute_textures
00000000004ae380 0000000000000130 T st_update_viewport
00000000004ae4b0 00000000000003ac t transform_instr
00000000004ae860 00000000000000b8 t st_get_bitmap_shader
00000000004ae920 00000000000008a8 t st_BlitFramebuffer
00000000004af1d0 0000000000000010 t st_init_blit_functions
00000000004af1e0 00000000000000ec t buffer_target_to_bind_flags
00000000004af2d0 0000000000000088 t buffer_usage
00000000004af360 0000000000000040 t st_bufferobj_invalidate
00000000004af3a0 0000000000000064 t st_bufferobj_flush_mapped_range
00000000004af410 000000000000006c t st_bufferobj_unmap
00000000004af480 000000000000006c t st_copy_buffer_subdata
00000000004af4f0 000000000000007c t st_bufferobj_page_commitment
00000000004af570 000000000000004c t st_clear_buffer_subdata
00000000004af5c0 0000000000000050 t st_bufferobj_alloc
00000000004af610 000000000000004c t st_bufferobj_subdata
00000000004af660 000000000000009c t st_bufferobj_get_subdata
00000000004af700 0000000000000080 t st_bufferobj_free
00000000004af780 0000000000000370 t st_bufferobj_data
00000000004afaf0 0000000000000354 t st_bufferobj_data_mem
00000000004afe50 0000000000000074 t st_access_flags_to_transfer_flags
00000000004afed0 00000000000000cc t st_bufferobj_map_range
00000000004affa0 00000000000000c8 t st_init_bufferobject_functions
00000000004b0070 000000000000097c t st_Clear
00000000004b09f0 0000000000000030 t st_init_clear
00000000004b0a20 000000000000007c t st_destroy_clear
00000000004b0aa0 0000000000000010 t st_init_clear_functions
00000000004b0ab0 00000000000001d0 t st_dispatch_compute_common
00000000004b0c80 000000000000000c t st_dispatch_compute_group_size
00000000004b0c90 000000000000001c t st_dispatch_compute_indirect
00000000004b0cb0 0000000000000010 t st_dispatch_compute
00000000004b0cc0 0000000000000028 t st_init_compute_functions
00000000004b0cf0 0000000000000038 t st_EndConditionalRender
00000000004b0d30 0000000000000088 t st_BeginConditionalRender
00000000004b0dc0 000000000000001c t st_init_cond_render_functions
00000000004b0de0 0000000000000304 t get_canonical_format
00000000004b10f0 00000000000000c4 t canonical_format_from_bits
00000000004b11c0 00000000000000a0 t same_size_and_swizzle
00000000004b1260 000000000000018c t swizzled_copy
00000000004b13f0 00000000000004c8 t handle_complex_copy
00000000004b18c0 0000000000000750 t st_CopyImageSubData
00000000004b2010 0000000000000010 t st_init_copy_image_functions
00000000004b2020 00000000000007f4 t transform_instr
00000000004b2820 00000000000000ec t st_get_drawpix_shader
00000000004b2910 0000000000000858 t st_DrawTex
00000000004b3170 0000000000000010 t st_init_drawtex_functions
00000000004b3180 0000000000000074 t st_destroy_drawtex
00000000004b3200 00000000000003a0 t st_get_egl_image
00000000004b35a0 0000000000000368 t st_bind_egl_image
00000000004b3910 00000000000000d4 t st_egl_image_target_tex_storage
00000000004b39f0 00000000000000d4 t st_egl_image_target_texture_2d
00000000004b3ad0 00000000000001d0 t st_egl_image_target_renderbuffer_storage
00000000004b3ca0 0000000000000028 t st_init_eglimage_functions
00000000004b3cd0 0000000000000060 t st_import_memoryobj_fd
00000000004b3d30 0000000000000004 t st_memoryobj_free
00000000004b3d40 0000000000000050 t st_memoryobj_alloc
00000000004b3d90 0000000000000028 t st_init_memoryobject_functions
00000000004b3dc0 00000000000000b4 t st_GetProgrammableSampleCaps
00000000004b3e80 000000000000009c t st_GetSamplePosition
00000000004b3f20 000000000000001c t st_init_msaa_functions
00000000004b3f40 0000000000000090 t st_EndPerfMonitor
00000000004b3fd0 00000000000000dc t st_IsPerfMonitorResultAvailable
00000000004b40b0 00000000000001dc t st_GetPerfMonitorResult
00000000004b4290 00000000000000a0 t reset_perf_monitor
00000000004b4330 0000000000000034 t st_DeletePerfMonitor
00000000004b4370 000000000000000c t st_NewPerfMonitor
00000000004b4380 000000000000033c t st_BeginPerfMonitor
00000000004b46c0 0000000000000080 t st_ResetPerfMonitor
00000000004b4740 0000000000000324 t st_InitPerfMonitorGroups
00000000004b4a70 0000000000000044 t st_have_perfmon
00000000004b4ac0 000000000000007c t st_destroy_perfmon
00000000004b4b40 0000000000000064 t st_init_perfmon_functions
00000000004b4bb0 0000000000000018 t st_InitPerfQueryInfo
00000000004b4bd0 0000000000000018 t st_GetPerfQueryInfo
00000000004b4bf0 0000000000000018 t st_DeletePerfQuery
00000000004b4c10 0000000000000028 t st_BeginPerfQuery
00000000004b4c40 0000000000000018 t st_EndPerfQuery
00000000004b4c60 0000000000000018 t st_WaitPerfQuery
00000000004b4c80 0000000000000028 t st_IsPerfQueryReady
00000000004b4cb0 000000000000001c t st_GetPerfQueryData
00000000004b4cd0 0000000000000018 t st_NewPerfQueryObject
00000000004b4cf0 000000000000006c t st_GetPerfCounterInfo
00000000004b4d60 0000000000000068 t st_have_perfquery
00000000004b4dd0 000000000000007c t st_init_perfquery_functions
00000000004b4e50 0000000000000038 t st_new_ati_fs
00000000004b4e90 0000000000000024 t st_max_shader_compiler_threads
00000000004b4ec0 00000000000000a0 t st_get_shader_program_completion_status
00000000004b4f60 00000000000000d8 t st_program_string_notify
00000000004b5040 0000000000000048 t st_delete_program
00000000004b5090 0000000000000070 t st_new_program
00000000004b5100 0000000000000050 t st_init_program_functions
00000000004b5150 0000000000000030 t st_GetTimestamp
00000000004b5180 00000000000001c0 t st_StoreQueryResult
00000000004b5340 00000000000001d8 t get_query_result
00000000004b5520 0000000000000034 t st_CheckQuery
00000000004b5560 0000000000000054 t st_WaitQuery
00000000004b55c0 00000000000000d0 t st_EndQuery
00000000004b5690 0000000000000044 t st_NewQueryObject
00000000004b56e0 000000000000006c t st_DeleteQuery
00000000004b5750 00000000000003b8 t st_BeginQuery
00000000004b5b10 0000000000000064 t st_init_query_functions
00000000004b5b80 0000000000000214 t blit_to_staging
00000000004b5da0 0000000000000ef0 t st_ReadPixels
00000000004b6c90 0000000000000010 t st_init_readpixels_functions
00000000004b6ca0 0000000000000048 t st_get_string
00000000004b6cf0 0000000000000010 t st_init_string_functions
00000000004b6d00 0000000000000020 t st_import_semaphoreobj_fd
00000000004b6d20 00000000000000d0 t st_server_signal_semaphore
00000000004b6df0 00000000000000c8 t st_server_wait_semaphore
00000000004b6ec0 0000000000000004 t st_semaphoreobj_free
00000000004b6ed0 0000000000000050 t st_semaphoreobj_alloc
00000000004b6f20 0000000000000040 t st_init_semaphoreobject_functions
00000000004b6f60 0000000000000030 t st_fence_sync
00000000004b6f90 00000000000000ac t st_server_wait_sync
00000000004b7040 00000000000000f4 t st_client_wait_sync
00000000004b7140 000000000000000c t st_check_sync
00000000004b7150 0000000000000050 t st_delete_sync_object
00000000004b71a0 0000000000000038 t st_new_sync_object
00000000004b71e0 000000000000004c t st_init_syncobj_functions
00000000004b7230 000000000000001c t st_TextureBarrier
00000000004b7250 000000000000001c t st_FramebufferFetchBarrier
00000000004b7270 00000000000000b4 t st_MemoryBarrier
00000000004b7330 0000000000000028 t st_init_texture_barrier_functions
00000000004b7360 00000000000000e0 t st_viewport
00000000004b7440 0000000000000010 t st_init_viewport_functions
00000000004b7450 0000000000000034 t st_resume_transform_feedback
00000000004b7490 000000000000001c t st_pause_transform_feedback
00000000004b74b0 000000000000003c t st_new_transform_feedback
00000000004b74f0 00000000000000d0 t st_end_transform_feedback
00000000004b75c0 00000000000000c0 t st_delete_transform_feedback
00000000004b7680 0000000000000158 t st_begin_transform_feedback
00000000004b77e0 0000000000000018 t st_transform_feedback_draw_init
00000000004b7800 000000000000004c t st_init_xformfb_functions
00000000004b7850 000000000000032c T st_link_shader
00000000004b7b80 0000000000000004 T glsl_to_tgsi_visitor::visit(ir_function_signature*)
00000000004b7b90 0000000000000158 t shrink_array_declarations(inout_decl*, unsigned int, unsigned long*, unsigned long, unsigned int*)
00000000004b7cf0 0000000000000028 W ir_control_flow_info_visitor::visit_enter(ir_call*)
00000000004b7d20 0000000000000028 W ir_control_flow_info_visitor::visit_enter(ir_return*)
00000000004b7d50 00000000000000c0 t add_buffer_to_load_and_stores(glsl_to_tgsi_instruction*, st_src_reg*, exec_list*, ir_constant*)
00000000004b7e10 0000000000000164 T glsl_to_tgsi_visitor::visit(ir_swizzle*)
00000000004b7f80 000000000000002c W ir_control_flow_info_visitor::visit_enter(ir_function*)
00000000004b7fb0 0000000000000044 T glsl_to_tgsi_visitor::~glsl_to_tgsi_visitor()
00000000004b7fb0 0000000000000044 T glsl_to_tgsi_visitor::~glsl_to_tgsi_visitor()
00000000004b8000 0000000000000010 t var_destroy(hash_entry*)
00000000004b8010 0000000000000098 T glsl_to_tgsi_visitor::visit(ir_function*)
00000000004b80b0 000000000000008c t mark_array_io(inout_decl*, unsigned int, unsigned long*, unsigned long, unsigned int*) [clone .constprop.0]
00000000004b8140 000000000000009c t fail_link(gl_shader_program*, char const*, ...) [clone .constprop.0]
00000000004b81e0 0000000000000050 T glsl_to_tgsi_visitor::~glsl_to_tgsi_visitor()
00000000004b8230 0000000000000098 t type_has_array_or_matrix(glsl_type const*)
00000000004b82d0 00000000000000dc t is_inout_array(unsigned int, ir_variable*, bool*)
00000000004b83b0 0000000000000094 t emit_immediate(st_translate*, gl_constant_value*, unsigned int, int) [clone .isra.0]
00000000004b8450 0000000000000240 t dst_register(st_translate*, gl_register_file, unsigned int, unsigned int)
00000000004b8690 0000000000000c4c t emit_wpos(st_context*, st_translate*, gl_program const*, ureg_program*, int)
00000000004b92e0 0000000000000c2c t translate_src(st_translate*, st_src_reg const*)
00000000004b9f10 00000000000000c0 t translate_addr(st_translate*, st_src_reg const*, unsigned int)
00000000004b9fd0 0000000000000014 t swizzle_for_size(int)
00000000004b9ff0 0000000000000928 t glsl_to_tgsi_visitor::get_opcode(tgsi_opcode, st_dst_reg, st_src_reg, st_src_reg)
00000000004ba920 0000000000000218 t glsl_to_tgsi_visitor::add_constant(gl_register_file, gl_constant_value*, int, unsigned int, unsigned short*)
00000000004bab40 0000000000000070 t glsl_to_tgsi_visitor::st_src_reg_for_float(float)
00000000004babb0 00000000000000e4 t glsl_to_tgsi_visitor::st_src_reg_for_type(glsl_base_type, int)
00000000004baca0 0000000000000164 t glsl_to_tgsi_visitor::get_temp(glsl_type const*)
00000000004bae10 00000000000001c0 t glsl_to_tgsi_visitor::reladdr_to_temp(ir_instruction*, st_src_reg*, int*)
00000000004bafd0 0000000000000a84 t glsl_to_tgsi_visitor::emit_asm(ir_instruction*, tgsi_opcode, st_dst_reg, st_dst_reg, st_src_reg, st_src_reg, st_src_reg, st_src_reg)
00000000004bba60 00000000000000ec t glsl_to_tgsi_visitor::emit_asm(ir_instruction*, tgsi_opcode, st_dst_reg, st_src_reg, st_src_reg, st_src_reg, st_src_reg)
00000000004bbb50 00000000000000d4 t glsl_to_tgsi_visitor::emit_dp(ir_instruction*, st_dst_reg, st_src_reg, st_src_reg, unsigned int)
00000000004bbc30 00000000000001cc t glsl_to_tgsi_visitor::emit_scalar(ir_instruction*, tgsi_opcode, st_dst_reg, st_src_reg, st_src_reg)
00000000004bbe00 0000000000000128 t glsl_to_tgsi_visitor::emit_arl(ir_instruction*, st_dst_reg, st_src_reg)
00000000004bbf30 00000000000002f8 t glsl_to_tgsi_visitor::visit(ir_variable*) [clone .part.0]
00000000004bc230 0000000000000040 T glsl_to_tgsi_visitor::visit(ir_variable*)
00000000004bc270 0000000000000130 T glsl_to_tgsi_visitor::visit(ir_loop*)
00000000004bc3a0 000000000000014c T glsl_to_tgsi_visitor::visit(ir_loop_jump*)
00000000004bc4f0 0000000000000234 t glsl_to_tgsi_visitor::try_emit_mad(ir_expression*, int)
00000000004bc730 00000000000001e0 t glsl_to_tgsi_visitor::try_emit_mad_for_and_not(ir_expression*, int)
00000000004bc910 0000000000000b1c T glsl_to_tgsi_visitor::visit(ir_constant*)
00000000004bd430 00000000000000b8 T glsl_to_tgsi_visitor::visit(ir_return*)
00000000004bd4f0 00000000000002b0 T glsl_to_tgsi_visitor::visit(ir_discard*)
00000000004bd7a0 00000000000000b8 T glsl_to_tgsi_visitor::visit(ir_demote*)
00000000004bd860 0000000000000214 T glsl_to_tgsi_visitor::visit(ir_if*)
00000000004bda80 00000000000000d0 T glsl_to_tgsi_visitor::visit(ir_emit_vertex*)
00000000004bdb50 00000000000000d0 T glsl_to_tgsi_visitor::visit(ir_end_primitive*)
00000000004bdc20 00000000000000b8 T glsl_to_tgsi_visitor::visit(ir_barrier*)
00000000004bdce0 00000000000058cc t glsl_to_tgsi_visitor::visit_expression(ir_expression*, st_src_reg*)
00000000004c35b0 00000000000001a4 T glsl_to_tgsi_visitor::visit(ir_expression*)
00000000004c3760 00000000000001d8 t glsl_to_tgsi_visitor::process_move_condition(ir_rvalue*)
00000000004c3940 000000000000040c t glsl_to_tgsi_visitor::emit_block_mov(ir_assignment*, glsl_type const*, st_dst_reg*, st_src_reg*, st_src_reg*, bool)
00000000004c3d50 0000000000000430 T glsl_to_tgsi_visitor::visit(ir_assignment*)
00000000004c4180 0000000000000640 t glsl_to_tgsi_visitor::visit_ssbo_intrinsic(ir_call*)
00000000004c47c0 00000000000002a8 t glsl_to_tgsi_visitor::visit_membar_intrinsic(ir_call*)
00000000004c4a70 0000000000000504 t glsl_to_tgsi_visitor::visit_shared_intrinsic(ir_call*)
00000000004c4f80 0000000000000200 t glsl_to_tgsi_visitor::visit_generic_intrinsic(ir_call*, tgsi_opcode)
00000000004c5180 00000000000003fc t glsl_to_tgsi_visitor::calc_deref_offsets(ir_dereference*, unsigned int*, unsigned short*, st_src_reg*, unsigned int*)
00000000004c5580 0000000000000180 t glsl_to_tgsi_visitor::get_deref_offsets(ir_dereference*, unsigned int*, unsigned int*, unsigned short*, st_src_reg*, bool)
00000000004c5700 0000000000000a6c t glsl_to_tgsi_visitor::visit_atomic_counter_intrinsic(ir_call*)
00000000004c6170 0000000000000c98 t glsl_to_tgsi_visitor::visit_image_intrinsic(ir_call*)
00000000004c6e10 00000000000000fc T glsl_to_tgsi_visitor::visit(ir_call*)
00000000004c6f10 0000000000000154 t glsl_to_tgsi_visitor::canonicalize_gather_offset(st_src_reg)
00000000004c7070 0000000000001784 T glsl_to_tgsi_visitor::visit(ir_texture*)
00000000004c8800 00000000000002a4 t glsl_to_tgsi_visitor::handle_bound_deref(ir_dereference*)
00000000004c8ab0 000000000000070c T glsl_to_tgsi_visitor::visit(ir_dereference_variable*)
00000000004c91c0 0000000000000508 T glsl_to_tgsi_visitor::visit(ir_dereference_array*)
00000000004c96d0 0000000000000154 T glsl_to_tgsi_visitor::visit(ir_dereference_record*)
00000000004c9830 00000000000000e8 t glsl_to_tgsi_visitor::glsl_to_tgsi_visitor()
00000000004c9830 00000000000000e8 T glsl_to_tgsi_visitor::glsl_to_tgsi_visitor()
00000000004c9920 0000000000000080 t free_glsl_to_tgsi_visitor
00000000004c99a0 000000000000024c t glsl_to_tgsi_visitor::simplify_cmp()
00000000004c9bf0 0000000000000354 t glsl_to_tgsi_visitor::rename_temp_registers(rename_reg_pair*)
00000000004c9f50 00000000000000d8 t glsl_to_tgsi_visitor::get_first_temp_write(int*)
00000000004ca030 000000000000052c t glsl_to_tgsi_visitor::copy_propagate()
00000000004ca560 0000000000000690 t glsl_to_tgsi_visitor::eliminate_dead_code()
00000000004cabf0 00000000000001b8 t glsl_to_tgsi_visitor::merge_two_dsts()
00000000004cadb0 000000000000016c t glsl_to_tgsi_visitor::merge_registers()
00000000004caf20 00000000000000e0 t glsl_to_tgsi_visitor::renumber_registers()
00000000004cb000 0000000000000084 t void test_indirect_access<st_src_reg>(st_src_reg const&, bool*)
00000000004cb090 00000000000000a0 t void remap_array<st_src_reg>(st_src_reg&, int const*, bool const*)
00000000004cb130 00000000000004e8 t glsl_to_tgsi_visitor::split_arrays()
00000000004cb620 000000000000095c t st_link_tgsi
00000000004cbf80 000000000000006c t void std::__unguarded_linear_insert<inout_decl*, __gnu_cxx::__ops::_Val_comp_iter<sort_inout_decls> >(inout_decl*, __gnu_cxx::__ops::_Val_comp_iter<sort_inout_decls>)
00000000004cbff0 00000000000000bc t void std::__insertion_sort<inout_decl*, __gnu_cxx::__ops::_Iter_comp_iter<sort_inout_decls> >(inout_decl*, inout_decl*, __gnu_cxx::__ops::_Iter_comp_iter<sort_inout_decls>)
00000000004cc0b0 0000000000000158 t void std::__adjust_heap<inout_decl*, long, inout_decl, __gnu_cxx::__ops::_Iter_comp_iter<sort_inout_decls> >(inout_decl*, long, long, inout_decl, __gnu_cxx::__ops::_Iter_comp_iter<sort_inout_decls>)
00000000004cc210 0000000000000114 t void std::__heap_select<inout_decl*, __gnu_cxx::__ops::_Iter_comp_iter<sort_inout_decls> >(inout_decl*, inout_decl*, inout_decl*, __gnu_cxx::__ops::_Iter_comp_iter<sort_inout_decls>)
00000000004cc330 00000000000001e8 t void std::__introsort_loop<inout_decl*, long, __gnu_cxx::__ops::_Iter_comp_iter<sort_inout_decls> >(inout_decl*, inout_decl*, long, __gnu_cxx::__ops::_Iter_comp_iter<sort_inout_decls>)
00000000004cc520 00000000000023fc t st_translate_program
00000000004ce920 0000000000000014 t tgsi_array_merge::sort_by_begin(array_live_range const&, array_live_range const&)
00000000004ce940 000000000000001c t array_live_range::array_live_range()
00000000004ce940 000000000000001c T array_live_range::array_live_range()
00000000004ce960 0000000000000020 t array_live_range::array_live_range(unsigned int, unsigned int)
00000000004ce960 0000000000000020 T array_live_range::array_live_range(unsigned int, unsigned int)
00000000004ce980 0000000000000008 t array_live_range::set_live_range(int, int)
00000000004ce990 0000000000000018 t array_live_range::set_access_mask(int)
00000000004ce9b0 0000000000000060 t array_live_range::merge(array_live_range*, array_live_range*)
00000000004cea10 00000000000000b8 t array_live_range::interleave_into(array_live_range*)
00000000004cead0 0000000000000064 t tgsi_array_merge::array_remapping::init_from(array_live_range const&)
00000000004ceb40 0000000000000570 t tgsi_array_merge::remap_arrays(int, unsigned int*, exec_list*, tgsi_array_merge::array_remapping*)
00000000004cf0b0 000000000000013c t void std::__move_median_to_first<array_live_range*, __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(array_live_range const&, array_live_range const&)> >(array_live_range*, array_live_range*, array_live_range*, array_live_range*, __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(array_live_range const&, array_live_range const&)>)
00000000004cf1f0 0000000000000080 t void std::__unguarded_linear_insert<array_live_range*, __gnu_cxx::__ops::_Val_comp_iter<bool (*)(array_live_range const&, array_live_range const&)> >(array_live_range*, __gnu_cxx::__ops::_Val_comp_iter<bool (*)(array_live_range const&, array_live_range const&)>)
00000000004cf270 00000000000000cc t void std::__insertion_sort<array_live_range*, __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(array_live_range const&, array_live_range const&)> >(array_live_range*, array_live_range*, __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(array_live_range const&, array_live_range const&)>)
00000000004cf340 00000000000001cc t void std::__adjust_heap<array_live_range*, long, array_live_range, __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(array_live_range const&, array_live_range const&)> >(array_live_range*, long, long, array_live_range, __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(array_live_range const&, array_live_range const&)>)
00000000004cf510 0000000000000150 t void std::__heap_select<array_live_range*, __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(array_live_range const&, array_live_range const&)> >(array_live_range*, array_live_range*, array_live_range*, __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(array_live_range const&, array_live_range const&)>)
00000000004cf660 00000000000001d0 t void std::__introsort_loop<array_live_range*, long, __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(array_live_range const&, array_live_range const&)> >(array_live_range*, array_live_range*, long, __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(array_live_range const&, array_live_range const&)>)
00000000004cf830 0000000000000398 t tgsi_array_merge::get_array_remapping(int, array_live_range*, tgsi_array_merge::array_remapping*)
00000000004cfbd0 00000000000000f4 t merge_arrays(int, unsigned int*, exec_list*, array_live_range*)
00000000004cfcd0 00000000000000b0 t dup_reladdr(st_src_reg const*)
00000000004cfd80 0000000000000128 t st_src_reg::st_src_reg(gl_register_file, int, glsl_type const*, int, unsigned int)
00000000004cfd80 0000000000000128 T st_src_reg::st_src_reg(gl_register_file, int, glsl_type const*, int, unsigned int)
00000000004cfeb0 0000000000000030 t st_src_reg::st_src_reg(gl_register_file, int, glsl_base_type)
00000000004cfeb0 0000000000000030 T st_src_reg::st_src_reg(gl_register_file, int, glsl_base_type)
00000000004cfee0 0000000000000034 t st_src_reg::st_src_reg(gl_register_file, int, glsl_base_type, int)
00000000004cfee0 0000000000000034 T st_src_reg::st_src_reg(gl_register_file, int, glsl_base_type, int)
00000000004cff20 0000000000000020 t st_src_reg::reset()
00000000004cff40 0000000000000020 t st_src_reg::st_src_reg()
00000000004cff40 0000000000000020 T st_src_reg::st_src_reg()
00000000004cff60 00000000000000f8 t st_src_reg::operator=(st_src_reg const&)
00000000004d0060 00000000000000e0 t st_src_reg::st_src_reg(st_src_reg const&)
00000000004d0060 00000000000000e0 T st_src_reg::st_src_reg(st_src_reg const&)
00000000004d0140 0000000000000100 t st_src_reg::st_src_reg(st_dst_reg)
00000000004d0140 0000000000000100 T st_src_reg::st_src_reg(st_dst_reg)
00000000004d0240 0000000000000128 t st_src_reg::get_abs()
00000000004d0370 00000000000000f8 t st_dst_reg::st_dst_reg(st_src_reg)
00000000004d0370 00000000000000f8 T st_dst_reg::st_dst_reg(st_src_reg)
00000000004d0470 000000000000002c t st_dst_reg::st_dst_reg(gl_register_file, int, glsl_base_type, int)
00000000004d0470 000000000000002c T st_dst_reg::st_dst_reg(gl_register_file, int, glsl_base_type, int)
00000000004d04a0 000000000000002c t st_dst_reg::st_dst_reg(gl_register_file, int, glsl_base_type)
00000000004d04a0 000000000000002c T st_dst_reg::st_dst_reg(gl_register_file, int, glsl_base_type)
00000000004d04d0 000000000000001c t st_dst_reg::st_dst_reg()
00000000004d04d0 000000000000001c T st_dst_reg::st_dst_reg()
00000000004d04f0 00000000000000e0 t st_dst_reg::st_dst_reg(st_dst_reg const&)
00000000004d04f0 00000000000000e0 T st_dst_reg::st_dst_reg(st_dst_reg const&)
00000000004d05d0 0000000000000108 t st_dst_reg::operator=(st_dst_reg const&)
00000000004d06e0 00000000000000d0 t (anonymous namespace)::temp_comp_access::record_read(int, (anonymous namespace)::prog_scope*)
00000000004d07b0 000000000000007c t (anonymous namespace)::array_access::record_access(int, (anonymous namespace)::prog_scope*, int)
00000000004d0830 0000000000000170 t (anonymous namespace)::access_recorder::record_read(st_src_reg const&, int, (anonymous namespace)::prog_scope*)
00000000004d09a0 0000000000000124 t void std::__adjust_heap<(anonymous namespace)::register_merge_record*, long, (anonymous namespace)::register_merge_record, __gnu_cxx::__ops::_Iter_less_iter>((anonymous namespace)::register_merge_record*, long, long, (anonymous namespace)::register_merge_record, __gnu_cxx::__ops::_Iter_less_iter) [clone .constprop.0]
00000000004d0ad0 00000000000000e4 t void std::__insertion_sort<(anonymous namespace)::register_merge_record*, __gnu_cxx::__ops::_Iter_less_iter>((anonymous namespace)::register_merge_record*, (anonymous namespace)::register_merge_record*, __gnu_cxx::__ops::_Iter_less_iter) [clone .constprop.0]
00000000004d0bc0 0000000000000218 t void std::__introsort_loop<(anonymous namespace)::register_merge_record*, long, __gnu_cxx::__ops::_Iter_less_iter>((anonymous namespace)::register_merge_record*, (anonymous namespace)::register_merge_record*, long, __gnu_cxx::__ops::_Iter_less_iter) [clone .constprop.0]
00000000004d0de0 00000000000001e0 t (anonymous namespace)::temp_comp_access::record_ifelse_write((anonymous namespace)::prog_scope const&)
00000000004d0fc0 00000000000000f0 t (anonymous namespace)::temp_comp_access::record_write(int, (anonymous namespace)::prog_scope*)
00000000004d10b0 0000000000000d40 t get_temp_registers_required_live_ranges(void*, exec_list*, int, register_live_range*, int, array_live_range*)
00000000004d1df0 0000000000000254 t get_temp_registers_remapping(void*, int, register_live_range const*, rename_reg_pair*)
00000000004d2050 000000000000007c t swizzle_4v
00000000004d20d0 00000000000002cc t src_register
00000000004d23a0 00000000000001bc t translate_src
00000000004d2560 0000000000000bf0 t emit_wpos
00000000004d3150 000000000000008c t st_translate_texture_target
00000000004d31e0 0000000000000020 t st_translate_texture_type
00000000004d3200 000000000000191c t st_translate_mesa_program
00000000004d4b20 0000000000000088 T ast_array_specifier::print() const
00000000004d4bb0 00000000000008a8 t _mesa_ast_array_index_to_hir(void*, _mesa_glsl_parse_state*, ir_rvalue*, ir_rvalue*, YYLTYPE&, YYLTYPE&)
00000000004d5460 0000000000000058 T ast_expression_bin::print() const
00000000004d54c0 0000000000000010 t ast_expression::operator_string(ast_operators)
00000000004d54d0 0000000000000030 t ast_expression_bin::ast_expression_bin(int, ast_expression*, ast_expression*)
00000000004d54d0 0000000000000030 T ast_expression_bin::ast_expression_bin(int, ast_expression*, ast_expression*)
00000000004d5500 000000000000005c T ast_function_expression::has_sequence_subexpression() const
00000000004d5560 0000000000000894 t convert_component(ir_rvalue*, glsl_type const*)
00000000004d5e00 00000000000000d8 t implicitly_convert_component(ir_rvalue*&, glsl_base_type, _mesa_glsl_parse_state*)
00000000004d5ee0 0000000000000190 t match_subroutine_by_name(char const*, exec_list*, _mesa_glsl_parse_state*, ir_variable**)
00000000004d6070 000000000000015c t generate_array_index(void*, exec_list*, _mesa_glsl_parse_state*, YYLTYPE, ast_expression const*, ast_expression*, char const**, exec_list*)
00000000004d61d0 000000000000008c t function_exists(_mesa_glsl_parse_state*, glsl_symbol_table*, char const*)
00000000004d6260 000000000000015c t copy_index_derefs_to_temps(ir_instruction*, void*)
00000000004d63c0 00000000000000fc t process_parameters(exec_list*, exec_list*, exec_list*, _mesa_glsl_parse_state*) [clone .constprop.0]
00000000004d64c0 00000000000002d0 t process_record_constructor(exec_list*, glsl_type const*, YYLTYPE*, exec_list*, _mesa_glsl_parse_state*)
00000000004d6790 00000000000003c8 t process_array_constructor(exec_list*, glsl_type const*, YYLTYPE*, exec_list*, _mesa_glsl_parse_state*)
00000000004d6b60 0000000000000580 T ast_aggregate_initializer::hir(exec_list*, _mesa_glsl_parse_state*)
00000000004d70e0 00000000000000cc t prototype_string(glsl_type const*, char const*, exec_list*)
00000000004d71b0 00000000000000c0 t print_function_prototypes(_mesa_glsl_parse_state*, YYLTYPE*, ir_function*)
00000000004d7270 00000000000002e0 t ast_function_expression::handle_method(exec_list*, _mesa_glsl_parse_state*)
00000000004d7550 00000000000029bc T ast_function_expression::hir(exec_list*, _mesa_glsl_parse_state*)
00000000004d9f10 0000000000000010 W read_from_write_only_variable_visitor::visit_enter(ir_expression*)
00000000004d9f20 0000000000000008 T ast_node::has_sequence_subexpression() const
00000000004d9f30 0000000000000004 T ast_node::set_is_lhs(bool)
00000000004d9f40 0000000000000100 T ast_expression::has_sequence_subexpression() const
00000000004da040 0000000000000014 t compare_case_value(void const*, void const*)
00000000004da060 0000000000000008 t key_contents(void const*)
00000000004da070 0000000000000048 W interface_block_usage_visitor::visit(ir_dereference_variable*)
00000000004da0c0 0000000000000010 T ast_warnings_toggle::hir(exec_list*, _mesa_glsl_parse_state*)
00000000004da0d0 0000000000000128 t remove_per_vertex_blocks(exec_list*, _mesa_glsl_parse_state*, ir_variable_mode)
00000000004da200 00000000000000b8 t validate_layout_qualifier_vertex_count(_mesa_glsl_parse_state*, YYLTYPE, ir_variable*, unsigned int, unsigned int*, char const*)
00000000004da2c0 00000000000000ac t handle_tess_shader_input_decl(_mesa_glsl_parse_state*, YYLTYPE, ir_variable*)
00000000004da370 00000000000000f8 t get_scalar_boolean_operand(exec_list*, _mesa_glsl_parse_state*, ast_expression*, int, char const*, bool*)
00000000004da470 00000000000001a4 t validate_xfb_offset_qualifier(YYLTYPE*, _mesa_glsl_parse_state*, int, glsl_type const*, unsigned int)
00000000004da620 0000000000000154 T ast_gs_input_layout::hir(exec_list*, _mesa_glsl_parse_state*)
00000000004da780 0000000000000104 t handle_tess_ctrl_shader_output_decl(_mesa_glsl_parse_state*, YYLTYPE, ir_variable*)
00000000004da890 0000000000000160 T ast_tcs_output_layout::hir(exec_list*, _mesa_glsl_parse_state*)
00000000004da9f0 00000000000002e8 T ast_cs_input_layout::hir(exec_list*, _mesa_glsl_parse_state*)
00000000004dace0 000000000000005c t is_varying_var(ir_variable*, gl_shader_stage)
00000000004dad40 00000000000000a8 t validate_storage_for_sampler_image_types(ir_variable*, _mesa_glsl_parse_state*, YYLTYPE*)
00000000004dadf0 0000000000000288 t process_array_type(YYLTYPE*, glsl_type const*, ast_array_specifier*, _mesa_glsl_parse_state*)
00000000004db080 0000000000000100 t constant_one_for_inc_dec(void*, glsl_type const*) [clone .isra.0]
00000000004db180 000000000000007c W read_from_write_only_variable_visitor::visit(ir_dereference_variable*)
00000000004db200 00000000000001c8 t shift_result_type(glsl_type const*, glsl_type const*, ast_operators, _mesa_glsl_parse_state*, YYLTYPE*)
00000000004db3d0 00000000000000a8 t validate_identifier(char const*, YYLTYPE, _mesa_glsl_parse_state*)
00000000004db480 00000000000002a8 t validate_interpolation_qualifier(_mesa_glsl_parse_state*, YYLTYPE*, glsl_interp_mode, ast_type_qualifier const*, glsl_type const*, ir_variable_mode)
00000000004db730 00000000000003c8 t select_gles_precision(unsigned int, glsl_type const*, _mesa_glsl_parse_state*, YYLTYPE*)
00000000004dbb00 000000000000090c t apply_type_qualifier_to_variable(ast_type_qualifier const*, ir_variable*, _mesa_glsl_parse_state*, YYLTYPE*, bool)
00000000004dc410 00000000000000e0 t is_allowed_invariant(ir_variable*, _mesa_glsl_parse_state*)
00000000004dc4f0 000000000000023c t apply_implicit_conversion(glsl_type const*, ir_rvalue*&, _mesa_glsl_parse_state*)
00000000004dc730 00000000000001e0 t modulus_result_type(ir_rvalue*&, ir_rvalue*&, _mesa_glsl_parse_state*, YYLTYPE*)
00000000004dc910 00000000000002ac t bit_logic_result_type(ir_rvalue*&, ir_rvalue*&, ast_operators, _mesa_glsl_parse_state*, YYLTYPE*)
00000000004dcbc0 0000000000000234 t arithmetic_result_type(ir_rvalue*&, ir_rvalue*&, bool, _mesa_glsl_parse_state*, YYLTYPE*)
00000000004dce00 00000000000002b4 t validate_assignment(_mesa_glsl_parse_state*, YYLTYPE, ir_rvalue*, ir_rvalue*, bool)
00000000004dd0c0 0000000000000230 t apply_explicit_binding(_mesa_glsl_parse_state*, YYLTYPE*, ir_variable*, glsl_type const*, ast_type_qualifier const*) [clone .part.0]
00000000004dd2f0 0000000000000404 t do_comparison(void*, int, ir_rvalue*, ir_rvalue*)
00000000004dd700 0000000000000478 t do_assignment(exec_list*, _mesa_glsl_parse_state*, char const*, ir_rvalue*, ir_rvalue*, ir_rvalue**, bool, bool, YYLTYPE)
00000000004ddb80 000000000000008c T ast_expression::set_is_lhs(bool)
00000000004ddc10 0000000000000514 t _mesa_ast_to_hir(exec_list*, _mesa_glsl_parse_state*)
00000000004de130 0000000000000008 T ast_node::hir(exec_list*, _mesa_glsl_parse_state*)
00000000004de140 0000000000000010 T ast_function_expression::hir_no_rvalue(exec_list*, _mesa_glsl_parse_state*)
00000000004de150 0000000000000010 T ast_aggregate_initializer::hir_no_rvalue(exec_list*, _mesa_glsl_parse_state*)
00000000004de160 0000000000000108 t check_builtin_array_max_size(char const*, unsigned int, YYLTYPE, _mesa_glsl_parse_state*)
00000000004de270 0000000000000464 t get_variable_being_redeclared(ir_variable**, YYLTYPE, _mesa_glsl_parse_state*, bool, bool*)
00000000004de6e0 000000000000214c t ast_expression::do_hir(exec_list*, _mesa_glsl_parse_state*, bool)
00000000004e0830 0000000000000008 T ast_expression::hir(exec_list*, _mesa_glsl_parse_state*)
00000000004e0840 0000000000000008 T ast_expression::hir_no_rvalue(exec_list*, _mesa_glsl_parse_state*)
00000000004e0850 0000000000000030 T ast_expression_statement::hir(exec_list*, _mesa_glsl_parse_state*)
00000000004e0880 00000000000000a8 T ast_compound_statement::hir(exec_list*, _mesa_glsl_parse_state*)
00000000004e0930 000000000000008c t ast_type_specifier::glsl_type(char const**, _mesa_glsl_parse_state*) const
00000000004e09c0 000000000000105c t ast_process_struct_or_iface_block_members(exec_list*, _mesa_glsl_parse_state*, exec_list*, glsl_struct_field**, bool, glsl_matrix_layout, bool, ir_variable_mode, ast_type_qualifier*, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int)
00000000004e1a20 00000000000013fc T ast_interface_block::hir(exec_list*, _mesa_glsl_parse_state*)
00000000004e2e20 0000000000002b4c T ast_declarator_list::hir(exec_list*, _mesa_glsl_parse_state*)
00000000004e5970 00000000000002cc T ast_parameter_declarator::hir(exec_list*, _mesa_glsl_parse_state*)
00000000004e5c40 00000000000000e8 t ast_parameter_declarator::parameters_to_hir(exec_list*, bool, exec_list*, _mesa_glsl_parse_state*)
00000000004e5d30 0000000000000b4c T ast_function::hir(exec_list*, _mesa_glsl_parse_state*)
00000000004e6880 0000000000000198 T ast_function_definition::hir(exec_list*, _mesa_glsl_parse_state*)
00000000004e6a20 00000000000000a4 T ast_demote_statement::hir(exec_list*, _mesa_glsl_parse_state*)
00000000004e6ad0 0000000000000170 T ast_selection_statement::hir(exec_list*, _mesa_glsl_parse_state*)
00000000004e6c40 00000000000001c4 t ast_switch_statement::test_to_hir(exec_list*, _mesa_glsl_parse_state*)
00000000004e6e10 0000000000000030 T ast_switch_body::hir(exec_list*, _mesa_glsl_parse_state*)
00000000004e6e40 0000000000000344 T ast_case_statement_list::hir(exec_list*, _mesa_glsl_parse_state*)
00000000004e7190 000000000000010c T ast_case_statement::hir(exec_list*, _mesa_glsl_parse_state*)
00000000004e72a0 0000000000000068 T ast_case_label_list::hir(exec_list*, _mesa_glsl_parse_state*)
00000000004e7310 0000000000000444 T ast_case_label::hir(exec_list*, _mesa_glsl_parse_state*)
00000000004e7760 000000000000016c t ast_iteration_statement::condition_to_hir(exec_list*, _mesa_glsl_parse_state*)
00000000004e78d0 0000000000000538 T ast_jump_statement::hir(exec_list*, _mesa_glsl_parse_state*)
00000000004e7e10 0000000000000460 T ast_switch_statement::hir(exec_list*, _mesa_glsl_parse_state*)
00000000004e8270 000000000000015c T ast_iteration_statement::hir(exec_list*, _mesa_glsl_parse_state*)
00000000004e83d0 0000000000000188 T ast_type_specifier::hir(exec_list*, _mesa_glsl_parse_state*)
00000000004e8560 0000000000000234 T ast_struct_specifier::hir(exec_list*, _mesa_glsl_parse_state*)
00000000004e87a0 0000000000000064 T ast_type_specifier::print() const
00000000004e8810 000000000000009c t ast_fully_specified_type::has_qualifiers(_mesa_glsl_parse_state*) const
00000000004e88b0 0000000000000010 t ast_type_qualifier::has_interpolation() const
00000000004e88c0 0000000000000040 t ast_type_qualifier::has_layout() const
00000000004e8900 0000000000000014 t ast_type_qualifier::has_storage() const
00000000004e8920 0000000000000010 t ast_type_qualifier::has_auxiliary_storage() const
00000000004e8930 0000000000000010 t ast_type_qualifier::has_memory() const
00000000004e8940 0000000000000020 t ast_type_qualifier::is_subroutine_decl() const
00000000004e8960 000000000000099c t ast_type_qualifier::merge_qualifier(YYLTYPE*, _mesa_glsl_parse_state*, ast_type_qualifier const&, bool, bool)
00000000004e9300 0000000000000160 t ast_type_qualifier::validate_out_qualifier(YYLTYPE*, _mesa_glsl_parse_state*)
00000000004e9460 00000000000000d0 t ast_type_qualifier::merge_into_out_qualifier(YYLTYPE*, _mesa_glsl_parse_state*, ast_node*&)
00000000004e9530 000000000000028c t ast_type_qualifier::validate_in_qualifier(YYLTYPE*, _mesa_glsl_parse_state*)
00000000004e97c0 0000000000000358 t ast_type_qualifier::merge_into_in_qualifier(YYLTYPE*, _mesa_glsl_parse_state*, ast_node*&)
00000000004e9b20 0000000000000668 t ast_type_qualifier::validate_flags(YYLTYPE*, _mesa_glsl_parse_state*, ast_type_qualifier const&, char const*, char const*)
00000000004ea190 00000000000001b4 t ast_layout_expression::process_qualifier_constant(_mesa_glsl_parse_state*, char const*, unsigned int*, bool)
00000000004ea350 0000000000000114 t process_qualifier_constant(_mesa_glsl_parse_state*, YYLTYPE*, char const*, ast_expression*, unsigned int*)
00000000004ea470 0000000000000194 t ast_type_qualifier::push_to_global(YYLTYPE*, _mesa_glsl_parse_state*)
00000000004ea610 0000000000000c44 t _mesa_glsl_initialize_types
00000000004eb260 0000000000000100 t (anonymous namespace)::builtin_variable_generator::add_variable(char const*, glsl_type const*, int, ir_variable_mode, int)
00000000004eb360 00000000000000e0 t (anonymous namespace)::builtin_variable_generator::add_index_variable(char const*, glsl_type const*, int, ir_variable_mode, int, int) [clone .constprop.0] [clone .isra.0]
00000000004eb440 00000000000000c8 t (anonymous namespace)::builtin_variable_generator::add_const_ivec3(char const*, int, int, int) [clone .isra.0]
00000000004eb510 000000000000008c t (anonymous namespace)::builtin_variable_generator::add_const(char const*, int, int) [clone .isra.0]
00000000004eb5a0 0000000000000204 t (anonymous namespace)::builtin_variable_generator::add_uniform(glsl_type const*, int, char const*) [clone .isra.0]
00000000004eb7b0 0000000000000114 t (anonymous namespace)::builtin_variable_generator::add_varying(int, glsl_type const*, int, char const*)
00000000004eb8d0 0000000000000e60 t (anonymous namespace)::builtin_variable_generator::generate_constants()
00000000004ec730 00000000000020c0 t _mesa_glsl_initialize_variables(exec_list*, _mesa_glsl_parse_state*)
00000000004ee7f0 0000000000000170 t _mesa_ast_field_selection_to_hir(ast_expression const*, exec_list*, _mesa_glsl_parse_state*)
00000000004ee960 0000000000000040 t free_entry(hash_entry*)
00000000004ee9a0 0000000000000020 T ir_array_refcount_visitor::visit_enter(ir_function_signature*)
00000000004ee9c0 0000000000000050 t ir_array_refcount_visitor::ir_array_refcount_visitor()
00000000004ee9c0 0000000000000050 T ir_array_refcount_visitor::ir_array_refcount_visitor()
00000000004eea10 000000000000003c t ir_array_refcount_visitor::~ir_array_refcount_visitor()
00000000004eea10 000000000000003c T ir_array_refcount_visitor::~ir_array_refcount_visitor()
00000000004eea50 00000000000000d8 t ir_array_refcount_entry::ir_array_refcount_entry(ir_variable*)
00000000004eea50 00000000000000d8 T ir_array_refcount_entry::ir_array_refcount_entry(ir_variable*)
00000000004eeb30 00000000000000b0 T ir_array_refcount_visitor::visit(ir_dereference_variable*)
00000000004eebe0 00000000000001b8 T ir_array_refcount_visitor::visit_enter(ir_dereference_array*)
00000000004eeda0 0000000000000074 t ir_array_refcount_visitor::get_variable_entry(ir_variable*)
00000000004eee20 000000000000017c t call_for_basic_blocks(exec_list*, void (*)(ir_instruction*, ir_instruction*, void*), void*)
00000000004eefa0 0000000000000018 T ir_function_can_inline_visitor::visit_enter(ir_return*)
00000000004eefc0 00000000000000a8 t can_inline(ir_call*)
00000000004ef070 0000000000000010 t (anonymous namespace)::has_recursion_visitor::visit_leave(ir_function_signature*)
00000000004ef080 0000000000000100 t (anonymous namespace)::has_recursion_visitor::visit_enter(ir_call*)
00000000004ef180 000000000000005c t destroy_links(exec_list*, (anonymous namespace)::function*) [clone .isra.0]
00000000004ef1e0 00000000000000dc t remove_unlinked_functions(void const*, void*, void*)
00000000004ef2c0 00000000000000a4 t (anonymous namespace)::has_recursion_visitor::visit_enter(ir_function_signature*)
00000000004ef370 0000000000000170 t detect_recursion_unlinked(_mesa_glsl_parse_state*, exec_list*)
00000000004ef4e0 0000000000000158 t detect_recursion_linked(gl_shader_program*, exec_list*)
00000000004ef640 0000000000000064 t ir_rvalue_visitor::visit_leave(ir_expression*)
00000000004ef6b0 0000000000000024 T ir_rvalue_visitor::visit_leave(ir_swizzle*)
00000000004ef6b0 0000000000000024 T ir_rvalue_visitor::visit_leave(ir_dereference_record*)
00000000004ef6e0 0000000000000024 T ir_rvalue_visitor::visit_leave(ir_discard*)
00000000004ef6e0 0000000000000024 T ir_rvalue_visitor::visit_leave(ir_emit_vertex*)
00000000004ef6e0 0000000000000024 T ir_rvalue_visitor::visit_leave(ir_end_primitive*)
00000000004ef6e0 0000000000000024 T ir_rvalue_visitor::visit_leave(ir_if*)
00000000004ef6e0 0000000000000024 T ir_rvalue_visitor::visit_leave(ir_return*)
00000000004ef710 0000000000000064 T ir_rvalue_enter_visitor::visit_enter(ir_expression*)
00000000004ef780 0000000000000024 T ir_rvalue_enter_visitor::visit_enter(ir_swizzle*)
00000000004ef780 0000000000000024 T ir_rvalue_enter_visitor::visit_enter(ir_dereference_record*)
00000000004ef7b0 0000000000000024 T ir_rvalue_enter_visitor::visit_enter(ir_discard*)
00000000004ef7b0 0000000000000024 T ir_rvalue_enter_visitor::visit_enter(ir_emit_vertex*)
00000000004ef7b0 0000000000000024 T ir_rvalue_enter_visitor::visit_enter(ir_end_primitive*)
00000000004ef7b0 0000000000000024 T ir_rvalue_enter_visitor::visit_enter(ir_if*)
00000000004ef7b0 0000000000000024 T ir_rvalue_enter_visitor::visit_enter(ir_return*)
00000000004ef7e0 0000000000000048 t ir_rvalue_visitor::visit_leave(ir_assignment*)
00000000004ef830 0000000000000048 t ir_rvalue_enter_visitor::visit_enter(ir_assignment*)
00000000004ef880 000000000000005c T ir_rvalue_visitor::visit_leave(ir_dereference_array*)
00000000004ef8e0 000000000000005c T ir_rvalue_enter_visitor::visit_enter(ir_dereference_array*)
00000000004ef940 0000000000000064 t ir_rvalue_base_visitor::rvalue_visit(ir_expression*)
00000000004ef9b0 000000000000010c t ir_rvalue_base_visitor::rvalue_visit(ir_texture*)
00000000004efac0 0000000000000004 T ir_rvalue_visitor::visit_leave(ir_texture*)
00000000004efad0 0000000000000004 T ir_rvalue_enter_visitor::visit_enter(ir_texture*)
00000000004efae0 0000000000000048 t ir_rvalue_base_visitor::rvalue_visit(ir_assignment*)
00000000004efb30 00000000000000b4 t ir_rvalue_base_visitor::rvalue_visit(ir_call*)
00000000004efbf0 0000000000000004 T ir_rvalue_visitor::visit_leave(ir_call*)
00000000004efc00 0000000000000004 t ir_rvalue_enter_visitor::visit_enter(ir_call*)
00000000004efc10 0000000000000180 t mark(gl_program*, ir_variable*, int, int, gl_shader_stage)
00000000004efd90 000000000000001c t (anonymous namespace)::ir_set_program_inouts_visitor::visit_enter(ir_discard*)
00000000004efdb0 0000000000000024 t (anonymous namespace)::ir_set_program_inouts_visitor::visit_enter(ir_texture*)
00000000004efde0 0000000000000020 t (anonymous namespace)::ir_set_program_inouts_visitor::visit_enter(ir_function_signature*)
00000000004efe00 00000000000000f4 t (anonymous namespace)::ir_set_program_inouts_visitor::mark_whole_variable(ir_variable*)
00000000004eff00 0000000000000040 t (anonymous namespace)::ir_set_program_inouts_visitor::visit(ir_dereference_variable*)
00000000004eff40 0000000000000058 t is_multiple_vertices(gl_shader_stage, ir_variable*)
00000000004effa0 00000000000001b0 t (anonymous namespace)::ir_set_program_inouts_visitor::try_mark_partial_variable(ir_variable*, ir_rvalue*)
00000000004f0150 00000000000000f4 t (anonymous namespace)::ir_set_program_inouts_visitor::visit_enter(ir_dereference_array*)
00000000004f0250 0000000000000088 t do_set_program_inouts(exec_list*, gl_program*, gl_shader_stage)
00000000004f02e0 0000000000000068 t free_entry(hash_entry*)
00000000004f0350 0000000000000020 T ir_variable_refcount_visitor::visit_enter(ir_function_signature*)
00000000004f0370 0000000000000088 T ir_variable_refcount_visitor::visit(ir_variable*)
00000000004f0400 0000000000000048 t ir_variable_refcount_visitor::ir_variable_refcount_visitor()
00000000004f0400 0000000000000048 T ir_variable_refcount_visitor::ir_variable_refcount_visitor()
00000000004f0450 000000000000003c t ir_variable_refcount_visitor::~ir_variable_refcount_visitor()
00000000004f0450 000000000000003c T ir_variable_refcount_visitor::~ir_variable_refcount_visitor()
00000000004f0490 000000000000008c t ir_variable_refcount_visitor::get_variable_entry(ir_variable*)
00000000004f0520 0000000000000064 T ir_variable_refcount_visitor::visit(ir_dereference_variable*)
00000000004f0590 0000000000000090 T ir_variable_refcount_visitor::visit_leave(ir_assignment*)
00000000004f0620 0000000000000158 t process_block(void*, hash_table*, ir_variable*)
00000000004f0780 0000000000000074 T link_uniform_block_active_visitor::visit(ir_dereference_variable*)
00000000004f0800 00000000000001ac t process_arrays(void*, ir_dereference_array*, link_uniform_block_active*)
00000000004f09b0 0000000000000120 T link_uniform_block_active_visitor::visit_enter(ir_dereference_array*)
00000000004f0ad0 0000000000000180 T link_uniform_block_active_visitor::visit(ir_variable*)
00000000004f0c50 00000000000000a0 t deref_output(ir_variable*)
00000000004f0cf0 0000000000000068 t is_mode(ir_variable*, gl_advanced_blend_mode)
00000000004f0d60 0000000000000090 t lumv3(ir_variable*)
00000000004f0df0 00000000000000a8 t maxv3(ir_variable*)
00000000004f0ea0 00000000000000a8 t minv3(ir_variable*)
00000000004f0f50 00000000000004f0 t set_lum(ir_builder::ir_factory*, ir_variable*, ir_variable*, ir_variable*)
00000000004f1440 0000000000000234 t set_lum_sat(ir_builder::ir_factory*, ir_variable*, ir_variable*, ir_variable*, ir_variable*)
00000000004f1680 0000000000001a38 t calc_blend_result(ir_builder::ir_factory, ir_variable*, ir_variable*, ir_rvalue*, unsigned int)
00000000004f30c0 000000000000048c t lower_blend_equation_advanced(gl_linked_shader*, bool)
00000000004f3550 0000000000000594 t lower_buffer_access::lower_buffer_access::emit_access(void*, bool, ir_dereference*, ir_variable*, unsigned int, bool, glsl_type const*, glsl_interface_packing, unsigned int)
00000000004f3af0 0000000000000154 t lower_buffer_access::lower_buffer_access::is_dereferenced_thing_row_major(ir_rvalue const*)
00000000004f3c50 0000000000000438 t lower_buffer_access::lower_buffer_access::setup_buffer_access(void*, ir_rvalue*, ir_rvalue**, unsigned int*, bool*, glsl_type const**, glsl_struct_field const**, glsl_interface_packing)
00000000004f4090 00000000000000b0 t replace_discard(void*, ir_variable*, ir_discard*)
00000000004f4140 0000000000000208 t (anonymous namespace)::lower_discard_visitor::visit_leave(ir_if*)
00000000004f4350 0000000000000050 t lower_discard(exec_list*)
00000000004f43a0 0000000000000018 t (anonymous namespace)::ir_if_to_cond_assign_visitor::visit_enter(ir_if*)
00000000004f43c0 00000000000001c0 t move_block_to_cond_assign(void*, ir_if*, ir_rvalue*, exec_list*, set*)
00000000004f4580 000000000000031c t (anonymous namespace)::ir_if_to_cond_assign_visitor::visit_leave(ir_if*)
00000000004f48a0 0000000000000134 t check_ir_node(ir_instruction*, void*)
00000000004f49e0 00000000000000a8 t lower_if_to_cond_assign(gl_shader_stage, exec_list*, unsigned int, unsigned int)
00000000004f4a90 000000000000017c t lower_64bit_integer_instructions(exec_list*, unsigned int)
00000000004f4c10 0000000000000190 t lower_64bit::expand_source(ir_builder::ir_factory&, ir_rvalue*, ir_variable**)
00000000004f4da0 0000000000000108 t lower_64bit::compact_destination(ir_builder::ir_factory&, glsl_type const*, ir_variable**)
00000000004f4eb0 00000000000002d8 t lower_64bit::lower_op_to_function_call(ir_instruction*, ir_expression*, ir_function_signature*)
00000000004f5190 0000000000000120 t (anonymous namespace)::lower_64bit_visitor::handle_op(ir_expression*, char const*, ir_function_signature* (*)(void*, bool (*)(_mesa_glsl_parse_state const*)))
00000000004f52b0 0000000000000140 t (anonymous namespace)::lower_64bit_visitor::handle_rvalue(ir_rvalue**)
00000000004f53f0 0000000000000064 t mat_op_to_vec_predicate(ir_instruction*)
00000000004f5460 00000000000000a4 t (anonymous namespace)::ir_mat_op_to_vec_visitor::get_column(ir_dereference*, int)
00000000004f5510 0000000000000114 t (anonymous namespace)::ir_mat_op_to_vec_visitor::do_mul_mat_scalar(ir_dereference*, ir_dereference*, ir_dereference*)
00000000004f5630 0000000000000b38 t (anonymous namespace)::ir_mat_op_to_vec_visitor::visit_leave(ir_assignment*)
00000000004f6170 0000000000000064 t do_mat_op_to_vec(exec_list*)
00000000004f61e0 00000000000001c8 T lower_offset_array_visitor::handle_rvalue(ir_rvalue**)
00000000004f63b0 000000000000004c t lower_offset_arrays(exec_list*)
00000000004f6400 0000000000000004 t (anonymous namespace)::lower_packing_builtins_visitor::~lower_packing_builtins_visitor()
00000000004f6400 0000000000000004 t (anonymous namespace)::lower_packing_builtins_visitor::~lower_packing_builtins_visitor()
00000000004f6410 0000000000000008 t (anonymous namespace)::lower_packing_builtins_visitor::~lower_packing_builtins_visitor()
00000000004f6420 00000000000001c0 t (anonymous namespace)::lower_packing_builtins_visitor::unpack_uint_to_uvec2(ir_rvalue*)
00000000004f65e0 0000000000000210 t (anonymous namespace)::lower_packing_builtins_visitor::pack_uvec2_to_uint(ir_rvalue*)
00000000004f67f0 0000000000000410 t (anonymous namespace)::lower_packing_builtins_visitor::unpack_half_1x16_nosign(ir_rvalue*, ir_rvalue*)
00000000004f6c00 0000000000000510 t (anonymous namespace)::lower_packing_builtins_visitor::pack_half_1x16_nosign(ir_rvalue*, ir_rvalue*, ir_rvalue*)
00000000004f7110 00000000000003f0 t (anonymous namespace)::lower_packing_builtins_visitor::pack_uvec4_to_uint(ir_rvalue*)
00000000004f7500 0000000000000438 t (anonymous namespace)::lower_packing_builtins_visitor::unpack_uint_to_uvec4(ir_rvalue*)
00000000004f7940 000000000000143c t (anonymous namespace)::lower_packing_builtins_visitor::handle_rvalue(ir_rvalue**)
00000000004f8d80 0000000000000078 t lower_packing_builtins(exec_list*, int)
00000000004f8e00 0000000000000078 t (anonymous namespace)::deref_replacer::handle_rvalue(ir_rvalue**)
00000000004f8e80 000000000000005c t (anonymous namespace)::find_variable_index::visit_enter(ir_dereference_array*)
00000000004f8ee0 0000000000000150 t (anonymous namespace)::assignment_generator::generate(unsigned int, ir_rvalue*, ir_builder::ir_factory&) const
00000000004f9030 0000000000000130 t compare_index_block(ir_builder::ir_factory&, ir_variable*, unsigned int, unsigned int)
00000000004f9160 0000000000000284 t (anonymous namespace)::switch_generator::generate(unsigned int, unsigned int, ir_builder::ir_factory&)
00000000004f93f0 00000000000002ac t (anonymous namespace)::variable_index_to_cond_assign_visitor::convert_dereference_array(ir_dereference_array*, ir_assignment*, ir_dereference*)
00000000004f96a0 00000000000001a8 t (anonymous namespace)::variable_index_to_cond_assign_visitor::handle_rvalue(ir_rvalue**)
00000000004f9850 00000000000001a0 t (anonymous namespace)::variable_index_to_cond_assign_visitor::visit_leave(ir_assignment*)
00000000004f99f0 00000000000000a0 t lower_variable_index_to_cond_assign(gl_shader_stage, exec_list*, bool, bool, bool, bool)
00000000004f9a90 0000000000000254 t (anonymous namespace)::ir_vec_index_to_cond_assign_visitor::convert_vec_index_to_cond_assign(void*, ir_rvalue*, ir_rvalue*, glsl_type const*) [clone .constprop.0]
00000000004f9cf0 00000000000000e8 t (anonymous namespace)::ir_vec_index_to_cond_assign_visitor::convert_vector_extract_to_cond_assign(ir_rvalue*)
00000000004f9de0 0000000000000030 t (anonymous namespace)::ir_vec_index_to_cond_assign_visitor::visit_enter(ir_if*)
00000000004f9e10 0000000000000030 t (anonymous namespace)::ir_vec_index_to_cond_assign_visitor::visit_enter(ir_return*)
00000000004f9e40 000000000000009c t (anonymous namespace)::ir_vec_index_to_cond_assign_visitor::visit_enter(ir_call*)
00000000004f9ee0 0000000000000044 t (anonymous namespace)::ir_vec_index_to_cond_assign_visitor::visit_leave(ir_assignment*)
00000000004f9f30 0000000000000030 t (anonymous namespace)::ir_vec_index_to_cond_assign_visitor::visit_enter(ir_swizzle*)
00000000004f9f60 000000000000005c t (anonymous namespace)::ir_vec_index_to_cond_assign_visitor::visit_enter(ir_expression*)
00000000004f9fc0 0000000000000050 t do_vec_index_to_cond_assign(exec_list*)
00000000004fa010 00000000000003bc t (anonymous namespace)::lower_vector_visitor::handle_rvalue(ir_rvalue**)
00000000004fa3d0 0000000000000060 t lower_quadop_vector(exec_list*, bool)
00000000004fa430 0000000000000008 t hash_table_var_hash(void const*)
00000000004fa440 000000000000007c t copy(void*, ir_variable*, ir_variable*)
00000000004fa4c0 0000000000000104 t (anonymous namespace)::output_read_remover::visit(ir_dereference_variable*)
00000000004fa5d0 000000000000008c t (anonymous namespace)::output_read_remover::visit_leave(ir_emit_vertex*)
00000000004fa5d0 000000000000008c t (anonymous namespace)::output_read_remover::visit_leave(ir_return*)
00000000004fa660 00000000000000b8 t (anonymous namespace)::output_read_remover::visit_leave(ir_function_signature*)
00000000004fa720 0000000000000094 t lower_output_reads(unsigned int, exec_list*)
00000000004fa7c0 0000000000000170 t write_uniform_remap_table(blob*, unsigned int, gl_uniform_storage*, gl_uniform_storage**)
00000000004fa930 0000000000000044 t write_hash_table_entry(char const*, unsigned int, void*)
00000000004fa980 00000000000000d0 t write_buffer_block(blob*, gl_uniform_block*)
00000000004faa50 0000000000000104 t read_uniform_remap_table(blob_reader*, gl_shader_program*, unsigned int*, gl_uniform_storage*)
00000000004fab60 000000000000015c t read_buffer_block(blob_reader*, gl_uniform_block*, gl_shader_program*)
00000000004facc0 00000000000000c8 t write_hash_table(blob*, string_to_uint_map*)
00000000004fad90 00000000000000b4 t read_hash_table(blob_reader*, string_to_uint_map*)
00000000004fae50 0000000000000f40 t serialize_glsl_program
00000000004fbd90 0000000000001218 t deserialize_glsl_program
00000000004fcfb0 0000000000000100 t sanitize_cb
00000000004fd0b0 0000000000000038 t cso_construct_key
00000000004fd0f0 0000000000000060 t cso_insert_state
00000000004fd150 00000000000000cc t cso_hash_find_data_from_template
00000000004fd220 0000000000000100 t cso_find_state_template
00000000004fd320 0000000000000064 t cso_cache_create
00000000004fd390 00000000000001f4 t cso_cache_delete
00000000004fd590 0000000000000008 t cso_cache_set_sanitize_callback
00000000004fd5a0 0000000000000040 t eat_opt_white
00000000004fd5e0 0000000000000088 t str_match_nocase_whole
00000000004fd670 00000000000000b4 t parse_int
00000000004fd730 00000000000000cc t parse_register_file_bracket
00000000004fd800 000000000000012c t parse_optional_swizzle
00000000004fd930 0000000000000170 t parse_opt_writemask
00000000004fdaa0 00000000000004a8 t parse_register_bracket
00000000004fdf50 0000000000000214 t parse_register_dcl_bracket
00000000004fe170 0000000000000f28 t parse_instruction
00000000004ff0a0 0000000000001c48 t tgsi_text_translate
0000000000500cf0 0000000000000004 t translate_create
0000000000500d00 0000000000000030 t translate_cache_create
0000000000500d30 0000000000000074 t translate_cache_destroy
0000000000500db0 0000000000000094 t translate_cache_find
0000000000500e50 0000000000000024 t emit_R64G64B64A64_FLOAT
0000000000500e80 0000000000000020 t emit_R64G64B64_FLOAT
0000000000500ea0 0000000000000014 t emit_R64G64_FLOAT
0000000000500ec0 0000000000000010 t emit_R64_FLOAT
0000000000500ed0 000000000000001c t emit_R32G32B32A32_FLOAT
0000000000500ef0 000000000000001c t emit_R32G32B32_FLOAT
0000000000500f10 0000000000000014 t emit_R32G32_FLOAT
0000000000500f30 000000000000000c t emit_R32_FLOAT
0000000000500f40 0000000000000020 t emit_R32G32B32A32_USCALED
0000000000500f60 0000000000000020 t emit_R32G32B32_USCALED
0000000000500f80 0000000000000014 t emit_R32G32_USCALED
0000000000500fa0 0000000000000010 t emit_R32_USCALED
0000000000500fb0 0000000000000020 t emit_R32G32B32A32_SSCALED
0000000000500fd0 0000000000000020 t emit_R32G32B32_SSCALED
0000000000500ff0 0000000000000014 t emit_R32G32_SSCALED
0000000000501010 0000000000000010 t emit_R32_SSCALED
0000000000501020 0000000000000020 t emit_R32G32B32A32_UNORM
0000000000501040 0000000000000020 t emit_R32G32B32_UNORM
0000000000501060 0000000000000014 t emit_R32G32_UNORM
0000000000501080 0000000000000010 t emit_R32_UNORM
0000000000501090 0000000000000020 t emit_R32G32B32A32_SNORM
00000000005010b0 0000000000000020 t emit_R32G32B32_SNORM
00000000005010d0 0000000000000014 t emit_R32G32_SNORM
00000000005010f0 0000000000000010 t emit_R32_SNORM
0000000000501100 0000000000000020 t emit_R16G16B16A16_USCALED
0000000000501120 0000000000000024 t emit_R16G16B16_USCALED
0000000000501150 0000000000000018 t emit_R16G16_USCALED
0000000000501170 0000000000000010 t emit_R16_USCALED
0000000000501180 0000000000000020 t emit_R16G16B16A16_SSCALED
00000000005011a0 0000000000000024 t emit_R16G16B16_SSCALED
00000000005011d0 0000000000000018 t emit_R16G16_SSCALED
00000000005011f0 0000000000000010 t emit_R16_SSCALED
0000000000501200 0000000000000030 t emit_R16G16B16A16_UNORM
0000000000501230 000000000000003c t emit_R16G16B16_UNORM
0000000000501270 000000000000002c t emit_R16G16_UNORM
00000000005012a0 0000000000000020 t emit_R16_UNORM
00000000005012c0 0000000000000030 t emit_R16G16B16A16_SNORM
00000000005012f0 000000000000003c t emit_R16G16B16_SNORM
0000000000501330 000000000000002c t emit_R16G16_SNORM
0000000000501360 0000000000000020 t emit_R16_SNORM
0000000000501380 0000000000000020 t emit_R8G8B8A8_USCALED
00000000005013a0 0000000000000028 t emit_R8G8B8_USCALED
00000000005013d0 000000000000001c t emit_R8G8_USCALED
00000000005013f0 0000000000000010 t emit_R8_USCALED
0000000000501400 000000000000002c t emit_R8G8B8A8_UNORM
0000000000501430 000000000000002c t emit_R8G8B8_UNORM
0000000000501460 000000000000002c t emit_R8G8_UNORM
0000000000501490 000000000000001c t emit_R8_UNORM
00000000005014b0 000000000000002c t emit_R8G8B8A8_SNORM
00000000005014e0 000000000000002c t emit_R8G8B8_SNORM
0000000000501510 000000000000002c t emit_R8G8_SNORM
0000000000501540 000000000000001c t emit_R8_SNORM
0000000000501560 000000000000001c t emit_R32G32B32A32_UINT
0000000000501580 000000000000001c t emit_R32G32B32_UINT
00000000005015a0 0000000000000014 t emit_R32G32_UINT
00000000005015c0 000000000000000c t emit_R32_UINT
00000000005015d0 000000000000001c t emit_R16G16B16A16_UINT
00000000005015f0 0000000000000018 t emit_R16G16B16_UINT
0000000000501610 0000000000000010 t emit_R16G16_UINT
0000000000501620 000000000000000c t emit_R16_UINT
0000000000501630 000000000000001c t emit_R8G8B8A8_UINT
0000000000501650 000000000000001c t emit_R8G8B8_UINT
0000000000501670 0000000000000014 t emit_R8G8_UINT
0000000000501690 000000000000000c t emit_R8_UINT
00000000005016a0 000000000000001c t emit_R32G32B32A32_SINT
00000000005016c0 000000000000001c t emit_R32G32B32_SINT
00000000005016e0 0000000000000014 t emit_R32G32_SINT
0000000000501700 000000000000000c t emit_R32_SINT
0000000000501710 000000000000001c t emit_R16G16B16A16_SINT
0000000000501730 0000000000000018 t emit_R16G16B16_SINT
0000000000501750 0000000000000010 t emit_R16G16_SINT
0000000000501760 000000000000000c t emit_R16_SINT
0000000000501770 000000000000001c t emit_R8G8B8A8_SINT
0000000000501790 000000000000001c t emit_R8G8B8_SINT
00000000005017b0 0000000000000014 t emit_R8G8_SINT
00000000005017d0 000000000000000c t emit_R8_SINT
00000000005017e0 000000000000004c t emit_A8R8G8B8_UNORM
0000000000501830 000000000000004c t emit_B8G8R8A8_UNORM
0000000000501880 0000000000000104 t emit_B10G10R10A2_UNORM
0000000000501990 00000000000000d0 t emit_B10G10R10A2_USCALED
0000000000501a60 0000000000000104 t emit_B10G10R10A2_SNORM
0000000000501b70 00000000000000e0 t emit_B10G10R10A2_SSCALED
0000000000501c50 0000000000000104 t emit_R10G10B10A2_UNORM
0000000000501d60 00000000000000d0 t emit_R10G10B10A2_USCALED
0000000000501e30 0000000000000104 t emit_R10G10B10A2_SNORM
0000000000501f40 00000000000000e0 t emit_R10G10B10A2_SSCALED
0000000000502020 0000000000000004 t emit_NULL
0000000000502030 000000000000004c t generic_set_buffer
0000000000502080 0000000000000004 t generic_release
0000000000502090 0000000000000168 t generic_run_elts
0000000000502200 0000000000000168 t generic_run_elts16
0000000000502370 0000000000000168 t generic_run_elts8
00000000005024e0 0000000000000160 t generic_run
0000000000502640 0000000000000044 t emit_R16G16B16A16_FLOAT
0000000000502690 0000000000000044 t emit_R16G16B16_FLOAT
00000000005026e0 0000000000000038 t emit_R16G16_FLOAT
0000000000502720 0000000000000028 t emit_R16_FLOAT
0000000000502750 0000000000000010 t emit_R8_SSCALED
0000000000502760 0000000000000020 t emit_R8G8B8A8_SSCALED
0000000000502780 0000000000000028 t emit_R8G8B8_SSCALED
00000000005027b0 000000000000001c t emit_R8G8_SSCALED
00000000005027d0 0000000000000700 t translate_generic_create
0000000000502ed0 00000000000000c0 t util_draw_vertex_buffer
0000000000502f90 00000000000000a4 T u_default_buffer_subdata
0000000000503040 00000000000000bc T u_default_texture_subdata
0000000000503100 0000000000000008 T u_default_resource_get_handle
0000000000503110 0000000000000004 T u_default_transfer_flush_region
0000000000503120 0000000000000018 T u_resource_get_handle_vtbl
0000000000503140 0000000000000010 T u_resource_destroy_vtbl
0000000000503150 0000000000000010 T u_transfer_map_vtbl
0000000000503160 0000000000000014 T u_transfer_flush_region_vtbl
0000000000503180 0000000000000014 T u_transfer_unmap_vtbl
00000000005031a0 0000000000000008 t vl_create_decoder
00000000005031b0 0000000000000008 t vl_video_buffer_is_format_supported
00000000005031c0 0000000000000008 t vl_video_buffer_create
00000000005031d0 0000000000000024 t nv50_miptree_get_handle
0000000000503200 00000000000000a4 T nv50_miptree_destroy
00000000005032b0 00000000000000a0 t nv50_tex_choose_tile_dims_helper
0000000000503350 0000000000000100 t nv50_miptree_init_layout_linear
0000000000503450 000000000000010c t nv50_miptree_from_handle
0000000000503560 000000000000014c t nv50_surface_from_miptree
00000000005036b0 0000000000000010 T nv50_invalidate_resource
00000000005036c0 0000000000000068 T nv50_surface_destroy
0000000000503730 0000000000000158 t nv50_surface_from_buffer
0000000000503890 0000000000000384 T nv50_sampler_state_create
0000000000503c20 0000000000000004 W nv50_ir::Iterator::reset()
0000000000503c30 0000000000000008 W nv50_ir::Value::isUniform() const
0000000000503c40 0000000000000050 W nv50_ir::Target::parseDriverInfo(nv50_ir_prog_info const*)
0000000000503c90 0000000000000018 T nv50_ir::Symbol::isUniform() const
0000000000503cb0 0000000000000028 T nv50_ir::ImmediateValue::equals(nv50_ir::Value const*, bool) const
0000000000503ce0 0000000000000070 t _debug_printf
0000000000503d50 0000000000000058 T nv50_ir::Value::equals(nv50_ir::Value const*, bool) const
0000000000503db0 0000000000000080 T nv50_ir::Symbol::equals(nv50_ir::Value const*, bool) const
0000000000503e30 0000000000000094 t nv50_ir::Value::interfers(nv50_ir::Value const*) const [clone .part.0]
0000000000503ed0 00000000000000a8 T nv50_ir::Value::interfers(nv50_ir::Value const*) const
0000000000503f80 00000000000000c4 W nv50_ir::LValue::~LValue()
0000000000503f80 00000000000000c4 W nv50_ir::LValue::~LValue()
0000000000504050 00000000000000c4 W nv50_ir::Symbol::~Symbol()
0000000000504050 00000000000000c4 W nv50_ir::Symbol::~Symbol()
0000000000504120 00000000000000c4 W nv50_ir::ImmediateValue::~ImmediateValue()
0000000000504120 00000000000000c4 W nv50_ir::ImmediateValue::~ImmediateValue()
00000000005041f0 00000000000000c0 W nv50_ir::LValue::~LValue()
00000000005042b0 00000000000000c0 W nv50_ir::ImmediateValue::~ImmediateValue()
0000000000504370 00000000000000c0 W nv50_ir::Symbol::~Symbol()
0000000000504430 0000000000000198 T nv50_ir::LValue::isUniform() const
00000000005045d0 0000000000000048 t nv50_ir::Modifier::Modifier(nv50_ir::operation)
00000000005045d0 0000000000000048 T nv50_ir::Modifier::Modifier(nv50_ir::operation)
0000000000504620 0000000000000034 t nv50_ir::Modifier::operator*(nv50_ir::Modifier) const
0000000000504660 00000000000001e8 t nv50_ir::ValueRef::getImmediate(nv50_ir::ImmediateValue&) const
0000000000504850 0000000000000060 t nv50_ir::ValueDef::ValueDef(nv50_ir::Value*)
0000000000504850 0000000000000060 T nv50_ir::ValueDef::ValueDef(nv50_ir::Value*)
00000000005048b0 000000000000005c t nv50_ir::ValueDef::ValueDef(nv50_ir::ValueDef const&)
00000000005048b0 000000000000005c T nv50_ir::ValueDef::ValueDef(nv50_ir::ValueDef const&)
0000000000504910 00000000000000fc t nv50_ir::ValueDef::set(nv50_ir::Value*)
0000000000504a10 0000000000000008 t nv50_ir::ValueDef::~ValueDef()
0000000000504a10 0000000000000008 T nv50_ir::ValueDef::~ValueDef()
0000000000504a20 000000000000010c t std::deque<nv50_ir::ValueDef, std::allocator<nv50_ir::ValueDef> >::_M_destroy_data_aux(std::_Deque_iterator<nv50_ir::ValueDef, nv50_ir::ValueDef&, nv50_ir::ValueDef*>, std::_Deque_iterator<nv50_ir::ValueDef, nv50_ir::ValueDef&, nv50_ir::ValueDef*>) [clone .isra.0]
0000000000504b30 0000000000000214 t nv50_ir::ValueDef::mayReplace(nv50_ir::ValueRef const&)
0000000000504d50 000000000000005c T nv50_ir::Value::Value()
0000000000504d50 000000000000005c t nv50_ir::Value::Value()
0000000000504db0 0000000000000144 t nv50_ir::LValue::LValue(nv50_ir::Function*, nv50_ir::DataFile)
0000000000504db0 0000000000000144 T nv50_ir::LValue::LValue(nv50_ir::Function*, nv50_ir::DataFile)
0000000000504f00 000000000000014c t nv50_ir::LValue::LValue(nv50_ir::Function*, nv50_ir::LValue*)
0000000000504f00 000000000000014c T nv50_ir::LValue::LValue(nv50_ir::Function*, nv50_ir::LValue*)
0000000000505050 000000000000012c t nv50_ir::Symbol::Symbol(nv50_ir::Program*, nv50_ir::DataFile, unsigned char)
0000000000505050 000000000000012c T nv50_ir::Symbol::Symbol(nv50_ir::Program*, nv50_ir::DataFile, unsigned char)
0000000000505180 000000000000013c t nv50_ir::ImmediateValue::ImmediateValue(nv50_ir::Program*, unsigned int)
0000000000505180 000000000000013c T nv50_ir::ImmediateValue::ImmediateValue(nv50_ir::Program*, unsigned int)
00000000005052c0 000000000000013c t nv50_ir::ImmediateValue::ImmediateValue(nv50_ir::Program*, float)
00000000005052c0 000000000000013c T nv50_ir::ImmediateValue::ImmediateValue(nv50_ir::Program*, float)
0000000000505400 0000000000000134 t nv50_ir::ImmediateValue::ImmediateValue(nv50_ir::Program*, double)
0000000000505400 0000000000000134 T nv50_ir::ImmediateValue::ImmediateValue(nv50_ir::Program*, double)
0000000000505540 00000000000000e4 t nv50_ir::ImmediateValue::isInteger(int) const
0000000000505630 0000000000000070 t nv50_ir::ImmediateValue::isNegative() const
00000000005056a0 0000000000000038 t nv50_ir::ImmediateValue::isPow2() const
00000000005056e0 00000000000000b4 t nv50_ir::ImmediateValue::applyLog2()
00000000005057a0 0000000000000134 t nv50_ir::ImmediateValue::compare(nv50_ir::CondCode, float) const
00000000005058e0 0000000000000340 t nv50_ir::Instruction::defCount(unsigned int, bool) const
0000000000505c20 0000000000000340 t nv50_ir::Instruction::srcCount(unsigned int, bool) const
0000000000505f60 0000000000000408 t nv50_ir::Instruction::canCommuteDefSrc(nv50_ir::Instruction const*) const
0000000000506370 0000000000000408 t nv50_ir::Instruction::canCommuteDefDef(nv50_ir::Instruction const*) const
0000000000506780 0000000000000058 t nv50_ir::Instruction::isCommutationLegal(nv50_ir::Instruction const*) const
00000000005067e0 00000000000002b0 t nv50_ir::TexInstruction::translateImgFormat(pipe_format)
0000000000506a90 0000000000000134 t nv50_ir::Program::Program(nv50_ir::Program::Type, nv50_ir::Target*)
0000000000506a90 0000000000000134 T nv50_ir::Program::Program(nv50_ir::Program::Type, nv50_ir::Target*)
0000000000506bd0 00000000000000ac t nv50_ir::Program::releaseInstruction(nv50_ir::Instruction*)
0000000000506c80 0000000000000088 t nv50_ir::Program::releaseValue(nv50_ir::Value*)
0000000000506d10 0000000000000114 t std::_Deque_base<nv50_ir::ValueDef, std::allocator<nv50_ir::ValueDef> >::_M_initialize_map(unsigned long)
0000000000506e30 0000000000000114 t std::_Deque_base<nv50_ir::ValueRef, std::allocator<nv50_ir::ValueRef> >::_M_initialize_map(unsigned long)
0000000000506f50 0000000000000164 t nv50_ir::Instruction::Instruction(nv50_ir::Function*, nv50_ir::operation, nv50_ir::DataType)
0000000000506f50 0000000000000164 t nv50_ir::Instruction::Instruction(nv50_ir::Function*, nv50_ir::operation, nv50_ir::DataType)
00000000005070c0 0000000000000038 t nv50_ir::CmpInstruction::CmpInstruction(nv50_ir::Function*, nv50_ir::operation)
00000000005070c0 0000000000000038 T nv50_ir::CmpInstruction::CmpInstruction(nv50_ir::Function*, nv50_ir::operation)
0000000000507100 00000000000000c8 t nv50_ir::FlowInstruction::FlowInstruction(nv50_ir::Function*, nv50_ir::operation, void*)
0000000000507100 00000000000000c8 T nv50_ir::FlowInstruction::FlowInstruction(nv50_ir::Function*, nv50_ir::operation, void*)
00000000005071d0 00000000000000ec t nv50_ir::TexInstruction::TexInstruction(nv50_ir::Function*, nv50_ir::operation)
00000000005071d0 00000000000000ec T nv50_ir::TexInstruction::TexInstruction(nv50_ir::Function*, nv50_ir::operation)
00000000005072c0 0000000000000340 t std::deque<nv50_ir::ValueDef, std::allocator<nv50_ir::ValueDef> >::_M_default_append(unsigned long)
0000000000507600 0000000000000350 t nv50_ir::Instruction::setDef(int, nv50_ir::Value*)
0000000000507950 0000000000000348 t std::deque<nv50_ir::ValueRef, std::allocator<nv50_ir::ValueRef> >::_M_default_append(unsigned long)
0000000000507ca0 00000000000001b0 t std::_Hashtable<nv50_ir::ValueRef*, nv50_ir::ValueRef*, std::allocator<nv50_ir::ValueRef*>, std::__detail::_Identity, std::equal_to<nv50_ir::ValueRef*>, std::hash<nv50_ir::ValueRef*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_insert_unique_node(unsigned long, unsigned long, std::__detail::_Hash_node<nv50_ir::ValueRef*, false>*, unsigned long)
0000000000507e50 00000000000001c8 t nv50_ir::ValueRef::set(nv50_ir::Value*)
0000000000508020 0000000000000010 t nv50_ir::ValueRef::ValueRef(nv50_ir::Value*)
0000000000508020 0000000000000010 T nv50_ir::ValueRef::ValueRef(nv50_ir::Value*)
0000000000508030 0000000000000008 t nv50_ir::ValueRef::~ValueRef()
0000000000508030 0000000000000008 T nv50_ir::ValueRef::~ValueRef()
0000000000508040 0000000000000040 t nv50_ir::ValueRef::set(nv50_ir::ValueRef const&)
0000000000508080 00000000000000cc t nv50_ir::ValueDef::replace(nv50_ir::ValueRef const&, bool)
0000000000508150 000000000000010c t std::deque<nv50_ir::ValueRef, std::allocator<nv50_ir::ValueRef> >::_M_destroy_data_aux(std::_Deque_iterator<nv50_ir::ValueRef, nv50_ir::ValueRef&, nv50_ir::ValueRef*>, std::_Deque_iterator<nv50_ir::ValueRef, nv50_ir::ValueRef&, nv50_ir::ValueRef*>) [clone .isra.0]
0000000000508260 0000000000000350 t nv50_ir::Instruction::setSrc(int, nv50_ir::Value*)
00000000005085b0 00000000000000e8 t nv50_ir::Instruction::setSrc(int, nv50_ir::ValueRef const&)
00000000005086a0 0000000000000370 t nv50_ir::Instruction::setIndirect(int, int, nv50_ir::Value*)
0000000000508a10 000000000000020c t nv50_ir::Instruction::setPredicate(nv50_ir::CondCode, nv50_ir::Value*)
0000000000508c20 0000000000000074 t nv50_ir::Instruction::putExtraSources(int, nv50_ir::Value**)
0000000000508ca0 0000000000000154 t nv50_ir::TexInstruction::setIndirectR(nv50_ir::Value*)
0000000000508e00 0000000000000154 t nv50_ir::TexInstruction::setIndirectS(nv50_ir::Value*)
0000000000508f60 000000000000037c t nv50_ir::Instruction::swapSources(int, int)
00000000005092e0 0000000000000714 t nv50_ir::Instruction::moveSources(int, int)
0000000000509a00 000000000000052c t nv50_ir::Instruction::~Instruction()
0000000000509a00 000000000000052c t nv50_ir::Instruction::~Instruction()
0000000000509f30 0000000000000028 T nv50_ir::Instruction::~Instruction()
0000000000509f60 00000000000000fc t nv50_ir::TexInstruction::~TexInstruction()
0000000000509f60 00000000000000fc T nv50_ir::TexInstruction::~TexInstruction()
000000000050a060 0000000000000028 T nv50_ir::TexInstruction::~TexInstruction()
000000000050a090 0000000000000010 W nv50_ir::FlowInstruction::~FlowInstruction()
000000000050a090 0000000000000010 W nv50_ir::FlowInstruction::~FlowInstruction()
000000000050a0a0 0000000000000034 W nv50_ir::FlowInstruction::~FlowInstruction()
000000000050a0e0 0000000000000010 W nv50_ir::CmpInstruction::~CmpInstruction()
000000000050a0e0 0000000000000010 W nv50_ir::CmpInstruction::~CmpInstruction()
000000000050a0f0 0000000000000034 W nv50_ir::CmpInstruction::~CmpInstruction()
000000000050a130 0000000000000048 t nv50_ir::ValueRef::ValueRef(nv50_ir::ValueRef const&)
000000000050a130 0000000000000048 T nv50_ir::ValueRef::ValueRef(nv50_ir::ValueRef const&)
000000000050a180 00000000000003f0 t nv50_ir::Instruction::takeExtraSources(int, nv50_ir::Value**)
000000000050a570 00000000000000a8 W std::_Rb_tree<void const*, std::pair<void const* const, void*>, std::_Select1st<std::pair<void const* const, void*> >, std::less<void const*>, std::allocator<std::pair<void const* const, void*> > >::_M_get_insert_unique_pos(void const* const&)
000000000050a620 0000000000000114 W std::_Rb_tree<void const*, std::pair<void const* const, void*>, std::_Select1st<std::pair<void const* const, void*> >, std::less<void const*>, std::allocator<std::pair<void const* const, void*> > >::_M_get_insert_hint_unique_pos(std::_Rb_tree_const_iterator<std::pair<void const* const, void*> >, void const* const&)
000000000050a740 00000000000000c0 t std::_Rb_tree_iterator<std::pair<void const* const, void*> > std::_Rb_tree<void const*, std::pair<void const* const, void*>, std::_Select1st<std::pair<void const* const, void*> >, std::less<void const*>, std::allocator<std::pair<void const* const, void*> > >::_M_emplace_hint_unique<std::piecewise_construct_t const&, std::tuple<void const* const&>, std::tuple<> >(std::_Rb_tree_const_iterator<std::pair<void const* const, void*> >, std::piecewise_construct_t const&, std::tuple<void const* const&>&&, std::tuple<>&&) [clone .isra.0]
000000000050a800 00000000000000ac W nv50_ir::DeepClonePolicy<nv50_ir::Function>::insert(void const*, void*)
000000000050a8b0 00000000000000a0 W nv50_ir::DeepClonePolicy<nv50_ir::Function>::lookup(void*)
000000000050a950 00000000000002d8 T nv50_ir::ImmediateValue::clone(nv50_ir::ClonePolicy<nv50_ir::Function>&) const
000000000050ac30 00000000000002e0 T nv50_ir::Symbol::clone(nv50_ir::ClonePolicy<nv50_ir::Function>&) const
000000000050af10 00000000000002f8 T nv50_ir::LValue::clone(nv50_ir::ClonePolicy<nv50_ir::Function>&) const
000000000050b210 0000000000000848 t nv50_ir::Instruction::clone(nv50_ir::ClonePolicy<nv50_ir::Function>&, nv50_ir::Instruction*) const
000000000050ba60 0000000000000274 T nv50_ir::TexInstruction::clone(nv50_ir::ClonePolicy<nv50_ir::Function>&, nv50_ir::Instruction*) const
000000000050bce0 000000000000017c T nv50_ir::CmpInstruction::clone(nv50_ir::ClonePolicy<nv50_ir::Function>&, nv50_ir::Instruction*) const
000000000050be60 00000000000002a8 T nv50_ir::FlowInstruction::clone(nv50_ir::ClonePolicy<nv50_ir::Function>&, nv50_ir::Instruction*) const
000000000050c110 0000000000000440 t nv50_ir::Program::~Program()
000000000050c110 0000000000000440 T nv50_ir::Program::~Program()
000000000050c550 00000000000002a4 t nv50_ir_generate_code
000000000050c800 0000000000000008 W nv50_ir::Pass::visit(nv50_ir::Function*)
000000000050c810 0000000000000008 W nv50_ir::Pass::visit(nv50_ir::BasicBlock*)
000000000050c820 0000000000000008 W nv50_ir::Pass::visit(nv50_ir::Instruction*)
000000000050c830 00000000000000f8 t std::deque<nv50_ir::ValueRef, std::allocator<nv50_ir::ValueRef> >::_M_destroy_data_aux(std::_Deque_iterator<nv50_ir::ValueRef, nv50_ir::ValueRef&, nv50_ir::ValueRef*>, std::_Deque_iterator<nv50_ir::ValueRef, nv50_ir::ValueRef&, nv50_ir::ValueRef*>) [clone .isra.0]
000000000050c930 00000000000000f8 t std::deque<nv50_ir::ValueDef, std::allocator<nv50_ir::ValueDef> >::_M_destroy_data_aux(std::_Deque_iterator<nv50_ir::ValueDef, nv50_ir::ValueDef&, nv50_ir::ValueDef*>, std::_Deque_iterator<nv50_ir::ValueDef, nv50_ir::ValueDef&, nv50_ir::ValueDef*>) [clone .isra.0]
000000000050ca30 000000000000027c t nv50_ir::Function::Function(nv50_ir::Program*, char const*, unsigned int)
000000000050ca30 000000000000027c T nv50_ir::Function::Function(nv50_ir::Program*, char const*, unsigned int)
000000000050ccb0 000000000000012c t nv50_ir::BasicBlock::BasicBlock(nv50_ir::Function*)
000000000050ccb0 000000000000012c T nv50_ir::BasicBlock::BasicBlock(nv50_ir::Function*)
000000000050cde0 000000000000002c t nv50_ir::BasicBlock::idom() const
000000000050ce10 0000000000000068 t nv50_ir::BasicBlock::insertBefore(nv50_ir::Instruction*, nv50_ir::Instruction*)
000000000050ce80 00000000000000a8 t nv50_ir::BasicBlock::insertHead(nv50_ir::Instruction*)
000000000050cf30 00000000000000c0 t nv50_ir::BasicBlock::insertTail(nv50_ir::Instruction*)
000000000050cff0 000000000000005c t nv50_ir::BasicBlock::insertAfter(nv50_ir::Instruction*, nv50_ir::Instruction*)
000000000050d050 00000000000000c8 t nv50_ir::BasicBlock::remove(nv50_ir::Instruction*)
000000000050d120 0000000000000088 t nv50_ir::BasicBlock::permuteAdjacent(nv50_ir::Instruction*, nv50_ir::Instruction*)
000000000050d1b0 00000000000000e8 t nv50_ir::BasicBlock::splitCommon(nv50_ir::Instruction*, nv50_ir::BasicBlock*, bool)
000000000050d2a0 0000000000000064 t nv50_ir::BasicBlock::splitBefore(nv50_ir::Instruction*, bool)
000000000050d310 000000000000006c t nv50_ir::BasicBlock::splitAfter(nv50_ir::Instruction*, bool)
000000000050d380 0000000000000050 t nv50_ir::BasicBlock::dominatedBy(nv50_ir::BasicBlock*)
000000000050d3d0 0000000000000090 t nv50_ir::BasicBlock::initiatesSimpleConditional() const
000000000050d460 000000000000002c t nv50_ir::Function::setEntry(nv50_ir::BasicBlock*)
000000000050d490 0000000000000020 t nv50_ir::Function::setExit(nv50_ir::BasicBlock*)
000000000050d4b0 0000000000000198 t nv50_ir::Function::orderInstructions(nv50_ir::ArrayList&)
000000000050d650 00000000000000d0 t nv50_ir::Function::buildLiveSets()
000000000050d720 00000000000000d0 t nv50_ir::Function::buildDefSets()
000000000050d7f0 0000000000000198 t nv50_ir::Pass::doRun(nv50_ir::Function*, bool, bool)
000000000050d990 0000000000000010 t nv50_ir::Pass::run(nv50_ir::Function*, bool, bool)
000000000050d9a0 00000000000000d8 t nv50_ir::Pass::doRun(nv50_ir::Program*, bool, bool)
000000000050da80 000000000000000c t nv50_ir::Pass::run(nv50_ir::Program*, bool, bool)
000000000050da90 00000000000000c0 t std::_Rb_tree_iterator<std::pair<void const* const, void*> > std::_Rb_tree<void const*, std::pair<void const* const, void*>, std::_Select1st<std::pair<void const* const, void*> >, std::less<void const*>, std::allocator<std::pair<void const* const, void*> > >::_M_emplace_hint_unique<std::piecewise_construct_t const&, std::tuple<void const* const&>, std::tuple<> >(std::_Rb_tree_const_iterator<std::pair<void const* const, void*> >, std::piecewise_construct_t const&, std::tuple<void const* const&>&&, std::tuple<>&&) [clone .isra.0]
000000000050db50 0000000000000230 t nv50_ir::BasicBlock::clone(nv50_ir::ClonePolicy<nv50_ir::Function>&) const
000000000050dd80 0000000000000584 t nv50_ir::Function::~Function()
000000000050dd80 0000000000000584 T nv50_ir::Function::~Function()
000000000050e310 0000000000000008 t (anonymous namespace)::Converter::BindArgumentsPass::visit(nv50_ir::BasicBlock*)
000000000050e320 0000000000000070 t _debug_printf
000000000050e390 000000000000006c t (anonymous namespace)::Converter::adjustTempIndex(int, int&, int&) const [clone .isra.0]
000000000050e400 0000000000000140 t std::_Rb_tree<int, std::pair<int const, std::pair<int, int> >, std::_Select1st<std::pair<int const, std::pair<int, int> > >, std::less<int>, std::allocator<std::pair<int const, std::pair<int, int> > > >::_M_erase(std::_Rb_tree_node<std::pair<int const, std::pair<int, int> > >*) [clone .isra.0]
000000000050e540 0000000000000140 t std::_Rb_tree<void const*, std::pair<void const* const, void*>, std::_Select1st<std::pair<void const* const, void*> >, std::less<void const*>, std::allocator<std::pair<void const* const, void*> > >::_M_erase(std::_Rb_tree_node<std::pair<void const* const, void*> >*) [clone .isra.0]
000000000050e680 0000000000000140 t std::_Rb_tree<int, int, std::_Identity<int>, std::less<int>, std::allocator<int> >::_M_erase(std::_Rb_tree_node<int>*) [clone .isra.0]
000000000050e7c0 0000000000000140 t std::_Rb_tree<nv50_ir::BuildUtil::Location, nv50_ir::BuildUtil::Location, std::_Identity<nv50_ir::BuildUtil::Location>, std::less<nv50_ir::BuildUtil::Location>, std::allocator<nv50_ir::BuildUtil::Location> >::_M_erase(std::_Rb_tree_node<nv50_ir::BuildUtil::Location>*) [clone .isra.0]
000000000050e900 0000000000000140 t std::_Rb_tree<nv50_ir::Value*, std::pair<nv50_ir::Value* const, nv50_ir::BuildUtil::Location>, std::_Select1st<std::pair<nv50_ir::Value* const, nv50_ir::BuildUtil::Location> >, std::less<nv50_ir::Value*>, std::allocator<std::pair<nv50_ir::Value* const, nv50_ir::BuildUtil::Location> > >::_M_erase(std::_Rb_tree_node<std::pair<nv50_ir::Value* const, nv50_ir::BuildUtil::Location> >*) [clone .isra.0]
000000000050ea40 0000000000000140 t std::_Rb_tree<nv50_ir::BuildUtil::Location, std::pair<nv50_ir::BuildUtil::Location const, nv50_ir::Value*>, std::_Select1st<std::pair<nv50_ir::BuildUtil::Location const, nv50_ir::Value*> >, std::less<nv50_ir::BuildUtil::Location>, std::allocator<std::pair<nv50_ir::BuildUtil::Location const, nv50_ir::Value*> > >::_M_erase(std::_Rb_tree_node<std::pair<nv50_ir::BuildUtil::Location const, nv50_ir::Value*> >*) [clone .isra.0]
000000000050eb80 0000000000000094 t std::_Rb_tree<unsigned int, std::pair<unsigned int const, nv50_ir::ConverterCommon::Subroutine>, std::_Select1st<std::pair<unsigned int const, nv50_ir::ConverterCommon::Subroutine> >, std::less<unsigned int>, std::allocator<std::pair<unsigned int const, nv50_ir::ConverterCommon::Subroutine> > >::_M_erase(std::_Rb_tree_node<std::pair<unsigned int const, nv50_ir::ConverterCommon::Subroutine> >*) [clone .isra.0]
000000000050ec20 0000000000000140 t std::_Rb_tree<int, std::pair<int const, int>, std::_Select1st<std::pair<int const, int> >, std::less<int>, std::allocator<std::pair<int const, int> > >::_M_erase(std::_Rb_tree_node<std::pair<int const, int> >*) [clone .isra.0]
000000000050ed60 0000000000000188 t (anonymous namespace)::Converter::shiftAddress(nv50_ir::Value*)
000000000050eef0 00000000000002d4 t (anonymous namespace)::Converter::makeSym(unsigned int, int, int, int, unsigned int)
000000000050f1d0 000000000000008c t (anonymous namespace)::Converter::srcToSym(tgsi::Instruction::SrcRegister, int)
000000000050f260 0000000000000258 t (anonymous namespace)::Converter::storeDst(tgsi::Instruction::DstRegister, int, nv50_ir::Value*, nv50_ir::Value*)
000000000050f4c0 00000000000006a4 t (anonymous namespace)::Converter::handleFBFETCH(nv50_ir::Value**)
000000000050fb70 0000000000000114 t nv50_ir::MemoryPool::allocate()
000000000050fc90 0000000000000140 t nv50_ir::BuildUtil::getScratch(int, nv50_ir::DataFile)
000000000050fdd0 0000000000000154 t nv50_ir::BuildUtil::getSSA(int, nv50_ir::DataFile)
000000000050ff30 0000000000000d60 t (anonymous namespace)::Converter::fetchSrc(tgsi::Instruction::SrcRegister, int, nv50_ir::Value*)
0000000000510c90 00000000000009a8 t (anonymous namespace)::Converter::fetchSrc(int, int)
0000000000511640 0000000000000204 t (anonymous namespace)::Converter::buildDot(int)
0000000000511850 00000000000001dc t nv50_ir::BuildUtil::mkOp(nv50_ir::operation, nv50_ir::DataType, nv50_ir::Value*)
0000000000511a30 0000000000000058 t tgsi::Instruction::texOffsetMask() const
0000000000511a90 00000000000001e0 t tgsi::Instruction::srcMask(unsigned int) const
0000000000511c70 0000000000000198 t tgsi::Instruction::inferDstType() const
0000000000511e10 0000000000000098 t tgsi::Instruction::getSetCond() const
0000000000511eb0 000000000000005c t tgsi::Instruction::checkDstSrcAliasing() const
0000000000511f10 00000000000000a0 t tgsi::Source::Source(nv50_ir_prog_info*)
0000000000511f10 00000000000000a0 T tgsi::Source::Source(nv50_ir_prog_info*)
0000000000511fb0 0000000000000148 t tgsi::Source::~Source()
0000000000511fb0 0000000000000148 T tgsi::Source::~Source()
0000000000512100 0000000000000184 t tgsi::Source::scanProperty(tgsi_full_property const*)
0000000000512290 0000000000000050 t tgsi::Source::scanImmediate(tgsi_full_immediate const*)
00000000005122e0 0000000000000084 t tgsi::Instruction::getTexture(tgsi::Source const*, int) const
0000000000512370 0000000000000204 t (anonymous namespace)::Converter::setTexRS(nv50_ir::TexInstruction*, unsigned int&, int, int)
0000000000512580 00000000000001f8 t (anonymous namespace)::Converter::handleTXQ(nv50_ir::Value**, nv50_ir::TexQuery, int)
0000000000512780 00000000000003f4 t (anonymous namespace)::Converter::handleTXF(nv50_ir::Value**, int, int) [clone .constprop.0]
0000000000512b80 00000000000000e4 t std::_Rb_tree<nv50_ir::BuildUtil::Location, std::pair<nv50_ir::BuildUtil::Location const, nv50_ir::Value*>, std::_Select1st<std::pair<nv50_ir::BuildUtil::Location const, nv50_ir::Value*> >, std::less<nv50_ir::BuildUtil::Location>, std::allocator<std::pair<nv50_ir::BuildUtil::Location const, nv50_ir::Value*> > >::find(nv50_ir::BuildUtil::Location const&) const
0000000000512c70 0000000000000190 t std::vector<tgsi::Source::TextureView, std::allocator<tgsi::Source::TextureView> >::_M_default_append(unsigned long)
0000000000512e00 0000000000000188 W std::vector<int, std::allocator<int> >::_M_default_append(unsigned long)
0000000000512f90 0000000000000190 t std::vector<tgsi::Source::MemoryFile, std::allocator<tgsi::Source::MemoryFile> >::_M_default_append(unsigned long)
0000000000513120 0000000000000134 W std::pair<std::_Rb_tree_iterator<std::pair<int const, int> >, bool> std::_Rb_tree<int, std::pair<int const, int>, std::_Select1st<std::pair<int const, int> >, std::less<int>, std::allocator<std::pair<int const, int> > >::_M_emplace_unique<std::pair<int, int> >(std::pair<int, int>&&)
0000000000513260 0000000000000188 t std::vector<nv50_ir::Value*, std::allocator<nv50_ir::Value*> >::_M_default_append(unsigned long)
00000000005133f0 00000000000005f0 W std::vector<bool, std::allocator<bool> >::_M_fill_insert(std::_Bit_iterator, unsigned long, bool)
00000000005139e0 00000000000000a8 W std::_Rb_tree<int, std::pair<int const, std::pair<int, int> >, std::_Select1st<std::pair<int const, std::pair<int, int> > >, std::less<int>, std::allocator<std::pair<int const, std::pair<int, int> > > >::_M_get_insert_unique_pos(int const&)
0000000000513a90 0000000000000114 W std::_Rb_tree<int, std::pair<int const, std::pair<int, int> >, std::_Select1st<std::pair<int const, std::pair<int, int> > >, std::less<int>, std::allocator<std::pair<int const, std::pair<int, int> > > >::_M_get_insert_hint_unique_pos(std::_Rb_tree_const_iterator<std::pair<int const, std::pair<int, int> > >, int const&)
0000000000513bb0 00000000000000cc W std::pair<std::_Rb_tree_iterator<std::pair<int const, std::pair<int, int> > >, bool> std::_Rb_tree<int, std::pair<int const, std::pair<int, int> >, std::_Select1st<std::pair<int const, std::pair<int, int> > >, std::less<int>, std::allocator<std::pair<int const, std::pair<int, int> > > >::_M_emplace_unique<std::pair<int, std::pair<unsigned int, unsigned int> > >(std::pair<int, std::pair<unsigned int, unsigned int> >&&)
0000000000513c80 0000000000000aa4 t tgsi::Source::scanDeclaration(tgsi_full_declaration const*)
0000000000514730 00000000000000a8 W std::_Rb_tree<int, int, std::_Identity<int>, std::less<int>, std::allocator<int> >::_M_get_insert_unique_pos(int const&)
00000000005147e0 00000000000000bc W std::pair<std::_Rb_tree_iterator<int>, bool> std::_Rb_tree<int, int, std::_Identity<int>, std::less<int>, std::allocator<int> >::_M_insert_unique<int>(int&&)
00000000005148a0 0000000000000278 t tgsi::Source::scanInstructionSrc(tgsi::Instruction const&, tgsi::Instruction::SrcRegister const&, unsigned int)
0000000000514b20 00000000000004b4 t tgsi::Source::scanInstruction(tgsi_full_instruction const*)
0000000000514fe0 00000000000005a8 t tgsi::Source::scanSource()
0000000000515590 0000000000000128 t void std::vector<nv50_ir::Value*, std::allocator<nv50_ir::Value*> >::_M_realloc_insert<nv50_ir::Value*>(__gnu_cxx::__normal_iterator<nv50_ir::Value**, std::vector<nv50_ir::Value*, std::allocator<nv50_ir::Value*> > >, nv50_ir::Value*&&)
00000000005156c0 000000000000015c t (anonymous namespace)::Converter::getImageCoords(std::vector<nv50_ir::Value*, std::allocator<nv50_ir::Value*> >&, int)
0000000000515820 0000000000000680 t (anonymous namespace)::Converter::handleLOAD(nv50_ir::Value**)
0000000000515ea0 0000000000000654 t (anonymous namespace)::Converter::handleSTORE()
0000000000516500 00000000000000e4 t std::_Rb_tree<nv50_ir::BuildUtil::Location, nv50_ir::BuildUtil::Location, std::_Identity<nv50_ir::BuildUtil::Location>, std::less<nv50_ir::BuildUtil::Location>, std::allocator<nv50_ir::BuildUtil::Location> >::find(nv50_ir::BuildUtil::Location const&) const
00000000005165f0 0000000000000c04 t (anonymous namespace)::Converter::BindArgumentsPass::visit(nv50_ir::Function*)
0000000000517200 00000000000000c0 t std::_Rb_tree_iterator<std::pair<void const* const, void*> > std::_Rb_tree<void const*, std::pair<void const* const, void*>, std::_Select1st<std::pair<void const* const, void*> >, std::less<void const*>, std::allocator<std::pair<void const* const, void*> > >::_M_emplace_hint_unique<std::piecewise_construct_t const&, std::tuple<void const* const&>, std::tuple<> >(std::_Rb_tree_const_iterator<std::pair<void const* const, void*> >, std::piecewise_construct_t const&, std::tuple<void const* const&>&&, std::tuple<>&&) [clone .isra.0]
00000000005172c0 00000000000002a8 t nv50_ir::cloneForward(nv50_ir::Function*, nv50_ir::Instruction*)
0000000000517570 0000000000000e44 t (anonymous namespace)::Converter::handleTEX(nv50_ir::Value**, int, int, int, int, int, int)
00000000005183c0 0000000000008704 t nv50_ir::Program::makeFromTGSI(nv50_ir_prog_info*)
0000000000520ad0 0000000000000010 W nv50_ir::DFSIterator::end() const
0000000000520ae0 0000000000000018 W nv50_ir::DFSIterator::next()
0000000000520b00 0000000000000010 W nv50_ir::DFSIterator::get() const
0000000000520b10 0000000000000008 W nv50_ir::DFSIterator::reset()
0000000000520b20 0000000000000010 W nv50_ir::CFGIterator::get() const
0000000000520b30 0000000000000010 W nv50_ir::CFGIterator::end() const
0000000000520b40 0000000000000018 W nv50_ir::CFGIterator::next()
0000000000520b60 0000000000000008 W nv50_ir::CFGIterator::reset()
0000000000520b70 0000000000000010 W nv50_ir::CFGIterator::~CFGIterator()
0000000000520b70 0000000000000010 W nv50_ir::CFGIterator::~CFGIterator()
0000000000520b80 0000000000000030 W nv50_ir::CFGIterator::~CFGIterator()
0000000000520bb0 0000000000000010 W nv50_ir::DFSIterator::~DFSIterator()
0000000000520bb0 0000000000000010 W nv50_ir::DFSIterator::~DFSIterator()
0000000000520bc0 0000000000000030 W nv50_ir::DFSIterator::~DFSIterator()
0000000000520bf0 0000000000000078 t _debug_printf.constprop.0
0000000000520c70 0000000000000014 t nv50_ir::Graph::Graph()
0000000000520c70 0000000000000014 t nv50_ir::Graph::Graph()
0000000000520c90 0000000000000034 t nv50_ir::Graph::insert(nv50_ir::Graph::Node*)
0000000000520cd0 0000000000000094 t nv50_ir::Graph::Edge::unlink()
0000000000520d70 0000000000000010 t nv50_ir::Graph::Node::Node(void*)
0000000000520d70 0000000000000010 t nv50_ir::Graph::Node::Node(void*)
0000000000520d80 000000000000006c t nv50_ir::Graph::Node::detach(nv50_ir::Graph::Node*)
0000000000520df0 0000000000000088 t nv50_ir::Graph::Node::cut()
0000000000520e80 00000000000004b8 t nv50_ir::DFSIterator::search(nv50_ir::Graph::Node*, bool, int)
0000000000521340 0000000000000114 t nv50_ir::Graph::iteratorDFS(bool)
0000000000521460 0000000000000078 t nv50_ir::Graph::~Graph()
0000000000521460 0000000000000078 t nv50_ir::Graph::~Graph()
00000000005214e0 0000000000000028 T nv50_ir::Graph::~Graph()
0000000000521510 000000000000024c t nv50_ir::CFGIterator::search(nv50_ir::Graph::Node*, int)
0000000000521760 00000000000000e4 t nv50_ir::Graph::iteratorCFG()
0000000000521850 0000000000000118 t nv50_ir::Graph::classifyDFS(nv50_ir::Graph::Node*, int&)
0000000000521970 00000000000000a8 t nv50_ir::Graph::classifyEdges()
0000000000521a20 0000000000000114 t nv50_ir::Graph::Node::attach(nv50_ir::Graph::Node*, nv50_ir::Graph::Edge::Type)
0000000000521b40 00000000000002b0 t nv50_ir::Graph::findLightestPathWeight(nv50_ir::Graph::Node*, nv50_ir::Graph::Node*, std::vector<int, std::allocator<int> > const&)
0000000000521df0 0000000000000008 W nv50_ir::Target::isPostMultiplySupported(nv50_ir::operation, float, int&) const
0000000000521e00 0000000000000040 T nv50_ir::FlatteningPass::visit(nv50_ir::Function*)
0000000000521e40 0000000000000008 W nv50_ir::ShallowClonePolicy<nv50_ir::Function>::lookup(void*)
0000000000521e50 0000000000000004 W nv50_ir::ShallowClonePolicy<nv50_ir::Function>::insert(void const*, void*)
0000000000521e60 00000000000001b8 t nv50_ir::Instruction::isActionEqual(nv50_ir::Instruction const*) const [clone .part.0]
0000000000522020 0000000000000078 t _debug_printf.constprop.0
00000000005220a0 0000000000000140 t std::_Rb_tree<void const*, std::pair<void const* const, void*>, std::_Select1st<std::pair<void const* const, void*> >, std::less<void const*>, std::allocator<std::pair<void const* const, void*> > >::_M_erase(std::_Rb_tree_node<std::pair<void const* const, void*> >*) [clone .isra.0]
00000000005221e0 000000000000012c t nv50_ir::post_ra_dead(nv50_ir::Instruction*)
0000000000522310 00000000000000c4 W nv50_ir::Value::~Value()
0000000000522310 00000000000000c4 t nv50_ir::Value::~Value()
00000000005223e0 00000000000000c0 W nv50_ir::Value::~Value()
00000000005224a0 0000000000000058 t nv50_ir::Value::getUniqueInsn() const
0000000000522500 00000000000000b8 t nv50_ir::Instruction::getPredicate() const
00000000005225c0 0000000000000190 t nv50_ir::Instruction::isDead() const
0000000000522750 000000000000010c t nv50_ir::Modifier::applyTo(nv50_ir::ImmediateValue&) const
0000000000522860 00000000000001b4 W nv50_ir::Value::Value(nv50_ir::Value const&)
0000000000522860 00000000000001b4 t nv50_ir::Value::Value(nv50_ir::Value const&)
0000000000522a20 0000000000000098 t nv50_ir::ConstantFolding::opnd3(nv50_ir::Instruction*, nv50_ir::ImmediateValue&)
0000000000522ac0 0000000000000078 t nv50_ir::MemoryOpt::reset()
0000000000522b40 000000000000014c t nv50_ir::MemoryOpt::getList(nv50_ir::Instruction const*)
0000000000522c90 0000000000000148 t nv50_ir::FlatteningPass::tryPropagateBranch(nv50_ir::BasicBlock*)
0000000000522de0 00000000000005c0 t nv50_ir::Program::optimizeSSA(int)
00000000005233a0 000000000000007c t nv50_ir::Program::optimizePostRA(int)
0000000000523420 0000000000000098 t std::_Deque_iterator<nv50_ir::ValueRef, nv50_ir::ValueRef&, nv50_ir::ValueRef*>::operator[](long) const
00000000005234c0 00000000000001a8 t nv50_ir::AlgebraicOpt::handleSLCT(nv50_ir::Instruction*)
0000000000523670 0000000000000150 t nv50_ir::updateLdStOffset(nv50_ir::Instruction*, int, nv50_ir::Function*)
00000000005237c0 0000000000000088 t nv50_ir::Instruction::srcExists(unsigned int) const
0000000000523850 0000000000000068 t nv50_ir::LoadPropagation::isAttribOrSharedLoad(nv50_ir::Instruction*)
00000000005238c0 0000000000000294 t nv50_ir::ConstantFolding::expr(nv50_ir::Instruction*, nv50_ir::ImmediateValue&, nv50_ir::ImmediateValue&, nv50_ir::ImmediateValue&)
0000000000523b60 00000000000001a0 t nv50_ir::ConstantFolding::unary(nv50_ir::Instruction*, nv50_ir::ImmediateValue const&)
0000000000523d00 0000000000000398 t nv50_ir::ConstantFolding::createMul(nv50_ir::DataType, nv50_ir::Value*, nv50_ir::Value*, long, nv50_ir::Value*)
00000000005240a0 000000000000029c t nv50_ir::AlgebraicOpt::handleABS(nv50_ir::Instruction*)
0000000000524340 000000000000020c t nv50_ir::AlgebraicOpt::handleRCP(nv50_ir::Instruction*)
0000000000524550 00000000000001c4 t nv50_ir::AlgebraicOpt::handleCVT_CVT(nv50_ir::Instruction*)
0000000000524720 00000000000000e0 t nv50_ir::LoadPropagation::isImmdLoad(nv50_ir::Instruction*)
0000000000524800 000000000000083c T nv50_ir::IndirectPropagation::visit(nv50_ir::BasicBlock*)
0000000000525040 00000000000001d0 t nv50_ir::ConstantFolding::findOriginForTestWithZero(nv50_ir::Value*)
0000000000525210 00000000000004f8 t nv50_ir::AlgebraicOpt::tryADDToMADOrSAD(nv50_ir::Instruction*, nv50_ir::operation)
0000000000525710 00000000000001d8 t nv50_ir::AlgebraicOpt::handleADD(nv50_ir::Instruction*)
00000000005258f0 000000000000044c t nv50_ir::AlgebraicOpt::handleCVT_EXTBF(nv50_ir::Instruction*)
0000000000525d40 0000000000000304 t nv50_ir::AlgebraicOpt::handleSUCLAMP(nv50_ir::Instruction*)
0000000000526050 00000000000002d0 t nv50_ir::LateAlgebraicOpt::tryADDToSHLADD(nv50_ir::Instruction*)
0000000000526320 0000000000000188 t nv50_ir::LateAlgebraicOpt::handleADD(nv50_ir::Instruction*)
00000000005264b0 00000000000001cc t nv50_ir::MemoryOpt::addRecord(nv50_ir::Instruction*)
0000000000526680 0000000000000258 t nv50_ir::MemoryOpt::Record::overlaps(nv50_ir::Instruction const*) const
00000000005268e0 0000000000000104 t nv50_ir::MemoryOpt::lockStores(nv50_ir::Instruction*)
00000000005269f0 0000000000000178 t nv50_ir::MemoryOpt::purgeRecords(nv50_ir::Instruction*, nv50_ir::DataFile)
0000000000526b70 00000000000004cc t nv50_ir::MemoryOpt::combineSt(nv50_ir::MemoryOpt::Record*, nv50_ir::Instruction*)
0000000000527040 00000000000002cc t nv50_ir::MemoryOpt::findRecord(nv50_ir::Instruction const*, bool, bool&) const
0000000000527310 0000000000000134 t nv50_ir::FlatteningPass::removeFlow(nv50_ir::Instruction*)
0000000000527450 0000000000000714 t nv50_ir::MemoryOpt::replaceStFromSt(nv50_ir::Instruction*, nv50_ir::MemoryOpt::Record*)
0000000000527b70 0000000000000348 t nv50_ir::LoadPropagation::checkSwapSrc01(nv50_ir::Instruction*)
0000000000527ec0 00000000000004e0 T nv50_ir::LoadPropagation::visit(nv50_ir::BasicBlock*)
00000000005283a0 0000000000000260 t nv50_ir::LateAlgebraicOpt::handleMULMAD(nv50_ir::Instruction*) [clone .part.0]
0000000000528600 000000000000008c T nv50_ir::LateAlgebraicOpt::visit(nv50_ir::Instruction*)
0000000000528690 0000000000000248 t nv50_ir::FlatteningPass::isConstantCondition(nv50_ir::Value*)
00000000005288e0 0000000000000098 t std::_Deque_iterator<nv50_ir::ValueDef, nv50_ir::ValueDef&, nv50_ir::ValueDef*>::operator[](long) const
0000000000528980 0000000000000088 t nv50_ir::Instruction::defExists(unsigned int) const
0000000000528a10 0000000000000444 T nv50_ir::ModifierFolding::visit(nv50_ir::BasicBlock*)
0000000000528e60 00000000000002a4 t nv50_ir::AlgebraicOpt::handleCVT_NEG(nv50_ir::Instruction*)
0000000000529110 0000000000000398 t nv50_ir::Split64BitOpPreRA::split64MulMad(nv50_ir::Function*, nv50_ir::Instruction*, nv50_ir::DataType)
00000000005294b0 0000000000000078 T nv50_ir::Split64BitOpPreRA::visit(nv50_ir::BasicBlock*)
0000000000529530 0000000000000520 t nv50_ir::MemoryOpt::combineLd(nv50_ir::MemoryOpt::Record*, nv50_ir::Instruction*)
0000000000529a50 00000000000001b4 t nv50_ir::Instruction::isNop() const
0000000000529c10 0000000000000184 t nv50_ir::FlatteningPass::predicateInstructions(nv50_ir::BasicBlock*, nv50_ir::Value*, nv50_ir::CondCode)
0000000000529da0 00000000000001ec T nv50_ir::CopyPropagation::visit(nv50_ir::BasicBlock*)
0000000000529f90 00000000000001d4 T nv50_ir::MergeSplits::visit(nv50_ir::BasicBlock*)
000000000052a170 000000000000023c t nv50_ir::AlgebraicOpt::handleMINMAX(nv50_ir::Instruction*)
000000000052a3b0 00000000000003f8 t nv50_ir::ConstantFolding::tryCollapseChainedMULs(nv50_ir::Instruction*, int, nv50_ir::ImmediateValue&)
000000000052a7b0 00000000000028b8 t nv50_ir::ConstantFolding::opnd(nv50_ir::Instruction*, nv50_ir::ImmediateValue&, int)
000000000052d070 00000000000002e0 t nv50_ir::AlgebraicOpt::handleNEG(nv50_ir::Instruction*)
000000000052d350 0000000000000278 t nv50_ir::AlgebraicOpt::handleEXTBF_RDSV(nv50_ir::Instruction*)
000000000052d5d0 0000000000000328 t nv50_ir::PostRaLoadPropagation::handleMADforNV50(nv50_ir::Instruction*)
000000000052d900 0000000000000294 t nv50_ir::PostRaLoadPropagation::handleMADforNVC0(nv50_ir::Instruction*)
000000000052dba0 0000000000000054 T nv50_ir::PostRaLoadPropagation::visit(nv50_ir::Instruction*)
000000000052dc00 0000000000000930 t nv50_ir::ConstantFolding::expr(nv50_ir::Instruction*, nv50_ir::ImmediateValue&, nv50_ir::ImmediateValue&)
000000000052e530 00000000000005e8 T nv50_ir::ConstantFolding::visit(nv50_ir::BasicBlock*)
000000000052eb20 0000000000000578 t nv50_ir::MemoryOpt::replaceLdFromSt(nv50_ir::Instruction*, nv50_ir::MemoryOpt::Record*)
000000000052f0a0 00000000000005a0 t nv50_ir::MemoryOpt::replaceLdFromLd(nv50_ir::Instruction*, nv50_ir::MemoryOpt::Record*)
000000000052f640 000000000000044c t nv50_ir::MemoryOpt::runOpt(nv50_ir::BasicBlock*)
000000000052fa90 0000000000000044 T nv50_ir::MemoryOpt::visit(nv50_ir::BasicBlock*)
000000000052fae0 000000000000060c t nv50_ir::FlatteningPass::tryPredicateConditional(nv50_ir::BasicBlock*)
00000000005300f0 000000000000015c T nv50_ir::FlatteningPass::visit(nv50_ir::BasicBlock*)
0000000000530250 0000000000000910 t nv50_ir::DeadCodeElim::checkSplitLoad(nv50_ir::Instruction*)
0000000000530b60 00000000000002bc T nv50_ir::DeadCodeElim::visit(nv50_ir::BasicBlock*)
0000000000530e20 0000000000000654 t nv50_ir::Instruction::isResultEqual(nv50_ir::Instruction const*) const
0000000000531480 000000000000040c T nv50_ir::GlobalCSE::visit(nv50_ir::BasicBlock*)
0000000000531890 00000000000008f8 T nv50_ir::LocalCSE::visit(nv50_ir::BasicBlock*)
0000000000532190 00000000000000c0 t std::_Rb_tree_iterator<std::pair<void const* const, void*> > std::_Rb_tree<void const*, std::pair<void const* const, void*>, std::_Select1st<std::pair<void const* const, void*> >, std::less<void const*>, std::allocator<std::pair<void const* const, void*> > >::_M_emplace_hint_unique<std::piecewise_construct_t const&, std::tuple<void const* const&>, std::tuple<> >(std::_Rb_tree_const_iterator<std::pair<void const* const, void*> >, std::piecewise_construct_t const&, std::tuple<void const* const&>&&, std::tuple<>&&) [clone .isra.0]
0000000000532250 000000000000049c t nv50_ir::AlgebraicOpt::handleLOGOP(nv50_ir::Instruction*)
00000000005326f0 00000000000001b0 T nv50_ir::AlgebraicOpt::visit(nv50_ir::BasicBlock*)
00000000005328a0 0000000000000070 t _debug_printf
0000000000532910 0000000000000174 t nv50_ir::Modifier::print(char*, unsigned long) const
0000000000532a90 00000000000001e4 T nv50_ir::LValue::print(char*, unsigned long, nv50_ir::DataType) const
0000000000532c80 0000000000000230 T nv50_ir::ImmediateValue::print(char*, unsigned long, nv50_ir::DataType) const
0000000000532eb0 0000000000000270 t nv50_ir::Symbol::print(char*, unsigned long, nv50_ir::Value*, nv50_ir::Value*, nv50_ir::DataType) const
0000000000533120 0000000000000010 T nv50_ir::Symbol::print(char*, unsigned long, nv50_ir::DataType) const
0000000000533130 0000000000001420 t nv50_ir::Instruction::print() const
0000000000534550 0000000000000040 t nv50_ir::value_cmp(nv50_ir::ValueRef*, nv50_ir::ValueRef*)
0000000000534590 0000000000000070 t _debug_printf
0000000000534600 0000000000000168 t nv50_ir::RegAlloc::InsertConstraintsPass::isScalarTexGM107(nv50_ir::TexInstruction*) [clone .part.0]
0000000000534770 00000000000001d8 t nv50_ir::GCRA::checkInterference(nv50_ir::GCRA::RIG_Node const*, nv50_ir::Graph::EdgeIterator&) [clone .isra.0]
0000000000534950 0000000000000134 t nv50_ir::isShortRegOp(nv50_ir::Instruction*) [clone .part.0]
0000000000534a90 00000000000000a0 t nv50_ir::RegisterSet::init(nv50_ir::Target const*)
0000000000534b30 0000000000000068 t nv50_ir::RegisterSet::RegisterSet(nv50_ir::Target const*)
0000000000534b30 0000000000000068 T nv50_ir::RegisterSet::RegisterSet(nv50_ir::Target const*)
0000000000534ba0 0000000000000074 t nv50_ir::RegisterSet::testOccupy(nv50_ir::DataFile, int, unsigned int)
0000000000534c20 0000000000001304 T nv50_ir::RegAlloc::ArgumentMovesPass::visit(nv50_ir::BasicBlock*)
0000000000535f30 00000000000000a0 t nv50_ir::RegAlloc::BuildIntervalsPass::addLiveRange(nv50_ir::Value*, nv50_ir::BasicBlock const*, int)
0000000000535fd0 00000000000005c4 t nv50_ir::RegAlloc::buildLiveSets(nv50_ir::BasicBlock*)
00000000005365a0 00000000000000d4 t nv50_ir::RegAlloc::BuildIntervalsPass::collectLiveValues(nv50_ir::BasicBlock*)
0000000000536680 000000000000097c T nv50_ir::RegAlloc::BuildIntervalsPass::visit(nv50_ir::BasicBlock*)
0000000000537000 0000000000000310 t nv50_ir::GCRA::RIG_Node::init(nv50_ir::RegisterSet const&, nv50_ir::LValue*)
0000000000537310 000000000000034c t nv50_ir::GCRA::coalesceValues(nv50_ir::Value*, nv50_ir::Value*, bool)
0000000000537660 0000000000000428 t nv50_ir::GCRA::makeCompound(nv50_ir::Instruction*, bool)
0000000000537a90 0000000000000178 t nv50_ir::GCRA::GCRA(nv50_ir::Function*, nv50_ir::SpillCodeInserter&)
0000000000537a90 0000000000000178 T nv50_ir::GCRA::GCRA(nv50_ir::Function*, nv50_ir::SpillCodeInserter&)
0000000000537c10 0000000000000570 t nv50_ir::GCRA::buildRIG(nv50_ir::ArrayList&)
0000000000538180 000000000000018c t nv50_ir::GCRA::calculateSpillWeights()
0000000000538310 0000000000000098 t nv50_ir::GCRA::simplifyEdge(nv50_ir::GCRA::RIG_Node*, nv50_ir::GCRA::RIG_Node*)
00000000005383b0 0000000000000270 t nv50_ir::GCRA::simplifyNode(nv50_ir::GCRA::RIG_Node*)
0000000000538620 0000000000000144 t nv50_ir::GCRA::simplify()
0000000000538770 0000000000000370 t nv50_ir::SpillCodeInserter::assignSlot(nv50_ir::Interval const&, unsigned int)
0000000000538ae0 0000000000000348 t nv50_ir::GCRA::selectRegisters()
0000000000538e30 0000000000000080 t nv50_ir::SpillCodeInserter::offsetSlot(nv50_ir::Value*, nv50_ir::LValue const*)
0000000000538eb0 0000000000000770 t nv50_ir::SpillCodeInserter::spill(nv50_ir::Instruction*, nv50_ir::Value*, nv50_ir::LValue*)
0000000000539620 000000000000075c t nv50_ir::SpillCodeInserter::unspill(nv50_ir::Instruction*, nv50_ir::LValue*, nv50_ir::Value*)
0000000000539d80 000000000000056c t nv50_ir::GCRA::resolveSplitsAndMerges()
000000000053a2f0 0000000000000328 t nv50_ir::GCRA::cleanup(bool)
000000000053a620 00000000000001a0 t nv50_ir::RegAlloc::InsertConstraintsPass::textureMask(nv50_ir::TexInstruction*)
000000000053a7c0 0000000000000154 t nv50_ir::RegAlloc::InsertConstraintsPass::addHazard(nv50_ir::Instruction*, nv50_ir::ValueRef const*)
000000000053a920 00000000000007dc t nv50_ir::RegAlloc::InsertConstraintsPass::condenseDefs(nv50_ir::Instruction*, int, int)
000000000053b100 0000000000000138 t nv50_ir::RegAlloc::InsertConstraintsPass::condenseDefs(nv50_ir::Instruction*)
000000000053b240 0000000000000584 t nv50_ir::RegAlloc::InsertConstraintsPass::condenseSrcs(nv50_ir::Instruction*, int, int)
000000000053b7d0 0000000000000114 t nv50_ir::RegAlloc::InsertConstraintsPass::handleScalarTexGM107(nv50_ir::TexInstruction*)
000000000053b8f0 00000000000004e8 t nv50_ir::RegAlloc::InsertConstraintsPass::texConstraintGM107(nv50_ir::TexInstruction*)
000000000053bde0 0000000000000398 t nv50_ir::RegAlloc::InsertConstraintsPass::texConstraintNVE0(nv50_ir::TexInstruction*)
000000000053c180 00000000000001c0 t nv50_ir::RegAlloc::InsertConstraintsPass::texConstraintNVC0(nv50_ir::TexInstruction*)
000000000053c340 0000000000000d04 t nv50_ir::GCRA::doCoalesce(nv50_ir::ArrayList&, unsigned int)
000000000053d050 0000000000000110 t nv50_ir::GCRA::coalesce(nv50_ir::ArrayList&)
000000000053d160 0000000000000c04 t nv50_ir::RegAlloc::InsertConstraintsPass::insertConstraintMove(nv50_ir::Instruction*, int)
000000000053dd70 00000000000004cc t nv50_ir::RegAlloc::InsertConstraintsPass::insertConstraintMoves()
000000000053e240 0000000000000090 t nv50_ir::RegAlloc::InsertConstraintsPass::exec(nv50_ir::Function*)
000000000053e2d0 00000000000008dc t nv50_ir::RegAlloc::InsertConstraintsPass::texConstraintNV50(nv50_ir::TexInstruction*)
000000000053ebb0 0000000000000450 T nv50_ir::RegAlloc::InsertConstraintsPass::visit(nv50_ir::BasicBlock*)
000000000053f000 000000000000006c W std::_Deque_base<nv50_ir::BasicBlock*, std::allocator<nv50_ir::BasicBlock*> >::~_Deque_base()
000000000053f000 000000000000006c t std::_Deque_base<nv50_ir::BasicBlock*, std::allocator<nv50_ir::BasicBlock*> >::~_Deque_base()
000000000053f070 000000000000007c t std::_Hashtable<std::pair<nv50_ir::Instruction*, nv50_ir::BasicBlock*>, std::pair<std::pair<nv50_ir::Instruction*, nv50_ir::BasicBlock*> const, nv50_ir::Value*>, std::allocator<std::pair<std::pair<nv50_ir::Instruction*, nv50_ir::BasicBlock*> const, nv50_ir::Value*> >, std::__detail::_Select1st, std::equal_to<std::pair<nv50_ir::Instruction*, nv50_ir::BasicBlock*> >, nv50_ir::PhiMapHash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::_M_find_before_node(unsigned long, std::pair<nv50_ir::Instruction*, nv50_ir::BasicBlock*> const&, unsigned long) const
000000000053f0f0 0000000000000244 t std::pair<std::__detail::_Node_iterator<std::pair<std::pair<nv50_ir::Instruction*, nv50_ir::BasicBlock*> const, nv50_ir::Value*>, false, true>, bool> std::_Hashtable<std::pair<nv50_ir::Instruction*, nv50_ir::BasicBlock*>, std::pair<std::pair<nv50_ir::Instruction*, nv50_ir::BasicBlock*> const, nv50_ir::Value*>, std::allocator<std::pair<std::pair<nv50_ir::Instruction*, nv50_ir::BasicBlock*> const, nv50_ir::Value*> >, std::__detail::_Select1st, std::equal_to<std::pair<nv50_ir::Instruction*, nv50_ir::BasicBlock*> >, nv50_ir::PhiMapHash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::_M_emplace<std::pair<std::pair<nv50_ir::Instruction*, nv50_ir::BasicBlock*>, nv50_ir::Value*> >(std::integral_constant<bool, true>, std::pair<std::pair<nv50_ir::Instruction*, nv50_ir::BasicBlock*>, nv50_ir::Value*>&&) [clone .isra.0]
000000000053f340 0000000000000710 t nv50_ir::RegAlloc::PhiMovesPass::splitEdges(nv50_ir::BasicBlock*)
000000000053fa50 000000000000065c T nv50_ir::RegAlloc::PhiMovesPass::visit(nv50_ir::BasicBlock*)
00000000005400b0 00000000000000d0 t void std::__insertion_sort<__gnu_cxx::__normal_iterator<nv50_ir::ValueRef**, std::vector<nv50_ir::ValueRef*, std::allocator<nv50_ir::ValueRef*> > >, __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(nv50_ir::ValueRef*, nv50_ir::ValueRef*)> >(__gnu_cxx::__normal_iterator<nv50_ir::ValueRef**, std::vector<nv50_ir::ValueRef*, std::allocator<nv50_ir::ValueRef*> > >, __gnu_cxx::__normal_iterator<nv50_ir::ValueRef**, std::vector<nv50_ir::ValueRef*, std::allocator<nv50_ir::ValueRef*> > >, __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(nv50_ir::ValueRef*, nv50_ir::ValueRef*)>)
0000000000540180 0000000000000180 t void std::__adjust_heap<__gnu_cxx::__normal_iterator<nv50_ir::ValueRef**, std::vector<nv50_ir::ValueRef*, std::allocator<nv50_ir::ValueRef*> > >, long, nv50_ir::ValueRef*, __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(nv50_ir::ValueRef*, nv50_ir::ValueRef*)> >(__gnu_cxx::__normal_iterator<nv50_ir::ValueRef**, std::vector<nv50_ir::ValueRef*, std::allocator<nv50_ir::ValueRef*> > >, long, long, nv50_ir::ValueRef*, __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(nv50_ir::ValueRef*, nv50_ir::ValueRef*)>)
0000000000540300 0000000000000208 t void std::__introsort_loop<__gnu_cxx::__normal_iterator<nv50_ir::ValueRef**, std::vector<nv50_ir::ValueRef*, std::allocator<nv50_ir::ValueRef*> > >, long, __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(nv50_ir::ValueRef*, nv50_ir::ValueRef*)> >(__gnu_cxx::__normal_iterator<nv50_ir::ValueRef**, std::vector<nv50_ir::ValueRef*, std::allocator<nv50_ir::ValueRef*> > >, __gnu_cxx::__normal_iterator<nv50_ir::ValueRef**, std::vector<nv50_ir::ValueRef*, std::allocator<nv50_ir::ValueRef*> > >, long, __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(nv50_ir::ValueRef*, nv50_ir::ValueRef*)>)
0000000000540510 00000000000006f4 t nv50_ir::SpillCodeInserter::run(std::__cxx11::list<std::pair<nv50_ir::Value*, nv50_ir::Value*>, std::allocator<std::pair<nv50_ir::Value*, nv50_ir::Value*> > > const&)
0000000000540c10 00000000000004e4 t nv50_ir::GCRA::allocateRegisters(nv50_ir::ArrayList&)
0000000000541100 0000000000000230 t nv50_ir::GCRA::~GCRA()
0000000000541100 0000000000000230 T nv50_ir::GCRA::~GCRA()
0000000000541330 00000000000003d4 t nv50_ir::RegAlloc::execFunc()
0000000000541710 00000000000000d4 t nv50_ir::RegAlloc::exec()
00000000005417f0 000000000000005c t nv50_ir::Program::registerAllocation()
0000000000541850 0000000000000010 W nv50_ir::DominatorTree::~DominatorTree()
0000000000541850 0000000000000010 W nv50_ir::DominatorTree::~DominatorTree()
0000000000541860 0000000000000034 W nv50_ir::DominatorTree::~DominatorTree()
00000000005418a0 0000000000000090 t nv50_ir::DominatorTree::buildDFS(nv50_ir::Graph::Node*)
0000000000541930 00000000000000ac t nv50_ir::DominatorTree::squash(int)
00000000005419e0 000000000000036c t nv50_ir::DominatorTree::build()
0000000000541d50 0000000000000154 t nv50_ir::DominatorTree::DominatorTree(nv50_ir::Graph*)
0000000000541d50 0000000000000154 T nv50_ir::DominatorTree::DominatorTree(nv50_ir::Graph*)
0000000000541eb0 000000000000017c t nv50_ir::DominatorTree::findDominanceFrontiers()
0000000000542030 00000000000004e8 t nv50_ir::Function::buildLiveSetsPreSSA(nv50_ir::BasicBlock*, int)
0000000000542520 00000000000001e0 t nv50_ir::Function::buildDefSetsPreSSA(nv50_ir::BasicBlock*, int)
0000000000542700 0000000000000078 t nv50_ir::RenamePass::RenamePass(nv50_ir::Function*)
0000000000542700 0000000000000078 T nv50_ir::RenamePass::RenamePass(nv50_ir::Function*)
0000000000542780 0000000000000074 t nv50_ir::RenamePass::~RenamePass()
0000000000542780 0000000000000074 T nv50_ir::RenamePass::~RenamePass()
0000000000542800 00000000000002f8 t nv50_ir::RenamePass::mkUndefined(nv50_ir::Value*)
0000000000542b00 0000000000000dac t nv50_ir::RenamePass::search(nv50_ir::BasicBlock*)
00000000005438b0 0000000000000544 t nv50_ir::Function::convertToSSA()
0000000000543e00 00000000000000a4 t nv50_ir::Program::convertToSSA()
0000000000543eb0 0000000000000070 t _debug_printf
0000000000543f20 00000000000000c0 t nv50_ir::CodeEmitter::prepareEmission(nv50_ir::Function*)
0000000000543fe0 0000000000000390 T nv50_ir::CodeEmitter::prepareEmission(nv50_ir::BasicBlock*)
0000000000544370 0000000000000164 T nv50_ir::CodeEmitter::prepareEmission(nv50_ir::Program*)
00000000005444e0 0000000000000048 t nv50_ir::Target::create(unsigned int)
0000000000544530 0000000000000018 t nv50_ir::Target::destroy(nv50_ir::Target*)
0000000000544550 0000000000000014 T nv50_ir::CodeEmitter::CodeEmitter(nv50_ir::Target const*)
0000000000544550 0000000000000014 t nv50_ir::CodeEmitter::CodeEmitter(nv50_ir::Target const*)
0000000000544570 00000000000000ec t nv50_ir::Program::emitSymbolTable(nv50_ir_prog_info*)
0000000000544660 000000000000023c t nv50_ir::Program::emitBinary(nv50_ir_prog_info*)
00000000005448a0 00000000000000fc t nv50_ir::CodeEmitter::addReloc(nv50_ir::RelocEntry::Type, int, unsigned int, unsigned int, int)
00000000005449a0 00000000000000ec t nv50_ir::CodeEmitter::addInterp(int, int, void (*)(nv50_ir::FixupEntry const*, unsigned int*, nv50_ir::FixupData const&))
0000000000544a90 00000000000000c0 t nv50_ir_relocate_code
0000000000544b50 0000000000000084 t nv50_ir_apply_fixups
0000000000544be0 000000000000008c t nv50_ir_get_target_library
0000000000544c70 000000000000000c W nv50_ir::DLList::Iterator::get() const
0000000000544c80 0000000000000010 W nv50_ir::DLList::Iterator::end() const
0000000000544c90 0000000000000004 W nv50_ir::DLList::Iterator::~Iterator()
0000000000544c90 0000000000000004 W nv50_ir::DLList::Iterator::~Iterator()
0000000000544ca0 0000000000000030 t nv50_ir::DLList::Iterator::erase()
0000000000544cd0 0000000000000008 W nv50_ir::DLList::Iterator::~Iterator()
0000000000544ce0 0000000000000068 t nv50_ir::DLList::Iterator::insert(void*)
0000000000544d50 0000000000000070 t _debug_printf
0000000000544dc0 000000000000007c W nv50_ir::DLList::Iterator::next()
0000000000544e40 0000000000000048 t nv50_ir::DLList::clear()
0000000000544e90 0000000000000090 t nv50_ir::Stack::moveTo(nv50_ir::Stack&)
0000000000544f20 0000000000000038 t nv50_ir::Interval::~Interval()
0000000000544f20 0000000000000038 T nv50_ir::Interval::~Interval()
0000000000544f60 000000000000003c t nv50_ir::Interval::clear()
0000000000544fa0 0000000000000184 t nv50_ir::Interval::extend(int, int)
0000000000545130 0000000000000040 t nv50_ir::Interval::Interval(nv50_ir::Interval const&)
0000000000545130 0000000000000040 T nv50_ir::Interval::Interval(nv50_ir::Interval const&)
0000000000545170 0000000000000090 t nv50_ir::Interval::overlaps(nv50_ir::Interval const&) const
0000000000545200 0000000000000038 t nv50_ir::Interval::insert(nv50_ir::Interval const&)
0000000000545240 0000000000000058 t nv50_ir::Interval::unify(nv50_ir::Interval&)
00000000005452a0 000000000000006c t nv50_ir::Interval::print() const
0000000000545310 0000000000000048 t nv50_ir::BitSet::andNot(nv50_ir::BitSet const&)
0000000000545360 0000000000000048 t nv50_ir::BitSet::operator|=(nv50_ir::BitSet const&)
00000000005453b0 00000000000000c8 t nv50_ir::BitSet::allocate(unsigned int, bool)
0000000000545480 0000000000000058 t nv50_ir::BitSet::popCount() const
00000000005454e0 0000000000000050 t nv50_ir::BitSet::fill(unsigned int)
0000000000545530 0000000000000068 t nv50_ir::BitSet::setOr(nv50_ir::BitSet*, nv50_ir::BitSet*)
00000000005455a0 0000000000000210 t nv50_ir::BitSet::findFreeRange(unsigned int, unsigned int) const
00000000005457b0 0000000000000018 T nv50_ir::TargetGM107::getBuiltinCode(unsigned int const**, unsigned int*) const
00000000005457d0 0000000000000010 T nv50_ir::TargetGM107::getBuiltinOffset(int) const
00000000005457e0 000000000000006c T nv50_ir::TargetGM107::isOpSupported(nv50_ir::operation, nv50_ir::DataType) const
0000000000545850 0000000000000058 T nv50_ir::TargetGM107::isReuseSupported(nv50_ir::Instruction const*) const
00000000005458b0 0000000000000008 T nv50_ir::TargetGM107::canDualIssue(nv50_ir::Instruction const*, nv50_ir::Instruction const*) const
00000000005458c0 000000000000000c T nv50_ir::TargetGM107::isCS2RSV(nv50_ir::SVSemantic) const
00000000005458d0 0000000000000004 W nv50_ir::TargetGM107::~TargetGM107()
00000000005458d0 0000000000000004 W nv50_ir::TargetGM107::~TargetGM107()
00000000005458e0 0000000000000004 T nv50_ir::TargetGM107::getCodeEmitter(nv50_ir::Program::Type)
00000000005458f0 0000000000000008 W nv50_ir::TargetGM107::~TargetGM107()
0000000000545900 0000000000000118 T nv50_ir::TargetGM107::runLegalizePass(nv50_ir::Program*, nv50_ir::CGStage) const
0000000000545a20 00000000000002a4 T nv50_ir::TargetGM107::getReadLatency(nv50_ir::Instruction const*) const
0000000000545cd0 0000000000000330 T nv50_ir::TargetGM107::isBarrierRequired(nv50_ir::Instruction const*) const
0000000000546000 0000000000000338 T nv50_ir::TargetGM107::getLatency(nv50_ir::Instruction const*) const
0000000000546340 0000000000000040 t nv50_ir::getTargetGM107(unsigned int)
0000000000546380 000000000000006c T nv50_ir::TargetNVC0::getBuiltinCode(unsigned int const**, unsigned int*) const
00000000005463f0 0000000000000054 T nv50_ir::TargetNVC0::getBuiltinOffset(int) const
0000000000546450 0000000000000150 t nv50_ir::TargetNVC0::initProps(nv50_ir::opProperties const*, int)
00000000005465a0 00000000000002f4 t nv50_ir::TargetNVC0::initOpInfo()
00000000005468a0 0000000000000034 T nv50_ir::TargetNVC0::TargetNVC0(unsigned int)
00000000005468a0 0000000000000034 t nv50_ir::TargetNVC0::TargetNVC0(unsigned int)
00000000005468e0 00000000000000c8 T nv50_ir::TargetNVC0::getFileSize(nv50_ir::DataFile) const
00000000005469b0 0000000000000018 T nv50_ir::TargetNVC0::getFileUnit(nv50_ir::DataFile) const
00000000005469d0 00000000000000f0 T nv50_ir::TargetNVC0::getSVAddress(nv50_ir::DataFile, nv50_ir::Symbol const*) const
0000000000546ac0 00000000000007bc T nv50_ir::TargetNVC0::insnCanLoad(nv50_ir::Instruction const*, int, nv50_ir::Instruction const*) const
0000000000547280 00000000000000ec T nv50_ir::TargetNVC0::insnCanLoadOffset(nv50_ir::Instruction const*, int, int) const
0000000000547370 0000000000000084 T nv50_ir::TargetNVC0::isAccessSupported(nv50_ir::DataFile, nv50_ir::DataType) const
0000000000547400 0000000000000034 T nv50_ir::TargetNVC0::isOpSupported(nv50_ir::operation, nv50_ir::DataType) const
0000000000547440 0000000000000324 T nv50_ir::TargetNVC0::isModSupported(nv50_ir::Instruction const*, int, nv50_ir::Modifier) const
0000000000547770 00000000000000c8 T nv50_ir::TargetNVC0::mayPredicate(nv50_ir::Instruction const*, nv50_ir::Value const*) const
0000000000547840 0000000000000134 T nv50_ir::TargetNVC0::isSatSupported(nv50_ir::Instruction const*) const
0000000000547980 0000000000000078 T nv50_ir::TargetNVC0::isPostMultiplySupported(nv50_ir::operation, float, int&) const
0000000000547a00 0000000000000170 T nv50_ir::TargetNVC0::getLatency(nv50_ir::Instruction const*) const
0000000000547b70 0000000000000090 T nv50_ir::TargetNVC0::getThroughput(nv50_ir::Instruction const*) const
0000000000547c00 00000000000002ec T nv50_ir::TargetNVC0::canDualIssue(nv50_ir::Instruction const*, nv50_ir::Instruction const*) const
0000000000547ef0 000000000000005c t nvc0_decoder_bsp_begin
0000000000547f50 00000000000001d8 t nvc0_decoder_bsp_next
0000000000548130 00000000000003a0 t nvc0_decoder_bsp_end
00000000005484d0 0000000000000040 t util_hash_crc32
0000000000548510 00000000000001ec t _mesa_parse_arb_fragment_program
0000000000548700 0000000000000140 t _mesa_parse_arb_vertex_program
0000000000548840 00000000000000d0 t clear_cache
0000000000548910 0000000000000094 t rehash
00000000005489b0 000000000000005c t _mesa_new_program_cache
0000000000548a10 0000000000000030 t _mesa_delete_program_cache
0000000000548a40 0000000000000030 t _mesa_delete_shader_cache
0000000000548a70 00000000000000f0 t _mesa_search_program_cache
0000000000548b60 0000000000000120 t _mesa_program_cache_insert
0000000000548c80 0000000000000120 t _mesa_shader_cache_insert
0000000000548da0 00000000000000c0 t _mesa_init_instructions
0000000000548e60 000000000000002c t _mesa_copy_instructions
0000000000548e90 000000000000001c t _mesa_num_inst_src_regs
0000000000548eb0 000000000000001c t _mesa_num_inst_dst_regs
0000000000548ed0 0000000000000060 t _mesa_opcode_string
0000000000548f30 0000000000000080 t get_value.isra.0
0000000000548fb0 0000000000000708 t _mesa_constant_fold
00000000005496c0 00000000000000c0 t yytnamerr
0000000000549780 0000000000000280 t yysyntax_error
0000000000549a00 00000000000000a0 t asm_instruction_set_operands
0000000000549aa0 0000000000000084 t add_state_reference
0000000000549b30 0000000000000108 t initialize_symbol_from_state
0000000000549c40 0000000000000100 t initialize_symbol_from_param
0000000000549d40 00000000000000ec t make_error_string
0000000000549e30 00000000000000a4 t yyerror
0000000000549ee0 0000000000000088 t validate_inputs
0000000000549f70 0000000000000150 t declare_variable
000000000054a0c0 00000000000000ac t asm_instruction_ctor.constprop.0
000000000054a170 0000000000003184 t yyparse.isra.0
000000000054d300 0000000000000340 t _mesa_parse_arb_program
000000000054d640 00000000000000a4 t init_velement_64bit
000000000054d6f0 00000000000004e4 T st_update_array
000000000054dbe0 0000000000000140 t st_bind_atomics
000000000054dd20 00000000000000c8 t st_bind_hw_atomic_buffers.part.0
000000000054ddf0 0000000000000018 T st_bind_vs_atomics
000000000054de10 0000000000000018 T st_bind_fs_atomics
000000000054de30 0000000000000018 T st_bind_gs_atomics
000000000054de50 0000000000000018 T st_bind_tcs_atomics
000000000054de70 0000000000000018 T st_bind_tes_atomics
000000000054de90 0000000000000024 T st_bind_cs_atomics
000000000054dec0 0000000000000010 T st_bind_hw_atomic_buffers
000000000054ded0 0000000000000198 t translate_blend
000000000054e070 00000000000004c8 T st_update_blend
000000000054e540 0000000000000034 T st_update_blend_color
000000000054e580 0000000000000004 W ir_expression_flattening_visitor::~ir_expression_flattening_visitor()
000000000054e580 0000000000000004 W ir_expression_flattening_visitor::~ir_expression_flattening_visitor()
000000000054e590 0000000000000008 W ir_expression_flattening_visitor::~ir_expression_flattening_visitor()
000000000054e5a0 0000000000000134 T ir_expression_flattening_visitor::handle_rvalue(ir_rvalue**)
000000000054e6e0 000000000000007c t do_expression_flattening(exec_list*, bool (*)(ir_instruction*))
000000000054e760 0000000000000024 t prolog
000000000054e790 000000000000008c t report_error
000000000054e820 00000000000000b4 t iter_immediate
000000000054e8e0 0000000000000070 t regs_hash_destroy
000000000054e950 0000000000000074 t iter_property
000000000054e9d0 0000000000000090 t report_warning.constprop.0
000000000054ea60 00000000000001ec t check_register_usage.isra.0
000000000054ec50 00000000000002e8 t iter_instruction
000000000054ef40 000000000000010c t epilog
000000000054f050 00000000000000a0 t check_and_declare
000000000054f0f0 00000000000001c8 t iter_declaration
000000000054f2c0 000000000000010c t tgsi_sanity_check
000000000054f3d0 0000000000000070 t nouveau_vp3_bsp_begin
000000000054f440 0000000000000090 t nouveau_vp3_bsp_next
000000000054f4d0 000000000000034c t nouveau_vp3_bsp_end
000000000054f820 00000000000000fc t nouveau_vp3_handle_references
000000000054f920 00000000000001a4 t nouveau_vp3_fill_picparm_mpeg4_vp
000000000054fad0 0000000000000478 t nouveau_vp3_fill_picparm_h264_vp
000000000054ff50 00000000000005fc t nouveau_vp3_vp_caps
0000000000550550 0000000000000140 t std::_Rb_tree<void const*, std::pair<void const* const, void*>, std::_Select1st<std::pair<void const* const, void*> >, std::less<void const*>, std::allocator<std::pair<void const* const, void*> > >::_M_erase(std::_Rb_tree_node<std::pair<void const* const, void*> >*) [clone .isra.0]
0000000000550690 0000000000000038 t nv50_ir::BuildUtil::BuildUtil()
0000000000550690 0000000000000038 T nv50_ir::BuildUtil::BuildUtil()
00000000005506d0 000000000000003c T nv50_ir::BuildUtil::BuildUtil(nv50_ir::Program*)
00000000005506d0 000000000000003c t nv50_ir::BuildUtil::BuildUtil(nv50_ir::Program*)
0000000000550710 0000000000000228 t nv50_ir::BuildUtil::mkOp1(nv50_ir::operation, nv50_ir::DataType, nv50_ir::Value*, nv50_ir::Value*)
0000000000550940 0000000000000240 t nv50_ir::BuildUtil::mkOp2(nv50_ir::operation, nv50_ir::DataType, nv50_ir::Value*, nv50_ir::Value*, nv50_ir::Value*)
0000000000550b80 0000000000000284 t nv50_ir::BuildUtil::mkOp3(nv50_ir::operation, nv50_ir::DataType, nv50_ir::Value*, nv50_ir::Value*, nv50_ir::Value*, nv50_ir::Value*)
0000000000550e10 0000000000000230 t nv50_ir::BuildUtil::mkLoad(nv50_ir::DataType, nv50_ir::Value*, nv50_ir::Symbol*, nv50_ir::Value*)
0000000000551040 0000000000000238 t nv50_ir::BuildUtil::mkStore(nv50_ir::operation, nv50_ir::DataType, nv50_ir::Symbol*, nv50_ir::Value*, nv50_ir::Value*)
0000000000551280 00000000000001dc t nv50_ir::BuildUtil::mkFetch(nv50_ir::Value*, nv50_ir::DataType, nv50_ir::DataFile, int, nv50_ir::Value*, nv50_ir::Value*)
0000000000551460 00000000000001dc t nv50_ir::BuildUtil::mkInterp(unsigned int, nv50_ir::Value*, int, nv50_ir::Value*)
0000000000551640 0000000000000210 t nv50_ir::BuildUtil::mkMov(nv50_ir::Value*, nv50_ir::Value*, nv50_ir::DataType)
0000000000551850 0000000000000418 t nv50_ir::BuildUtil::mkMovToReg(int, nv50_ir::Value*)
0000000000551c70 0000000000000420 t nv50_ir::BuildUtil::mkMovFromReg(nv50_ir::Value*, int)
0000000000552090 0000000000000234 t nv50_ir::BuildUtil::mkCvt(nv50_ir::operation, nv50_ir::DataType, nv50_ir::Value*, nv50_ir::DataType, nv50_ir::Value*)
00000000005522d0 0000000000000288 t nv50_ir::BuildUtil::mkCmp(nv50_ir::operation, nv50_ir::CondCode, nv50_ir::DataType, nv50_ir::Value*, nv50_ir::DataType, nv50_ir::Value*, nv50_ir::Value*, nv50_ir::Value*)
0000000000552560 00000000000002a0 t nv50_ir::BuildUtil::mkTex(nv50_ir::operation, nv50_ir::TexTarget, unsigned short, unsigned short, std::vector<nv50_ir::Value*, std::allocator<nv50_ir::Value*> > const&, std::vector<nv50_ir::Value*, std::allocator<nv50_ir::Value*> > const&)
0000000000552800 0000000000000044 t nv50_ir::BuildUtil::mkQuadop(unsigned char, nv50_ir::Value*, unsigned char, nv50_ir::Value*, nv50_ir::Value*)
0000000000552850 0000000000000568 t nv50_ir::BuildUtil::mkSplit(nv50_ir::Value**, unsigned char, nv50_ir::Value*)
0000000000552dc0 0000000000000218 t nv50_ir::BuildUtil::mkFlow(nv50_ir::operation, void*, nv50_ir::CondCode, nv50_ir::Value*)
0000000000552fe0 00000000000004c4 t nv50_ir::BuildUtil::mkClobber(nv50_ir::DataFile, unsigned int, int)
00000000005534b0 000000000000021c t nv50_ir::BuildUtil::mkImm(unsigned int)
00000000005536d0 0000000000000008 t nv50_ir::BuildUtil::mkImm(float)
00000000005536e0 000000000000015c t nv50_ir::BuildUtil::mkImm(double)
0000000000553840 0000000000000170 t nv50_ir::BuildUtil::loadImm(nv50_ir::Value*, float)
00000000005539b0 0000000000000298 t nv50_ir::BuildUtil::loadImm(nv50_ir::Value*, double)
0000000000553c50 0000000000000170 t nv50_ir::BuildUtil::loadImm(nv50_ir::Value*, unsigned int)
0000000000553dc0 0000000000000180 t nv50_ir::BuildUtil::mkSymbol(nv50_ir::DataFile, signed char, nv50_ir::DataType, unsigned int)
0000000000553f40 0000000000000198 t nv50_ir::BuildUtil::mkSysVal(nv50_ir::SVSemantic, unsigned int)
00000000005540e0 000000000000019c t nv50_ir::BuildUtil::DataArray::setup(unsigned int, unsigned int, unsigned int, int, int, int, nv50_ir::DataFile, signed char)
0000000000554280 00000000000001a0 t nv50_ir::BuildUtil::DataArray::mkSymbol(int, int)
0000000000554420 0000000000000138 t std::pair<std::_Rb_tree_iterator<std::pair<nv50_ir::Value* const, nv50_ir::BuildUtil::Location> >, bool> std::_Rb_tree<nv50_ir::Value*, std::pair<nv50_ir::Value* const, nv50_ir::BuildUtil::Location>, std::_Select1st<std::pair<nv50_ir::Value* const, nv50_ir::BuildUtil::Location> >, std::less<nv50_ir::Value*>, std::allocator<std::pair<nv50_ir::Value* const, nv50_ir::BuildUtil::Location> > >::_M_emplace_unique<std::pair<nv50_ir::Value*, nv50_ir::BuildUtil::Location> >(std::pair<nv50_ir::Value*, nv50_ir::BuildUtil::Location>&&)
0000000000554560 0000000000000158 t std::_Rb_tree<nv50_ir::BuildUtil::Location, std::pair<nv50_ir::BuildUtil::Location const, nv50_ir::Value*>, std::_Select1st<std::pair<nv50_ir::BuildUtil::Location const, nv50_ir::Value*> >, std::less<nv50_ir::BuildUtil::Location>, std::allocator<std::pair<nv50_ir::BuildUtil::Location const, nv50_ir::Value*> > >::_M_get_insert_unique_pos(nv50_ir::BuildUtil::Location const&)
00000000005546c0 000000000000011c t std::pair<std::_Rb_tree_iterator<std::pair<nv50_ir::BuildUtil::Location const, nv50_ir::Value*> >, bool> std::_Rb_tree<nv50_ir::BuildUtil::Location, std::pair<nv50_ir::BuildUtil::Location const, nv50_ir::Value*>, std::_Select1st<std::pair<nv50_ir::BuildUtil::Location const, nv50_ir::Value*> >, std::less<nv50_ir::BuildUtil::Location>, std::allocator<std::pair<nv50_ir::BuildUtil::Location const, nv50_ir::Value*> > >::_M_emplace_unique<std::pair<nv50_ir::BuildUtil::Location, nv50_ir::Value*> >(std::pair<nv50_ir::BuildUtil::Location, nv50_ir::Value*>&&)
00000000005547e0 0000000000000358 t nv50_ir::BuildUtil::DataArray::acquire(nv50_ir::bimap<nv50_ir::BuildUtil::Location, nv50_ir::Value*>&, int, int)
0000000000554b40 000000000000054c t nv50_ir::BuildUtil::DataArray::load(nv50_ir::bimap<nv50_ir::BuildUtil::Location, nv50_ir::Value*>&, int, int, nv50_ir::Value*)
0000000000555090 0000000000000328 t nv50_ir::BuildUtil::DataArray::store(nv50_ir::bimap<nv50_ir::BuildUtil::Location, nv50_ir::Value*>&, int, int, nv50_ir::Value*, nv50_ir::Value*)
00000000005553c0 00000000000000c0 t std::_Rb_tree_iterator<std::pair<void const* const, void*> > std::_Rb_tree<void const*, std::pair<void const* const, void*>, std::_Select1st<std::pair<void const* const, void*> >, std::less<void const*>, std::allocator<std::pair<void const* const, void*> > >::_M_emplace_hint_unique<std::piecewise_construct_t const&, std::tuple<void const* const&>, std::tuple<> >(std::_Rb_tree_const_iterator<std::pair<void const* const, void*> >, std::piecewise_construct_t const&, std::tuple<void const* const&>&&, std::tuple<>&&) [clone .isra.0]
0000000000555480 0000000000000b2c t nv50_ir::BuildUtil::split64BitOpPostRA(nv50_ir::Function*, nv50_ir::Instruction*, nv50_ir::Value*, nv50_ir::Value*)
0000000000555fb0 00000000000000c8 t std::_Rb_tree_node<std::pair<nv50_ir::BuildUtil::Location const, nv50_ir::Value*> >* std::_Rb_tree<nv50_ir::BuildUtil::Location, std::pair<nv50_ir::BuildUtil::Location const, nv50_ir::Value*>, std::_Select1st<std::pair<nv50_ir::BuildUtil::Location const, nv50_ir::Value*> >, std::less<nv50_ir::BuildUtil::Location>, std::allocator<std::pair<nv50_ir::BuildUtil::Location const, nv50_ir::Value*> > >::_M_copy<false, std::_Rb_tree<nv50_ir::BuildUtil::Location, std::pair<nv50_ir::BuildUtil::Location const, nv50_ir::Value*>, std::_Select1st<std::pair<nv50_ir::BuildUtil::Location const, nv50_ir::Value*> >, std::less<nv50_ir::BuildUtil::Location>, std::allocator<std::pair<nv50_ir::BuildUtil::Location const, nv50_ir::Value*> > >::_Alloc_node>(std::_Rb_tree_node<std::pair<nv50_ir::BuildUtil::Location const, nv50_ir::Value*> >*, std::_Rb_tree_node_base*, std::_Rb_tree<nv50_ir::BuildUtil::Location, std::pair<nv50_ir::BuildUtil::Location const, nv50_ir::Value*>, std::_Select1st<std::pair<nv50_ir::BuildUtil::Location const, nv50_ir::Value*> >, std::less<nv50_ir::BuildUtil::Location>, std::allocator<std::pair<nv50_ir::BuildUtil::Location const, nv50_ir::Value*> > >::_Alloc_node&) [clone .isra.0]
0000000000556080 00000000000000c8 t std::_Rb_tree_node<std::pair<nv50_ir::Value* const, nv50_ir::BuildUtil::Location> >* std::_Rb_tree<nv50_ir::Value*, std::pair<nv50_ir::Value* const, nv50_ir::BuildUtil::Location>, std::_Select1st<std::pair<nv50_ir::Value* const, nv50_ir::BuildUtil::Location> >, std::less<nv50_ir::Value*>, std::allocator<std::pair<nv50_ir::Value* const, nv50_ir::BuildUtil::Location> > >::_M_copy<false, std::_Rb_tree<nv50_ir::Value*, std::pair<nv50_ir::Value* const, nv50_ir::BuildUtil::Location>, std::_Select1st<std::pair<nv50_ir::Value* const, nv50_ir::BuildUtil::Location> >, std::less<nv50_ir::Value*>, std::allocator<std::pair<nv50_ir::Value* const, nv50_ir::BuildUtil::Location> > >::_Alloc_node>(std::_Rb_tree_node<std::pair<nv50_ir::Value* const, nv50_ir::BuildUtil::Location> >*, std::_Rb_tree_node_base*, std::_Rb_tree<nv50_ir::Value*, std::pair<nv50_ir::Value* const, nv50_ir::BuildUtil::Location>, std::_Select1st<std::pair<nv50_ir::Value* const, nv50_ir::BuildUtil::Location> >, std::less<nv50_ir::Value*>, std::allocator<std::pair<nv50_ir::Value* const, nv50_ir::BuildUtil::Location> > >::_Alloc_node&) [clone .isra.0]
0000000000556150 0000000000000140 t std::_Rb_tree<nv50_ir::Value*, std::pair<nv50_ir::Value* const, nv50_ir::BuildUtil::Location>, std::_Select1st<std::pair<nv50_ir::Value* const, nv50_ir::BuildUtil::Location> >, std::less<nv50_ir::Value*>, std::allocator<std::pair<nv50_ir::Value* const, nv50_ir::BuildUtil::Location> > >::_M_erase(std::_Rb_tree_node<std::pair<nv50_ir::Value* const, nv50_ir::BuildUtil::Location> >*) [clone .isra.0]
0000000000556290 0000000000000140 t std::_Rb_tree<nv50_ir::BuildUtil::Location, std::pair<nv50_ir::BuildUtil::Location const, nv50_ir::Value*>, std::_Select1st<std::pair<nv50_ir::BuildUtil::Location const, nv50_ir::Value*> >, std::less<nv50_ir::BuildUtil::Location>, std::allocator<std::pair<nv50_ir::BuildUtil::Location const, nv50_ir::Value*> > >::_M_erase(std::_Rb_tree_node<std::pair<nv50_ir::BuildUtil::Location const, nv50_ir::Value*> >*) [clone .isra.0]
00000000005563d0 000000000000003c T nv50_ir::ConverterCommon::ConverterCommon(nv50_ir::Program*, nv50_ir_prog_info*)
00000000005563d0 000000000000003c t nv50_ir::ConverterCommon::ConverterCommon(nv50_ir::Program*, nv50_ir_prog_info*)
0000000000556410 0000000000000080 t nv50_ir::ConverterCommon::translateInterpMode(nv50_ir_varying const*, nv50_ir::operation&)
0000000000556490 0000000000000414 t nv50_ir::ConverterCommon::handleUserClipPlanes()
00000000005568b0 000000000000025c t std::pair<std::_Rb_tree_iterator<std::pair<unsigned int const, nv50_ir::ConverterCommon::Subroutine> >, bool> std::_Rb_tree<unsigned int, std::pair<unsigned int const, nv50_ir::ConverterCommon::Subroutine>, std::_Select1st<std::pair<unsigned int const, nv50_ir::ConverterCommon::Subroutine> >, std::less<unsigned int>, std::allocator<std::pair<unsigned int const, nv50_ir::ConverterCommon::Subroutine> > >::_M_emplace_unique<std::pair<unsigned int, nv50_ir::ConverterCommon::Subroutine> >(std::pair<unsigned int, nv50_ir::ConverterCommon::Subroutine>&&)
0000000000556b10 0000000000000160 t nv50_ir::ConverterCommon::getSubroutine(unsigned int)
0000000000556c70 0000000000000130 t nv50_ir::ConverterCommon::getSubroutine(nv50_ir::Function*)
0000000000556da0 000000000000002c t nv50_ir::selpFlip(nv50_ir::FixupEntry const*, unsigned int*, nv50_ir::FixupData const&)
0000000000556dd0 00000000000000a0 t nv50_ir::interpApply(nv50_ir::FixupEntry const*, unsigned int*, nv50_ir::FixupData const&)
0000000000556e70 0000000000000008 T nv50_ir::CodeEmitterGM107::getMinEncodingSize(nv50_ir::Instruction const*) const
0000000000556e80 0000000000000004 W nv50_ir::CodeEmitterGM107::~CodeEmitterGM107()
0000000000556e80 0000000000000004 W nv50_ir::CodeEmitterGM107::~CodeEmitterGM107()
0000000000556e90 0000000000000070 t _debug_printf
0000000000556f00 0000000000000008 W nv50_ir::CodeEmitterGM107::~CodeEmitterGM107()
0000000000556f10 0000000000000064 T nv50_ir::CodeEmitterGM107::prepareEmission(nv50_ir::Function*)
0000000000556f80 0000000000000160 T nv50_ir::CodeEmitterGM107::prepareEmission(nv50_ir::Program*)
00000000005570e0 0000000000000048 t nv50_ir::CodeEmitterGM107::emitGPR(int, nv50_ir::ValueRef const&) [clone .isra.0]
0000000000557130 0000000000000048 t nv50_ir::CodeEmitterGM107::emitGPR(int, nv50_ir::ValueDef const&) [clone .isra.0]
0000000000557180 00000000000000b8 t nv50_ir::CodeEmitterGM107::emitIMMD(int, int, nv50_ir::ValueRef const&) [clone .isra.0]
0000000000557240 00000000000000ac t nv50_ir::CodeEmitterGM107::emitLDSTs(int, nv50_ir::DataType)
00000000005572f0 0000000000000078 t nv50_ir::CodeEmitterGM107::emitSUTarget()
0000000000557370 0000000000000074 t nv50_ir::SchedDataCalculatorGM107::recordWr(nv50_ir::Value const*, int, int)
00000000005573f0 00000000000000a4 t nv50_ir::SchedDataCalculatorGM107::checkRd(nv50_ir::Value const*, int, int&) const
00000000005574a0 0000000000000150 t nv50_ir::SchedDataCalculatorGM107::commitInsn(nv50_ir::Instruction const*, int)
00000000005575f0 000000000000013c t nv50_ir::SchedDataCalculatorGM107::calcDelay(nv50_ir::Instruction const*, int) const
0000000000557730 0000000000000174 t nv50_ir::SchedDataCalculatorGM107::setDelay(nv50_ir::Instruction*, int, nv50_ir::Instruction const*)
00000000005578b0 0000000000000294 t nv50_ir::SchedDataCalculatorGM107::needWrDepBar(nv50_ir::Instruction const*) const
0000000000557b50 0000000000000064 t nv50_ir::TargetGM107::createCodeEmitterGM107(nv50_ir::Program::Type)
0000000000557bc0 0000000000000080 t nv50_ir::CodeEmitterGM107::emitPred()
0000000000557c40 0000000000000054 t nv50_ir::CodeEmitterGM107::emitDEPBAR()
0000000000557ca0 000000000000015c t nv50_ir::CodeEmitterGM107::emitSUHandle(int)
0000000000557e00 0000000000000128 t nv50_ir::CodeEmitterGM107::emitSUSTx()
0000000000557f30 0000000000000128 t nv50_ir::CodeEmitterGM107::emitISBERD()
0000000000558060 00000000000000ec t nv50_ir::CodeEmitterGM107::emitCBUF(int, int, int, int, int, nv50_ir::ValueRef const&) [clone .constprop.0]
0000000000558150 00000000000000f4 t nv50_ir::CodeEmitterGM107::emitSTS()
0000000000558250 0000000000000104 t nv50_ir::CodeEmitterGM107::emitTEXs(int)
0000000000558360 0000000000000118 t nv50_ir::CodeEmitterGM107::emitSTL()
0000000000558480 0000000000000124 t nv50_ir::CodeEmitterGM107::emitPRET()
00000000005585b0 0000000000000124 t nv50_ir::CodeEmitterGM107::emitSSY()
00000000005586e0 0000000000000124 t nv50_ir::CodeEmitterGM107::emitPBK()
0000000000558810 0000000000000124 t nv50_ir::CodeEmitterGM107::emitPCNT()
0000000000558940 000000000000016c t nv50_ir::CodeEmitterGM107::emitRED()
0000000000558ab0 0000000000000170 t nv50_ir::CodeEmitterGM107::emitST()
0000000000558c20 0000000000000180 t nv50_ir::CodeEmitterGM107::emitAST()
0000000000558da0 000000000000016c t nv50_ir::CodeEmitterGM107::emitCCTL()
0000000000558f10 00000000000001b4 t nv50_ir::CodeEmitterGM107::emitCAL()
00000000005590d0 00000000000001e0 t nv50_ir::CodeEmitterGM107::emitBRA()
00000000005592b0 0000000000000200 t nv50_ir::CodeEmitterGM107::emitBAR()
00000000005594b0 000000000000007c t nv50_ir::CodeEmitterGM107::emitCONT()
0000000000559530 000000000000007c t nv50_ir::CodeEmitterGM107::emitEXIT()
00000000005595b0 000000000000007c t nv50_ir::CodeEmitterGM107::emitRET()
0000000000559630 000000000000007c t nv50_ir::CodeEmitterGM107::emitBRK()
00000000005596b0 000000000000007c t nv50_ir::CodeEmitterGM107::emitSYNC()
0000000000559730 000000000000007c t nv50_ir::CodeEmitterGM107::emitKIL()
00000000005597b0 0000000000000070 t nv50_ir::CodeEmitterGM107::emitMEMBAR()
0000000000559820 000000000000014c t nv50_ir::CodeEmitterGM107::emitPSETP()
0000000000559970 0000000000000344 t nv50_ir::CodeEmitterGM107::emitMOV()
0000000000559cc0 0000000000000178 t nv50_ir::CodeEmitterGM107::emitS2R()
0000000000559e40 0000000000000178 t nv50_ir::CodeEmitterGM107::emitCS2R()
0000000000559fc0 00000000000002f8 t nv50_ir::CodeEmitterGM107::emitF2F()
000000000055a2c0 00000000000002c0 t nv50_ir::CodeEmitterGM107::emitF2I()
000000000055a580 00000000000002a8 t nv50_ir::CodeEmitterGM107::emitI2F()
000000000055a830 00000000000002a4 t nv50_ir::CodeEmitterGM107::emitI2I()
000000000055aae0 0000000000000218 t nv50_ir::CodeEmitterGM107::emitSEL()
000000000055ad00 000000000000024c t nv50_ir::CodeEmitterGM107::emitDADD()
000000000055af50 0000000000000214 t nv50_ir::CodeEmitterGM107::emitDMUL()
000000000055b170 00000000000002d4 t nv50_ir::CodeEmitterGM107::emitDFMA()
000000000055b450 0000000000000254 t nv50_ir::CodeEmitterGM107::emitDMNMX()
000000000055b6b0 00000000000002bc t nv50_ir::CodeEmitterGM107::emitDSET()
000000000055b970 000000000000031c t nv50_ir::CodeEmitterGM107::emitFADD()
000000000055bc90 00000000000002dc t nv50_ir::CodeEmitterGM107::emitFMUL()
000000000055bf70 0000000000000440 t nv50_ir::CodeEmitterGM107::emitFFMA()
000000000055c3b0 000000000000017c t nv50_ir::CodeEmitterGM107::emitMUFU()
000000000055c530 0000000000000234 t nv50_ir::CodeEmitterGM107::emitFMNMX()
000000000055c770 00000000000001bc t nv50_ir::CodeEmitterGM107::emitRRO()
000000000055c930 00000000000002c8 t nv50_ir::CodeEmitterGM107::emitFCMP()
000000000055cc00 00000000000002cc t nv50_ir::CodeEmitterGM107::emitFSET()
000000000055ced0 000000000000016c t nv50_ir::CodeEmitterGM107::emitFSWZADD()
000000000055d040 00000000000002a0 t nv50_ir::CodeEmitterGM107::emitLOP()
000000000055d2e0 00000000000001e0 t nv50_ir::CodeEmitterGM107::emitNOT()
000000000055d4c0 00000000000002b8 t nv50_ir::CodeEmitterGM107::emitIADD()
000000000055d780 00000000000002cc t nv50_ir::CodeEmitterGM107::emitIMUL()
000000000055da50 00000000000002ec t nv50_ir::CodeEmitterGM107::emitIMAD()
000000000055dd40 0000000000000220 t nv50_ir::CodeEmitterGM107::emitISCADD()
000000000055df60 0000000000000310 t nv50_ir::CodeEmitterGM107::emitXMAD()
000000000055e270 00000000000001e0 t nv50_ir::CodeEmitterGM107::emitIMNMX()
000000000055e450 00000000000002d8 t nv50_ir::CodeEmitterGM107::emitICMP()
000000000055e730 0000000000000298 t nv50_ir::CodeEmitterGM107::emitISET()
000000000055e9d0 00000000000001b8 t nv50_ir::CodeEmitterGM107::emitSHL()
000000000055eb90 00000000000001e0 t nv50_ir::CodeEmitterGM107::emitSHR()
000000000055ed70 00000000000001f8 t nv50_ir::CodeEmitterGM107::emitSHF()
000000000055ef70 000000000000018c t nv50_ir::CodeEmitterGM107::emitPOPC()
000000000055f100 000000000000025c t nv50_ir::CodeEmitterGM107::emitBFI()
000000000055f360 00000000000001d0 t nv50_ir::CodeEmitterGM107::emitBFE()
000000000055f530 00000000000001b0 t nv50_ir::CodeEmitterGM107::emitFLO()
000000000055f6e0 0000000000000124 t nv50_ir::CodeEmitterGM107::emitLDC()
000000000055f810 0000000000000114 t nv50_ir::CodeEmitterGM107::emitLDL()
000000000055f930 00000000000000f0 t nv50_ir::CodeEmitterGM107::emitLDS()
000000000055fa20 0000000000000170 t nv50_ir::CodeEmitterGM107::emitLD()
000000000055fb90 0000000000000288 t nv50_ir::CodeEmitterGM107::emitIPA()
000000000055fe20 00000000000001e8 t nv50_ir::CodeEmitterGM107::emitATOM()
0000000000560010 0000000000000190 t nv50_ir::CodeEmitterGM107::emitATOMS()
00000000005601a0 00000000000000c8 t nv50_ir::CodeEmitterGM107::emitPIXLD()
0000000000560270 00000000000001e4 t nv50_ir::CodeEmitterGM107::emitTEX()
0000000000560460 00000000000001a4 t nv50_ir::CodeEmitterGM107::emitTLD()
0000000000560610 00000000000001d4 t nv50_ir::CodeEmitterGM107::emitTLD4()
00000000005607f0 0000000000000180 t nv50_ir::CodeEmitterGM107::emitTXD()
0000000000560970 000000000000017c t nv50_ir::CodeEmitterGM107::emitTMML()
0000000000560af0 0000000000000144 t nv50_ir::CodeEmitterGM107::emitTXQ()
0000000000560c40 00000000000001bc t nv50_ir::CodeEmitterGM107::emitOUT()
0000000000560e00 0000000000000148 t nv50_ir::CodeEmitterGM107::emitSULDx()
0000000000560f50 00000000000001c4 t nv50_ir::CodeEmitterGM107::emitSUREDx()
0000000000561120 00000000000001a8 t nv50_ir::CodeEmitterGM107::emitALD()
00000000005612d0 000000000000014c t nv50_ir::CodeEmitterGM107::emitAL2P()
0000000000561420 00000000000001c8 t nv50_ir::SchedDataCalculatorGM107::doesInsnWriteTo(nv50_ir::Instruction const*, nv50_ir::Value const*) const
00000000005615f0 0000000000000190 t nv50_ir::SchedDataCalculatorGM107::findFirstDef(nv50_ir::Instruction const*) const
0000000000561780 0000000000000478 t nv50_ir::SchedDataCalculatorGM107::setReuseFlag(nv50_ir::Instruction*)
0000000000561c00 00000000000003b4 t nv50_ir::CodeEmitterGM107::emitVOTE()
0000000000561fc0 00000000000003c8 t nv50_ir::SchedDataCalculatorGM107::needRdDepBar(nv50_ir::Instruction const*) const
0000000000562390 0000000000000330 t nv50_ir::SchedDataCalculatorGM107::findFirstUse(nv50_ir::Instruction const*) const
00000000005626c0 000000000000047c t nv50_ir::SchedDataCalculatorGM107::insertBarriers(nv50_ir::BasicBlock*)
0000000000562b40 000000000000051c T nv50_ir::SchedDataCalculatorGM107::visit(nv50_ir::BasicBlock*)
0000000000563060 000000000000020c t nv50_ir::CodeEmitterGM107::emitSHFL()
0000000000563270 000000000000030c t nv50_ir::CodeEmitterGM107::emitISETP()
0000000000563580 00000000000003bc t nv50_ir::CodeEmitterGM107::emitTEXS()
0000000000563940 000000000000033c t nv50_ir::CodeEmitterGM107::emitDSETP()
0000000000563c80 0000000000000350 t nv50_ir::CodeEmitterGM107::emitFSETP()
0000000000563fd0 0000000000000b08 T nv50_ir::CodeEmitterGM107::emitInstruction(nv50_ir::Instruction*)
0000000000564ae0 0000000000000250 t std::vector<nv50_ir::SchedDataCalculatorGM107::RegScores, std::allocator<nv50_ir::SchedDataCalculatorGM107::RegScores> >::_M_default_append(unsigned long)
0000000000564d30 0000000000000134 T nv50_ir::SchedDataCalculatorGM107::visit(nv50_ir::Function*)
0000000000564e70 0000000000000140 t std::_Rb_tree<void const*, std::pair<void const* const, void*>, std::_Select1st<std::pair<void const* const, void*> >, std::less<void const*>, std::allocator<std::pair<void const* const, void*> > >::_M_erase(std::_Rb_tree_node<std::pair<void const* const, void*> >*) [clone .isra.0]
0000000000564fb0 0000000000000574 t nv50_ir::GM107LegalizeSSA::handlePFETCH(nv50_ir::Instruction*)
0000000000565530 000000000000014c t nv50_ir::GM107LegalizeSSA::handleLOAD(nv50_ir::Instruction*)
0000000000565680 000000000000003c T nv50_ir::GM107LegalizeSSA::visit(nv50_ir::Instruction*)
00000000005656c0 00000000000003a0 t nv50_ir::GM107LoweringPass::handleDFDX(nv50_ir::Instruction*)
0000000000565a60 00000000000005fc t nv50_ir::GM107LoweringPass::handlePFETCH(nv50_ir::Instruction*)
0000000000566060 0000000000000294 t nv50_ir::GM107LoweringPass::handlePOPCNT(nv50_ir::Instruction*)
0000000000566300 00000000000005f8 t nv50_ir::GM107LoweringPass::handleSUQ(nv50_ir::TexInstruction*)
0000000000566900 00000000000000c0 t std::_Rb_tree_iterator<std::pair<void const* const, void*> > std::_Rb_tree<void const*, std::pair<void const* const, void*>, std::_Select1st<std::pair<void const* const, void*> >, std::less<void const*>, std::allocator<std::pair<void const* const, void*> > >::_M_emplace_hint_unique<std::piecewise_construct_t const&, std::tuple<void const* const&>, std::tuple<> >(std::_Rb_tree_const_iterator<std::pair<void const* const, void*> >, std::piecewise_construct_t const&, std::tuple<void const* const&>&&, std::tuple<>&&) [clone .isra.0]
00000000005669c0 0000000000001c5c T nv50_ir::GM107LoweringPass::handleManualTXD(nv50_ir::TexInstruction*)
0000000000568620 00000000000000d4 T nv50_ir::GM107LoweringPass::visit(nv50_ir::Instruction*)
0000000000568700 0000000000000014 T nv50_ir::NVC0LegalizeSSA::visit(nv50_ir::Function*)
0000000000568720 0000000000000008 T nv50_ir::NVC0LoweringPass::visit(nv50_ir::BasicBlock*)
0000000000568730 00000000000000c8 t nv50_ir::getSrcType(nv50_ir::TexInstruction::ImgFormatDesc const*, int)
0000000000568800 0000000000000070 t _debug_printf
0000000000568870 00000000000000d8 T nv50_ir::NVC0LoweringPass::visit(nv50_ir::Function*)
0000000000568950 000000000000011c T nv50_ir::TargetNVC0::runLegalizePass(nv50_ir::Program*, nv50_ir::CGStage) const
0000000000568a70 0000000000000140 t std::_Rb_tree<void const*, std::pair<void const* const, void*>, std::_Select1st<std::pair<void const* const, void*> >, std::less<void const*>, std::allocator<std::pair<void const* const, void*> > >::_M_erase(std::_Rb_tree_node<std::pair<void const* const, void*> >*) [clone .isra.0]
0000000000568bb0 0000000000000140 t nv50_ir::Instruction::getIndirect(int, int) const
0000000000568cf0 00000000000000b8 t nv50_ir::TexInstruction::getIndirectR() const
0000000000568db0 0000000000000220 t nv50_ir::NVC0LegalizeSSA::handleRCPRSQLib(nv50_ir::Instruction*, nv50_ir::Value**)
0000000000568fd0 0000000000000270 t nv50_ir::NVC0LegalizeSSA::handleRCPRSQ(nv50_ir::Instruction*)
0000000000569240 0000000000000278 t nv50_ir::NVC0LegalizeSSA::handleTEXLOD(nv50_ir::TexInstruction*)
00000000005694c0 00000000000002a8 t nv50_ir::NVC0LegalizeSSA::handleSET(nv50_ir::CmpInstruction*)
0000000000569770 0000000000000030 t nv50_ir::NVC0LegalizePostRA::NVC0LegalizePostRA(nv50_ir::Program const*)
0000000000569770 0000000000000030 T nv50_ir::NVC0LegalizePostRA::NVC0LegalizePostRA(nv50_ir::Program const*)
00000000005697a0 000000000000014c t nv50_ir::NVC0LegalizePostRA::addTexUse(std::__cxx11::list<nv50_ir::NVC0LegalizePostRA::TexUse, std::allocator<nv50_ir::NVC0LegalizePostRA::TexUse> >&, nv50_ir::Instruction*, nv50_ir::Instruction const*)
00000000005698f0 00000000000000f8 t nv50_ir::NVC0LegalizePostRA::propagateJoin(nv50_ir::BasicBlock*)
00000000005699f0 000000000000003c T nv50_ir::NVC0LoweringPass::NVC0LoweringPass(nv50_ir::Program*)
00000000005699f0 000000000000003c t nv50_ir::NVC0LoweringPass::NVC0LoweringPass(nv50_ir::Program*)
0000000000569a30 00000000000001fc t nv50_ir::NVC0LoweringPass::loadTexHandle(nv50_ir::Value*, unsigned int)
0000000000569c30 00000000000001ec t nv50_ir::NVC0LoweringPass::loadResInfo64(nv50_ir::Value*, unsigned int, unsigned short)
0000000000569e20 00000000000001f0 t nv50_ir::NVC0LoweringPass::loadResLength32(nv50_ir::Value*, unsigned int, unsigned short)
000000000056a010 00000000000002dc t nv50_ir::NVC0LoweringPass::loadSuInfo32(nv50_ir::Value*, int, unsigned int, bool)
000000000056a2f0 00000000000002d0 t nv50_ir::NVC0LoweringPass::readTessCoord(nv50_ir::LValue*, int)
000000000056a5c0 00000000000001fc t nv50_ir::NVC0LoweringPass::handleDIV(nv50_ir::Instruction*)
000000000056a7c0 00000000000002cc t nv50_ir::NVC0LoweringPass::handleMOD(nv50_ir::Instruction*)
000000000056aa90 00000000000002e4 t nv50_ir::NVC0LoweringPass::handlePOW(nv50_ir::Instruction*)
000000000056ad80 0000000000000320 t nv50_ir::NVC0LoweringPass::calculateSampleOffset(nv50_ir::Value*)
000000000056b0a0 0000000000000168 t nv50_ir::NVC0LoweringPass::checkPredicate(nv50_ir::Instruction*)
000000000056b210 0000000000000250 t std::unordered_set<nv50_ir::BasicBlock const*, std::hash<nv50_ir::BasicBlock const*>, std::equal_to<nv50_ir::BasicBlock const*>, std::allocator<nv50_ir::BasicBlock const*> >::insert(nv50_ir::BasicBlock const* const&)
000000000056b460 000000000000017c t nv50_ir::NVC0LegalizePostRA::replaceCvt(nv50_ir::Instruction*)
000000000056b5e0 00000000000000ec t nv50_ir::NVC0LegalizePostRA::tryReplaceContWithBra(nv50_ir::BasicBlock*)
000000000056b6d0 0000000000000288 t nv50_ir::NVC0LegalizePostRA::replaceZero(nv50_ir::Instruction*)
000000000056b960 0000000000000390 T nv50_ir::NVC0LegalizePostRA::visit(nv50_ir::BasicBlock*)
000000000056bcf0 0000000000000234 t nv50_ir::NVC0LoweringPass::handleSQRT(nv50_ir::Instruction*) [clone .part.0]
000000000056bf30 0000000000000148 t nv50_ir::NVC0LoweringPass::handlePIXLD(nv50_ir::Instruction*)
000000000056c080 00000000000002c0 t nv50_ir::NVC0LoweringPass::handleOUT(nv50_ir::Instruction*)
000000000056c340 0000000000000704 t nv50_ir::NVC0LoweringPass::insertOOBSurfaceOpResult(nv50_ir::TexInstruction*)
000000000056ca50 0000000000000320 t nv50_ir::NVC0LoweringPass::handleTXQ(nv50_ir::TexInstruction*)
000000000056cd70 00000000000002cc t nv50_ir::NVC0LoweringPass::handleCasExch(nv50_ir::Instruction*, bool)
000000000056d040 000000000000040c t nv50_ir::NVC0LegalizePostRA::findFirstUsesBB(int, int, nv50_ir::Instruction*, nv50_ir::Instruction const*, std::__cxx11::list<nv50_ir::NVC0LegalizePostRA::TexUse, std::allocator<nv50_ir::NVC0LegalizePostRA::TexUse> >&, std::unordered_set<nv50_ir::BasicBlock const*, std::hash<nv50_ir::BasicBlock const*>, std::equal_to<nv50_ir::BasicBlock const*>, std::allocator<nv50_ir::BasicBlock const*> >&)
000000000056d450 0000000000000138 t nv50_ir::NVC0LegalizePostRA::findFirstUses(nv50_ir::Instruction*, std::__cxx11::list<nv50_ir::NVC0LegalizePostRA::TexUse, std::allocator<nv50_ir::NVC0LegalizePostRA::TexUse> >&)
000000000056d590 0000000000000330 t nv50_ir::NVC0LoweringPass::handleBUFQ(nv50_ir::Instruction*)
000000000056d8c0 00000000000002a4 t nv50_ir::NVC0LoweringPass::handleWRSV(nv50_ir::Instruction*)
000000000056db70 0000000000000c7c t nv50_ir::NVC0LoweringPass::handleTEX(nv50_ir::TexInstruction*)
000000000056e7f0 00000000000003a8 t nv50_ir::NVC0LoweringPass::handleTXD(nv50_ir::TexInstruction*)
000000000056eba0 000000000000040c t nv50_ir::NVC0LegalizeSSA::handleDIV(nv50_ir::Instruction*)
000000000056efb0 000000000000052c t nv50_ir::NVC0LegalizeSSA::handleShift(nv50_ir::Instruction*)
000000000056f4e0 0000000000000170 T nv50_ir::NVC0LegalizeSSA::visit(nv50_ir::BasicBlock*)
000000000056f650 000000000000060c t nv50_ir::NVC0LoweringPass::handleSharedATOMNVE4(nv50_ir::Instruction*)
000000000056fc60 0000000000000504 t nv50_ir::NVC0LoweringPass::handleSharedATOM(nv50_ir::Instruction*)
0000000000570170 00000000000002d8 t nv50_ir::NVC0LoweringPass::loadMsAdjInfo32(nv50_ir::TexInstruction::Target, unsigned int, int, nv50_ir::Value*, bool)
0000000000570450 00000000000003a0 t nv50_ir::NVC0LoweringPass::adjustCoordinatesMS(nv50_ir::TexInstruction*)
00000000005707f0 0000000000000360 t nv50_ir::NVC0LoweringPass::handleSUQ(nv50_ir::TexInstruction*)
0000000000570b50 0000000000000d90 t nv50_ir::NVC0LoweringPass::processSurfaceCoordsNVE4(nv50_ir::TexInstruction*)
00000000005718e0 0000000000000730 t nv50_ir::NVC0LoweringPass::convertSurfaceFormat(nv50_ir::TexInstruction*, nv50_ir::Instruction**)
0000000000572010 0000000000000594 t nv50_ir::NVC0LoweringPass::processSurfaceCoordsNVC0(nv50_ir::TexInstruction*)
00000000005725b0 00000000000009b4 t nv50_ir::NVC0LoweringPass::handleRDSV(nv50_ir::Instruction*)
0000000000572f70 000000000000016c t nv50_ir::NVC0LoweringPass::handleEXPORT(nv50_ir::Instruction*)
00000000005730e0 00000000000008bc t nv50_ir::NVC0LoweringPass::handleLDST(nv50_ir::Instruction*)
00000000005739a0 0000000000000328 t nv50_ir::NVC0LoweringPass::handleSurfaceOpNVE4(nv50_ir::TexInstruction*)
0000000000573cd0 00000000000003a8 t nv50_ir::NVC0LoweringPass::handleSurfaceOpNVC0(nv50_ir::TexInstruction*)
0000000000574080 0000000000000344 t nv50_ir::NVC0LoweringPass::handleTXLQ(nv50_ir::TexInstruction*)
00000000005743d0 0000000000000640 t nv50_ir::NVC0LoweringPass::handleATOM(nv50_ir::Instruction*)
0000000000574a10 0000000000000284 W std::vector<int, std::allocator<int> >::_M_fill_insert(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, unsigned long, int const&)
0000000000574ca0 0000000000000128 t void std::vector<nv50_ir::Instruction*, std::allocator<nv50_ir::Instruction*> >::_M_realloc_insert<nv50_ir::Instruction* const&>(__gnu_cxx::__normal_iterator<nv50_ir::Instruction**, std::vector<nv50_ir::Instruction*, std::allocator<nv50_ir::Instruction*> > >, nv50_ir::Instruction* const&)
0000000000574dd0 00000000000001a4 t void std::vector<nv50_ir::NVC0LegalizePostRA::TexUse, std::allocator<nv50_ir::NVC0LegalizePostRA::TexUse> >::_M_realloc_insert<nv50_ir::NVC0LegalizePostRA::TexUse const&>(__gnu_cxx::__normal_iterator<nv50_ir::NVC0LegalizePostRA::TexUse*, std::vector<nv50_ir::NVC0LegalizePostRA::TexUse, std::allocator<nv50_ir::NVC0LegalizePostRA::TexUse> > >, nv50_ir::NVC0LegalizePostRA::TexUse const&)
0000000000574f80 0000000000000284 t std::vector<nv50_ir::NVC0LegalizePostRA::Limits, std::allocator<nv50_ir::NVC0LegalizePostRA::Limits> >::_M_fill_insert(__gnu_cxx::__normal_iterator<nv50_ir::NVC0LegalizePostRA::Limits*, std::vector<nv50_ir::NVC0LegalizePostRA::Limits, std::allocator<nv50_ir::NVC0LegalizePostRA::Limits> > >, unsigned long, nv50_ir::NVC0LegalizePostRA::Limits const&)
0000000000575210 0000000000000118 t std::vector<nv50_ir::NVC0LegalizePostRA::Limits, std::allocator<nv50_ir::NVC0LegalizePostRA::Limits> >::_M_default_append(unsigned long)
0000000000575330 0000000000000e1c t nv50_ir::NVC0LegalizePostRA::insertTextureBarriers(nv50_ir::Function*)
0000000000576150 000000000000030c T nv50_ir::NVC0LegalizePostRA::visit(nv50_ir::Function*)
0000000000576460 00000000000000c0 t std::_Rb_tree_iterator<std::pair<void const* const, void*> > std::_Rb_tree<void const*, std::pair<void const* const, void*>, std::_Select1st<std::pair<void const* const, void*> >, std::less<void const*>, std::allocator<std::pair<void const* const, void*> > >::_M_emplace_hint_unique<std::piecewise_construct_t const&, std::tuple<void const* const&>, std::tuple<> >(std::_Rb_tree_const_iterator<std::pair<void const* const, void*> >, std::piecewise_construct_t const&, std::tuple<void const* const&>&&, std::tuple<>&&) [clone .isra.0]
0000000000576520 00000000000002a8 t nv50_ir::cloneForward(nv50_ir::Function*, nv50_ir::Instruction*)
00000000005767d0 0000000000001258 T nv50_ir::NVC0LoweringPass::handleManualTXD(nv50_ir::TexInstruction*)
0000000000577a30 0000000000000f24 t nv50_ir::NVC0LoweringPass::processSurfaceCoordsGM107(nv50_ir::TexInstruction*, nv50_ir::Instruction**)
0000000000578960 0000000000000094 t nv50_ir::NVC0LoweringPass::handleSurfaceOpGM107(nv50_ir::TexInstruction*)
0000000000578a00 0000000000000480 t nv50_ir::NVC0LoweringPass::visit(nv50_ir::Instruction*)
0000000000578e80 0000000000000044 t _mesa_combine_swizzles
0000000000578ed0 0000000000000470 t _mesa_layout_parameters
0000000000579340 0000000000000088 t _mesa_parse_instruction_suffix
00000000005793d0 0000000000000054 t _mesa_ARBvp_parse_option
0000000000579430 00000000000002d8 t _mesa_ARBfp_parse_option
0000000000579710 00000000000000e0 t yy_get_previous_state
00000000005797f0 0000000000000030 t yy_fatal_error.constprop.0
0000000000579820 00000000000000a0 t _mesa_program_lexer_ensure_buffer_stack
00000000005798c0 00000000000000b4 t _mesa_program_lexer__switch_to_buffer
0000000000579980 000000000000006c t _mesa_program_lexer__delete_buffer
00000000005799f0 000000000000006c t _mesa_program_lexer__flush_buffer
0000000000579a60 0000000000000098 t _mesa_program_lexer__init_buffer
0000000000579b00 000000000000007c t _mesa_program_lexer__create_buffer
0000000000579b80 00000000000000bc t _mesa_program_lexer_restart
0000000000579c40 00000000000046e4 t _mesa_program_lexer_lex
000000000057e330 000000000000008c t _mesa_program_lexer_pop_buffer_state
000000000057e3c0 00000000000000bc t _mesa_program_lexer__scan_buffer
000000000057e480 00000000000000a4 t _mesa_program_lexer__scan_bytes
000000000057e530 0000000000000098 t _mesa_program_lexer_lex_init_extra
000000000057e5d0 000000000000007c t _mesa_program_lexer_lex_destroy
000000000057e650 0000000000000044 t _mesa_program_lexer_ctor
000000000057e6a0 0000000000000004 t _mesa_program_lexer_dtor
000000000057e6b0 0000000000000004 T _glapi_check_multithread
000000000057e6c0 0000000000000004 T _glapi_set_context
000000000057e6d0 0000000000000004 T _glapi_set_dispatch
000000000057e6e0 0000000000000008 T _glapi_get_dispatch_table_size
000000000057e6f0 00000000000001a4 T _glapi_add_dispatch
000000000057e8a0 000000000000006c T _glapi_get_proc_address
000000000057e910 0000000000000014 t stub_compare
000000000057e930 0000000000000014 t stub_init_once
000000000057e950 000000000000001c t stub_find_public
000000000057e970 0000000000000100 t stub_find_dynamic
000000000057ea70 0000000000000050 t stub_fix_dynamic
000000000057eac0 0000000000000008 t stub_get_slot
000000000057ead0 0000000000000018 t stub_get_addr
000000000057eaf0 00000000000000a8 t noop_generic
000000000057eba0 0000000000000004 t u_current_init
000000000057ebb0 0000000000000024 t u_current_set_context
000000000057ebe0 0000000000000020 T _glapi_get_context
000000000057ec00 0000000000000040 t u_current_set_table
000000000057ec40 0000000000000034 T shared_dispatch_stub_0
000000000057ec80 0000000000000028 T shared_dispatch_stub_1
000000000057ecb0 0000000000000034 T shared_dispatch_stub_2
000000000057ecf0 0000000000000034 T shared_dispatch_stub_3
000000000057ed30 0000000000000034 T shared_dispatch_stub_4
000000000057ed70 0000000000000034 T shared_dispatch_stub_5
000000000057edb0 0000000000000034 T shared_dispatch_stub_6
000000000057edf0 0000000000000034 T shared_dispatch_stub_7
000000000057ee30 0000000000000034 T shared_dispatch_stub_8
000000000057ee70 0000000000000034 T shared_dispatch_stub_9
000000000057eeb0 0000000000000034 T shared_dispatch_stub_10
000000000057eef0 0000000000000028 T shared_dispatch_stub_11
000000000057ef20 0000000000000034 T shared_dispatch_stub_12
000000000057ef60 0000000000000028 T shared_dispatch_stub_13
000000000057ef90 0000000000000034 T shared_dispatch_stub_14
000000000057efd0 0000000000000034 T shared_dispatch_stub_15
000000000057f010 0000000000000034 T shared_dispatch_stub_16
000000000057f050 0000000000000034 T shared_dispatch_stub_17
000000000057f090 0000000000000034 T shared_dispatch_stub_18
000000000057f0d0 0000000000000034 T shared_dispatch_stub_19
000000000057f110 0000000000000034 T shared_dispatch_stub_20
000000000057f150 0000000000000034 T shared_dispatch_stub_21
000000000057f190 0000000000000034 T shared_dispatch_stub_22
000000000057f1d0 0000000000000034 T shared_dispatch_stub_23
000000000057f210 0000000000000034 T shared_dispatch_stub_24
000000000057f250 0000000000000034 T shared_dispatch_stub_25
000000000057f290 0000000000000034 T shared_dispatch_stub_26
000000000057f2d0 0000000000000028 T shared_dispatch_stub_27
000000000057f300 0000000000000034 T shared_dispatch_stub_28
000000000057f340 0000000000000028 T shared_dispatch_stub_29
000000000057f370 0000000000000034 T shared_dispatch_stub_30
000000000057f3b0 0000000000000034 T shared_dispatch_stub_31
000000000057f3f0 0000000000000034 T shared_dispatch_stub_32
000000000057f430 0000000000000034 T shared_dispatch_stub_33
000000000057f470 0000000000000034 T shared_dispatch_stub_34
000000000057f4b0 0000000000000034 T shared_dispatch_stub_35
000000000057f4f0 0000000000000034 T shared_dispatch_stub_36
000000000057f530 0000000000000034 T shared_dispatch_stub_37
000000000057f570 0000000000000034 T shared_dispatch_stub_38
000000000057f5b0 0000000000000034 T shared_dispatch_stub_39
000000000057f5f0 0000000000000034 T shared_dispatch_stub_40
000000000057f630 0000000000000034 T shared_dispatch_stub_41
000000000057f670 0000000000000034 T shared_dispatch_stub_42
000000000057f6b0 0000000000000028 T shared_dispatch_stub_43
000000000057f6e0 0000000000000028 T shared_dispatch_stub_44
000000000057f710 0000000000000034 T shared_dispatch_stub_45
000000000057f750 0000000000000028 T shared_dispatch_stub_46
000000000057f780 0000000000000034 T shared_dispatch_stub_47
000000000057f7c0 0000000000000034 T shared_dispatch_stub_48
000000000057f800 0000000000000034 T shared_dispatch_stub_49
000000000057f840 0000000000000034 T shared_dispatch_stub_50
000000000057f880 0000000000000034 T shared_dispatch_stub_51
000000000057f8c0 0000000000000034 T shared_dispatch_stub_52
000000000057f900 0000000000000034 T shared_dispatch_stub_53
000000000057f940 0000000000000028 T shared_dispatch_stub_54
000000000057f970 0000000000000034 T shared_dispatch_stub_55
000000000057f9b0 0000000000000028 T shared_dispatch_stub_56
000000000057f9e0 0000000000000034 T shared_dispatch_stub_57
000000000057fa20 0000000000000034 T shared_dispatch_stub_58
000000000057fa60 0000000000000034 T shared_dispatch_stub_59
000000000057faa0 0000000000000034 T shared_dispatch_stub_60
000000000057fae0 0000000000000034 T shared_dispatch_stub_61
000000000057fb20 0000000000000028 T shared_dispatch_stub_62
000000000057fb50 0000000000000034 T shared_dispatch_stub_63
000000000057fb90 0000000000000028 T shared_dispatch_stub_64
000000000057fbc0 0000000000000034 T shared_dispatch_stub_65
000000000057fc00 0000000000000034 T shared_dispatch_stub_66
000000000057fc40 0000000000000034 T shared_dispatch_stub_67
000000000057fc80 0000000000000034 T shared_dispatch_stub_68
000000000057fcc0 0000000000000034 T shared_dispatch_stub_69
000000000057fd00 0000000000000028 T shared_dispatch_stub_70
000000000057fd30 0000000000000034 T shared_dispatch_stub_71
000000000057fd70 0000000000000028 T shared_dispatch_stub_72
000000000057fda0 0000000000000034 T shared_dispatch_stub_73
000000000057fde0 0000000000000034 T shared_dispatch_stub_74
000000000057fe20 0000000000000034 T shared_dispatch_stub_75
000000000057fe60 0000000000000034 T shared_dispatch_stub_76
000000000057fea0 0000000000000034 T shared_dispatch_stub_77
000000000057fee0 0000000000000028 T shared_dispatch_stub_78
000000000057ff10 0000000000000034 T shared_dispatch_stub_79
000000000057ff50 0000000000000028 T shared_dispatch_stub_80
000000000057ff80 0000000000000034 T shared_dispatch_stub_81
000000000057ffc0 0000000000000034 T shared_dispatch_stub_82
0000000000580000 0000000000000034 T shared_dispatch_stub_83
0000000000580040 0000000000000034 T shared_dispatch_stub_84
0000000000580080 0000000000000034 T shared_dispatch_stub_85
00000000005800c0 0000000000000028 T shared_dispatch_stub_86
00000000005800f0 0000000000000034 T shared_dispatch_stub_87
0000000000580130 0000000000000028 T shared_dispatch_stub_88
0000000000580160 0000000000000034 T shared_dispatch_stub_89
00000000005801a0 0000000000000034 T shared_dispatch_stub_90
00000000005801e0 0000000000000034 T shared_dispatch_stub_91
0000000000580220 0000000000000034 T shared_dispatch_stub_92
0000000000580260 0000000000000034 T shared_dispatch_stub_93
00000000005802a0 0000000000000028 T shared_dispatch_stub_94
00000000005802d0 0000000000000034 T shared_dispatch_stub_95
0000000000580310 0000000000000028 T shared_dispatch_stub_96
0000000000580340 0000000000000034 T shared_dispatch_stub_97
0000000000580380 0000000000000034 T shared_dispatch_stub_98
00000000005803c0 0000000000000034 T shared_dispatch_stub_99
0000000000580400 0000000000000034 T shared_dispatch_stub_100
0000000000580440 0000000000000034 T shared_dispatch_stub_101
0000000000580480 0000000000000028 T shared_dispatch_stub_102
00000000005804b0 0000000000000034 T shared_dispatch_stub_103
00000000005804f0 0000000000000028 T shared_dispatch_stub_104
0000000000580520 0000000000000034 T shared_dispatch_stub_105
0000000000580560 0000000000000034 T shared_dispatch_stub_106
00000000005805a0 0000000000000034 T shared_dispatch_stub_107
00000000005805e0 0000000000000034 T shared_dispatch_stub_108
0000000000580620 0000000000000034 T shared_dispatch_stub_109
0000000000580660 0000000000000028 T shared_dispatch_stub_110
0000000000580690 0000000000000034 T shared_dispatch_stub_111
00000000005806d0 0000000000000028 T shared_dispatch_stub_112
0000000000580700 0000000000000034 T shared_dispatch_stub_113
0000000000580740 0000000000000034 T shared_dispatch_stub_114
0000000000580780 0000000000000034 T shared_dispatch_stub_115
00000000005807c0 0000000000000034 T shared_dispatch_stub_116
0000000000580800 0000000000000034 T shared_dispatch_stub_117
0000000000580840 0000000000000028 T shared_dispatch_stub_118
0000000000580870 0000000000000034 T shared_dispatch_stub_119
00000000005808b0 0000000000000028 T shared_dispatch_stub_120
00000000005808e0 0000000000000034 T shared_dispatch_stub_121
0000000000580920 0000000000000034 T shared_dispatch_stub_122
0000000000580960 0000000000000034 T shared_dispatch_stub_123
00000000005809a0 0000000000000034 T shared_dispatch_stub_124
00000000005809e0 0000000000000034 T shared_dispatch_stub_125
0000000000580a20 0000000000000028 T shared_dispatch_stub_126
0000000000580a50 0000000000000034 T shared_dispatch_stub_127
0000000000580a90 0000000000000028 T shared_dispatch_stub_128
0000000000580ac0 0000000000000034 T shared_dispatch_stub_129
0000000000580b00 0000000000000034 T shared_dispatch_stub_130
0000000000580b40 0000000000000034 T shared_dispatch_stub_131
0000000000580b80 0000000000000034 T shared_dispatch_stub_132
0000000000580bc0 0000000000000034 T shared_dispatch_stub_133
0000000000580c00 0000000000000028 T shared_dispatch_stub_134
0000000000580c30 0000000000000034 T shared_dispatch_stub_135
0000000000580c70 0000000000000028 T shared_dispatch_stub_136
0000000000580ca0 0000000000000034 T shared_dispatch_stub_137
0000000000580ce0 0000000000000034 T shared_dispatch_stub_138
0000000000580d20 0000000000000034 T shared_dispatch_stub_139
0000000000580d60 0000000000000034 T shared_dispatch_stub_140
0000000000580da0 0000000000000034 T shared_dispatch_stub_141
0000000000580de0 0000000000000028 T shared_dispatch_stub_142
0000000000580e10 0000000000000034 T shared_dispatch_stub_143
0000000000580e50 0000000000000028 T shared_dispatch_stub_144
0000000000580e80 0000000000000034 T shared_dispatch_stub_145
0000000000580ec0 0000000000000034 T shared_dispatch_stub_146
0000000000580f00 0000000000000034 T shared_dispatch_stub_147
0000000000580f40 0000000000000034 T shared_dispatch_stub_148
0000000000580f80 0000000000000034 T shared_dispatch_stub_149
0000000000580fc0 0000000000000034 T shared_dispatch_stub_150
0000000000581000 0000000000000034 T shared_dispatch_stub_151
0000000000581040 0000000000000034 T shared_dispatch_stub_152
0000000000581080 0000000000000034 T shared_dispatch_stub_153
00000000005810c0 0000000000000034 T shared_dispatch_stub_154
0000000000581100 0000000000000034 T shared_dispatch_stub_155
0000000000581140 0000000000000034 T shared_dispatch_stub_156
0000000000581180 0000000000000034 T shared_dispatch_stub_157
00000000005811c0 0000000000000034 T shared_dispatch_stub_158
0000000000581200 0000000000000034 T shared_dispatch_stub_159
0000000000581240 0000000000000034 T shared_dispatch_stub_160
0000000000581280 0000000000000034 T shared_dispatch_stub_161
00000000005812c0 0000000000000034 T shared_dispatch_stub_162
0000000000581300 0000000000000034 T shared_dispatch_stub_163
0000000000581340 0000000000000034 T shared_dispatch_stub_164
0000000000581380 0000000000000034 T shared_dispatch_stub_165
00000000005813c0 0000000000000034 T shared_dispatch_stub_166
0000000000581400 0000000000000034 T shared_dispatch_stub_167
0000000000581440 0000000000000028 T shared_dispatch_stub_168
0000000000581470 0000000000000034 T shared_dispatch_stub_169
00000000005814b0 0000000000000034 T shared_dispatch_stub_170
00000000005814f0 0000000000000034 T shared_dispatch_stub_171
0000000000581530 0000000000000034 T shared_dispatch_stub_172
0000000000581570 0000000000000028 T shared_dispatch_stub_173
00000000005815a0 0000000000000034 T shared_dispatch_stub_174
00000000005815e0 0000000000000034 T shared_dispatch_stub_175
0000000000581620 0000000000000034 T shared_dispatch_stub_176
0000000000581660 0000000000000034 T shared_dispatch_stub_177
00000000005816a0 0000000000000034 T shared_dispatch_stub_178
00000000005816e0 0000000000000034 T shared_dispatch_stub_179
0000000000581720 0000000000000034 T shared_dispatch_stub_180
0000000000581760 0000000000000034 T shared_dispatch_stub_181
00000000005817a0 0000000000000034 T shared_dispatch_stub_182
00000000005817e0 0000000000000034 T shared_dispatch_stub_183
0000000000581820 0000000000000034 T shared_dispatch_stub_184
0000000000581860 0000000000000034 T shared_dispatch_stub_185
00000000005818a0 0000000000000034 T shared_dispatch_stub_186
00000000005818e0 0000000000000034 T shared_dispatch_stub_187
0000000000581920 0000000000000034 T shared_dispatch_stub_188
0000000000581960 0000000000000034 T shared_dispatch_stub_189
00000000005819a0 0000000000000034 T shared_dispatch_stub_190
00000000005819e0 0000000000000034 T shared_dispatch_stub_191
0000000000581a20 0000000000000034 T shared_dispatch_stub_192
0000000000581a60 0000000000000034 T shared_dispatch_stub_193
0000000000581aa0 0000000000000034 T shared_dispatch_stub_194
0000000000581ae0 0000000000000034 T shared_dispatch_stub_195
0000000000581b20 0000000000000034 T shared_dispatch_stub_196
0000000000581b60 0000000000000028 T shared_dispatch_stub_197
0000000000581b90 0000000000000034 T shared_dispatch_stub_198
0000000000581bd0 0000000000000028 T shared_dispatch_stub_199
0000000000581c00 0000000000000028 T shared_dispatch_stub_200
0000000000581c30 0000000000000034 T shared_dispatch_stub_201
0000000000581c70 0000000000000034 T shared_dispatch_stub_202
0000000000581cb0 0000000000000034 T shared_dispatch_stub_203
0000000000581cf0 0000000000000028 T shared_dispatch_stub_204
0000000000581d20 0000000000000028 T shared_dispatch_stub_205
0000000000581d50 0000000000000028 T shared_dispatch_stub_206
0000000000581d80 0000000000000034 T shared_dispatch_stub_207
0000000000581dc0 0000000000000028 T shared_dispatch_stub_208
0000000000581df0 0000000000000034 T shared_dispatch_stub_209
0000000000581e30 0000000000000034 T shared_dispatch_stub_210
0000000000581e70 0000000000000034 T shared_dispatch_stub_211
0000000000581eb0 0000000000000034 T shared_dispatch_stub_212
0000000000581ef0 0000000000000034 T shared_dispatch_stub_213
0000000000581f30 0000000000000034 T shared_dispatch_stub_214
0000000000581f70 0000000000000034 T shared_dispatch_stub_215
0000000000581fb0 0000000000000028 T shared_dispatch_stub_216
0000000000581fe0 0000000000000028 T shared_dispatch_stub_217
0000000000582010 0000000000000028 T shared_dispatch_stub_218
0000000000582040 0000000000000034 T shared_dispatch_stub_219
0000000000582080 0000000000000034 T shared_dispatch_stub_220
00000000005820c0 0000000000000034 T shared_dispatch_stub_221
0000000000582100 0000000000000034 T shared_dispatch_stub_222
0000000000582140 0000000000000034 T shared_dispatch_stub_223
0000000000582180 0000000000000034 T shared_dispatch_stub_224
00000000005821c0 0000000000000034 T shared_dispatch_stub_225
0000000000582200 0000000000000034 T shared_dispatch_stub_226
0000000000582240 0000000000000034 T shared_dispatch_stub_227
0000000000582280 0000000000000028 T shared_dispatch_stub_228
00000000005822b0 0000000000000034 T shared_dispatch_stub_229
00000000005822f0 0000000000000028 T shared_dispatch_stub_230
0000000000582320 0000000000000034 T shared_dispatch_stub_231
0000000000582360 0000000000000028 T shared_dispatch_stub_232
0000000000582390 0000000000000034 T shared_dispatch_stub_233
00000000005823d0 0000000000000028 T shared_dispatch_stub_234
0000000000582400 0000000000000034 T shared_dispatch_stub_235
0000000000582440 0000000000000034 T shared_dispatch_stub_236
0000000000582480 0000000000000034 T shared_dispatch_stub_237
00000000005824c0 0000000000000034 T shared_dispatch_stub_238
0000000000582500 0000000000000034 T shared_dispatch_stub_239
0000000000582540 0000000000000034 T shared_dispatch_stub_240
0000000000582580 0000000000000034 T shared_dispatch_stub_241
00000000005825c0 0000000000000034 T shared_dispatch_stub_242
0000000000582600 0000000000000034 T shared_dispatch_stub_243
0000000000582640 0000000000000034 T shared_dispatch_stub_244
0000000000582680 0000000000000034 T shared_dispatch_stub_245
00000000005826c0 0000000000000028 T shared_dispatch_stub_246
00000000005826f0 0000000000000034 T shared_dispatch_stub_247
0000000000582730 0000000000000034 T shared_dispatch_stub_248
0000000000582770 0000000000000034 T shared_dispatch_stub_249
00000000005827b0 0000000000000034 T shared_dispatch_stub_250
00000000005827f0 0000000000000034 T shared_dispatch_stub_251
0000000000582830 0000000000000034 T shared_dispatch_stub_252
0000000000582870 0000000000000034 T shared_dispatch_stub_253
00000000005828b0 0000000000000034 T shared_dispatch_stub_254
00000000005828f0 0000000000000034 T shared_dispatch_stub_255
0000000000582930 0000000000000034 T shared_dispatch_stub_256
0000000000582970 0000000000000034 T shared_dispatch_stub_257
00000000005829b0 0000000000000034 T shared_dispatch_stub_258
00000000005829f0 0000000000000034 T shared_dispatch_stub_259
0000000000582a30 0000000000000034 T shared_dispatch_stub_260
0000000000582a70 0000000000000028 T shared_dispatch_stub_261
0000000000582aa0 0000000000000034 T shared_dispatch_stub_262
0000000000582ae0 0000000000000034 T shared_dispatch_stub_263
0000000000582b20 0000000000000034 T shared_dispatch_stub_264
0000000000582b60 0000000000000034 T shared_dispatch_stub_265
0000000000582ba0 0000000000000034 T shared_dispatch_stub_266
0000000000582be0 0000000000000034 T shared_dispatch_stub_267
0000000000582c20 0000000000000034 T shared_dispatch_stub_268
0000000000582c60 0000000000000034 T shared_dispatch_stub_269
0000000000582ca0 0000000000000034 T shared_dispatch_stub_270
0000000000582ce0 0000000000000034 T shared_dispatch_stub_271
0000000000582d20 0000000000000034 T shared_dispatch_stub_272
0000000000582d60 0000000000000034 T shared_dispatch_stub_273
0000000000582da0 0000000000000034 T shared_dispatch_stub_274
0000000000582de0 0000000000000034 T shared_dispatch_stub_275
0000000000582e20 0000000000000034 T shared_dispatch_stub_276
0000000000582e60 0000000000000034 T shared_dispatch_stub_277
0000000000582ea0 0000000000000034 T shared_dispatch_stub_278
0000000000582ee0 0000000000000034 T shared_dispatch_stub_279
0000000000582f20 0000000000000034 T shared_dispatch_stub_280
0000000000582f60 0000000000000034 T shared_dispatch_stub_281
0000000000582fa0 0000000000000034 T shared_dispatch_stub_282
0000000000582fe0 0000000000000034 T shared_dispatch_stub_283
0000000000583020 0000000000000034 T shared_dispatch_stub_284
0000000000583060 0000000000000034 T shared_dispatch_stub_285
00000000005830a0 0000000000000034 T shared_dispatch_stub_286
00000000005830e0 0000000000000034 T shared_dispatch_stub_287
0000000000583120 0000000000000028 T shared_dispatch_stub_288
0000000000583150 0000000000000028 T shared_dispatch_stub_289
0000000000583180 0000000000000028 T shared_dispatch_stub_290
00000000005831b0 0000000000000034 T shared_dispatch_stub_291
00000000005831f0 0000000000000034 T shared_dispatch_stub_292
0000000000583230 0000000000000034 T shared_dispatch_stub_293
0000000000583270 0000000000000034 T shared_dispatch_stub_294
00000000005832b0 0000000000000034 T shared_dispatch_stub_295
00000000005832f0 0000000000000028 T shared_dispatch_stub_296
0000000000583320 0000000000000028 T shared_dispatch_stub_297
0000000000583350 0000000000000028 T shared_dispatch_stub_298
0000000000583380 0000000000000028 T shared_dispatch_stub_299
00000000005833b0 0000000000000028 T shared_dispatch_stub_300
00000000005833e0 0000000000000028 T shared_dispatch_stub_301
0000000000583410 0000000000000028 T shared_dispatch_stub_302
0000000000583440 0000000000000028 T shared_dispatch_stub_303
0000000000583470 0000000000000028 T shared_dispatch_stub_304
00000000005834a0 0000000000000034 T shared_dispatch_stub_305
00000000005834e0 0000000000000034 T shared_dispatch_stub_306
0000000000583520 0000000000000034 T shared_dispatch_stub_307
0000000000583560 0000000000000034 T shared_dispatch_stub_308
00000000005835a0 0000000000000034 T shared_dispatch_stub_309
00000000005835e0 0000000000000034 T shared_dispatch_stub_310
0000000000583620 0000000000000034 T shared_dispatch_stub_311
0000000000583660 0000000000000034 T shared_dispatch_stub_312
00000000005836a0 0000000000000034 T shared_dispatch_stub_313
00000000005836e0 0000000000000034 T shared_dispatch_stub_314
0000000000583720 0000000000000034 T shared_dispatch_stub_315
0000000000583760 0000000000000034 T shared_dispatch_stub_316
00000000005837a0 0000000000000034 T shared_dispatch_stub_317
00000000005837e0 0000000000000034 T shared_dispatch_stub_318
0000000000583820 0000000000000028 T shared_dispatch_stub_319
0000000000583850 0000000000000034 T shared_dispatch_stub_320
0000000000583890 0000000000000034 T shared_dispatch_stub_321
00000000005838d0 0000000000000034 T shared_dispatch_stub_322
0000000000583910 0000000000000034 T shared_dispatch_stub_323
0000000000583950 0000000000000034 T shared_dispatch_stub_324
0000000000583990 0000000000000034 T shared_dispatch_stub_325
00000000005839d0 0000000000000034 T shared_dispatch_stub_326
0000000000583a10 0000000000000034 T shared_dispatch_stub_327
0000000000583a50 0000000000000034 T shared_dispatch_stub_328
0000000000583a90 0000000000000034 T shared_dispatch_stub_329
0000000000583ad0 0000000000000034 T shared_dispatch_stub_330
0000000000583b10 0000000000000034 T shared_dispatch_stub_331
0000000000583b50 0000000000000034 T shared_dispatch_stub_332
0000000000583b90 0000000000000034 T shared_dispatch_stub_333
0000000000583bd0 0000000000000028 T shared_dispatch_stub_334
0000000000583c00 0000000000000034 T shared_dispatch_stub_335
0000000000583c40 0000000000000028 T shared_dispatch_stub_336
0000000000583c70 0000000000000034 T shared_dispatch_stub_337
0000000000583cb0 0000000000000034 T shared_dispatch_stub_338
0000000000583cf0 0000000000000034 T shared_dispatch_stub_339
0000000000583d30 0000000000000034 T shared_dispatch_stub_340
0000000000583d70 0000000000000034 T shared_dispatch_stub_341
0000000000583db0 0000000000000034 T shared_dispatch_stub_342
0000000000583df0 0000000000000034 T shared_dispatch_stub_343
0000000000583e30 0000000000000034 T shared_dispatch_stub_344
0000000000583e70 0000000000000034 T shared_dispatch_stub_345
0000000000583eb0 0000000000000034 T shared_dispatch_stub_346
0000000000583ef0 0000000000000034 T shared_dispatch_stub_347
0000000000583f30 0000000000000034 T shared_dispatch_stub_348
0000000000583f70 0000000000000034 T shared_dispatch_stub_349
0000000000583fb0 0000000000000034 T shared_dispatch_stub_350
0000000000583ff0 0000000000000034 T shared_dispatch_stub_351
0000000000584030 0000000000000034 T shared_dispatch_stub_352
0000000000584070 0000000000000034 T shared_dispatch_stub_353
00000000005840b0 0000000000000034 T shared_dispatch_stub_354
00000000005840f0 0000000000000034 T shared_dispatch_stub_355
0000000000584130 0000000000000034 T shared_dispatch_stub_356
0000000000584170 0000000000000034 T shared_dispatch_stub_357
00000000005841b0 0000000000000034 T shared_dispatch_stub_358
00000000005841f0 0000000000000034 T shared_dispatch_stub_359
0000000000584230 0000000000000034 T shared_dispatch_stub_360
0000000000584270 0000000000000034 T shared_dispatch_stub_361
00000000005842b0 0000000000000034 T shared_dispatch_stub_362
00000000005842f0 0000000000000034 T shared_dispatch_stub_363
0000000000584330 0000000000000034 T shared_dispatch_stub_364
0000000000584370 0000000000000034 T shared_dispatch_stub_365
00000000005843b0 0000000000000034 T shared_dispatch_stub_366
00000000005843f0 0000000000000034 T shared_dispatch_stub_367
0000000000584430 0000000000000034 T shared_dispatch_stub_368
0000000000584470 0000000000000034 T shared_dispatch_stub_369
00000000005844b0 0000000000000034 T shared_dispatch_stub_370
00000000005844f0 0000000000000034 T shared_dispatch_stub_371
0000000000584530 0000000000000034 T shared_dispatch_stub_372
0000000000584570 0000000000000034 T shared_dispatch_stub_373
00000000005845b0 0000000000000034 T shared_dispatch_stub_374
00000000005845f0 0000000000000034 T shared_dispatch_stub_375
0000000000584630 0000000000000034 T shared_dispatch_stub_376
0000000000584670 0000000000000034 T shared_dispatch_stub_377
00000000005846b0 0000000000000034 T shared_dispatch_stub_378
00000000005846f0 0000000000000034 T shared_dispatch_stub_379
0000000000584730 0000000000000034 T shared_dispatch_stub_380
0000000000584770 0000000000000034 T shared_dispatch_stub_381
00000000005847b0 0000000000000034 T shared_dispatch_stub_382
00000000005847f0 0000000000000034 T shared_dispatch_stub_383
0000000000584830 0000000000000034 T shared_dispatch_stub_384
0000000000584870 0000000000000034 T shared_dispatch_stub_385
00000000005848b0 0000000000000034 T shared_dispatch_stub_386
00000000005848f0 0000000000000034 T shared_dispatch_stub_387
0000000000584930 0000000000000034 T shared_dispatch_stub_388
0000000000584970 0000000000000034 T shared_dispatch_stub_389
00000000005849b0 0000000000000034 T shared_dispatch_stub_390
00000000005849f0 0000000000000034 T shared_dispatch_stub_391
0000000000584a30 0000000000000034 T shared_dispatch_stub_392
0000000000584a70 0000000000000034 T shared_dispatch_stub_393
0000000000584ab0 0000000000000034 T shared_dispatch_stub_394
0000000000584af0 0000000000000034 T shared_dispatch_stub_395
0000000000584b30 0000000000000034 T shared_dispatch_stub_396
0000000000584b70 0000000000000034 T shared_dispatch_stub_397
0000000000584bb0 0000000000000034 T shared_dispatch_stub_398
0000000000584bf0 0000000000000034 T shared_dispatch_stub_399
0000000000584c30 0000000000000034 T shared_dispatch_stub_400
0000000000584c70 0000000000000034 T shared_dispatch_stub_401
0000000000584cb0 0000000000000034 T shared_dispatch_stub_402
0000000000584cf0 0000000000000034 T shared_dispatch_stub_403
0000000000584d30 0000000000000034 T shared_dispatch_stub_404
0000000000584d70 0000000000000034 T shared_dispatch_stub_405
0000000000584db0 0000000000000034 T shared_dispatch_stub_406
0000000000584df0 0000000000000034 T shared_dispatch_stub_407
0000000000584e30 0000000000000034 T shared_dispatch_stub_408
0000000000584e70 0000000000000034 T shared_dispatch_stub_409
0000000000584eb0 0000000000000034 T shared_dispatch_stub_410
0000000000584ef0 0000000000000034 T shared_dispatch_stub_411
0000000000584f30 0000000000000034 T shared_dispatch_stub_412
0000000000584f70 0000000000000034 T shared_dispatch_stub_413
0000000000584fb0 0000000000000034 T shared_dispatch_stub_414
0000000000584ff0 0000000000000034 T shared_dispatch_stub_415
0000000000585030 0000000000000034 T shared_dispatch_stub_416
0000000000585070 0000000000000034 T shared_dispatch_stub_417
00000000005850b0 0000000000000034 T shared_dispatch_stub_418
00000000005850f0 0000000000000034 T shared_dispatch_stub_419
0000000000585130 0000000000000034 T shared_dispatch_stub_420
0000000000585170 0000000000000034 T shared_dispatch_stub_421
00000000005851b0 0000000000000028 T shared_dispatch_stub_422
00000000005851e0 0000000000000034 T shared_dispatch_stub_423
0000000000585220 0000000000000034 T shared_dispatch_stub_424
0000000000585260 0000000000000034 T shared_dispatch_stub_425
00000000005852a0 0000000000000034 T shared_dispatch_stub_426
00000000005852e0 0000000000000034 T shared_dispatch_stub_427
0000000000585320 0000000000000034 T shared_dispatch_stub_428
0000000000585360 0000000000000034 T shared_dispatch_stub_429
00000000005853a0 0000000000000034 T shared_dispatch_stub_430
00000000005853e0 0000000000000028 T shared_dispatch_stub_431
0000000000585410 0000000000000034 T shared_dispatch_stub_432
0000000000585450 0000000000000034 T shared_dispatch_stub_433
0000000000585490 0000000000000034 T shared_dispatch_stub_434
00000000005854d0 0000000000000034 T shared_dispatch_stub_435
0000000000585510 0000000000000034 T shared_dispatch_stub_436
0000000000585550 0000000000000034 T shared_dispatch_stub_437
0000000000585590 0000000000000034 T shared_dispatch_stub_438
00000000005855d0 0000000000000034 T shared_dispatch_stub_439
0000000000585610 0000000000000034 T shared_dispatch_stub_440
0000000000585650 0000000000000034 T shared_dispatch_stub_441
0000000000585690 0000000000000034 T shared_dispatch_stub_442
00000000005856d0 0000000000000034 T shared_dispatch_stub_443
0000000000585710 0000000000000028 T shared_dispatch_stub_444
0000000000585740 0000000000000034 T shared_dispatch_stub_445
0000000000585780 0000000000000028 T shared_dispatch_stub_446
00000000005857b0 0000000000000034 T shared_dispatch_stub_447
00000000005857f0 0000000000000034 T shared_dispatch_stub_448
0000000000585830 0000000000000034 T shared_dispatch_stub_449
0000000000585870 0000000000000034 T shared_dispatch_stub_450
00000000005858b0 0000000000000034 T shared_dispatch_stub_451
00000000005858f0 0000000000000028 T shared_dispatch_stub_452
0000000000585920 0000000000000034 T shared_dispatch_stub_453
0000000000585960 0000000000000028 T shared_dispatch_stub_454
0000000000585990 0000000000000034 T shared_dispatch_stub_455
00000000005859d0 0000000000000034 T shared_dispatch_stub_456
0000000000585a10 0000000000000034 T shared_dispatch_stub_457
0000000000585a50 0000000000000034 T shared_dispatch_stub_458
0000000000585a90 0000000000000034 T shared_dispatch_stub_459
0000000000585ad0 0000000000000034 T shared_dispatch_stub_460
0000000000585b10 0000000000000034 T shared_dispatch_stub_461
0000000000585b50 0000000000000034 T shared_dispatch_stub_462
0000000000585b90 0000000000000034 T shared_dispatch_stub_463
0000000000585bd0 0000000000000034 T shared_dispatch_stub_464
0000000000585c10 0000000000000034 T shared_dispatch_stub_465
0000000000585c50 0000000000000034 T shared_dispatch_stub_466
0000000000585c90 0000000000000034 T shared_dispatch_stub_467
0000000000585cd0 0000000000000034 T shared_dispatch_stub_468
0000000000585d10 0000000000000034 T shared_dispatch_stub_469
0000000000585d50 0000000000000034 T shared_dispatch_stub_470
0000000000585d90 0000000000000034 T shared_dispatch_stub_471
0000000000585dd0 0000000000000034 T shared_dispatch_stub_472
0000000000585e10 0000000000000034 T shared_dispatch_stub_473
0000000000585e50 0000000000000034 T shared_dispatch_stub_474
0000000000585e90 0000000000000034 T shared_dispatch_stub_475
0000000000585ed0 0000000000000034 T shared_dispatch_stub_476
0000000000585f10 0000000000000034 T shared_dispatch_stub_477
0000000000585f50 0000000000000034 T shared_dispatch_stub_478
0000000000585f90 0000000000000034 T shared_dispatch_stub_479
0000000000585fd0 0000000000000034 T shared_dispatch_stub_480
0000000000586010 0000000000000034 T shared_dispatch_stub_481
0000000000586050 0000000000000034 T shared_dispatch_stub_482
0000000000586090 0000000000000028 T shared_dispatch_stub_483
00000000005860c0 0000000000000034 T shared_dispatch_stub_484
0000000000586100 0000000000000034 T shared_dispatch_stub_485
0000000000586140 0000000000000034 T shared_dispatch_stub_486
0000000000586180 0000000000000034 T shared_dispatch_stub_487
00000000005861c0 0000000000000034 T shared_dispatch_stub_488
0000000000586200 0000000000000034 T shared_dispatch_stub_489
0000000000586240 0000000000000034 T shared_dispatch_stub_490
0000000000586280 0000000000000034 T shared_dispatch_stub_491
00000000005862c0 0000000000000034 T shared_dispatch_stub_492
0000000000586300 0000000000000034 T shared_dispatch_stub_493
0000000000586340 0000000000000034 T shared_dispatch_stub_494
0000000000586380 0000000000000034 T shared_dispatch_stub_495
00000000005863c0 0000000000000034 T shared_dispatch_stub_496
0000000000586400 0000000000000034 T shared_dispatch_stub_497
0000000000586440 0000000000000034 T shared_dispatch_stub_498
0000000000586480 0000000000000034 T shared_dispatch_stub_499
00000000005864c0 0000000000000034 T shared_dispatch_stub_500
0000000000586500 0000000000000034 T shared_dispatch_stub_501
0000000000586540 0000000000000034 T shared_dispatch_stub_502
0000000000586580 0000000000000034 T shared_dispatch_stub_503
00000000005865c0 0000000000000034 T shared_dispatch_stub_504
0000000000586600 0000000000000034 T shared_dispatch_stub_505
0000000000586640 0000000000000034 T shared_dispatch_stub_506
0000000000586680 0000000000000034 T shared_dispatch_stub_507
00000000005866c0 0000000000000034 T shared_dispatch_stub_508
0000000000586700 0000000000000034 T shared_dispatch_stub_509
0000000000586740 0000000000000034 T shared_dispatch_stub_510
0000000000586780 0000000000000034 T shared_dispatch_stub_511
00000000005867c0 0000000000000034 T shared_dispatch_stub_512
0000000000586800 0000000000000034 T shared_dispatch_stub_513
0000000000586840 0000000000000034 T shared_dispatch_stub_514
0000000000586880 0000000000000034 T shared_dispatch_stub_515
00000000005868c0 0000000000000034 T shared_dispatch_stub_516
0000000000586900 0000000000000034 T shared_dispatch_stub_517
0000000000586940 0000000000000034 T shared_dispatch_stub_518
0000000000586980 0000000000000034 T shared_dispatch_stub_519
00000000005869c0 0000000000000034 T shared_dispatch_stub_520
0000000000586a00 0000000000000034 T shared_dispatch_stub_521
0000000000586a40 0000000000000034 T shared_dispatch_stub_522
0000000000586a80 0000000000000034 T shared_dispatch_stub_523
0000000000586ac0 0000000000000034 T shared_dispatch_stub_524
0000000000586b00 0000000000000034 T shared_dispatch_stub_525
0000000000586b40 0000000000000034 T shared_dispatch_stub_526
0000000000586b80 0000000000000034 T shared_dispatch_stub_527
0000000000586bc0 0000000000000034 T shared_dispatch_stub_528
0000000000586c00 0000000000000034 T shared_dispatch_stub_529
0000000000586c40 0000000000000034 T shared_dispatch_stub_530
0000000000586c80 0000000000000034 T shared_dispatch_stub_531
0000000000586cc0 0000000000000034 T shared_dispatch_stub_532
0000000000586d00 0000000000000034 T shared_dispatch_stub_533
0000000000586d40 0000000000000034 T shared_dispatch_stub_534
0000000000586d80 0000000000000034 T shared_dispatch_stub_535
0000000000586dc0 0000000000000034 T shared_dispatch_stub_536
0000000000586e00 0000000000000034 T shared_dispatch_stub_537
0000000000586e40 0000000000000034 T shared_dispatch_stub_538
0000000000586e80 0000000000000034 T shared_dispatch_stub_539
0000000000586ec0 0000000000000034 T shared_dispatch_stub_540
0000000000586f00 0000000000000034 T shared_dispatch_stub_541
0000000000586f40 0000000000000034 T shared_dispatch_stub_542
0000000000586f80 0000000000000034 T shared_dispatch_stub_543
0000000000586fc0 0000000000000034 T shared_dispatch_stub_544
0000000000587000 0000000000000034 T shared_dispatch_stub_545
0000000000587040 0000000000000034 T shared_dispatch_stub_546
0000000000587080 0000000000000034 T shared_dispatch_stub_547
00000000005870c0 0000000000000034 T shared_dispatch_stub_548
0000000000587100 0000000000000034 T shared_dispatch_stub_549
0000000000587140 0000000000000034 T shared_dispatch_stub_550
0000000000587180 0000000000000034 T shared_dispatch_stub_551
00000000005871c0 0000000000000034 T shared_dispatch_stub_552
0000000000587200 0000000000000034 T shared_dispatch_stub_553
0000000000587240 0000000000000034 T shared_dispatch_stub_554
0000000000587280 0000000000000034 T shared_dispatch_stub_555
00000000005872c0 0000000000000034 T shared_dispatch_stub_556
0000000000587300 0000000000000034 T shared_dispatch_stub_557
0000000000587340 0000000000000034 T shared_dispatch_stub_558
0000000000587380 0000000000000034 T shared_dispatch_stub_559
00000000005873c0 0000000000000034 T shared_dispatch_stub_560
0000000000587400 0000000000000034 T shared_dispatch_stub_561
0000000000587440 0000000000000034 T shared_dispatch_stub_562
0000000000587480 0000000000000034 T shared_dispatch_stub_563
00000000005874c0 0000000000000034 T shared_dispatch_stub_564
0000000000587500 0000000000000034 T shared_dispatch_stub_565
0000000000587540 0000000000000034 T shared_dispatch_stub_566
0000000000587580 0000000000000034 T shared_dispatch_stub_567
00000000005875c0 0000000000000034 T shared_dispatch_stub_568
0000000000587600 0000000000000034 T shared_dispatch_stub_569
0000000000587640 0000000000000034 T shared_dispatch_stub_570
0000000000587680 0000000000000034 T shared_dispatch_stub_571
00000000005876c0 0000000000000034 T shared_dispatch_stub_572
0000000000587700 0000000000000034 T shared_dispatch_stub_573
0000000000587740 0000000000000034 T shared_dispatch_stub_574
0000000000587780 0000000000000034 T shared_dispatch_stub_575
00000000005877c0 0000000000000034 T shared_dispatch_stub_576
0000000000587800 0000000000000034 T shared_dispatch_stub_577
0000000000587840 0000000000000034 T shared_dispatch_stub_578
0000000000587880 0000000000000034 T shared_dispatch_stub_579
00000000005878c0 0000000000000034 T shared_dispatch_stub_580
0000000000587900 0000000000000034 T shared_dispatch_stub_581
0000000000587940 0000000000000034 T shared_dispatch_stub_582
0000000000587980 0000000000000028 T shared_dispatch_stub_583
00000000005879b0 0000000000000028 T shared_dispatch_stub_584
00000000005879e0 0000000000000034 T shared_dispatch_stub_585
0000000000587a20 0000000000000034 T shared_dispatch_stub_586
0000000000587a60 0000000000000034 T shared_dispatch_stub_587
0000000000587aa0 0000000000000034 T shared_dispatch_stub_588
0000000000587ae0 0000000000000034 T shared_dispatch_stub_589
0000000000587b20 0000000000000034 T shared_dispatch_stub_590
0000000000587b60 0000000000000034 T shared_dispatch_stub_591
0000000000587ba0 0000000000000034 T shared_dispatch_stub_592
0000000000587be0 0000000000000034 T shared_dispatch_stub_593
0000000000587c20 0000000000000034 T shared_dispatch_stub_594
0000000000587c60 0000000000000034 T shared_dispatch_stub_595
0000000000587ca0 0000000000000034 T shared_dispatch_stub_596
0000000000587ce0 0000000000000034 T shared_dispatch_stub_597
0000000000587d20 0000000000000034 T shared_dispatch_stub_598
0000000000587d60 0000000000000034 T shared_dispatch_stub_599
0000000000587da0 0000000000000034 T shared_dispatch_stub_600
0000000000587de0 0000000000000034 T shared_dispatch_stub_601
0000000000587e20 0000000000000034 T shared_dispatch_stub_602
0000000000587e60 0000000000000034 T shared_dispatch_stub_603
0000000000587ea0 0000000000000034 T shared_dispatch_stub_604
0000000000587ee0 0000000000000034 T shared_dispatch_stub_605
0000000000587f20 0000000000000034 T shared_dispatch_stub_606
0000000000587f60 0000000000000034 T shared_dispatch_stub_607
0000000000587fa0 0000000000000034 T shared_dispatch_stub_608
0000000000587fe0 0000000000000034 T shared_dispatch_stub_609
0000000000588020 0000000000000034 T shared_dispatch_stub_610
0000000000588060 0000000000000034 T shared_dispatch_stub_611
00000000005880a0 0000000000000034 T shared_dispatch_stub_612
00000000005880e0 0000000000000034 T shared_dispatch_stub_613
0000000000588120 0000000000000034 T shared_dispatch_stub_614
0000000000588160 0000000000000034 T shared_dispatch_stub_615
00000000005881a0 0000000000000034 T shared_dispatch_stub_616
00000000005881e0 0000000000000034 T shared_dispatch_stub_617
0000000000588220 0000000000000034 T shared_dispatch_stub_618
0000000000588260 0000000000000034 T shared_dispatch_stub_619
00000000005882a0 0000000000000028 T shared_dispatch_stub_620
00000000005882d0 0000000000000034 T shared_dispatch_stub_621
0000000000588310 0000000000000034 T shared_dispatch_stub_622
0000000000588350 0000000000000034 T shared_dispatch_stub_623
0000000000588390 0000000000000034 T shared_dispatch_stub_624
00000000005883d0 0000000000000034 T shared_dispatch_stub_625
0000000000588410 0000000000000034 T shared_dispatch_stub_626
0000000000588450 0000000000000034 T shared_dispatch_stub_627
0000000000588490 0000000000000034 T shared_dispatch_stub_628
00000000005884d0 0000000000000034 T shared_dispatch_stub_629
0000000000588510 0000000000000034 T shared_dispatch_stub_630
0000000000588550 0000000000000034 T shared_dispatch_stub_631
0000000000588590 0000000000000034 T shared_dispatch_stub_632
00000000005885d0 0000000000000034 T shared_dispatch_stub_633
0000000000588610 0000000000000034 T shared_dispatch_stub_634
0000000000588650 0000000000000034 T shared_dispatch_stub_635
0000000000588690 0000000000000034 T shared_dispatch_stub_636
00000000005886d0 0000000000000034 T shared_dispatch_stub_637
0000000000588710 0000000000000034 T shared_dispatch_stub_638
0000000000588750 0000000000000034 T shared_dispatch_stub_639
0000000000588790 0000000000000034 T shared_dispatch_stub_640
00000000005887d0 0000000000000034 T shared_dispatch_stub_641
0000000000588810 0000000000000034 T shared_dispatch_stub_642
0000000000588850 0000000000000034 T shared_dispatch_stub_643
0000000000588890 0000000000000034 T shared_dispatch_stub_644
00000000005888d0 0000000000000034 T shared_dispatch_stub_645
0000000000588910 0000000000000034 T shared_dispatch_stub_646
0000000000588950 0000000000000034 T shared_dispatch_stub_647
0000000000588990 0000000000000034 T shared_dispatch_stub_648
00000000005889d0 0000000000000034 T shared_dispatch_stub_649
0000000000588a10 0000000000000028 T shared_dispatch_stub_650
0000000000588a40 0000000000000034 T shared_dispatch_stub_651
0000000000588a80 0000000000000034 T shared_dispatch_stub_652
0000000000588ac0 0000000000000034 T shared_dispatch_stub_653
0000000000588b00 0000000000000034 T shared_dispatch_stub_654
0000000000588b40 0000000000000034 T shared_dispatch_stub_655
0000000000588b80 0000000000000034 T shared_dispatch_stub_656
0000000000588bc0 0000000000000034 T shared_dispatch_stub_657
0000000000588c00 0000000000000034 T shared_dispatch_stub_658
0000000000588c40 0000000000000034 T shared_dispatch_stub_659
0000000000588c80 0000000000000034 T shared_dispatch_stub_660
0000000000588cc0 0000000000000034 T shared_dispatch_stub_661
0000000000588d00 0000000000000034 T shared_dispatch_stub_662
0000000000588d40 0000000000000034 T shared_dispatch_stub_663
0000000000588d80 0000000000000034 T shared_dispatch_stub_664
0000000000588dc0 0000000000000034 T shared_dispatch_stub_665
0000000000588e00 0000000000000034 T shared_dispatch_stub_666
0000000000588e40 0000000000000034 T shared_dispatch_stub_667
0000000000588e80 0000000000000034 T shared_dispatch_stub_668
0000000000588ec0 0000000000000034 T shared_dispatch_stub_669
0000000000588f00 0000000000000034 T shared_dispatch_stub_670
0000000000588f40 0000000000000034 T shared_dispatch_stub_671
0000000000588f80 0000000000000034 T shared_dispatch_stub_672
0000000000588fc0 0000000000000034 T shared_dispatch_stub_673
0000000000589000 0000000000000034 T shared_dispatch_stub_674
0000000000589040 0000000000000034 T shared_dispatch_stub_675
0000000000589080 0000000000000034 T shared_dispatch_stub_676
00000000005890c0 0000000000000034 T shared_dispatch_stub_677
0000000000589100 0000000000000034 T shared_dispatch_stub_678
0000000000589140 0000000000000034 T shared_dispatch_stub_679
0000000000589180 0000000000000034 T shared_dispatch_stub_680
00000000005891c0 0000000000000034 T shared_dispatch_stub_681
0000000000589200 0000000000000034 T shared_dispatch_stub_682
0000000000589240 0000000000000034 T shared_dispatch_stub_683
0000000000589280 0000000000000034 T shared_dispatch_stub_684
00000000005892c0 0000000000000034 T shared_dispatch_stub_685
0000000000589300 0000000000000034 T shared_dispatch_stub_686
0000000000589340 0000000000000034 T shared_dispatch_stub_687
0000000000589380 0000000000000034 T shared_dispatch_stub_688
00000000005893c0 0000000000000034 T shared_dispatch_stub_689
0000000000589400 0000000000000034 T shared_dispatch_stub_690
0000000000589440 0000000000000034 T shared_dispatch_stub_691
0000000000589480 0000000000000034 T shared_dispatch_stub_692
00000000005894c0 0000000000000034 T shared_dispatch_stub_693
0000000000589500 0000000000000034 T shared_dispatch_stub_694
0000000000589540 0000000000000034 T shared_dispatch_stub_695
0000000000589580 0000000000000034 T shared_dispatch_stub_696
00000000005895c0 0000000000000034 T shared_dispatch_stub_697
0000000000589600 0000000000000034 T shared_dispatch_stub_698
0000000000589640 0000000000000034 T shared_dispatch_stub_699
0000000000589680 0000000000000034 T shared_dispatch_stub_700
00000000005896c0 0000000000000034 T shared_dispatch_stub_701
0000000000589700 0000000000000034 T shared_dispatch_stub_702
0000000000589740 0000000000000034 T shared_dispatch_stub_703
0000000000589780 0000000000000034 T shared_dispatch_stub_704
00000000005897c0 0000000000000034 T shared_dispatch_stub_705
0000000000589800 0000000000000034 T shared_dispatch_stub_706
0000000000589840 0000000000000034 T shared_dispatch_stub_707
0000000000589880 0000000000000034 T shared_dispatch_stub_708
00000000005898c0 0000000000000034 T shared_dispatch_stub_709
0000000000589900 0000000000000034 T shared_dispatch_stub_710
0000000000589940 0000000000000034 T shared_dispatch_stub_711
0000000000589980 0000000000000034 T shared_dispatch_stub_712
00000000005899c0 0000000000000034 T shared_dispatch_stub_713
0000000000589a00 0000000000000034 T shared_dispatch_stub_714
0000000000589a40 0000000000000034 T shared_dispatch_stub_715
0000000000589a80 0000000000000034 T shared_dispatch_stub_716
0000000000589ac0 0000000000000034 T shared_dispatch_stub_717
0000000000589b00 0000000000000034 T shared_dispatch_stub_718
0000000000589b40 0000000000000034 T shared_dispatch_stub_719
0000000000589b80 0000000000000034 T shared_dispatch_stub_720
0000000000589bc0 0000000000000034 T shared_dispatch_stub_721
0000000000589c00 0000000000000034 T shared_dispatch_stub_722
0000000000589c40 0000000000000034 T shared_dispatch_stub_723
0000000000589c80 0000000000000034 T shared_dispatch_stub_724
0000000000589cc0 0000000000000034 T shared_dispatch_stub_725
0000000000589d00 0000000000000034 T shared_dispatch_stub_726
0000000000589d40 0000000000000034 T shared_dispatch_stub_727
0000000000589d80 0000000000000034 T shared_dispatch_stub_728
0000000000589dc0 0000000000000034 T shared_dispatch_stub_729
0000000000589e00 0000000000000034 T shared_dispatch_stub_730
0000000000589e40 0000000000000034 T shared_dispatch_stub_731
0000000000589e80 0000000000000034 T shared_dispatch_stub_732
0000000000589ec0 0000000000000034 T shared_dispatch_stub_733
0000000000589f00 0000000000000034 T shared_dispatch_stub_734
0000000000589f40 0000000000000034 T shared_dispatch_stub_735
0000000000589f80 0000000000000034 T shared_dispatch_stub_736
0000000000589fc0 0000000000000034 T shared_dispatch_stub_737
000000000058a000 0000000000000034 T shared_dispatch_stub_738
000000000058a040 0000000000000034 T shared_dispatch_stub_739
000000000058a080 0000000000000034 T shared_dispatch_stub_740
000000000058a0c0 0000000000000034 T shared_dispatch_stub_741
000000000058a100 0000000000000034 T shared_dispatch_stub_742
000000000058a140 0000000000000034 T shared_dispatch_stub_743
000000000058a180 0000000000000034 T shared_dispatch_stub_744
000000000058a1c0 0000000000000034 T shared_dispatch_stub_745
000000000058a200 0000000000000034 T shared_dispatch_stub_746
000000000058a240 0000000000000034 T shared_dispatch_stub_747
000000000058a280 0000000000000034 T shared_dispatch_stub_748
000000000058a2c0 0000000000000034 T shared_dispatch_stub_749
000000000058a300 0000000000000034 T shared_dispatch_stub_750
000000000058a340 0000000000000034 T shared_dispatch_stub_751
000000000058a380 0000000000000034 T shared_dispatch_stub_752
000000000058a3c0 0000000000000034 T shared_dispatch_stub_753
000000000058a400 0000000000000034 T shared_dispatch_stub_754
000000000058a440 0000000000000034 T shared_dispatch_stub_755
000000000058a480 0000000000000034 T shared_dispatch_stub_756
000000000058a4c0 0000000000000034 T shared_dispatch_stub_757
000000000058a500 0000000000000034 T shared_dispatch_stub_758
000000000058a540 0000000000000034 T shared_dispatch_stub_759
000000000058a580 0000000000000034 T shared_dispatch_stub_760
000000000058a5c0 0000000000000034 T shared_dispatch_stub_761
000000000058a600 0000000000000034 T shared_dispatch_stub_762
000000000058a640 0000000000000034 T shared_dispatch_stub_763
000000000058a680 0000000000000034 T shared_dispatch_stub_764
000000000058a6c0 0000000000000034 T shared_dispatch_stub_765
000000000058a700 0000000000000034 T shared_dispatch_stub_766
000000000058a740 0000000000000034 T shared_dispatch_stub_767
000000000058a780 0000000000000034 T shared_dispatch_stub_768
000000000058a7c0 0000000000000034 T shared_dispatch_stub_769
000000000058a800 0000000000000034 T shared_dispatch_stub_770
000000000058a840 0000000000000034 T shared_dispatch_stub_771
000000000058a880 0000000000000034 T shared_dispatch_stub_772
000000000058a8c0 0000000000000034 T shared_dispatch_stub_773
000000000058a900 0000000000000034 T shared_dispatch_stub_774
000000000058a940 0000000000000034 T shared_dispatch_stub_775
000000000058a980 0000000000000034 T shared_dispatch_stub_776
000000000058a9c0 0000000000000034 T shared_dispatch_stub_777
000000000058aa00 0000000000000034 T shared_dispatch_stub_778
000000000058aa40 0000000000000034 T shared_dispatch_stub_779
000000000058aa80 0000000000000034 T shared_dispatch_stub_780
000000000058aac0 0000000000000034 T shared_dispatch_stub_781
000000000058ab00 0000000000000034 T shared_dispatch_stub_782
000000000058ab40 0000000000000034 T shared_dispatch_stub_783
000000000058ab80 0000000000000034 T shared_dispatch_stub_784
000000000058abc0 0000000000000034 T shared_dispatch_stub_785
000000000058ac00 0000000000000034 T shared_dispatch_stub_786
000000000058ac40 0000000000000034 T shared_dispatch_stub_787
000000000058ac80 0000000000000034 T shared_dispatch_stub_788
000000000058acc0 0000000000000034 T shared_dispatch_stub_789
000000000058ad00 0000000000000034 T shared_dispatch_stub_790
000000000058ad40 0000000000000034 T shared_dispatch_stub_791
000000000058ad80 0000000000000034 T shared_dispatch_stub_792
000000000058adc0 0000000000000034 T shared_dispatch_stub_793
000000000058ae00 0000000000000034 T shared_dispatch_stub_794
000000000058ae40 0000000000000034 T shared_dispatch_stub_795
000000000058ae80 0000000000000034 T shared_dispatch_stub_796
000000000058aec0 0000000000000034 T shared_dispatch_stub_797
000000000058af00 0000000000000034 T shared_dispatch_stub_798
000000000058af40 0000000000000034 T shared_dispatch_stub_799
000000000058af80 0000000000000034 T shared_dispatch_stub_800
000000000058afc0 0000000000000034 T shared_dispatch_stub_801
000000000058b000 0000000000000034 T shared_dispatch_stub_802
000000000058b040 0000000000000034 T shared_dispatch_stub_803
000000000058b080 0000000000000034 T shared_dispatch_stub_804
000000000058b0c0 0000000000000034 T shared_dispatch_stub_805
000000000058b100 0000000000000034 T shared_dispatch_stub_806
000000000058b140 0000000000000028 T shared_dispatch_stub_807
000000000058b170 0000000000000028 T shared_dispatch_stub_808
000000000058b1a0 0000000000000034 T shared_dispatch_stub_809
000000000058b1e0 0000000000000034 T shared_dispatch_stub_810
000000000058b220 0000000000000034 T shared_dispatch_stub_811
000000000058b260 0000000000000034 T shared_dispatch_stub_812
000000000058b2a0 0000000000000028 T shared_dispatch_stub_813
000000000058b2d0 0000000000000028 T shared_dispatch_stub_814
000000000058b300 0000000000000034 T shared_dispatch_stub_815
000000000058b340 0000000000000028 T shared_dispatch_stub_816
000000000058b370 0000000000000034 T shared_dispatch_stub_817
000000000058b3b0 0000000000000034 T shared_dispatch_stub_818
000000000058b3f0 0000000000000034 T shared_dispatch_stub_819
000000000058b430 0000000000000034 T shared_dispatch_stub_820
000000000058b470 0000000000000034 T shared_dispatch_stub_821
000000000058b4b0 0000000000000034 T shared_dispatch_stub_822
000000000058b4f0 0000000000000034 T shared_dispatch_stub_823
000000000058b530 0000000000000034 T shared_dispatch_stub_824
000000000058b570 0000000000000034 T shared_dispatch_stub_825
000000000058b5b0 0000000000000034 T shared_dispatch_stub_826
000000000058b5f0 0000000000000034 T shared_dispatch_stub_827
000000000058b630 0000000000000034 T shared_dispatch_stub_828
000000000058b670 0000000000000034 T shared_dispatch_stub_829
000000000058b6b0 0000000000000034 T shared_dispatch_stub_830
000000000058b6f0 0000000000000034 T shared_dispatch_stub_831
000000000058b730 0000000000000034 T shared_dispatch_stub_832
000000000058b770 0000000000000034 T shared_dispatch_stub_833
000000000058b7b0 0000000000000034 T shared_dispatch_stub_834
000000000058b7f0 0000000000000034 T shared_dispatch_stub_835
000000000058b830 0000000000000034 T shared_dispatch_stub_836
000000000058b870 0000000000000034 T shared_dispatch_stub_837
000000000058b8b0 0000000000000034 T shared_dispatch_stub_838
000000000058b8f0 0000000000000034 T shared_dispatch_stub_839
000000000058b930 0000000000000034 T shared_dispatch_stub_840
000000000058b970 0000000000000028 T shared_dispatch_stub_841
000000000058b9a0 0000000000000034 T shared_dispatch_stub_842
000000000058b9e0 0000000000000034 T shared_dispatch_stub_843
000000000058ba20 0000000000000034 T shared_dispatch_stub_844
000000000058ba60 0000000000000034 T shared_dispatch_stub_845
000000000058baa0 0000000000000034 T shared_dispatch_stub_846
000000000058bae0 0000000000000034 T shared_dispatch_stub_847
000000000058bb20 0000000000000034 T shared_dispatch_stub_848
000000000058bb60 0000000000000034 T shared_dispatch_stub_849
000000000058bba0 0000000000000034 T shared_dispatch_stub_850
000000000058bbe0 0000000000000034 T shared_dispatch_stub_851
000000000058bc20 0000000000000034 T shared_dispatch_stub_852
000000000058bc60 0000000000000034 T shared_dispatch_stub_853
000000000058bca0 0000000000000034 T shared_dispatch_stub_854
000000000058bce0 0000000000000034 T shared_dispatch_stub_855
000000000058bd20 0000000000000034 T shared_dispatch_stub_856
000000000058bd60 0000000000000034 T shared_dispatch_stub_857
000000000058bda0 0000000000000034 T shared_dispatch_stub_858
000000000058bde0 0000000000000034 T shared_dispatch_stub_859
000000000058be20 0000000000000034 T shared_dispatch_stub_860
000000000058be60 0000000000000034 T shared_dispatch_stub_861
000000000058bea0 0000000000000034 T shared_dispatch_stub_862
000000000058bee0 0000000000000034 T shared_dispatch_stub_863
000000000058bf20 0000000000000034 T shared_dispatch_stub_864
000000000058bf60 0000000000000034 T shared_dispatch_stub_865
000000000058bfa0 0000000000000034 T shared_dispatch_stub_866
000000000058bfe0 0000000000000034 T shared_dispatch_stub_867
000000000058c020 0000000000000034 T shared_dispatch_stub_868
000000000058c060 0000000000000034 T shared_dispatch_stub_869
000000000058c0a0 0000000000000034 T shared_dispatch_stub_870
000000000058c0e0 0000000000000034 T shared_dispatch_stub_871
000000000058c120 0000000000000034 T shared_dispatch_stub_872
000000000058c160 0000000000000034 T shared_dispatch_stub_873
000000000058c1a0 0000000000000034 T shared_dispatch_stub_874
000000000058c1e0 0000000000000034 T shared_dispatch_stub_875
000000000058c220 0000000000000034 T shared_dispatch_stub_876
000000000058c260 0000000000000034 T shared_dispatch_stub_877
000000000058c2a0 0000000000000034 T shared_dispatch_stub_878
000000000058c2e0 0000000000000034 T shared_dispatch_stub_879
000000000058c320 0000000000000034 T shared_dispatch_stub_880
000000000058c360 0000000000000034 T shared_dispatch_stub_881
000000000058c3a0 0000000000000034 T shared_dispatch_stub_882
000000000058c3e0 0000000000000034 T shared_dispatch_stub_883
000000000058c420 0000000000000034 T shared_dispatch_stub_884
000000000058c460 0000000000000034 T shared_dispatch_stub_885
000000000058c4a0 0000000000000034 T shared_dispatch_stub_886
000000000058c4e0 0000000000000034 T shared_dispatch_stub_887
000000000058c520 0000000000000034 T shared_dispatch_stub_888
000000000058c560 0000000000000034 T shared_dispatch_stub_889
000000000058c5a0 0000000000000034 T shared_dispatch_stub_890
000000000058c5e0 0000000000000034 T shared_dispatch_stub_891
000000000058c620 0000000000000034 T shared_dispatch_stub_892
000000000058c660 0000000000000034 T shared_dispatch_stub_893
000000000058c6a0 0000000000000034 T shared_dispatch_stub_894
000000000058c6e0 0000000000000034 T shared_dispatch_stub_895
000000000058c720 0000000000000034 T shared_dispatch_stub_896
000000000058c760 0000000000000034 T shared_dispatch_stub_897
000000000058c7a0 0000000000000034 T shared_dispatch_stub_898
000000000058c7e0 0000000000000034 T shared_dispatch_stub_899
000000000058c820 0000000000000034 T shared_dispatch_stub_900
000000000058c860 0000000000000034 T shared_dispatch_stub_901
000000000058c8a0 0000000000000034 T shared_dispatch_stub_902
000000000058c8e0 0000000000000034 T shared_dispatch_stub_903
000000000058c920 0000000000000034 T shared_dispatch_stub_904
000000000058c960 0000000000000034 T shared_dispatch_stub_905
000000000058c9a0 0000000000000034 T shared_dispatch_stub_906
000000000058c9e0 0000000000000034 T shared_dispatch_stub_907
000000000058ca20 0000000000000034 T shared_dispatch_stub_908
000000000058ca60 0000000000000034 T shared_dispatch_stub_909
000000000058caa0 0000000000000034 T shared_dispatch_stub_910
000000000058cae0 0000000000000034 T shared_dispatch_stub_911
000000000058cb20 0000000000000034 T shared_dispatch_stub_912
000000000058cb60 0000000000000034 T shared_dispatch_stub_913
000000000058cba0 0000000000000034 T shared_dispatch_stub_914
000000000058cbe0 0000000000000034 T shared_dispatch_stub_915
000000000058cc20 0000000000000034 T shared_dispatch_stub_916
000000000058cc60 0000000000000034 T shared_dispatch_stub_917
000000000058cca0 0000000000000034 T shared_dispatch_stub_918
000000000058cce0 0000000000000034 T shared_dispatch_stub_919
000000000058cd20 0000000000000034 T shared_dispatch_stub_920
000000000058cd60 0000000000000034 T shared_dispatch_stub_921
000000000058cda0 0000000000000034 T shared_dispatch_stub_922
000000000058cde0 0000000000000034 T shared_dispatch_stub_923
000000000058ce20 0000000000000034 T shared_dispatch_stub_924
000000000058ce60 0000000000000034 T shared_dispatch_stub_925
000000000058cea0 0000000000000034 T shared_dispatch_stub_926
000000000058cee0 0000000000000034 T shared_dispatch_stub_927
000000000058cf20 0000000000000034 T shared_dispatch_stub_928
000000000058cf60 0000000000000034 T shared_dispatch_stub_929
000000000058cfa0 0000000000000034 T shared_dispatch_stub_930
000000000058cfe0 0000000000000034 T shared_dispatch_stub_931
000000000058d020 0000000000000034 T shared_dispatch_stub_932
000000000058d060 0000000000000034 T shared_dispatch_stub_933
000000000058d0a0 0000000000000034 T shared_dispatch_stub_934
000000000058d0e0 0000000000000034 T shared_dispatch_stub_935
000000000058d120 0000000000000034 T shared_dispatch_stub_936
000000000058d160 0000000000000034 T shared_dispatch_stub_937
000000000058d1a0 0000000000000034 T shared_dispatch_stub_938
000000000058d1e0 0000000000000034 T shared_dispatch_stub_939
000000000058d220 0000000000000034 T shared_dispatch_stub_940
000000000058d260 0000000000000034 T shared_dispatch_stub_941
000000000058d2a0 0000000000000034 T shared_dispatch_stub_942
000000000058d2e0 0000000000000034 T shared_dispatch_stub_943
000000000058d320 0000000000000034 T shared_dispatch_stub_944
000000000058d360 0000000000000034 T shared_dispatch_stub_945
000000000058d3a0 0000000000000034 T shared_dispatch_stub_946
000000000058d3e0 0000000000000034 T shared_dispatch_stub_947
000000000058d420 0000000000000034 T shared_dispatch_stub_948
000000000058d460 0000000000000034 T shared_dispatch_stub_949
000000000058d4a0 0000000000000034 T shared_dispatch_stub_950
000000000058d4e0 0000000000000034 T shared_dispatch_stub_951
000000000058d520 0000000000000034 T shared_dispatch_stub_952
000000000058d560 0000000000000034 T shared_dispatch_stub_953
000000000058d5a0 0000000000000034 T shared_dispatch_stub_954
000000000058d5e0 0000000000000034 T shared_dispatch_stub_955
000000000058d620 0000000000000034 T shared_dispatch_stub_956
000000000058d660 0000000000000034 T shared_dispatch_stub_957
000000000058d6a0 0000000000000034 T shared_dispatch_stub_958
000000000058d6e0 0000000000000034 T shared_dispatch_stub_959
000000000058d720 0000000000000034 T shared_dispatch_stub_960
000000000058d760 0000000000000034 T shared_dispatch_stub_961
000000000058d7a0 0000000000000034 T shared_dispatch_stub_962
000000000058d7e0 0000000000000034 T shared_dispatch_stub_963
000000000058d820 0000000000000034 T shared_dispatch_stub_964
000000000058d860 0000000000000034 T shared_dispatch_stub_965
000000000058d8a0 0000000000000034 T shared_dispatch_stub_966
000000000058d8e0 0000000000000034 T shared_dispatch_stub_967
000000000058d920 0000000000000034 T shared_dispatch_stub_968
000000000058d960 0000000000000034 T shared_dispatch_stub_969
000000000058d9a0 0000000000000034 T shared_dispatch_stub_970
000000000058d9e0 0000000000000034 T shared_dispatch_stub_971
000000000058da20 0000000000000034 T shared_dispatch_stub_972
000000000058da60 0000000000000034 T shared_dispatch_stub_973
000000000058daa0 0000000000000034 T shared_dispatch_stub_974
000000000058dae0 0000000000000034 T shared_dispatch_stub_975
000000000058db20 0000000000000034 T shared_dispatch_stub_976
000000000058db60 0000000000000034 T shared_dispatch_stub_977
000000000058dba0 0000000000000034 T shared_dispatch_stub_978
000000000058dbe0 0000000000000034 T shared_dispatch_stub_979
000000000058dc20 0000000000000034 T shared_dispatch_stub_980
000000000058dc60 0000000000000034 T shared_dispatch_stub_981
000000000058dca0 0000000000000034 T shared_dispatch_stub_982
000000000058dce0 0000000000000034 T shared_dispatch_stub_983
000000000058dd20 0000000000000034 T shared_dispatch_stub_984
000000000058dd60 0000000000000034 T shared_dispatch_stub_985
000000000058dda0 0000000000000034 T shared_dispatch_stub_986
000000000058dde0 0000000000000034 T shared_dispatch_stub_987
000000000058de20 0000000000000034 T shared_dispatch_stub_988
000000000058de60 0000000000000034 T shared_dispatch_stub_989
000000000058dea0 0000000000000034 T shared_dispatch_stub_990
000000000058dee0 0000000000000034 T shared_dispatch_stub_991
000000000058df20 0000000000000034 T shared_dispatch_stub_992
000000000058df60 0000000000000034 T shared_dispatch_stub_993
000000000058dfa0 0000000000000034 T shared_dispatch_stub_994
000000000058dfe0 0000000000000034 T shared_dispatch_stub_995
000000000058e020 0000000000000034 T shared_dispatch_stub_996
000000000058e060 0000000000000034 T shared_dispatch_stub_997
000000000058e0a0 0000000000000034 T shared_dispatch_stub_998
000000000058e0e0 0000000000000034 T shared_dispatch_stub_999
000000000058e120 0000000000000034 T shared_dispatch_stub_1000
000000000058e160 0000000000000034 T shared_dispatch_stub_1001
000000000058e1a0 0000000000000034 T shared_dispatch_stub_1002
000000000058e1e0 0000000000000034 T shared_dispatch_stub_1003
000000000058e220 0000000000000034 T shared_dispatch_stub_1004
000000000058e260 0000000000000034 T shared_dispatch_stub_1005
000000000058e2a0 0000000000000034 T shared_dispatch_stub_1006
000000000058e2e0 0000000000000034 T shared_dispatch_stub_1007
000000000058e320 0000000000000034 T shared_dispatch_stub_1008
000000000058e360 0000000000000034 T shared_dispatch_stub_1009
000000000058e3a0 0000000000000034 T shared_dispatch_stub_1010
000000000058e3e0 0000000000000034 T shared_dispatch_stub_1011
000000000058e420 0000000000000034 T shared_dispatch_stub_1012
000000000058e460 0000000000000034 T shared_dispatch_stub_1013
000000000058e4a0 0000000000000034 T shared_dispatch_stub_1014
000000000058e4e0 0000000000000034 T shared_dispatch_stub_1015
000000000058e520 0000000000000034 T shared_dispatch_stub_1016
000000000058e560 0000000000000034 T shared_dispatch_stub_1017
000000000058e5a0 0000000000000034 T shared_dispatch_stub_1018
000000000058e5e0 0000000000000034 T shared_dispatch_stub_1019
000000000058e620 0000000000000034 T shared_dispatch_stub_1020
000000000058e660 0000000000000034 T shared_dispatch_stub_1021
000000000058e6a0 0000000000000034 T shared_dispatch_stub_1022
000000000058e6e0 0000000000000034 T shared_dispatch_stub_1023
000000000058e720 0000000000000034 T shared_dispatch_stub_1024
000000000058e760 0000000000000034 T shared_dispatch_stub_1025
000000000058e7a0 0000000000000034 T shared_dispatch_stub_1026
000000000058e7e0 0000000000000034 T shared_dispatch_stub_1027
000000000058e820 0000000000000034 T shared_dispatch_stub_1028
000000000058e860 0000000000000034 T shared_dispatch_stub_1029
000000000058e8a0 0000000000000034 T shared_dispatch_stub_1030
000000000058e8e0 0000000000000034 T shared_dispatch_stub_1031
000000000058e920 0000000000000034 T shared_dispatch_stub_1032
000000000058e960 0000000000000034 T shared_dispatch_stub_1033
000000000058e9a0 0000000000000034 T shared_dispatch_stub_1034
000000000058e9e0 0000000000000034 T shared_dispatch_stub_1035
000000000058ea20 0000000000000034 T shared_dispatch_stub_1036
000000000058ea60 0000000000000034 T shared_dispatch_stub_1037
000000000058eaa0 0000000000000034 T shared_dispatch_stub_1038
000000000058eae0 0000000000000034 T shared_dispatch_stub_1039
000000000058eb20 0000000000000034 T shared_dispatch_stub_1040
000000000058eb60 0000000000000034 T shared_dispatch_stub_1041
000000000058eba0 0000000000000034 T shared_dispatch_stub_1042
000000000058ebe0 0000000000000034 T shared_dispatch_stub_1043
000000000058ec20 0000000000000034 T shared_dispatch_stub_1044
000000000058ec60 0000000000000034 T shared_dispatch_stub_1045
000000000058eca0 0000000000000034 T shared_dispatch_stub_1046
000000000058ece0 0000000000000034 T shared_dispatch_stub_1047
000000000058ed20 0000000000000034 T shared_dispatch_stub_1048
000000000058ed60 0000000000000034 T shared_dispatch_stub_1049
000000000058eda0 0000000000000034 T shared_dispatch_stub_1050
000000000058ede0 0000000000000034 T shared_dispatch_stub_1051
000000000058ee20 0000000000000034 T shared_dispatch_stub_1052
000000000058ee60 0000000000000034 T shared_dispatch_stub_1053
000000000058eea0 0000000000000034 T shared_dispatch_stub_1054
000000000058eee0 0000000000000034 T shared_dispatch_stub_1055
000000000058ef20 0000000000000034 T shared_dispatch_stub_1056
000000000058ef60 0000000000000034 T shared_dispatch_stub_1057
000000000058efa0 0000000000000034 T shared_dispatch_stub_1058
000000000058efe0 0000000000000034 T shared_dispatch_stub_1059
000000000058f020 0000000000000034 T shared_dispatch_stub_1060
000000000058f060 0000000000000034 T shared_dispatch_stub_1061
000000000058f0a0 0000000000000034 T shared_dispatch_stub_1062
000000000058f0e0 0000000000000034 T shared_dispatch_stub_1063
000000000058f120 0000000000000034 T shared_dispatch_stub_1064
000000000058f160 0000000000000034 T shared_dispatch_stub_1065
000000000058f1a0 0000000000000034 T shared_dispatch_stub_1066
000000000058f1e0 0000000000000034 T shared_dispatch_stub_1067
000000000058f220 0000000000000034 T shared_dispatch_stub_1068
000000000058f260 0000000000000028 T shared_dispatch_stub_1069
000000000058f290 0000000000000034 T shared_dispatch_stub_1070
000000000058f2d0 0000000000000034 T shared_dispatch_stub_1071
000000000058f310 0000000000000034 T shared_dispatch_stub_1072
000000000058f350 0000000000000034 T shared_dispatch_stub_1073
000000000058f390 0000000000000034 T shared_dispatch_stub_1074
000000000058f3d0 0000000000000034 T shared_dispatch_stub_1075
000000000058f410 0000000000000034 T shared_dispatch_stub_1076
000000000058f450 0000000000000034 T shared_dispatch_stub_1077
000000000058f490 0000000000000034 T shared_dispatch_stub_1078
000000000058f4d0 0000000000000028 T shared_dispatch_stub_1079
000000000058f500 0000000000000034 T shared_dispatch_stub_1080
000000000058f540 0000000000000034 T shared_dispatch_stub_1081
000000000058f580 0000000000000034 T shared_dispatch_stub_1082
000000000058f5c0 0000000000000034 T shared_dispatch_stub_1083
000000000058f600 0000000000000034 T shared_dispatch_stub_1084
000000000058f640 0000000000000034 T shared_dispatch_stub_1085
000000000058f680 0000000000000034 T shared_dispatch_stub_1086
000000000058f6c0 0000000000000034 T shared_dispatch_stub_1087
000000000058f700 0000000000000034 T shared_dispatch_stub_1088
000000000058f740 0000000000000034 T shared_dispatch_stub_1089
000000000058f780 0000000000000034 T shared_dispatch_stub_1090
000000000058f7c0 0000000000000034 T shared_dispatch_stub_1091
000000000058f800 0000000000000034 T shared_dispatch_stub_1092
000000000058f840 0000000000000034 T shared_dispatch_stub_1093
000000000058f880 0000000000000034 T shared_dispatch_stub_1094
000000000058f8c0 0000000000000034 T shared_dispatch_stub_1095
000000000058f900 0000000000000034 T shared_dispatch_stub_1096
000000000058f940 0000000000000034 T shared_dispatch_stub_1097
000000000058f980 0000000000000034 T shared_dispatch_stub_1098
000000000058f9c0 0000000000000034 T shared_dispatch_stub_1099
000000000058fa00 0000000000000034 T shared_dispatch_stub_1100
000000000058fa40 0000000000000034 T shared_dispatch_stub_1101
000000000058fa80 0000000000000034 T shared_dispatch_stub_1102
000000000058fac0 0000000000000034 T shared_dispatch_stub_1103
000000000058fb00 0000000000000034 T shared_dispatch_stub_1104
000000000058fb40 0000000000000034 T shared_dispatch_stub_1105
000000000058fb80 0000000000000034 T shared_dispatch_stub_1106
000000000058fbc0 0000000000000034 T shared_dispatch_stub_1107
000000000058fc00 0000000000000034 T shared_dispatch_stub_1108
000000000058fc40 0000000000000034 T shared_dispatch_stub_1109
000000000058fc80 0000000000000034 T shared_dispatch_stub_1110
000000000058fcc0 0000000000000034 T shared_dispatch_stub_1111
000000000058fd00 0000000000000034 T shared_dispatch_stub_1112
000000000058fd40 0000000000000034 T shared_dispatch_stub_1113
000000000058fd80 0000000000000034 T shared_dispatch_stub_1114
000000000058fdc0 0000000000000034 T shared_dispatch_stub_1115
000000000058fe00 0000000000000034 T shared_dispatch_stub_1116
000000000058fe40 0000000000000034 T shared_dispatch_stub_1117
000000000058fe80 0000000000000034 T shared_dispatch_stub_1118
000000000058fec0 0000000000000034 T shared_dispatch_stub_1119
000000000058ff00 0000000000000034 T shared_dispatch_stub_1120
000000000058ff40 0000000000000034 T shared_dispatch_stub_1121
000000000058ff80 0000000000000034 T shared_dispatch_stub_1122
000000000058ffc0 0000000000000034 T shared_dispatch_stub_1123
0000000000590000 0000000000000034 T shared_dispatch_stub_1124
0000000000590040 0000000000000034 T shared_dispatch_stub_1125
0000000000590080 0000000000000034 T shared_dispatch_stub_1126
00000000005900c0 0000000000000034 T shared_dispatch_stub_1127
0000000000590100 0000000000000034 T shared_dispatch_stub_1128
0000000000590140 0000000000000034 T shared_dispatch_stub_1129
0000000000590180 0000000000000034 T shared_dispatch_stub_1130
00000000005901c0 0000000000000034 T shared_dispatch_stub_1131
0000000000590200 0000000000000034 T shared_dispatch_stub_1132
0000000000590240 0000000000000034 T shared_dispatch_stub_1133
0000000000590280 0000000000000034 T shared_dispatch_stub_1134
00000000005902c0 0000000000000034 T shared_dispatch_stub_1135
0000000000590300 0000000000000034 T shared_dispatch_stub_1136
0000000000590340 0000000000000034 T shared_dispatch_stub_1137
0000000000590380 0000000000000034 T shared_dispatch_stub_1138
00000000005903c0 0000000000000034 T shared_dispatch_stub_1139
0000000000590400 0000000000000034 T shared_dispatch_stub_1140
0000000000590440 0000000000000034 T shared_dispatch_stub_1141
0000000000590480 0000000000000034 T shared_dispatch_stub_1142
00000000005904c0 0000000000000034 T shared_dispatch_stub_1143
0000000000590500 0000000000000034 T shared_dispatch_stub_1144
0000000000590540 0000000000000034 T shared_dispatch_stub_1145
0000000000590580 0000000000000034 T shared_dispatch_stub_1146
00000000005905c0 0000000000000034 T shared_dispatch_stub_1147
0000000000590600 0000000000000034 T shared_dispatch_stub_1148
0000000000590640 0000000000000034 T shared_dispatch_stub_1149
0000000000590680 0000000000000034 T shared_dispatch_stub_1150
00000000005906c0 0000000000000034 T shared_dispatch_stub_1151
0000000000590700 0000000000000034 T shared_dispatch_stub_1152
0000000000590740 0000000000000034 T shared_dispatch_stub_1153
0000000000590780 0000000000000034 T shared_dispatch_stub_1154
00000000005907c0 0000000000000034 T shared_dispatch_stub_1155
0000000000590800 0000000000000034 T shared_dispatch_stub_1156
0000000000590840 0000000000000028 T shared_dispatch_stub_1157
0000000000590870 0000000000000034 T shared_dispatch_stub_1158
00000000005908b0 0000000000000034 T shared_dispatch_stub_1159
00000000005908f0 0000000000000034 T shared_dispatch_stub_1160
0000000000590930 0000000000000034 T shared_dispatch_stub_1161
0000000000590970 0000000000000034 T shared_dispatch_stub_1162
00000000005909b0 0000000000000034 T shared_dispatch_stub_1163
00000000005909f0 0000000000000034 T shared_dispatch_stub_1164
0000000000590a30 0000000000000034 T shared_dispatch_stub_1165
0000000000590a70 0000000000000034 T shared_dispatch_stub_1166
0000000000590ab0 0000000000000034 T shared_dispatch_stub_1167
0000000000590af0 0000000000000034 T shared_dispatch_stub_1168
0000000000590b30 0000000000000028 T shared_dispatch_stub_1169
0000000000590b60 0000000000000034 T shared_dispatch_stub_1170
0000000000590ba0 0000000000000028 T shared_dispatch_stub_1171
0000000000590bd0 0000000000000034 T shared_dispatch_stub_1172
0000000000590c10 0000000000000034 T shared_dispatch_stub_1173
0000000000590c50 0000000000000028 T shared_dispatch_stub_1174
0000000000590c80 0000000000000034 T shared_dispatch_stub_1175
0000000000590cc0 0000000000000028 T shared_dispatch_stub_1176
0000000000590cf0 0000000000000028 T shared_dispatch_stub_1177
0000000000590d20 0000000000000034 T shared_dispatch_stub_1178
0000000000590d60 0000000000000028 T shared_dispatch_stub_1179
0000000000590d90 0000000000000034 T shared_dispatch_stub_1180
0000000000590dd0 0000000000000034 T shared_dispatch_stub_1181
0000000000590e10 0000000000000034 T shared_dispatch_stub_1182
0000000000590e50 0000000000000034 T shared_dispatch_stub_1183
0000000000590e90 0000000000000034 T shared_dispatch_stub_1184
0000000000590ed0 0000000000000034 T shared_dispatch_stub_1185
0000000000590f10 0000000000000034 T shared_dispatch_stub_1186
0000000000590f50 0000000000000034 T shared_dispatch_stub_1187
0000000000590f90 0000000000000034 T shared_dispatch_stub_1188
0000000000590fd0 0000000000000034 T shared_dispatch_stub_1189
0000000000591010 0000000000000034 T shared_dispatch_stub_1190
0000000000591050 0000000000000034 T shared_dispatch_stub_1191
0000000000591090 0000000000000034 T shared_dispatch_stub_1192
00000000005910d0 0000000000000034 T shared_dispatch_stub_1193
0000000000591110 0000000000000034 T shared_dispatch_stub_1194
0000000000591150 0000000000000034 T shared_dispatch_stub_1195
0000000000591190 0000000000000034 T shared_dispatch_stub_1196
00000000005911d0 0000000000000034 T shared_dispatch_stub_1197
0000000000591210 0000000000000034 T shared_dispatch_stub_1198
0000000000591250 0000000000000034 T shared_dispatch_stub_1199
0000000000591290 0000000000000034 T shared_dispatch_stub_1200
00000000005912d0 0000000000000034 T shared_dispatch_stub_1201
0000000000591310 0000000000000034 T shared_dispatch_stub_1202
0000000000591350 0000000000000034 T shared_dispatch_stub_1203
0000000000591390 0000000000000034 T shared_dispatch_stub_1204
00000000005913d0 0000000000000034 T shared_dispatch_stub_1205
0000000000591410 0000000000000034 T shared_dispatch_stub_1206
0000000000591450 0000000000000034 T shared_dispatch_stub_1207
0000000000591490 0000000000000034 T shared_dispatch_stub_1208
00000000005914d0 0000000000000034 T shared_dispatch_stub_1209
0000000000591510 0000000000000034 T shared_dispatch_stub_1210
0000000000591550 0000000000000034 T shared_dispatch_stub_1211
0000000000591590 0000000000000034 T shared_dispatch_stub_1212
00000000005915d0 0000000000000034 T shared_dispatch_stub_1213
0000000000591610 0000000000000034 T shared_dispatch_stub_1214
0000000000591650 0000000000000034 T shared_dispatch_stub_1215
0000000000591690 0000000000000034 T shared_dispatch_stub_1216
00000000005916d0 0000000000000034 T shared_dispatch_stub_1217
0000000000591710 0000000000000034 T shared_dispatch_stub_1218
0000000000591750 0000000000000034 T shared_dispatch_stub_1219
0000000000591790 0000000000000034 T shared_dispatch_stub_1220
00000000005917d0 0000000000000034 T shared_dispatch_stub_1221
0000000000591810 0000000000000034 T shared_dispatch_stub_1222
0000000000591850 0000000000000034 T shared_dispatch_stub_1223
0000000000591890 0000000000000034 T shared_dispatch_stub_1224
00000000005918d0 0000000000000034 T shared_dispatch_stub_1225
0000000000591910 0000000000000034 T shared_dispatch_stub_1226
0000000000591950 0000000000000034 T shared_dispatch_stub_1227
0000000000591990 0000000000000034 T shared_dispatch_stub_1228
00000000005919d0 0000000000000034 T shared_dispatch_stub_1229
0000000000591a10 0000000000000034 T shared_dispatch_stub_1230
0000000000591a50 0000000000000034 T shared_dispatch_stub_1231
0000000000591a90 0000000000000034 T shared_dispatch_stub_1232
0000000000591ad0 0000000000000034 T shared_dispatch_stub_1233
0000000000591b10 0000000000000034 T shared_dispatch_stub_1234
0000000000591b50 0000000000000034 T shared_dispatch_stub_1235
0000000000591b90 0000000000000034 T shared_dispatch_stub_1236
0000000000591bd0 0000000000000034 T shared_dispatch_stub_1237
0000000000591c10 0000000000000034 T shared_dispatch_stub_1238
0000000000591c50 0000000000000034 T shared_dispatch_stub_1239
0000000000591c90 0000000000000034 T shared_dispatch_stub_1240
0000000000591cd0 0000000000000034 T shared_dispatch_stub_1241
0000000000591d10 0000000000000034 T shared_dispatch_stub_1242
0000000000591d50 0000000000000034 T shared_dispatch_stub_1243
0000000000591d90 0000000000000034 T shared_dispatch_stub_1244
0000000000591dd0 0000000000000034 T shared_dispatch_stub_1245
0000000000591e10 0000000000000034 T shared_dispatch_stub_1246
0000000000591e50 0000000000000034 T shared_dispatch_stub_1247
0000000000591e90 0000000000000034 T shared_dispatch_stub_1248
0000000000591ed0 0000000000000028 T shared_dispatch_stub_1249
0000000000591f00 0000000000000034 T shared_dispatch_stub_1250
0000000000591f40 0000000000000034 T shared_dispatch_stub_1251
0000000000591f80 0000000000000034 T shared_dispatch_stub_1252
0000000000591fc0 0000000000000034 T shared_dispatch_stub_1253
0000000000592000 0000000000000034 T shared_dispatch_stub_1254
0000000000592040 0000000000000028 T shared_dispatch_stub_1255
0000000000592070 0000000000000034 T shared_dispatch_stub_1256
00000000005920b0 0000000000000034 T shared_dispatch_stub_1257
00000000005920f0 0000000000000034 T shared_dispatch_stub_1258
0000000000592130 0000000000000034 T shared_dispatch_stub_1259
0000000000592170 0000000000000034 T shared_dispatch_stub_1260
00000000005921b0 0000000000000034 T shared_dispatch_stub_1261
00000000005921f0 0000000000000034 T shared_dispatch_stub_1262
0000000000592230 0000000000000034 T shared_dispatch_stub_1263
0000000000592270 0000000000000034 T shared_dispatch_stub_1264
00000000005922b0 0000000000000034 T shared_dispatch_stub_1265
00000000005922f0 0000000000000034 T shared_dispatch_stub_1266
0000000000592330 0000000000000034 T shared_dispatch_stub_1267
0000000000592370 0000000000000034 T shared_dispatch_stub_1268
00000000005923b0 0000000000000028 T shared_dispatch_stub_1269
00000000005923e0 0000000000000034 T shared_dispatch_stub_1270
0000000000592420 0000000000000034 T shared_dispatch_stub_1271
0000000000592460 0000000000000034 T shared_dispatch_stub_1272
00000000005924a0 0000000000000028 T shared_dispatch_stub_1273
00000000005924d0 0000000000000034 T shared_dispatch_stub_1274
0000000000592510 0000000000000034 T shared_dispatch_stub_1275
0000000000592550 0000000000000034 T shared_dispatch_stub_1276
0000000000592590 0000000000000034 T shared_dispatch_stub_1277
00000000005925d0 0000000000000034 T shared_dispatch_stub_1278
0000000000592610 0000000000000034 T shared_dispatch_stub_1279
0000000000592650 0000000000000034 T shared_dispatch_stub_1280
0000000000592690 0000000000000034 T shared_dispatch_stub_1281
00000000005926d0 0000000000000034 T shared_dispatch_stub_1282
0000000000592710 0000000000000034 T shared_dispatch_stub_1283
0000000000592750 0000000000000034 T shared_dispatch_stub_1284
0000000000592790 0000000000000034 T shared_dispatch_stub_1285
00000000005927d0 0000000000000034 T shared_dispatch_stub_1286
0000000000592810 0000000000000034 T shared_dispatch_stub_1287
0000000000592850 0000000000000034 T shared_dispatch_stub_1288
0000000000592890 0000000000000034 T shared_dispatch_stub_1289
00000000005928d0 0000000000000034 T shared_dispatch_stub_1290
0000000000592910 0000000000000034 T shared_dispatch_stub_1291
0000000000592950 0000000000000034 T shared_dispatch_stub_1292
0000000000592990 0000000000000034 T shared_dispatch_stub_1293
00000000005929d0 0000000000000034 T shared_dispatch_stub_1294
0000000000592a10 0000000000000034 T shared_dispatch_stub_1295
0000000000592a50 0000000000000034 T shared_dispatch_stub_1296
0000000000592a90 0000000000000034 T shared_dispatch_stub_1297
0000000000592ad0 0000000000000034 T shared_dispatch_stub_1298
0000000000592b10 0000000000000034 T shared_dispatch_stub_1299
0000000000592b50 0000000000000034 T shared_dispatch_stub_1300
0000000000592b90 0000000000000034 T shared_dispatch_stub_1301
0000000000592bd0 0000000000000034 T shared_dispatch_stub_1302
0000000000592c10 0000000000000034 T shared_dispatch_stub_1303
0000000000592c50 0000000000000034 T shared_dispatch_stub_1304
0000000000592c90 0000000000000034 T shared_dispatch_stub_1305
0000000000592cd0 0000000000000034 T shared_dispatch_stub_1306
0000000000592d10 0000000000000034 T shared_dispatch_stub_1307
0000000000592d50 0000000000000034 T shared_dispatch_stub_1308
0000000000592d90 0000000000000034 T shared_dispatch_stub_1309
0000000000592dd0 0000000000000034 T shared_dispatch_stub_1310
0000000000592e10 0000000000000034 T shared_dispatch_stub_1311
0000000000592e50 0000000000000034 T shared_dispatch_stub_1312
0000000000592e90 0000000000000028 T shared_dispatch_stub_1313
0000000000592ec0 0000000000000028 T shared_dispatch_stub_1314
0000000000592ef0 0000000000000034 T shared_dispatch_stub_1315
0000000000592f30 0000000000000034 T shared_dispatch_stub_1316
0000000000592f70 0000000000000034 T shared_dispatch_stub_1317
0000000000592fb0 0000000000000034 T shared_dispatch_stub_1318
0000000000592ff0 0000000000000034 T shared_dispatch_stub_1319
0000000000593030 0000000000000034 T shared_dispatch_stub_1320
0000000000593070 0000000000000034 T shared_dispatch_stub_1321
00000000005930b0 0000000000000034 T shared_dispatch_stub_1322
00000000005930f0 0000000000000034 T shared_dispatch_stub_1323
0000000000593130 0000000000000034 T shared_dispatch_stub_1324
0000000000593170 0000000000000034 T shared_dispatch_stub_1325
00000000005931b0 0000000000000034 T shared_dispatch_stub_1326
00000000005931f0 0000000000000034 T shared_dispatch_stub_1327
0000000000593230 0000000000000034 T shared_dispatch_stub_1328
0000000000593270 0000000000000034 T shared_dispatch_stub_1329
00000000005932b0 0000000000000034 T shared_dispatch_stub_1330
00000000005932f0 0000000000000034 T shared_dispatch_stub_1331
0000000000593330 0000000000000034 T shared_dispatch_stub_1332
0000000000593370 0000000000000034 T shared_dispatch_stub_1333
00000000005933b0 0000000000000028 T shared_dispatch_stub_1334
00000000005933e0 0000000000000034 T shared_dispatch_stub_1335
0000000000593420 0000000000000034 T shared_dispatch_stub_1336
0000000000593460 0000000000000034 T shared_dispatch_stub_1337
00000000005934a0 0000000000000034 T shared_dispatch_stub_1338
00000000005934e0 0000000000000034 T shared_dispatch_stub_1339
0000000000593520 0000000000000034 T shared_dispatch_stub_1340
0000000000593560 0000000000000034 T shared_dispatch_stub_1341
00000000005935a0 0000000000000034 T shared_dispatch_stub_1342
00000000005935e0 0000000000000034 T shared_dispatch_stub_1343
0000000000593620 0000000000000034 T shared_dispatch_stub_1344
0000000000593660 0000000000000034 T shared_dispatch_stub_1345
00000000005936a0 0000000000000034 T shared_dispatch_stub_1346
00000000005936e0 0000000000000034 T shared_dispatch_stub_1347
0000000000593720 0000000000000034 T shared_dispatch_stub_1348
0000000000593760 0000000000000034 T shared_dispatch_stub_1349
00000000005937a0 0000000000000034 T shared_dispatch_stub_1350
00000000005937e0 0000000000000034 T shared_dispatch_stub_1351
0000000000593820 0000000000000034 T shared_dispatch_stub_1352
0000000000593860 0000000000000034 T shared_dispatch_stub_1353
00000000005938a0 0000000000000034 T shared_dispatch_stub_1354
00000000005938e0 0000000000000034 T shared_dispatch_stub_1355
0000000000593920 0000000000000034 T shared_dispatch_stub_1356
0000000000593960 0000000000000034 T shared_dispatch_stub_1357
00000000005939a0 0000000000000034 T shared_dispatch_stub_1358
00000000005939e0 0000000000000034 T shared_dispatch_stub_1359
0000000000593a20 0000000000000034 T shared_dispatch_stub_1360
0000000000593a60 0000000000000034 T shared_dispatch_stub_1361
0000000000593aa0 0000000000000034 T shared_dispatch_stub_1362
0000000000593ae0 0000000000000034 T shared_dispatch_stub_1363
0000000000593b20 0000000000000034 T shared_dispatch_stub_1364
0000000000593b60 0000000000000034 T shared_dispatch_stub_1365
0000000000593ba0 0000000000000034 T shared_dispatch_stub_1366
0000000000593be0 0000000000000028 T shared_dispatch_stub_1367
0000000000593c10 0000000000000034 T shared_dispatch_stub_1368
0000000000593c50 0000000000000034 T shared_dispatch_stub_1369
0000000000593c90 0000000000000034 T shared_dispatch_stub_1370
0000000000593cd0 0000000000000034 T shared_dispatch_stub_1371
0000000000593d10 0000000000000034 T shared_dispatch_stub_1372
0000000000593d50 0000000000000034 T shared_dispatch_stub_1373
0000000000593d90 0000000000000034 T shared_dispatch_stub_1374
0000000000593dd0 0000000000000034 T shared_dispatch_stub_1375
0000000000593e10 0000000000000034 T shared_dispatch_stub_1376
0000000000593e50 0000000000000034 T shared_dispatch_stub_1377
0000000000593e90 0000000000000034 T shared_dispatch_stub_1378
0000000000593ed0 0000000000000034 T shared_dispatch_stub_1379
0000000000593f10 0000000000000034 T shared_dispatch_stub_1380
0000000000593f50 0000000000000034 T shared_dispatch_stub_1381
0000000000593f90 0000000000000028 T shared_dispatch_stub_1382
0000000000593fc0 0000000000000034 T shared_dispatch_stub_1383
0000000000594000 0000000000000034 T shared_dispatch_stub_1384
0000000000594040 0000000000000034 T shared_dispatch_stub_1385
0000000000594080 0000000000000034 T shared_dispatch_stub_1386
00000000005940c0 0000000000000034 T shared_dispatch_stub_1387
0000000000594100 0000000000000034 T shared_dispatch_stub_1388
0000000000594140 0000000000000034 T shared_dispatch_stub_1389
0000000000594180 0000000000000034 T shared_dispatch_stub_1390
00000000005941c0 0000000000000034 T shared_dispatch_stub_1391
0000000000594200 0000000000000034 T shared_dispatch_stub_1392
0000000000594240 0000000000000034 T shared_dispatch_stub_1393
0000000000594280 0000000000000034 T shared_dispatch_stub_1394
00000000005942c0 0000000000000028 T shared_dispatch_stub_1395
00000000005942f0 0000000000000034 T shared_dispatch_stub_1396
0000000000594330 0000000000000034 T shared_dispatch_stub_1397
0000000000594370 0000000000000034 T shared_dispatch_stub_1398
00000000005943b0 0000000000000034 T shared_dispatch_stub_1399
00000000005943f0 0000000000000034 T shared_dispatch_stub_1400
0000000000594430 0000000000000034 T shared_dispatch_stub_1401
0000000000594470 0000000000000034 T shared_dispatch_stub_1402
00000000005944b0 0000000000000034 T shared_dispatch_stub_1403
00000000005944f0 0000000000000034 T shared_dispatch_stub_1404
0000000000594530 0000000000000034 T shared_dispatch_stub_1405
0000000000594570 0000000000000034 T shared_dispatch_stub_1406
00000000005945b0 0000000000000034 T shared_dispatch_stub_1407
00000000005945f0 0000000000000034 T shared_dispatch_stub_1408
0000000000594630 0000000000000034 T shared_dispatch_stub_1409
0000000000594670 0000000000000034 T shared_dispatch_stub_1410
00000000005946b0 0000000000000034 T shared_dispatch_stub_1411
00000000005946f0 0000000000000034 T shared_dispatch_stub_1412
0000000000594730 0000000000000034 T shared_dispatch_stub_1413
0000000000594770 0000000000000034 T shared_dispatch_stub_1414
00000000005947b0 0000000000000034 T shared_dispatch_stub_1415
00000000005947f0 0000000000000034 T shared_dispatch_stub_1416
0000000000594830 0000000000000034 T shared_dispatch_stub_1417
0000000000594870 0000000000000028 T shared_dispatch_stub_1418
00000000005948a0 0000000000000028 T shared_dispatch_stub_1419
00000000005948d0 0000000000000034 T shared_dispatch_stub_1420
0000000000594910 0000000000000034 T shared_dispatch_stub_1421
0000000000594950 0000000000000034 T shared_dispatch_stub_1422
0000000000594990 0000000000000034 T shared_dispatch_stub_1423
00000000005949d0 0000000000000034 T shared_dispatch_stub_1424
0000000000594a10 0000000000000034 T shared_dispatch_stub_1425
0000000000594a50 0000000000000034 T shared_dispatch_stub_1426
0000000000594a90 0000000000000034 T shared_dispatch_stub_1427
0000000000594ad0 0000000000000034 T shared_dispatch_stub_1428
0000000000594b10 0000000000000034 T shared_dispatch_stub_1429
0000000000594b50 0000000000000034 T shared_dispatch_stub_1430
0000000000594b90 0000000000000034 T shared_dispatch_stub_1431
0000000000594bd0 0000000000000034 T shared_dispatch_stub_1432
0000000000594c10 0000000000000034 T shared_dispatch_stub_1433
0000000000594c50 0000000000000034 T shared_dispatch_stub_1434
0000000000594c90 0000000000000034 T shared_dispatch_stub_1435
0000000000594cd0 0000000000000034 T shared_dispatch_stub_1436
0000000000594d10 0000000000000034 T shared_dispatch_stub_1437
0000000000594d50 0000000000000034 T shared_dispatch_stub_1438
0000000000594d90 0000000000000034 T shared_dispatch_stub_1439
0000000000594dd0 0000000000000034 T shared_dispatch_stub_1440
0000000000594e10 0000000000000034 T shared_dispatch_stub_1441
0000000000594e50 0000000000000034 T shared_dispatch_stub_1442
0000000000594e90 0000000000000034 T shared_dispatch_stub_1443
0000000000594ed0 0000000000000034 T shared_dispatch_stub_1444
0000000000594f10 0000000000000034 T shared_dispatch_stub_1445
0000000000594f50 0000000000000034 T shared_dispatch_stub_1446
0000000000594f90 0000000000000034 T shared_dispatch_stub_1447
0000000000594fd0 0000000000000034 T shared_dispatch_stub_1448
0000000000595010 0000000000000034 T shared_dispatch_stub_1449
0000000000595050 0000000000000034 T shared_dispatch_stub_1450
0000000000595090 0000000000000034 T shared_dispatch_stub_1451
00000000005950d0 0000000000000034 T shared_dispatch_stub_1452
0000000000595110 0000000000000034 T shared_dispatch_stub_1453
0000000000595150 0000000000000034 T shared_dispatch_stub_1454
0000000000595190 0000000000000034 T shared_dispatch_stub_1455
00000000005951d0 0000000000000034 T shared_dispatch_stub_1456
0000000000595210 0000000000000034 T shared_dispatch_stub_1457
0000000000595250 0000000000000034 T shared_dispatch_stub_1458
0000000000595290 0000000000000034 T shared_dispatch_stub_1459
00000000005952d0 0000000000000034 T shared_dispatch_stub_1460
0000000000595310 0000000000000034 T shared_dispatch_stub_1461
0000000000595350 0000000000000034 T shared_dispatch_stub_1462
0000000000595390 0000000000000034 T shared_dispatch_stub_1463
00000000005953d0 0000000000000034 T shared_dispatch_stub_1464
0000000000595410 0000000000000034 T shared_dispatch_stub_1465
0000000000595450 0000000000000034 T shared_dispatch_stub_1466
0000000000595490 0000000000000034 T shared_dispatch_stub_1467
00000000005954d0 0000000000000034 T shared_dispatch_stub_1468
0000000000595510 0000000000000034 T shared_dispatch_stub_1469
0000000000595550 0000000000000034 T shared_dispatch_stub_1470
0000000000595590 0000000000000034 T shared_dispatch_stub_1471
00000000005955d0 0000000000000034 T shared_dispatch_stub_1472
0000000000595610 0000000000000034 T shared_dispatch_stub_1473
0000000000595650 0000000000000034 T shared_dispatch_stub_1474
0000000000595690 0000000000000034 T shared_dispatch_stub_1475
00000000005956d0 0000000000000034 T shared_dispatch_stub_1476
0000000000595710 0000000000000034 T shared_dispatch_stub_1477
0000000000595750 0000000000000034 T shared_dispatch_stub_1478
0000000000595790 0000000000000034 T shared_dispatch_stub_1479
00000000005957d0 0000000000000034 T shared_dispatch_stub_1480
0000000000595810 0000000000000034 T shared_dispatch_stub_1481
0000000000595850 0000000000000034 T shared_dispatch_stub_1482
0000000000595890 0000000000000034 T shared_dispatch_stub_1483
00000000005958d0 0000000000000034 T shared_dispatch_stub_1484
0000000000595910 0000000000000034 T shared_dispatch_stub_1485
0000000000595950 0000000000000034 T shared_dispatch_stub_1486
0000000000595990 0000000000000034 T shared_dispatch_stub_1487
00000000005959d0 0000000000000034 T shared_dispatch_stub_1488
0000000000595a10 0000000000000034 T shared_dispatch_stub_1489
0000000000595a50 0000000000000034 T shared_dispatch_stub_1490
0000000000595a90 0000000000000034 T shared_dispatch_stub_1491
0000000000595ad0 0000000000000034 T shared_dispatch_stub_1492
0000000000595b10 0000000000000034 T shared_dispatch_stub_1493
0000000000595b50 0000000000000034 T shared_dispatch_stub_1494
0000000000595b90 0000000000000034 T shared_dispatch_stub_1495
0000000000595bd0 0000000000000034 T shared_dispatch_stub_1496
0000000000595c10 0000000000000034 T shared_dispatch_stub_1497
0000000000595c50 0000000000000034 T shared_dispatch_stub_1498
0000000000595c90 0000000000000034 T shared_dispatch_stub_1499
0000000000595cd0 0000000000000034 T shared_dispatch_stub_1500
0000000000595d10 0000000000000034 T shared_dispatch_stub_1501
0000000000595d50 0000000000000034 T shared_dispatch_stub_1502
0000000000595d90 0000000000000034 T shared_dispatch_stub_1503
0000000000595dd0 0000000000000034 T shared_dispatch_stub_1504
0000000000595e10 0000000000000034 T shared_dispatch_stub_1505
0000000000595e50 0000000000000034 T shared_dispatch_stub_1506
0000000000595e90 0000000000000034 T shared_dispatch_stub_1507
0000000000595ed0 0000000000000034 T shared_dispatch_stub_1508
0000000000595f10 0000000000000034 T shared_dispatch_stub_1509
0000000000595f50 0000000000000034 T shared_dispatch_stub_1510
0000000000595f90 0000000000000034 T shared_dispatch_stub_1511
0000000000595fd0 0000000000000034 T shared_dispatch_stub_1512
0000000000596010 0000000000000034 T shared_dispatch_stub_1513
0000000000596050 0000000000000034 T shared_dispatch_stub_1514
0000000000596090 0000000000000034 T shared_dispatch_stub_1515
00000000005960d0 0000000000000034 T shared_dispatch_stub_1516
0000000000596110 0000000000000034 T shared_dispatch_stub_1517
0000000000596150 0000000000000034 T shared_dispatch_stub_1518
0000000000596190 0000000000000034 T shared_dispatch_stub_1519
00000000005961d0 0000000000000034 T shared_dispatch_stub_1520
0000000000596210 0000000000000034 T shared_dispatch_stub_1521
0000000000596250 0000000000000034 T shared_dispatch_stub_1522
0000000000596290 0000000000000034 T shared_dispatch_stub_1523
00000000005962d0 0000000000000034 T shared_dispatch_stub_1524
0000000000596310 0000000000000034 T shared_dispatch_stub_1525
0000000000596350 0000000000000034 T shared_dispatch_stub_1526
0000000000596390 0000000000000034 T shared_dispatch_stub_1527
00000000005963d0 0000000000000034 T shared_dispatch_stub_1528
0000000000596410 0000000000000034 T shared_dispatch_stub_1529
0000000000596450 0000000000000034 T shared_dispatch_stub_1530
0000000000596490 0000000000000034 T shared_dispatch_stub_1531
00000000005964d0 0000000000000034 T shared_dispatch_stub_1532
0000000000596510 0000000000000034 T shared_dispatch_stub_1533
0000000000596550 0000000000000034 T shared_dispatch_stub_1534
0000000000596590 0000000000000034 T shared_dispatch_stub_1535
00000000005965d0 0000000000000034 T shared_dispatch_stub_1536
0000000000596610 0000000000000034 T shared_dispatch_stub_1537
0000000000596650 0000000000000034 T shared_dispatch_stub_1538
0000000000596690 0000000000000034 T shared_dispatch_stub_1539
00000000005966d0 0000000000000034 T shared_dispatch_stub_1540
0000000000596710 0000000000000034 T shared_dispatch_stub_1541
0000000000596750 0000000000000034 T shared_dispatch_stub_1542
0000000000596790 0000000000000034 T shared_dispatch_stub_1543
00000000005967d0 0000000000000034 T shared_dispatch_stub_1544
0000000000596810 0000000000000034 T shared_dispatch_stub_1545
0000000000596850 0000000000000034 T shared_dispatch_stub_1546
0000000000596890 0000000000000034 T shared_dispatch_stub_1547
00000000005968d0 0000000000000034 T shared_dispatch_stub_1548
0000000000596910 0000000000000034 T shared_dispatch_stub_1549
0000000000596950 0000000000000034 T shared_dispatch_stub_1550
0000000000596990 0000000000000034 T shared_dispatch_stub_1551
00000000005969d0 0000000000000034 T shared_dispatch_stub_1552
0000000000596a10 0000000000000034 T shared_dispatch_stub_1553
0000000000596a50 0000000000000034 T shared_dispatch_stub_1554
0000000000596a90 0000000000000034 T shared_dispatch_stub_1555
0000000000596ad0 0000000000000034 T shared_dispatch_stub_1556
0000000000596b10 0000000000000034 T shared_dispatch_stub_1557
0000000000596b50 0000000000000034 T shared_dispatch_stub_1558
0000000000596b90 0000000000000034 T shared_dispatch_stub_1559
0000000000596bd0 0000000000000034 T shared_dispatch_stub_1560
0000000000596c10 0000000000000034 T shared_dispatch_stub_1561
0000000000596c50 0000000000000034 T shared_dispatch_stub_1562
0000000000596c90 0000000000000034 T shared_dispatch_stub_1563
0000000000596cd0 0000000000000034 T shared_dispatch_stub_1564
0000000000596d10 0000000000000034 T shared_dispatch_stub_1565
0000000000596d50 0000000000000034 T shared_dispatch_stub_1566
0000000000596d90 0000000000000034 T shared_dispatch_stub_1567
0000000000596dd0 0000000000000034 T shared_dispatch_stub_1568
0000000000596e10 0000000000000034 T shared_dispatch_stub_1569
0000000000596e50 0000000000000034 T shared_dispatch_stub_1570
0000000000596e90 0000000000000034 T shared_dispatch_stub_1571
0000000000596ed0 0000000000000034 T shared_dispatch_stub_1572
0000000000596f10 0000000000000034 T shared_dispatch_stub_1573
0000000000596f50 0000000000000034 T shared_dispatch_stub_1574
0000000000596f90 0000000000000034 T shared_dispatch_stub_1575
0000000000596fd0 0000000000000034 T shared_dispatch_stub_1576
0000000000597010 0000000000000034 T shared_dispatch_stub_1577
0000000000597050 0000000000000034 T shared_dispatch_stub_1578
0000000000597090 0000000000000034 T shared_dispatch_stub_1579
00000000005970d0 0000000000000034 T shared_dispatch_stub_1580
0000000000597110 0000000000000034 T shared_dispatch_stub_1581
0000000000597150 0000000000000034 T shared_dispatch_stub_1582
0000000000597190 0000000000000034 T shared_dispatch_stub_1583
00000000005971d0 0000000000000034 T shared_dispatch_stub_1584
0000000000597210 0000000000000034 T shared_dispatch_stub_1585
0000000000597250 0000000000000034 T shared_dispatch_stub_1586
0000000000597290 0000000000000034 T shared_dispatch_stub_1587
00000000005972d0 0000000000000034 T shared_dispatch_stub_1588
0000000000597310 0000000000000034 T shared_dispatch_stub_1589
0000000000597350 0000000000000034 T shared_dispatch_stub_1590
0000000000597390 0000000000000034 T shared_dispatch_stub_1591
00000000005973d0 0000000000000034 T shared_dispatch_stub_1592
0000000000597410 0000000000000034 T shared_dispatch_stub_1593
0000000000597450 0000000000000034 T shared_dispatch_stub_1594
0000000000597490 0000000000000034 T shared_dispatch_stub_1595
00000000005974d0 0000000000000034 T shared_dispatch_stub_1596
0000000000597510 0000000000000034 T shared_dispatch_stub_1597
0000000000597550 0000000000000034 T shared_dispatch_stub_1598
0000000000597590 0000000000000034 T shared_dispatch_stub_1599
00000000005975d0 0000000000000034 T shared_dispatch_stub_1600
0000000000597610 0000000000000034 T shared_dispatch_stub_1601
0000000000597650 0000000000000034 T shared_dispatch_stub_1602
0000000000597690 0000000000000034 T shared_dispatch_stub_1603
00000000005976d0 0000000000000034 T shared_dispatch_stub_1604
0000000000597710 0000000000000034 T shared_dispatch_stub_1605
0000000000597750 0000000000000034 T shared_dispatch_stub_1606
0000000000597790 0000000000000034 T shared_dispatch_stub_1607
00000000005977d0 0000000000000034 T shared_dispatch_stub_1608
0000000000597810 0000000000000034 T shared_dispatch_stub_1609
0000000000597850 0000000000000004 T entry_patch_public
0000000000597860 0000000000000010 t entry_get_public
0000000000597870 0000000000000008 t entry_generate
0000000000597880 0000000000000004 t entry_patch
0000000000597890 0000000000000078 T nouveau_bufctx_new
0000000000597910 000000000000005c T nouveau_bufctx_reset
0000000000597970 0000000000000074 T nouveau_bufctx_del
00000000005979f0 0000000000000090 T nouveau_bufctx_refn
0000000000597a80 0000000000000008 T nouveau_object_mclass
0000000000597a90 0000000000000098 T nouveau_object_new
0000000000597b30 0000000000000044 T nouveau_object_del
0000000000597b80 0000000000000028 T nouveau_drm_del
0000000000597bb0 0000000000000050 T nouveau_drm_new
0000000000597c00 0000000000000100 T nouveau_device_new
0000000000597d00 0000000000000050 T nouveau_device_del
0000000000597d50 0000000000000034 T nouveau_getparam
0000000000597d90 000000000000011c T nouveau_client_new
0000000000597eb0 0000000000000088 T nouveau_client_del
0000000000597f40 0000000000000184 T nouveau_bo_new
00000000005980d0 0000000000000104 T nouveau_bo_name_ref
00000000005981e0 0000000000000010 T nouveau_bo_name_get
00000000005981f0 00000000000000d0 T nouveau_bo_ref
00000000005982c0 0000000000000008 T nouveau_bo_prime_handle_ref
00000000005982d0 0000000000000008 T nouveau_bo_set_prime
00000000005982e0 0000000000000014 T nouveau_bo_get_syncpoint
0000000000598300 000000000000009c T nouveau_bo_wait
00000000005983a0 000000000000000c T nouveau_bo_map
00000000005983b0 0000000000000008 T nouveau_bo_unmap
00000000005983c0 0000000000000098 t pushbuf_refn_fail
0000000000598460 0000000000000118 T nouveau_pushbuf_del
0000000000598580 0000000000000280 T nouveau_pushbuf_new
0000000000598800 0000000000000010 T nouveau_pushbuf_bufctx
0000000000598810 00000000000000c4 T nouveau_pushbuf_data
0000000000598810 00000000000000c4 t nouveau_pushbuf_data.localalias
00000000005988e0 0000000000000254 t pushbuf_submit.isra.0
0000000000598b40 000000000000012c t pushbuf_flush.isra.0
0000000000598c70 0000000000000128 t pushbuf_kref
0000000000598da0 00000000000001b0 t pushbuf_validate
0000000000598f50 0000000000000238 T nouveau_pushbuf_space
0000000000599190 00000000000000cc T nouveau_pushbuf_refn
0000000000599260 0000000000000008 T nouveau_pushbuf_validate
0000000000599270 0000000000000040 T nouveau_pushbuf_kick
00000000005992b0 000000000000004c T cli_map_free
0000000000599300 0000000000000058 T cli_kref_get
0000000000599360 0000000000000058 T cli_push_get
00000000005993c0 0000000000000110 T cli_kref_set
00000000005994e0 0000000000000004 T operator delete(void*, unsigned long)
0000000000599500 0000000000000004 T operator delete[](void*)
0000000000599520 0000000000000004 T operator delete[](void*, unsigned long)
0000000000599540 000000000000000c W __gnu_cxx::__concurrence_lock_error::what() const
0000000000599560 000000000000000c W __gnu_cxx::__concurrence_unlock_error::what() const
0000000000599580 000000000000000c W __gnu_cxx::__concurrence_broadcast_error::what() const
00000000005995a0 000000000000000c W __gnu_cxx::__concurrence_wait_error::what() const
00000000005995c0 000000000000001c t (anonymous namespace)::init()
00000000005995e0 000000000000001c t (anonymous namespace)::init_static_cond()
0000000000599600 0000000000000014 W __gnu_cxx::__concurrence_lock_error::~__concurrence_lock_error()
0000000000599600 0000000000000014 W __gnu_cxx::__concurrence_lock_error::~__concurrence_lock_error()
0000000000599620 0000000000000038 W __gnu_cxx::__concurrence_lock_error::~__concurrence_lock_error()
0000000000599660 0000000000000014 W __gnu_cxx::__concurrence_wait_error::~__concurrence_wait_error()
0000000000599660 0000000000000014 W __gnu_cxx::__concurrence_wait_error::~__concurrence_wait_error()
0000000000599680 0000000000000038 W __gnu_cxx::__concurrence_wait_error::~__concurrence_wait_error()
00000000005996c0 0000000000000014 W __gnu_cxx::__concurrence_unlock_error::~__concurrence_unlock_error()
00000000005996c0 0000000000000014 W __gnu_cxx::__concurrence_unlock_error::~__concurrence_unlock_error()
00000000005996e0 0000000000000038 W __gnu_cxx::__concurrence_unlock_error::~__concurrence_unlock_error()
0000000000599720 0000000000000014 W __gnu_cxx::__concurrence_broadcast_error::~__concurrence_broadcast_error()
0000000000599720 0000000000000014 W __gnu_cxx::__concurrence_broadcast_error::~__concurrence_broadcast_error()
0000000000599740 0000000000000038 W __gnu_cxx::__concurrence_broadcast_error::~__concurrence_broadcast_error()
0000000000599780 000000000000014c T __cxa_guard_acquire
00000000005998e0 0000000000000088 T __cxa_guard_release
0000000000599980 0000000000000068 T operator new(unsigned long)
0000000000599a00 0000000000000004 T operator new[](unsigned long)
0000000000599a20 0000000000000014 T __cxxabiv1::__si_class_type_info::~__si_class_type_info()
0000000000599a20 0000000000000014 T __cxxabiv1::__si_class_type_info::~__si_class_type_info()
0000000000599a40 0000000000000028 T __cxxabiv1::__si_class_type_info::~__si_class_type_info()
0000000000599a80 000000000000015c T __cxxabiv1::__si_class_type_info::__do_dyncast(long, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const
0000000000599be0 000000000000008c T __cxxabiv1::__si_class_type_info::__do_find_public_src(long, void const*, __cxxabiv1::__class_type_info const*, void const*) const
0000000000599c80 0000000000000064 T __cxxabiv1::__si_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const
0000000000599d00 0000000000000004 T std::type_info::~type_info()
0000000000599d00 0000000000000004 T std::type_info::~type_info()
0000000000599d20 0000000000000008 T std::type_info::__is_pointer_p() const
0000000000599d20 0000000000000008 T std::type_info::__is_function_p() const
0000000000599d40 0000000000000568 T std::ios_base::Init::Init()
0000000000599d40 0000000000000568 T std::ios_base::Init::Init()
000000000059a2c0 0000000000000088 T std::ios_base::Init::~Init()
000000000059a2c0 0000000000000088 T std::ios_base::Init::~Init()
000000000059a360 0000000000000034 T std::__detail::_List_node_base::_M_transfer(std::__detail::_List_node_base*, std::__detail::_List_node_base*)
000000000059a3a0 0000000000000014 T std::__detail::_List_node_base::_M_hook(std::__detail::_List_node_base*)
000000000059a3c0 0000000000000010 T std::__detail::_List_node_base::_M_unhook()
000000000059a3e0 0000000000000004 T std::locale::facet::~facet()
000000000059a3e0 0000000000000004 T std::locale::facet::~facet()
000000000059a400 000000000000003c T std::locale::facet::~facet()
000000000059a400 000000000000003c t std::locale::facet::~facet() [clone .localalias]
000000000059a440 0000000000000024 T std::locale::facet::_S_initialize_once()
000000000059a480 0000000000000030 T std::locale::locale(std::locale const&)
000000000059a480 0000000000000030 T std::locale::locale(std::locale const&)
000000000059a4c0 0000000000000008 T std::locale::locale(std::locale::_Impl*)
000000000059a4c0 0000000000000008 T std::locale::locale(std::locale::_Impl*)
000000000059a4e0 0000000000000050 T std::locale::facet::_S_get_c_locale()
000000000059a540 000000000000000c T std::locale::facet::_S_get_c_name()
000000000059a560 00000000000001b8 T std::locale::_Impl::~_Impl()
000000000059a560 00000000000001b8 T std::locale::_Impl::~_Impl()
000000000059a720 00000000000000ac T std::locale::operator=(std::locale const&)
000000000059a7e0 000000000000005c T std::locale::~locale()
000000000059a7e0 000000000000005c T std::locale::~locale()
000000000059a840 0000000000000048 T std::locale::id::_M_id() const
000000000059a8a0 00000000000004d4 T std::locale::_Impl::_M_install_facet(std::locale::id const*, std::locale::facet const*)
000000000059ad80 000000000000025c T std::locale::_Impl::_M_install_cache(std::locale::facet const*, unsigned long)
000000000059afe0 0000000000000050 T std::_Rb_tree_increment(std::_Rb_tree_node_base*)
000000000059b040 0000000000000050 T std::_Rb_tree_increment(std::_Rb_tree_node_base const*)
000000000059b0a0 0000000000000064 T std::_Rb_tree_decrement(std::_Rb_tree_node_base*)
000000000059b120 000000000000029c T std::_Rb_tree_insert_and_rebalance(bool, std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, std::_Rb_tree_node_base&)
000000000059b3c0 0000000000000024 t std::__facet_shims::(anonymous namespace)::collate_shim<char>::do_compare(char const*, char const*, char const*, char const*) const
000000000059b400 0000000000000058 t std::__facet_shims::(anonymous namespace)::time_get_shim<char>::do_get_year(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, tm*) const
000000000059b460 0000000000000058 t std::__facet_shims::(anonymous namespace)::time_get_shim<char>::do_get_monthname(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, tm*) const
000000000059b4c0 0000000000000058 t std::__facet_shims::(anonymous namespace)::time_get_shim<char>::do_get_weekday(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, tm*) const
000000000059b520 0000000000000058 t std::__facet_shims::(anonymous namespace)::time_get_shim<char>::do_get_date(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, tm*) const
000000000059b580 0000000000000058 t std::__facet_shims::(anonymous namespace)::time_get_shim<char>::do_get_time(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, tm*) const
000000000059b5e0 0000000000000010 t std::__facet_shims::(anonymous namespace)::time_get_shim<char>::do_date_order() const
000000000059b600 00000000000000a0 t std::__facet_shims::(anonymous namespace)::money_get_shim<char>::do_get(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, bool, std::ios_base&, std::_Ios_Iostate&, long double&) const
000000000059b6a0 0000000000000030 t std::__facet_shims::(anonymous namespace)::money_put_shim<char>::do_put(std::ostreambuf_iterator<char, std::char_traits<char> >, bool, std::ios_base&, char, long double) const
000000000059b6e0 0000000000000014 t std::__facet_shims::(anonymous namespace)::messages_shim<char>::do_close(int) const
000000000059b700 000000000000001c t std::__facet_shims::(anonymous namespace)::messages_shim<char>::do_open(std::string const&, std::locale const&) const
000000000059b720 0000000000000024 t std::__facet_shims::(anonymous namespace)::collate_shim<wchar_t>::do_compare(wchar_t const*, wchar_t const*, wchar_t const*, wchar_t const*) const
000000000059b760 0000000000000058 t std::__facet_shims::(anonymous namespace)::time_get_shim<wchar_t>::do_get_year(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, tm*) const
000000000059b7c0 0000000000000058 t std::__facet_shims::(anonymous namespace)::time_get_shim<wchar_t>::do_get_monthname(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, tm*) const
000000000059b820 0000000000000058 t std::__facet_shims::(anonymous namespace)::time_get_shim<wchar_t>::do_get_weekday(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, tm*) const
000000000059b880 0000000000000058 t std::__facet_shims::(anonymous namespace)::time_get_shim<wchar_t>::do_get_date(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, tm*) const
000000000059b8e0 0000000000000058 t std::__facet_shims::(anonymous namespace)::time_get_shim<wchar_t>::do_get_time(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, tm*) const
000000000059b940 0000000000000010 t std::__facet_shims::(anonymous namespace)::time_get_shim<wchar_t>::do_date_order() const
000000000059b960 00000000000000a0 t std::__facet_shims::(anonymous namespace)::money_get_shim<wchar_t>::do_get(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, bool, std::ios_base&, std::_Ios_Iostate&, long double&) const
000000000059ba00 0000000000000028 t std::__facet_shims::(anonymous namespace)::money_put_shim<wchar_t>::do_put(std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, bool, std::ios_base&, wchar_t, long double) const
000000000059ba40 0000000000000014 t std::__facet_shims::(anonymous namespace)::messages_shim<wchar_t>::do_close(int) const
000000000059ba60 000000000000001c t std::__facet_shims::(anonymous namespace)::messages_shim<wchar_t>::do_open(std::string const&, std::locale const&) const
000000000059ba80 00000000000000d4 t wchar_t* std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_S_construct<wchar_t const*>(wchar_t const*, wchar_t const*, std::allocator<wchar_t> const&, std::forward_iterator_tag) [clone .isra.0]
000000000059bb60 00000000000000b8 t char* std::string::_S_construct<char const*>(char const*, char const*, std::allocator<char> const&, std::forward_iterator_tag) [clone .isra.0]
000000000059bc20 0000000000000094 t std::__facet_shims::(anonymous namespace)::collate_shim<wchar_t>::do_transform(wchar_t const*, wchar_t const*) const
000000000059bcc0 00000000000000a0 t std::__facet_shims::(anonymous namespace)::messages_shim<wchar_t>::do_get(int, int, int, std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> > const&) const
000000000059bd60 0000000000000094 t std::__facet_shims::(anonymous namespace)::collate_shim<char>::do_transform(char const*, char const*) const
000000000059be00 00000000000000a0 t std::__facet_shims::(anonymous namespace)::messages_shim<char>::do_get(int, int, int, std::string const&) const
000000000059bea0 000000000000011c t std::__facet_shims::(anonymous namespace)::money_put_shim<wchar_t>::do_put(std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, bool, std::ios_base&, wchar_t, std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> > const&) const
000000000059bfc0 000000000000011c t std::__facet_shims::(anonymous namespace)::money_put_shim<char>::do_put(std::ostreambuf_iterator<char, std::char_traits<char> >, bool, std::ios_base&, char, std::string const&) const
000000000059c0e0 0000000000000050 t void std::__facet_shims::(anonymous namespace)::__destroy_string<wchar_t>(void*)
000000000059c140 0000000000000050 t void std::__facet_shims::(anonymous namespace)::__destroy_string<char>(void*)
000000000059c1a0 0000000000000054 t std::__facet_shims::(anonymous namespace)::messages_shim<char>::~messages_shim()
000000000059c1a0 0000000000000054 t std::__facet_shims::(anonymous namespace)::messages_shim<char>::~messages_shim()
000000000059c200 0000000000000054 t std::__facet_shims::(anonymous namespace)::messages_shim<wchar_t>::~messages_shim()
000000000059c200 0000000000000054 t std::__facet_shims::(anonymous namespace)::messages_shim<wchar_t>::~messages_shim()
000000000059c260 0000000000000064 t std::__facet_shims::(anonymous namespace)::money_get_shim<char>::~money_get_shim()
000000000059c260 0000000000000064 t std::__facet_shims::(anonymous namespace)::money_get_shim<char>::~money_get_shim()
000000000059c2e0 0000000000000064 t std::__facet_shims::(anonymous namespace)::money_put_shim<char>::~money_put_shim()
000000000059c2e0 0000000000000064 t std::__facet_shims::(anonymous namespace)::money_put_shim<char>::~money_put_shim()
000000000059c360 0000000000000064 t std::__facet_shims::(anonymous namespace)::money_get_shim<wchar_t>::~money_get_shim()
000000000059c360 0000000000000064 t std::__facet_shims::(anonymous namespace)::money_get_shim<wchar_t>::~money_get_shim()
000000000059c3e0 0000000000000064 t std::__facet_shims::(anonymous namespace)::money_put_shim<wchar_t>::~money_put_shim()
000000000059c3e0 0000000000000064 t std::__facet_shims::(anonymous namespace)::money_put_shim<wchar_t>::~money_put_shim()
000000000059c460 0000000000000064 t std::__facet_shims::(anonymous namespace)::time_get_shim<char>::~time_get_shim()
000000000059c460 0000000000000064 t std::__facet_shims::(anonymous namespace)::time_get_shim<char>::~time_get_shim()
000000000059c4e0 0000000000000064 t std::__facet_shims::(anonymous namespace)::time_get_shim<wchar_t>::~time_get_shim()
000000000059c4e0 0000000000000064 t std::__facet_shims::(anonymous namespace)::time_get_shim<wchar_t>::~time_get_shim()
000000000059c560 000000000000005c t std::__facet_shims::(anonymous namespace)::messages_shim<char>::~messages_shim()
000000000059c5c0 000000000000005c t std::__facet_shims::(anonymous namespace)::messages_shim<wchar_t>::~messages_shim()
000000000059c620 0000000000000058 t std::__facet_shims::(anonymous namespace)::numpunct_shim<char>::~numpunct_shim()
000000000059c620 0000000000000058 t std::__facet_shims::(anonymous namespace)::numpunct_shim<char>::~numpunct_shim()
000000000059c680 0000000000000058 t std::__facet_shims::(anonymous namespace)::numpunct_shim<wchar_t>::~numpunct_shim()
000000000059c680 0000000000000058 t std::__facet_shims::(anonymous namespace)::numpunct_shim<wchar_t>::~numpunct_shim()
000000000059c6e0 000000000000006c t std::__facet_shims::(anonymous namespace)::money_get_shim<char>::~money_get_shim()
000000000059c760 000000000000006c t std::__facet_shims::(anonymous namespace)::money_put_shim<char>::~money_put_shim()
000000000059c7e0 000000000000006c t std::__facet_shims::(anonymous namespace)::money_get_shim<wchar_t>::~money_get_shim()
000000000059c860 000000000000006c t std::__facet_shims::(anonymous namespace)::money_put_shim<wchar_t>::~money_put_shim()
000000000059c8e0 000000000000006c t std::__facet_shims::(anonymous namespace)::time_get_shim<char>::~time_get_shim()
000000000059c960 000000000000006c t std::__facet_shims::(anonymous namespace)::time_get_shim<wchar_t>::~time_get_shim()
000000000059c9e0 000000000000006c t std::__facet_shims::(anonymous namespace)::collate_shim<char>::~collate_shim()
000000000059c9e0 000000000000006c t std::__facet_shims::(anonymous namespace)::collate_shim<char>::~collate_shim()
000000000059ca60 000000000000006c t std::__facet_shims::(anonymous namespace)::collate_shim<wchar_t>::~collate_shim()
000000000059ca60 000000000000006c t std::__facet_shims::(anonymous namespace)::collate_shim<wchar_t>::~collate_shim()
000000000059cae0 0000000000000060 t std::__facet_shims::(anonymous namespace)::numpunct_shim<char>::~numpunct_shim()
000000000059cb40 0000000000000060 t std::__facet_shims::(anonymous namespace)::numpunct_shim<wchar_t>::~numpunct_shim()
000000000059cba0 0000000000000074 t std::__facet_shims::(anonymous namespace)::collate_shim<char>::~collate_shim()
000000000059cc20 0000000000000074 t std::__facet_shims::(anonymous namespace)::collate_shim<wchar_t>::~collate_shim()
000000000059cca0 0000000000000064 t std::__facet_shims::(anonymous namespace)::moneypunct_shim<char, true>::~moneypunct_shim()
000000000059cca0 0000000000000064 t std::__facet_shims::(anonymous namespace)::moneypunct_shim<char, true>::~moneypunct_shim()
000000000059cd20 0000000000000064 t std::__facet_shims::(anonymous namespace)::moneypunct_shim<char, false>::~moneypunct_shim()
000000000059cd20 0000000000000064 t std::__facet_shims::(anonymous namespace)::moneypunct_shim<char, false>::~moneypunct_shim()
000000000059cda0 0000000000000064 t std::__facet_shims::(anonymous namespace)::moneypunct_shim<wchar_t, true>::~moneypunct_shim()
000000000059cda0 0000000000000064 t std::__facet_shims::(anonymous namespace)::moneypunct_shim<wchar_t, true>::~moneypunct_shim()
000000000059ce20 0000000000000064 t std::__facet_shims::(anonymous namespace)::moneypunct_shim<wchar_t, false>::~moneypunct_shim()
000000000059ce20 0000000000000064 t std::__facet_shims::(anonymous namespace)::moneypunct_shim<wchar_t, false>::~moneypunct_shim()
000000000059cea0 000000000000006c t std::__facet_shims::(anonymous namespace)::moneypunct_shim<char, true>::~moneypunct_shim()
000000000059cf20 000000000000006c t std::__facet_shims::(anonymous namespace)::moneypunct_shim<char, false>::~moneypunct_shim()
000000000059cfa0 000000000000006c t std::__facet_shims::(anonymous namespace)::moneypunct_shim<wchar_t, true>::~moneypunct_shim()
000000000059d020 000000000000006c t std::__facet_shims::(anonymous namespace)::moneypunct_shim<wchar_t, false>::~moneypunct_shim()
000000000059d0a0 0000000000000140 t std::__facet_shims::(anonymous namespace)::money_get_shim<wchar_t>::do_get(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, bool, std::ios_base&, std::_Ios_Iostate&, std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >&) const
000000000059d1e0 0000000000000140 t std::__facet_shims::(anonymous namespace)::money_get_shim<char>::do_get(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, bool, std::ios_base&, std::_Ios_Iostate&, std::string&) const
000000000059d320 000000000000002c W std::locale::facet::_M_remove_reference() const
000000000059d360 0000000000000208 W void std::__facet_shims::__numpunct_fill_cache<char>(std::integral_constant<bool, false>, std::locale::facet const*, std::__numpunct_cache<char>*)
000000000059d580 0000000000000260 W void std::__facet_shims::__numpunct_fill_cache<wchar_t>(std::integral_constant<bool, false>, std::locale::facet const*, std::__numpunct_cache<wchar_t>*)
000000000059d7e0 0000000000000024 W int std::__facet_shims::__collate_compare<char>(std::integral_constant<bool, false>, std::locale::facet const*, char const*, char const*, char const*, char const*)
000000000059d820 0000000000000024 W int std::__facet_shims::__collate_compare<wchar_t>(std::integral_constant<bool, false>, std::locale::facet const*, wchar_t const*, wchar_t const*, wchar_t const*, wchar_t const*)
000000000059d860 0000000000000100 W void std::__facet_shims::__collate_transform<char>(std::integral_constant<bool, false>, std::locale::facet const*, std::__facet_shims::__any_string&, char const*, char const*)
000000000059d960 0000000000000100 W void std::__facet_shims::__collate_transform<wchar_t>(std::integral_constant<bool, false>, std::locale::facet const*, std::__facet_shims::__any_string&, wchar_t const*, wchar_t const*)
000000000059da60 00000000000002cc W void std::__facet_shims::__moneypunct_fill_cache<char, true>(std::integral_constant<bool, false>, std::locale::facet const*, std::__moneypunct_cache<char, true>*)
000000000059dd40 00000000000002cc W void std::__facet_shims::__moneypunct_fill_cache<char, false>(std::integral_constant<bool, false>, std::locale::facet const*, std::__moneypunct_cache<char, false>*)
000000000059e020 0000000000000340 W void std::__facet_shims::__moneypunct_fill_cache<wchar_t, true>(std::integral_constant<bool, false>, std::locale::facet const*, std::__moneypunct_cache<wchar_t, true>*)
000000000059e360 0000000000000340 W void std::__facet_shims::__moneypunct_fill_cache<wchar_t, false>(std::integral_constant<bool, false>, std::locale::facet const*, std::__moneypunct_cache<wchar_t, false>*)
000000000059e6a0 00000000000000b4 W int std::__facet_shims::__messages_open<char>(std::integral_constant<bool, false>, std::locale::facet const*, char const*, unsigned long, std::locale const&)
000000000059e760 00000000000000b4 W int std::__facet_shims::__messages_open<wchar_t>(std::integral_constant<bool, false>, std::locale::facet const*, char const*, unsigned long, std::locale const&)
000000000059e820 0000000000000184 W void std::__facet_shims::__messages_get<char>(std::integral_constant<bool, false>, std::locale::facet const*, std::__facet_shims::__any_string&, int, int, int, char const*, unsigned long)
000000000059e9c0 0000000000000184 W void std::__facet_shims::__messages_get<wchar_t>(std::integral_constant<bool, false>, std::locale::facet const*, std::__facet_shims::__any_string&, int, int, int, wchar_t const*, unsigned long)
000000000059eb60 0000000000000018 W void std::__facet_shims::__messages_close<char>(std::integral_constant<bool, false>, std::locale::facet const*, int)
000000000059eb80 0000000000000018 W void std::__facet_shims::__messages_close<wchar_t>(std::integral_constant<bool, false>, std::locale::facet const*, int)
000000000059eba0 0000000000000014 W std::time_base::dateorder std::__facet_shims::__time_get_dateorder<char>(std::integral_constant<bool, false>, std::locale::facet const*)
000000000059ebc0 0000000000000014 W std::time_base::dateorder std::__facet_shims::__time_get_dateorder<wchar_t>(std::integral_constant<bool, false>, std::locale::facet const*)
000000000059ebe0 00000000000000a4 W std::istreambuf_iterator<char, std::char_traits<char> > std::__facet_shims::__time_get<char>(std::integral_constant<bool, false>, std::locale::facet const*, std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, tm*, char)
000000000059eca0 00000000000000a4 W std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::__facet_shims::__time_get<wchar_t>(std::integral_constant<bool, false>, std::locale::facet const*, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, tm*, char)
000000000059ed60 0000000000000198 W std::istreambuf_iterator<char, std::char_traits<char> > std::__facet_shims::__money_get<char>(std::integral_constant<bool, false>, std::locale::facet const*, std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, bool, std::ios_base&, std::_Ios_Iostate&, long double*, std::__facet_shims::__any_string*)
000000000059ef00 0000000000000198 W std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::__facet_shims::__money_get<wchar_t>(std::integral_constant<bool, false>, std::locale::facet const*, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, bool, std::ios_base&, std::_Ios_Iostate&, long double*, std::__facet_shims::__any_string*)
000000000059f0a0 0000000000000140 W std::ostreambuf_iterator<char, std::char_traits<char> > std::__facet_shims::__money_put<char>(std::integral_constant<bool, false>, std::locale::facet const*, std::ostreambuf_iterator<char, std::char_traits<char> >, bool, std::ios_base&, char, long double, std::__facet_shims::__any_string const*)
000000000059f1e0 0000000000000140 W std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::__facet_shims::__money_put<wchar_t>(std::integral_constant<bool, false>, std::locale::facet const*, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, bool, std::ios_base&, wchar_t, long double, std::__facet_shims::__any_string const*)
000000000059f320 0000000000000988 T std::locale::facet::_M_cow_shim(std::locale::id const*) const
000000000059fcc0 0000000000000090 W std::string::copy(char*, unsigned long, unsigned long) const
000000000059fd60 0000000000000034 W std::string::swap(std::string&)
000000000059fda0 0000000000000038 W std::string::find_first_not_of(char, unsigned long) const
000000000059fde0 0000000000000080 W std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator<char> const&)
000000000059fe60 000000000000009c W std::string::_S_construct(unsigned long, char, std::allocator<char> const&)
000000000059ff00 0000000000000004 W std::string::_Rep::_M_destroy(std::allocator<char> const&)
000000000059ff20 00000000000001ec W std::string::_M_mutate(unsigned long, unsigned long, unsigned long)
00000000005a0120 0000000000000058 W std::string::_M_leak_hard()
00000000005a0180 0000000000000018 W std::string::_M_leak()
00000000005a01a0 000000000000009c W std::string::_M_replace_aux(unsigned long, unsigned long, unsigned long, char)
00000000005a0240 0000000000000078 W std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long)
00000000005a02c0 0000000000000130 W std::string::assign(char const*, unsigned long)
00000000005a0400 00000000000000ac W std::string::_Rep::_M_clone(std::allocator<char> const&, unsigned long)
00000000005a04c0 00000000000000c0 W std::string::reserve(unsigned long)
00000000005a0580 00000000000000d4 W std::string::append(std::string const&)
00000000005a0660 0000000000000134 W std::string::append(char const*, unsigned long)
00000000005a07a0 00000000000000f4 W std::string::append(unsigned long, char)
00000000005a08a0 0000000000000054 W std::string::resize(unsigned long, char)
00000000005a0900 000000000000009c W std::string::push_back(char)
00000000005a09a0 0000000000000094 W std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::copy(wchar_t*, unsigned long, unsigned long) const
00000000005a0a40 0000000000000034 W std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::swap(std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >&)
00000000005a0a80 0000000000000094 W std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_Rep::_S_create(unsigned long, unsigned long, std::allocator<wchar_t> const&)
00000000005a0b20 00000000000000a4 W std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_S_construct(unsigned long, wchar_t, std::allocator<wchar_t> const&)
00000000005a0be0 0000000000000004 W std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_Rep::_M_destroy(std::allocator<wchar_t> const&)
00000000005a0c00 00000000000001fc W std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_M_mutate(unsigned long, unsigned long, unsigned long)
00000000005a0e00 0000000000000058 W std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_M_leak_hard()
00000000005a0e60 000000000000009c W std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_M_replace_aux(unsigned long, unsigned long, unsigned long, wchar_t)
00000000005a0f00 000000000000007c W std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_M_replace_safe(unsigned long, unsigned long, wchar_t const*, unsigned long)
00000000005a0f80 000000000000010c W std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::assign(wchar_t const*, unsigned long)
00000000005a10a0 00000000000000b0 W std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_Rep::_M_clone(std::allocator<wchar_t> const&, unsigned long)
00000000005a1160 00000000000000c0 W std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::reserve(unsigned long)
00000000005a1220 00000000000000dc W std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::append(std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> > const&)
00000000005a1300 0000000000000144 W std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::append(wchar_t const*, unsigned long)
00000000005a1460 00000000000000f4 W std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::append(unsigned long, wchar_t)
00000000005a1560 000000000000004c W std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::resize(unsigned long, wchar_t)
00000000005a15c0 0000000000000094 W std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::push_back(wchar_t)
00000000005a1660 0000000000000008 W std::ctype<char>::do_narrow(char, char) const
00000000005a1680 0000000000000048 T std::ctype<char>::~ctype()
00000000005a1680 0000000000000048 T std::ctype<char>::~ctype()
00000000005a16e0 0000000000000044 T std::ctype<wchar_t>::~ctype()
00000000005a16e0 0000000000000044 T std::ctype<wchar_t>::~ctype()
00000000005a1740 0000000000000024 T std::ctype<char>::~ctype()
00000000005a1780 0000000000000024 T std::ctype<wchar_t>::~ctype()
00000000005a17c0 0000000000000034 W std::ctype<char>::do_narrow(char const*, char const*, char, char*) const
00000000005a1800 0000000000000034 W std::ctype<char>::do_widen(char const*, char const*, char*) const
00000000005a1840 0000000000000158 T std::ctype<char>::_M_widen_init() const
00000000005a19a0 000000000000006c T std::ctype<wchar_t>::ctype(unsigned long)
00000000005a19a0 000000000000006c T std::ctype<wchar_t>::ctype(unsigned long)
00000000005a1a20 0000000000000020 T std::ctype<char>::do_toupper(char) const
00000000005a1a20 0000000000000020 t std::ctype<char>::do_toupper(char) const [clone .localalias]
00000000005a1a40 0000000000000018 T std::ctype<char>::do_tolower(char) const
00000000005a1a40 0000000000000018 t std::ctype<char>::do_tolower(char) const [clone .localalias]
00000000005a1a60 0000000000000010 T std::ctype<char>::classic_table()
00000000005a1a80 00000000000000bc T std::ctype<char>::ctype(char const*, bool, unsigned long)
00000000005a1a80 00000000000000bc T std::ctype<char>::ctype(char const*, bool, unsigned long)
00000000005a1b40 0000000000000094 T std::ctype<char>::do_toupper(char*, char const*) const
00000000005a1be0 0000000000000090 T std::ctype<char>::do_tolower(char*, char const*) const
00000000005a1c80 0000000000000088 T std::ctype<wchar_t>::do_is(char, wchar_t) const
00000000005a1c80 0000000000000088 t std::ctype<wchar_t>::do_is(char, wchar_t) const [clone .localalias]
00000000005a1d20 0000000000000110 T std::ctype<wchar_t>::_M_convert_to_wmask(char) const
00000000005a1e40 0000000000000008 T std::ctype<wchar_t>::do_toupper(wchar_t) const
00000000005a1e60 0000000000000068 T std::ctype<wchar_t>::do_toupper(wchar_t*, wchar_t const*) const
00000000005a1ee0 0000000000000008 T std::ctype<wchar_t>::do_tolower(wchar_t) const
00000000005a1f00 0000000000000068 T std::ctype<wchar_t>::do_tolower(wchar_t*, wchar_t const*) const
00000000005a1f80 00000000000000bc T std::ctype<wchar_t>::do_is(wchar_t const*, wchar_t const*, char*) const
00000000005a2040 00000000000000d0 T std::ctype<wchar_t>::do_scan_is(char, wchar_t const*, wchar_t const*) const
00000000005a2120 00000000000000e4 T std::ctype<wchar_t>::do_scan_not(char, wchar_t const*, wchar_t const*) const
00000000005a2220 000000000000000c T std::ctype<wchar_t>::do_widen(char) const
00000000005a2240 0000000000000034 T std::ctype<wchar_t>::do_widen(char const*, char const*, wchar_t*) const
00000000005a2280 000000000000005c T std::ctype<wchar_t>::do_narrow(wchar_t, char) const
00000000005a22e0 00000000000000ec T std::ctype<wchar_t>::do_narrow(wchar_t const*, wchar_t const*, char, char*) const
00000000005a23e0 00000000000000c8 T std::ctype<wchar_t>::_M_initialize_ctype()
00000000005a24c0 0000000000000024 t std::__facet_shims::(anonymous namespace)::collate_shim<char>::do_compare(char const*, char const*, char const*, char const*) const
00000000005a2500 0000000000000058 t std::__facet_shims::(anonymous namespace)::time_get_shim<char>::do_get_year(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, tm*) const
00000000005a2560 0000000000000058 t std::__facet_shims::(anonymous namespace)::time_get_shim<char>::do_get_monthname(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, tm*) const
00000000005a25c0 0000000000000058 t std::__facet_shims::(anonymous namespace)::time_get_shim<char>::do_get_weekday(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, tm*) const
00000000005a2620 0000000000000058 t std::__facet_shims::(anonymous namespace)::time_get_shim<char>::do_get_date(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, tm*) const
00000000005a2680 0000000000000058 t std::__facet_shims::(anonymous namespace)::time_get_shim<char>::do_get_time(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, tm*) const
00000000005a26e0 0000000000000010 t std::__facet_shims::(anonymous namespace)::time_get_shim<char>::do_date_order() const
00000000005a2700 00000000000000a0 t std::__facet_shims::(anonymous namespace)::money_get_shim<char>::do_get(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, bool, std::ios_base&, std::_Ios_Iostate&, long double&) const
00000000005a27a0 0000000000000030 t std::__facet_shims::(anonymous namespace)::money_put_shim<char>::do_put(std::ostreambuf_iterator<char, std::char_traits<char> >, bool, std::ios_base&, char, long double) const
00000000005a27e0 0000000000000014 t std::__facet_shims::(anonymous namespace)::messages_shim<char>::do_close(int) const
00000000005a2800 0000000000000018 t std::__facet_shims::(anonymous namespace)::messages_shim<char>::do_open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::locale const&) const
00000000005a2820 0000000000000024 t std::__facet_shims::(anonymous namespace)::collate_shim<wchar_t>::do_compare(wchar_t const*, wchar_t const*, wchar_t const*, wchar_t const*) const
00000000005a2860 0000000000000058 t std::__facet_shims::(anonymous namespace)::time_get_shim<wchar_t>::do_get_year(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, tm*) const
00000000005a28c0 0000000000000058 t std::__facet_shims::(anonymous namespace)::time_get_shim<wchar_t>::do_get_monthname(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, tm*) const
00000000005a2920 0000000000000058 t std::__facet_shims::(anonymous namespace)::time_get_shim<wchar_t>::do_get_weekday(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, tm*) const
00000000005a2980 0000000000000058 t std::__facet_shims::(anonymous namespace)::time_get_shim<wchar_t>::do_get_date(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, tm*) const
00000000005a29e0 0000000000000058 t std::__facet_shims::(anonymous namespace)::time_get_shim<wchar_t>::do_get_time(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, tm*) const
00000000005a2a40 0000000000000010 t std::__facet_shims::(anonymous namespace)::time_get_shim<wchar_t>::do_date_order() const
00000000005a2a60 00000000000000a0 t std::__facet_shims::(anonymous namespace)::money_get_shim<wchar_t>::do_get(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, bool, std::ios_base&, std::_Ios_Iostate&, long double&) const
00000000005a2b00 0000000000000028 t std::__facet_shims::(anonymous namespace)::money_put_shim<wchar_t>::do_put(std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, bool, std::ios_base&, wchar_t, long double) const
00000000005a2b40 0000000000000014 t std::__facet_shims::(anonymous namespace)::messages_shim<wchar_t>::do_close(int) const
00000000005a2b60 0000000000000018 t std::__facet_shims::(anonymous namespace)::messages_shim<wchar_t>::do_open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::locale const&) const
00000000005a2b80 00000000000000ac t void std::__cxx11::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_M_construct<wchar_t const*>(wchar_t const*, wchar_t const*, std::forward_iterator_tag) [clone .isra.0]
00000000005a2c40 00000000000000bc t void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*, std::forward_iterator_tag) [clone .isra.0]
00000000005a2d00 00000000000000d8 t std::__facet_shims::(anonymous namespace)::money_put_shim<char>::do_put(std::ostreambuf_iterator<char, std::char_traits<char> >, bool, std::ios_base&, char, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const
00000000005a2de0 00000000000000bc t void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag) [clone .isra.0]
00000000005a2ea0 00000000000000ac t void std::__cxx11::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_M_construct<wchar_t*>(wchar_t*, wchar_t*, std::forward_iterator_tag) [clone .isra.0]
00000000005a2f60 00000000000000dc t std::__facet_shims::(anonymous namespace)::money_put_shim<wchar_t>::do_put(std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, bool, std::ios_base&, wchar_t, std::__cxx11::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> > const&) const
00000000005a3040 00000000000000b0 t std::__facet_shims::(anonymous namespace)::messages_shim<char>::do_get(int, int, int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const
00000000005a3100 00000000000000a8 t std::__facet_shims::(anonymous namespace)::collate_shim<wchar_t>::do_transform(wchar_t const*, wchar_t const*) const
00000000005a31c0 00000000000000b0 t std::__facet_shims::(anonymous namespace)::messages_shim<wchar_t>::do_get(int, int, int, std::__cxx11::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> > const&) const
00000000005a3280 00000000000000a8 t std::__facet_shims::(anonymous namespace)::collate_shim<char>::do_transform(char const*, char const*) const
00000000005a3340 0000000000000018 t void std::__facet_shims::(anonymous namespace)::__destroy_string<wchar_t>(void*)
00000000005a3360 0000000000000018 t void std::__facet_shims::(anonymous namespace)::__destroy_string<char>(void*)
00000000005a3380 0000000000000054 t std::__facet_shims::(anonymous namespace)::messages_shim<char>::~messages_shim()
00000000005a3380 0000000000000054 t std::__facet_shims::(anonymous namespace)::messages_shim<char>::~messages_shim()
00000000005a33e0 0000000000000054 t std::__facet_shims::(anonymous namespace)::messages_shim<wchar_t>::~messages_shim()
00000000005a33e0 0000000000000054 t std::__facet_shims::(anonymous namespace)::messages_shim<wchar_t>::~messages_shim()
00000000005a3440 0000000000000064 t std::__facet_shims::(anonymous namespace)::money_get_shim<char>::~money_get_shim()
00000000005a3440 0000000000000064 t std::__facet_shims::(anonymous namespace)::money_get_shim<char>::~money_get_shim()
00000000005a34c0 0000000000000064 t std::__facet_shims::(anonymous namespace)::money_put_shim<char>::~money_put_shim()
00000000005a34c0 0000000000000064 t std::__facet_shims::(anonymous namespace)::money_put_shim<char>::~money_put_shim()
00000000005a3540 0000000000000064 t std::__facet_shims::(anonymous namespace)::money_get_shim<wchar_t>::~money_get_shim()
00000000005a3540 0000000000000064 t std::__facet_shims::(anonymous namespace)::money_get_shim<wchar_t>::~money_get_shim()
00000000005a35c0 0000000000000064 t std::__facet_shims::(anonymous namespace)::money_put_shim<wchar_t>::~money_put_shim()
00000000005a35c0 0000000000000064 t std::__facet_shims::(anonymous namespace)::money_put_shim<wchar_t>::~money_put_shim()
00000000005a3640 0000000000000064 t std::__facet_shims::(anonymous namespace)::time_get_shim<char>::~time_get_shim()
00000000005a3640 0000000000000064 t std::__facet_shims::(anonymous namespace)::time_get_shim<char>::~time_get_shim()
00000000005a36c0 0000000000000064 t std::__facet_shims::(anonymous namespace)::time_get_shim<wchar_t>::~time_get_shim()
00000000005a36c0 0000000000000064 t std::__facet_shims::(anonymous namespace)::time_get_shim<wchar_t>::~time_get_shim()
00000000005a3740 000000000000005c t std::__facet_shims::(anonymous namespace)::messages_shim<char>::~messages_shim()
00000000005a37a0 000000000000005c t std::__facet_shims::(anonymous namespace)::messages_shim<wchar_t>::~messages_shim()
00000000005a3800 0000000000000058 t std::__facet_shims::(anonymous namespace)::numpunct_shim<char>::~numpunct_shim()
00000000005a3800 0000000000000058 t std::__facet_shims::(anonymous namespace)::numpunct_shim<char>::~numpunct_shim()
00000000005a3860 0000000000000058 t std::__facet_shims::(anonymous namespace)::numpunct_shim<wchar_t>::~numpunct_shim()
00000000005a3860 0000000000000058 t std::__facet_shims::(anonymous namespace)::numpunct_shim<wchar_t>::~numpunct_shim()
00000000005a38c0 000000000000006c t std::__facet_shims::(anonymous namespace)::money_get_shim<char>::~money_get_shim()
00000000005a3940 000000000000006c t std::__facet_shims::(anonymous namespace)::money_put_shim<char>::~money_put_shim()
00000000005a39c0 000000000000006c t std::__facet_shims::(anonymous namespace)::money_get_shim<wchar_t>::~money_get_shim()
00000000005a3a40 000000000000006c t std::__facet_shims::(anonymous namespace)::money_put_shim<wchar_t>::~money_put_shim()
00000000005a3ac0 000000000000006c t std::__facet_shims::(anonymous namespace)::time_get_shim<char>::~time_get_shim()
00000000005a3b40 000000000000006c t std::__facet_shims::(anonymous namespace)::time_get_shim<wchar_t>::~time_get_shim()
00000000005a3bc0 000000000000006c t std::__facet_shims::(anonymous namespace)::collate_shim<char>::~collate_shim()
00000000005a3bc0 000000000000006c t std::__facet_shims::(anonymous namespace)::collate_shim<char>::~collate_shim()
00000000005a3c40 000000000000006c t std::__facet_shims::(anonymous namespace)::collate_shim<wchar_t>::~collate_shim()
00000000005a3c40 000000000000006c t std::__facet_shims::(anonymous namespace)::collate_shim<wchar_t>::~collate_shim()
00000000005a3cc0 0000000000000060 t std::__facet_shims::(anonymous namespace)::numpunct_shim<char>::~numpunct_shim()
00000000005a3d20 0000000000000060 t std::__facet_shims::(anonymous namespace)::numpunct_shim<wchar_t>::~numpunct_shim()
00000000005a3d80 0000000000000074 t std::__facet_shims::(anonymous namespace)::collate_shim<char>::~collate_shim()
00000000005a3e00 0000000000000074 t std::__facet_shims::(anonymous namespace)::collate_shim<wchar_t>::~collate_shim()
00000000005a3e80 0000000000000064 t std::__facet_shims::(anonymous namespace)::moneypunct_shim<char, true>::~moneypunct_shim()
00000000005a3e80 0000000000000064 t std::__facet_shims::(anonymous namespace)::moneypunct_shim<char, true>::~moneypunct_shim()
00000000005a3f00 0000000000000064 t std::__facet_shims::(anonymous namespace)::moneypunct_shim<char, false>::~moneypunct_shim()
00000000005a3f00 0000000000000064 t std::__facet_shims::(anonymous namespace)::moneypunct_shim<char, false>::~moneypunct_shim()
00000000005a3f80 0000000000000064 t std::__facet_shims::(anonymous namespace)::moneypunct_shim<wchar_t, true>::~moneypunct_shim()
00000000005a3f80 0000000000000064 t std::__facet_shims::(anonymous namespace)::moneypunct_shim<wchar_t, true>::~moneypunct_shim()
00000000005a4000 0000000000000064 t std::__facet_shims::(anonymous namespace)::moneypunct_shim<wchar_t, false>::~moneypunct_shim()
00000000005a4000 0000000000000064 t std::__facet_shims::(anonymous namespace)::moneypunct_shim<wchar_t, false>::~moneypunct_shim()
00000000005a4080 000000000000006c t std::__facet_shims::(anonymous namespace)::moneypunct_shim<char, true>::~moneypunct_shim()
00000000005a4100 000000000000006c t std::__facet_shims::(anonymous namespace)::moneypunct_shim<char, false>::~moneypunct_shim()
00000000005a4180 000000000000006c t std::__facet_shims::(anonymous namespace)::moneypunct_shim<wchar_t, true>::~moneypunct_shim()
00000000005a4200 000000000000006c t std::__facet_shims::(anonymous namespace)::moneypunct_shim<wchar_t, false>::~moneypunct_shim()
00000000005a4280 00000000000001b4 t std::__facet_shims::(anonymous namespace)::money_get_shim<wchar_t>::do_get(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, bool, std::ios_base&, std::_Ios_Iostate&, std::__cxx11::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >&) const
00000000005a4440 0000000000000224 t std::__facet_shims::(anonymous namespace)::money_get_shim<char>::do_get(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, bool, std::ios_base&, std::_Ios_Iostate&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&) const
00000000005a4680 0000000000000180 W void std::__facet_shims::__numpunct_fill_cache<char>(std::integral_constant<bool, true>, std::locale::facet const*, std::__numpunct_cache<char>*)
00000000005a4800 00000000000001d0 W void std::__facet_shims::__numpunct_fill_cache<wchar_t>(std::integral_constant<bool, true>, std::locale::facet const*, std::__numpunct_cache<wchar_t>*)
00000000005a49e0 0000000000000024 W int std::__facet_shims::__collate_compare<char>(std::integral_constant<bool, true>, std::locale::facet const*, char const*, char const*, char const*, char const*)
00000000005a4a20 0000000000000024 W int std::__facet_shims::__collate_compare<wchar_t>(std::integral_constant<bool, true>, std::locale::facet const*, wchar_t const*, wchar_t const*, wchar_t const*, wchar_t const*)
00000000005a4a60 0000000000000098 W void std::__facet_shims::__collate_transform<char>(std::integral_constant<bool, true>, std::locale::facet const*, std::__facet_shims::__any_string&, char const*, char const*)
00000000005a4b00 0000000000000098 W void std::__facet_shims::__collate_transform<wchar_t>(std::integral_constant<bool, true>, std::locale::facet const*, std::__facet_shims::__any_string&, wchar_t const*, wchar_t const*)
00000000005a4ba0 0000000000000218 W void std::__facet_shims::__moneypunct_fill_cache<char, true>(std::integral_constant<bool, true>, std::locale::facet const*, std::__moneypunct_cache<char, true>*)
00000000005a4dc0 0000000000000218 W void std::__facet_shims::__moneypunct_fill_cache<char, false>(std::integral_constant<bool, true>, std::locale::facet const*, std::__moneypunct_cache<char, false>*)
00000000005a4fe0 0000000000000284 W void std::__facet_shims::__moneypunct_fill_cache<wchar_t, true>(std::integral_constant<bool, true>, std::locale::facet const*, std::__moneypunct_cache<wchar_t, true>*)
00000000005a5280 0000000000000284 W void std::__facet_shims::__moneypunct_fill_cache<wchar_t, false>(std::integral_constant<bool, true>, std::locale::facet const*, std::__moneypunct_cache<wchar_t, false>*)
00000000005a5520 000000000000009c W int std::__facet_shims::__messages_open<char>(std::integral_constant<bool, true>, std::locale::facet const*, char const*, unsigned long, std::locale const&)
00000000005a55c0 000000000000009c W int std::__facet_shims::__messages_open<wchar_t>(std::integral_constant<bool, true>, std::locale::facet const*, char const*, unsigned long, std::locale const&)
00000000005a5660 0000000000000114 W void std::__facet_shims::__messages_get<char>(std::integral_constant<bool, true>, std::locale::facet const*, std::__facet_shims::__any_string&, int, int, int, char const*, unsigned long)
00000000005a5780 0000000000000114 W void std::__facet_shims::__messages_get<wchar_t>(std::integral_constant<bool, true>, std::locale::facet const*, std::__facet_shims::__any_string&, int, int, int, wchar_t const*, unsigned long)
00000000005a58a0 0000000000000018 W void std::__facet_shims::__messages_close<char>(std::integral_constant<bool, true>, std::locale::facet const*, int)
00000000005a58c0 0000000000000018 W void std::__facet_shims::__messages_close<wchar_t>(std::integral_constant<bool, true>, std::locale::facet const*, int)
00000000005a58e0 0000000000000014 W std::time_base::dateorder std::__facet_shims::__time_get_dateorder<char>(std::integral_constant<bool, true>, std::locale::facet const*)
00000000005a5900 0000000000000014 W std::time_base::dateorder std::__facet_shims::__time_get_dateorder<wchar_t>(std::integral_constant<bool, true>, std::locale::facet const*)
00000000005a5920 00000000000000a4 W std::istreambuf_iterator<char, std::char_traits<char> > std::__facet_shims::__time_get<char>(std::integral_constant<bool, true>, std::locale::facet const*, std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, tm*, char)
00000000005a59e0 00000000000000a4 W std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::__facet_shims::__time_get<wchar_t>(std::integral_constant<bool, true>, std::locale::facet const*, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, tm*, char)
00000000005a5aa0 0000000000000128 W std::istreambuf_iterator<char, std::char_traits<char> > std::__facet_shims::__money_get<char>(std::integral_constant<bool, true>, std::locale::facet const*, std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, bool, std::ios_base&, std::_Ios_Iostate&, long double*, std::__facet_shims::__any_string*)
00000000005a5be0 0000000000000128 W std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::__facet_shims::__money_get<wchar_t>(std::integral_constant<bool, true>, std::locale::facet const*, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, bool, std::ios_base&, std::_Ios_Iostate&, long double*, std::__facet_shims::__any_string*)
00000000005a5d20 0000000000000120 W std::ostreambuf_iterator<char, std::char_traits<char> > std::__facet_shims::__money_put<char>(std::integral_constant<bool, true>, std::locale::facet const*, std::ostreambuf_iterator<char, std::char_traits<char> >, bool, std::ios_base&, char, long double, std::__facet_shims::__any_string const*)
00000000005a5e40 0000000000000120 W std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::__facet_shims::__money_put<wchar_t>(std::integral_constant<bool, true>, std::locale::facet const*, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, bool, std::ios_base&, wchar_t, long double, std::__facet_shims::__any_string const*)
00000000005a5f60 0000000000000988 T std::locale::facet::_M_sso_shim(std::locale::id const*) const
00000000005a6900 000000000000000c W std::__cxx11::moneypunct<wchar_t, false>::do_decimal_point() const
00000000005a6920 000000000000000c W std::__cxx11::moneypunct<wchar_t, false>::do_thousands_sep() const
00000000005a6940 000000000000000c W std::__cxx11::moneypunct<wchar_t, false>::do_frac_digits() const
00000000005a6960 000000000000000c W std::__cxx11::moneypunct<wchar_t, false>::do_pos_format() const
00000000005a6980 000000000000000c W std::__cxx11::moneypunct<wchar_t, false>::do_neg_format() const
00000000005a69a0 000000000000000c W std::__cxx11::moneypunct<wchar_t, true>::do_decimal_point() const
00000000005a69c0 000000000000000c W std::__cxx11::moneypunct<wchar_t, true>::do_thousands_sep() const
00000000005a69e0 000000000000000c W std::__cxx11::moneypunct<wchar_t, true>::do_frac_digits() const
00000000005a6a00 000000000000000c W std::__cxx11::moneypunct<wchar_t, true>::do_pos_format() const
00000000005a6a20 000000000000000c W std::__cxx11::moneypunct<wchar_t, true>::do_neg_format() const
00000000005a6a40 000000000000000c W std::__cxx11::numpunct<wchar_t>::do_decimal_point() const
00000000005a6a60 000000000000000c W std::__cxx11::numpunct<wchar_t>::do_thousands_sep() const
00000000005a6a80 0000000000000008 W std::__cxx11::time_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::do_date_order() const
00000000005a6aa0 0000000000000008 W std::__cxx11::messages<wchar_t>::do_open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::locale const&) const
00000000005a6ac0 0000000000000004 W std::__cxx11::messages<wchar_t>::do_close(int) const
00000000005a6ae0 0000000000000024 W std::__cxx11::collate<wchar_t>::do_hash(wchar_t const*, wchar_t const*) const
00000000005a6b20 0000000000000014 W std::__cxx11::money_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::~money_get()
00000000005a6b20 0000000000000014 W std::__cxx11::money_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::~money_get()
00000000005a6b40 0000000000000034 W std::__cxx11::money_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::~money_get()
00000000005a6b80 0000000000000014 W std::__cxx11::money_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::~money_put()
00000000005a6b80 0000000000000014 W std::__cxx11::money_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::~money_put()
00000000005a6ba0 0000000000000034 W std::__cxx11::money_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::~money_put()
00000000005a6be0 0000000000000014 W std::__cxx11::time_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::~time_get()
00000000005a6be0 0000000000000014 W std::__cxx11::time_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::~time_get()
00000000005a6c00 0000000000000034 W std::__cxx11::time_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::~time_get()
00000000005a6c40 0000000000000034 W std::__cxx11::messages<wchar_t>::~messages()
00000000005a6c40 0000000000000034 W std::__cxx11::messages<wchar_t>::~messages()
00000000005a6c80 0000000000000024 W std::__cxx11::messages<wchar_t>::~messages()
00000000005a6cc0 0000000000000034 W std::__cxx11::collate<wchar_t>::~collate()
00000000005a6cc0 0000000000000034 W std::__cxx11::collate<wchar_t>::~collate()
00000000005a6d00 00000000000000ac t void std::__cxx11::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_M_construct<wchar_t const*>(wchar_t const*, wchar_t const*, std::forward_iterator_tag) [clone .isra.0]
00000000005a6dc0 000000000000003c W std::__cxx11::collate<wchar_t>::~collate()
00000000005a6e00 00000000000000ec W std::__cxx11::numpunct<wchar_t>::do_grouping() const
00000000005a6f00 00000000000000ec W std::__cxx11::moneypunct<wchar_t, false>::do_grouping() const
00000000005a7000 00000000000000ec W std::__cxx11::moneypunct<wchar_t, true>::do_grouping() const
00000000005a7100 000000000000005c W std::__cxx11::moneypunct<wchar_t, false>::do_curr_symbol() const
00000000005a7160 000000000000005c W std::__cxx11::moneypunct<wchar_t, false>::do_positive_sign() const
00000000005a71c0 000000000000005c W std::__cxx11::moneypunct<wchar_t, false>::do_negative_sign() const
00000000005a7220 000000000000005c W std::__cxx11::moneypunct<wchar_t, true>::do_curr_symbol() const
00000000005a7280 000000000000005c W std::__cxx11::moneypunct<wchar_t, true>::do_positive_sign() const
00000000005a72e0 000000000000005c W std::__cxx11::moneypunct<wchar_t, true>::do_negative_sign() const
00000000005a7340 000000000000005c W std::__cxx11::numpunct<wchar_t>::do_truename() const
00000000005a73a0 000000000000005c W std::__cxx11::numpunct<wchar_t>::do_falsename() const
00000000005a7400 000000000000011c W std::__cxx11::collate<wchar_t>::do_compare(wchar_t const*, wchar_t const*, wchar_t const*, wchar_t const*) const
00000000005a7520 0000000000000210 W std::__cxx11::collate<wchar_t>::do_transform(wchar_t const*, wchar_t const*) const
00000000005a7740 0000000000000150 W std::__convert_from_v(int* const&, char*, int, char const*, ...)
00000000005a78a0 00000000000012ac W std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::__cxx11::money_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract<true>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&) const
00000000005a8b60 00000000000012ac W std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::__cxx11::money_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract<false>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&) const
00000000005a9e20 00000000000000c4 W std::__cxx11::money_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::do_get(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, bool, std::ios_base&, std::_Ios_Iostate&, long double&) const
00000000005a9f00 0000000000000144 W std::__cxx11::money_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::do_get(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, bool, std::ios_base&, std::_Ios_Iostate&, std::__cxx11::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >&) const
00000000005aa060 00000000000006bc W std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::__cxx11::money_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_insert<true>(std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, wchar_t, std::__cxx11::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> > const&) const
00000000005aa720 00000000000006bc W std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::__cxx11::money_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_insert<false>(std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, wchar_t, std::__cxx11::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> > const&) const
00000000005aade0 00000000000001bc W std::__cxx11::money_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::do_put(std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, bool, std::ios_base&, wchar_t, long double) const
00000000005aafa0 0000000000000020 W std::__cxx11::money_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::do_put(std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, bool, std::ios_base&, wchar_t, std::__cxx11::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> > const&) const
00000000005aafc0 0000000000000288 W std::__cxx11::time_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_num(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, int&, int, int, unsigned long, std::ios_base&, std::_Ios_Iostate&) const
00000000005ab260 00000000000005fc W std::__cxx11::time_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::do_get_year(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, tm*) const
00000000005ab860 0000000000000c48 W std::__cxx11::time_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_name(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, int&, wchar_t const**, unsigned long, std::ios_base&, std::_Ios_Iostate&) const
00000000005ac4c0 0000000000000538 W std::__cxx11::time_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_wday_or_month(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, int&, wchar_t const**, unsigned long, std::ios_base&, std::_Ios_Iostate&) const
00000000005aca00 0000000000000220 W std::__cxx11::time_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::do_get_weekday(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, tm*) const
00000000005acc20 0000000000000228 W std::__cxx11::time_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::do_get_monthname(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, tm*) const
00000000005ace60 0000000000000058 W std::__cxx11::messages<wchar_t>::messages(unsigned long)
00000000005ace60 0000000000000058 W std::__cxx11::messages<wchar_t>::messages(unsigned long)
00000000005acec0 0000000000000064 W std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >::_M_get() const
00000000005acf40 00000000000018d8 W std::__cxx11::time_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_via_format(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, tm*, wchar_t const*, std::__time_get_state&) const
00000000005acf40 00000000000018d8 t std::__cxx11::time_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_via_format(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, tm*, wchar_t const*, std::__time_get_state&) const [clone .localalias]
00000000005ae820 00000000000001b8 W std::__cxx11::time_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::do_get_time(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, tm*) const
00000000005ae9e0 00000000000001b8 W std::__cxx11::time_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::do_get_date(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, tm*) const
00000000005aeba0 00000000000001cc W std::__cxx11::time_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::do_get(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, tm*, char, char) const
00000000005aed80 0000000000000014 W __gnu_cxx::stdio_sync_filebuf<char, std::char_traits<char> >::~stdio_sync_filebuf()
00000000005aed80 0000000000000014 W __gnu_cxx::stdio_sync_filebuf<char, std::char_traits<char> >::~stdio_sync_filebuf()
00000000005aeda0 0000000000000034 W __gnu_cxx::stdio_sync_filebuf<char, std::char_traits<char> >::~stdio_sync_filebuf()
00000000005aede0 0000000000000014 W __gnu_cxx::stdio_sync_filebuf<wchar_t, std::char_traits<wchar_t> >::~stdio_sync_filebuf()
00000000005aede0 0000000000000014 W __gnu_cxx::stdio_sync_filebuf<wchar_t, std::char_traits<wchar_t> >::~stdio_sync_filebuf()
00000000005aee00 0000000000000034 W __gnu_cxx::stdio_sync_filebuf<wchar_t, std::char_traits<wchar_t> >::~stdio_sync_filebuf()
00000000005aee40 0000000000000028 W __gnu_cxx::stdio_sync_filebuf<char, std::char_traits<char> >::uflow()
00000000005aee80 0000000000000028 W __gnu_cxx::stdio_sync_filebuf<char, std::char_traits<char> >::underflow()
00000000005aeec0 0000000000000060 W __gnu_cxx::stdio_sync_filebuf<char, std::char_traits<char> >::pbackfail(int)
00000000005aef20 0000000000000008 W __gnu_cxx::stdio_sync_filebuf<char, std::char_traits<char> >::sync()
00000000005aef40 0000000000000008 W __gnu_cxx::stdio_sync_filebuf<wchar_t, std::char_traits<wchar_t> >::sync()
00000000005aef60 0000000000000064 W __gnu_cxx::stdio_sync_filebuf<char, std::char_traits<char> >::seekoff(long, std::_Ios_Seekdir, std::_Ios_Openmode)
00000000005aefe0 0000000000000064 W __gnu_cxx::stdio_sync_filebuf<wchar_t, std::char_traits<wchar_t> >::seekoff(long, std::_Ios_Seekdir, std::_Ios_Openmode)
00000000005af060 0000000000000028 W __gnu_cxx::stdio_sync_filebuf<wchar_t, std::char_traits<wchar_t> >::uflow()
00000000005af0a0 000000000000007c W __gnu_cxx::stdio_sync_filebuf<wchar_t, std::char_traits<wchar_t> >::xsgetn(wchar_t*, long)
00000000005af120 0000000000000028 W __gnu_cxx::stdio_sync_filebuf<wchar_t, std::char_traits<wchar_t> >::underflow()
00000000005af160 0000000000000060 W __gnu_cxx::stdio_sync_filebuf<wchar_t, std::char_traits<wchar_t> >::pbackfail(unsigned int)
00000000005af1c0 0000000000000064 W __gnu_cxx::stdio_sync_filebuf<wchar_t, std::char_traits<wchar_t> >::xsputn(wchar_t const*, long)
00000000005af240 0000000000000014 W __gnu_cxx::stdio_sync_filebuf<char, std::char_traits<char> >::xsputn(char const*, long)
00000000005af260 0000000000000048 W __gnu_cxx::stdio_sync_filebuf<char, std::char_traits<char> >::xsgetn(char*, long)
00000000005af2c0 0000000000000038 W __gnu_cxx::stdio_sync_filebuf<wchar_t, std::char_traits<wchar_t> >::overflow(unsigned int)
00000000005af300 0000000000000038 W __gnu_cxx::stdio_sync_filebuf<char, std::char_traits<char> >::overflow(int)
00000000005af340 0000000000000074 W __gnu_cxx::stdio_sync_filebuf<wchar_t, std::char_traits<wchar_t> >::seekpos(std::fpos<_mbstate_t>, std::_Ios_Openmode)
00000000005af3c0 0000000000000074 W __gnu_cxx::stdio_sync_filebuf<char, std::char_traits<char> >::seekpos(std::fpos<_mbstate_t>, std::_Ios_Openmode)
00000000005af440 00000000000000c0 T std::__detail::_Prime_rehash_policy::_M_next_bkt(unsigned long) const
00000000005af500 000000000000009c T std::__detail::_Prime_rehash_policy::_M_need_rehash(unsigned long, unsigned long, unsigned long) const
00000000005af5a0 0000000000000014 W std::basic_ios<char, std::char_traits<char> >::~basic_ios()
00000000005af5a0 0000000000000014 W std::basic_ios<char, std::char_traits<char> >::~basic_ios()
00000000005af5c0 0000000000000014 W std::basic_ios<wchar_t, std::char_traits<wchar_t> >::~basic_ios()
00000000005af5c0 0000000000000014 W std::basic_ios<wchar_t, std::char_traits<wchar_t> >::~basic_ios()
00000000005af5e0 0000000000000034 W std::basic_ios<char, std::char_traits<char> >::~basic_ios()
00000000005af620 0000000000000034 W std::basic_ios<wchar_t, std::char_traits<wchar_t> >::~basic_ios()
00000000005af660 0000000000000038 W std::basic_ios<char, std::char_traits<char> >::clear(std::_Ios_Iostate)
00000000005af6a0 0000000000000024 W std::basic_ios<char, std::char_traits<char> >::_M_setstate(std::_Ios_Iostate)
00000000005af6e0 000000000000007c W std::basic_ios<char, std::char_traits<char> >::_M_cache_locale(std::locale const&)
00000000005af760 0000000000000048 W std::basic_ios<char, std::char_traits<char> >::init(std::basic_streambuf<char, std::char_traits<char> >*)
00000000005af7c0 0000000000000038 W std::basic_ios<wchar_t, std::char_traits<wchar_t> >::clear(std::_Ios_Iostate)
00000000005af800 0000000000000024 W std::basic_ios<wchar_t, std::char_traits<wchar_t> >::_M_setstate(std::_Ios_Iostate)
00000000005af840 000000000000007c W std::basic_ios<wchar_t, std::char_traits<wchar_t> >::_M_cache_locale(std::locale const&)
00000000005af8c0 000000000000004c W std::basic_ios<wchar_t, std::char_traits<wchar_t> >::init(std::basic_streambuf<wchar_t, std::char_traits<wchar_t> >*)
00000000005af920 0000000000000060 T std::ios_base::ios_base()
00000000005af920 0000000000000060 T std::ios_base::ios_base()
00000000005af980 0000000000000068 T std::ios_base::_M_call_callbacks(std::ios_base::event)
00000000005afa00 0000000000000054 T std::ios_base::_M_dispose_callbacks()
00000000005afa60 000000000000005c T std::ios_base::~ios_base()
00000000005afa60 000000000000005c T std::ios_base::~ios_base()
00000000005afac0 0000000000000024 T std::ios_base::~ios_base()
00000000005afb00 000000000000002c W std::basic_istream<char, std::char_traits<char> >::~basic_istream()
00000000005afb2c 0000000000000034 W virtual thunk to std::basic_istream<char, std::char_traits<char> >::~basic_istream()
00000000005afb60 0000000000000048 W std::basic_istream<char, std::char_traits<char> >::~basic_istream()
00000000005afba8 0000000000000050 W virtual thunk to std::basic_istream<char, std::char_traits<char> >::~basic_istream()
00000000005afc00 000000000000002c W std::basic_istream<wchar_t, std::char_traits<wchar_t> >::~basic_istream()
00000000005afc2c 0000000000000034 W virtual thunk to std::basic_istream<wchar_t, std::char_traits<wchar_t> >::~basic_istream()
00000000005afc60 0000000000000048 W std::basic_istream<wchar_t, std::char_traits<wchar_t> >::~basic_istream()
00000000005afca8 0000000000000050 W virtual thunk to std::basic_istream<wchar_t, std::char_traits<wchar_t> >::~basic_istream()
00000000005afd00 000000000000000c W std::moneypunct<char, false>::do_decimal_point() const
00000000005afd20 000000000000000c W std::moneypunct<char, false>::do_thousands_sep() const
00000000005afd40 000000000000000c W std::moneypunct<char, false>::do_frac_digits() const
00000000005afd60 000000000000000c W std::moneypunct<char, false>::do_pos_format() const
00000000005afd80 000000000000000c W std::moneypunct<char, false>::do_neg_format() const
00000000005afda0 000000000000000c W std::moneypunct<char, true>::do_decimal_point() const
00000000005afdc0 000000000000000c W std::moneypunct<char, true>::do_thousands_sep() const
00000000005afde0 000000000000000c W std::moneypunct<char, true>::do_frac_digits() const
00000000005afe00 000000000000000c W std::moneypunct<char, true>::do_pos_format() const
00000000005afe20 000000000000000c W std::moneypunct<char, true>::do_neg_format() const
00000000005afe40 000000000000000c W std::numpunct<char>::do_decimal_point() const
00000000005afe60 000000000000000c W std::numpunct<char>::do_thousands_sep() const
00000000005afe80 0000000000000008 W std::time_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::do_date_order() const
00000000005afea0 0000000000000008 W std::messages<char>::do_open(std::string const&, std::locale const&) const
00000000005afec0 0000000000000004 W std::messages<char>::do_close(int) const
00000000005afee0 0000000000000024 W std::collate<char>::do_hash(char const*, char const*) const
00000000005aff20 0000000000000014 W std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::~num_get()
00000000005aff20 0000000000000014 W std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::~num_get()
00000000005aff40 0000000000000014 W std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::~num_put()
00000000005aff40 0000000000000014 W std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::~num_put()
00000000005aff60 0000000000000014 W std::money_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::~money_get()
00000000005aff60 0000000000000014 W std::money_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::~money_get()
00000000005aff80 0000000000000014 W std::money_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::~money_put()
00000000005aff80 0000000000000014 W std::money_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::~money_put()
00000000005affa0 0000000000000014 W std::__timepunct_cache<char>::~__timepunct_cache()
00000000005affa0 0000000000000014 W std::__timepunct_cache<char>::~__timepunct_cache()
00000000005affc0 0000000000000014 W std::time_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::~time_put()
00000000005affc0 0000000000000014 W std::time_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::~time_put()
00000000005affe0 0000000000000014 W std::time_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::~time_get()
00000000005affe0 0000000000000014 W std::time_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::~time_get()
00000000005b0000 0000000000000034 W std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::~num_get()
00000000005b0040 0000000000000034 W std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::~num_put()
00000000005b0080 0000000000000034 W std::money_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::~money_get()
00000000005b00c0 0000000000000034 W std::money_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::~money_put()
00000000005b0100 0000000000000024 W std::__timepunct_cache<char>::~__timepunct_cache()
00000000005b0140 0000000000000034 W std::time_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::~time_put()
00000000005b0180 0000000000000034 W std::time_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::~time_get()
00000000005b01c0 0000000000000068 W std::__moneypunct_cache<char, false>::~__moneypunct_cache()
00000000005b01c0 0000000000000068 W std::__moneypunct_cache<char, false>::~__moneypunct_cache()
00000000005b0240 0000000000000024 W std::__moneypunct_cache<char, false>::~__moneypunct_cache()
00000000005b0280 0000000000000068 W std::__moneypunct_cache<char, true>::~__moneypunct_cache()
00000000005b0280 0000000000000068 W std::__moneypunct_cache<char, true>::~__moneypunct_cache()
00000000005b0300 0000000000000024 W std::__moneypunct_cache<char, true>::~__moneypunct_cache()
00000000005b0340 000000000000005c W std::__numpunct_cache<char>::~__numpunct_cache()
00000000005b0340 000000000000005c W std::__numpunct_cache<char>::~__numpunct_cache()
00000000005b03a0 0000000000000024 W std::__numpunct_cache<char>::~__numpunct_cache()
00000000005b03e0 0000000000000034 W std::messages<char>::~messages()
00000000005b03e0 0000000000000034 W std::messages<char>::~messages()
00000000005b0420 0000000000000024 W std::messages<char>::~messages()
00000000005b0460 0000000000000034 W std::collate<char>::~collate()
00000000005b0460 0000000000000034 W std::collate<char>::~collate()
00000000005b04a0 0000000000000068 W std::__timepunct<char>::~__timepunct()
00000000005b04a0 0000000000000068 W std::__timepunct<char>::~__timepunct()
00000000005b0520 0000000000000024 W std::__timepunct<char>::~__timepunct()
00000000005b0560 0000000000000028 t std::basic_streambuf<char, std::char_traits<char> >::sbumpc() [clone .isra.0]
00000000005b05a0 0000000000000058 t std::ctype<char>::widen(char) const [clone .part.0]
00000000005b0600 00000000000000a0 t std::ctype<char>::widen(char const*, char const*, char*) const [clone .isra.0]
00000000005b06a0 00000000000000b8 t char* std::string::_S_construct<char const*>(char const*, char const*, std::allocator<char> const&, std::forward_iterator_tag) [clone .isra.0]
00000000005b0760 0000000000000050 t std::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string() [clone .isra.0]
00000000005b07c0 000000000000003c W std::collate<char>::~collate()
00000000005b0800 0000000000000164 W std::time_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::do_put(std::ostreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, char, tm const*, char, char) const
00000000005b0980 00000000000000d8 W std::moneypunct<char, false>::do_grouping() const
00000000005b0a60 00000000000000d8 W std::moneypunct<char, false>::do_curr_symbol() const
00000000005b0b40 00000000000000d8 W std::moneypunct<char, false>::do_positive_sign() const
00000000005b0c20 00000000000000d8 W std::moneypunct<char, false>::do_negative_sign() const
00000000005b0d00 00000000000000d8 W std::moneypunct<char, true>::do_grouping() const
00000000005b0de0 00000000000000d8 W std::moneypunct<char, true>::do_curr_symbol() const
00000000005b0ec0 00000000000000d8 W std::moneypunct<char, true>::do_positive_sign() const
00000000005b0fa0 00000000000000d8 W std::moneypunct<char, true>::do_negative_sign() const
00000000005b1080 00000000000000d8 W std::numpunct<char>::do_grouping() const
00000000005b1160 00000000000000d8 W std::numpunct<char>::do_truename() const
00000000005b1240 00000000000000d8 W std::numpunct<char>::do_falsename() const
00000000005b1320 000000000000018c W std::collate<char>::do_compare(char const*, char const*, char const*, char const*) const
00000000005b14c0 00000000000001fc W std::collate<char>::do_transform(char const*, char const*) const
00000000005b16c0 000000000000007c W std::ctype<char>::narrow(char, char) const
00000000005b1740 0000000000000558 W std::__moneypunct_cache<char, false>::_M_cache(std::locale const&)
00000000005b1ca0 0000000000000558 W std::__moneypunct_cache<char, true>::_M_cache(std::locale const&)
00000000005b2200 0000000000000494 W std::__numpunct_cache<char>::_M_cache(std::locale const&)
00000000005b26a0 00000000000000e4 t std::__use_cache<std::__numpunct_cache<char> >::operator()(std::locale const&) const [clone .isra.0]
00000000005b27a0 0000000000000068 W std::__timepunct<char>::__timepunct(std::__timepunct_cache<char>*, unsigned long)
00000000005b27a0 0000000000000068 W std::__timepunct<char>::__timepunct(std::__timepunct_cache<char>*, unsigned long)
00000000005b2820 00000000000002c4 W std::time_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_num(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, int&, int, int, unsigned long, std::ios_base&, std::_Ios_Iostate&) const
00000000005b2b00 0000000000000058 W std::messages<char>::messages(unsigned long)
00000000005b2b00 0000000000000058 W std::messages<char>::messages(unsigned long)
00000000005b2b60 000000000000014c W char* std::__add_grouping<char>(char*, char, char const*, unsigned long, char const*, char const*)
00000000005b2cc0 00000000000000bc W std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::_M_group_float(char const*, unsigned long, char, char const*, char*, char*, int&) const
00000000005b2d80 0000000000000050 W std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::_M_group_int(char const*, unsigned long, char, std::ios_base&, char*, char*, int&) const
00000000005b2de0 000000000000056c W std::ostreambuf_iterator<char, std::char_traits<char> > std::money_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::_M_insert<true>(std::ostreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, char, std::string const&) const
00000000005b3360 000000000000056c W std::ostreambuf_iterator<char, std::char_traits<char> > std::money_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::_M_insert<false>(std::ostreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, char, std::string const&) const
00000000005b38e0 0000000000000294 W std::money_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::do_put(std::ostreambuf_iterator<char, std::char_traits<char> >, bool, std::ios_base&, char, long double) const
00000000005b3b80 0000000000000020 W std::money_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::do_put(std::ostreambuf_iterator<char, std::char_traits<char> >, bool, std::ios_base&, char, std::string const&) const
00000000005b3ba0 00000000000002ec W std::__pad<char, std::char_traits<char> >::_S_pad(std::ios_base&, char, char*, char const*, long, long)
00000000005b3ea0 000000000000003c W std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::_M_pad(char, long, std::ios_base&, char*, char const*, int&) const
00000000005b3ee0 0000000000000408 W std::ostreambuf_iterator<char, std::char_traits<char> > std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::_M_insert_float<double>(std::ostreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, char, char, double) const
00000000005b4300 0000000000000008 W std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::do_put(std::ostreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, char, double) const
00000000005b4320 0000000000000410 W std::ostreambuf_iterator<char, std::char_traits<char> > std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::_M_insert_float<long double>(std::ostreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, char, char, long double) const
00000000005b4740 0000000000000008 W std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::do_put(std::ostreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, char, long double) const
00000000005b4760 00000000000000a4 W int std::__int_to_char<char, unsigned long>(char*, unsigned long, char const*, std::_Ios_Fmtflags, bool)
00000000005b4820 0000000000000218 W std::ostreambuf_iterator<char, std::char_traits<char> > std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::_M_insert_int<long>(std::ostreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, char, long) const
00000000005b4a40 0000000000000004 W std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::do_put(std::ostreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, char, long) const
00000000005b4a60 000000000000019c W std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::do_put(std::ostreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, char, bool) const
00000000005b4c00 00000000000001cc W std::ostreambuf_iterator<char, std::char_traits<char> > std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::_M_insert_int<unsigned long>(std::ostreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, char, unsigned long) const
00000000005b4de0 0000000000000004 W std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::do_put(std::ostreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, char, unsigned long) const
00000000005b4e00 0000000000000050 W std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::do_put(std::ostreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, char, void const*) const
00000000005b4e60 00000000000000a4 W int std::__int_to_char<char, unsigned long long>(char*, unsigned long long, char const*, std::_Ios_Fmtflags, bool)
00000000005b4f20 0000000000000218 W std::ostreambuf_iterator<char, std::char_traits<char> > std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::_M_insert_int<long long>(std::ostreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, char, long long) const
00000000005b5140 0000000000000004 W std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::do_put(std::ostreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, char, long long) const
00000000005b5160 00000000000001cc W std::ostreambuf_iterator<char, std::char_traits<char> > std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::_M_insert_int<unsigned long long>(std::ostreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, char, unsigned long long) const
00000000005b5340 0000000000000004 W std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::do_put(std::ostreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, char, unsigned long long) const
00000000005b5360 00000000000000e8 W std::istreambuf_iterator<char, std::char_traits<char> >::equal(std::istreambuf_iterator<char, std::char_traits<char> > const&) const
00000000005b5460 000000000000006c W std::istreambuf_iterator<char, std::char_traits<char> >::_M_get() const
00000000005b54e0 0000000000000be4 W std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_float(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const
00000000005b60e0 00000000000001c8 W std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::do_get(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, float&) const
00000000005b62c0 00000000000001c8 W std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::do_get(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, double&) const
00000000005b64a0 00000000000001c8 W std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::do_get(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, long double&) const
00000000005b6680 000000000000092c W std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<long>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, long&) const
00000000005b6fc0 0000000000000458 W std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::do_get(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, bool&) const
00000000005b7420 0000000000000004 W std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::do_get(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, long&) const
00000000005b7440 0000000000000a44 W std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<unsigned short>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, unsigned short&) const
00000000005b7ea0 0000000000000004 W std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::do_get(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, unsigned short&) const
00000000005b7ec0 0000000000000a10 W std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<unsigned int>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, unsigned int&) const
00000000005b88e0 0000000000000004 W std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::do_get(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, unsigned int&) const
00000000005b8900 0000000000000a54 W std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<unsigned long>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, unsigned long&) const
00000000005b9360 0000000000000004 W std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::do_get(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, unsigned long&) const
00000000005b9380 000000000000005c W std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::do_get(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, void*&) const
00000000005b93e0 000000000000092c W std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<long long>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, long long&) const
00000000005b9d20 0000000000000004 W std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::do_get(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, long long&) const
00000000005b9d40 000000000000099c W std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<unsigned long long>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, unsigned long long&) const
00000000005ba6e0 0000000000000004 W std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::do_get(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, unsigned long long&) const
00000000005ba700 00000000000002bc W std::time_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::do_get_year(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, tm*) const
00000000005ba9c0 00000000000009e4 W std::time_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_name(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, int&, char const**, unsigned long, std::ios_base&, std::_Ios_Iostate&) const
00000000005bb3c0 00000000000003d8 W std::time_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_wday_or_month(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, int&, char const**, unsigned long, std::ios_base&, std::_Ios_Iostate&) const
00000000005bb7a0 0000000000000208 W std::time_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::do_get_weekday(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, tm*) const
00000000005bb9c0 0000000000000210 W std::time_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::do_get_monthname(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, tm*) const
00000000005bbbe0 00000000000010d8 W std::time_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_via_format(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, tm*, char const*, std::__time_get_state&) const
00000000005bbbe0 00000000000010d8 t std::time_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_via_format(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, tm*, char const*, std::__time_get_state&) const [clone .localalias]
00000000005bccc0 000000000000019c W std::time_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::do_get_time(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, tm*) const
00000000005bce60 000000000000019c W std::time_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::do_get_date(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, tm*) const
00000000005bd000 0000000000000ef0 W std::istreambuf_iterator<char, std::char_traits<char> > std::money_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract<true>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const
00000000005bdf00 0000000000000ef0 W std::istreambuf_iterator<char, std::char_traits<char> > std::money_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract<false>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const
00000000005bee00 00000000000000f0 W std::money_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::do_get(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, bool, std::ios_base&, std::_Ios_Iostate&, long double&) const
00000000005bef00 0000000000000200 W std::money_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::do_get(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, bool, std::ios_base&, std::_Ios_Iostate&, std::string&) const
00000000005bf100 0000000000000af8 T std::locale::_Impl::_Impl(unsigned long)
00000000005bf100 0000000000000af8 T std::locale::_Impl::_Impl(unsigned long)
00000000005bfc00 0000000000000064 T std::locale::_S_initialize_once()
00000000005bfc80 000000000000003c T std::locale::_S_initialize()
00000000005bfcc0 0000000000000100 T std::locale::locale()
00000000005bfcc0 0000000000000100 T std::locale::locale()
00000000005bfdc0 0000000000000028 W std::basic_ostream<char, std::char_traits<char> >::~basic_ostream()
00000000005bfde8 0000000000000034 W virtual thunk to std::basic_ostream<char, std::char_traits<char> >::~basic_ostream()
00000000005bfe20 0000000000000044 W std::basic_ostream<char, std::char_traits<char> >::~basic_ostream()
00000000005bfe64 0000000000000050 W virtual thunk to std::basic_ostream<char, std::char_traits<char> >::~basic_ostream()
00000000005bfec0 0000000000000028 W std::basic_ostream<wchar_t, std::char_traits<wchar_t> >::~basic_ostream()
00000000005bfee8 0000000000000034 W virtual thunk to std::basic_ostream<wchar_t, std::char_traits<wchar_t> >::~basic_ostream()
00000000005bff20 0000000000000044 W std::basic_ostream<wchar_t, std::char_traits<wchar_t> >::~basic_ostream()
00000000005bff64 0000000000000050 W virtual thunk to std::basic_ostream<wchar_t, std::char_traits<wchar_t> >::~basic_ostream()
00000000005bffc0 0000000000000078 W std::ostream::sentry::~sentry()
00000000005bffc0 0000000000000078 W std::ostream::sentry::~sentry()
00000000005c0040 000000000000015c W std::ostream::flush()
00000000005c01a0 0000000000000088 W std::ostream::sentry::sentry(std::ostream&)
00000000005c01a0 0000000000000088 W std::ostream::sentry::sentry(std::ostream&)
00000000005c0240 0000000000000174 W std::ostream::put(char)
00000000005c03c0 0000000000000414 W std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)
00000000005c07e0 0000000000000068 W std::basic_ostream<char, std::char_traits<char> >& std::operator<< <std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*)
00000000005c0860 00000000000001fc W std::ostream& std::ostream::_M_insert<long>(long)
00000000005c0a60 0000000000000034 W std::ostream::operator<<(int)
00000000005c0aa0 0000000000000078 W std::basic_ostream<wchar_t, std::char_traits<wchar_t> >::sentry::~sentry()
00000000005c0aa0 0000000000000078 W std::basic_ostream<wchar_t, std::char_traits<wchar_t> >::sentry::~sentry()
00000000005c0b20 000000000000015c W std::basic_ostream<wchar_t, std::char_traits<wchar_t> >::flush()
00000000005c0c80 0000000000000088 W std::basic_ostream<wchar_t, std::char_traits<wchar_t> >::sentry::sentry(std::basic_ostream<wchar_t, std::char_traits<wchar_t> >&)
00000000005c0c80 0000000000000088 W std::basic_ostream<wchar_t, std::char_traits<wchar_t> >::sentry::sentry(std::basic_ostream<wchar_t, std::char_traits<wchar_t> >&)
00000000005c0d20 0000000000000004 W std::basic_streambuf<char, std::char_traits<char> >::imbue(std::locale const&)
00000000005c0d40 0000000000000004 W std::basic_streambuf<char, std::char_traits<char> >::setbuf(char*, long)
00000000005c0d60 000000000000000c W std::basic_streambuf<char, std::char_traits<char> >::seekoff(long, std::_Ios_Seekdir, std::_Ios_Openmode)
00000000005c0d80 000000000000000c W std::basic_streambuf<char, std::char_traits<char> >::seekpos(std::fpos<_mbstate_t>, std::_Ios_Openmode)
00000000005c0da0 0000000000000008 W std::basic_streambuf<char, std::char_traits<char> >::sync()
00000000005c0dc0 0000000000000008 W std::basic_streambuf<char, std::char_traits<char> >::showmanyc()
00000000005c0de0 0000000000000008 W std::basic_streambuf<char, std::char_traits<char> >::underflow()
00000000005c0e00 0000000000000008 W std::basic_streambuf<char, std::char_traits<char> >::pbackfail(int)
00000000005c0e20 0000000000000008 W std::basic_streambuf<char, std::char_traits<char> >::overflow(int)
00000000005c0e40 0000000000000004 W std::basic_streambuf<wchar_t, std::char_traits<wchar_t> >::imbue(std::locale const&)
00000000005c0e60 0000000000000004 W std::basic_streambuf<wchar_t, std::char_traits<wchar_t> >::setbuf(wchar_t*, long)
00000000005c0e80 000000000000000c W std::basic_streambuf<wchar_t, std::char_traits<wchar_t> >::seekoff(long, std::_Ios_Seekdir, std::_Ios_Openmode)
00000000005c0ea0 000000000000000c W std::basic_streambuf<wchar_t, std::char_traits<wchar_t> >::seekpos(std::fpos<_mbstate_t>, std::_Ios_Openmode)
00000000005c0ec0 0000000000000008 W std::basic_streambuf<wchar_t, std::char_traits<wchar_t> >::sync()
00000000005c0ee0 0000000000000008 W std::basic_streambuf<wchar_t, std::char_traits<wchar_t> >::showmanyc()
00000000005c0f00 0000000000000008 W std::basic_streambuf<wchar_t, std::char_traits<wchar_t> >::underflow()
00000000005c0f20 0000000000000008 W std::basic_streambuf<wchar_t, std::char_traits<wchar_t> >::pbackfail(unsigned int)
00000000005c0f40 0000000000000008 W std::basic_streambuf<wchar_t, std::char_traits<wchar_t> >::overflow(unsigned int)
00000000005c0f60 0000000000000014 W std::basic_streambuf<char, std::char_traits<char> >::~basic_streambuf()
00000000005c0f60 0000000000000014 W std::basic_streambuf<char, std::char_traits<char> >::~basic_streambuf()
00000000005c0f80 0000000000000014 W std::basic_streambuf<wchar_t, std::char_traits<wchar_t> >::~basic_streambuf()
00000000005c0f80 0000000000000014 W std::basic_streambuf<wchar_t, std::char_traits<wchar_t> >::~basic_streambuf()
00000000005c0fa0 0000000000000034 W std::basic_streambuf<char, std::char_traits<char> >::~basic_streambuf()
00000000005c0fe0 0000000000000034 W std::basic_streambuf<wchar_t, std::char_traits<wchar_t> >::~basic_streambuf()
00000000005c1020 00000000000000c8 W std::basic_streambuf<wchar_t, std::char_traits<wchar_t> >::xsputn(wchar_t const*, long)
00000000005c1100 00000000000000c8 W std::basic_streambuf<char, std::char_traits<char> >::xsputn(char const*, long)
00000000005c11e0 0000000000000064 W std::basic_streambuf<wchar_t, std::char_traits<wchar_t> >::uflow()
00000000005c1260 0000000000000064 W std::basic_streambuf<char, std::char_traits<char> >::uflow()
00000000005c12e0 000000000000010c W std::basic_streambuf<char, std::char_traits<char> >::xsgetn(char*, long)
00000000005c1400 0000000000000114 W std::basic_streambuf<wchar_t, std::char_traits<wchar_t> >::xsgetn(wchar_t*, long)
00000000005c1520 000000000000005c W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned long&, unsigned long)
00000000005c1580 0000000000000018 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_dispose()
00000000005c15a0 0000000000000098 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct(unsigned long, char)
00000000005c1640 0000000000000124 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_mutate(unsigned long, unsigned long, char const*, unsigned long)
00000000005c1780 000000000000008c W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_erase(unsigned long, unsigned long)
00000000005c1820 00000000000000b0 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::reserve(unsigned long)
00000000005c18e0 0000000000000138 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_replace_aux(unsigned long, unsigned long, unsigned long, char)
00000000005c1a20 0000000000000038 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::resize(unsigned long, char)
00000000005c1a60 000000000000019c W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_replace(unsigned long, unsigned long, char const*, unsigned long)
00000000005c1c00 00000000000000bc W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_append(char const*, unsigned long)
00000000005c1cc0 0000000000000090 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::copy(char*, unsigned long, unsigned long) const
00000000005c1d60 000000000000018c W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::swap(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
00000000005c1f00 0000000000000044 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::find_first_not_of(char, unsigned long) const
00000000005c1f60 0000000000000010 T std::_V2::error_category::default_error_condition(int) const
00000000005c1f80 0000000000000050 T std::_V2::error_category::equivalent(int, std::error_condition const&) const
00000000005c1fe0 0000000000000024 T std::_V2::error_category::equivalent(std::error_code const&, int) const
00000000005c2020 0000000000000014 T std::system_error::~system_error()
00000000005c2020 0000000000000014 T std::system_error::~system_error()
00000000005c2040 0000000000000024 T std::system_error::~system_error()
00000000005c2080 0000000000000068 T std::_V2::error_category::_M_message[abi:cxx11](int) const
00000000005c2100 0000000000000004 T std::_V2::error_category::~error_category()
00000000005c2100 0000000000000004 T std::_V2::error_category::~error_category()
00000000005c2120 000000000000000c W std::moneypunct<wchar_t, false>::do_decimal_point() const
00000000005c2140 000000000000000c W std::moneypunct<wchar_t, false>::do_thousands_sep() const
00000000005c2160 000000000000000c W std::moneypunct<wchar_t, false>::do_frac_digits() const
00000000005c2180 000000000000000c W std::moneypunct<wchar_t, false>::do_pos_format() const
00000000005c21a0 000000000000000c W std::moneypunct<wchar_t, false>::do_neg_format() const
00000000005c21c0 000000000000000c W std::moneypunct<wchar_t, true>::do_decimal_point() const
00000000005c21e0 000000000000000c W std::moneypunct<wchar_t, true>::do_thousands_sep() const
00000000005c2200 000000000000000c W std::moneypunct<wchar_t, true>::do_frac_digits() const
00000000005c2220 000000000000000c W std::moneypunct<wchar_t, true>::do_pos_format() const
00000000005c2240 000000000000000c W std::moneypunct<wchar_t, true>::do_neg_format() const
00000000005c2260 000000000000000c W std::numpunct<wchar_t>::do_decimal_point() const
00000000005c2280 000000000000000c W std::numpunct<wchar_t>::do_thousands_sep() const
00000000005c22a0 0000000000000008 W std::time_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::do_date_order() const
00000000005c22c0 0000000000000008 W std::messages<wchar_t>::do_open(std::string const&, std::locale const&) const
00000000005c22e0 0000000000000004 W std::messages<wchar_t>::do_close(int) const
00000000005c2300 0000000000000024 W std::collate<wchar_t>::do_hash(wchar_t const*, wchar_t const*) const
00000000005c2340 0000000000000014 W std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::~num_get()
00000000005c2340 0000000000000014 W std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::~num_get()
00000000005c2360 0000000000000014 W std::num_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::~num_put()
00000000005c2360 0000000000000014 W std::num_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::~num_put()
00000000005c2380 0000000000000014 W std::money_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::~money_get()
00000000005c2380 0000000000000014 W std::money_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::~money_get()
00000000005c23a0 0000000000000014 W std::money_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::~money_put()
00000000005c23a0 0000000000000014 W std::money_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::~money_put()
00000000005c23c0 0000000000000014 W std::__timepunct_cache<wchar_t>::~__timepunct_cache()
00000000005c23c0 0000000000000014 W std::__timepunct_cache<wchar_t>::~__timepunct_cache()
00000000005c23e0 0000000000000014 W std::time_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::~time_put()
00000000005c23e0 0000000000000014 W std::time_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::~time_put()
00000000005c2400 0000000000000014 W std::time_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::~time_get()
00000000005c2400 0000000000000014 W std::time_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::~time_get()
00000000005c2420 0000000000000034 W std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::~num_get()
00000000005c2460 0000000000000034 W std::num_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::~num_put()
00000000005c24a0 0000000000000034 W std::money_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::~money_get()
00000000005c24e0 0000000000000034 W std::money_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::~money_put()
00000000005c2520 0000000000000024 W std::__timepunct_cache<wchar_t>::~__timepunct_cache()
00000000005c2560 0000000000000034 W std::time_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::~time_put()
00000000005c25a0 0000000000000034 W std::time_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::~time_get()
00000000005c25e0 0000000000000068 W std::__moneypunct_cache<wchar_t, false>::~__moneypunct_cache()
00000000005c25e0 0000000000000068 W std::__moneypunct_cache<wchar_t, false>::~__moneypunct_cache()
00000000005c2660 0000000000000024 W std::__moneypunct_cache<wchar_t, false>::~__moneypunct_cache()
00000000005c26a0 0000000000000068 W std::__moneypunct_cache<wchar_t, true>::~__moneypunct_cache()
00000000005c26a0 0000000000000068 W std::__moneypunct_cache<wchar_t, true>::~__moneypunct_cache()
00000000005c2720 0000000000000024 W std::__moneypunct_cache<wchar_t, true>::~__moneypunct_cache()
00000000005c2760 000000000000005c W std::__numpunct_cache<wchar_t>::~__numpunct_cache()
00000000005c2760 000000000000005c W std::__numpunct_cache<wchar_t>::~__numpunct_cache()
00000000005c27c0 0000000000000024 W std::__numpunct_cache<wchar_t>::~__numpunct_cache()
00000000005c2800 0000000000000034 W std::messages<wchar_t>::~messages()
00000000005c2800 0000000000000034 W std::messages<wchar_t>::~messages()
00000000005c2840 0000000000000024 W std::messages<wchar_t>::~messages()
00000000005c2880 0000000000000034 W std::collate<wchar_t>::~collate()
00000000005c2880 0000000000000034 W std::collate<wchar_t>::~collate()
00000000005c28c0 0000000000000068 W std::__timepunct<wchar_t>::~__timepunct()
00000000005c28c0 0000000000000068 W std::__timepunct<wchar_t>::~__timepunct()
00000000005c2940 0000000000000024 W std::__timepunct<wchar_t>::~__timepunct()
00000000005c2980 0000000000000028 t std::basic_streambuf<wchar_t, std::char_traits<wchar_t> >::sbumpc() [clone .isra.0]
00000000005c29c0 00000000000000b8 t char* std::string::_S_construct<char const*>(char const*, char const*, std::allocator<char> const&, std::forward_iterator_tag) [clone .isra.0]
00000000005c2a80 00000000000000d4 t wchar_t* std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_S_construct<wchar_t const*>(wchar_t const*, wchar_t const*, std::allocator<wchar_t> const&, std::forward_iterator_tag) [clone .isra.0]
00000000005c2b60 000000000000003c W std::collate<wchar_t>::~collate()
00000000005c2ba0 00000000000000d8 W std::moneypunct<wchar_t, false>::do_grouping() const
00000000005c2c80 00000000000000d8 W std::moneypunct<wchar_t, true>::do_grouping() const
00000000005c2d60 00000000000000d8 W std::numpunct<wchar_t>::do_grouping() const
00000000005c2e40 000000000000018c W std::collate<wchar_t>::do_compare(wchar_t const*, wchar_t const*, wchar_t const*, wchar_t const*) const
00000000005c2fe0 0000000000000140 W std::time_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::do_put(std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, wchar_t, tm const*, char, char) const
00000000005c3120 00000000000000ec W std::moneypunct<wchar_t, false>::do_curr_symbol() const
00000000005c3220 00000000000000ec W std::moneypunct<wchar_t, false>::do_positive_sign() const
00000000005c3320 00000000000000ec W std::moneypunct<wchar_t, false>::do_negative_sign() const
00000000005c3420 00000000000000ec W std::moneypunct<wchar_t, true>::do_curr_symbol() const
00000000005c3520 00000000000000ec W std::moneypunct<wchar_t, true>::do_positive_sign() const
00000000005c3620 00000000000000ec W std::moneypunct<wchar_t, true>::do_negative_sign() const
00000000005c3720 00000000000000ec W std::numpunct<wchar_t>::do_truename() const
00000000005c3820 00000000000000ec W std::numpunct<wchar_t>::do_falsename() const
00000000005c3920 0000000000000214 W std::collate<wchar_t>::do_transform(wchar_t const*, wchar_t const*) const
00000000005c3b40 000000000000058c W std::__moneypunct_cache<wchar_t, false>::_M_cache(std::locale const&)
00000000005c40e0 000000000000058c W std::__moneypunct_cache<wchar_t, true>::_M_cache(std::locale const&)
00000000005c4680 0000000000000468 W std::__numpunct_cache<wchar_t>::_M_cache(std::locale const&)
00000000005c4b00 00000000000000e4 t std::__use_cache<std::__numpunct_cache<wchar_t> >::operator()(std::locale const&) const [clone .isra.0]
00000000005c4c00 0000000000000068 W std::__timepunct<wchar_t>::__timepunct(std::__timepunct_cache<wchar_t>*, unsigned long)
00000000005c4c00 0000000000000068 W std::__timepunct<wchar_t>::__timepunct(std::__timepunct_cache<wchar_t>*, unsigned long)
00000000005c4c80 0000000000000288 W std::time_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_num(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, int&, int, int, unsigned long, std::ios_base&, std::_Ios_Iostate&) const
00000000005c4f20 0000000000000058 W std::messages<wchar_t>::messages(unsigned long)
00000000005c4f20 0000000000000058 W std::messages<wchar_t>::messages(unsigned long)
00000000005c4f80 0000000000000150 W wchar_t* std::__add_grouping<wchar_t>(wchar_t*, wchar_t, char const*, unsigned long, wchar_t const*, wchar_t const*)
00000000005c50e0 00000000000000c8 W std::num_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_group_float(char const*, unsigned long, wchar_t, wchar_t const*, wchar_t*, wchar_t*, int&) const
00000000005c51c0 0000000000000054 W std::num_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_group_int(char const*, unsigned long, wchar_t, std::ios_base&, wchar_t*, wchar_t*, int&) const
00000000005c5220 00000000000005d8 W std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::money_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_insert<true>(std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, wchar_t, std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> > const&) const
00000000005c5800 00000000000005d8 W std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::money_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_insert<false>(std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, wchar_t, std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> > const&) const
00000000005c5de0 000000000000021c W std::money_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::do_put(std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, bool, std::ios_base&, wchar_t, long double) const
00000000005c6000 0000000000000020 W std::money_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::do_put(std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, bool, std::ios_base&, wchar_t, std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> > const&) const
00000000005c6020 0000000000000200 W std::__pad<wchar_t, std::char_traits<wchar_t> >::_S_pad(std::ios_base&, wchar_t, wchar_t*, wchar_t const*, long, long)
00000000005c6220 000000000000003c W std::num_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_pad(wchar_t, long, std::ios_base&, wchar_t*, wchar_t const*, int&) const
00000000005c6260 0000000000000368 W std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_insert_float<double>(std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, wchar_t, char, double) const
00000000005c65e0 0000000000000008 W std::num_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::do_put(std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, wchar_t, double) const
00000000005c6600 0000000000000360 W std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_insert_float<long double>(std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, wchar_t, char, long double) const
00000000005c6960 0000000000000008 W std::num_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::do_put(std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, wchar_t, long double) const
00000000005c6980 00000000000000a8 W int std::__int_to_char<wchar_t, unsigned long>(wchar_t*, unsigned long, wchar_t const*, std::_Ios_Fmtflags, bool)
00000000005c6a40 0000000000000218 W std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_insert_int<long>(std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, wchar_t, long) const
00000000005c6c60 0000000000000004 W std::num_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::do_put(std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, wchar_t, long) const
00000000005c6c80 000000000000019c W std::num_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::do_put(std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, wchar_t, bool) const
00000000005c6e20 00000000000001cc W std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_insert_int<unsigned long>(std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, wchar_t, unsigned long) const
00000000005c7000 0000000000000004 W std::num_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::do_put(std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, wchar_t, unsigned long) const
00000000005c7020 0000000000000050 W std::num_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::do_put(std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, wchar_t, void const*) const
00000000005c7080 00000000000000a8 W int std::__int_to_char<wchar_t, unsigned long long>(wchar_t*, unsigned long long, wchar_t const*, std::_Ios_Fmtflags, bool)
00000000005c7140 0000000000000218 W std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_insert_int<long long>(std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, wchar_t, long long) const
00000000005c7360 0000000000000004 W std::num_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::do_put(std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, wchar_t, long long) const
00000000005c7380 00000000000001cc W std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_insert_int<unsigned long long>(std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, wchar_t, unsigned long long) const
00000000005c7560 0000000000000004 W std::num_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::do_put(std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, wchar_t, unsigned long long) const
00000000005c7580 0000000000000110 W std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >::equal(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > const&) const
00000000005c76a0 0000000000000b84 W std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_float(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const
00000000005c8240 00000000000001e0 W std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::do_get(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, float&) const
00000000005c8420 00000000000001e0 W std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::do_get(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, double&) const
00000000005c8600 00000000000001e0 W std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::do_get(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, long double&) const
00000000005c87e0 0000000000000958 W std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<long>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, long&) const
00000000005c9140 0000000000000440 W std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::do_get(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, bool&) const
00000000005c9580 0000000000000004 W std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::do_get(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, long&) const
00000000005c95a0 0000000000000ab0 W std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<unsigned short>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, unsigned short&) const
00000000005ca060 0000000000000004 W std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::do_get(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, unsigned short&) const
00000000005ca080 0000000000000954 W std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<unsigned int>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, unsigned int&) const
00000000005ca9e0 0000000000000004 W std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::do_get(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, unsigned int&) const
00000000005caa00 00000000000009a4 W std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<unsigned long>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, unsigned long&) const
00000000005cb3c0 0000000000000004 W std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::do_get(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, unsigned long&) const
00000000005cb3e0 000000000000005c W std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::do_get(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, void*&) const
00000000005cb440 0000000000000958 W std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<long long>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, long long&) const
00000000005cbda0 0000000000000004 W std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::do_get(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, long long&) const
00000000005cbdc0 00000000000009a4 W std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<unsigned long long>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, unsigned long long&) const
00000000005cc780 0000000000000004 W std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::do_get(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, unsigned long long&) const
00000000005cc7a0 00000000000002ec W std::time_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::do_get_year(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, tm*) const
00000000005ccaa0 00000000000009e8 W std::time_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_name(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, int&, wchar_t const**, unsigned long, std::ios_base&, std::_Ios_Iostate&) const
00000000005cd4a0 00000000000004b0 W std::time_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_wday_or_month(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, int&, wchar_t const**, unsigned long, std::ios_base&, std::_Ios_Iostate&) const
00000000005cd960 0000000000000220 W std::time_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::do_get_weekday(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, tm*) const
00000000005cdb80 0000000000000228 W std::time_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::do_get_monthname(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, tm*) const
00000000005cddc0 0000000000001370 W std::time_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_via_format(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, tm*, wchar_t const*, std::__time_get_state&) const
00000000005cddc0 0000000000001370 t std::time_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_via_format(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, tm*, wchar_t const*, std::__time_get_state&) const [clone .localalias]
00000000005cf140 00000000000001b8 W std::time_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::do_get_time(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, tm*) const
00000000005cf300 00000000000001b8 W std::time_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::do_get_date(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, tm*) const
00000000005cf4c0 0000000000001030 W std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::money_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract<true>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const
00000000005d0500 0000000000001030 W std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::money_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract<false>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const
00000000005d1540 00000000000000f0 W std::money_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::do_get(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, bool, std::ios_base&, std::_Ios_Iostate&, long double&) const
00000000005d1640 0000000000000198 W std::money_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::do_get(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, bool, std::ios_base&, std::_Ios_Iostate&, std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >&) const
00000000005d17e0 0000000000000068 W std::__cxx11::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_M_create(unsigned long&, unsigned long)
00000000005d1860 0000000000000018 W std::__cxx11::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_M_dispose()
00000000005d1880 0000000000000090 W std::__cxx11::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_M_construct(unsigned long, wchar_t)
00000000005d1920 0000000000000134 W std::__cxx11::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_M_mutate(unsigned long, unsigned long, wchar_t const*, unsigned long)
00000000005d1a60 00000000000000b8 W std::__cxx11::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::reserve(unsigned long)
00000000005d1b20 0000000000000144 W std::__cxx11::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_M_replace_aux(unsigned long, unsigned long, unsigned long, wchar_t)
00000000005d1c80 0000000000000038 W std::__cxx11::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::resize(unsigned long, wchar_t)
00000000005d1cc0 00000000000001a0 W std::__cxx11::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_M_replace(unsigned long, unsigned long, wchar_t const*, unsigned long)
00000000005d1e60 00000000000000c4 W std::__cxx11::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_M_append(wchar_t const*, unsigned long)
00000000005d1f40 0000000000000094 W std::__cxx11::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::copy(wchar_t*, unsigned long, unsigned long) const
00000000005d1fe0 000000000000000c T std::bad_alloc::what() const
00000000005d2000 0000000000000014 T std::bad_alloc::~bad_alloc()
00000000005d2000 0000000000000014 T std::bad_alloc::~bad_alloc()
00000000005d2020 0000000000000028 T std::bad_alloc::~bad_alloc()
00000000005d2060 000000000000000c T std::bad_array_new_length::what() const
00000000005d2080 0000000000000014 T std::bad_array_new_length::~bad_array_new_length()
00000000005d2080 0000000000000014 T std::bad_array_new_length::~bad_array_new_length()
00000000005d20a0 0000000000000028 T std::bad_array_new_length::~bad_array_new_length()
00000000005d20e0 000000000000000c T std::bad_cast::what() const
00000000005d2100 0000000000000014 T std::bad_cast::~bad_cast()
00000000005d2100 0000000000000014 T std::bad_cast::~bad_cast()
00000000005d2120 0000000000000028 T std::bad_cast::~bad_cast()
00000000005d2160 0000000000000068 T __cxxabiv1::__class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void**) const
00000000005d21e0 0000000000000010 T __cxxabiv1::__class_type_info::__do_find_public_src(long, void const*, __cxxabiv1::__class_type_info const*, void const*) const
00000000005d2200 0000000000000014 T __cxxabiv1::__class_type_info::~__class_type_info()
00000000005d2200 0000000000000014 T __cxxabiv1::__class_type_info::~__class_type_info()
00000000005d2220 0000000000000028 T __cxxabiv1::__class_type_info::~__class_type_info()
00000000005d2260 0000000000000078 T __cxxabiv1::__class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const
00000000005d22e0 00000000000000b8 T __cxxabiv1::__class_type_info::__do_catch(std::type_info const*, void**, unsigned int) const
00000000005d23a0 00000000000000ec T __cxxabiv1::__class_type_info::__do_dyncast(long, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const
00000000005d24a0 0000000000000004 T operator delete(void*)
00000000005d24c0 00000000000001a4 T __dynamic_cast
00000000005d2680 0000000000000110 t (anonymous namespace)::pool::free(void*) [clone .constprop.0]
00000000005d27a0 00000000000000cc t (anonymous namespace)::pool::allocate(unsigned long) [clone .constprop.0]
00000000005d2880 0000000000000058 T __cxa_allocate_exception
00000000005d28e0 000000000000002c T __cxa_free_exception
00000000005d2920 000000000000009c T __cxa_begin_catch
00000000005d29c0 0000000000000098 T __cxa_end_catch
00000000005d2a60 0000000000000020 T std::uncaught_exception()
00000000005d2a80 0000000000000004 T std::exception::~exception()
00000000005d2a80 0000000000000004 T std::exception::~exception()
00000000005d2aa0 0000000000000014 T std::bad_exception::~bad_exception()
00000000005d2aa0 0000000000000014 T std::bad_exception::~bad_exception()
00000000005d2ac0 000000000000000c T std::bad_exception::what() const
00000000005d2ae0 0000000000000028 T std::bad_exception::~bad_exception()
00000000005d2b20 0000000000000044 t eh_globals_dtor(void*)
00000000005d2b80 0000000000000038 T __cxa_get_globals_fast
00000000005d2bc0 0000000000000078 T __cxa_get_globals
00000000005d2c40 000000000000007c t get_adjusted_ptr(std::type_info const*, std::type_info const*, void**)
00000000005d2cc0 0000000000000138 t read_encoded_value_with_base(unsigned char, unsigned long, unsigned char const*, unsigned long*)
00000000005d2e00 000000000000005c t base_of_encoded_value(unsigned char, _Unwind_Context*)
00000000005d2e60 0000000000000110 t check_exception_spec(lsda_header_info*, std::type_info const*, void*, long)
00000000005d2f80 00000000000000e8 t parse_lsda_header(_Unwind_Context*, unsigned char const*, lsda_header_info*)
00000000005d3080 00000000000005f0 T __gxx_personality_v0
00000000005d3680 00000000000000ec T __cxa_call_unexpected
00000000005d3780 0000000000000018 T __cxxabiv1::__terminate(void (*)())
00000000005d37a0 0000000000000010 T std::get_terminate()
00000000005d37c0 0000000000000010 T __cxxabiv1::__unexpected(void (*)())
00000000005d37e0 0000000000000010 T std::get_unexpected()
00000000005d3800 0000000000000064 t __gxx_exception_cleanup(_Unwind_Reason_Code, _Unwind_Exception*)
00000000005d3880 0000000000000058 T __cxa_init_primary_exception
00000000005d38e0 0000000000000060 T __cxa_throw
00000000005d3940 0000000000000070 T __cxa_rethrow
00000000005d39c0 0000000000000010 T std::get_new_handler()
00000000005d39e0 0000000000000024 T operator new[](unsigned long, std::nothrow_t const&)
00000000005d3a20 0000000000000014 T __cxxabiv1::__vmi_class_type_info::~__vmi_class_type_info()
00000000005d3a20 0000000000000014 T __cxxabiv1::__vmi_class_type_info::~__vmi_class_type_info()
00000000005d3a40 0000000000000028 T __cxxabiv1::__vmi_class_type_info::~__vmi_class_type_info()
00000000005d3a80 0000000000000114 T __cxxabiv1::__vmi_class_type_info::__do_find_public_src(long, void const*, __cxxabiv1::__class_type_info const*, void const*) const
00000000005d3ba0 0000000000000618 T __cxxabiv1::__vmi_class_type_info::__do_dyncast(long, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const
00000000005d41c0 0000000000000224 T __cxxabiv1::__vmi_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const
00000000005d4400 0000000000000070 t std::(anonymous namespace)::__set_C_locale()
00000000005d4480 00000000000000d0 T void std::__convert_to_v<float>(char const*, float&, std::_Ios_Iostate&, int* const&)
00000000005d4560 00000000000000d8 T void std::__convert_to_v<double>(char const*, double&, std::_Ios_Iostate&, int* const&)
00000000005d4640 0000000000000108 T void std::__convert_to_v<long double>(char const*, long double&, std::_Ios_Iostate&, int* const&)
00000000005d4760 0000000000000030 T std::locale::facet::_S_create_c_locale(int*&, char const*, int*)
00000000005d47a0 0000000000000008 T std::locale::facet::_S_destroy_c_locale(int*&)
00000000005d47c0 0000000000000010 T std::codecvt<char, char, _mbstate_t>::do_in(_mbstate_t&, char const*, char const*, char const*&, char*, char*, char*&) const
00000000005d47c0 0000000000000010 T std::codecvt<char, char, _mbstate_t>::do_out(_mbstate_t&, char const*, char const*, char const*&, char*, char*, char*&) const
00000000005d47e0 000000000000000c T std::codecvt<char, char, _mbstate_t>::do_unshift(_mbstate_t&, char*, char*, char*&) const
00000000005d47e0 000000000000000c T std::codecvt<wchar_t, char, _mbstate_t>::do_unshift(_mbstate_t&, char*, char*, char*&) const
00000000005d4800 0000000000000008 T std::codecvt<char, char, _mbstate_t>::do_encoding() const
00000000005d4800 0000000000000008 T std::codecvt<char, char, _mbstate_t>::do_max_length() const
00000000005d4820 0000000000000008 T std::codecvt<char, char, _mbstate_t>::do_always_noconv() const
00000000005d4840 0000000000000010 T std::codecvt<char, char, _mbstate_t>::do_length(_mbstate_t&, char const*, char const*, unsigned long) const
00000000005d4860 0000000000000008 T std::codecvt<wchar_t, char, _mbstate_t>::do_always_noconv() const
00000000005d4880 0000000000000068 T std::codecvt<char, char, _mbstate_t>::~codecvt()
00000000005d4880 0000000000000068 T std::codecvt<char, char, _mbstate_t>::~codecvt()
00000000005d4900 000000000000003c T std::codecvt<char, char, _mbstate_t>::~codecvt()
00000000005d4940 0000000000000068 T std::codecvt<wchar_t, char, _mbstate_t>::~codecvt()
00000000005d4940 0000000000000068 T std::codecvt<wchar_t, char, _mbstate_t>::~codecvt()
00000000005d49c0 000000000000003c T std::codecvt<wchar_t, char, _mbstate_t>::~codecvt()
00000000005d4a00 0000000000000064 T std::codecvt<char, char, _mbstate_t>::codecvt(unsigned long)
00000000005d4a00 0000000000000064 T std::codecvt<char, char, _mbstate_t>::codecvt(unsigned long)
00000000005d4a80 0000000000000064 T std::codecvt<wchar_t, char, _mbstate_t>::codecvt(unsigned long)
00000000005d4a80 0000000000000064 T std::codecvt<wchar_t, char, _mbstate_t>::codecvt(unsigned long)
00000000005d4b00 00000000000001c0 T std::codecvt<wchar_t, char, _mbstate_t>::do_out(_mbstate_t&, wchar_t const*, wchar_t const*, wchar_t const*&, char*, char*, char*&) const
00000000005d4cc0 00000000000000f4 T std::codecvt<wchar_t, char, _mbstate_t>::do_in(_mbstate_t&, char const*, char const*, char const*&, wchar_t*, wchar_t*, wchar_t*&) const
00000000005d4dc0 000000000000002c T std::codecvt<wchar_t, char, _mbstate_t>::do_encoding() const
00000000005d4e00 0000000000000024 T std::codecvt<wchar_t, char, _mbstate_t>::do_max_length() const
00000000005d4e40 00000000000000a4 T std::codecvt<wchar_t, char, _mbstate_t>::do_length(_mbstate_t&, char const*, char const*, unsigned long) const
00000000005d4f00 0000000000000028 T std::__cxx11::collate<char>::_M_compare(char const*, char const*) const
00000000005d4f40 0000000000000010 T std::__cxx11::collate<char>::_M_transform(char*, char const*, unsigned long) const
00000000005d4f60 0000000000000028 T std::__cxx11::collate<wchar_t>::_M_compare(wchar_t const*, wchar_t const*) const
00000000005d4fa0 0000000000000010 T std::__cxx11::collate<wchar_t>::_M_transform(wchar_t*, wchar_t const*, unsigned long) const
00000000005d4fc0 0000000000000028 T std::collate<char>::_M_compare(char const*, char const*) const
00000000005d5000 0000000000000010 T std::collate<char>::_M_transform(char*, char const*, unsigned long) const
00000000005d5020 0000000000000028 T std::collate<wchar_t>::_M_compare(wchar_t const*, wchar_t const*) const
00000000005d5060 0000000000000010 T std::collate<wchar_t>::_M_transform(wchar_t*, wchar_t const*, unsigned long) const
00000000005d5080 0000000000000050 T std::ios_base::_M_init()
00000000005d50e0 00000000000000b0 t std::(anonymous namespace)::day_of_the_week(int, int, int)
00000000005d51a0 00000000000000dc T std::__num_base::_S_format_float(std::ios_base const&, char*, char)
00000000005d5280 00000000000000a0 T std::__verify_grouping_impl(char const*, unsigned long, char const*, unsigned long)
00000000005d5320 000000000000002c T std::__verify_grouping(char const*, unsigned long, std::string const&)
00000000005d5360 00000000000003dc T std::__time_get_state::_M_finalize_state(tm*)
00000000005d5740 00000000000000d0 T std::__cxx11::messages<char>::do_get(int, int, int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const
00000000005d5820 00000000000000c8 T std::__cxx11::messages<wchar_t>::do_get(int, int, int, std::__cxx11::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> > const&) const
00000000005d5900 0000000000000080 T std::messages<char>::do_get(int, int, int, std::string const&) const
00000000005d5980 0000000000000080 T std::messages<wchar_t>::do_get(int, int, int, std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> > const&) const
00000000005d5a00 0000000000000028 T std::__verify_grouping(char const*, unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
00000000005d5a40 00000000000000f0 T std::__cxx11::moneypunct<char, true>::_M_initialize_moneypunct(int*, char const*)
00000000005d5b40 00000000000000f0 T std::__cxx11::moneypunct<char, false>::_M_initialize_moneypunct(int*, char const*)
00000000005d5c40 000000000000005c T std::__cxx11::moneypunct<char, true>::~moneypunct()
00000000005d5c40 000000000000005c T std::__cxx11::moneypunct<char, true>::~moneypunct()
00000000005d5ca0 000000000000003c T std::__cxx11::moneypunct<char, true>::~moneypunct()
00000000005d5ce0 000000000000005c T std::__cxx11::moneypunct<char, false>::~moneypunct()
00000000005d5ce0 000000000000005c T std::__cxx11::moneypunct<char, false>::~moneypunct()
00000000005d5d40 000000000000003c T std::__cxx11::moneypunct<char, false>::~moneypunct()
00000000005d5d80 00000000000000ec T std::__cxx11::moneypunct<wchar_t, true>::_M_initialize_moneypunct(int*, char const*)
00000000005d5e80 00000000000000ec T std::__cxx11::moneypunct<wchar_t, false>::_M_initialize_moneypunct(int*, char const*)
00000000005d5f80 000000000000005c T std::__cxx11::moneypunct<wchar_t, true>::~moneypunct()
00000000005d5f80 000000000000005c T std::__cxx11::moneypunct<wchar_t, true>::~moneypunct()
00000000005d5fe0 000000000000003c T std::__cxx11::moneypunct<wchar_t, true>::~moneypunct()
00000000005d6020 000000000000005c T std::__cxx11::moneypunct<wchar_t, false>::~moneypunct()
00000000005d6020 000000000000005c T std::__cxx11::moneypunct<wchar_t, false>::~moneypunct()
00000000005d6080 000000000000003c T std::__cxx11::moneypunct<wchar_t, false>::~moneypunct()
00000000005d60c0 00000000000000f0 T std::moneypunct<char, true>::_M_initialize_moneypunct(int*, char const*)
00000000005d61c0 00000000000000f0 T std::moneypunct<char, false>::_M_initialize_moneypunct(int*, char const*)
00000000005d62c0 000000000000009c T std::moneypunct<char, true>::~moneypunct()
00000000005d62c0 000000000000009c T std::moneypunct<char, true>::~moneypunct()
00000000005d6360 000000000000003c T std::moneypunct<char, true>::~moneypunct()
00000000005d63a0 000000000000009c T std::moneypunct<char, false>::~moneypunct()
00000000005d63a0 000000000000009c T std::moneypunct<char, false>::~moneypunct()
00000000005d6440 000000000000003c T std::moneypunct<char, false>::~moneypunct()
00000000005d6480 00000000000000ec T std::moneypunct<wchar_t, true>::_M_initialize_moneypunct(int*, char const*)
00000000005d6580 00000000000000ec T std::moneypunct<wchar_t, false>::_M_initialize_moneypunct(int*, char const*)
00000000005d6680 000000000000009c T std::moneypunct<wchar_t, true>::~moneypunct()
00000000005d6680 000000000000009c T std::moneypunct<wchar_t, true>::~moneypunct()
00000000005d6720 000000000000003c T std::moneypunct<wchar_t, true>::~moneypunct()
00000000005d6760 000000000000009c T std::moneypunct<wchar_t, false>::~moneypunct()
00000000005d6760 000000000000009c T std::moneypunct<wchar_t, false>::~moneypunct()
00000000005d6800 000000000000003c T std::moneypunct<wchar_t, false>::~moneypunct()
00000000005d6840 0000000000000108 T std::__cxx11::numpunct<char>::_M_initialize_numpunct(int*)
00000000005d6960 000000000000005c T std::__cxx11::numpunct<char>::~numpunct()
00000000005d6960 000000000000005c T std::__cxx11::numpunct<char>::~numpunct()
00000000005d69c0 000000000000003c T std::__cxx11::numpunct<char>::~numpunct()
00000000005d6a00 00000000000000f0 T std::__cxx11::numpunct<wchar_t>::_M_initialize_numpunct(int*)
00000000005d6b00 000000000000005c T std::__cxx11::numpunct<wchar_t>::~numpunct()
00000000005d6b00 000000000000005c T std::__cxx11::numpunct<wchar_t>::~numpunct()
00000000005d6b60 000000000000003c T std::__cxx11::numpunct<wchar_t>::~numpunct()
00000000005d6ba0 0000000000000108 T std::numpunct<char>::_M_initialize_numpunct(int*)
00000000005d6cc0 000000000000009c T std::numpunct<char>::~numpunct()
00000000005d6cc0 000000000000009c T std::numpunct<char>::~numpunct()
00000000005d6d60 000000000000003c T std::numpunct<char>::~numpunct()
00000000005d6da0 00000000000000f0 T std::numpunct<wchar_t>::_M_initialize_numpunct(int*)
00000000005d6ea0 000000000000009c T std::numpunct<wchar_t>::~numpunct()
00000000005d6ea0 000000000000009c T std::numpunct<wchar_t>::~numpunct()
00000000005d6f40 000000000000003c T std::numpunct<wchar_t>::~numpunct()
00000000005d6f80 0000000000000008 T std::logic_error::what() const
00000000005d6f80 0000000000000008 T std::runtime_error::what() const
00000000005d6fa0 0000000000000070 T std::logic_error::~logic_error()
00000000005d6fa0 0000000000000070 T std::logic_error::~logic_error()
00000000005d7020 0000000000000024 T std::logic_error::~logic_error()
00000000005d7060 0000000000000014 T std::length_error::~length_error()
00000000005d7060 0000000000000014 T std::length_error::~length_error()
00000000005d7080 0000000000000024 T std::length_error::~length_error()
00000000005d70c0 0000000000000014 T std::out_of_range::~out_of_range()
00000000005d70c0 0000000000000014 T std::out_of_range::~out_of_range()
00000000005d70e0 0000000000000024 T std::out_of_range::~out_of_range()
00000000005d7120 0000000000000070 T std::runtime_error::~runtime_error()
00000000005d7120 0000000000000070 T std::runtime_error::~runtime_error()
00000000005d71a0 0000000000000024 T std::runtime_error::~runtime_error()
00000000005d71e0 00000000000000c4 T std::__timepunct<char>::_M_put(char*, unsigned long, char const*, tm const*) const
00000000005d72c0 0000000000000248 T std::__timepunct<char>::_M_initialize_timepunct(int*)
00000000005d7520 00000000000000c4 T std::__timepunct<wchar_t>::_M_put(wchar_t*, unsigned long, wchar_t const*, tm const*) const
00000000005d7600 0000000000000248 T std::__timepunct<wchar_t>::_M_initialize_timepunct(int*)
00000000005d7860 000000000000000c T std::__codecvt_utf8_base<char32_t>::do_unshift(_mbstate_t&, char*, char*, char*&) const
00000000005d7860 000000000000000c T std::__codecvt_utf8_base<char16_t>::do_unshift(_mbstate_t&, char*, char*, char*&) const
00000000005d7860 000000000000000c T std::__codecvt_utf8_base<wchar_t>::do_unshift(_mbstate_t&, char*, char*, char*&) const
00000000005d7860 000000000000000c T std::__codecvt_utf16_base<char32_t>::do_unshift(_mbstate_t&, char*, char*, char*&) const
00000000005d7860 000000000000000c T std::__codecvt_utf16_base<char16_t>::do_unshift(_mbstate_t&, char*, char*, char*&) const
00000000005d7860 000000000000000c T std::__codecvt_utf16_base<wchar_t>::do_unshift(_mbstate_t&, char*, char*, char*&) const
00000000005d7860 000000000000000c T std::__codecvt_utf8_utf16_base<char32_t>::do_unshift(_mbstate_t&, char*, char*, char*&) const
00000000005d7860 000000000000000c T std::__codecvt_utf8_utf16_base<char16_t>::do_unshift(_mbstate_t&, char*, char*, char*&) const
00000000005d7860 000000000000000c T std::__codecvt_utf8_utf16_base<wchar_t>::do_unshift(_mbstate_t&, char*, char*, char*&) const
00000000005d7860 000000000000000c T std::codecvt<char32_t, char, _mbstate_t>::do_unshift(_mbstate_t&, char*, char*, char*&) const
00000000005d7860 000000000000000c T std::codecvt<char16_t, char, _mbstate_t>::do_unshift(_mbstate_t&, char*, char*, char*&) const
00000000005d7880 0000000000000008 T std::__codecvt_utf8_base<char32_t>::do_encoding() const
00000000005d7880 0000000000000008 T std::__codecvt_utf8_base<char16_t>::do_encoding() const
00000000005d7880 0000000000000008 T std::__codecvt_utf8_base<wchar_t>::do_encoding() const
00000000005d7880 0000000000000008 T std::__codecvt_utf16_base<char32_t>::do_encoding() const
00000000005d7880 0000000000000008 T std::__codecvt_utf16_base<char16_t>::do_encoding() const
00000000005d7880 0000000000000008 T std::__codecvt_utf16_base<wchar_t>::do_encoding() const
00000000005d7880 0000000000000008 T std::__codecvt_utf8_utf16_base<char32_t>::do_encoding() const
00000000005d7880 0000000000000008 T std::__codecvt_utf8_utf16_base<char16_t>::do_encoding() const
00000000005d7880 0000000000000008 T std::__codecvt_utf8_utf16_base<wchar_t>::do_encoding() const
00000000005d7880 0000000000000008 T std::codecvt<char32_t, char, _mbstate_t>::do_encoding() const
00000000005d7880 0000000000000008 T std::codecvt<char32_t, char8_t, _mbstate_t>::do_encoding() const
00000000005d7880 0000000000000008 T std::codecvt<char16_t, char, _mbstate_t>::do_encoding() const
00000000005d7880 0000000000000008 T std::codecvt<char16_t, char8_t, _mbstate_t>::do_encoding() const
00000000005d78a0 0000000000000008 T std::__codecvt_utf8_base<char32_t>::do_always_noconv() const
00000000005d78a0 0000000000000008 T std::__codecvt_utf8_base<char16_t>::do_always_noconv() const
00000000005d78a0 0000000000000008 T std::__codecvt_utf8_base<wchar_t>::do_always_noconv() const
00000000005d78a0 0000000000000008 T std::__codecvt_utf16_base<char32_t>::do_always_noconv() const
00000000005d78a0 0000000000000008 T std::__codecvt_utf16_base<char16_t>::do_always_noconv() const
00000000005d78a0 0000000000000008 T std::__codecvt_utf16_base<wchar_t>::do_always_noconv() const
00000000005d78a0 0000000000000008 T std::__codecvt_utf8_utf16_base<char32_t>::do_always_noconv() const
00000000005d78a0 0000000000000008 T std::__codecvt_utf8_utf16_base<char16_t>::do_always_noconv() const
00000000005d78a0 0000000000000008 T std::__codecvt_utf8_utf16_base<wchar_t>::do_always_noconv() const
00000000005d78a0 0000000000000008 T std::codecvt<char32_t, char, _mbstate_t>::do_always_noconv() const
00000000005d78a0 0000000000000008 T std::codecvt<char32_t, char8_t, _mbstate_t>::do_always_noconv() const
00000000005d78a0 0000000000000008 T std::codecvt<char16_t, char, _mbstate_t>::do_always_noconv() const
00000000005d78a0 0000000000000008 T std::codecvt<char16_t, char8_t, _mbstate_t>::do_always_noconv() const
00000000005d78c0 0000000000000008 T std::codecvt<char32_t, char, _mbstate_t>::do_max_length() const
00000000005d78c0 0000000000000008 T std::codecvt<char32_t, char8_t, _mbstate_t>::do_max_length() const
00000000005d78c0 0000000000000008 T std::codecvt<char16_t, char, _mbstate_t>::do_max_length() const
00000000005d78c0 0000000000000008 T std::codecvt<char16_t, char8_t, _mbstate_t>::do_max_length() const
00000000005d78e0 000000000000000c T std::codecvt<char32_t, char8_t, _mbstate_t>::do_unshift(_mbstate_t&, char8_t*, char8_t*, char8_t*&) const
00000000005d78e0 000000000000000c T std::codecvt<char16_t, char8_t, _mbstate_t>::do_unshift(_mbstate_t&, char8_t*, char8_t*, char8_t*&) const
00000000005d7900 0000000000000140 t bool std::(anonymous namespace)::write_utf8_code_point<char>(std::(anonymous namespace)::range<char, true>&, char32_t)
00000000005d7a40 00000000000001a8 t char32_t std::(anonymous namespace)::read_utf8_code_point<char>(std::(anonymous namespace)::range<char const, true>&, unsigned long)
00000000005d7c00 000000000000011c t bool std::(anonymous namespace)::write_utf8_code_point<char8_t>(std::(anonymous namespace)::range<char8_t, true>&, char32_t)
00000000005d7d20 00000000000001a8 t char32_t std::(anonymous namespace)::read_utf8_code_point<char8_t>(std::(anonymous namespace)::range<char8_t const, true>&, unsigned long)
00000000005d7ee0 0000000000000014 T std::codecvt<char16_t, char, _mbstate_t>::~codecvt()
00000000005d7ee0 0000000000000014 T std::codecvt<char16_t, char, _mbstate_t>::~codecvt()
00000000005d7f00 0000000000000014 T std::codecvt<char32_t, char, _mbstate_t>::~codecvt()
00000000005d7f00 0000000000000014 T std::codecvt<char32_t, char, _mbstate_t>::~codecvt()
00000000005d7f20 0000000000000014 T std::codecvt<char16_t, char8_t, _mbstate_t>::~codecvt()
00000000005d7f20 0000000000000014 T std::codecvt<char16_t, char8_t, _mbstate_t>::~codecvt()
00000000005d7f40 0000000000000014 T std::codecvt<char32_t, char8_t, _mbstate_t>::~codecvt()
00000000005d7f40 0000000000000014 T std::codecvt<char32_t, char8_t, _mbstate_t>::~codecvt()
00000000005d7f60 0000000000000024 T std::codecvt<char16_t, char, _mbstate_t>::~codecvt()
00000000005d7fa0 0000000000000024 T std::codecvt<char32_t, char, _mbstate_t>::~codecvt()
00000000005d7fe0 0000000000000024 T std::codecvt<char16_t, char8_t, _mbstate_t>::~codecvt()
00000000005d8020 0000000000000024 T std::codecvt<char32_t, char8_t, _mbstate_t>::~codecvt()
00000000005d8060 000000000000005c T std::codecvt<char32_t, char8_t, _mbstate_t>::do_length(_mbstate_t&, char8_t const*, char8_t const*, unsigned long) const
00000000005d80c0 00000000000000a4 T std::codecvt<char32_t, char8_t, _mbstate_t>::do_in(_mbstate_t&, char8_t const*, char8_t const*, char8_t const*&, char32_t*, char32_t*, char32_t*&) const
00000000005d8180 0000000000000090 T std::codecvt<char32_t, char8_t, _mbstate_t>::do_out(_mbstate_t&, char32_t const*, char32_t const*, char32_t const*&, char8_t*, char8_t*, char8_t*&) const
00000000005d8220 00000000000000a8 T std::codecvt<char16_t, char8_t, _mbstate_t>::do_length(_mbstate_t&, char8_t const*, char8_t const*, unsigned long) const
00000000005d82e0 00000000000000cc T std::codecvt<char16_t, char8_t, _mbstate_t>::do_out(_mbstate_t&, char16_t const*, char16_t const*, char16_t const*&, char8_t*, char8_t*, char8_t*&) const
00000000005d83c0 0000000000000188 t std::codecvt_base::result std::(anonymous namespace)::utf16_out<char16_t, char>(std::(anonymous namespace)::range<char16_t const, true>&, std::(anonymous namespace)::range<char, true>&, unsigned long, std::codecvt_mode, std::(anonymous namespace)::surrogates)
00000000005d8560 0000000000000050 T std::codecvt<char16_t, char, _mbstate_t>::do_out(_mbstate_t&, char16_t const*, char16_t const*, char16_t const*&, char*, char*, char*&) const
00000000005d85c0 0000000000000130 t std::codecvt_base::result std::(anonymous namespace)::utf16_in<char, char16_t>(std::(anonymous namespace)::range<char const, true>&, std::(anonymous namespace)::range<char16_t, true>&, unsigned long, std::codecvt_mode)
00000000005d8700 0000000000000054 T std::codecvt<char16_t, char, _mbstate_t>::do_in(_mbstate_t&, char const*, char const*, char const*&, char16_t*, char16_t*, char16_t*&) const
00000000005d8760 000000000000005c T std::codecvt<char32_t, char, _mbstate_t>::do_length(_mbstate_t&, char const*, char const*, unsigned long) const
00000000005d87c0 00000000000000f8 T std::codecvt<char16_t, char8_t, _mbstate_t>::do_in(_mbstate_t&, char8_t const*, char8_t const*, char8_t const*&, char16_t*, char16_t*, char16_t*&) const
00000000005d88c0 00000000000000a4 T std::codecvt<char32_t, char, _mbstate_t>::do_in(_mbstate_t&, char const*, char const*, char const*&, char32_t*, char32_t*, char32_t*&) const
00000000005d8980 0000000000000090 T std::codecvt<char32_t, char, _mbstate_t>::do_out(_mbstate_t&, char32_t const*, char32_t const*, char32_t const*&, char*, char*, char*&) const
00000000005d8a20 00000000000000a8 T std::codecvt<char16_t, char, _mbstate_t>::do_length(_mbstate_t&, char const*, char const*, unsigned long) const
00000000005d8ae0 00000000000006cc T std::locale::_Impl::_M_init_extra(std::locale::facet**)
00000000005d91c0 00000000000000f0 T std::logic_error::logic_error(char const*)
00000000005d91c0 00000000000000f0 T std::logic_error::logic_error(char const*)
00000000005d92c0 0000000000000030 T std::length_error::length_error(char const*)
00000000005d92c0 0000000000000030 T std::length_error::length_error(char const*)
00000000005d9300 0000000000000030 T std::out_of_range::out_of_range(char const*)
00000000005d9300 0000000000000030 T std::out_of_range::out_of_range(char const*)
00000000005d9340 00000000000000f0 T std::runtime_error::runtime_error(char const*)
00000000005d9340 00000000000000f0 T std::runtime_error::runtime_error(char const*)
00000000005d9440 00000000000000c8 T std::__cow_string::__cow_string(char const*, unsigned long)
00000000005d9440 00000000000000c8 T std::__cow_string::__cow_string(char const*, unsigned long)
00000000005d9520 0000000000000014 T std::ios_base::failure[abi:cxx11]::~failure()
00000000005d9520 0000000000000014 T std::ios_base::failure[abi:cxx11]::~failure()
00000000005d9540 0000000000000024 T std::ios_base::failure[abi:cxx11]::~failure()
00000000005d9580 0000000000000004 T std::ios_base::failure[abi:cxx11]::what() const
00000000005d95a0 0000000000000014 T std::__iosfail_type_info::~__iosfail_type_info()
00000000005d95a0 0000000000000014 T std::__iosfail_type_info::~__iosfail_type_info()
00000000005d95c0 0000000000000024 T std::__iosfail_type_info::~__iosfail_type_info()
00000000005d9600 0000000000000060 T std::__iosfail_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void**) const
00000000005d9660 0000000000000034 W std::__ios_failure::~__ios_failure()
00000000005d9660 0000000000000034 W std::__ios_failure::~__ios_failure()
00000000005d96a0 000000000000003c W std::__ios_failure::~__ios_failure()
00000000005d96e0 00000000000001d4 T std::ios_base::failure[abi:cxx11]::failure(char const*, std::error_code const&)
00000000005d96e0 00000000000001d4 T std::ios_base::failure[abi:cxx11]::failure(char const*, std::error_code const&)
00000000005d98c0 000000000000000c W std::__cxx11::moneypunct<char, false>::do_decimal_point() const
00000000005d98e0 000000000000000c W std::__cxx11::moneypunct<char, false>::do_thousands_sep() const
00000000005d9900 000000000000000c W std::__cxx11::moneypunct<char, false>::do_frac_digits() const
00000000005d9920 000000000000000c W std::__cxx11::moneypunct<char, false>::do_pos_format() const
00000000005d9940 000000000000000c W std::__cxx11::moneypunct<char, false>::do_neg_format() const
00000000005d9960 000000000000000c W std::__cxx11::moneypunct<char, true>::do_decimal_point() const
00000000005d9980 000000000000000c W std::__cxx11::moneypunct<char, true>::do_thousands_sep() const
00000000005d99a0 000000000000000c W std::__cxx11::moneypunct<char, true>::do_frac_digits() const
00000000005d99c0 000000000000000c W std::__cxx11::moneypunct<char, true>::do_pos_format() const
00000000005d99e0 000000000000000c W std::__cxx11::moneypunct<char, true>::do_neg_format() const
00000000005d9a00 000000000000000c W std::__cxx11::numpunct<char>::do_decimal_point() const
00000000005d9a20 000000000000000c W std::__cxx11::numpunct<char>::do_thousands_sep() const
00000000005d9a40 0000000000000008 W std::__cxx11::time_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::do_date_order() const
00000000005d9a60 0000000000000008 W std::__cxx11::messages<char>::do_open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::locale const&) const
00000000005d9a80 0000000000000004 W std::__cxx11::messages<char>::do_close(int) const
00000000005d9aa0 0000000000000024 W std::__cxx11::collate<char>::do_hash(char const*, char const*) const
00000000005d9ae0 0000000000000014 W std::__cxx11::money_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::~money_get()
00000000005d9ae0 0000000000000014 W std::__cxx11::money_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::~money_get()
00000000005d9b00 0000000000000034 W std::__cxx11::money_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::~money_get()
00000000005d9b40 0000000000000014 W std::__cxx11::money_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::~money_put()
00000000005d9b40 0000000000000014 W std::__cxx11::money_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::~money_put()
00000000005d9b60 0000000000000034 W std::__cxx11::money_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::~money_put()
00000000005d9ba0 0000000000000014 W std::__cxx11::time_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::~time_get()
00000000005d9ba0 0000000000000014 W std::__cxx11::time_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::~time_get()
00000000005d9bc0 0000000000000034 W std::__cxx11::time_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::~time_get()
00000000005d9c00 0000000000000034 W std::__cxx11::messages<char>::~messages()
00000000005d9c00 0000000000000034 W std::__cxx11::messages<char>::~messages()
00000000005d9c40 0000000000000024 W std::__cxx11::messages<char>::~messages()
00000000005d9c80 0000000000000034 W std::__cxx11::collate<char>::~collate()
00000000005d9c80 0000000000000034 W std::__cxx11::collate<char>::~collate()
00000000005d9cc0 00000000000000bc t void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag) [clone .isra.0]
00000000005d9d80 000000000000003c W std::__cxx11::collate<char>::~collate()
00000000005d9dc0 0000000000000058 W std::__cxx11::moneypunct<char, false>::do_grouping() const
00000000005d9e20 0000000000000058 W std::__cxx11::moneypunct<char, false>::do_curr_symbol() const
00000000005d9e80 0000000000000058 W std::__cxx11::moneypunct<char, false>::do_positive_sign() const
00000000005d9ee0 0000000000000058 W std::__cxx11::moneypunct<char, false>::do_negative_sign() const
00000000005d9f40 0000000000000058 W std::__cxx11::moneypunct<char, true>::do_grouping() const
00000000005d9fa0 0000000000000058 W std::__cxx11::moneypunct<char, true>::do_curr_symbol() const
00000000005da000 0000000000000058 W std::__cxx11::moneypunct<char, true>::do_positive_sign() const
00000000005da060 0000000000000058 W std::__cxx11::moneypunct<char, true>::do_negative_sign() const
00000000005da0c0 0000000000000058 W std::__cxx11::numpunct<char>::do_grouping() const
00000000005da120 0000000000000058 W std::__cxx11::numpunct<char>::do_truename() const
00000000005da180 0000000000000058 W std::__cxx11::numpunct<char>::do_falsename() const
00000000005da1e0 000000000000011c W std::__cxx11::collate<char>::do_compare(char const*, char const*, char const*, char const*) const
00000000005da300 00000000000001ec W std::__cxx11::collate<char>::do_transform(char const*, char const*) const
00000000005da500 000000000000121c W std::istreambuf_iterator<char, std::char_traits<char> > std::__cxx11::money_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract<true>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&) const
00000000005db720 000000000000121c W std::istreambuf_iterator<char, std::char_traits<char> > std::__cxx11::money_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract<false>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&) const
00000000005dc940 00000000000000c4 W std::__cxx11::money_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::do_get(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, bool, std::ios_base&, std::_Ios_Iostate&, long double&) const
00000000005dca20 00000000000001b4 W std::__cxx11::money_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::do_get(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, bool, std::ios_base&, std::_Ios_Iostate&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&) const
00000000005dcbe0 0000000000000694 W std::ostreambuf_iterator<char, std::char_traits<char> > std::__cxx11::money_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::_M_insert<true>(std::ostreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, char, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const
00000000005dd280 0000000000000694 W std::ostreambuf_iterator<char, std::char_traits<char> > std::__cxx11::money_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::_M_insert<false>(std::ostreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, char, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const
00000000005dd920 0000000000000224 W std::__cxx11::money_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::do_put(std::ostreambuf_iterator<char, std::char_traits<char> >, bool, std::ios_base&, char, long double) const
00000000005ddb60 0000000000000020 W std::__cxx11::money_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::do_put(std::ostreambuf_iterator<char, std::char_traits<char> >, bool, std::ios_base&, char, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const
00000000005ddb80 00000000000002c4 W std::__cxx11::time_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_num(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, int&, int, int, unsigned long, std::ios_base&, std::_Ios_Iostate&) const
00000000005dde60 00000000000008ac W std::__cxx11::time_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::do_get_year(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, tm*) const
00000000005de720 0000000000000bf4 W std::__cxx11::time_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_name(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, int&, char const**, unsigned long, std::ios_base&, std::_Ios_Iostate&) const
00000000005df320 00000000000005a8 W std::__cxx11::time_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_wday_or_month(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, int&, char const**, unsigned long, std::ios_base&, std::_Ios_Iostate&) const
00000000005df8e0 0000000000000208 W std::__cxx11::time_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::do_get_weekday(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, tm*) const
00000000005dfb00 0000000000000210 W std::__cxx11::time_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::do_get_monthname(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, tm*) const
00000000005dfd20 0000000000000058 W std::__cxx11::messages<char>::messages(unsigned long)
00000000005dfd20 0000000000000058 W std::__cxx11::messages<char>::messages(unsigned long)
00000000005dfd80 0000000000001e04 W std::__cxx11::time_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_via_format(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, tm*, char const*, std::__time_get_state&) const
00000000005dfd80 0000000000001e04 t std::__cxx11::time_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_via_format(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, tm*, char const*, std::__time_get_state&) const [clone .localalias]
00000000005e1ba0 000000000000019c W std::__cxx11::time_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::do_get_time(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, tm*) const
00000000005e1d40 000000000000019c W std::__cxx11::time_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::do_get_date(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, tm*) const
00000000005e1ee0 00000000000001e0 W std::__cxx11::time_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::do_get(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, tm*, char, char) const
00000000005e20c0 0000000000000008 T std::__cow_string::__cow_string(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
00000000005e20c0 0000000000000008 T std::__cow_string::__cow_string(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
00000000005e20e0 0000000000000048 T std::runtime_error::runtime_error(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
00000000005e20e0 0000000000000048 T std::runtime_error::runtime_error(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
00000000005e2140 000000000000000c t (anonymous namespace)::io_error_category::name() const
00000000005e2160 0000000000000010 t (anonymous namespace)::io_error_category::~io_error_category()
00000000005e2160 0000000000000010 t (anonymous namespace)::io_error_category::~io_error_category()
00000000005e2180 0000000000000030 t (anonymous namespace)::io_error_category::~io_error_category()
00000000005e21c0 0000000000000094 t (anonymous namespace)::io_error_category::message[abi:cxx11](int) const
00000000005e2260 000000000000000c T std::iostream_category()
00000000005e2280 0000000000000008 T std::ios_base::failure::what() const
00000000005e22a0 0000000000000070 T std::ios_base::failure::~failure()
00000000005e22a0 0000000000000070 T std::ios_base::failure::~failure()
00000000005e22a0 0000000000000070 t std::ios_base::failure::~failure() [clone .localalias]
00000000005e2320 0000000000000024 T std::ios_base::failure::~failure()
00000000005e2360 00000000000000b0 T std::ios_base::failure::failure(std::string const&)
00000000005e2360 00000000000000b0 T std::ios_base::failure::failure(std::string const&)
00000000005e2420 000000000000011c T std::__construct_ios_failure(void*, char const*)
00000000005e2540 0000000000000090 T std::__destroy_ios_failure(void*)
00000000005e25e0 0000000000000050 T std::__is_ios_failure_handler(__cxxabiv1::__class_type_info const*)
00000000005e2630 0000000000000138 t _get_next_page
00000000005e2770 00000000000000f0 t _initial_pcmoffset
00000000005e2860 0000000000000094 t _seek_helper
00000000005e2900 0000000000000094 t _make_decode_ready
00000000005e29a0 0000000000000170 t _get_prev_page_serial
00000000005e2b10 0000000000000330 t _fetch_headers
00000000005e2e40 0000000000000490 t _bisect_forward_serialno
00000000005e32d0 00000000000002f8 t _fetch_and_process_packet.constprop.11
00000000005e35d0 0000000000000100 T ov_clear
00000000005e36d0 0000000000000220 t _ov_open1
00000000005e38f0 00000000000000a8 T ov_pcm_total
00000000005e39a0 00000000000000c8 T ov_time_total
00000000005e3a70 0000000000000414 T ov_raw_seek
00000000005e3e90 0000000000000140 t _open_seekable2
00000000005e3fd0 0000000000000090 T ov_open_callbacks
00000000005e4060 0000000000000084 T rescale64
00000000005e40f0 000000000000068c T ov_pcm_seek_page
00000000005e4780 000000000000034c T ov_pcm_seek
00000000005e4ad0 0000000000000128 T ov_time_seek
00000000005e4c00 000000000000001c T ov_pcm_tell
00000000005e4c20 0000000000000060 T ov_info
00000000005e4c80 000000000000005c T ov_comment
00000000005e4ce0 00000000000001bc T ov_read
00000000005e4ea0 0000000000000034 T vorbis_block_init
00000000005e4ee0 000000000000008c T _vorbis_block_alloc
00000000005e4f70 0000000000000094 T _vorbis_block_ripcord
00000000005e5010 0000000000000058 T vorbis_block_clear
00000000005e5070 0000000000000054 T vorbis_synthesis_restart
00000000005e50d0 000000000000012c T vorbis_dsp_clear
00000000005e5200 0000000000000290 T vorbis_synthesis_init
00000000005e5490 000000000000047c T vorbis_synthesis_blockin
00000000005e5910 0000000000000070 T vorbis_synthesis_pcmout
00000000005e5980 0000000000000030 T vorbis_synthesis_read
00000000005e59b0 00000000000000b4 T _vorbis_window
00000000005e5a70 000000000000015c T _vorbis_apply_window
00000000005e5bd0 0000000000000210 t _vorbis_synthesis1
00000000005e5de0 0000000000000008 T vorbis_synthesis
00000000005e5df0 0000000000000008 T vorbis_synthesis_trackonly
00000000005e5e00 0000000000000098 T vorbis_packet_blocksize
00000000005e5ea0 000000000000000c T vorbis_comment_init
00000000005e5eb0 0000000000000088 T vorbis_comment_clear
00000000005e5f40 0000000000000018 T vorbis_info_blocksize
00000000005e5f60 0000000000000038 T vorbis_info_init
00000000005e5fa0 00000000000001b0 T vorbis_info_clear
00000000005e6150 00000000000000cc T vorbis_synthesis_idheader
00000000005e6220 0000000000000738 T vorbis_synthesis_headerin
00000000005e6960 0000000000000044 t bitreverse
00000000005e69b0 0000000000000410 T vorbis_staticbook_unpack
00000000005e6dc0 000000000000016c T vorbis_book_decode
00000000005e6f30 0000000000000418 T vorbis_book_decodevs_add
00000000005e7350 0000000000000388 T vorbis_book_decodev_add
00000000005e76e0 0000000000000394 T vorbis_book_decodev_set
00000000005e7a80 0000000000000390 T vorbis_book_decodevv_add
00000000005e7e10 0000000000000044 t bitreverse
00000000005e7e60 0000000000000020 t sort32a
00000000005e7e80 000000000000001c T _ilog
00000000005e7ea0 000000000000023c T _make_words
00000000005e80e0 00000000000000b8 T _book_maptype1_quantvals
00000000005e81a0 00000000000006e8 T _book_unquantize
00000000005e8890 0000000000000038 T vorbis_staticbook_destroy
00000000005e88d0 0000000000000070 T vorbis_book_clear
00000000005e8940 0000000000000468 T vorbis_book_init_decode
00000000005e8db0 0000000000000018 t icomp
00000000005e8dd0 00000000000001e0 t floor1_inverse2
00000000005e8fb0 000000000000031c t floor1_inverse1
00000000005e92d0 000000000000000c t floor1_free_look
00000000005e92e0 000000000000000c t floor1_free_info
00000000005e92f0 0000000000000230 t floor1_look
00000000005e9520 0000000000000380 t floor1_unpack
00000000005e98a0 000000000000019c t floor0_inverse1
00000000005e9a40 000000000000000c t floor0_free_info
00000000005e9a50 0000000000000148 t floor0_unpack
00000000005e9ba0 0000000000000040 t floor0_free_look
00000000005e9be0 0000000000000238 t floor0_look
00000000005e9e20 00000000000004dc T vorbis_lsp_to_curve
00000000005ea300 0000000000000074 t floor0_inverse2
00000000005ea380 000000000000000c T res0_free_info
00000000005ea390 0000000000000244 T res0_unpack
00000000005ea5e0 0000000000000274 T res0_look
00000000005ea860 000000000000034c t _01inverse
00000000005eabb0 000000000000004c T res0_inverse
00000000005eac00 000000000000004c T res1_inverse
00000000005eac50 000000000000025c T res2_inverse
00000000005eaeb0 0000000000000098 T res0_free_look
00000000005eaf50 000000000000042c t mapping0_inverse
00000000005eb380 000000000000000c t mapping0_free_info
00000000005eb390 0000000000000180 t mapping0_look
00000000005eb510 0000000000000264 t mapping0_unpack
00000000005eb780 00000000000000a0 t mapping0_free_look
00000000005eb820 00000000000019ac T mdct_backward
00000000005ed1d0 00000000000000f4 t _os_update_crc
00000000005ed2d0 0000000000000114 t _packetout
00000000005ed3f0 000000000000000c T ogg_page_version
00000000005ed400 0000000000000010 T ogg_page_continued
00000000005ed410 0000000000000010 T ogg_page_bos
00000000005ed420 0000000000000010 T ogg_page_eos
00000000005ed430 000000000000000c T ogg_page_granulepos
00000000005ed440 000000000000000c T ogg_page_serialno
00000000005ed450 000000000000000c T ogg_page_pageno
00000000005ed460 0000000000000040 T ogg_page_packets
00000000005ed4a0 000000000000001c T ogg_stream_check
00000000005ed4c0 0000000000000060 T ogg_stream_clear
00000000005ed520 00000000000000a4 T ogg_stream_init
00000000005ed5d0 0000000000000090 t _os_body_expand
00000000005ed660 00000000000000a4 t _os_lacing_expand
00000000005ed710 0000000000000084 T ogg_page_checksum_set
00000000005ed7a0 0000000000000014 T ogg_sync_init
00000000005ed7c0 0000000000000040 T ogg_sync_clear
00000000005ed800 000000000000000c T ogg_sync_check
00000000005ed810 00000000000000f0 T ogg_sync_buffer
00000000005ed900 000000000000004c T ogg_sync_wrote
00000000005ed950 0000000000000190 T ogg_sync_pageseek
00000000005edae0 000000000000039c T ogg_stream_pagein
00000000005ede80 0000000000000034 T ogg_sync_reset
00000000005edec0 000000000000004c T ogg_stream_reset
00000000005edf10 0000000000000050 T ogg_stream_reset_serialno
00000000005edf60 0000000000000044 T ogg_stream_packetout
00000000005edfb0 0000000000000044 T ogg_stream_packetpeek
00000000005ee000 0000000000000014 T oggpack_readinit
00000000005ee020 00000000000000f8 T oggpack_look
00000000005ee120 000000000000006c T oggpack_adv
00000000005ee190 000000000000012c T oggpack_read
00000000005ee2c0 0000000000000020 T oggpack_bytes
00000000005ee2e0 0000000000000190 t conv_s16_to_s32
00000000005ee470 0000000000000280 t cap_fit
00000000005ee6f0 0000000000000184 t enc_chan_fit
00000000005ee880 0000000000000020 T mpg123_rates
00000000005ee8a0 0000000000000050 T mpg123_encsize
00000000005ee8f0 0000000000000c30 T INT123_frame_output_format
00000000005ef520 000000000000007c T mpg123_fmt_none
00000000005ef5a0 000000000000003c T mpg123_format_none
00000000005ef5e0 00000000000002c8 T mpg123_fmt_all
00000000005ef8b0 000000000000033c T mpg123_fmt2
00000000005efbf0 0000000000000010 T mpg123_fmt
00000000005efc00 000000000000003c T mpg123_format
00000000005efc40 0000000000000010 T INT123_invalidate_format
00000000005efc50 0000000000000018 T INT123_decoder_synth_bytes
00000000005efc70 0000000000000018 T INT123_samples_to_bytes
00000000005efc90 0000000000000018 T INT123_bytes_to_samples
00000000005efcb0 0000000000000044 T INT123_outblock_bytes
00000000005efd00 0000000000000700 T swap_endian
00000000005f0400 0000000000001620 T INT123_postprocess_buffer
00000000005f1a20 00000000000000e4 t decode_the_frame
00000000005f1b10 0000000000000154 t frame_buffercheck.part.0.constprop.0
00000000005f1c70 0000000000000008 T mpg123_init
00000000005f1c80 0000000000000004 T mpg123_exit
00000000005f1c90 0000000000000090 T mpg123_parnew
00000000005f1d20 0000000000000010 T mpg123_new
00000000005f1d30 00000000000001e4 T INT123_decode_update
00000000005f1f20 00000000000001b8 t get_next_frame
00000000005f20e0 0000000000000100 t do_the_seek
00000000005f21e0 0000000000000064 T mpg123_feed
00000000005f2250 000000000000019c T mpg123_decode
00000000005f23f0 0000000000000018 T mpg123_read
00000000005f2410 000000000000008c T mpg123_getformat2
00000000005f24a0 0000000000000008 T mpg123_getformat
00000000005f24b0 00000000000000d8 T mpg123_tell
00000000005f2590 00000000000001e0 T mpg123_scan
00000000005f2770 00000000000001f4 T mpg123_seek
00000000005f2970 0000000000000064 T mpg123_close
00000000005f29e0 0000000000000058 T mpg123_open_handle
00000000005f2a40 000000000000004c T mpg123_replace_reader_handle
00000000005f2a90 0000000000000028 T mpg123_delete
00000000005f2ac0 0000000000000080 T mpg123_plain_strerror
00000000005f2b40 0000000000000018 T mpg123_errcode
00000000005f2b60 0000000000000010 T mpg123_strerror
00000000005f2b70 0000000000000014 T INT123_fi_init
00000000005f2b90 0000000000000028 T INT123_fi_exit
00000000005f2bc0 00000000000001a0 T INT123_fi_resize
00000000005f2d60 0000000000000194 T INT123_fi_add
00000000005f2f00 0000000000000010 T INT123_fi_reset
00000000005f2f10 0000000000000008 T INT123_init_icy
00000000005f2f20 0000000000000020 T INT123_clear_icy
00000000005f2f40 0000000000000018 T INT123_reset_icy
00000000005f2f60 00000000000001c4 T INT123_ntom_val
00000000005f3130 000000000000015c T INT123_synth_ntom_set_step
00000000005f3290 000000000000001c T INT123_ntom_set_ntom
00000000005f32b0 000000000000002c T INT123_ntom_frame_outsamples
00000000005f32e0 0000000000000170 T INT123_ntom_frmouts
00000000005f3450 0000000000000130 T INT123_ntom_ins2outs
00000000005f3580 000000000000012c T INT123_ntom_frameoff
00000000005f36b0 000000000000000c T mpg123_init_string
00000000005f36c0 0000000000000028 T mpg123_free_string
00000000005f36f0 0000000000000094 T mpg123_resize_string
00000000005f3790 000000000000002c T mpg123_grow_string
00000000005f37c0 000000000000006c T mpg123_move_string
00000000005f3830 0000000000000050 T mpg123_same_string
00000000005f3880 0000000000000010 T INT123_safe_realloc
00000000005f3890 000000000000073c t decode_header
00000000005f3fd0 0000000000000094 t forget_head_shift
00000000005f4070 00000000000000a4 t getbits.constprop.0
00000000005f4120 0000000000000018 T INT123_frame_freq
00000000005f4140 00000000000000bc T INT123_set_pointer
00000000005f4200 0000000000000024 T INT123_compute_bpf
00000000005f4230 0000000000001a54 T INT123_read_frame
00000000005f5c90 00000000000000ec t frame_fuzzy_find.constprop.0
00000000005f5d80 000000000000006c T mpg123_reset_eq
00000000005f5df0 00000000000000e0 T INT123_frame_outbuffer
00000000005f5ed0 00000000000000a8 T INT123_frame_index_setup
00000000005f5f80 000000000000015c T INT123_frame_buffers
00000000005f60e0 0000000000000084 T INT123_frame_buffers_reset
00000000005f6170 0000000000000068 T INT123_frame_fill_toc
00000000005f61e0 00000000000000ac T INT123_frame_exit
00000000005f6290 00000000000000cc T INT123_frame_index_find
00000000005f6360 000000000000006c T INT123_frame_ins2outs
00000000005f63d0 0000000000000080 T INT123_frame_outs
00000000005f6450 0000000000000078 T INT123_frame_expect_outsamples
00000000005f64d0 0000000000000080 T INT123_frame_offset
00000000005f6550 0000000000000060 T INT123_frame_gapless_init
00000000005f65b0 0000000000000154 t frame_fixed_reset
00000000005f6710 00000000000001a4 T INT123_frame_init_par
00000000005f68c0 000000000000003c T INT123_frame_reset
00000000005f6900 0000000000000058 T INT123_frame_gapless_realinit
00000000005f6960 00000000000000cc T INT123_frame_gapless_update
00000000005f6a30 0000000000000118 T INT123_frame_set_frameseek
00000000005f6b50 0000000000000020 T INT123_frame_skip
00000000005f6b70 0000000000000088 T INT123_frame_set_seek
00000000005f6c00 0000000000000150 T INT123_do_rva
00000000005f6d50 0000000000000180 t next_text
00000000005f6ed0 0000000000000250 t promote_framename
00000000005f7120 00000000000006fc t convert_utf16bom
00000000005f7820 0000000000000328 t convert_latin1
00000000005f7b50 0000000000000064 t convert_utf8
00000000005f7bc0 0000000000000364 t add_id3_text
00000000005f7f30 0000000000000044 T INT123_init_id3
00000000005f7f80 00000000000002e8 T INT123_exit_id3
00000000005f8270 0000000000000018 T INT123_reset_id3
00000000005f8290 0000000000000200 T INT123_id3_to_utf8
00000000005f8490 0000000000000134 t store_id3_text.part.0
00000000005f85d0 0000000000000120 T store_id3v2
00000000005f86f0 00000000000021d0 T INT123_parse_new_id3
00000000005fa8c0 0000000000000050 t synth_stereo_wrap
00000000005fa910 0000000000000008 T INT123_defdec
00000000005fa920 0000000000000020 T INT123_decclass
00000000005fa940 0000000000000368 T INT123_set_synth_functions
00000000005facb0 0000000000000124 T INT123_dectype
00000000005fade0 0000000000000114 T INT123_frame_cpu_opt
00000000005faf00 0000000000000008 t nix_lseek
00000000005faf10 00000000000000bc t plain_fullread
00000000005fafd0 0000000000000050 t generic_head_read
00000000005fb020 0000000000000054 t generic_head_shift
00000000005fb080 000000000000002c t generic_read_frame_body
00000000005fb0b0 000000000000003c t generic_tell
00000000005fb0f0 000000000000004c t feed_skip_bytes
00000000005fb140 0000000000000008 t feed_seek_frame
00000000005fb150 0000000000000014 t bad_init
00000000005fb170 0000000000000004 t bad_close
00000000005fb180 0000000000000014 t bad_fullread
00000000005fb1a0 0000000000000014 t bad_head_read
00000000005fb1c0 0000000000000014 t bad_skip_bytes
00000000005fb1e0 0000000000000014 t bad_read_frame_body
00000000005fb200 0000000000000014 t bad_back_bytes
00000000005fb220 0000000000000014 t bad_tell
00000000005fb240 0000000000000038 t plain_read
00000000005fb280 0000000000000154 t bc_give
00000000005fb3e0 0000000000000024 t feed_read
00000000005fb410 000000000000013c t bc_add
00000000005fb550 0000000000000398 t icy_fullread
00000000005fb8f0 000000000000020c t buffered_fullread
00000000005fbb00 00000000000000e4 t stream_seek_frame
00000000005fbbf0 0000000000000004 t posix_lseek
00000000005fbc00 0000000000000004 t posix_read
00000000005fbc10 00000000000000d4 t buffered_forget
00000000005fbcf0 0000000000000034 t io_seek
00000000005fbd30 0000000000000070 t stream_rewind
00000000005fbda0 000000000000012c t stream_skip_bytes
00000000005fbed0 000000000000004c t stream_back_bytes
00000000005fbf20 00000000000002ec t default_init
00000000005fc210 0000000000000014 t bad_head_shift
00000000005fc230 0000000000000014 t bad_seek_frame
00000000005fc250 0000000000000004 t bad_rewind
00000000005fc260 00000000000002dc t bc_fill_pool.isra.0
00000000005fc540 000000000000004c t feed_init
00000000005fc590 0000000000000078 t bc_reset
00000000005fc610 0000000000000064 t stream_close
00000000005fc680 0000000000000064 t feed_back_bytes
00000000005fc6f0 0000000000000008 T INT123_bc_poolsize
00000000005fc700 0000000000000024 T INT123_bc_prepare
00000000005fc730 00000000000000e4 T INT123_bc_cleanup
00000000005fc820 0000000000000058 T INT123_feed_more
00000000005fc880 0000000000000050 T INT123_open_bad
00000000005fc8d0 000000000000009c T INT123_open_stream_handle
00000000005fc970 00000000000002e4 T INT123_make_decode_tables
00000000005fcc60 0000000000000a84 T INT123_make_conv16to8_table
00000000005fd6f0 00000000000000c0 t getbits
00000000005fd7b0 0000000000002318 T INT123_do_layer1
00000000005ffad0 00000000000000c0 t getbits
00000000005ffb90 0000000000000120 T INT123_init_layer12_stuff
00000000005ffcb0 0000000000000064 T INT123_init_layer12_table
00000000005ffd20 0000000000001b34 T INT123_do_layer2
0000000000601860 00000000000002bc t III_get_scale_factors_2
0000000000601b20 00000000000003b8 t dct12
0000000000601ee0 00000000000000c0 t getbits
0000000000601fa0 00000000000017a4 t III_dequantize_sample
0000000000603750 00000000000013c4 t III_get_scale_factors_1.isra.0
0000000000604b20 0000000000000028 T INT123_init_layer3_gainpow2
0000000000604b50 0000000000000478 T INT123_init_layer3_stuff
0000000000604fd0 0000000000000554 T INT123_dct36
0000000000605530 00000000000035d8 T INT123_do_layer3
0000000000608b10 00000000000003bc T INT123_synth_1to1_8bit
0000000000608ed0 00000000000000bc T INT123_synth_1to1_8bit_mono
0000000000608f90 000000000000008c T INT123_synth_1to1_8bit_m2s
0000000000609020 0000000000000140 T INT123_synth_1to1_8bit_wrap
0000000000609160 000000000000011c T INT123_synth_1to1_8bit_wrap_mono
0000000000609280 0000000000000198 T INT123_synth_1to1_8bit_wrap_m2s
0000000000609420 00000000000003bc T INT123_synth_2to1_8bit
00000000006097e0 00000000000000d4 T INT123_synth_2to1_8bit_mono
00000000006098c0 00000000000000bc T INT123_synth_2to1_8bit_m2s
0000000000609980 0000000000000490 T INT123_synth_4to1_8bit
0000000000609e10 0000000000000094 T INT123_synth_4to1_8bit_mono
0000000000609eb0 000000000000007c T INT123_synth_4to1_8bit_m2s
0000000000609f30 00000000000008d0 T INT123_synth_ntom_8bit
000000000060a800 000000000000015c T INT123_synth_ntom_8bit_mono
000000000060a960 0000000000000148 T INT123_synth_ntom_8bit_m2s
000000000060aab0 0000000000000394 T INT123_synth_1to1
000000000060ae50 00000000000000bc T INT123_synth_1to1_mono
000000000060af10 000000000000008c T INT123_synth_1to1_m2s
000000000060afa0 0000000000000394 T INT123_synth_2to1
000000000060b340 00000000000000d4 T INT123_synth_2to1_mono
000000000060b420 00000000000000bc T INT123_synth_2to1_m2s
000000000060b4e0 0000000000000874 T INT123_synth_4to1
000000000060bd60 0000000000000094 T INT123_synth_4to1_mono
000000000060be00 000000000000007c T INT123_synth_4to1_m2s
000000000060be80 0000000000000be4 T INT123_synth_ntom
000000000060ca70 0000000000000158 T INT123_synth_ntom_mono
000000000060cbd0 000000000000013c T INT123_synth_ntom_m2s
000000000060cd10 00000000000003bc T INT123_synth_1to1_s32
000000000060d0d0 00000000000000bc T INT123_synth_1to1_s32_mono
000000000060d190 000000000000008c T INT123_synth_1to1_s32_m2s
000000000060d220 00000000000003bc T INT123_synth_2to1_s32
000000000060d5e0 00000000000000d4 T INT123_synth_2to1_s32_mono
000000000060d6c0 00000000000000bc T INT123_synth_2to1_s32_m2s
000000000060d780 00000000000008d4 T INT123_synth_4to1_s32
000000000060e060 0000000000000094 T INT123_synth_4to1_s32_mono
000000000060e100 000000000000007c T INT123_synth_4to1_s32_m2s
000000000060e180 0000000000000c1c T INT123_synth_ntom_s32
000000000060eda0 0000000000000158 T INT123_synth_ntom_s32_mono
000000000060ef00 000000000000013c T INT123_synth_ntom_s32_m2s
000000000060f040 000000000000035c T INT123_synth_1to1_real
000000000060f3a0 00000000000000bc T INT123_synth_1to1_real_mono
000000000060f460 000000000000008c T INT123_synth_1to1_real_m2s
000000000060f4f0 000000000000035c T INT123_synth_2to1_real
000000000060f850 00000000000000d4 T INT123_synth_2to1_real_mono
000000000060f930 00000000000000bc T INT123_synth_2to1_real_m2s
000000000060f9f0 000000000000064c T INT123_synth_4to1_real
0000000000610040 0000000000000094 T INT123_synth_4to1_real_mono
00000000006100e0 000000000000007c T INT123_synth_4to1_real_m2s
0000000000610160 0000000000000598 T INT123_synth_ntom_real
0000000000610700 0000000000000158 T INT123_synth_ntom_real_mono
0000000000610860 000000000000013c T INT123_synth_ntom_real_m2s
00000000006109a0 0000000000000004 T INT123_compat_close
00000000006109b0 0000000000000610 T INT123_dct64
0000000000610fc0 00000000000000b8 T INT123_do_equalizer
0000000000611080 00000000000000f0 t ModPlug::UpdateSettings(bool)
0000000000611170 00000000000000a4 T ModPlug_Load
0000000000611220 0000000000000044 T ModPlug_Unload
0000000000611270 0000000000000020 T ModPlug_Read
0000000000611290 0000000000000008 T ModPlug_SetMasterVolume
00000000006112a0 0000000000000078 T ModPlug_Seek
0000000000611320 0000000000000024 T ModPlug_GetSettings
0000000000611350 000000000000002c T ModPlug_SetSettings
0000000000611380 000000000000000c t _muldiv(long, long, long)
0000000000611390 0000000000000010 t _muldivr(long, long, long)
00000000006113a0 000000000000010c T CSoundFile::InitPlayer(bool)
00000000006114b0 00000000000000d8 T CSoundFile::FadeSong(unsigned int)
0000000000611590 0000000000000058 T CSoundFile::GlobalFadeSong(unsigned int)
00000000006115f0 00000000000002a8 T CSoundFile::ProcessRow()
00000000006118a0 0000000000001588 T CSoundFile::ReadNote()
0000000000612e30 00000000000003fc T CSoundFile::Read(void*, unsigned int)
0000000000613230 0000000000000130 T CSoundFile::CSoundFile()
0000000000613230 0000000000000130 T CSoundFile::CSoundFile()
0000000000613360 0000000000000040 T CSoundFile::AllocatePattern(unsigned int, unsigned int)
00000000006133a0 000000000000000c T CSoundFile::FreePattern(void*)
00000000006133b0 0000000000000028 T CSoundFile::AllocateSample(unsigned int)
00000000006133e0 0000000000000010 T CSoundFile::FreeSample(void*)
00000000006133f0 0000000000000144 T CSoundFile::Destroy()
0000000000613540 0000000000000004 T CSoundFile::~CSoundFile()
0000000000613540 0000000000000004 T CSoundFile::~CSoundFile()
0000000000613550 0000000000000128 T CSoundFile::ResetMidiCfg()
0000000000613680 0000000000000790 T CSoundFile::Create(unsigned char const*, unsigned int)
0000000000613e10 00000000000000b4 T CSoundFile::SetWaveConfig(unsigned int, unsigned int, unsigned int, bool)
0000000000613ed0 0000000000000030 T CSoundFile::SetMixConfig(unsigned int, unsigned int)
0000000000613f00 000000000000005c T CSoundFile::SetResamplingMode(unsigned int)
0000000000613f60 0000000000000078 T CSoundFile::SetMasterVolume(unsigned int, bool)
0000000000613fe0 0000000000000050 T CSoundFile::GetMaxPosition() const
0000000000614030 0000000000000210 T CSoundFile::SetCurrentPos(unsigned int)
0000000000614240 0000000000000344 T CSoundFile::AdjustSampleLoop(_MODINSTRUMENT*)
0000000000614590 0000000000000948 T CSoundFile::ReadSample(_MODINSTRUMENT*, unsigned int, char const*, unsigned int)
0000000000614ee0 000000000000003c T CSoundFile::TransposeToFrequency(int, int)
0000000000614f20 0000000000000034 T CSoundFile::FrequencyToTranspose(unsigned int)
0000000000614f60 0000000000000060 T CSoundFile::FrequencyToTranspose(_MODINSTRUMENT*)
0000000000614fc0 0000000000000118 T CSoundFile::SetPatternName(unsigned int, char const*)
00000000006150e0 0000000000000184 T CSoundFile::DetectUnusedSamples(bool*)
0000000000615270 00000000000000a8 T CSoundFile::DestroySample(unsigned int)
0000000000615320 0000000000000804 T CSoundFile::GetLength(bool, bool)
0000000000615b30 00000000000003c0 T CSoundFile::InstrumentChange(_MODCHANNEL*, unsigned int, bool, bool, bool)
0000000000615ef0 00000000000000e8 T CSoundFile::GetNNAChannel(unsigned int) const
0000000000615fe0 00000000000000ac T CSoundFile::FinePortamentoUp(_MODCHANNEL*, unsigned int)
0000000000616090 00000000000000b0 T CSoundFile::FinePortamentoDown(_MODCHANNEL*, unsigned int)
0000000000616140 00000000000000a8 T CSoundFile::ExtraFinePortamentoUp(_MODCHANNEL*, unsigned int)
00000000006161f0 00000000000000b0 T CSoundFile::ExtraFinePortamentoDown(_MODCHANNEL*, unsigned int)
00000000006162a0 000000000000012c T CSoundFile::TonePortamento(_MODCHANNEL*, unsigned int)
00000000006163d0 0000000000000030 T CSoundFile::Vibrato(_MODCHANNEL*, unsigned int)
0000000000616400 000000000000002c T CSoundFile::FineVibrato(_MODCHANNEL*, unsigned int)
0000000000616430 000000000000002c T CSoundFile::Panbrello(_MODCHANNEL*, unsigned int)
0000000000616460 00000000000000cc T CSoundFile::PanningSlide(_MODCHANNEL*, unsigned int)
0000000000616530 000000000000004c T CSoundFile::FineVolumeUp(_MODCHANNEL*, unsigned int)
0000000000616580 0000000000000044 T CSoundFile::FineVolumeDown(_MODCHANNEL*, unsigned int)
00000000006165d0 00000000000000f8 T CSoundFile::VolumeSlide(_MODCHANNEL*, unsigned int)
00000000006166d0 0000000000000030 T CSoundFile::Tremolo(_MODCHANNEL*, unsigned int)
0000000000616700 00000000000000b8 T CSoundFile::ChannelVolSlide(_MODCHANNEL*, unsigned int)
00000000006167c0 0000000000000134 T CSoundFile::ExtendedChannelEffect(_MODCHANNEL*, unsigned int)
0000000000616900 0000000000000398 T CSoundFile::ProcessMidiMacro(unsigned int, char const*, unsigned int)
0000000000616ca0 00000000000000d8 T CSoundFile::DoFreqSlide(_MODCHANNEL*, int)
0000000000616d80 0000000000000070 T CSoundFile::PortamentoUp(_MODCHANNEL*, unsigned int)
0000000000616df0 0000000000000070 T CSoundFile::PortamentoDown(_MODCHANNEL*, unsigned int)
0000000000616e60 000000000000003c T CSoundFile::NoteCut(unsigned int, unsigned int)
0000000000616ea0 0000000000000104 T CSoundFile::KeyOff(unsigned int)
0000000000616fb0 000000000000046c T CSoundFile::CheckNNA(unsigned int, unsigned int, int, bool)
0000000000617420 000000000000005c T CSoundFile::SetTempo(unsigned int)
0000000000617480 0000000000000084 T CSoundFile::PatternLoop(_MODCHANNEL*, unsigned int)
0000000000617510 00000000000000c0 T CSoundFile::GlobalVolSlide(unsigned int)
00000000006175d0 0000000000000118 T CSoundFile::IsSongFinished(unsigned int, unsigned int) const
00000000006176f0 00000000000000cc T CSoundFile::SetSpeed(unsigned int)
00000000006177c0 000000000000017c T CSoundFile::IsValidBackwardJump(unsigned int, unsigned int, unsigned int, unsigned int) const
0000000000617940 00000000000001dc T CSoundFile::GetPeriodFromNote(unsigned int, int, unsigned int) const
0000000000617b20 00000000000007c8 T CSoundFile::NoteChange(unsigned int, int, bool, bool)
00000000006182f0 00000000000002dc T CSoundFile::RetrigNote(unsigned int, unsigned int)
00000000006185d0 000000000000027c T CSoundFile::ExtendedMODCommands(unsigned int, unsigned int)
0000000000618850 000000000000048c T CSoundFile::ExtendedS3MCommands(unsigned int, unsigned int)
0000000000618ce0 0000000000000e20 T CSoundFile::ProcessEffects()
0000000000619b00 000000000000011c T CSoundFile::GetNoteFromPeriod(unsigned int) const
0000000000619c20 00000000000000c4 T CSoundFile::GetFreqFromPeriod(unsigned int, unsigned int, int) const
0000000000619cf0 0000000000000090 T CSoundFile::CutOffToFrequency(unsigned int, int) const
0000000000619d80 00000000000000ec T CSoundFile::SetupChannelFilter(_MODCHANNEL*, bool, int) const
0000000000619e70 0000000000000528 T CSoundFile::InitializeDSP(bool)
000000000061a3a0 0000000000000554 T CSoundFile::ProcessStereoDSP(int)
000000000061a900 0000000000000060 T CSoundFile::SetReverbParameters(unsigned int, unsigned int)
000000000061a960 000000000000006c T CSoundFile::SetXBassParameters(unsigned int, unsigned int)
000000000061a9d0 0000000000000060 T CSoundFile::SetSurroundParameters(unsigned int, unsigned int)
000000000061aa30 0000000000000088 T CSoundFile::SetWaveConfigEx(bool, bool, bool, bool, bool, bool, bool)
000000000061aac0 0000000000000070 T Mono8BitMix(_MODCHANNEL*, int*, int*)
000000000061ab30 000000000000006c T Mono16BitMix(_MODCHANNEL*, int*, int*)
000000000061aba0 0000000000000084 T Mono8BitLinearMix(_MODCHANNEL*, int*, int*)
000000000061ac30 0000000000000084 T Mono16BitLinearMix(_MODCHANNEL*, int*, int*)
000000000061acc0 00000000000000c0 T Mono8BitSplineMix(_MODCHANNEL*, int*, int*)
000000000061ad80 00000000000000c4 T Mono16BitSplineMix(_MODCHANNEL*, int*, int*)
000000000061ae50 0000000000000108 T Mono8BitFirFilterMix(_MODCHANNEL*, int*, int*)
000000000061af60 0000000000000124 T Mono16BitFirFilterMix(_MODCHANNEL*, int*, int*)
000000000061b090 0000000000000080 T Mono8BitRampMix(_MODCHANNEL*, int*, int*)
000000000061b110 0000000000000084 T Mono16BitRampMix(_MODCHANNEL*, int*, int*)
000000000061b1a0 0000000000000094 T Mono8BitLinearRampMix(_MODCHANNEL*, int*, int*)
000000000061b240 000000000000009c T Mono16BitLinearRampMix(_MODCHANNEL*, int*, int*)
000000000061b2e0 00000000000000d0 T Mono8BitSplineRampMix(_MODCHANNEL*, int*, int*)
000000000061b3b0 00000000000000e0 T Mono16BitSplineRampMix(_MODCHANNEL*, int*, int*)
000000000061b490 0000000000000130 T Mono8BitFirFilterRampMix(_MODCHANNEL*, int*, int*)
000000000061b5c0 0000000000000140 T Mono16BitFirFilterRampMix(_MODCHANNEL*, int*, int*)
000000000061b700 000000000000006c T FastMono8BitMix(_MODCHANNEL*, int*, int*)
000000000061b770 0000000000000068 T FastMono16BitMix(_MODCHANNEL*, int*, int*)
000000000061b7e0 0000000000000080 T FastMono8BitLinearMix(_MODCHANNEL*, int*, int*)
000000000061b860 0000000000000080 T FastMono16BitLinearMix(_MODCHANNEL*, int*, int*)
000000000061b8e0 000000000000007c T FastMono8BitRampMix(_MODCHANNEL*, int*, int*)
000000000061b960 0000000000000080 T FastMono16BitRampMix(_MODCHANNEL*, int*, int*)
000000000061b9e0 0000000000000090 T FastMono8BitLinearRampMix(_MODCHANNEL*, int*, int*)
000000000061ba70 0000000000000098 T FastMono16BitLinearRampMix(_MODCHANNEL*, int*, int*)
000000000061bb10 0000000000000080 T Stereo8BitMix(_MODCHANNEL*, int*, int*)
000000000061bb90 000000000000007c T Stereo16BitMix(_MODCHANNEL*, int*, int*)
000000000061bc10 000000000000009c T Stereo8BitLinearMix(_MODCHANNEL*, int*, int*)
000000000061bcb0 00000000000000a8 T Stereo16BitLinearMix(_MODCHANNEL*, int*, int*)
000000000061bd60 0000000000000110 T Stereo8BitSplineMix(_MODCHANNEL*, int*, int*)
000000000061be70 0000000000000108 T Stereo16BitSplineMix(_MODCHANNEL*, int*, int*)
000000000061bf80 00000000000001bc T Stereo8BitFirFilterMix(_MODCHANNEL*, int*, int*)
000000000061c140 00000000000001b8 T Stereo16BitFirFilterMix(_MODCHANNEL*, int*, int*)
000000000061c300 0000000000000090 T Stereo8BitRampMix(_MODCHANNEL*, int*, int*)
000000000061c390 0000000000000094 T Stereo16BitRampMix(_MODCHANNEL*, int*, int*)
000000000061c430 00000000000000ac T Stereo8BitLinearRampMix(_MODCHANNEL*, int*, int*)
000000000061c4e0 00000000000000c0 T Stereo16BitLinearRampMix(_MODCHANNEL*, int*, int*)
000000000061c5a0 0000000000000130 T Stereo8BitSplineRampMix(_MODCHANNEL*, int*, int*)
000000000061c6d0 000000000000012c T Stereo16BitSplineRampMix(_MODCHANNEL*, int*, int*)
000000000061c800 00000000000001d8 T Stereo8BitFirFilterRampMix(_MODCHANNEL*, int*, int*)
000000000061c9e0 00000000000001cc T Stereo16BitFirFilterRampMix(_MODCHANNEL*, int*, int*)
000000000061cbb0 000000000000009c T FilterMono8BitMix(_MODCHANNEL*, int*, int*)
000000000061cc50 000000000000009c T FilterMono16BitMix(_MODCHANNEL*, int*, int*)
000000000061ccf0 00000000000000b0 T FilterMono8BitLinearMix(_MODCHANNEL*, int*, int*)
000000000061cda0 00000000000000b4 T FilterMono16BitLinearMix(_MODCHANNEL*, int*, int*)
000000000061ce60 00000000000000ec T FilterMono8BitSplineMix(_MODCHANNEL*, int*, int*)
000000000061cf50 00000000000000f4 T FilterMono16BitSplineMix(_MODCHANNEL*, int*, int*)
000000000061d050 0000000000000148 T FilterMono8BitFirFilterMix(_MODCHANNEL*, int*, int*)
000000000061d1a0 000000000000015c T FilterMono16BitFirFilterMix(_MODCHANNEL*, int*, int*)
000000000061d300 00000000000000b4 T FilterMono8BitRampMix(_MODCHANNEL*, int*, int*)
000000000061d3c0 00000000000000b4 T FilterMono16BitRampMix(_MODCHANNEL*, int*, int*)
000000000061d480 00000000000000c8 T FilterMono8BitLinearRampMix(_MODCHANNEL*, int*, int*)
000000000061d550 00000000000000c8 T FilterMono16BitLinearRampMix(_MODCHANNEL*, int*, int*)
000000000061d620 0000000000000104 T FilterMono8BitSplineRampMix(_MODCHANNEL*, int*, int*)
000000000061d730 0000000000000114 T FilterMono16BitSplineRampMix(_MODCHANNEL*, int*, int*)
000000000061d850 0000000000000168 T FilterMono8BitFirFilterRampMix(_MODCHANNEL*, int*, int*)
000000000061d9c0 0000000000000178 T FilterMono16BitFirFilterRampMix(_MODCHANNEL*, int*, int*)
000000000061db40 00000000000000d0 T FilterStereo8BitMix(_MODCHANNEL*, int*, int*)
000000000061dc10 00000000000000cc T FilterStereo16BitMix(_MODCHANNEL*, int*, int*)
000000000061dce0 00000000000000ec T FilterStereo8BitLinearMix(_MODCHANNEL*, int*, int*)
000000000061ddd0 00000000000000fc T FilterStereo16BitLinearMix(_MODCHANNEL*, int*, int*)
000000000061ded0 0000000000000178 T FilterStereo8BitSplineMix(_MODCHANNEL*, int*, int*)
000000000061e050 0000000000000174 T FilterStereo16BitSplineMix(_MODCHANNEL*, int*, int*)
000000000061e1d0 0000000000000210 T FilterStereo8BitFirFilterMix(_MODCHANNEL*, int*, int*)
000000000061e3e0 0000000000000214 T FilterStereo16BitFirFilterMix(_MODCHANNEL*, int*, int*)
000000000061e600 00000000000000e8 T FilterStereo8BitRampMix(_MODCHANNEL*, int*, int*)
000000000061e6f0 00000000000000e4 T FilterStereo16BitRampMix(_MODCHANNEL*, int*, int*)
000000000061e7e0 0000000000000114 T FilterStereo8BitLinearRampMix(_MODCHANNEL*, int*, int*)
000000000061e900 0000000000000124 T FilterStereo16BitLinearRampMix(_MODCHANNEL*, int*, int*)
000000000061ea30 0000000000000194 T FilterStereo8BitSplineRampMix(_MODCHANNEL*, int*, int*)
000000000061ebd0 000000000000018c T FilterStereo16BitSplineRampMix(_MODCHANNEL*, int*, int*)
000000000061ed60 0000000000000224 T FilterStereo8BitFirFilterRampMix(_MODCHANNEL*, int*, int*)
000000000061ef90 0000000000000224 T FilterStereo16BitFirFilterRampMix(_MODCHANNEL*, int*, int*)
000000000061f1c0 00000000000001d4 t CzCUBICSPLINE::CzCUBICSPLINE()
000000000061f1c0 00000000000001d4 T CzCUBICSPLINE::CzCUBICSPLINE()
000000000061f3a0 00000000000001c8 t CzWINDOWEDFIR::CzWINDOWEDFIR()
000000000061f3a0 00000000000001c8 T CzWINDOWEDFIR::CzWINDOWEDFIR()
000000000061f570 0000000000000084 T X86_Convert32To8(void*, int*, unsigned int, int*, int*)
000000000061f600 000000000000007c T X86_Convert32To16(void*, int*, unsigned int, int*, int*)
000000000061f680 000000000000008c T X86_Convert32To24(void*, int*, unsigned int, int*, int*)
000000000061f710 000000000000007c T X86_Convert32To32(void*, int*, unsigned int, int*, int*)
000000000061f790 0000000000000004 t X86_InterleaveFrontRear(int*, int*, unsigned int)
000000000061f7a0 000000000000003c t X86_MonoFromStereo(int*, unsigned int)
000000000061f7e0 000000000000007c t X86_StereoFill(int*, unsigned int, int*, int*)
000000000061f860 0000000000000078 t X86_EndChannelOfs(_MODCHANNEL*, int*, unsigned int)
000000000061f8e0 00000000000006c4 T CSoundFile::CreateStereoMix(int)
000000000061ffb0 000000000000007c t MMCMPBITBUFFER::GetBits(unsigned int) [clone .part.0]
0000000000620030 0000000000000070 t _PPBITBUFFER::GetBits(unsigned int)
00000000006200a0 00000000000004c0 t PP20_Unpack(unsigned char const**, unsigned int*)
0000000000620560 000000000000079c t MMCMP_Unpack(unsigned char const**, unsigned int*)
0000000000620d00 000000000000143c T CSoundFile::ReadXM(unsigned char const*, unsigned int)
0000000000622140 0000000000000550 T CSoundFile::ReadWav(unsigned char const*, unsigned int)
0000000000622690 0000000000000074 t get_fci(char const*, int*)
0000000000622710 00000000000004cc T CSoundFile::ReadUMX(unsigned char const*, unsigned int)
0000000000622be0 00000000000006d8 T CSoundFile::ReadUlt(unsigned char const*, unsigned int)
00000000006232c0 0000000000000598 T CSoundFile::ReadSTM(unsigned char const*, unsigned int)
0000000000623860 0000000000000124 T CSoundFile::S3MConvert(_MODCOMMAND*, bool) const
0000000000623990 0000000000000898 T CSoundFile::ReadS3M(unsigned char const*, unsigned int)
0000000000624230 00000000000004c0 T CSoundFile::ReadPTM(unsigned char const*, unsigned int)
00000000006246f0 00000000000006a0 T CSoundFile::ReadOKT(unsigned char const*, unsigned int)
0000000000624d90 000000000000056c T CSoundFile::ReadMTM(unsigned char const*, unsigned int)
0000000000625300 0000000000000190 T CSoundFile::ConvertModCommand(_MODCOMMAND*) const
0000000000625490 0000000000000a38 T CSoundFile::ReadMod(unsigned char const*, unsigned int)
0000000000625ed0 0000000000000330 t MedConvert(_MODCOMMAND*, tagMMD0SONGHEADER const*)
0000000000626200 0000000000000d84 T CSoundFile::ReadMed(unsigned char const*, unsigned int)
0000000000626f90 0000000000000238 t ConvertMDLCommand(_MODCOMMAND*, unsigned int, unsigned int)
00000000006271d0 0000000000000268 t UnpackMDLTrack(_MODCOMMAND*, unsigned int, unsigned int, unsigned int, unsigned char const*, unsigned int)
0000000000627440 0000000000000f9c T CSoundFile::ReadMDL(unsigned char const*, unsigned int)
00000000006283e0 0000000000000068 t MDLReadBits(unsigned int&, unsigned int&, unsigned char*&, signed char)
0000000000628450 0000000000000508 T CSoundFile::ITInstrToMPT(void const*, _INSTRUMENTHEADER*, unsigned int)
0000000000628960 000000000000007c t ITReadBits(unsigned int&, unsigned int&, unsigned char*&, signed char)
00000000006289e0 000000000000023c t ITUnpack8Bit(signed char*, unsigned int, unsigned char*, unsigned int, bool)
0000000000628c20 0000000000000230 t ITUnpack16Bit(signed char*, unsigned int, unsigned char*, unsigned int, bool)
0000000000628e50 00000000000001d8 T CSoundFile::LoadMixPlugins(void const*, unsigned int)
0000000000629030 000000000000108c T CSoundFile::ReadIT(unsigned char const*, unsigned int)
000000000062a0c0 000000000000063c T CSoundFile::ReadFAR(unsigned char const*, unsigned int)
000000000062a700 0000000000000534 T CSoundFile::ReadDSM(unsigned char const*, unsigned int)
000000000062ac40 0000000000000cd4 T CSoundFile::ReadDMF(unsigned char const*, unsigned int)
000000000062b920 00000000000001f4 t DMFNewNode(DMF_HTREE*)
000000000062bb20 00000000000001d0 t DMFUnpack(unsigned char*, unsigned char*, unsigned char*, unsigned int)
000000000062bcf0 00000000000009f4 T CSoundFile::ReadDBM(unsigned char const*, unsigned int)
000000000062c6f0 000000000000090c T CSoundFile::ReadAMS2(unsigned char const*, unsigned int)
000000000062d000 0000000000000764 T CSoundFile::ReadAMS(unsigned char const*, unsigned int)
000000000062d770 00000000000001c4 t AMSUnpack(char const*, unsigned int, char*, unsigned int, char)
000000000062d940 0000000000000274 t AMF_Unpack(_MODCOMMAND*, unsigned char const*, unsigned int, unsigned int)
000000000062dbc0 00000000000008c0 T CSoundFile::ReadAMF(unsigned char const*, unsigned int)
000000000062e480 00000000000005f4 T CSoundFile::Read669(unsigned char const*, unsigned int)
000000000062ea80 00000000000000fc t ConvertMT2Command(CSoundFile*, _MODCOMMAND*, _MT2COMMAND const*)
000000000062eb80 0000000000000d7c T CSoundFile::ReadMT2(unsigned char const*, unsigned int)
000000000062f900 0000000000000800 T CSoundFile::ReadPSM(unsigned char const*, unsigned int)
0000000000630100 00000000000000f4 t abc_brokenrithm(char const*, int*, int*, int*, int)
0000000000630200 0000000000000090 t abc_pattracktime(_ABCHANDLE*, unsigned int)
0000000000630290 00000000000000e8 t abc_globalslide(_ABCHANDLE*, unsigned int, int)
0000000000630380 000000000000006c t abc_isvalidchar(char)
00000000006303f0 0000000000000074 t abc_skip_word(char*)
0000000000630470 0000000000000170 t abc_parse_decorations(_ABCHANDLE*, _ABCTRACK*, char const*)
00000000006305e0 00000000000001c0 t abc_MIDI_gchord(char const*, _ABCHANDLE*)
00000000006307a0 00000000000000c8 t abc_beat_vol(_ABCHANDLE*, int, int)
0000000000630870 0000000000000078 t abc_MIDI_beatstring(_ABCHANDLE*, char const*)
00000000006308f0 00000000000001cc t abc_substitute(_ABCHANDLE*, char*, char*)
0000000000630ac0 0000000000000070 t abc_message(char const*, char const*)
0000000000630b30 00000000000002b0 t ABC_Key(char const*)
0000000000630de0 000000000000017c t abc_addchordname(char const*, int, int const*)
0000000000630f60 00000000000001c8 t abc_partpat_to_orderlist(unsigned char (*) [2], char const*, _ABCHANDLE*, unsigned char**, int) [clone .constprop.0]
0000000000631130 0000000000000144 t abc_extractkeyvalue(char*, unsigned long, char*, unsigned long, char const*) [clone .constprop.0]
0000000000631280 0000000000000138 t abc_new_umacro(_ABCHANDLE*, char const*)
00000000006313c0 0000000000000750 t ABC_ReadPatterns(_MODCOMMAND**, unsigned short*, _ABCHANDLE*, int, int)
0000000000631b10 000000000000009c t ABC_CleanupMacros(_ABCHANDLE*)
0000000000631bb0 0000000000000138 t abc_fgetbytes(MMFILE*, char*, unsigned int) [clone .part.0]
0000000000631cf0 0000000000000308 t abc_gets(_ABCHANDLE*, MMFILE*)
0000000000632000 00000000000000f0 t abc_MIDI_beat(_ABCHANDLE*, char const*)
00000000006320f0 0000000000000098 t abc_MIDI_getnumber(char const*)
0000000000632190 0000000000000098 t abc_MIDI_getprog(char const*)
0000000000632230 00000000000000c8 t abc_add_event(_ABCHANDLE*, _ABCTRACK*, _ABCEVENT*) [clone .isra.0]
0000000000632300 0000000000000080 t abc_add_partbreak(_ABCHANDLE*, _ABCTRACK*, unsigned int) [clone .isra.0]
0000000000632380 0000000000000090 t abc_add_tempo_event(_ABCHANDLE*, _ABCTRACK*, unsigned int, int) [clone .isra.0]
0000000000632410 0000000000000090 t abc_add_noteoff(_ABCHANDLE*, _ABCTRACK*, unsigned int) [clone .isra.0]
00000000006324a0 00000000000001cc t abc_add_dronenote(_ABCHANDLE*, _ABCTRACK*, unsigned int, int, int) [clone .isra.0]
0000000000632670 0000000000000084 t abc_add_setjumploop(_ABCHANDLE*, _ABCTRACK*, unsigned int, ABCEVENT_JUMPTYPE) [clone .isra.0]
0000000000632700 00000000000000bc t abc_add_sync(_ABCHANDLE*, _ABCTRACK*, unsigned int) [clone .isra.0]
00000000006327c0 0000000000000080 t abc_add_tocoda(_ABCHANDLE*, _ABCTRACK*, unsigned int) [clone .isra.0]
0000000000632840 0000000000000988 t abc_transpose(char const*)
00000000006331d0 0000000000000318 t abc_locate_track(_ABCHANDLE*, char const*, int)
00000000006334f0 00000000000004e0 t abc_add_gchord(_ABCHANDLE*, unsigned int, unsigned int)
00000000006339d0 0000000000000208 t abc_add_drum(_ABCHANDLE*, unsigned int, unsigned int)
0000000000633be0 0000000000000034 t abc_check_track(_ABCHANDLE*, _ABCTRACK*) [clone .part.0]
0000000000633c20 000000000000071c t abc_add_noteon(_ABCHANDLE*, int, char const*, unsigned int, char*, int, ABCEVENT_X_EFFECT, int)
0000000000634340 00000000000001a8 t abc_getexpr(char const*, int*)
00000000006344f0 00000000000000d4 t abc_M_field(char const*, int*, int*)
00000000006345d0 0000000000000124 t abc_notelen(char const*, int*, int*)
0000000000634700 00000000000002ec t abc_extract_tempo(char const*, int)
00000000006349f0 00000000000004dc t abc_set_parts(char**, char*)
0000000000634ed0 00000000000009dc t abc_song_to_parts(_ABCHANDLE*, char**, unsigned char (*) [2])
00000000006358b0 0000000000001264 t abc_MIDI_command(_ABCHANDLE*, char*, char)
0000000000636b20 00000000000001a8 T CSoundFile::TestABC(unsigned char const*, unsigned int)
0000000000636cd0 0000000000005a6c T CSoundFile::ReadABC(unsigned char const*, unsigned int)
000000000063c740 0000000000000070 t mid_message(char const*, char const*)
000000000063c7b0 0000000000000610 t MID_ReadPatterns(_MODCOMMAND**, unsigned short*, _MIDHANDLE*, int, int)
000000000063cdc0 000000000000001c t mid_read_long(_MIDHANDLE*) [clone .isra.0]
000000000063cde0 0000000000000084 t mid_sync_track(_MIDTRACK*, unsigned int)
000000000063ce70 0000000000000114 t mid_add_event(_MIDHANDLE*, _MIDTRACK*, _MIDEVENT*) [clone .constprop.0]
000000000063cf90 0000000000000258 t mid_locate_track(_MIDHANDLE*, int, int)
000000000063d1f0 000000000000005c t mid_add_noteoff(_MIDHANDLE*, _MIDTRACK*)
000000000063d250 00000000000000a0 t mid_add_wheel(_MIDHANDLE*, _MIDTRACK*, int)
000000000063d2f0 0000000000000064 T CSoundFile::TestMID(unsigned char const*, unsigned int)
000000000063d360 0000000000001db8 T CSoundFile::ReadMID(unsigned char const*, unsigned int)
000000000063f120 00000000000000c8 t pat_sawtooth(int)
000000000063f1f0 00000000000000ac t pat_setpat_attr(WaveHeader*, _MODINSTRUMENT*)
000000000063f2a0 000000000000008c t mmreadUBYTES(unsigned char*, long, MMFILE*)
000000000063f330 00000000000000ec t pat_build_path(char*, int)
000000000063f420 0000000000000330 t pat_setpat_inst(WaveHeader*, _INSTRUMENTHEADER*, int)
000000000063f750 0000000000000078 t pat_square(int)
000000000063f7d0 0000000000000018 t pat_sinus(int)
000000000063f7f0 0000000000000178 t pat_read_waveheader(__sFILE*, WaveHeader*, int) [clone .constprop.0]
000000000063f970 00000000000002b4 t pat_readpat(int, char*, int)
000000000063fc30 00000000000000f4 t dec_pat_Decompress8Bit(short*, int, int) [clone .isra.0]
000000000063fd30 00000000000000a8 t pat_readpat_attr(int, WaveHeader*, int) [clone .constprop.0]
000000000063fde0 0000000000000294 t PATsample(CSoundFile*, _MODINSTRUMENT*, int, int)
0000000000640080 0000000000000140 t pat_get_waveheader(MMFILE*, WaveHeader*, int)
00000000006401c0 0000000000000050 t pat_resetsmp
0000000000640210 0000000000000024 t pat_smptogm
0000000000640240 000000000000005c t pat_gmtosmp
00000000006402a0 0000000000000024 t pat_smplooped
00000000006402d0 0000000000000058 t pat_gm_name
0000000000640330 0000000000000024 t pat_gm_drumnr
0000000000640360 0000000000000088 t pat_gm_drumnote
00000000006403f0 0000000000000600 t pat_init_patnames
00000000006409f0 0000000000000080 T CSoundFile::TestPAT(unsigned char const*, unsigned int)
0000000000640a70 0000000000000008 t pat_modnote
0000000000640a80 00000000000002fc t PAT_Load_Instruments
0000000000640d80 0000000000000800 T CSoundFile::ReadPAT(unsigned char const*, unsigned int)
0000000000641580 0000000000000080 T mutexLock
0000000000641600 0000000000000068 T mutexUnlock
0000000000641670 000000000000001c T mutexIsLockedByCurrentThread
0000000000641690 000000000000004c T rmutexLock
00000000006416e0 000000000000001c T rmutexUnlock
0000000000641700 0000000000000018 t _appletInfiniteSleepLoop
0000000000641720 0000000000000108 t _appletCmdGetSession
0000000000641830 00000000000000cc t _appletCmdInU8NoOut
0000000000641900 0000000000000104 t _appletGetLaunchReason
0000000000641a10 00000000000000e4 t _appletSetFocusHandlingMode
0000000000641b00 00000000000000d4 t _appletCmdInSession
0000000000641be0 00000000000000cc t _appletCmdInU32NoOut
0000000000641cb0 000000000000011c t _appletCreateLibraryApplet
0000000000641dd0 000000000000010c t _appletCmdGetSessionInU64
0000000000641ee0 0000000000000138 t _appletGetSessionProxy.constprop.0
0000000000642020 0000000000000154 t _appletOpenLibraryAppletProxy.constprop.0
0000000000642180 00000000000000d0 t _appletCmdGetHandle.constprop.0.isra.0
0000000000642250 00000000000001c4 t _appletStorageAccessorRW.isra.0
0000000000642420 00000000000000f8 t _appletStorageRW.part.0
0000000000642520 00000000000000d4 t _appletCmdNoInOutU8.isra.0
0000000000642600 00000000000000d4 t _appletCmdNoInOutU32.isra.0
00000000006426e0 00000000000000d4 t _appletCmdNoInOutU64.isra.0
00000000006427c0 00000000000000c0 t _appletCmdNoIO.isra.0
0000000000642880 0000000000000010 T appletGetAppletType
0000000000642890 000000000000000c T appletGetThemeColorType
00000000006428a0 0000000000000108 T appletSetFocusHandlingMode
00000000006429b0 000000000000005c T appletSetCpuBoostMode
0000000000642a10 000000000000002c T appletCreateManagedDisplayLayer
0000000000642a40 000000000000000c T appletGetAppletResourceUserId
0000000000642a50 00000000000000f4 t _appletGetIndirectLayerConsumerHandle
0000000000642b50 0000000000000088 t _appletHolderCreateState
0000000000642be0 00000000000000c4 T appletCreateLibraryApplet
0000000000642cb0 00000000000000b0 T appletHolderClose
0000000000642d60 0000000000000010 T appletHolderActive
0000000000642d70 00000000000000b8 T appletHolderStart
0000000000642e30 0000000000000164 T appletHolderJump
0000000000642fa0 0000000000000084 T appletHolderJoin
0000000000643030 0000000000000024 T appletHolderCheckFinished
0000000000643060 0000000000000008 T appletHolderGetExitReason
0000000000643070 0000000000000060 T appletHolderPresetLibraryAppletGpuTimeSliceZero
00000000006430d0 0000000000000028 T appletHolderPopOutData
0000000000643100 0000000000000028 T appletHolderPopInteractiveOutData
0000000000643130 0000000000000024 T appletHolderGetLibraryAppletInfo
0000000000643160 000000000000002c T appletCreateStorage
0000000000643190 0000000000000090 T appletStorageClose
0000000000643220 000000000000004c T appletHolderPushInData
0000000000643270 000000000000004c T appletHolderPushInteractiveInData
00000000006432c0 0000000000000008 T appletStorageCloseTmem
00000000006432d0 00000000000000d8 T appletStorageGetSize
00000000006433b0 0000000000000018 T appletStorageWrite
00000000006433d0 0000000000000018 T appletStorageRead
00000000006433f0 0000000000000090 T appletNotifyRunning
0000000000643480 000000000000008c T appletSetGamePlayRecordingState
0000000000643510 0000000000000ad4 t _appletCleanup
0000000000643ff0 0000000000000044 T appletExit
0000000000644040 0000000000000040 T appletGetLibraryAppletInfo
0000000000644080 0000000000000a98 T appletInitialize
0000000000644b20 0000000000000024 t _appletExitProcess
0000000000644b50 000000000000000c T appletGetOperationMode
0000000000644b60 0000000000000074 T appletGetMessage
0000000000644be0 000000000000027c T appletProcessMessage
0000000000644e60 0000000000000034 T appletMainLoop
0000000000644ea0 0000000000000084 t _audrenCleanup
0000000000644f30 00000000000000c0 t _audrenCmdNoIO.constprop.0
0000000000644ff0 00000000000004cc T audrenInitialize
00000000006454c0 0000000000000044 T audrenExit
0000000000645510 0000000000000010 T audrenWaitFrame
0000000000645520 0000000000000330 T audrenRequestUpdateAudioRenderer
0000000000645850 0000000000000008 T audrenStartAudioRenderer
0000000000645860 00000000000001c0 t _fatalCmd
0000000000645a20 000000000000000c T fatalThrowWithPolicy
0000000000645a30 0000000000000014 T fatalThrow
0000000000645a50 0000000000000108 t _hidCleanup
0000000000645b60 00000000000000d8 t _hidCmdInAruidNoOut
0000000000645c40 00000000000000e4 t _hidCmdInU32AruidNoOut
0000000000645d30 00000000000000e4 t _hidCmdInU64AruidNoOut
0000000000645e20 00000000000001a4 t _hidGetStates
0000000000645fd0 00000000000000f4 t _hidCmdInAruidOutU64.constprop.0
00000000006460d0 00000000000000e8 t _hidCmdInAruidOutU32.constprop.0
00000000006461c0 00000000000000c0 t _hidCmdInU32NoOut.constprop.0
0000000000646280 0000000000000100 t _hidCmdGetSession.constprop.0
0000000000646380 0000000000000114 t _hidCreateAppletResource.constprop.0
00000000006464a0 00000000000000c8 t _hidCmdGetHandle.constprop.0
0000000000646570 00000000000000dc T hidInitialize
0000000000646650 0000000000000044 T hidExit
00000000006466a0 000000000000000c T hidGetSharedmemAddr
00000000006466b0 0000000000000090 T hidGetNpadStyleSet
0000000000646740 00000000000000a8 T hidGetNpadDeviceType
00000000006467f0 0000000000000020 T hidInitializeTouchScreen
0000000000646810 0000000000000088 T hidGetTouchScreenStates
00000000006468a0 0000000000000020 T hidInitializeMouse
00000000006468c0 0000000000000058 T hidGetMouseStates
0000000000646920 0000000000000020 T hidInitializeKeyboard
0000000000646940 0000000000000058 T hidGetKeyboardStates
00000000006469a0 000000000000006c T hidInitializeNpad
0000000000646a10 00000000000000a8 T hidGetNpadStatesFullKey
0000000000646ac0 00000000000000a8 T hidGetNpadStatesHandheld
0000000000646b70 00000000000000a8 T hidGetNpadStatesJoyDual
0000000000646c20 00000000000000a8 T hidGetNpadStatesJoyLeft
0000000000646cd0 00000000000000a8 T hidGetNpadStatesJoyRight
0000000000646d80 0000000000000158 T hidGetNpadStatesGc
0000000000646ee0 00000000000000ac T hidGetNpadStatesSystemExt
0000000000646f90 0000000000000008 T hidSetSupportedNpadStyleSet
0000000000646fa0 000000000000003c T hidGetSupportedNpadStyleSet
0000000000646fe0 0000000000000100 T hidSetSupportedNpadIdType
00000000006470e0 000000000000000c T hidSetNpadJoyHoldType
00000000006470f0 0000000000000040 T hidGetNpadJoyHoldType
0000000000647130 000000000000020c T hidInitializeVibrationDevices
0000000000647340 0000000000000124 T hidSendVibrationValues
0000000000647470 00000000000000d0 t _nvSetClientPID
0000000000647540 00000000000000c8 t _nvCleanup
0000000000647610 00000000000000d8 t _nvCmdInitialize.constprop.0
00000000006476f0 000000000000001c W __nx_nv_create_tmem
0000000000647710 00000000000002d8 T nvInitialize
00000000006479f0 0000000000000044 T nvExit
0000000000647a40 00000000000000f4 T nvConvertError
0000000000647b40 0000000000000118 T nvOpen
0000000000647c60 00000000000002f8 T nvIoctl
0000000000647f60 00000000000003cc T nvIoctl2
0000000000648330 00000000000000d8 T nvClose
0000000000648410 0000000000000110 T nvQueryEvent
0000000000648520 0000000000000068 t _psmCleanup
0000000000648590 0000000000000098 T psmInitialize
0000000000648630 0000000000000044 T psmExit
0000000000648680 00000000000000d0 t _smCmifCmdInPid
0000000000648750 0000000000000068 t _smCleanup
00000000006487c0 0000000000000048 T smAddOverrideHandle
0000000000648810 0000000000000054 T smGetServiceOverride
0000000000648870 00000000000001bc T smInitialize
0000000000648a30 0000000000000044 T smExit
0000000000648a80 00000000000000d0 T smGetServiceOriginal
0000000000648b50 0000000000000120 T smGetServiceWrapper
0000000000648c70 0000000000000044 T nvAddressSpaceClose
0000000000648cc0 0000000000000088 T nvAddressSpaceCreate
0000000000648d50 0000000000000044 T nvAddressSpaceMap
0000000000648da0 0000000000000008 T nvAddressSpaceUnmap
0000000000648db0 000000000000007c t _nvFenceCleanup
0000000000648e30 0000000000000098 T nvFenceInit
0000000000648ed0 0000000000000044 T nvFenceExit
0000000000648f20 0000000000000240 T nvFenceWait
0000000000649160 0000000000000074 T nvMultiFenceWait
00000000006491e0 0000000000000130 T nvGpuInit
0000000000649310 000000000000006c T nvGpuExit
0000000000649380 000000000000000c T nvGpuGetCharacteristics
0000000000649390 000000000000000c T nvGpuGetZcullCtxSize
00000000006493a0 0000000000000064 T nvGpuChannelClose
0000000000649410 000000000000010c T nvGpuChannelCreate
0000000000649520 000000000000000c T nvGpuChannelZcullBind
0000000000649530 00000000000000f8 T nvGpuChannelKickoff
0000000000649630 00000000000000b8 T nvGpuChannelAppendEntry
00000000006496f0 00000000000000b4 T nvMapInit
00000000006497b0 000000000000006c T nvMapExit
0000000000649820 000000000000000c T nvMapGetFd
0000000000649830 0000000000000080 T nvMapClose
00000000006498b0 0000000000000154 T nvMapCreate
0000000000649a10 000000000000009c T nvMapLoadRemote
0000000000649ab0 0000000000000028 T nvioctlChannel_SetNvmapFd
0000000000649ae0 00000000000000c4 T nvioctlChannel_SubmitGpfifo
0000000000649bb0 000000000000005c T nvioctlChannel_KickoffPb
0000000000649c10 0000000000000058 T nvioctlChannel_AllocObjCtx
0000000000649c70 0000000000000030 T nvioctlChannel_ZCullBind
0000000000649ca0 0000000000000030 T nvioctlChannel_SetErrorNotifier
0000000000649cd0 0000000000000028 T nvioctlChannel_SetPriority
0000000000649d00 0000000000000058 T nvioctlChannel_AllocGpfifoEx2
0000000000649d60 0000000000000028 T nvioctlNvhostAsGpu_BindChannel
0000000000649d90 0000000000000054 T nvioctlNvhostAsGpu_MapBufferEx
0000000000649df0 0000000000000028 T nvioctlNvhostAsGpu_UnmapBuffer
0000000000649e20 0000000000000044 T nvioctlNvhostAsGpu_InitializeEx
0000000000649e70 0000000000000028 T nvioctlNvhostCtrl_EventSignal
0000000000649ea0 0000000000000044 T nvioctlNvhostCtrl_EventWait
0000000000649ef0 0000000000000030 T nvioctlNvhostCtrl_EventWaitAsync
0000000000649f20 0000000000000028 T nvioctlNvhostCtrl_EventRegister
0000000000649f50 0000000000000028 T nvioctlNvhostCtrl_EventUnregister
0000000000649f80 000000000000003c T nvioctlNvhostCtrlGpu_ZCullGetCtxSize
0000000000649fc0 0000000000000050 T nvioctlNvhostCtrlGpu_ZCullGetInfo
000000000064a010 000000000000008c T nvioctlNvhostCtrlGpu_GetCharacteristics
000000000064a0a0 000000000000007c T nvioctlNvhostCtrlGpu_GetTpcMasks
000000000064a120 0000000000000040 T nvioctlNvmap_Create
000000000064a160 0000000000000040 T nvioctlNvmap_FromId
000000000064a1a0 0000000000000038 T nvioctlNvmap_Alloc
000000000064a1e0 0000000000000034 T nvioctlNvmap_Free
000000000064a220 0000000000000048 T nvioctlNvmap_Param
000000000064a270 0000000000000040 T nvioctlNvmap_GetId
000000000064a2b0 000000000000000c T nwindowGetDefault
000000000064a2c0 00000000000000b0 T __nx_win_init
000000000064a370 0000000000000034 T __nx_win_exit
000000000064a3b0 0000000000000024 T nwindowIsValid
000000000064a3e0 000000000000007c T nwindowClose
000000000064a460 00000000000000f4 T nwindowCreate
000000000064a560 0000000000000034 T nwindowCreateFromLayer
000000000064a5a0 0000000000000090 T nwindowGetDimensions
000000000064a630 0000000000000084 T nwindowSetDimensions
000000000064a6c0 0000000000000040 T nwindowSetSwapInterval
000000000064a700 000000000000018c T nwindowConfigureBuffer
000000000064a890 00000000000001e0 T nwindowDequeueBuffer
000000000064aa70 00000000000000c8 T nwindowCancelBuffer
000000000064ab40 000000000000013c T nwindowQueueBuffer
000000000064ac80 0000000000000094 T nwindowReleaseBuffers
000000000064ad20 0000000000000388 T audrvCreate
000000000064b0b0 0000000000000138 T audrvUpdate
000000000064b1f0 000000000000004c T audrvClose
000000000064b240 000000000000005c T audrvMemPoolAdd
000000000064b2a0 000000000000007c T audrvMemPoolAttach
000000000064b320 00000000000000c8 T audrvDeviceSinkAdd
000000000064b3f0 00000000000000b4 t _audrvVoiceQueueWaveBufs
000000000064b4b0 00000000000000e8 T audrvVoiceDrop
000000000064b5a0 00000000000001bc T audrvVoiceInit
000000000064b760 000000000000003c T audrvVoiceIsPlaying
000000000064b7a0 00000000000000a8 T audrvVoiceAddWaveBuf
000000000064b850 00000000000000c0 T _audrvVoiceUpdate
000000000064b910 0000000000000174 t _hidLaShow.constprop.0
000000000064ba90 0000000000000128 t _hidLaShowControllerSupportCore
000000000064bbc0 0000000000000034 T hidLaCreateControllerSupportArg
000000000064bc00 00000000000000b0 T hidLaShowControllerSupportForSystem
000000000064bcb0 0000000000000040 T libappletArgsCreate
000000000064bcf0 0000000000000008 T libappletArgsSetPlayStartupSound
000000000064bd00 0000000000000068 T libappletCreateWriteStorage
000000000064bd70 0000000000000080 T libappletReadStorage
000000000064bdf0 0000000000000048 T libappletArgsPush
000000000064be40 0000000000000038 T libappletPushInData
000000000064be80 000000000000006c T libappletPopOutData
000000000064bef0 0000000000000064 T libappletStart
000000000064bf60 00000000000000b4 t _swkbdInitVersion
000000000064c020 00000000000000e0 t _swkbdSendRequest
000000000064c100 0000000000000104 t _swkbdInlineLaunch
000000000064c210 0000000000000408 t _swkbdGetReplies
000000000064c620 0000000000000134 T swkbdInlineClose
000000000064c760 0000000000000024 T swkbdInlineLaunchForLibraryApplet
000000000064c790 0000000000000008 T swkbdInlineSetDecidedCancelCallback
000000000064c7a0 0000000000000008 T swkbdInlineSetDecidedEnterCallback
000000000064c7b0 00000000000000ec T swkbdInlineAppearEx
000000000064c8a0 0000000000000008 T swkbdInlineAppear
000000000064c8b0 0000000000000018 T swkbdInlineDisappear
000000000064c8d0 0000000000000030 T swkbdInlineMakeAppearArg
000000000064c900 000000000000003c T swkbdInlineAppearArgSetOkButtonText
000000000064c940 0000000000000060 T swkbdInlineSetInputText
000000000064c9a0 0000000000000014 T swkbdInlineSetCursorPos
000000000064c9c0 0000000000000024 T swkbdInlineSetUtf8Mode
000000000064c9f0 0000000000000114 T swkbdInlineCreate
000000000064cb10 0000000000000024 T swkbdInlineSetInputModeFadeType
000000000064cb40 0000000000000030 T swkbdInlineSetFooterBgAlpha
000000000064cb70 00000000000000d0 T swkbdInlineUpdate
000000000064cc40 0000000000000004 W __libnx_alloc
000000000064cc50 0000000000000014 W __libnx_aligned_alloc
000000000064cc70 0000000000000004 W __libnx_free
000000000064cc80 000000000000001c W diagAbortWithResult
000000000064cca0 0000000000000208 T envSetup
000000000064ceb0 0000000000000020 T envGetMainThreadHandle
000000000064ced0 000000000000000c T envIsNso
000000000064cee0 0000000000000014 T envHasHeapOverride
000000000064cf00 000000000000000c T envGetHeapOverrideAddr
000000000064cf10 000000000000000c T envGetHeapOverrideSize
000000000064cf20 0000000000000014 T envHasArgv
000000000064cf40 000000000000000c T envGetArgv
000000000064cf50 000000000000000c T envGetExitFuncPtr
000000000064cf60 000000000000000c T envSetExitFuncPtr
000000000064cf70 000000000000000c T envHasRandomSeed
000000000064cf80 0000000000000010 T envGetRandomSeed
000000000064cf90 0000000000000014 T hosversionGet
000000000064cfb0 0000000000000010 T hosversionSet
000000000064cfc0 000000000000009c T padConfigureInput
000000000064d060 0000000000000024 T padInitializeWithMask
000000000064d090 00000000000002a8 T padUpdate
000000000064d340 0000000000000008 t romfs_close
000000000064d350 0000000000000088 t romfs_seek
000000000064d3e0 000000000000001c t romfs_dirreset
000000000064d400 0000000000000100 t fillDir
000000000064d500 00000000000002b0 t romfs_dirnext
000000000064d7b0 0000000000000118 t searchForDir
000000000064d8d0 0000000000000118 t searchForFile
000000000064d9f0 0000000000000164 t _romfs_read_safe
000000000064db60 00000000000000b8 t _romfs_read
000000000064dc20 0000000000000084 t romfs_read
000000000064dcb0 00000000000000b4 t romfs_free
000000000064dd70 00000000000001f4 t navigateToDir.constprop.0
000000000064df70 00000000000000f0 t romfs_open
000000000064e060 0000000000000190 t romfs_stat
000000000064e1f0 0000000000000054 t romfs_chdir
000000000064e250 0000000000000084 t romfs_diropen
000000000064e2e0 0000000000000008 t romfs_dirclose
000000000064e2f0 000000000000017c t romfsFindMount
000000000064e470 000000000000006c t romfs_fstat
000000000064e4e0 00000000000001b4 t romfsMountCommon
000000000064e6a0 0000000000000068 T romfsMountFromFile
000000000064e710 000000000000006c T romfsMountFromStorage
000000000064e780 0000000000000038 T romfsMountFromCurrentProcess
000000000064e7c0 00000000000001a8 T romfsMountSelf
000000000064e970 00000000000000ac T romfsUnmount
000000000064ea20 000000000000007c t _socketGetFd
000000000064eaa0 00000000000000a0 t _socketParseBsdResult.part.0
000000000064eb40 00000000000000d0 T fcntl
000000000064ec10 0000000000000140 T utf16_to_utf8
000000000064ed50 000000000000010c T utf8_to_utf16
000000000064ee5c T armDCacheFlush
000000000064ee8c t armDCacheFlush_L0
000000000064eea8 T svcSetHeapSize
000000000064eebc T svcSetMemoryPermission
000000000064eec4 T svcSetMemoryAttribute
000000000064eecc T svcMapMemory
000000000064eed4 T svcUnmapMemory
000000000064eedc T svcQueryMemory
000000000064eef0 T svcExitProcess
000000000064eef8 T svcCreateThread
000000000064ef0c T svcStartThread
000000000064ef14 T svcExitThread
000000000064ef1c T svcSleepThread
000000000064ef24 T svcSetThreadPriority
000000000064ef2c T svcSetThreadCoreMask
000000000064ef34 T svcMapSharedMemory
000000000064ef3c T svcUnmapSharedMemory
000000000064ef44 T svcCreateTransferMemory
000000000064ef58 T svcCloseHandle
000000000064ef60 T svcResetSignal
000000000064ef68 T svcWaitSynchronization
000000000064ef7c T svcArbitrateLock
000000000064ef84 T svcArbitrateUnlock
000000000064ef8c T svcWaitProcessWideKeyAtomic
000000000064ef94 T svcSignalProcessWideKey
000000000064ef9c T svcConnectToNamedPort
000000000064efb0 T svcSendSyncRequest
000000000064efb8 T svcBreak
000000000064efc0 T svcOutputDebugString
000000000064efc8 T svcReturnFromException
000000000064efd0 T svcGetInfo
000000000064efe4 T svcUnmapTransferMemory
000000000064efec T __aarch64_read_tp
000000000064f000 000000000000000c T eventLoadRemote
000000000064f010 0000000000000038 T eventWait
000000000064f050 0000000000000050 T eventClose
000000000064f0a0 0000000000000014 T shmemLoadRemote
000000000064f0c0 0000000000000088 T shmemMap
000000000064f150 0000000000000034 T shmemUnmap
000000000064f190 0000000000000044 T shmemClose
000000000064f1e0 00000000000000a8 T tmemCreate
000000000064f290 0000000000000034 T tmemUnmap
000000000064f2d0 0000000000000038 T tmemCloseHandle
000000000064f310 00000000000000c8 T tmemWaitForPermission
000000000064f3e0 0000000000000054 T tmemClose
000000000064f440 0000000000000064 t _memregionInitWithInfo
000000000064f4b0 0000000000000004 W __libnx_virtmem_rng
000000000064f4c0 0000000000000164 t _memregionFindRandom
000000000064f630 0000000000000140 T virtmemSetup
000000000064f770 000000000000000c T virtmemLock
000000000064f780 000000000000000c T virtmemUnlock
000000000064f790 0000000000000050 T virtmemFindAslr
000000000064f7e0 0000000000000050 T virtmemFindStack
000000000064f830 000000000000056c T waitObjects
000000000064fda0 0000000000000108 T waitHandles
000000000064feb0 00000000000000c0 t _apmCleanup
000000000064ff70 00000000000000fc t _apmCmdGetSession.constprop.0
0000000000650070 00000000000000a0 T apmInitialize
0000000000650110 0000000000000044 T apmExit
0000000000650160 00000000000000c8 T apmSetPerformanceConfiguration
0000000000650230 000000000000017c T bsdFcntl
00000000006503b0 00000000000000b4 t _fsCleanup
0000000000650470 00000000000001ac t _fsCmdNoIO
0000000000650620 00000000000001d4 t _fsFsCmdWithInPath
0000000000650800 00000000000001f0 t _fsFsCmdWithTwoInPaths
00000000006509f0 000000000000026c t _fsFsOpenCommon
0000000000650c60 00000000000001e8 t _fsFsCmdWithInPathAndOutU64
0000000000650e50 00000000000000f4 t _fsObjectClose
0000000000650f50 000000000000017c t _fsCmdGetSession.constprop.0
00000000006510d0 00000000000002f8 T fsInitialize
00000000006513d0 0000000000000044 T fsExit
0000000000651420 0000000000000008 T fsOpenSdCardFileSystem
0000000000651430 0000000000000008 T fsOpenDataStorageByCurrentProcess
0000000000651440 00000000000001e4 T fsFsCreateFile
0000000000651630 0000000000000008 T fsFsDeleteFile
0000000000651640 0000000000000008 T fsFsCreateDirectory
0000000000651650 0000000000000008 T fsFsDeleteDirectory
0000000000651660 0000000000000008 T fsFsRenameFile
0000000000651670 0000000000000008 T fsFsRenameDirectory
0000000000651680 00000000000001e8 T fsFsGetEntryType
0000000000651870 0000000000000008 T fsFsOpenFile
0000000000651880 0000000000000008 T fsFsOpenDirectory
0000000000651890 0000000000000008 T fsFsGetFreeSpace
00000000006518a0 0000000000000008 T fsFsGetTotalSpace
00000000006518b0 0000000000000228 T fsFsGetFileTimeStampRaw
0000000000651ae0 0000000000000004 T fsFsClose
0000000000651af0 0000000000000210 T fsFileRead
0000000000651d00 00000000000001f8 T fsFileWrite
0000000000651f00 0000000000000008 T fsFileFlush
0000000000651f10 00000000000001b8 T fsFileSetSize
0000000000651f10 00000000000001b8 t fsFileSetSize.localalias
00000000006520d0 00000000000001c0 T fsFileGetSize
00000000006520d0 00000000000001c0 t fsFileGetSize.localalias
0000000000652290 0000000000000004 T fsFileClose
00000000006522a0 0000000000000004 T fsDirClose
00000000006522b0 00000000000001f8 T fsDirRead
00000000006524b0 00000000000001ec T fsStorageRead
00000000006526a0 0000000000000004 T fsStorageClose
00000000006526b0 00000000000001dc t _viCleanup
0000000000652890 0000000000000100 t _viCmdGetSessionNoParams.constprop.0
0000000000652990 00000000000000fc t _viCmdGetSession.constprop.0
0000000000652a90 0000000000000284 T viInitialize
0000000000652d20 0000000000000044 T viExit
0000000000652d70 000000000000000c T viGetSession_IHOSBinderDriverRelay
0000000000652d80 0000000000000118 T viOpenDisplay
0000000000652ea0 00000000000000f4 T viCloseDisplay
0000000000652fa0 00000000000000fc T viCloseLayer
00000000006530a0 0000000000000374 T viCreateLayer
0000000000653420 00000000000000d8 T viSetLayerScalingMode
0000000000653500 0000000000000044 T nvChannelClose
0000000000653550 0000000000000070 T nvChannelCreate
00000000006535c0 0000000000000008 T nvChannelSetPriority
00000000006535d0 000000000000001c T binderCreate
00000000006535f0 0000000000000368 T binderTransactParcel
0000000000653960 00000000000000e8 T binderConvertErrorCode
0000000000653a50 0000000000000128 T binderAdjustRefcount
0000000000653b80 0000000000000098 T binderInitSession
0000000000653c20 0000000000000068 T binderClose
0000000000653c90 000000000000015c T binderGetNativeHandle
0000000000653df0 00000000000000d8 T bqRequestBuffer
0000000000653ed0 0000000000000160 T bqDequeueBuffer
0000000000654030 00000000000000dc T bqQueueBuffer
0000000000654110 0000000000000094 T bqCancelBuffer
00000000006541b0 00000000000000e4 T bqConnect
00000000006542a0 000000000000009c T bqDisconnect
0000000000654340 000000000000017c T bqSetPreallocatedBuffer
00000000006544c0 0000000000000030 T parcelCreate
00000000006544f0 0000000000000198 T parcelTransact
0000000000654690 0000000000000088 T parcelWriteData
0000000000654720 0000000000000098 T parcelReadData
00000000006547c0 0000000000000020 T parcelWriteInt32
00000000006547e0 0000000000000020 T parcelWriteUInt32
0000000000654800 000000000000007c T parcelWriteString16
0000000000654880 0000000000000030 T parcelWriteInterfaceToken
00000000006548b0 0000000000000024 T parcelReadInt32
00000000006548e0 0000000000000068 T parcelReadFlattenedObject
0000000000654950 000000000000004c T parcelWriteFlattenedObject
00000000006549a0 0000000000000340 W argvSetup
0000000000654ce0 0000000000000168 T __nx_dynamic
0000000000654e50 00000000000000d4 W __libnx_initheap
0000000000654f30 00000000000000ec W __appInit
0000000000655020 0000000000000044 W __appExit
0000000000655070 000000000000002c W __libnx_init
00000000006550a0 000000000000001c W __libnx_exit
00000000006550c0 000000000000001c T __syscall_exit
00000000006550e0 0000000000000030 T __syscall_getreent
0000000000655110 0000000000000004 T __syscall_lock_acquire
0000000000655120 0000000000000004 T __syscall_lock_release
0000000000655130 0000000000000004 T __syscall_lock_acquire_recursive
0000000000655140 0000000000000004 T __syscall_lock_release_recursive
0000000000655150 000000000000001c T __syscall_cond_signal
0000000000655170 000000000000001c T __syscall_cond_broadcast
0000000000655190 000000000000003c T __syscall_cond_wait
00000000006551d0 0000000000000068 T __syscall_cond_wait_recursive
0000000000655240 0000000000000014 T __syscall_thread_self
0000000000655260 000000000000002c T __syscall_thread_exit
0000000000655290 0000000000000058 t __thread_entry
00000000006552f0 000000000000015c T __syscall_thread_create
0000000000655450 0000000000000058 T __syscall_thread_join
00000000006554b0 0000000000000044 T __syscall_tls_create
0000000000655500 0000000000000018 T __syscall_tls_set
0000000000655520 0000000000000004 T __syscall_tls_get
0000000000655530 0000000000000018 T __syscall_tls_delete
0000000000655550 0000000000000238 T __libnx_init_time
0000000000655790 00000000000000e8 T __syscall_clock_gettime
0000000000655880 000000000000008c T __syscall_gettod_r
0000000000655910 000000000000009c T newlibSetup
00000000006559b0 00000000000000c4 T nxlinkSetup
0000000000655a80 000000000000002c T _convert_errno
0000000000655ab0 0000000000000014 t fsdev_link
0000000000655ad0 0000000000000014 t fsdev_dirreset
0000000000655af0 0000000000000014 t fsdev_chmod
0000000000655b10 0000000000000018 t error_cmp
0000000000655b30 0000000000000020 t fsdev_dirclose
0000000000655b50 000000000000001c t fsdev_close
0000000000655b70 000000000000007c t fsdev_converttimetoutc
0000000000655bf0 00000000000000dc t fsdevFindDevice.part.0
0000000000655cd0 00000000000001d4 t fsdev_fixpath
0000000000655eb0 00000000000000a0 t _fsdevUnmountDeviceStruct.part.0
0000000000655f50 0000000000000014 t fsdev_fchmod
0000000000655f70 00000000000000fc t fsdev_diropen
0000000000656070 0000000000000100 t fsdev_statvfs
0000000000656170 000000000000007c t fsdev_fsync
00000000006561f0 00000000000000f4 t fsdev_fstat
00000000006562f0 0000000000000094 t fsdev_ftruncate
0000000000656390 00000000000001fc t fsdev_stat
0000000000656590 000000000000014c t fsdev_rename
00000000006566e0 0000000000000140 t fsdev_chdir
0000000000656820 00000000000000a4 t fsdev_rmdir
00000000006568d0 00000000000000a4 t fsdev_mkdir
0000000000656980 00000000000000a4 t fsdev_unlink
0000000000656a30 0000000000000144 t fsdev_write_safe
0000000000656b80 000000000000013c t fsdev_read_safe
0000000000656cc0 0000000000000100 t fsdev_read
0000000000656dc0 00000000000001cc t fsdev_dirnext
0000000000656f90 0000000000000124 t fsdev_write
00000000006570c0 00000000000000e0 t fsdev_seek
00000000006571a0 0000000000000250 t fsdev_open
00000000006573f0 0000000000000228 T fsdevMountDevice
0000000000657620 0000000000000040 T fsdevMountSdmc
0000000000657660 00000000000000c0 T __libnx_init_cwd
0000000000657720 0000000000000064 T fsdevUnmountAll
0000000000657790 0000000000000084 T fsdevTranslatePath
0000000000657820 0000000000000064 T decode_utf16
0000000000657890 000000000000012c T decode_utf8
00000000006579c0 0000000000000058 T encode_utf16
0000000000657a20 00000000000000d0 T encode_utf8
0000000000657af0 W __libnx_exception_entry
0000000000657b7c t __libnx_exception_entry_start
0000000000657ca4 t __libnx_exception_entry_abort
0000000000657ca8 t __libnx_exception_entry_end
0000000000657cb0 T __libnx_exception_returnentry
0000000000657cd0 0000000000000064 T condvarWaitTimeout
0000000000657d40 00000000000003c4 T randomGet
0000000000658110 0000000000000020 T randomGet64
0000000000658130 00000000000000b0 T __libnx_init_thread
00000000006581e0 00000000000002d8 T threadCreate
00000000006584c0 00000000000000a4 T threadExit
0000000000658570 00000000000000ac t _EntryWrap
0000000000658620 0000000000000008 T threadStart
0000000000658630 000000000000002c T threadWaitForExit
0000000000658660 0000000000000098 T threadClose
0000000000658700 0000000000000010 T threadTlsGet
0000000000658710 0000000000000010 T threadTlsSet
0000000000658720 00000000000000d8 T threadTlsAlloc
0000000000658800 0000000000000048 T threadTlsFree
0000000000658850 0000000000000178 T sessionmgrCreate
00000000006589d0 0000000000000084 T sessionmgrClose
0000000000658a60 00000000000000b4 T sessionmgrAttachClient
0000000000658b20 0000000000000070 T sessionmgrDetachClient
0000000000658b90 00000000000000d4 t _setsysGetFirmwareVersionImpl
0000000000658c70 0000000000000068 t _setsysCleanup
0000000000658ce0 00000000000000a0 T setsysInitialize
0000000000658d80 0000000000000044 T setsysExit
0000000000658dd0 0000000000000044 T setsysGetFirmwareVersion
0000000000658e20 0000000000000228 t _timeCleanup
0000000000659050 0000000000000100 t _timeCmdGetSession.constprop.0
0000000000659150 00000000000000cc t _timeGetSharedMemoryNativeHandle.constprop.0
0000000000659220 00000000000000c4 t _timeCmdNoInOutU64.constprop.0.isra.0
00000000006592f0 0000000000000104 t _timeReadClockFromSharedMem
0000000000659400 0000000000000238 T timeInitialize
0000000000659640 0000000000000044 T timeExit
0000000000659690 0000000000000038 T timeGetServiceSession_SystemClock
00000000006596d0 0000000000000068 T timeGetCurrentTime
0000000000659740 0000000000000110 T timeToCalendarTimeWithMyRule
0000000000659850 0000000000000104 T timeToPosixTimeWithMyRule
0000000000659960 0000000000000488 t ParseHeadersInternal
0000000000659df0 0000000000000070 t WebPParseHeaders
0000000000659e60 00000000000001e8 t DecodeInto
000000000065a050 00000000000000b0 T WebPDecodeRGBInto
000000000065a100 00000000000000b0 T WebPDecodeRGBAInto
000000000065a1b0 0000000000000040 T WebPGetFeaturesInternal
000000000065a1f0 00000000000001a0 t WebPIoInitFromOptions
000000000065a390 00000000000000ec t WebPRescalerInit
000000000065a480 0000000000000060 t WebPRescalerGetScaledDimensions
000000000065a4e0 0000000000000020 t WebPRescaleNeededLines
000000000065a500 0000000000000104 t WebPRescalerImport
000000000065a610 000000000000006c t WebPRescalerExport
000000000065a680 0000000000000160 t CheckDecBuffer
000000000065a7e0 00000000000000c0 t WebPFlipBuffer
000000000065a8a0 0000000000000250 t WebPAllocateDecBuffer
000000000065aaf0 000000000000003c T WebPInitDecBufferInternal
000000000065ab30 000000000000004c T WebPFreeDecBuffer
000000000065ab80 0000000000000090 t Dither8x8
000000000065ac10 00000000000005b4 t ReconstructRow
000000000065b1d0 00000000000006f8 t FinishRow
000000000065b8d0 0000000000000100 t VP8InitDithering
000000000065b9d0 000000000000015c t VP8ProcessRow
000000000065bb30 0000000000000248 t VP8EnterCritical
000000000065bd80 0000000000000068 t VP8ExitCritical
000000000065bdf0 0000000000000024 t VP8GetThreadMethod
000000000065be20 00000000000003b0 t VP8InitFrame
000000000065c1d0 0000000000000084 t GetAlphaSourceRow
000000000065c260 00000000000000f8 t EmitAlphaRGB
000000000065c360 00000000000000f8 t EmitAlphaRGBA4444
000000000065c460 0000000000000078 t CustomPut
000000000065c4e0 0000000000000028 t CustomTeardown
000000000065c510 0000000000000160 t EmitYUV
000000000065c670 00000000000001fc t EmitFancyRGB
000000000065c870 00000000000000e8 t EmitAlphaYUV
000000000065c960 000000000000006c t EmitSampledRGB
000000000065c9d0 0000000000000594 t CustomSetup
000000000065cf70 0000000000000178 t ExportAlpha
000000000065d0f0 0000000000000164 t ExportAlphaRGBA4444
000000000065d260 00000000000000b0 t EmitRescaledAlphaRGB
000000000065d310 00000000000001e0 t EmitRescaledRGB
000000000065d4f0 0000000000000174 t EmitRescaledAlphaYUV
000000000065d670 0000000000000170 t EmitRescaledYUV
000000000065d7e0 0000000000000024 t WebPInitCustomIo
000000000065d810 0000000000000058 t VP8Clear.part.0
000000000065d870 000000000000072c t GetLargeValue
000000000065dfa0 000000000000046c t GetCoeffsAlt
000000000065e410 0000000000000398 t GetCoeffsFast
000000000065e7b0 0000000000000038 t VP8InitIoInternal
000000000065e7f0 00000000000000b0 t VP8New
000000000065e8a0 000000000000002c t VP8Delete
000000000065e8d0 0000000000000018 t VP8SetError
000000000065e8f0 0000000000000040 T VP8CheckSignature
000000000065e930 000000000000063c t VP8GetHeaders.part.0.constprop.0
000000000065ef70 00000000000000bc T VP8GetInfo
000000000065f030 0000000000000038 t VP8GetHeaders
000000000065f070 0000000000000480 t VP8DecodeMB
000000000065f4f0 0000000000000018 t VP8InitScanline
000000000065f510 0000000000000234 t VP8Decode
000000000065f750 00000000000000d8 t ConvertToYUVA
000000000065f830 00000000000000bc t ApplyInverseTransforms
000000000065f8f0 0000000000000400 t ProcessRows
000000000065fcf0 000000000000014c t ExtractPalettedAlphaRows
000000000065fe40 0000000000000098 t ReadImageInfo.part.0
000000000065fee0 0000000000000164 t ExtractAlphaRows
0000000000660050 00000000000000b8 t VP8LClear.part.0
0000000000660110 0000000000000b04 t DecodeImageData
0000000000660c20 0000000000000490 t DecodeImageStream
00000000006610b0 0000000000000940 t ReadHuffmanCodes
00000000006619f0 0000000000000034 T VP8LCheckSignature
0000000000661a30 00000000000000c8 T VP8LGetInfo
0000000000661b00 000000000000003c t VP8LNew
0000000000661b40 000000000000002c t VP8LDelete
0000000000661b70 00000000000001b8 t VP8LDecodeAlphaHeader
0000000000661d30 0000000000000608 t VP8LDecodeAlphaImageStream
0000000000662340 00000000000000e4 t VP8LDecodeHeader
0000000000662430 00000000000001fc t VP8LDecodeImage
0000000000662630 00000000000000ac T WebPMultARGBRow_C
00000000006626e0 000000000000006c T WebPMultRow_C
0000000000662750 0000000000000030 t HasAlpha8b_C
0000000000662780 0000000000000040 t HasAlpha32b_C
00000000006627c0 000000000000004c t PackRGB_C
0000000000662810 00000000000000b8 t ApplyAlphaMultiply_16b_C
00000000006628d0 0000000000000080 t WebPMultARGBRows
0000000000662950 0000000000000094 t WebPMultRows
00000000006629f0 00000000000000c8 t WebPInitAlphaProcessing
0000000000662ac0 000000000000000c t armCPUInfo
0000000000662ad0 000000000000004c t TransformUV_C
0000000000662b20 0000000000000094 t TransformDCUV_C
0000000000662bc0 000000000000007c t HE4_C
0000000000662c40 00000000000000f4 t VR4_C
0000000000662d40 00000000000000f4 t VL4_C
0000000000662e40 00000000000000a4 t HU4_C
0000000000662ef0 00000000000000f4 t HD4_C
0000000000662ff0 000000000000005c t DitherCombine8x8_C
0000000000663050 00000000000000dc t VP8DspInit
0000000000663130 0000000000000004 t VP8InitClipTables
0000000000663140 00000000000000a8 t GradientUnfilter_C
00000000006631f0 0000000000000088 t VP8FiltersInit
0000000000663280 0000000000000008 t Predictor0_C
0000000000663290 0000000000000004 t Predictor1_C
00000000006632a0 0000000000000008 t Predictor2_C
00000000006632b0 0000000000000008 t Predictor3_C
00000000006632c0 0000000000000008 t Predictor4_C
00000000006632d0 0000000000000030 t Predictor5_C
0000000000663300 000000000000001c t Predictor6_C
0000000000663320 000000000000001c t Predictor7_C
0000000000663340 000000000000001c t Predictor8_C
0000000000663360 000000000000001c t Predictor9_C
0000000000663380 0000000000000048 t Predictor10_C
00000000006633d0 0000000000000098 t Predictor11_C
0000000000663470 0000000000000098 t Predictor12_C
0000000000663510 00000000000000b8 t Predictor13_C
00000000006635d0 0000000000000038 t PredictorAdd0_C
0000000000663610 000000000000004c t PredictorAdd1_C
0000000000663660 0000000000000050 t PredictorAdd2_C
00000000006636b0 0000000000000050 t PredictorAdd3_C
0000000000663700 0000000000000050 t PredictorAdd4_C
0000000000663750 0000000000000070 t PredictorAdd6_C
00000000006637c0 0000000000000068 t PredictorAdd7_C
0000000000663830 0000000000000068 t PredictorAdd8_C
00000000006638a0 0000000000000068 t PredictorAdd9_C
0000000000663910 000000000000005c t MapARGB_C
0000000000663970 0000000000000054 t MapAlpha_C
00000000006639d0 0000000000000040 T VP8LConvertBGRAToRGBA4444_C
0000000000663a10 0000000000000048 T VP8LConvertBGRAToRGB565_C
0000000000663a60 00000000000000c0 t ColorIndexInverseTransform_C.isra.0
0000000000663b20 00000000000000a0 t PredictorAdd10_C
0000000000663bc0 0000000000000088 t PredictorAdd5_C
0000000000663c50 0000000000000100 t PredictorAdd11_C
0000000000663d50 00000000000000f0 t PredictorAdd12_C
0000000000663e40 000000000000010c t PredictorAdd13_C
0000000000663f50 0000000000000044 t VP8LAddGreenToBlueAndRed_C
0000000000663fa0 000000000000006c t VP8LTransformColorInverse_C
0000000000664010 00000000000000c0 t VP8LColorIndexInverseTransformAlpha
00000000006640d0 00000000000004ec t VP8LInverseTransform
00000000006645c0 0000000000000038 t VP8LConvertBGRAToRGB_C
0000000000664600 0000000000000040 t VP8LConvertBGRAToRGBA_C
0000000000664640 0000000000000038 t VP8LConvertBGRAToBGR_C
0000000000664680 0000000000000240 t VP8LConvertFromBGRA
00000000006648c0 0000000000000238 t VP8LDspInit
0000000000664b00 00000000000000c0 T WebPRescalerImportRowExpand_C
0000000000664bc0 00000000000000cc T WebPRescalerImportRowShrink_C
0000000000664c90 0000000000000028 t WebPRescalerImportRow
0000000000664cc0 00000000000000d8 t WebPRescalerExportRow
0000000000664da0 0000000000000088 t WebPRescalerDspInit
0000000000664e30 000000000000013c T WebPYuv444ToRgb565_C
0000000000664f70 00000000000000d8 T WebPYuv444ToBgr_C
0000000000665050 00000000000000d8 T WebPYuv444ToRgb_C
0000000000665130 00000000000000ec T WebPYuv444ToBgra_C
0000000000665220 00000000000000ec T WebPYuv444ToRgba_C
0000000000665310 00000000000000ec T WebPYuv444ToArgb_C
0000000000665400 0000000000000150 T WebPYuv444ToRgba4444_C
0000000000665550 00000000000000b4 t WebPInitYUV444Converters
0000000000665610 0000000000000068 t WebPInitUpsamplers
0000000000665680 0000000000000050 t ConvertARGBToY_C
00000000006656d0 0000000000000054 t ConvertRGB24ToY_C
0000000000665730 0000000000000050 t ConvertBGR24ToY_C
0000000000665780 00000000000000a8 T WebPConvertRGBA32ToUV_C
0000000000665830 0000000000000198 t WebPConvertARGBToUV_C
00000000006659d0 000000000000030c t YuvToRgb565Row
0000000000665ce0 0000000000000300 t YuvToRgba4444Row
0000000000665fe0 0000000000000298 t YuvToBgraRow
0000000000666280 000000000000029c t YuvToArgbRow
0000000000666520 00000000000002a0 t YuvToBgrRow
00000000006667c0 00000000000002a0 t YuvToRgbRow
0000000000666a60 000000000000029c t YuvToRgbaRow
0000000000666d00 00000000000000dc t WebPSamplerProcessPlane
0000000000666de0 00000000000000b4 t WebPInitSamplers
0000000000666ea0 00000000000000bc t WebPInitConvertARGBToYUV
0000000000666f60 0000000000000074 t ExtractGreen_NEON
0000000000666fe0 00000000000000d8 t ExtractAlpha_NEON
00000000006670c0 00000000000000e8 t DispatchAlpha_NEON
00000000006671b0 00000000000000b0 t DispatchAlphaToGreen_NEON
0000000000667260 000000000000019c t ApplyAlphaMultiply_NEON
0000000000667400 0000000000000068 t WebPInitAlphaProcessingNEON
0000000000667470 0000000000000050 t DC4_NEON
00000000006674c0 0000000000000018 t DC8uvNoTopLeft_NEON
00000000006674e0 0000000000000020 t VE8uv_NEON
0000000000667500 0000000000000020 t HE8uv_NEON
0000000000667520 0000000000000020 t VE16_NEON
0000000000667540 0000000000000020 t HE16_NEON
0000000000667560 0000000000000018 t DC16NoTopLeft_NEON
0000000000667580 000000000000009c t TM16_NEON
0000000000667620 0000000000000028 t VE4_NEON
0000000000667650 0000000000000040 t LD4_NEON
0000000000667690 0000000000000070 t RD4_NEON
0000000000667700 00000000000000f8 t Load4x8_NEON
0000000000667800 00000000000000ac t DoFilter4_NEON
00000000006678b0 000000000000010c t DoFilter6_NEON
00000000006679c0 00000000000001ac t VFilter8_NEON
0000000000667b70 0000000000000134 t TransformWHT_NEON
0000000000667cb0 0000000000000098 t SimpleVFilter16_NEON
0000000000667d50 000000000000002c t SimpleVFilter16i_NEON
0000000000667d80 0000000000000078 t TM8uv_NEON
0000000000667e00 0000000000000064 t TM4_NEON
0000000000667e70 0000000000000078 t DC8uv_NEON
0000000000667ef0 00000000000000e0 t DC16TopLeft_NEON
0000000000667fd0 0000000000000038 t DC8uvNoLeft_NEON
0000000000668010 0000000000000040 t DC16NoLeft_NEON
0000000000668050 0000000000000060 t DC8uvNoTop_NEON
00000000006680b0 000000000000005c t TransformDC_NEON
0000000000668110 0000000000000144 t Store2x16_NEON
0000000000668260 00000000000000e4 t TransformAC3_NEON
0000000000668350 000000000000011c t VFilter16i_NEON
0000000000668470 000000000000028c t TransformTwo_NEON
0000000000668700 0000000000000490 t HFilter16i_NEON
0000000000668b90 0000000000000550 t HFilter8_NEON
00000000006690e0 00000000000000b8 t DC16NoTop_NEON
00000000006691a0 0000000000000100 t VFilter16_NEON
00000000006692a0 000000000000021c t SimpleHFilter16_NEON
00000000006694c0 000000000000004c t SimpleHFilter16i_NEON
0000000000669510 0000000000000410 t HFilter8i_NEON
0000000000669920 0000000000000180 t VFilter8i_NEON
0000000000669aa0 00000000000001a4 t HFilter16_NEON
0000000000669c50 000000000000025c t VP8DspInitNEON
0000000000669eb0 0000000000000080 t PredictLine_NEON
0000000000669f30 00000000000000d0 t HorizontalUnfilter_NEON
000000000066a000 0000000000000094 t VerticalUnfilter_NEON
000000000066a0a0 000000000000016c t GradientFilter_NEON
000000000066a210 0000000000000074 t VerticalFilter_NEON
000000000066a290 0000000000000098 t HorizontalFilter_NEON
000000000066a330 0000000000000048 t VP8FiltersInitNEON
000000000066a380 0000000000000108 t TransformColorInverse_NEON
000000000066a490 0000000000000068 t AddGreenToBlueAndRed_NEON
000000000066a500 000000000000005c t ConvertBGRAToRGB_NEON
000000000066a560 000000000000005c t ConvertBGRAToBGR_NEON
000000000066a5c0 0000000000000050 t ConvertBGRAToRGBA_NEON
000000000066a610 000000000000006c t PredictorAdd0_NEON
000000000066a680 0000000000000070 t PredictorAdd2_NEON
000000000066a6f0 0000000000000070 t PredictorAdd3_NEON
000000000066a760 0000000000000070 t PredictorAdd4_NEON
000000000066a7d0 0000000000000078 t PredictorAdd8_NEON
000000000066a850 0000000000000078 t PredictorAdd9_NEON
000000000066a8d0 0000000000000084 t PredictorAdd1_NEON
000000000066a960 00000000000000d4 t PredictorAdd5_NEON
000000000066aa40 00000000000000c0 t PredictorAdd6_NEON
000000000066ab00 00000000000000c0 t PredictorAdd7_NEON
000000000066abc0 00000000000000e0 t PredictorAdd10_NEON
000000000066aca0 0000000000000148 t PredictorAdd13_NEON
000000000066adf0 00000000000000f0 t PredictorAdd12_NEON
000000000066aee0 0000000000000118 t PredictorAdd11_NEON
000000000066b000 0000000000000020 t Predictor5_NEON
000000000066b020 0000000000000018 t Predictor6_NEON
000000000066b040 0000000000000014 t Predictor7_NEON
000000000066b060 0000000000000034 t Predictor13_NEON
000000000066b0a0 0000000000000148 t VP8LDspInitNEON
000000000066b1f0 000000000000019c t RescalerExportRowShrink_NEON
000000000066b390 00000000000001c8 t RescalerExportRowExpand_NEON
000000000066b560 000000000000002c t WebPRescalerDspInitNEON
000000000066b590 0000000000000064 t Upsample16Pixels_NEON
000000000066b600 000000000000087c t UpsampleRgba4444LinePair_NEON
000000000066be80 0000000000000878 t UpsampleRgb565LinePair_NEON
000000000066c700 000000000000078c t UpsampleBgraLinePair_NEON
000000000066ce90 000000000000075c t UpsampleBgrLinePair_NEON
000000000066d5f0 00000000000007a8 t UpsampleArgbLinePair_NEON
000000000066dda0 0000000000000754 t UpsampleRgbLinePair_NEON
000000000066e500 0000000000000784 t UpsampleRgbaLinePair_NEON
000000000066ec90 000000000000005c t WebPInitUpsamplersNEON
000000000066ecf0 0000000000000158 t ConvertARGBToUV_NEON
000000000066ee50 000000000000005c t ConvertRGBToY_NEON
000000000066eeb0 00000000000000bc t ConvertARGBToY_NEON
000000000066ef70 00000000000000c4 t ConvertRGB24ToY_NEON
000000000066f040 00000000000000c0 t ConvertBGR24ToY_NEON
000000000066f100 00000000000000a8 t SharpYUVUpdateRGB_NEON
000000000066f1b0 0000000000000184 t SharpYUVFilterRow_NEON
000000000066f340 00000000000000fc t SharpYUVUpdateY_NEON
000000000066f440 0000000000000198 t ConvertRGBA32ToUV_NEON
000000000066f5e0 0000000000000068 t WebPInitConvertARGBToYUVNEON
000000000066f650 0000000000000040 t WebPInitSharpYUVNEON
000000000066f690 0000000000000074 t ShiftBytes
000000000066f710 0000000000000088 t VP8InitBitReader
000000000066f7a0 0000000000000068 t VP8LoadFinalBytes
000000000066f810 00000000000000dc t VP8GetValue
000000000066f8f0 0000000000000030 t VP8GetSignedValue
000000000066f920 0000000000000050 t VP8LInitBitReader
000000000066f970 0000000000000048 t VP8LDoFillBitWindow
000000000066f9c0 0000000000000064 t VP8LReadBits
000000000066fa30 0000000000000068 t VP8LColorCacheInit
000000000066faa0 0000000000000030 t VP8LColorCacheClear
000000000066fad0 000000000000001c t VP8LColorCacheCopy
000000000066faf0 0000000000000444 t BuildHuffmanTable
000000000066ff40 000000000000000c t VP8LHtreeGroupsNew
000000000066ff50 000000000000000c t VP8LHtreeGroupsFree
000000000066ff60 00000000000000c4 t VP8LBuildHuffmanTable
0000000000670030 000000000000007c t VP8InitRandom
00000000006700b0 0000000000000044 t Execute
0000000000670100 0000000000000010 t Init
0000000000670110 0000000000000074 t Sync
0000000000670190 000000000000017c t Reset
0000000000670310 0000000000000080 t Launch
0000000000670390 0000000000000098 t End
0000000000670430 000000000000000c T WebPGetWorkerInterface
0000000000670440 00000000000000bc t ThreadLoop
0000000000670500 0000000000000024 T WebPSafeMalloc
0000000000670530 0000000000000020 T WebPSafeCalloc
0000000000670550 0000000000000004 T WebPSafeFree
0000000000670560 000000000000004c t WebPDeallocateAlphaMemory
00000000006705b0 00000000000003f8 t VP8DecompressAlphaRows
00000000006709b0 0000000000000278 t VP8ParseQuant
0000000000670c30 0000000000000010 t VP8ResetProba
0000000000670c40 0000000000000ef8 t VP8ParseIntraModeRow
0000000000671b40 0000000000000260 t VP8ParseProba
0000000000671da0 00000000000005c8 t WebPDequantizeLevels
0000000000672370 0000000000000010 t default_bzfree
0000000000672380 000000000000000c t default_bzalloc
0000000000672390 00000000000000f0 T BZ2_bzDecompressInit
0000000000672480 0000000000000038 T BZ2_indexIntoF
00000000006724c0 0000000000000e6c T BZ2_bzDecompress
0000000000673330 0000000000000088 T BZ2_bzDecompressEnd
00000000006733c0 000000000000000c T BZ2_bzlibVersion
00000000006733d0 0000000000000064 T BZ2_bz__AssertH__fail
0000000000673440 0000000000002a3c T BZ2_decompress
0000000000675e80 0000000000000158 T BZ2_hbCreateDecodeTables
0000000000675fe0 0000000000000028 t hb_buffer_t::assert_unicode() [clone .part.0]
0000000000676010 0000000000000054 T hb_segment_properties_equal
0000000000676070 000000000000005c T hb_segment_properties_overlay
00000000006760d0 000000000000017c t hb_buffer_t::enlarge(unsigned int)
0000000000676250 00000000000000c4 t hb_buffer_t::make_room_for(unsigned int, unsigned int)
0000000000676320 00000000000000f4 t hb_buffer_t::shift_forward(unsigned int)
0000000000676420 0000000000000034 t hb_buffer_t::clear()
0000000000676460 000000000000004c t hb_buffer_t::enter()
00000000006764b0 0000000000000014 t hb_buffer_t::leave()
00000000006764d0 0000000000000084 t hb_buffer_t::add(unsigned int, unsigned int)
0000000000676560 000000000000001c t hb_buffer_t::clear_output()
0000000000676580 0000000000000038 t hb_buffer_t::clear_positions()
00000000006765c0 0000000000000134 t hb_buffer_t::sync()
0000000000676700 0000000000000080 t hb_buffer_t::sync_so_far()
0000000000676780 0000000000000194 t hb_buffer_t::move_to(unsigned int)
0000000000676920 0000000000000060 t hb_buffer_t::set_masks(unsigned int, unsigned int, unsigned int, unsigned int)
0000000000676980 00000000000002a0 t hb_buffer_t::merge_clusters_impl(unsigned int, unsigned int)
0000000000676c20 00000000000001a4 t hb_buffer_t::merge_out_clusters(unsigned int, unsigned int)
0000000000676dd0 00000000000000e4 t hb_buffer_t::delete_glyph()
0000000000676ec0 00000000000001d0 t hb_buffer_t::delete_glyphs_inplace(bool (*)(hb_glyph_info_t const*))
0000000000677090 000000000000000c T hb_buffer_get_empty
00000000006770a0 000000000000008c T hb_buffer_create
0000000000677130 0000000000000054 T hb_buffer_create_similar
0000000000677190 0000000000000180 T hb_buffer_destroy
0000000000677310 0000000000000014 T hb_buffer_set_direction
0000000000677330 0000000000000008 T hb_buffer_get_direction
0000000000677340 0000000000000014 T hb_buffer_set_script
0000000000677360 0000000000000018 T hb_buffer_set_segment_properties
0000000000677380 000000000000000c T hb_buffer_get_segment_properties
0000000000677390 0000000000000014 T hb_buffer_set_flags
00000000006773b0 0000000000000008 T hb_buffer_get_flags
00000000006773c0 0000000000000014 T hb_buffer_clear_contents
00000000006773e0 00000000000000f4 T hb_buffer_set_length
00000000006774e0 0000000000000014 T hb_buffer_get_glyph_infos
0000000000677500 0000000000000074 T hb_buffer_get_glyph_positions
0000000000677580 00000000000000ec T hb_buffer_reverse
0000000000677670 00000000000005d4 T hb_buffer_add_utf8
0000000000677c50 000000000000038c T hb_buffer_append
0000000000677fe0 000000000000014c t hb_buffer_t::sort(unsigned int, unsigned int, int (*)(hb_glyph_info_t const*, hb_glyph_info_t const*))
0000000000678130 00000000000001ec T hb_buffer_diff
0000000000678320 00000000000000bc t hb_buffer_t::message_impl(hb_font_t*, char const*, std::__va_list)
00000000006783e0 0000000000000160 t lang_find_or_insert(char const*)
0000000000678540 00000000000000d4 t _hb_options_init()
0000000000678620 00000000000000a4 T hb_tag_from_string
00000000006786d0 0000000000000084 T hb_language_from_string
0000000000678760 0000000000000004 T hb_language_to_string
0000000000678770 00000000000000ac T hb_language_matches
0000000000678820 0000000000000314 T hb_script_get_horizontal_direction
0000000000678b40 000000000000000c t hb_font_get_nominal_glyph_nil(hb_font_t*, void*, unsigned int, unsigned int*, void*)
0000000000678b50 000000000000000c t hb_font_get_variation_glyph_nil(hb_font_t*, void*, unsigned int, unsigned int, unsigned int*, void*)
0000000000678b60 0000000000000008 t hb_font_get_glyph_h_advance_nil(hb_font_t*, void*, unsigned int, void*)
0000000000678b70 0000000000000008 t hb_font_get_glyph_v_advance_nil(hb_font_t*, void*, unsigned int, void*)
0000000000678b80 0000000000000010 t hb_font_get_glyph_h_origin_nil(hb_font_t*, void*, unsigned int, int*, int*, void*)
0000000000678b90 0000000000000010 t hb_font_get_glyph_v_origin_nil(hb_font_t*, void*, unsigned int, int*, int*, void*)
0000000000678ba0 0000000000000008 t hb_font_get_glyph_h_kerning_nil(hb_font_t*, void*, unsigned int, unsigned int, void*)
0000000000678bb0 0000000000000010 t hb_font_get_glyph_contour_point_nil(hb_font_t*, void*, unsigned int, unsigned int, int*, int*, void*)
0000000000678bc0 0000000000000010 t hb_font_get_glyph_name_nil(hb_font_t*, void*, unsigned int, char*, unsigned int, void*)
0000000000678bd0 000000000000000c t hb_font_get_glyph_from_name_nil(hb_font_t*, void*, char const*, int, unsigned int*, void*)
0000000000678be0 0000000000000004 t hb_font_draw_glyph_nil(hb_font_t*, void*, unsigned int, hb_draw_funcs_t*, void*, void*)
0000000000678bf0 0000000000000004 t hb_font_paint_glyph_nil(hb_font_t*, void*, unsigned int, hb_paint_funcs_t*, void*, unsigned int, unsigned int, void*)
0000000000678c00 0000000000000034 t hb_draw_move_to_default(hb_draw_funcs_t*, void*, hb_draw_state_t*, float, float, void*)
0000000000678c40 0000000000000048 t hb_draw_line_to_default(hb_draw_funcs_t*, void*, hb_draw_state_t*, float, float, void*)
0000000000678c90 0000000000000054 t hb_draw_quadratic_to_default(hb_draw_funcs_t*, void*, hb_draw_state_t*, float, float, float, float, void*)
0000000000678cf0 0000000000000060 t hb_draw_cubic_to_default(hb_draw_funcs_t*, void*, hb_draw_state_t*, float, float, float, float, float, float, void*)
0000000000678d50 0000000000000018 t hb_draw_close_path_default(hb_draw_funcs_t*, void*, hb_draw_state_t*, void*)
0000000000678d70 00000000000000a0 t hb_font_draw_glyph_default(hb_font_t*, void*, unsigned int, hb_draw_funcs_t*, void*, void*)
0000000000678e10 0000000000000110 t hb_font_paint_glyph_default(hb_font_t*, void*, unsigned int, hb_paint_funcs_t*, void*, unsigned int, unsigned int, void*)
0000000000678f20 000000000000000c t hb_font_get_glyph_extents_nil(hb_font_t*, void*, unsigned int, hb_glyph_extents_t*, void*)
0000000000678f30 0000000000000014 t hb_font_get_font_h_extents_nil(hb_font_t*, void*, hb_font_extents_t*, void*)
0000000000678f50 000000000000008c t _hb_font_funcs_set_middle(hb_font_funcs_t*, void*, void (*)(void*))
0000000000678fe0 00000000000000fc t hb_font_get_glyph_extents_default(hb_font_t*, void*, unsigned int, hb_glyph_extents_t*, void*)
00000000006790e0 0000000000000008 t hb_font_get_glyph_v_kerning_nil(hb_font_t*, void*, unsigned int, unsigned int, void*)
00000000006790f0 0000000000000070 t _hb_font_funcs_set_preamble(hb_font_funcs_t*, bool, void**, void (**)(void*))
0000000000679160 0000000000000014 t hb_font_get_font_v_extents_nil(hb_font_t*, void*, hb_font_extents_t*, void*)
0000000000679180 0000000000000024 t hb_font_get_variation_glyph_default(hb_font_t*, void*, unsigned int, unsigned int, unsigned int*, void*)
00000000006791b0 00000000000000f8 t hb_font_get_nominal_glyphs_default(hb_font_t*, void*, unsigned int, unsigned int const*, unsigned int, unsigned int*, unsigned int, void*)
00000000006792b0 0000000000000060 t hb_font_get_glyph_v_kerning_default(hb_font_t*, void*, unsigned int, unsigned int, void*)
0000000000679310 0000000000000060 t hb_font_get_glyph_h_kerning_default(hb_font_t*, void*, unsigned int, unsigned int, void*)
0000000000679370 0000000000000124 t hb_font_get_glyph_h_advances_default(hb_font_t*, void*, unsigned int, unsigned int const*, unsigned int, int*, unsigned int, void*)
00000000006794a0 0000000000000028 t hb_font_get_glyph_name_default(hb_font_t*, void*, unsigned int, char*, unsigned int, void*)
00000000006794d0 00000000000000e4 t void hb_object_fini<hb_font_funcs_t>(hb_font_funcs_t*)
00000000006794d0 00000000000000e4 t void hb_object_fini<hb_font_t>(hb_font_t*)
00000000006795c0 0000000000000058 t hb_font_get_glyph_from_name_default(hb_font_t*, void*, char const*, int, unsigned int*, void*)
0000000000679620 0000000000000098 t hb_font_get_font_v_extents_default(hb_font_t*, void*, hb_font_extents_t*, void*)
00000000006796c0 0000000000000098 t hb_font_get_font_h_extents_default(hb_font_t*, void*, hb_font_extents_t*, void*)
0000000000679760 00000000000000ac t hb_font_get_glyph_v_advance_default(hb_font_t*, void*, unsigned int, void*)
0000000000679810 0000000000000124 t hb_font_get_glyph_v_advances_default(hb_font_t*, void*, unsigned int, unsigned int const*, unsigned int, int*, unsigned int, void*)
0000000000679940 00000000000000ac t hb_font_get_glyph_h_advance_default(hb_font_t*, void*, unsigned int, void*)
00000000006799f0 0000000000000080 t hb_font_get_nominal_glyph_default(hb_font_t*, void*, unsigned int, unsigned int*, void*)
0000000000679a70 00000000000000d4 t hb_font_get_glyph_v_origin_default(hb_font_t*, void*, unsigned int, int*, int*, void*)
0000000000679b50 00000000000000d4 t hb_font_get_glyph_h_origin_default(hb_font_t*, void*, unsigned int, int*, int*, void*)
0000000000679c30 00000000000000d4 t hb_font_get_glyph_contour_point_default(hb_font_t*, void*, unsigned int, unsigned int, int*, int*, void*)
0000000000679d10 0000000000000124 t hb_font_t::mults_changed()
0000000000679e40 000000000000014c t OT::VarRegionList::evaluate(unsigned int, int const*, unsigned int, float*) const
0000000000679f90 0000000000000210 t OT::VarData::get_delta(unsigned int, int const*, unsigned int, OT::VarRegionList const&, float*) const
000000000067a1a0 00000000000001ac t OT::SegmentMaps::map(int, unsigned int, unsigned int) const
000000000067a350 0000000000000450 t OT::avar::map_coords(int*, unsigned int) const
000000000067a7a0 000000000000018c t OT::fvar::sanitize(hb_sanitize_context_t*) const
000000000067a930 000000000000000c T hb_font_funcs_get_empty
000000000067a940 0000000000000088 T hb_font_funcs_create
000000000067a9d0 0000000000000058 T hb_font_funcs_reference
000000000067aa30 00000000000002ac T hb_font_funcs_destroy
000000000067ace0 0000000000000018 T hb_font_funcs_make_immutable
000000000067ad00 00000000000000c0 T hb_font_funcs_set_font_h_extents_func
000000000067adc0 00000000000000c0 T hb_font_funcs_set_font_v_extents_func
000000000067ae80 00000000000000c0 T hb_font_funcs_set_nominal_glyph_func
000000000067af40 00000000000000c0 T hb_font_funcs_set_nominal_glyphs_func
000000000067b000 00000000000000c0 T hb_font_funcs_set_variation_glyph_func
000000000067b0c0 00000000000000c0 T hb_font_funcs_set_glyph_v_advance_func
000000000067b180 00000000000000c0 T hb_font_funcs_set_glyph_h_advances_func
000000000067b240 00000000000000c0 T hb_font_funcs_set_glyph_v_advances_func
000000000067b300 00000000000000c0 T hb_font_funcs_set_glyph_v_origin_func
000000000067b3c0 00000000000000c0 T hb_font_funcs_set_glyph_h_kerning_func
000000000067b480 00000000000000c0 T hb_font_funcs_set_glyph_extents_func
000000000067b540 00000000000000c0 T hb_font_funcs_set_glyph_contour_point_func
000000000067b600 00000000000000c0 T hb_font_funcs_set_glyph_name_func
000000000067b6c0 00000000000000c0 T hb_font_funcs_set_glyph_from_name_func
000000000067b780 00000000000000c0 T hb_font_funcs_set_draw_glyph_func
000000000067b840 00000000000000c0 T hb_font_funcs_set_paint_glyph_func
000000000067b900 0000000000000084 t hb_font_t::has_func(unsigned int)
000000000067b990 0000000000000054 T hb_font_get_glyph
000000000067b9f0 0000000000000028 T hb_font_get_nominal_glyph
000000000067ba20 0000000000000020 T hb_font_get_glyph_h_advance
000000000067ba40 0000000000000028 T hb_font_get_glyph_extents
000000000067ba70 000000000000002c T hb_font_draw_glyph
000000000067baa0 000000000000000c T hb_font_get_empty
000000000067bab0 00000000000000d8 t _hb_font_create(hb_face_t*)
000000000067bb90 00000000000000e4 T hb_font_destroy
000000000067bc80 0000000000000008 T hb_font_get_face
000000000067bc90 000000000000009c T hb_font_set_funcs
000000000067bd30 000000000000003c T hb_font_set_scale
000000000067bd70 0000000000000118 t bool OT::OffsetTo<OT::VarRegionList, OT::IntType<unsigned int, 4u>, true>::sanitize<>(hb_sanitize_context_t*, void const*) const
000000000067be90 0000000000000270 t bool OT::ArrayOf<OT::OffsetTo<OT::VarData, OT::IntType<unsigned int, 4u>, true>, OT::IntType<unsigned short, 2u> >::sanitize<OT::VariationStore const*>(hb_sanitize_context_t*, OT::VariationStore const*&&) const
000000000067c100 0000000000000118 t bool OT::OffsetTo<OT::VariationStore, OT::IntType<unsigned int, 4u>, true>::sanitize<>(hb_sanitize_context_t*, void const*) const
000000000067c220 000000000000016c t OT::avarV2Tail::sanitize(hb_sanitize_context_t*, void const*) const
000000000067c390 000000000000015c t OT::avar::sanitize(hb_sanitize_context_t*) const
000000000067c4f0 00000000000001b4 t hb_lazy_loader_t<OT::fvar, hb_table_lazy_loader_t<OT::fvar, 18u, true>, hb_face_t, 18u, hb_blob_t>::get() const
000000000067c6b0 0000000000000278 t hb_lazy_loader_t<OT::avar, hb_table_lazy_loader_t<OT::avar, 19u, true>, hb_face_t, 19u, hb_blob_t>::get() const
000000000067c930 0000000000000450 T hb_font_set_var_coords_normalized
000000000067cd80 000000000000022c T hb_font_set_variations
000000000067cfb0 000000000000003c T hb_font_set_var_named_instance
000000000067cff0 0000000000000054 T hb_font_create
000000000067d050 0000000000000344 t hb_parse_double(char const**, char const*, double*, bool)
000000000067d3a0 0000000000000008 W OT::ColorLine<OT::NoVariable>::static_get_extend(hb_color_line_t*, void*, void*)
000000000067d3b0 0000000000000008 W OT::ColorLine<OT::Variable>::static_get_extend(hb_color_line_t*, void*, void*)
000000000067d3c0 000000000000002c t _hb_ot_font_destroy(void*)
000000000067d3f0 0000000000000040 W OT::cff1::accelerator_t::gname_t::cmp(void const*, void const*)
000000000067d430 0000000000000078 t hb_ot_get_font_v_extents(hb_font_t*, void*, hb_font_extents_t*, void*)
000000000067d4b0 000000000000008c t hb_ot_get_font_h_extents(hb_font_t*, void*, hb_font_extents_t*, void*)
000000000067d540 0000000000000030 t int _hb_cmp_method<unsigned int, OT::CmapSubtableLongGroup const>(void const*, void const*)
000000000067d570 0000000000000028 t CFF::CFFIndex<OT::IntType<unsigned short, 2u> >::offset_at(unsigned int) const [clone .part.0]
000000000067d5a0 0000000000000028 t CFF::CFFIndex<OT::IntType<unsigned int, 4u> >::offset_at(unsigned int) const [clone .part.0]
000000000067d5d0 00000000000000b4 W bool OT::cmap::accelerator_t::get_glyph_from<OT::CmapSubtableFormat12>(void const*, unsigned int, unsigned int*)
000000000067d690 000000000000040c t void sort_r_simple<>(void*, unsigned long, unsigned long, int (*)(void const*, void const*)) [clone .constprop.0]
000000000067daa0 0000000000000dd0 t void sort_r_simple<void*>(void*, unsigned long, unsigned long, int (*)(void const*, void const*, void*), void*) [clone .constprop.0]
000000000067e870 000000000000004c t hb_sanitize_context_t::check_range(void const*, unsigned int) const
000000000067e8c0 00000000000000f4 t hb_font_t::scale_glyph_extents(hb_glyph_extents_t*)
000000000067e9c0 0000000000000160 t OT::glyf_impl::Glyph::get_extents_without_var_scaled(hb_font_t*, OT::glyf_accelerator_t const&, hb_glyph_extents_t*) const [clone .part.0] [clone .isra.0]
000000000067eb20 00000000000000c4 t hb_draw_session_t::line_to(float, float)
000000000067ebf0 00000000000000e4 t hb_draw_session_t::quadratic_to(float, float, float, float)
000000000067ece0 00000000000000f0 t hb_draw_session_t::cubic_to(float, float, float, float, float, float)
000000000067edd0 000000000000010c t OT::OS2::sanitize(hb_sanitize_context_t*) const
000000000067eee0 00000000000000f0 t OT::CmapSubtableFormat4::accelerator_t::get_glyph(unsigned int, unsigned int*) const
000000000067efd0 0000000000000004 W OT::CmapSubtableFormat4::accelerator_t::get_glyph_func(void const*, unsigned int, unsigned int*)
000000000067efe0 0000000000000144 t OT::VariationSelectorRecord::get_glyph(unsigned int, unsigned int*, void const*) const
000000000067f130 0000000000000298 t OT::CmapSubtable::get_glyph(unsigned int, unsigned int*) const
000000000067f3d0 0000000000000004 W bool OT::cmap::accelerator_t::get_glyph_from<OT::CmapSubtable>(void const*, unsigned int, unsigned int*)
000000000067f3e0 00000000000000d4 t bool OT::cmap::accelerator_t::get_glyph_from_symbol<OT::CmapSubtable, &(_hb_arabic_pua_trad_map(unsigned int))>(void const*, unsigned int, unsigned int*)
000000000067f4c0 00000000000000c8 t bool OT::cmap::accelerator_t::get_glyph_from_symbol<OT::CmapSubtable, &(_hb_arabic_pua_simp_map(unsigned int))>(void const*, unsigned int, unsigned int*)
000000000067f590 000000000000005c t bool OT::cmap::accelerator_t::get_glyph_from_symbol<OT::CmapSubtable, &OT::_hb_symbol_pua_map>(void const*, unsigned int, unsigned int*)
000000000067f5f0 00000000000000b8 t OT::cmap::find_subtable(unsigned int, unsigned int) const
000000000067f6b0 0000000000000198 t OT::VarStoreInstancer::operator()(unsigned int, unsigned short) const
000000000067f850 00000000000001f4 W OT::ColorLine<OT::Variable>::static_get_color_stops(hb_color_line_t*, void*, unsigned int, unsigned int*, hb_color_stop_t*, void*)
000000000067fa50 00000000000001e8 W OT::ColorLine<OT::NoVariable>::static_get_color_stops(hb_color_line_t*, void*, unsigned int, unsigned int*, hb_color_stop_t*, void*)
000000000067fc40 00000000000001cc t OT::TupleVariationData::unpack_points(OT::IntType<unsigned char, 1u> const*&, hb_vector_t<unsigned int, false>&, OT::IntType<unsigned char, 1u> const*)
000000000067fe10 000000000000109c t OT::gvar::accelerator_t::apply_deltas_to_points(unsigned int, hb_array_t<int>, hb_array_t<OT::contour_point_t>) const [clone .isra.0]
0000000000680eb0 0000000000000158 t OT::gvar::sanitize_shallow(hb_sanitize_context_t*) const
0000000000681010 0000000000000100 t OT::glyf_impl::SimpleGlyph::trim_padding() const
0000000000681110 000000000000050c t OT::glyf_impl::SimpleGlyph::get_contour_points(OT::contour_point_vector_t&, bool) const
0000000000681620 00000000000005d4 t OT::glyf_impl::path_builder_t::consume_point(OT::contour_point_t const&)
0000000000681c00 00000000000001d4 t OT::glyf_accelerator_t::glyph_for_gid(unsigned int, bool) const
0000000000681de0 00000000000001e8 t CFF::Encoding::sanitize(hb_sanitize_context_t*) const
0000000000681fd0 0000000000000384 W OT::post::accelerator_t::accelerator_t(hb_face_t*)
0000000000681fd0 0000000000000384 t OT::post::accelerator_t::accelerator_t(hb_face_t*)
0000000000682360 000000000000026c t OT::post::accelerator_t::get_glyph_from_name(char const*, int, unsigned int*) const
00000000006825d0 000000000000014c t OT::CBLC::choose_strike(hb_font_t*) const
0000000000682720 000000000000016c t hb_paint_extents_context_t::hb_paint_extents_context_t()
0000000000682720 000000000000016c W hb_paint_extents_context_t::hb_paint_extents_context_t()
0000000000682890 0000000000000164 t OT::Affine2x3::paint_glyph(OT::hb_paint_context_t*, unsigned int) const
0000000000682a00 000000000000014c t OT::ClipBoxFormat2::get_clip_box(OT::ClipBoxData&, OT::VarStoreInstancer const&) const
0000000000682b50 00000000000000b8 t OT::COLR::get_base_glyph_paint(unsigned int) const
0000000000682c10 0000000000000144 t OT::COLR::get_clip(unsigned int, hb_glyph_extents_t*, OT::VarStoreInstancer) const
0000000000682d60 0000000000000218 t OT::SBIXStrike::get_glyph_blob(unsigned int, hb_blob_t*, unsigned int, int*, int*, unsigned int, unsigned int*) const
0000000000682f80 00000000000001a0 t OT::sbix::accelerator_t::choose_strike(hb_font_t*) const
0000000000683120 000000000000019c t OT::sbix::accelerator_t::get_png_extents(hb_font_t*, unsigned int, hb_glyph_extents_t*, bool) const
00000000006832c0 00000000000000cc t OT::SVG::accelerator_t::reference_blob_for_glyph(unsigned int) const
0000000000683390 00000000000002a8 T hb_ot_font_set_funcs
0000000000683640 00000000000002f8 t bool OT::ArrayOf<OT::VariationSelectorRecord, OT::IntType<unsigned int, 4u> >::sanitize<OT::CmapSubtableFormat14 const*>(hb_sanitize_context_t*, OT::CmapSubtableFormat14 const*&&) const
0000000000683940 00000000000003a8 t OT::CmapSubtable::sanitize(hb_sanitize_context_t*) const
0000000000683cf0 00000000000001b8 t bool OT::ArrayOf<OT::EncodingRecord, OT::IntType<unsigned short, 2u> >::sanitize<OT::cmap const*>(hb_sanitize_context_t*, OT::cmap const*&&) const
0000000000683eb0 000000000000064c W OT::cmap::accelerator_t::accelerator_t(hb_face_t*)
0000000000683eb0 000000000000064c t OT::cmap::accelerator_t::accelerator_t(hb_face_t*)
0000000000684500 000000000000023c t hb_ot_get_variation_glyph(hb_font_t*, void*, unsigned int, unsigned int, unsigned int*, void*)
0000000000684740 0000000000000194 t hb_ot_get_nominal_glyph(hb_font_t*, void*, unsigned int, unsigned int*, void*)
00000000006848e0 000000000000019c t hb_ot_get_nominal_glyphs(hb_font_t*, void*, unsigned int, unsigned int const*, unsigned int, unsigned int*, unsigned int, void*)
0000000000684a80 0000000000000170 t bool OT::OffsetTo<OT::DeltaSetIndexMap, OT::IntType<unsigned int, 4u>, true>::sanitize<>(hb_sanitize_context_t*, void const*) const
0000000000684bf0 0000000000000194 t OT::HVARVVAR::sanitize(hb_sanitize_context_t*) const
0000000000684d90 0000000000001594 t bool OT::glyf_impl::Glyph::get_points<OT::glyf_accelerator_t>(hb_font_t*, OT::glyf_accelerator_t const&, OT::contour_point_vector_t&, OT::contour_point_vector_t*, head_maxp_info_t*, unsigned int*, bool, bool, bool, hb_array_t<int>, unsigned int, unsigned int*) const
0000000000686330 0000000000000248 t bool OT::glyf_accelerator_t::get_points<OT::glyf_accelerator_t::points_aggregator_t>(hb_font_t*, unsigned int, OT::glyf_accelerator_t::points_aggregator_t) const
0000000000686580 0000000000000228 t CFF::opset_t<CFF::number_t>::process_op(unsigned int, CFF::interp_env_t<CFF::number_t>&)
00000000006867b0 00000000000002a0 t CFF::dict_opset_t::process_op(unsigned int, CFF::interp_env_t<CFF::number_t>&)
0000000000686a50 0000000000000828 t CFF::cff1_top_dict_opset_t::process_op(unsigned int, CFF::cff1_top_dict_interp_env_t&, CFF::cff1_top_dict_values_t&)
0000000000687280 0000000000000220 t CFF::FDSelect3_4<OT::IntType<unsigned short, 2u>, OT::IntType<unsigned char, 1u> >::sanitize(hb_sanitize_context_t*, unsigned int) const
00000000006874a0 0000000000000214 t CFF::CFFIndex<OT::IntType<unsigned short, 2u> >::operator[](unsigned int) const
00000000006876c0 0000000000000154 t CFF::parsed_values_t<CFF::op_str_t>::add_op(unsigned int, CFF::byte_str_ref_t const&, CFF::op_str_t const&)
0000000000687820 0000000000000154 t CFF::parsed_values_t<CFF::dict_val_t>::add_op(unsigned int, CFF::byte_str_ref_t const&, CFF::dict_val_t const&)
0000000000687980 00000000000000e0 t OT::cff1::accelerator_templ_t<CFF::cff1_private_dict_opset_t, CFF::cff1_private_dict_values_base_t<CFF::dict_val_t> >::fini()
0000000000687a60 0000000000000180 t OT::cff1::accelerator_templ_t<CFF::cff1_private_dict_opset_t, CFF::cff1_private_dict_values_base_t<CFF::dict_val_t> >::sid_to_glyph(unsigned int) const
0000000000687be0 00000000000004f4 t OT::cff1::accelerator_t::get_glyph_from_name(char const*, int, unsigned int*) const
00000000006880e0 0000000000000258 t CFF::FDSelect3_4<OT::IntType<unsigned int, 4u>, OT::IntType<unsigned short, 2u> >::sanitize(hb_sanitize_context_t*, unsigned int) const
0000000000688340 0000000000000110 t OT::IndexSubtableFormat1Or3<OT::IntType<unsigned int, 4u> >::get_image_data(unsigned int, unsigned int*, unsigned int*) const
0000000000688450 0000000000000174 t OT::IndexSubtableRecord::get_image_data(unsigned int, void const*, unsigned int*, unsigned int*, unsigned int*) const
00000000006885d0 0000000000000248 t OT::CBDT::accelerator_t::get_extents(hb_font_t*, unsigned int, hb_glyph_extents_t*, bool) const
0000000000688820 0000000000000200 t OT::CBDT::accelerator_t::reference_png(hb_font_t*, unsigned int) const
0000000000688a20 0000000000000248 t bool OT::UnsizedArrayOf<OT::IndexSubtableRecord>::sanitize<OT::IndexSubtableArray const*>(hb_sanitize_context_t*, unsigned int, OT::IndexSubtableArray const*&&) const
0000000000688c70 00000000000001f4 t bool OT::ArrayOf<OT::BitmapSizeTable, OT::IntType<unsigned int, 4u> >::sanitize<OT::CBLC const*>(hb_sanitize_context_t*, OT::CBLC const*&&) const
0000000000688e70 0000000000000314 W OT::CBDT::accelerator_t::accelerator_t(hb_face_t*)
0000000000688e70 0000000000000314 t OT::CBDT::accelerator_t::accelerator_t(hb_face_t*)
0000000000689190 000000000000021c t bool OT::ArrayOf<OT::ClipRecord, OT::IntType<unsigned int, 4u> >::sanitize<OT::ClipList const*>(hb_sanitize_context_t*, OT::ClipList const*&&) const
00000000006893b0 00000000000001bc t bool OT::ArrayOf<OT::OffsetTo<OT::SBIXStrike, OT::IntType<unsigned int, 4u>, true>, OT::IntType<unsigned int, 4u> >::sanitize<OT::sbix const*>(hb_sanitize_context_t*, OT::sbix const*&&) const
0000000000689570 0000000000000098 t CFF::CFFIndex<OT::IntType<unsigned short, 2u> >::offset_at(unsigned int) const
0000000000689610 0000000000000178 t CFF::CFFIndex<OT::IntType<unsigned short, 2u> >::sanitize(hb_sanitize_context_t*) const
0000000000689790 0000000000000230 t hb_vector_t<CFF::cff1_private_dict_values_base_t<CFF::dict_val_t>, false>::resize(int, bool, bool)
00000000006899c0 00000000000001c0 t hb_vector_t<CFF::cff1_font_dict_values_t, false>::push()
0000000000689b80 00000000000004e8 t CFF::dict_interpreter_t<CFF::cff1_font_dict_opset_t, CFF::cff1_font_dict_values_t, CFF::interp_env_t<CFF::number_t> >::interpret(CFF::cff1_font_dict_values_t&)
000000000068a070 000000000000044c t CFF::dict_interpreter_t<CFF::cff1_private_dict_opset_t, CFF::cff1_private_dict_values_base_t<CFF::dict_val_t>, CFF::interp_env_t<CFF::number_t> >::interpret(CFF::cff1_private_dict_values_base_t<CFF::dict_val_t>&)
000000000068a4c0 0000000000000d94 t OT::cff1::accelerator_templ_t<CFF::cff1_private_dict_opset_t, CFF::cff1_private_dict_values_base_t<CFF::dict_val_t> >::init(hb_face_t*)
000000000068b260 000000000000030c t CFF::dict_interpreter_t<CFF::cff2_top_dict_opset_t, CFF::cff2_top_dict_values_t, CFF::interp_env_t<CFF::number_t> >::interpret(CFF::cff2_top_dict_values_t&)
000000000068b570 0000000000000194 t CFF::CFFIndex<OT::IntType<unsigned int, 4u> >::sanitize(hb_sanitize_context_t*) const
000000000068b710 00000000000001bc t hb_vector_t<CFF::cff2_font_dict_values_t, false>::push()
000000000068b8d0 0000000000000098 t CFF::CFFIndex<OT::IntType<unsigned int, 4u> >::offset_at(unsigned int) const
000000000068b970 0000000000000e68 W OT::cff2::accelerator_templ_t<CFF::cff2_private_dict_opset_t, CFF::cff2_private_dict_values_base_t<CFF::dict_val_t> >::accelerator_templ_t(hb_face_t*)
000000000068b970 0000000000000e68 t OT::cff2::accelerator_templ_t<CFF::cff2_private_dict_opset_t, CFF::cff2_private_dict_values_base_t<CFF::dict_val_t> >::accelerator_templ_t(hb_face_t*)
000000000068c7e0 0000000000000200 t hb_lazy_loader_t<OT::cff2_accelerator_t, hb_face_lazy_loader_t<OT::cff2_accelerator_t, 17u>, hb_face_t, 17u, OT::cff2_accelerator_t>::get_stored() const
000000000068c9e0 00000000000001b8 t OT::PaintLinearGradient<OT::NoVariable>::paint_glyph(OT::hb_paint_context_t*, unsigned int) const
000000000068cba0 00000000000001b8 t OT::PaintLinearGradient<OT::Variable>::paint_glyph(OT::hb_paint_context_t*, unsigned int) const
000000000068cd60 00000000000001c0 t OT::PaintRadialGradient<OT::NoVariable>::paint_glyph(OT::hb_paint_context_t*, unsigned int) const
000000000068cf20 00000000000001c0 t OT::PaintRadialGradient<OT::Variable>::paint_glyph(OT::hb_paint_context_t*, unsigned int) const
000000000068d0e0 0000000000000190 t OT::PaintSweepGradient<OT::NoVariable>::paint_glyph(OT::hb_paint_context_t*, unsigned int) const
000000000068d270 0000000000000190 t OT::PaintSweepGradient<OT::Variable>::paint_glyph(OT::hb_paint_context_t*, unsigned int) const
000000000068d400 0000000000000640 t OT::hb_paint_context_t::return_t OT::Paint::dispatch<OT::hb_paint_context_t>(OT::hb_paint_context_t*) const [clone .isra.0]
000000000068da40 0000000000000058 t OT::hb_paint_context_t::recurse(OT::Paint const&)
000000000068daa0 0000000000000138 t OT::PaintColrLayers::paint_glyph(OT::hb_paint_context_t*) const
000000000068dbe0 0000000000000158 t OT::PaintTranslate::paint_glyph(OT::hb_paint_context_t*, unsigned int) const
000000000068dd40 0000000000000168 t OT::PaintScale::paint_glyph(OT::hb_paint_context_t*, unsigned int) const
000000000068deb0 00000000000001a0 t OT::PaintSkew::paint_glyph(OT::hb_paint_context_t*, unsigned int) const
000000000068e050 000000000000020c t OT::PaintGlyph::paint_glyph(OT::hb_paint_context_t*) const
000000000068e260 00000000000002e8 t OT::PaintScaleUniformAroundCenter::paint_glyph(OT::hb_paint_context_t*, unsigned int) const
000000000068e550 0000000000000358 t OT::PaintRotateAroundCenter::paint_glyph(OT::hb_paint_context_t*, unsigned int) const
000000000068e8b0 0000000000000328 t OT::PaintScaleAroundCenter::paint_glyph(OT::hb_paint_context_t*, unsigned int) const
000000000068ebe0 00000000000003ac t OT::PaintSkewAroundCenter::paint_glyph(OT::hb_paint_context_t*, unsigned int) const
000000000068ef90 00000000000002d0 t OT::PaintColrGlyph::paint_glyph(OT::hb_paint_context_t*) const
000000000068f260 000000000000054c t OT::COLR::paint_glyph(hb_font_t*, unsigned int, hb_paint_funcs_t*, void*, unsigned int, unsigned int, bool) const
000000000068f7b0 00000000000001a0 t hb_lazy_loader_t<OT::cff1_accelerator_t, hb_face_lazy_loader_t<OT::cff1_accelerator_t, 16u>, hb_face_t, 16u, OT::cff1_accelerator_t>::do_destroy(OT::cff1_accelerator_t*)
000000000068f950 0000000000000244 t hb_ot_get_glyph_from_name(hb_font_t*, void*, char const*, int, unsigned int*, void*)
000000000068fba0 00000000000004f8 t hb_ot_get_glyph_name(hb_font_t*, void*, unsigned int, char*, unsigned int, void*)
00000000006900a0 0000000000000138 t hb_lazy_loader_t<OT::gvar_accelerator_t, hb_face_lazy_loader_t<OT::gvar_accelerator_t, 21u>, hb_face_t, 21u, OT::gvar_accelerator_t>::create(hb_face_t*)
00000000006901e0 0000000000000294 t hb_lazy_loader_t<OT::sbix_accelerator_t, hb_face_lazy_loader_t<OT::sbix_accelerator_t, 38u>, hb_face_t, 38u, OT::sbix_accelerator_t>::create(hb_face_t*)
0000000000690480 0000000000000188 t hb_lazy_loader_t<OT::SVG_accelerator_t, hb_face_lazy_loader_t<OT::SVG_accelerator_t, 39u>, hb_face_t, 39u, OT::SVG_accelerator_t>::create(hb_face_t*)
0000000000690610 00000000000000c8 t hb_table_lazy_loader_t<OT::hhea, 4u, true>::create(hb_face_t*)
00000000006906e0 00000000000004f8 W OT::hmtxvmtx<OT::hmtx, OT::hhea, OT::HVAR>::accelerator_t::accelerator_t(hb_face_t*)
00000000006906e0 00000000000004f8 t OT::hmtxvmtx<OT::hmtx, OT::hhea, OT::HVAR>::accelerator_t::accelerator_t(hb_face_t*)
0000000000690be0 00000000000000c8 t hb_table_lazy_loader_t<OT::vhea, 11u, true>::create(hb_face_t*)
0000000000690cb0 000000000000052c W OT::hmtxvmtx<OT::vmtx, OT::vhea, OT::VVAR>::accelerator_t::accelerator_t(hb_face_t*)
0000000000690cb0 000000000000052c t OT::hmtxvmtx<OT::vmtx, OT::vhea, OT::VVAR>::accelerator_t::accelerator_t(hb_face_t*)
00000000006911e0 0000000000000558 t OT::glyf_accelerator_t::glyf_accelerator_t(hb_face_t*)
00000000006911e0 0000000000000558 W OT::glyf_accelerator_t::glyf_accelerator_t(hb_face_t*)
0000000000691740 00000000000001bc t _glyf_get_leading_bearing_with_var_unscaled(hb_font_t*, unsigned int, bool, int*)
0000000000691900 00000000000002e8 t _glyf_get_advance_with_var_unscaled(hb_font_t*, unsigned int, bool)
0000000000691bf0 0000000000000534 t hb_ot_get_glyph_v_advances(hb_font_t*, void*, unsigned int, unsigned int const*, unsigned int, int*, unsigned int, void*)
0000000000692130 0000000000000260 t OT::hmtxvmtx<OT::hmtx, OT::hhea, OT::HVAR>::accelerator_t::get_advance_with_var_unscaled(unsigned int, hb_font_t*, float*) const
0000000000692390 0000000000000638 t hb_ot_get_glyph_h_advances(hb_font_t*, void*, unsigned int, unsigned int const*, unsigned int, int*, unsigned int, void*)
00000000006929d0 0000000000000488 t hb_ot_draw_glyph(hb_font_t*, void*, unsigned int, hb_draw_funcs_t*, void*, void*)
0000000000692e60 0000000000000b70 t hb_ot_get_glyph_v_origin(hb_font_t*, void*, unsigned int, int*, int*, void*)
00000000006939d0 0000000000000144 t bool OT::OffsetTo<OT::ColorLine<OT::NoVariable>, OT::IntType<unsigned int, 3u>, true>::sanitize<>(hb_sanitize_context_t*, void const*) const
0000000000693b20 0000000000000144 t bool OT::OffsetTo<OT::ColorLine<OT::Variable>, OT::IntType<unsigned int, 3u>, true>::sanitize<>(hb_sanitize_context_t*, void const*) const
0000000000693c70 0000000000000414 t hb_sanitize_context_t::return_t OT::Paint::dispatch<hb_sanitize_context_t>(hb_sanitize_context_t*) const
0000000000694090 00000000000000f0 t bool OT::OffsetTo<OT::Paint, OT::IntType<unsigned int, 3u>, true>::sanitize<>(hb_sanitize_context_t*, void const*) const
0000000000694180 0000000000000258 t bool OT::OffsetTo<OT::BaseGlyphList, OT::IntType<unsigned int, 4u>, true>::sanitize<>(hb_sanitize_context_t*, void const*) const
00000000006943e0 000000000000021c t bool OT::OffsetTo<OT::LayerList, OT::IntType<unsigned int, 4u>, true>::sanitize<>(hb_sanitize_context_t*, void const*) const
0000000000694600 0000000000000248 t OT::COLR::sanitize(hb_sanitize_context_t*) const
0000000000694850 0000000000000828 t hb_ot_get_glyph_extents(hb_font_t*, void*, unsigned int, hb_glyph_extents_t*, void*)
0000000000695080 00000000000007e4 t hb_ot_paint_glyph(hb_font_t*, void*, unsigned int, hb_paint_funcs_t*, void*, unsigned int, unsigned int, void*)
0000000000695870 000000000000020c t OT::PaintTransform<OT::NoVariable>::sanitize(hb_sanitize_context_t*) const
0000000000695a80 000000000000020c t OT::PaintTransform<OT::Variable>::sanitize(hb_sanitize_context_t*) const
0000000000695c90 00000000000000d4 t hb_outline_recording_pen_close_path(hb_draw_funcs_t*, void*, hb_draw_state_t*, void*)
0000000000695d70 00000000000000f0 t hb_outline_recording_pen_move_to(hb_draw_funcs_t*, void*, hb_draw_state_t*, float, float, void*)
0000000000695e60 00000000000000f4 t hb_outline_recording_pen_line_to(hb_draw_funcs_t*, void*, hb_draw_state_t*, float, float, void*)
0000000000695f60 00000000000001dc t hb_outline_recording_pen_quadratic_to(hb_draw_funcs_t*, void*, hb_draw_state_t*, float, float, float, float, void*)
0000000000696140 00000000000002c8 t hb_outline_recording_pen_cubic_to(hb_draw_funcs_t*, void*, hb_draw_state_t*, float, float, float, float, float, float, void*)
0000000000696410 00000000000003d8 t hb_outline_t::replay(hb_draw_funcs_t*, void*) const
00000000006967f0 00000000000000c8 t hb_outline_t::control_area() const
00000000006968c0 00000000000003fc t hb_outline_t::embolden(float, float, float, float)
0000000000696cc0 0000000000000114 t hb_outline_recording_pen_get_funcs()
0000000000696de0 00000000000001e0 t hb_paint_extents_pop_group(hb_paint_funcs_t*, void*, hb_paint_composite_mode_t, void*)
0000000000696fc0 0000000000000014 t hb_paint_extents_pop_transform(hb_paint_funcs_t*, void*, void*)
0000000000696fe0 0000000000000194 t hb_paint_extents_push_transform(hb_paint_funcs_t*, void*, float, float, float, float, float, float, void*)
0000000000697180 0000000000000104 t hb_paint_extents_push_group(hb_paint_funcs_t*, void*, void*)
0000000000697290 0000000000000018 t hb_paint_extents_pop_clip(hb_paint_funcs_t*, void*, void*)
00000000006972b0 0000000000000118 t hb_paint_extents_paint_radial_gradient(hb_paint_funcs_t*, void*, hb_color_line_t*, float, float, float, float, float, float, void*)
00000000006973d0 0000000000000118 t hb_paint_extents_paint_linear_gradient(hb_paint_funcs_t*, void*, hb_color_line_t*, float, float, float, float, float, float, void*)
00000000006974f0 0000000000000118 t hb_paint_extents_paint_color(hb_paint_funcs_t*, void*, int, unsigned int, void*)
0000000000697610 0000000000000118 t hb_paint_extents_paint_sweep_gradient(hb_paint_funcs_t*, void*, hb_color_line_t*, float, float, float, float, void*)
0000000000697730 0000000000000050 t hb_draw_extents_line_to(hb_draw_funcs_t*, void*, hb_draw_state_t*, float, float, void*)
0000000000697780 0000000000000050 t hb_draw_extents_move_to(hb_draw_funcs_t*, void*, hb_draw_state_t*, float, float, void*)
00000000006977d0 0000000000000094 t hb_draw_extents_quadratic_to(hb_draw_funcs_t*, void*, hb_draw_state_t*, float, float, float, float, void*)
0000000000697870 00000000000000d8 t hb_draw_extents_cubic_to(hb_draw_funcs_t*, void*, hb_draw_state_t*, float, float, float, float, float, float, void*)
0000000000697950 0000000000000240 t hb_paint_extents_context_t::push_clip(hb_extents_t)
0000000000697b90 0000000000000050 t hb_paint_extents_push_clip_rectangle(hb_paint_funcs_t*, void*, float, float, float, float, void*)
0000000000697be0 00000000000001ac t hb_paint_extents_paint_image(hb_paint_funcs_t*, void*, hb_blob_t*, unsigned int, unsigned int, unsigned int, float, hb_glyph_extents_t*, void*)
0000000000697d90 0000000000000144 t hb_paint_extents_push_clip_glyph(hb_paint_funcs_t*, void*, unsigned int, hb_font_t*, void*)
0000000000697ee0 00000000000001b8 t hb_paint_extents_get_funcs()
00000000006980a0 00000000000000dc t OT::MVAR::get_var(unsigned int, int const*, unsigned int) const
0000000000698180 00000000000001fc t OT::MVAR::sanitize(hb_sanitize_context_t*) const
0000000000698380 0000000000000278 t hb_lazy_loader_t<OT::MVAR, hb_table_lazy_loader_t<OT::MVAR, 22u, true>, hb_face_t, 22u, hb_blob_t>::get() const
0000000000698600 00000000000001ac t hb_lazy_loader_t<OT::OS2, hb_table_lazy_loader_t<OT::OS2, 6u, true>, hb_face_t, 6u, hb_blob_t>::get() const
00000000006987b0 0000000000000b1c t _hb_ot_metrics_get_position_common(hb_font_t*, hb_ot_metrics_tag_t, int*)
00000000006992d0 0000000000000020 t _hb_glyph_info_is_default_ignorable(hb_glyph_info_t const*)
00000000006992f0 00000000000002d8 t _hb_glyph_info_set_unicode_props(hb_glyph_info_t*, hb_buffer_t*)
00000000006995d0 0000000000000028 t hb_buffer_t::allocate_var(unsigned int, unsigned int) [clone .part.0]
0000000000699600 0000000000000028 t hb_buffer_t::deallocate_var(unsigned int, unsigned int) [clone .part.0]
0000000000699630 0000000000000080 t hb_buffer_t::message(hb_font_t*, char const*, ...)
00000000006996b0 0000000000000994 t hb_ot_shape_planner_t::hb_ot_shape_planner_t(hb_face_t*, hb_segment_properties_t const&)
00000000006996b0 0000000000000994 T hb_ot_shape_planner_t::hb_ot_shape_planner_t(hb_face_t*, hb_segment_properties_t const&)
000000000069a050 0000000000000700 t hb_ot_shape_planner_t::compile(hb_ot_shape_plan_t&, hb_ot_shape_plan_key_t const&)
000000000069a750 0000000000000360 t hb_ot_shape_plan_t::init0(hb_face_t*, hb_shape_plan_key_t const*)
000000000069aab0 0000000000000074 t hb_ot_shape_plan_t::fini()
000000000069ab30 00000000000000d4 t hb_ot_shape_plan_t::position(hb_font_t*, hb_buffer_t*) const
000000000069ac10 0000000000000008 t _hb_ot_shaper_face_data_create
000000000069ac20 0000000000000004 t _hb_ot_shaper_face_data_destroy
000000000069ac30 0000000000000008 t _hb_ot_shaper_font_data_create
000000000069ac40 0000000000000004 t _hb_ot_shaper_font_data_destroy
000000000069ac50 0000000000001de8 t _hb_ot_shape
000000000069ca40 000000000000011c T hb_ot_var_named_instance_get_design_coords
000000000069cb60 00000000000003a4 T hb_ot_var_normalize_coords
000000000069cf10 0000000000000368 t hb_shape_plan_key_t::init(bool, hb_face_t*, hb_segment_properties_t const*, hb_feature_t const*, unsigned int, int const*, unsigned int, char const* const*)
000000000069d280 0000000000000098 t hb_shape_plan_key_t::user_features_match(hb_shape_plan_key_t const*)
000000000069d320 0000000000000070 t hb_shape_plan_key_t::equal(hb_shape_plan_key_t const*)
000000000069d390 000000000000000c T hb_shape_plan_get_empty
000000000069d3a0 0000000000000144 T hb_shape_plan_create2
000000000069d4f0 0000000000000058 T hb_shape_plan_reference
000000000069d550 00000000000001a4 T hb_shape_plan_destroy
000000000069d700 0000000000000258 T hb_shape_plan_execute
000000000069d960 00000000000001b0 T hb_shape_plan_create_cached2
000000000069db10 00000000000001b8 T hb_shape_full
000000000069dcd0 0000000000000008 T hb_shape
000000000069dce0 0000000000000188 t hb_shapers_lazy_loader_t::create()
000000000069de70 0000000000000090 t _hb_shapers_get()
000000000069df00 00000000000001a4 t hb_face_t::load_num_glyphs() const
000000000069e0b0 0000000000000194 t hb_face_t::load_upem() const
000000000069e250 0000000000000008 t hb_unicode_combining_class_nil(hb_unicode_funcs_t*, unsigned int, void*)
000000000069e260 0000000000000008 t hb_unicode_eastasian_width_nil(hb_unicode_funcs_t*, unsigned int, void*)
000000000069e270 0000000000000008 t hb_unicode_general_category_nil(hb_unicode_funcs_t*, unsigned int, void*)
000000000069e280 0000000000000008 t hb_unicode_mirroring_nil(hb_unicode_funcs_t*, unsigned int, void*)
000000000069e290 000000000000000c t hb_unicode_script_nil(hb_unicode_funcs_t*, unsigned int, void*)
000000000069e2a0 0000000000000008 t hb_unicode_compose_nil(hb_unicode_funcs_t*, unsigned int, unsigned int, unsigned int*, void*)
000000000069e2b0 0000000000000008 t hb_unicode_decompose_nil(hb_unicode_funcs_t*, unsigned int, unsigned int*, unsigned int*, void*)
000000000069e2c0 0000000000000008 t hb_unicode_decompose_compatibility_nil(hb_unicode_funcs_t*, unsigned int, unsigned int*, void*)
000000000069e2d0 0000000000000004 T hb_unicode_funcs_get_default
000000000069e2e0 000000000000000c T hb_unicode_funcs_get_empty
000000000069e2f0 0000000000000058 T hb_unicode_funcs_reference
000000000069e350 00000000000001e0 T hb_unicode_funcs_destroy
000000000069e350 00000000000001e0 t hb_unicode_funcs_destroy.localalias
000000000069e530 0000000000000018 T hb_unicode_funcs_make_immutable
000000000069e550 00000000000000b8 T hb_unicode_funcs_create
000000000069e610 00000000000000b0 T hb_unicode_funcs_set_combining_class_func
000000000069e6c0 00000000000000b0 T hb_unicode_funcs_set_general_category_func
000000000069e770 00000000000000b0 T hb_unicode_funcs_set_mirroring_func
000000000069e820 00000000000000b0 T hb_unicode_funcs_set_script_func
000000000069e8d0 00000000000000b0 T hb_unicode_funcs_set_compose_func
000000000069e980 00000000000000b0 T hb_unicode_funcs_set_decompose_func
000000000069ea30 000000000000007c t _hb_unicode_is_emoji_Extended_Pictographic(unsigned int)
000000000069eab0 000000000000001c t _hb_ft_color_line_get_extend(hb_color_line_t*, void*, void*)
000000000069ead0 0000000000000050 t _hb_ft_font_destroy(void*)
000000000069eb20 00000000000000b0 t _hb_ft_reference_table(hb_face_t*, unsigned int, void*)
000000000069ebd0 00000000000000c4 t hb_ft_get_glyph_contour_point(hb_font_t*, void*, unsigned int, unsigned int, int*, int*, void*)
000000000069eca0 0000000000000084 t hb_ft_get_glyph_name(hb_font_t*, void*, unsigned int, char*, unsigned int, void*)
000000000069ed30 0000000000000120 t hb_ft_get_glyph_from_name(hb_font_t*, void*, char const*, int, unsigned int*, void*)
000000000069ee50 00000000000001a8 t hb_ft_get_glyph_v_origin(hb_font_t*, void*, unsigned int, int*, int*, void*)
000000000069f000 0000000000000244 t hb_ft_get_glyph_extents(hb_font_t*, void*, unsigned int, hb_glyph_extents_t*, void*)
000000000069f250 0000000000000084 t hb_ft_get_glyph_h_kerning(hb_font_t*, void*, unsigned int, unsigned int, void*)
000000000069f2e0 0000000000000158 t hb_ft_get_glyph_v_advance(hb_font_t*, void*, unsigned int, void*)
000000000069f440 0000000000000180 t hb_ft_get_font_h_extents(hb_font_t*, void*, hb_font_extents_t*, void*)
000000000069f5c0 0000000000000090 t hb_ft_get_variation_glyph(hb_font_t*, void*, unsigned int, unsigned int, unsigned int*, void*)
000000000069f650 0000000000000098 t hb_ft_get_nominal_glyphs(hb_font_t*, void*, unsigned int, unsigned int const*, unsigned int, unsigned int*, unsigned int, void*)
000000000069f6f0 00000000000001f4 t hb_ft_get_glyph_h_advances(hb_font_t*, void*, unsigned int, unsigned int const*, unsigned int, int*, unsigned int, void*)
000000000069f8f0 00000000000001fc t _hb_ft_color_line_get_color_stops(hb_color_line_t*, void*, unsigned int, unsigned int*, hb_color_stop_t*, void*)
000000000069faf0 0000000000000154 t _hb_ft_cubic_to(FT_Vector_ const*, FT_Vector_ const*, FT_Vector_ const*, void*)
000000000069fc50 00000000000000cc t _hb_ft_line_to(FT_Vector_ const*, void*)
000000000069fd20 00000000000000f8 t _hb_ft_conic_to(FT_Vector_ const*, FT_Vector_ const*, void*)
000000000069fe20 00000000000000e4 t _hb_ft_move_to(FT_Vector_ const*, void*)
000000000069ff10 0000000000000268 t hb_ft_draw_glyph(hb_font_t*, void*, unsigned int, hb_draw_funcs_t*, void*, void*)
00000000006a0180 000000000000106c t _hb_ft_paint(hb_ft_paint_context_t*, FT_Opaque_Paint_)
00000000006a11f0 0000000000000028 T hb_ft_font_set_load_flags
00000000006a1220 0000000000000510 t hb_ft_paint_glyph_colr(hb_font_t*, void*, unsigned int, hb_paint_funcs_t*, void*, unsigned int, unsigned int, void*) [clone .constprop.0]
00000000006a1730 00000000000001f0 t hb_ft_paint_glyph(hb_font_t*, void*, unsigned int, hb_paint_funcs_t*, void*, unsigned int, unsigned int, void*)
00000000006a1920 0000000000000178 t hb_ft_font_funcs_lazy_loader_t::create()
00000000006a1aa0 0000000000000144 t _hb_ft_font_set_funcs(hb_font_t*, FT_FaceRec_*, bool)
00000000006a1bf0 0000000000000098 T hb_ft_face_create
00000000006a1c90 000000000000017c T hb_ft_font_changed
00000000006a1e10 0000000000000058 T hb_ft_font_create
00000000006a1e70 000000000000010c t hb_table_lazy_loader_t<OT::OS2, 6u, true>::create(hb_face_t*)
00000000006a1f80 0000000000000298 t hb_ft_get_nominal_glyph(hb_font_t*, void*, unsigned int, unsigned int*, void*)
00000000006a2220 0000000000000014 t is_deleted_glyph(hb_glyph_info_t const*)
00000000006a2240 0000000000000028 t hb_sanitize_context_t::reset_object() [clone .part.0]
00000000006a2270 0000000000000028 t bool hb_buffer_t::replace_glyphs<unsigned int>(unsigned int, unsigned int, unsigned int const*) [clone .part.0]
00000000006a22a0 0000000000000028 t bool hb_buffer_t::replace_glyphs<OT::HBGlyphID16>(unsigned int, unsigned int, OT::HBGlyphID16 const*) [clone .part.0]
00000000006a22d0 0000000000000320 t AAT::Lookup<OT::IntType<unsigned int, 4u> >::get_value_or_null(unsigned int, unsigned int) const [clone .part.0]
00000000006a25f0 00000000000006d0 t hb_buffer_t::_set_glyph_flags(unsigned int, unsigned int, unsigned int, bool, bool)
00000000006a2cc0 0000000000000140 t hb_font_t::get_glyph_v_origin_with_fallback(unsigned int, int*, int*)
00000000006a2e00 00000000000001dc t hb_font_t::get_glyph_contour_point_for_origin(unsigned int, unsigned int, hb_direction_t, int*, int*)
00000000006a2fe0 0000000000000164 t AAT::ltag::sanitize(hb_sanitize_context_t*) const
00000000006a3150 0000000000000354 t AAT::ankr::get_anchor(unsigned int, unsigned int, unsigned int) const
00000000006a34b0 0000000000000134 t AAT::feat::sanitize(hb_sanitize_context_t*) const
00000000006a35f0 0000000000000174 t OT::MarkGlyphSetsFormat1::covers(unsigned int, unsigned int) const
00000000006a3770 000000000000023c t OT::GDEF::get_glyph_props(unsigned int) const
00000000006a39b0 0000000000000288 t OT::hb_ot_apply_context_t::skipping_iterator_t::next(unsigned int*)
00000000006a3c40 000000000000027c t AAT::TrackData::get_tracking(void const*, float) const
00000000006a3ec0 0000000000000204 t AAT::TrackData::sanitize(hb_sanitize_context_t*, void const*) const
00000000006a40d0 0000000000000190 t AAT::trak::sanitize(hb_sanitize_context_t*) const
00000000006a4260 0000000000000008 t AAT::hb_aat_apply_context_t::~hb_aat_apply_context_t()
00000000006a4260 0000000000000008 T AAT::hb_aat_apply_context_t::~hb_aat_apply_context_t()
00000000006a4270 0000000000000058 t hb_aat_layout_find_feature_mapping(unsigned int)
00000000006a42d0 000000000000004c t hb_aat_layout_zero_width_deleted_glyphs(hb_buffer_t*)
00000000006a4320 000000000000000c t hb_aat_layout_remove_deleted_glyphs(hb_buffer_t*)
00000000006a4330 00000000000001b8 t bool OT::OffsetTo<OT::Layout::Common::Coverage, OT::IntType<unsigned short, 2u>, true>::sanitize<>(hb_sanitize_context_t*, void const*) const
00000000006a44f0 0000000000000348 t bool OT::ArrayOf<OT::OffsetTo<OT::CaretValue, OT::IntType<unsigned short, 2u>, true>, OT::IntType<unsigned short, 2u> >::sanitize<OT::LigGlyph const*>(hb_sanitize_context_t*, OT::LigGlyph const*&&) const
00000000006a4840 0000000000000270 t bool OT::ArrayOf<OT::OffsetTo<OT::Layout::Common::Coverage, OT::IntType<unsigned int, 4u>, true>, OT::IntType<unsigned short, 2u> >::sanitize<OT::MarkGlyphSetsFormat1 const*>(hb_sanitize_context_t*, OT::MarkGlyphSetsFormat1 const*&&) const
00000000006a4ab0 0000000000000398 t AAT::StateTable<AAT::ObsoleteTypes, void>::sanitize(hb_sanitize_context_t*, unsigned int*) const
00000000006a4e50 00000000000001d0 t bool OT::OffsetTo<OT::ClassDef, OT::IntType<unsigned short, 2u>, true>::sanitize<>(hb_sanitize_context_t*, void const*) const
00000000006a5020 00000000000005e0 t OT::GDEFVersion1_2<OT::Layout::SmallTypes>::sanitize(hb_sanitize_context_t*) const
00000000006a5600 000000000000029c W OT::GDEF::accelerator_t::accelerator_t(hb_face_t*)
00000000006a5600 000000000000029c t OT::GDEF::accelerator_t::accelerator_t(hb_face_t*)
00000000006a58a0 0000000000000324 t OT::hb_ot_apply_context_t::hb_ot_apply_context_t(unsigned int, hb_font_t*, hb_buffer_t*)
00000000006a58a0 0000000000000324 W OT::hb_ot_apply_context_t::hb_ot_apply_context_t(unsigned int, hb_font_t*, hb_buffer_t*)
00000000006a5bd0 00000000000001d0 t AAT::hb_aat_apply_context_t::hb_aat_apply_context_t(hb_ot_shape_plan_t const*, hb_font_t*, hb_buffer_t*, hb_blob_t*)
00000000006a5bd0 00000000000001d0 T AAT::hb_aat_apply_context_t::hb_aat_apply_context_t(hb_ot_shape_plan_t const*, hb_font_t*, hb_buffer_t*, hb_blob_t*)
00000000006a5da0 0000000000000208 t hb_vector_t<hb_vector_t<hb_aat_map_t::range_flags_t, true>, false>::resize(int, bool, bool)
00000000006a5fb0 0000000000000330 t AAT::Chain<AAT::ExtendedTypes>::compile_flags(hb_aat_map_builder_t const*) const
00000000006a62e0 0000000000000338 t AAT::Chain<AAT::ObsoleteTypes>::compile_flags(hb_aat_map_builder_t const*) const
00000000006a6620 0000000000000260 t bool OT::VarSizedBinSearchArrayOf<AAT::LookupSegmentArray<OT::IntType<unsigned short, 2u> > >::sanitize<AAT::LookupFormat4<OT::IntType<unsigned short, 2u> > const*>(hb_sanitize_context_t*, AAT::LookupFormat4<OT::IntType<unsigned short, 2u> > const*&&) const
00000000006a6880 0000000000000264 t AAT::Lookup<OT::IntType<unsigned short, 2u> >::sanitize(hb_sanitize_context_t*) const
00000000006a6af0 000000000000027c t AAT::StateTable<AAT::ExtendedTypes, AAT::Format1Entry<true>::EntryData>::sanitize(hb_sanitize_context_t*, unsigned int*) const
00000000006a6d70 000000000000027c t AAT::StateTable<AAT::ExtendedTypes, AAT::KerxSubTableFormat4<AAT::KerxSubTableHeader>::EntryData>::sanitize(hb_sanitize_context_t*, unsigned int*) const
00000000006a6ff0 000000000000042c t OT::hb_kern_machine_t<AAT::KerxSubTableFormat0<AAT::KerxSubTableHeader>::accelerator_t>::kern(hb_font_t*, hb_buffer_t*, unsigned int, bool) const
00000000006a7420 0000000000000318 t hb_table_lazy_loader_t<AAT::trak, 32u, false>::create(hb_face_t*)
00000000006a7740 000000000000032c t hb_aat_layout_track(hb_ot_shape_plan_t const*, hb_font_t*, hb_buffer_t*)
00000000006a7a70 00000000000000e8 T hb_aat_layout_has_tracking
00000000006a7b60 0000000000000140 t bool OT::UnsizedArrayOf<OT::OffsetTo<OT::ArrayOf<AAT::Anchor, OT::IntType<unsigned int, 4u> >, OT::IntType<unsigned short, 2u>, false> >::sanitize<void const*&>(hb_sanitize_context_t*, unsigned int, void const*&) const
00000000006a7ca0 0000000000000278 t bool OT::VarSizedBinSearchArrayOf<AAT::LookupSegmentSingle<OT::OffsetTo<OT::ArrayOf<AAT::Anchor, OT::IntType<unsigned int, 4u> >, OT::IntType<unsigned short, 2u>, false> > >::sanitize<void const*&>(hb_sanitize_context_t*, void const*&) const
00000000006a7f20 000000000000033c t bool OT::VarSizedBinSearchArrayOf<AAT::LookupSegmentArray<OT::OffsetTo<OT::ArrayOf<AAT::Anchor, OT::IntType<unsigned int, 4u> >, OT::IntType<unsigned short, 2u>, false> > >::sanitize<AAT::LookupFormat4<OT::OffsetTo<OT::ArrayOf<AAT::Anchor, OT::IntType<unsigned int, 4u> >, OT::IntType<unsigned short, 2u>, false> > const*, void const*&>(hb_sanitize_context_t*, AAT::LookupFormat4<OT::OffsetTo<OT::ArrayOf<AAT::Anchor, OT::IntType<unsigned int, 4u> >, OT::IntType<unsigned short, 2u>, false> > const*&&, void const*&) const
00000000006a8260 0000000000000254 t bool OT::VarSizedBinSearchArrayOf<AAT::LookupSingle<OT::OffsetTo<OT::ArrayOf<AAT::Anchor, OT::IntType<unsigned int, 4u> >, OT::IntType<unsigned short, 2u>, false> > >::sanitize<void const*&>(hb_sanitize_context_t*, void const*&) const
00000000006a84c0 000000000000025c t AAT::ankr::sanitize(hb_sanitize_context_t*) const
00000000006a8720 00000000000001fc t hb_table_lazy_loader_t<AAT::ankr, 31u, false>::create(hb_face_t*)
00000000006a8920 0000000000000398 t AAT::StateTable<AAT::ObsoleteTypes, AAT::ContextualSubtable<AAT::ObsoleteTypes>::EntryData>::sanitize(hb_sanitize_context_t*, unsigned int*) const
00000000006a8cc0 0000000000000398 t AAT::StateTable<AAT::ObsoleteTypes, AAT::InsertionSubtable<AAT::ObsoleteTypes>::EntryData>::sanitize(hb_sanitize_context_t*, unsigned int*) const
00000000006a9060 0000000000000310 t AAT::Lookup<OT::HBGlyphID16>::get_value(unsigned int, unsigned int) const
00000000006a9370 0000000000000810 t void AAT::StateTableDriver<AAT::ObsoleteTypes, void>::drive<AAT::RearrangementSubtable<AAT::ObsoleteTypes>::driver_context_t>(AAT::RearrangementSubtable<AAT::ObsoleteTypes>::driver_context_t*, AAT::hb_aat_apply_context_t*)
00000000006a9b80 0000000000000770 t void AAT::StateTableDriver<AAT::ObsoleteTypes, AAT::ContextualSubtable<AAT::ObsoleteTypes>::EntryData>::drive<AAT::ContextualSubtable<AAT::ObsoleteTypes>::driver_context_t>(AAT::ContextualSubtable<AAT::ObsoleteTypes>::driver_context_t*, AAT::hb_aat_apply_context_t*)
00000000006aa2f0 0000000000000918 t void AAT::StateTableDriver<AAT::ObsoleteTypes, void>::drive<AAT::LigatureSubtable<AAT::ObsoleteTypes>::driver_context_t>(AAT::LigatureSubtable<AAT::ObsoleteTypes>::driver_context_t*, AAT::hb_aat_apply_context_t*)
00000000006aac10 0000000000000974 t void AAT::StateTableDriver<AAT::ObsoleteTypes, AAT::InsertionSubtable<AAT::ObsoleteTypes>::EntryData>::drive<AAT::InsertionSubtable<AAT::ObsoleteTypes>::driver_context_t>(AAT::InsertionSubtable<AAT::ObsoleteTypes>::driver_context_t*, AAT::hb_aat_apply_context_t*)
00000000006ab590 000000000000071c t AAT::Chain<AAT::ObsoleteTypes>::apply(AAT::hb_aat_apply_context_t*) const
00000000006abcb0 0000000000000260 t bool OT::VarSizedBinSearchArrayOf<AAT::LookupSegmentArray<OT::HBGlyphID16> >::sanitize<AAT::LookupFormat4<OT::HBGlyphID16> const*>(hb_sanitize_context_t*, AAT::LookupFormat4<OT::HBGlyphID16> const*&&) const
00000000006abf10 0000000000000264 t AAT::Lookup<OT::HBGlyphID16>::sanitize(hb_sanitize_context_t*) const
00000000006ac180 0000000000000094 t AAT::ContextualSubtable<AAT::ObsoleteTypes>::sanitize(hb_sanitize_context_t*) const
00000000006ac220 0000000000000474 t AAT::mortmorx<AAT::ObsoleteTypes, 1836020340u>::sanitize(hb_sanitize_context_t*) const
00000000006ac6a0 00000000000001fc t hb_table_lazy_loader_t<AAT::mort, 29u, false>::create(hb_face_t*)
00000000006ac8a0 0000000000000238 t AAT::ContextualSubtable<AAT::ExtendedTypes>::driver_context_t::transition(AAT::StateTableDriver<AAT::ExtendedTypes, AAT::ContextualSubtable<AAT::ExtendedTypes>::EntryData>*, AAT::Entry<AAT::ContextualSubtable<AAT::ExtendedTypes>::EntryData> const&)
00000000006acae0 0000000000000310 t AAT::Lookup<OT::IntType<unsigned short, 2u> >::get_value(unsigned int, unsigned int) const
00000000006acdf0 000000000000080c t void AAT::StateTableDriver<AAT::ExtendedTypes, AAT::KerxSubTableFormat4<AAT::KerxSubTableHeader>::EntryData>::drive<AAT::KerxSubTableFormat4<AAT::KerxSubTableHeader>::driver_context_t>(AAT::KerxSubTableFormat4<AAT::KerxSubTableHeader>::driver_context_t*, AAT::hb_aat_apply_context_t*)
00000000006ad600 0000000000000784 t void AAT::StateTableDriver<AAT::ExtendedTypes, AAT::Format1Entry<true>::EntryData>::drive<AAT::KerxSubTableFormat1<AAT::KerxSubTableHeader>::driver_context_t>(AAT::KerxSubTableFormat1<AAT::KerxSubTableHeader>::driver_context_t*, AAT::hb_aat_apply_context_t*)
00000000006add90 000000000000048c t AAT::KerxSubTableFormat6<AAT::KerxSubTableHeader>::get_kerning(unsigned int, unsigned int, AAT::hb_aat_apply_context_t*) const
00000000006ae220 000000000000033c t OT::hb_kern_machine_t<AAT::KerxSubTableFormat6<AAT::KerxSubTableHeader>::accelerator_t>::kern(hb_font_t*, hb_buffer_t*, unsigned int, bool) const
00000000006ae560 00000000000008cc t void AAT::StateTableDriver<AAT::ExtendedTypes, AAT::LigatureEntry<true>::EntryData>::drive<AAT::LigatureSubtable<AAT::ExtendedTypes>::driver_context_t>(AAT::LigatureSubtable<AAT::ExtendedTypes>::driver_context_t*, AAT::hb_aat_apply_context_t*)
00000000006aee30 00000000000007f8 t void AAT::StateTableDriver<AAT::ExtendedTypes, void>::drive<AAT::RearrangementSubtable<AAT::ExtendedTypes>::driver_context_t>(AAT::RearrangementSubtable<AAT::ExtendedTypes>::driver_context_t*, AAT::hb_aat_apply_context_t*)
00000000006af630 0000000000000508 t void AAT::StateTableDriver<AAT::ExtendedTypes, AAT::ContextualSubtable<AAT::ExtendedTypes>::EntryData>::drive<AAT::ContextualSubtable<AAT::ExtendedTypes>::driver_context_t>(AAT::ContextualSubtable<AAT::ExtendedTypes>::driver_context_t*, AAT::hb_aat_apply_context_t*)
00000000006afb40 000000000000095c t void AAT::StateTableDriver<AAT::ExtendedTypes, AAT::InsertionSubtable<AAT::ExtendedTypes>::EntryData>::drive<AAT::InsertionSubtable<AAT::ExtendedTypes>::driver_context_t>(AAT::InsertionSubtable<AAT::ExtendedTypes>::driver_context_t*, AAT::hb_aat_apply_context_t*)
00000000006b04a0 00000000000006fc t AAT::Chain<AAT::ExtendedTypes>::apply(AAT::hb_aat_apply_context_t*) const
00000000006b0ba0 0000000000000478 t OT::hb_kern_machine_t<AAT::KerxSubTableFormat2<AAT::KerxSubTableHeader>::accelerator_t>::kern(hb_font_t*, hb_buffer_t*, unsigned int, bool) const
00000000006b1020 0000000000000268 t bool OT::VarSizedBinSearchArrayOf<AAT::LookupSegmentArray<OT::IntType<unsigned int, 4u> > >::sanitize<AAT::LookupFormat4<OT::IntType<unsigned int, 4u> > const*>(hb_sanitize_context_t*, AAT::LookupFormat4<OT::IntType<unsigned int, 4u> > const*&&) const
00000000006b1290 0000000000000268 t AAT::Lookup<OT::IntType<unsigned int, 4u> >::sanitize(hb_sanitize_context_t*) const
00000000006b1500 000000000000025c t AAT::KerxSubTableFormat6<AAT::KerxSubTableHeader>::sanitize(hb_sanitize_context_t*) const
00000000006b1760 00000000000002ac t hb_sanitize_context_t::return_t AAT::KerxSubTable::dispatch<hb_sanitize_context_t>(hb_sanitize_context_t*) const
00000000006b1a10 0000000000000270 t AAT::KerxTable<AAT::kerx>::sanitize(hb_sanitize_context_t*) const
00000000006b1c80 00000000000001fc t hb_table_lazy_loader_t<AAT::kerx, 30u, false>::create(hb_face_t*)
00000000006b1e80 000000000000080c t hb_aat_layout_position(hb_ot_shape_plan_t const*, hb_font_t*, hb_buffer_t*)
00000000006b2690 00000000000000e8 T hb_aat_layout_has_positioning
00000000006b2780 000000000000027c t AAT::StateTable<AAT::ExtendedTypes, void>::sanitize(hb_sanitize_context_t*, unsigned int*) const
00000000006b2a00 000000000000027c t AAT::StateTable<AAT::ExtendedTypes, AAT::ContextualSubtable<AAT::ExtendedTypes>::EntryData>::sanitize(hb_sanitize_context_t*, unsigned int*) const
00000000006b2c80 00000000000001c8 t AAT::ContextualSubtable<AAT::ExtendedTypes>::sanitize(hb_sanitize_context_t*) const
00000000006b2e50 000000000000027c t AAT::StateTable<AAT::ExtendedTypes, AAT::LigatureEntry<true>::EntryData>::sanitize(hb_sanitize_context_t*, unsigned int*) const
00000000006b30d0 000000000000027c t AAT::StateTable<AAT::ExtendedTypes, AAT::InsertionSubtable<AAT::ExtendedTypes>::EntryData>::sanitize(hb_sanitize_context_t*, unsigned int*) const
00000000006b3350 00000000000003a8 t AAT::Chain<AAT::ExtendedTypes>::sanitize(hb_sanitize_context_t*, unsigned int) const [clone .isra.0]
00000000006b3700 000000000000031c t hb_table_lazy_loader_t<AAT::morx, 28u, false>::create(hb_face_t*)
00000000006b3a20 0000000000000458 t hb_aat_layout_substitute(hb_ot_shape_plan_t const*, hb_font_t*, hb_buffer_t*, hb_feature_t const*, unsigned int)
00000000006b3e80 0000000000000194 T hb_aat_layout_has_substitution
00000000006b4020 000000000000046c t hb_aat_layout_compile_map(hb_aat_map_builder_t const*, hb_aat_map_t*)
00000000006b4490 0000000000000060 W hb_aat_map_builder_t::feature_info_t::cmp(void const*, void const*)
00000000006b44f0 0000000000000094 W hb_aat_map_builder_t::feature_event_t::cmp(void const*, void const*)
00000000006b4590 0000000000000420 t void sort_r_simple<>(void*, unsigned long, unsigned long, int (*)(void const*, void const*))
00000000006b49b0 0000000000000864 t hb_aat_map_builder_t::compile(hb_aat_map_t&)
00000000006b5220 000000000000011c t hb_table_lazy_loader_t<AAT::feat, 34u, false>::create(hb_face_t*)
00000000006b5340 00000000000006ac t hb_aat_map_builder_t::add_feature(hb_feature_t const&)
00000000006b59f0 000000000000000c T hb_blob_get_empty
00000000006b5a00 0000000000000058 T hb_blob_reference
00000000006b5a60 0000000000000168 T hb_blob_destroy
00000000006b5bd0 0000000000000004 t _hb_blob_destroy(void*)
00000000006b5be0 0000000000000018 T hb_blob_make_immutable
00000000006b5c00 00000000000000b0 t hb_blob_t::try_make_writable()
00000000006b5cb0 0000000000000060 T hb_blob_get_data_writable
00000000006b5d10 00000000000000d4 T hb_blob_create_or_fail
00000000006b5df0 0000000000000030 T hb_blob_create
00000000006b5e20 0000000000000094 T hb_blob_create_sub_blob
00000000006b5ec0 00000000000000d4 t buffer_verify_error(hb_buffer_t*, hb_font_t*, char const*, ...)
00000000006b5fa0 000000000000093c t hb_buffer_t::verify(hb_buffer_t*, hb_font_t*, hb_feature_t const*, unsigned int, char const* const*)
00000000006b68e0 0000000000000004 t hb_draw_move_to_nil(hb_draw_funcs_t*, void*, hb_draw_state_t*, float, float, void*)
00000000006b68f0 0000000000000054 t hb_draw_quadratic_to_nil(hb_draw_funcs_t*, void*, hb_draw_state_t*, float, float, float, float, void*)
00000000006b6950 0000000000000004 t hb_draw_cubic_to_nil(hb_draw_funcs_t*, void*, hb_draw_state_t*, float, float, float, float, float, float, void*)
00000000006b6960 0000000000000004 t hb_draw_close_path_nil(hb_draw_funcs_t*, void*, hb_draw_state_t*, void*)
00000000006b6970 000000000000008c t _hb_draw_funcs_set_middle(hb_draw_funcs_t*, void*, void (*)(void*))
00000000006b6a00 0000000000000004 t hb_draw_line_to_nil(hb_draw_funcs_t*, void*, hb_draw_state_t*, float, float, void*)
00000000006b6a10 0000000000000070 t _hb_draw_funcs_set_preamble(hb_draw_funcs_t*, bool, void**, void (**)(void*))
00000000006b6a80 00000000000000c0 T hb_draw_funcs_set_move_to_func
00000000006b6b40 00000000000000c0 T hb_draw_funcs_set_line_to_func
00000000006b6c00 00000000000000c0 T hb_draw_funcs_set_quadratic_to_func
00000000006b6cc0 00000000000000c0 T hb_draw_funcs_set_cubic_to_func
00000000006b6d80 00000000000000c0 T hb_draw_funcs_set_close_path_func
00000000006b6e40 0000000000000070 T hb_draw_funcs_create
00000000006b6eb0 000000000000000c T hb_draw_funcs_get_empty
00000000006b6ec0 00000000000001f8 T hb_draw_funcs_destroy
00000000006b70c0 0000000000000018 T hb_draw_funcs_make_immutable
00000000006b70e0 0000000000000028 t _hb_face_for_data_closure_destroy(void*)
00000000006b7110 00000000000000e4 t void hb_object_fini<hb_sparseset_t<hb_bit_set_invertible_t> >(hb_sparseset_t<hb_bit_set_invertible_t>*)
00000000006b7110 00000000000000e4 t void hb_object_fini<hb_face_t>(hb_face_t*)
00000000006b7200 0000000000000204 t OT::OpenTypeFontFile::get_face(unsigned int, unsigned int*) const
00000000006b7410 0000000000000134 t _hb_face_for_data_reference_table(hb_face_t*, unsigned int, void*)
00000000006b7550 000000000000000c T hb_face_get_empty
00000000006b7560 00000000000000fc T hb_face_create_for_tables
00000000006b7660 0000000000000058 T hb_face_reference
00000000006b76c0 00000000000000f8 T hb_face_destroy
00000000006b77c0 00000000000003cc T hb_face_set_user_data
00000000006b7b90 00000000000000d8 T hb_face_get_user_data
00000000006b7c70 0000000000000018 T hb_face_make_immutable
00000000006b7c90 0000000000000030 T hb_face_reference_table
00000000006b7cc0 0000000000000014 T hb_face_set_index
00000000006b7ce0 000000000000001c T hb_face_set_upem
00000000006b7d00 0000000000000018 T hb_face_get_upem
00000000006b7d20 000000000000001c T hb_face_get_glyph_count
00000000006b7d40 00000000000001e4 t bool OT::ArrayOf<OT::OffsetTo<OT::OpenTypeOffsetTable, OT::IntType<unsigned int, 4u>, true>, OT::IntType<unsigned int, 4u> >::sanitize<OT::TTCHeaderVersion1 const*>(hb_sanitize_context_t*, OT::TTCHeaderVersion1 const*&&) const
00000000006b7f30 0000000000000240 t bool OT::UnsizedArrayOf<OT::ResourceRecord>::sanitize<void const*&>(hb_sanitize_context_t*, unsigned int, void const*&) const
00000000006b8170 00000000000001c4 t bool OT::ArrayOfM1<OT::ResourceTypeRecord, OT::IntType<unsigned short, 2u> >::sanitize<OT::ArrayOfM1<OT::ResourceTypeRecord, OT::IntType<unsigned short, 2u> > const*, void const*&>(hb_sanitize_context_t*, OT::ArrayOfM1<OT::ResourceTypeRecord, OT::IntType<unsigned short, 2u> > const*&&, void const*&) const
00000000006b8340 00000000000001b0 t OT::ResourceForkHeader::sanitize(hb_sanitize_context_t*) const
00000000006b84f0 00000000000001b4 t OT::OpenTypeFontFile::sanitize(hb_sanitize_context_t*) const
00000000006b86b0 000000000000031c t hb_blob_t* hb_sanitize_context_t::sanitize_blob<OT::OpenTypeFontFile>(hb_blob_t*)
00000000006b89d0 00000000000000a0 T hb_face_create
00000000006b8a70 0000000000000008 t _hb_fallback_shaper_face_data_create
00000000006b8a80 0000000000000004 t _hb_fallback_shaper_face_data_destroy
00000000006b8a90 0000000000000008 t _hb_fallback_shaper_font_data_create
00000000006b8aa0 0000000000000004 t _hb_fallback_shaper_font_data_destroy
00000000006b8ab0 00000000000004ec t _hb_fallback_shape
00000000006b8fa0 0000000000000020 t OT::cff1::lookup_expert_charset_for_sid(unsigned int)
00000000006b8fc0 0000000000000020 t OT::cff1::lookup_expert_subset_charset_for_sid(unsigned int)
00000000006b8fe0 0000000000000064 t OT::cff1::lookup_expert_charset_for_glyph(unsigned int)
00000000006b9050 0000000000000064 t OT::cff1::lookup_expert_subset_charset_for_glyph(unsigned int)
00000000006b90c0 00000000000000f8 t cff1_path_param_t::move_to(CFF::point_t const&)
00000000006b91c0 00000000000000e8 t cff1_path_param_t::line_to(CFF::point_t const&)
00000000006b92b0 0000000000000140 t cff1_path_param_t::cubic_to(CFF::point_t const&, CFF::point_t const&, CFF::point_t const&)
00000000006b93f0 000000000000017c t OT::cff1::accelerator_templ_t<CFF::cff1_private_dict_opset_t, CFF::cff1_private_dict_values_base_t<CFF::dict_val_t> >::std_code_to_glyph(unsigned int) const
00000000006b9570 0000000000000420 t CFF::path_procs_t<cff1_path_procs_extents_t, CFF::cff1_cs_interp_env_t, cff1_extents_param_t>::hlineto(CFF::cff1_cs_interp_env_t&, cff1_extents_param_t&)
00000000006b9990 0000000000000424 t CFF::path_procs_t<cff1_path_procs_extents_t, CFF::cff1_cs_interp_env_t, cff1_extents_param_t>::vlineto(CFF::cff1_cs_interp_env_t&, cff1_extents_param_t&)
00000000006b9dc0 0000000000000370 t CFF::path_procs_t<cff1_path_procs_extents_t, CFF::cff1_cs_interp_env_t, cff1_extents_param_t>::rrcurveto(CFF::cff1_cs_interp_env_t&, cff1_extents_param_t&)
00000000006ba130 0000000000000564 t CFF::path_procs_t<cff1_path_procs_extents_t, CFF::cff1_cs_interp_env_t, cff1_extents_param_t>::rcurveline(CFF::cff1_cs_interp_env_t&, cff1_extents_param_t&)
00000000006ba6a0 0000000000000568 t CFF::path_procs_t<cff1_path_procs_extents_t, CFF::cff1_cs_interp_env_t, cff1_extents_param_t>::rlinecurve(CFF::cff1_cs_interp_env_t&, cff1_extents_param_t&)
00000000006bac10 0000000000000dec t CFF::path_procs_t<cff1_path_procs_extents_t, CFF::cff1_cs_interp_env_t, cff1_extents_param_t>::vhcurveto(CFF::cff1_cs_interp_env_t&, cff1_extents_param_t&)
00000000006bba00 0000000000000dec t CFF::path_procs_t<cff1_path_procs_extents_t, CFF::cff1_cs_interp_env_t, cff1_extents_param_t>::hvcurveto(CFF::cff1_cs_interp_env_t&, cff1_extents_param_t&)
00000000006bc7f0 00000000000003fc t CFF::path_procs_t<cff1_path_procs_extents_t, CFF::cff1_cs_interp_env_t, cff1_extents_param_t>::hflex(CFF::cff1_cs_interp_env_t&, cff1_extents_param_t&)
00000000006bcbf0 000000000000041c t CFF::path_procs_t<cff1_path_procs_extents_t, CFF::cff1_cs_interp_env_t, cff1_extents_param_t>::flex(CFF::cff1_cs_interp_env_t&, cff1_extents_param_t&)
00000000006bd010 0000000000000408 t CFF::path_procs_t<cff1_path_procs_extents_t, CFF::cff1_cs_interp_env_t, cff1_extents_param_t>::hflex1(CFF::cff1_cs_interp_env_t&, cff1_extents_param_t&)
00000000006bd420 0000000000000378 t CFF::path_procs_t<cff1_path_procs_extents_t, CFF::cff1_cs_interp_env_t, cff1_extents_param_t>::flex1(CFF::cff1_cs_interp_env_t&, cff1_extents_param_t&)
00000000006bd7a0 0000000000000fd0 t CFF::cs_opset_t<CFF::number_t, cff1_cs_opset_extents_t, CFF::cff1_cs_interp_env_t, cff1_extents_param_t, cff1_path_procs_extents_t>::process_op(unsigned int, CFF::cff1_cs_interp_env_t&, cff1_extents_param_t&)
00000000006be770 00000000000003f4 t _get_bounds(OT::cff1::accelerator_t const*, unsigned int, bounds_t&, bool)
00000000006beb70 00000000000000e4 t OT::cff1::accelerator_t::get_extents(hb_font_t*, unsigned int, hb_glyph_extents_t*) const
00000000006bec60 0000000000000344 t cff1_cs_opset_extents_t::process_seac(CFF::cff1_cs_interp_env_t&, cff1_extents_param_t&)
00000000006befb0 00000000000002f0 t CFF::path_procs_t<cff1_path_procs_path_t, CFF::cff1_cs_interp_env_t, cff1_path_param_t>::rcurveline(CFF::cff1_cs_interp_env_t&, cff1_path_param_t&)
00000000006bf2a0 00000000000002cc t CFF::path_procs_t<cff1_path_procs_path_t, CFF::cff1_cs_interp_env_t, cff1_path_param_t>::rlinecurve(CFF::cff1_cs_interp_env_t&, cff1_path_param_t&)
00000000006bf570 0000000000000710 t CFF::path_procs_t<cff1_path_procs_path_t, CFF::cff1_cs_interp_env_t, cff1_path_param_t>::vhcurveto(CFF::cff1_cs_interp_env_t&, cff1_path_param_t&)
00000000006bfc80 0000000000000710 t CFF::path_procs_t<cff1_path_procs_path_t, CFF::cff1_cs_interp_env_t, cff1_path_param_t>::hvcurveto(CFF::cff1_cs_interp_env_t&, cff1_path_param_t&)
00000000006c0390 00000000000000f8 t CFF::path_procs_t<cff1_path_procs_path_t, CFF::cff1_cs_interp_env_t, cff1_path_param_t>::hflex(CFF::cff1_cs_interp_env_t&, cff1_path_param_t&)
00000000006c0490 00000000000000bc t CFF::path_procs_t<cff1_path_procs_path_t, CFF::cff1_cs_interp_env_t, cff1_path_param_t>::flex(CFF::cff1_cs_interp_env_t&, cff1_path_param_t&)
00000000006c0550 00000000000000f0 t CFF::path_procs_t<cff1_path_procs_path_t, CFF::cff1_cs_interp_env_t, cff1_path_param_t>::hflex1(CFF::cff1_cs_interp_env_t&, cff1_path_param_t&)
00000000006c0640 000000000000010c t CFF::path_procs_t<cff1_path_procs_path_t, CFF::cff1_cs_interp_env_t, cff1_path_param_t>::flex1(CFF::cff1_cs_interp_env_t&, cff1_path_param_t&)
00000000006c0750 00000000000011f4 t CFF::cs_opset_t<CFF::number_t, cff1_cs_opset_path_t, CFF::cff1_cs_interp_env_t, cff1_path_param_t, cff1_path_procs_path_t>::process_op(unsigned int, CFF::cff1_cs_interp_env_t&, cff1_path_param_t&)
00000000006c1950 0000000000000464 t _get_path(OT::cff1::accelerator_t const*, hb_font_t*, unsigned int, hb_draw_session_t&, bool, CFF::point_t*)
00000000006c1dc0 000000000000000c t OT::cff1::accelerator_t::get_path(hb_font_t*, unsigned int, hb_draw_session_t&) const
00000000006c1dd0 00000000000001ec t cff1_cs_opset_path_t::process_seac(CFF::cff1_cs_interp_env_t&, cff1_path_param_t&)
00000000006c1fc0 0000000000000028 t CFF::CFFIndex<OT::IntType<unsigned int, 4u> >::offset_at(unsigned int) const [clone .part.0]
00000000006c1ff0 00000000000000d8 t cff2_path_param_t::line_to(CFF::point_t const&) [clone .isra.0]
00000000006c20d0 0000000000000164 t cff2_path_param_t::cubic_to(CFF::point_t const&, CFF::point_t const&, CFF::point_t const&) [clone .isra.0]
00000000006c2240 00000000000000e8 t cff2_path_param_t::move_to(CFF::point_t const&) [clone .isra.0]
00000000006c2330 000000000000016c t OT::VarData::get_region_scalars(int const*, unsigned int, OT::VarRegionList const&, float*, unsigned int) const
00000000006c24a0 00000000000000a4 t CFF::FDSelect3_4<OT::IntType<unsigned int, 4u>, OT::IntType<unsigned short, 2u> >::get_fd(unsigned int) const
00000000006c2550 000000000000020c t CFF::CFFIndex<OT::IntType<unsigned int, 4u> >::operator[](unsigned int) const
00000000006c2760 00000000000001b8 t CFF::cff2_cs_interp_env_t<CFF::number_t>::cff2_cs_interp_env_t<OT::cff2::accelerator_t const>(hb_array_t<unsigned char const> const&, OT::cff2::accelerator_t const&, unsigned int, int const*, unsigned int)
00000000006c2760 00000000000001b8 W CFF::cff2_cs_interp_env_t<CFF::number_t>::cff2_cs_interp_env_t<OT::cff2::accelerator_t const>(hb_array_t<unsigned char const> const&, OT::cff2::accelerator_t const&, unsigned int, int const*, unsigned int)
00000000006c2920 00000000000002f0 t CFF::cs_interp_env_t<CFF::number_t, CFF::Subrs<OT::IntType<unsigned int, 4u> > >::call_subr(CFF::biased_subrs_t<CFF::Subrs<OT::IntType<unsigned int, 4u> > > const&, CFF::cs_type_t)
00000000006c2c10 00000000000003f4 t CFF::path_procs_t<cff2_path_procs_extents_t, CFF::cff2_cs_interp_env_t<CFF::number_t>, cff2_extents_param_t>::hlineto(CFF::cff2_cs_interp_env_t<CFF::number_t>&, cff2_extents_param_t&)
00000000006c3010 00000000000003f4 t CFF::path_procs_t<cff2_path_procs_extents_t, CFF::cff2_cs_interp_env_t<CFF::number_t>, cff2_extents_param_t>::vlineto(CFF::cff2_cs_interp_env_t<CFF::number_t>&, cff2_extents_param_t&)
00000000006c3410 0000000000000370 t CFF::path_procs_t<cff2_path_procs_extents_t, CFF::cff2_cs_interp_env_t<CFF::number_t>, cff2_extents_param_t>::rrcurveto(CFF::cff2_cs_interp_env_t<CFF::number_t>&, cff2_extents_param_t&)
00000000006c3780 0000000000000554 t CFF::path_procs_t<cff2_path_procs_extents_t, CFF::cff2_cs_interp_env_t<CFF::number_t>, cff2_extents_param_t>::rcurveline(CFF::cff2_cs_interp_env_t<CFF::number_t>&, cff2_extents_param_t&)
00000000006c3ce0 0000000000000554 t CFF::path_procs_t<cff2_path_procs_extents_t, CFF::cff2_cs_interp_env_t<CFF::number_t>, cff2_extents_param_t>::rlinecurve(CFF::cff2_cs_interp_env_t<CFF::number_t>&, cff2_extents_param_t&)
00000000006c4240 0000000000000db8 t CFF::path_procs_t<cff2_path_procs_extents_t, CFF::cff2_cs_interp_env_t<CFF::number_t>, cff2_extents_param_t>::vhcurveto(CFF::cff2_cs_interp_env_t<CFF::number_t>&, cff2_extents_param_t&)
00000000006c5000 0000000000000db0 t CFF::path_procs_t<cff2_path_procs_extents_t, CFF::cff2_cs_interp_env_t<CFF::number_t>, cff2_extents_param_t>::hvcurveto(CFF::cff2_cs_interp_env_t<CFF::number_t>&, cff2_extents_param_t&)
00000000006c5db0 00000000000003e8 t CFF::path_procs_t<cff2_path_procs_extents_t, CFF::cff2_cs_interp_env_t<CFF::number_t>, cff2_extents_param_t>::hflex(CFF::cff2_cs_interp_env_t<CFF::number_t>&, cff2_extents_param_t&)
00000000006c61a0 0000000000000408 t CFF::path_procs_t<cff2_path_procs_extents_t, CFF::cff2_cs_interp_env_t<CFF::number_t>, cff2_extents_param_t>::flex(CFF::cff2_cs_interp_env_t<CFF::number_t>&, cff2_extents_param_t&)
00000000006c65b0 00000000000003f4 t CFF::path_procs_t<cff2_path_procs_extents_t, CFF::cff2_cs_interp_env_t<CFF::number_t>, cff2_extents_param_t>::hflex1(CFF::cff2_cs_interp_env_t<CFF::number_t>&, cff2_extents_param_t&)
00000000006c69b0 0000000000000364 t CFF::path_procs_t<cff2_path_procs_extents_t, CFF::cff2_cs_interp_env_t<CFF::number_t>, cff2_extents_param_t>::flex1(CFF::cff2_cs_interp_env_t<CFF::number_t>&, cff2_extents_param_t&)
00000000006c6d20 0000000000000c18 t CFF::cs_opset_t<CFF::number_t, cff2_cs_opset_extents_t, CFF::cff2_cs_interp_env_t<CFF::number_t>, cff2_extents_param_t, cff2_path_procs_extents_t>::process_op(unsigned int, CFF::cff2_cs_interp_env_t<CFF::number_t>&, cff2_extents_param_t&)
00000000006c7940 0000000000000210 t CFF::cff2_cs_interp_env_t<CFF::number_t>::process_blend()
00000000006c7b50 00000000000005b0 t OT::cff2::accelerator_t::get_extents(hb_font_t*, unsigned int, hb_glyph_extents_t*) const
00000000006c8100 00000000000002f0 t CFF::path_procs_t<cff2_path_procs_path_t, CFF::cff2_cs_interp_env_t<CFF::number_t>, cff2_path_param_t>::rcurveline(CFF::cff2_cs_interp_env_t<CFF::number_t>&, cff2_path_param_t&)
00000000006c83f0 00000000000002d0 t CFF::path_procs_t<cff2_path_procs_path_t, CFF::cff2_cs_interp_env_t<CFF::number_t>, cff2_path_param_t>::rlinecurve(CFF::cff2_cs_interp_env_t<CFF::number_t>&, cff2_path_param_t&)
00000000006c86c0 0000000000000718 t CFF::path_procs_t<cff2_path_procs_path_t, CFF::cff2_cs_interp_env_t<CFF::number_t>, cff2_path_param_t>::vhcurveto(CFF::cff2_cs_interp_env_t<CFF::number_t>&, cff2_path_param_t&)
00000000006c8de0 0000000000000718 t CFF::path_procs_t<cff2_path_procs_path_t, CFF::cff2_cs_interp_env_t<CFF::number_t>, cff2_path_param_t>::hvcurveto(CFF::cff2_cs_interp_env_t<CFF::number_t>&, cff2_path_param_t&)
00000000006c9500 0000000000000100 t CFF::path_procs_t<cff2_path_procs_path_t, CFF::cff2_cs_interp_env_t<CFF::number_t>, cff2_path_param_t>::hflex(CFF::cff2_cs_interp_env_t<CFF::number_t>&, cff2_path_param_t&)
00000000006c9600 00000000000000c0 t CFF::path_procs_t<cff2_path_procs_path_t, CFF::cff2_cs_interp_env_t<CFF::number_t>, cff2_path_param_t>::flex(CFF::cff2_cs_interp_env_t<CFF::number_t>&, cff2_path_param_t&)
00000000006c96c0 00000000000000f4 t CFF::path_procs_t<cff2_path_procs_path_t, CFF::cff2_cs_interp_env_t<CFF::number_t>, cff2_path_param_t>::hflex1(CFF::cff2_cs_interp_env_t<CFF::number_t>&, cff2_path_param_t&)
00000000006c97c0 0000000000000114 t CFF::path_procs_t<cff2_path_procs_path_t, CFF::cff2_cs_interp_env_t<CFF::number_t>, cff2_path_param_t>::flex1(CFF::cff2_cs_interp_env_t<CFF::number_t>&, cff2_path_param_t&)
00000000006c98e0 0000000000000e34 t CFF::cs_opset_t<CFF::number_t, cff2_cs_opset_path_t, CFF::cff2_cs_interp_env_t<CFF::number_t>, cff2_path_param_t, cff2_path_procs_path_t>::process_op(unsigned int, CFF::cff2_cs_interp_env_t<CFF::number_t>&, cff2_path_param_t&)
00000000006ca720 00000000000006c0 t OT::cff2::accelerator_t::get_path(hb_font_t*, unsigned int, hb_draw_session_t&) const
00000000006cade0 0000000000000220 t OT::CPAL::sanitize(hb_sanitize_context_t*) const
00000000006cb000 00000000000001b8 t hb_lazy_loader_t<OT::CPAL, hb_table_lazy_loader_t<OT::CPAL, 36u, true>, hb_face_t, 36u, hb_blob_t>::get() const
00000000006cb1c0 0000000000000148 T hb_ot_color_palette_get_colors
00000000006cb310 0000000000000008 t hb_ot_face_t::init0(hb_face_t*)
00000000006cb320 0000000000000164 W OT::cff2::accelerator_templ_t<CFF::cff2_private_dict_opset_t, CFF::cff2_private_dict_values_base_t<CFF::dict_val_t> >::~accelerator_templ_t()
00000000006cb320 0000000000000164 t OT::cff2::accelerator_templ_t<CFF::cff2_private_dict_opset_t, CFF::cff2_private_dict_values_base_t<CFF::dict_val_t> >::~accelerator_templ_t()
00000000006cb490 00000000000001b8 t hb_lazy_loader_t<OT::cff1_accelerator_t, hb_face_lazy_loader_t<OT::cff1_accelerator_t, 16u>, hb_face_t, 16u, OT::cff1_accelerator_t>::fini()
00000000006cb650 00000000000006e4 t hb_ot_face_t::fini()
00000000006cbd40 0000000000000004 t hb_paint_push_transform_nil(hb_paint_funcs_t*, void*, float, float, float, float, float, float, void*)
00000000006cbd50 0000000000000004 t hb_paint_pop_transform_nil(hb_paint_funcs_t*, void*, void*)
00000000006cbd60 0000000000000004 t hb_paint_push_clip_glyph_nil(hb_paint_funcs_t*, void*, unsigned int, hb_font_t*, void*)
00000000006cbd70 0000000000000004 t hb_paint_push_clip_rectangle_nil(hb_paint_funcs_t*, void*, float, float, float, float, void*)
00000000006cbd80 0000000000000004 t hb_paint_color_nil(hb_paint_funcs_t*, void*, int, unsigned int, void*)
00000000006cbd90 0000000000000008 t hb_paint_image_nil(hb_paint_funcs_t*, void*, hb_blob_t*, unsigned int, unsigned int, unsigned int, float, hb_glyph_extents_t*, void*)
00000000006cbda0 0000000000000004 t hb_paint_linear_gradient_nil(hb_paint_funcs_t*, void*, hb_color_line_t*, float, float, float, float, float, float, void*)
00000000006cbdb0 0000000000000004 t hb_paint_sweep_gradient_nil(hb_paint_funcs_t*, void*, hb_color_line_t*, float, float, float, float, void*)
00000000006cbdc0 0000000000000004 t hb_paint_pop_group_nil(hb_paint_funcs_t*, void*, hb_paint_composite_mode_t, void*)
00000000006cbdd0 0000000000000008 t hb_paint_custom_palette_color_nil(hb_paint_funcs_t*, void*, unsigned int, unsigned int*, void*)
00000000006cbde0 000000000000008c t _hb_paint_funcs_set_middle(hb_paint_funcs_t*, void*, void (*)(void*))
00000000006cbe70 0000000000000004 t hb_paint_radial_gradient_nil(hb_paint_funcs_t*, void*, hb_color_line_t*, float, float, float, float, float, float, void*)
00000000006cbe80 0000000000000004 t hb_paint_pop_clip_nil(hb_paint_funcs_t*, void*, void*)
00000000006cbe90 0000000000000070 t _hb_paint_funcs_set_preamble(hb_paint_funcs_t*, bool, void**, void (**)(void*))
00000000006cbf00 0000000000000004 t hb_paint_push_group_nil(hb_paint_funcs_t*, void*, void*)
00000000006cbf10 00000000000000c0 T hb_paint_funcs_set_push_transform_func
00000000006cbfd0 00000000000000c0 T hb_paint_funcs_set_pop_transform_func
00000000006cc090 00000000000000c0 T hb_paint_funcs_set_push_clip_glyph_func
00000000006cc150 00000000000000c0 T hb_paint_funcs_set_push_clip_rectangle_func
00000000006cc210 00000000000000c0 T hb_paint_funcs_set_pop_clip_func
00000000006cc2d0 00000000000000c0 T hb_paint_funcs_set_color_func
00000000006cc390 00000000000000c0 T hb_paint_funcs_set_image_func
00000000006cc450 00000000000000c0 T hb_paint_funcs_set_linear_gradient_func
00000000006cc510 00000000000000c0 T hb_paint_funcs_set_radial_gradient_func
00000000006cc5d0 00000000000000c0 T hb_paint_funcs_set_sweep_gradient_func
00000000006cc690 00000000000000c0 T hb_paint_funcs_set_push_group_func
00000000006cc750 00000000000000c0 T hb_paint_funcs_set_pop_group_func
00000000006cc810 0000000000000080 T hb_paint_funcs_create
00000000006cc890 000000000000000c T hb_paint_funcs_get_empty
00000000006cc8a0 00000000000002d8 T hb_paint_funcs_destroy
00000000006ccb80 0000000000000018 T hb_paint_funcs_make_immutable
00000000006ccba0 0000000000000010 t OT::match_glyph(hb_glyph_info_t&, unsigned int, void const*)
00000000006ccbb0 0000000000000008 W bool OT::hb_accelerate_subtables_context_t::cache_func_to<OT::Layout::GPOS_impl::SinglePosFormat1>(void const*, OT::hb_ot_apply_context_t*, bool)
00000000006ccbc0 0000000000000008 W bool OT::hb_accelerate_subtables_context_t::cache_func_to<OT::Layout::GPOS_impl::SinglePosFormat2>(void const*, OT::hb_ot_apply_context_t*, bool)
00000000006ccbd0 0000000000000008 W bool OT::hb_accelerate_subtables_context_t::cache_func_to<OT::Layout::GPOS_impl::PairPosFormat1_3<OT::Layout::SmallTypes> >(void const*, OT::hb_ot_apply_context_t*, bool)
00000000006ccbe0 0000000000000008 W bool OT::hb_accelerate_subtables_context_t::cache_func_to<OT::Layout::GPOS_impl::PairPosFormat2_4<OT::Layout::SmallTypes> >(void const*, OT::hb_ot_apply_context_t*, bool)
00000000006ccbf0 0000000000000008 W bool OT::hb_accelerate_subtables_context_t::cache_func_to<OT::Layout::GPOS_impl::CursivePosFormat1>(void const*, OT::hb_ot_apply_context_t*, bool)
00000000006ccc00 0000000000000008 W bool OT::hb_accelerate_subtables_context_t::cache_func_to<OT::Layout::GPOS_impl::MarkBasePosFormat1_2<OT::Layout::SmallTypes> >(void const*, OT::hb_ot_apply_context_t*, bool)
00000000006ccc10 0000000000000008 W bool OT::hb_accelerate_subtables_context_t::cache_func_to<OT::Layout::GPOS_impl::MarkLigPosFormat1_2<OT::Layout::SmallTypes> >(void const*, OT::hb_ot_apply_context_t*, bool)
00000000006ccc20 0000000000000008 W bool OT::hb_accelerate_subtables_context_t::cache_func_to<OT::Layout::GPOS_impl::MarkMarkPosFormat1_2<OT::Layout::SmallTypes> >(void const*, OT::hb_ot_apply_context_t*, bool)
00000000006ccc30 0000000000000008 W bool OT::hb_accelerate_subtables_context_t::cache_func_to<OT::ContextFormat1_4<OT::Layout::SmallTypes> >(void const*, OT::hb_ot_apply_context_t*, bool)
00000000006ccc40 0000000000000008 W bool OT::hb_accelerate_subtables_context_t::cache_func_to<OT::ContextFormat3>(void const*, OT::hb_ot_apply_context_t*, bool)
00000000006ccc50 0000000000000008 W bool OT::hb_accelerate_subtables_context_t::cache_func_to<OT::ChainContextFormat1_4<OT::Layout::SmallTypes> >(void const*, OT::hb_ot_apply_context_t*, bool)
00000000006ccc60 0000000000000008 W bool OT::hb_accelerate_subtables_context_t::cache_func_to<OT::ChainContextFormat3>(void const*, OT::hb_ot_apply_context_t*, bool)
00000000006ccc70 0000000000000008 W bool OT::hb_accelerate_subtables_context_t::cache_func_to<OT::Layout::GSUB_impl::SingleSubstFormat1_3<OT::Layout::SmallTypes> >(void const*, OT::hb_ot_apply_context_t*, bool)
00000000006ccc80 0000000000000008 W bool OT::hb_accelerate_subtables_context_t::cache_func_to<OT::Layout::GSUB_impl::SingleSubstFormat2_4<OT::Layout::SmallTypes> >(void const*, OT::hb_ot_apply_context_t*, bool)
00000000006ccc90 0000000000000008 W bool OT::hb_accelerate_subtables_context_t::cache_func_to<OT::Layout::GSUB_impl::MultipleSubstFormat1_2<OT::Layout::SmallTypes> >(void const*, OT::hb_ot_apply_context_t*, bool)
00000000006ccca0 0000000000000008 W bool OT::hb_accelerate_subtables_context_t::cache_func_to<OT::Layout::GSUB_impl::AlternateSubstFormat1_2<OT::Layout::SmallTypes> >(void const*, OT::hb_ot_apply_context_t*, bool)
00000000006cccb0 0000000000000008 W bool OT::hb_accelerate_subtables_context_t::cache_func_to<OT::Layout::GSUB_impl::LigatureSubstFormat1_2<OT::Layout::SmallTypes> >(void const*, OT::hb_ot_apply_context_t*, bool)
00000000006cccc0 0000000000000008 W bool OT::hb_accelerate_subtables_context_t::cache_func_to<OT::Layout::GSUB_impl::ReverseChainSingleSubstFormat1>(void const*, OT::hb_ot_apply_context_t*, bool)
00000000006cccd0 00000000000000ac t OT::Layout::GPOS_impl::reverse_cursive_minor_offset(hb_glyph_position_t*, unsigned int, hb_direction_t, unsigned int)
00000000006ccd80 00000000000001d4 t OT::Layout::propagate_attachment_offsets(hb_glyph_position_t*, unsigned int, unsigned int, hb_direction_t, unsigned int)
00000000006ccf60 0000000000000028 t hb_sanitize_context_t::reset_object() [clone .part.0]
00000000006ccf90 0000000000000028 t hb_buffer_t::deallocate_var(unsigned int, unsigned int) [clone .part.0]
00000000006ccfc0 0000000000000028 t hb_buffer_t::assert_var(unsigned int, unsigned int) [clone .part.0]
00000000006ccff0 0000000000000028 t bool hb_buffer_t::replace_glyphs<unsigned int>(unsigned int, unsigned int, unsigned int const*) [clone .part.0]
00000000006cd020 0000000000000090 W bool OT::hb_accelerate_subtables_context_t::cache_func_to<OT::ChainContextFormat2_5<OT::Layout::SmallTypes> >(void const*, OT::hb_ot_apply_context_t*, bool)
00000000006cd0b0 00000000000001cc t bool OT::Layout::Common::Coverage::collect_coverage<hb_set_digest_combiner_t<hb_set_digest_bits_pattern_t<unsigned long, 4u>, hb_set_digest_combiner_t<hb_set_digest_bits_pattern_t<unsigned long, 0u>, hb_set_digest_bits_pattern_t<unsigned long, 9u> > > >(hb_set_digest_combiner_t<hb_set_digest_bits_pattern_t<unsigned long, 4u>, hb_set_digest_combiner_t<hb_set_digest_bits_pattern_t<unsigned long, 0u>, hb_set_digest_bits_pattern_t<unsigned long, 9u> > >*) const [clone .isra.0]
00000000006cd280 000000000000021c t OT::hb_accelerate_subtables_context_t::return_t OT::Context::dispatch<OT::hb_accelerate_subtables_context_t>(OT::hb_accelerate_subtables_context_t*) const [clone .isra.0]
00000000006cd4a0 0000000000000090 W bool OT::hb_accelerate_subtables_context_t::cache_func_to<OT::ContextFormat2_5<OT::Layout::SmallTypes> >(void const*, OT::hb_ot_apply_context_t*, bool)
00000000006cd530 000000000000024c t OT::hb_accelerate_subtables_context_t::return_t OT::ChainContext::dispatch<OT::hb_accelerate_subtables_context_t>(OT::hb_accelerate_subtables_context_t*) const [clone .isra.0]
00000000006cd780 0000000000000264 t OT::hb_accelerate_subtables_context_t::return_t OT::Layout::GPOS_impl::PosLookupSubTable::dispatch<OT::hb_accelerate_subtables_context_t>(OT::hb_accelerate_subtables_context_t*, unsigned int) const [clone .isra.0]
00000000006cd9f0 0000000000000108 t OT::match_class(hb_glyph_info_t&, unsigned int, void const*)
00000000006cdb00 00000000000001fc t OT::hb_accelerate_subtables_context_t::return_t OT::Layout::GSUB_impl::SubstLookupSubTable::dispatch<OT::hb_accelerate_subtables_context_t>(OT::hb_accelerate_subtables_context_t*, unsigned int) const [clone .isra.0]
00000000006cdd00 0000000000000110 t hb_buffer_t::reverse_range(unsigned int, unsigned int)
00000000006cde10 0000000000000350 t OT::apply_lookup(OT::hb_ot_apply_context_t*, unsigned int, unsigned int*, unsigned int, OT::LookupRecord const*, unsigned int)
00000000006ce160 0000000000000024 t hb_buffer_t::unsafe_to_concat(unsigned int, unsigned int)
00000000006ce190 0000000000000024 t hb_buffer_t::unsafe_to_concat_from_outbuffer(unsigned int, unsigned int)
00000000006ce1c0 0000000000000124 t OT::Layout::Common::Coverage::get_coverage(unsigned int) const
00000000006ce2f0 0000000000000034 t OT::match_coverage(hb_glyph_info_t&, unsigned int, void const*)
00000000006ce330 0000000000000088 t OT::IndexArray::get_indexes(unsigned int, unsigned int*, unsigned int*) const
00000000006ce3c0 00000000000000ec t OT::ClassDef::get_class(unsigned int) const
00000000006ce4b0 0000000000000060 t OT::match_class_cached(hb_glyph_info_t&, unsigned int, void const*)
00000000006ce510 00000000000001a8 t OT::Device::get_x_delta(hb_font_t*, OT::VariationStore const&, float*) const
00000000006ce6c0 00000000000001a8 t OT::Device::get_y_delta(hb_font_t*, OT::VariationStore const&, float*) const
00000000006ce870 00000000000001a0 t OT::hb_ot_apply_context_t::matcher_t::may_skip(OT::hb_ot_apply_context_t const*, hb_glyph_info_t const&) const
00000000006cea10 0000000000000048 t OT::hb_ot_apply_context_t::skipping_iterator_t::reset(unsigned int, unsigned int)
00000000006cea60 000000000000028c t bool OT::match_input<OT::HBGlyphID16>(OT::hb_ot_apply_context_t*, unsigned int, OT::HBGlyphID16 const*, bool (*)(hb_glyph_info_t&, unsigned int, void const*), void const*, unsigned int*, unsigned int*, unsigned int*)
00000000006cea60 000000000000028c t bool OT::match_input<OT::IntType<unsigned short, 2u> >(OT::hb_ot_apply_context_t*, unsigned int, OT::IntType<unsigned short, 2u> const*, bool (*)(hb_glyph_info_t&, unsigned int, void const*), void const*, unsigned int*, unsigned int*, unsigned int*)
00000000006cecf0 00000000000000d4 t bool OT::context_apply_lookup<OT::IntType<unsigned short, 2u> >(OT::hb_ot_apply_context_t*, unsigned int, OT::IntType<unsigned short, 2u> const*, unsigned int, OT::LookupRecord const*, OT::ContextApplyLookupContext const&) [clone .isra.0]
00000000006cedd0 00000000000000a4 W bool OT::hb_accelerate_subtables_context_t::apply_cached_to<OT::ContextFormat3>(void const*, OT::hb_ot_apply_context_t*)
00000000006cee80 00000000000000a4 W bool OT::hb_accelerate_subtables_context_t::apply_to<OT::ContextFormat3>(void const*, OT::hb_ot_apply_context_t*)
00000000006cef30 0000000000000170 t OT::hb_ot_apply_context_t::skipping_iterator_t::prev(unsigned int*)
00000000006cf0a0 0000000000000280 t bool OT::chain_context_apply_lookup<OT::IntType<unsigned short, 2u> >(OT::hb_ot_apply_context_t*, unsigned int, OT::IntType<unsigned short, 2u> const*, unsigned int, OT::IntType<unsigned short, 2u> const*, unsigned int, OT::IntType<unsigned short, 2u> const*, unsigned int, OT::LookupRecord const*, OT::ChainContextApplyLookupContext const&)
00000000006cf320 0000000000000158 W bool OT::hb_accelerate_subtables_context_t::apply_cached_to<OT::ChainContextFormat3>(void const*, OT::hb_ot_apply_context_t*)
00000000006cf480 0000000000000158 W bool OT::hb_accelerate_subtables_context_t::apply_to<OT::ChainContextFormat3>(void const*, OT::hb_ot_apply_context_t*)
00000000006cf5e0 0000000000000070 t OT::hb_ot_apply_context_t::init_iters()
00000000006cf650 0000000000000198 t OT::hb_ot_apply_context_t::_set_glyph_class(unsigned int, unsigned int, bool, bool)
00000000006cf7f0 00000000000000cc t OT::hb_ot_apply_context_t::replace_glyph(unsigned int)
00000000006cf8c0 0000000000000118 W bool OT::hb_accelerate_subtables_context_t::apply_cached_to<OT::Layout::GSUB_impl::SingleSubstFormat2_4<OT::Layout::SmallTypes> >(void const*, OT::hb_ot_apply_context_t*)
00000000006cf9e0 00000000000000ec W bool OT::hb_accelerate_subtables_context_t::apply_cached_to<OT::Layout::GSUB_impl::SingleSubstFormat1_3<OT::Layout::SmallTypes> >(void const*, OT::hb_ot_apply_context_t*)
00000000006cfad0 00000000000000ec W bool OT::hb_accelerate_subtables_context_t::apply_to<OT::Layout::GSUB_impl::SingleSubstFormat1_3<OT::Layout::SmallTypes> >(void const*, OT::hb_ot_apply_context_t*)
00000000006cfbc0 0000000000000118 W bool OT::hb_accelerate_subtables_context_t::apply_to<OT::Layout::GSUB_impl::SingleSubstFormat2_4<OT::Layout::SmallTypes> >(void const*, OT::hb_ot_apply_context_t*)
00000000006cfce0 000000000000017c t OT::hb_ot_layout_lookup_accelerator_t::apply(OT::hb_ot_apply_context_t*, unsigned int, bool) const
00000000006cfe60 00000000000002f8 t apply_forward(OT::hb_ot_apply_context_t*, OT::hb_ot_layout_lookup_accelerator_t const&, unsigned int) [clone .isra.0]
00000000006d0160 0000000000000064 t OT::GSUBGPOS::get_lookup(unsigned int) const
00000000006d01d0 000000000000009c t OT::GSUBGPOS::find_script_index(unsigned int, unsigned int*) const
00000000006d0270 00000000000003ac t OT::Layout::GPOS_impl::ValueFormat::apply_value(OT::hb_ot_apply_context_t*, void const*, OT::IntType<unsigned short, 2u> const*, hb_glyph_position_t&) const
00000000006d0620 0000000000000104 W bool OT::hb_accelerate_subtables_context_t::apply_cached_to<OT::Layout::GPOS_impl::SinglePosFormat1>(void const*, OT::hb_ot_apply_context_t*)
00000000006d0730 0000000000000148 W bool OT::hb_accelerate_subtables_context_t::apply_cached_to<OT::Layout::GPOS_impl::SinglePosFormat2>(void const*, OT::hb_ot_apply_context_t*)
00000000006d0880 0000000000000104 W bool OT::hb_accelerate_subtables_context_t::apply_to<OT::Layout::GPOS_impl::SinglePosFormat1>(void const*, OT::hb_ot_apply_context_t*)
00000000006d0990 0000000000000148 W bool OT::hb_accelerate_subtables_context_t::apply_to<OT::Layout::GPOS_impl::SinglePosFormat2>(void const*, OT::hb_ot_apply_context_t*)
00000000006d0ae0 0000000000000258 t OT::Layout::GPOS_impl::Anchor::get_anchor(OT::hb_ot_apply_context_t*, unsigned int, float*, float*) const
00000000006d0d40 00000000000004e0 t OT::Layout::GPOS_impl::CursivePosFormat1::apply(OT::hb_ot_apply_context_t*) const
00000000006d1220 0000000000000004 W bool OT::hb_accelerate_subtables_context_t::apply_to<OT::Layout::GPOS_impl::CursivePosFormat1>(void const*, OT::hb_ot_apply_context_t*)
00000000006d1230 0000000000000004 W bool OT::hb_accelerate_subtables_context_t::apply_cached_to<OT::Layout::GPOS_impl::CursivePosFormat1>(void const*, OT::hb_ot_apply_context_t*)
00000000006d1240 0000000000000244 t OT::Layout::GPOS_impl::MarkArray::apply(OT::hb_ot_apply_context_t*, unsigned int, unsigned int, OT::Layout::GPOS_impl::AnchorMatrix const&, unsigned int, unsigned int) const
00000000006d1490 0000000000000304 t OT::Layout::GSUB_impl::ReverseChainSingleSubstFormat1::apply(OT::hb_ot_apply_context_t*) const
00000000006d17a0 0000000000000004 W bool OT::hb_accelerate_subtables_context_t::apply_to<OT::Layout::GSUB_impl::ReverseChainSingleSubstFormat1>(void const*, OT::hb_ot_apply_context_t*)
00000000006d17b0 0000000000000004 W bool OT::hb_accelerate_subtables_context_t::apply_cached_to<OT::Layout::GSUB_impl::ReverseChainSingleSubstFormat1>(void const*, OT::hb_ot_apply_context_t*)
00000000006d17c0 0000000000000040 t hb_ot_layout_position_start(hb_font_t*, hb_buffer_t*)
00000000006d1800 0000000000000004 t hb_ot_layout_position_finish_advances(hb_font_t*, hb_buffer_t*)
00000000006d1810 00000000000000f8 t hb_ot_layout_position_finish_offsets(hb_font_t*, hb_buffer_t*)
00000000006d1910 0000000000000208 t bool OT::OffsetTo<OT::FeatureParams, OT::IntType<unsigned short, 2u>, true>::sanitize<unsigned int>(hb_sanitize_context_t*, void const*, unsigned int&&) const
00000000006d1b20 00000000000001d0 t OT::Feature::sanitize(hb_sanitize_context_t*, OT::Record_sanitize_closure_t const*) const
00000000006d1cf0 00000000000001ec t bool OT::ArrayOf<OT::Record<OT::LangSys>, OT::IntType<unsigned short, 2u> >::sanitize<OT::Script const*>(hb_sanitize_context_t*, OT::Script const*&&) const
00000000006d1ee0 00000000000001cc t bool OT::ArrayOf<OT::OffsetTo<OT::Condition, OT::IntType<unsigned int, 4u>, true>, OT::IntType<unsigned short, 2u> >::sanitize<OT::ConditionSet const*>(hb_sanitize_context_t*, OT::ConditionSet const*&&) const
00000000006d20b0 0000000000000218 t bool OT::ArrayOf<OT::FeatureTableSubstitutionRecord, OT::IntType<unsigned short, 2u> >::sanitize<OT::FeatureTableSubstitution const*>(hb_sanitize_context_t*, OT::FeatureTableSubstitution const*&&) const
00000000006d22d0 0000000000000244 t bool OT::ArrayOf<OT::FeatureVariationRecord, OT::IntType<unsigned int, 4u> >::sanitize<OT::FeatureVariations const*>(hb_sanitize_context_t*, OT::FeatureVariations const*&&) const
00000000006d2520 00000000000001b4 t bool OT::OffsetTo<OT::Device, OT::IntType<unsigned short, 2u>, true>::sanitize<>(hb_sanitize_context_t*, void const*) const
00000000006d26e0 0000000000000104 t OT::Layout::GPOS_impl::ValueFormat::sanitize_value_devices(hb_sanitize_context_t*, void const*, OT::IntType<unsigned short, 2u> const*) const
00000000006d27f0 0000000000000170 t OT::Layout::GPOS_impl::ValueFormat::sanitize_values_stride_unsafe(hb_sanitize_context_t*, void const*, OT::IntType<unsigned short, 2u> const*, unsigned int, unsigned int) const
00000000006d2960 00000000000000f4 t bool OT::ArrayOf<OT::OffsetTo<OT::Layout::Common::Coverage, OT::IntType<unsigned short, 2u>, true>, OT::IntType<unsigned short, 2u> >::sanitize<OT::ChainContextFormat3 const*>(hb_sanitize_context_t*, OT::ChainContextFormat3 const*&&) const
00000000006d2a60 0000000000000184 t bool OT::OffsetTo<OT::Layout::GPOS_impl::Anchor, OT::IntType<unsigned short, 2u>, true>::sanitize<>(hb_sanitize_context_t*, void const*) const
00000000006d2bf0 00000000000000f4 t bool OT::ArrayOf<OT::OffsetTo<OT::Layout::Common::Coverage, OT::IntType<unsigned short, 2u>, true>, OT::IntType<unsigned short, 2u> >::sanitize<OT::Layout::GSUB_impl::ReverseChainSingleSubstFormat1 const*>(hb_sanitize_context_t*, OT::Layout::GSUB_impl::ReverseChainSingleSubstFormat1 const*&&) const
00000000006d2cf0 0000000000000064 t OT::Layout::GSUB_impl::SubstLookupSubTable const& OT::Lookup::get_subtable<OT::Layout::GSUB_impl::SubstLookupSubTable>(unsigned int) const
00000000006d2d60 0000000000000348 t bool apply_string<GSUBProxy>(OT::hb_ot_apply_context_t*, GSUBProxy::Lookup const&, OT::hb_ot_layout_lookup_accelerator_t const&) [clone .isra.0]
00000000006d30b0 0000000000000004 t hb_ot_layout_substitute_lookup(OT::hb_ot_apply_context_t*, OT::Layout::GSUB_impl::SubstLookup const&, OT::hb_ot_layout_lookup_accelerator_t const&)
00000000006d30c0 000000000000005c t OT::ArrayOf<OT::IntType<unsigned short, 2u>, OT::IntType<unsigned short, 2u> >::sanitize_shallow(hb_sanitize_context_t*) const
00000000006d3120 0000000000000184 t OT::hb_ot_layout_lookup_accelerator_t* OT::hb_ot_layout_lookup_accelerator_t::create<OT::Layout::GPOS_impl::PosLookup>(OT::Layout::GPOS_impl::PosLookup const&)
00000000006d32b0 0000000000000248 W OT::hb_ot_apply_context_t::return_t OT::Layout::GPOS_impl::PosLookup::dispatch_recurse_func<OT::hb_ot_apply_context_t>(OT::hb_ot_apply_context_t*, unsigned int)
00000000006d3500 000000000000005c t OT::ArrayOf<OT::HBGlyphID16, OT::IntType<unsigned short, 2u> >::sanitize_shallow(hb_sanitize_context_t*) const
00000000006d3560 0000000000000184 t OT::hb_ot_layout_lookup_accelerator_t* OT::hb_ot_layout_lookup_accelerator_t::create<OT::Layout::GSUB_impl::SubstLookup>(OT::Layout::GSUB_impl::SubstLookup const&)
00000000006d36f0 0000000000000248 W OT::hb_ot_apply_context_t::return_t OT::Layout::GSUB_impl::SubstLookup::dispatch_recurse_func<OT::hb_ot_apply_context_t>(OT::hb_ot_apply_context_t*, unsigned int)
00000000006d3940 0000000000000100 t bool OT::OffsetTo<OT::FeatureVariations, OT::IntType<unsigned int, 4u>, true>::sanitize<>(hb_sanitize_context_t*, void const*) const
00000000006d3a40 0000000000000364 t AAT::KerxTable<OT::KernOT>::sanitize(hb_sanitize_context_t*) const
00000000006d3db0 0000000000000330 t OT::Layout::GPOS_impl::PairPosFormat2_4<OT::Layout::SmallTypes>::apply(OT::hb_ot_apply_context_t*) const
00000000006d40e0 0000000000000004 W bool OT::hb_accelerate_subtables_context_t::apply_to<OT::Layout::GPOS_impl::PairPosFormat2_4<OT::Layout::SmallTypes> >(void const*, OT::hb_ot_apply_context_t*)
00000000006d40f0 0000000000000004 W bool OT::hb_accelerate_subtables_context_t::apply_cached_to<OT::Layout::GPOS_impl::PairPosFormat2_4<OT::Layout::SmallTypes> >(void const*, OT::hb_ot_apply_context_t*)
00000000006d4100 00000000000002e8 t OT::Layout::GPOS_impl::MarkBasePosFormat1_2<OT::Layout::SmallTypes>::apply(OT::hb_ot_apply_context_t*) const
00000000006d43f0 0000000000000004 W bool OT::hb_accelerate_subtables_context_t::apply_cached_to<OT::Layout::GPOS_impl::MarkBasePosFormat1_2<OT::Layout::SmallTypes> >(void const*, OT::hb_ot_apply_context_t*)
00000000006d4400 0000000000000004 W bool OT::hb_accelerate_subtables_context_t::apply_to<OT::Layout::GPOS_impl::MarkBasePosFormat1_2<OT::Layout::SmallTypes> >(void const*, OT::hb_ot_apply_context_t*)
00000000006d4410 00000000000002dc t OT::Layout::GPOS_impl::MarkLigPosFormat1_2<OT::Layout::SmallTypes>::apply(OT::hb_ot_apply_context_t*) const
00000000006d46f0 0000000000000004 W bool OT::hb_accelerate_subtables_context_t::apply_cached_to<OT::Layout::GPOS_impl::MarkLigPosFormat1_2<OT::Layout::SmallTypes> >(void const*, OT::hb_ot_apply_context_t*)
00000000006d4700 0000000000000004 W bool OT::hb_accelerate_subtables_context_t::apply_to<OT::Layout::GPOS_impl::MarkLigPosFormat1_2<OT::Layout::SmallTypes> >(void const*, OT::hb_ot_apply_context_t*)
00000000006d4710 00000000000001f4 t OT::Layout::GPOS_impl::MarkMarkPosFormat1_2<OT::Layout::SmallTypes>::apply(OT::hb_ot_apply_context_t*) const
00000000006d4910 0000000000000004 W bool OT::hb_accelerate_subtables_context_t::apply_cached_to<OT::Layout::GPOS_impl::MarkMarkPosFormat1_2<OT::Layout::SmallTypes> >(void const*, OT::hb_ot_apply_context_t*)
00000000006d4920 0000000000000004 W bool OT::hb_accelerate_subtables_context_t::apply_to<OT::Layout::GPOS_impl::MarkMarkPosFormat1_2<OT::Layout::SmallTypes> >(void const*, OT::hb_ot_apply_context_t*)
00000000006d4930 0000000000000150 t OT::Layout::GSUB_impl::LigatureSubstFormat1_2<OT::Layout::SmallTypes>::would_apply(OT::hb_would_apply_context_t*) const
00000000006d4a80 0000000000000290 t OT::Layout::GPOS_impl::PairSet<OT::Layout::SmallTypes>::apply(OT::hb_ot_apply_context_t*, OT::Layout::GPOS_impl::ValueFormat const*, unsigned int) const
00000000006d4d10 0000000000000160 W bool OT::hb_accelerate_subtables_context_t::apply_to<OT::Layout::GPOS_impl::PairPosFormat1_3<OT::Layout::SmallTypes> >(void const*, OT::hb_ot_apply_context_t*)
00000000006d4e70 0000000000000160 W bool OT::hb_accelerate_subtables_context_t::apply_cached_to<OT::Layout::GPOS_impl::PairPosFormat1_3<OT::Layout::SmallTypes> >(void const*, OT::hb_ot_apply_context_t*)
00000000006d4fd0 00000000000002fc t OT::RuleSet<OT::Layout::SmallTypes>::apply(OT::hb_ot_apply_context_t*, OT::ContextApplyLookupContext const&) const
00000000006d52d0 00000000000000d8 W bool OT::hb_accelerate_subtables_context_t::apply_cached_to<OT::ContextFormat1_4<OT::Layout::SmallTypes> >(void const*, OT::hb_ot_apply_context_t*)
00000000006d53b0 000000000000013c W bool OT::hb_accelerate_subtables_context_t::apply_cached_to<OT::ContextFormat2_5<OT::Layout::SmallTypes> >(void const*, OT::hb_ot_apply_context_t*)
00000000006d54f0 00000000000000d8 W bool OT::hb_accelerate_subtables_context_t::apply_to<OT::ContextFormat1_4<OT::Layout::SmallTypes> >(void const*, OT::hb_ot_apply_context_t*)
00000000006d55d0 00000000000000f8 W bool OT::hb_accelerate_subtables_context_t::apply_to<OT::ContextFormat2_5<OT::Layout::SmallTypes> >(void const*, OT::hb_ot_apply_context_t*)
00000000006d56d0 0000000000000134 t OT::ChainRuleSet<OT::Layout::SmallTypes>::apply(OT::hb_ot_apply_context_t*, OT::ChainContextApplyLookupContext const&) const
00000000006d5810 00000000000000e4 W bool OT::hb_accelerate_subtables_context_t::apply_to<OT::ChainContextFormat1_4<OT::Layout::SmallTypes> >(void const*, OT::hb_ot_apply_context_t*)
00000000006d5900 000000000000015c W bool OT::hb_accelerate_subtables_context_t::apply_cached_to<OT::ChainContextFormat2_5<OT::Layout::SmallTypes> >(void const*, OT::hb_ot_apply_context_t*)
00000000006d5a60 00000000000000e4 W bool OT::hb_accelerate_subtables_context_t::apply_cached_to<OT::ChainContextFormat1_4<OT::Layout::SmallTypes> >(void const*, OT::hb_ot_apply_context_t*)
00000000006d5b50 0000000000000128 W bool OT::hb_accelerate_subtables_context_t::apply_to<OT::ChainContextFormat2_5<OT::Layout::SmallTypes> >(void const*, OT::hb_ot_apply_context_t*)
00000000006d5c80 0000000000000250 t bool OT::ArrayOf<OT::Record<OT::Script>, OT::IntType<unsigned short, 2u> >::sanitize<OT::RecordListOf<OT::Script> const*>(hb_sanitize_context_t*, OT::RecordListOf<OT::Script> const*&&) const
00000000006d5ed0 00000000000001e0 t bool OT::ArrayOf<OT::Record<OT::Feature>, OT::IntType<unsigned short, 2u> >::sanitize<OT::RecordListOf<OT::Feature> const*>(hb_sanitize_context_t*, OT::RecordListOf<OT::Feature> const*&&) const
00000000006d60b0 000000000000071c t void AAT::StateTableDriver<AAT::ObsoleteTypes, void>::drive<AAT::KerxSubTableFormat1<OT::KernAATSubTableHeader>::driver_context_t>(AAT::KerxSubTableFormat1<OT::KernAATSubTableHeader>::driver_context_t*, AAT::hb_aat_apply_context_t*)
00000000006d67d0 0000000000000328 t OT::Layout::GSUB_impl::Sequence<OT::Layout::SmallTypes>::apply(OT::hb_ot_apply_context_t*) const
00000000006d6b00 00000000000000c0 W bool OT::hb_accelerate_subtables_context_t::apply_cached_to<OT::Layout::GSUB_impl::MultipleSubstFormat1_2<OT::Layout::SmallTypes> >(void const*, OT::hb_ot_apply_context_t*)
00000000006d6bc0 00000000000000c0 W bool OT::hb_accelerate_subtables_context_t::apply_to<OT::Layout::GSUB_impl::MultipleSubstFormat1_2<OT::Layout::SmallTypes> >(void const*, OT::hb_ot_apply_context_t*)
00000000006d6c80 0000000000000250 t OT::Layout::GSUB_impl::AlternateSet<OT::Layout::SmallTypes>::apply(OT::hb_ot_apply_context_t*) const
00000000006d6ed0 00000000000000c0 W bool OT::hb_accelerate_subtables_context_t::apply_to<OT::Layout::GSUB_impl::AlternateSubstFormat1_2<OT::Layout::SmallTypes> >(void const*, OT::hb_ot_apply_context_t*)
00000000006d6f90 00000000000000c0 W bool OT::hb_accelerate_subtables_context_t::apply_cached_to<OT::Layout::GSUB_impl::AlternateSubstFormat1_2<OT::Layout::SmallTypes> >(void const*, OT::hb_ot_apply_context_t*)
00000000006d7050 0000000000000124 t OT::RuleSet<OT::Layout::SmallTypes>::would_apply(OT::hb_would_apply_context_t*, OT::ContextApplyLookupContext const&) const
00000000006d7180 0000000000000200 t OT::hb_would_apply_context_t::return_t OT::Context::dispatch<OT::hb_would_apply_context_t>(OT::hb_would_apply_context_t*) const
00000000006d7380 0000000000000168 t OT::ChainRuleSet<OT::Layout::SmallTypes>::would_apply(OT::hb_would_apply_context_t*, OT::ChainContextApplyLookupContext const&) const
00000000006d74f0 000000000000028c t OT::hb_would_apply_context_t::return_t OT::ChainContext::dispatch<OT::hb_would_apply_context_t>(OT::hb_would_apply_context_t*) const
00000000006d7780 0000000000000148 t OT::hb_would_apply_context_t::return_t OT::Layout::GSUB_impl::SubstLookupSubTable::dispatch<OT::hb_would_apply_context_t>(OT::hb_would_apply_context_t*, unsigned int) const
00000000006d78d0 000000000000067c t OT::Layout::GSUB_impl::Ligature<OT::Layout::SmallTypes>::apply(OT::hb_ot_apply_context_t*) const
00000000006d7f50 0000000000000130 W bool OT::hb_accelerate_subtables_context_t::apply_cached_to<OT::Layout::GSUB_impl::LigatureSubstFormat1_2<OT::Layout::SmallTypes> >(void const*, OT::hb_ot_apply_context_t*)
00000000006d8080 0000000000000130 W bool OT::hb_accelerate_subtables_context_t::apply_to<OT::Layout::GSUB_impl::LigatureSubstFormat1_2<OT::Layout::SmallTypes> >(void const*, OT::hb_ot_apply_context_t*)
00000000006d81b0 00000000000002dc t hb_sanitize_context_t::return_t OT::Layout::GPOS_impl::SinglePos::dispatch<hb_sanitize_context_t>(hb_sanitize_context_t*) const
00000000006d8490 0000000000000464 t AAT::KerxTable<OT::KernAAT>::sanitize(hb_sanitize_context_t*) const
00000000006d8900 0000000000000164 t hb_table_lazy_loader_t<OT::kern, 23u, true>::create(hb_face_t*)
00000000006d8a70 000000000000016c t hb_ot_layout_has_cross_kerning(hb_face_t*)
00000000006d8be0 00000000000000e8 t hb_ot_layout_has_kerning(hb_face_t*)
00000000006d8cd0 000000000000015c t hb_ot_layout_has_machine_kerning(hb_face_t*)
00000000006d8e30 00000000000001b0 t OT::Layout::GPOS_impl::PairPosFormat2_4<OT::Layout::SmallTypes>::sanitize(hb_sanitize_context_t*) const
00000000006d8fe0 00000000000002b4 t bool OT::ArrayOf<OT::OffsetTo<OT::Layout::GPOS_impl::PairSet<OT::Layout::SmallTypes>, OT::IntType<unsigned short, 2u>, true>, OT::IntType<unsigned short, 2u> >::sanitize<OT::Layout::GPOS_impl::PairPosFormat1_3<OT::Layout::SmallTypes> const*, OT::Layout::GPOS_impl::PairSet<OT::Layout::SmallTypes>::sanitize_closure_t*>(hb_sanitize_context_t*, OT::Layout::GPOS_impl::PairPosFormat1_3<OT::Layout::SmallTypes> const*&&, OT::Layout::GPOS_impl::PairSet<OT::Layout::SmallTypes>::sanitize_closure_t*&&) const
00000000006d92a0 0000000000000194 t bool OT::OffsetTo<OT::Layout::GPOS_impl::MarkArray, OT::IntType<unsigned short, 2u>, true>::sanitize<>(hb_sanitize_context_t*, void const*) const
00000000006d9440 0000000000000178 t bool OT::OffsetTo<OT::Layout::GPOS_impl::AnchorMatrix, OT::IntType<unsigned short, 2u>, true>::sanitize<unsigned int>(hb_sanitize_context_t*, void const*, unsigned int&&) const
00000000006d95c0 00000000000001dc t OT::Layout::GPOS_impl::MarkLigPosFormat1_2<OT::Layout::SmallTypes>::sanitize(hb_sanitize_context_t*) const
00000000006d97a0 0000000000000208 t bool OT::ArrayOf<OT::OffsetTo<OT::Rule<OT::Layout::SmallTypes>, OT::IntType<unsigned short, 2u>, true>, OT::IntType<unsigned short, 2u> >::sanitize<OT::RuleSet<OT::Layout::SmallTypes> const*>(hb_sanitize_context_t*, OT::RuleSet<OT::Layout::SmallTypes> const*&&) const
00000000006d99b0 0000000000000380 t hb_sanitize_context_t::return_t OT::Context::dispatch<hb_sanitize_context_t>(hb_sanitize_context_t*) const
00000000006d9d30 0000000000000204 t bool OT::ArrayOf<OT::OffsetTo<OT::Layout::GSUB_impl::Ligature<OT::Layout::SmallTypes>, OT::IntType<unsigned short, 2u>, true>, OT::IntType<unsigned short, 2u> >::sanitize<OT::Layout::GSUB_impl::LigatureSet<OT::Layout::SmallTypes> const*>(hb_sanitize_context_t*, OT::Layout::GSUB_impl::LigatureSet<OT::Layout::SmallTypes> const*&&) const
00000000006d9f40 00000000000001c0 t OT::ChainRule<OT::Layout::SmallTypes>::sanitize(hb_sanitize_context_t*) const
00000000006da100 00000000000001d4 t bool OT::OffsetTo<OT::ChainRuleSet<OT::Layout::SmallTypes>, OT::IntType<unsigned short, 2u>, true>::sanitize<>(hb_sanitize_context_t*, void const*) const
00000000006da2e0 00000000000003a4 t hb_sanitize_context_t::return_t OT::ChainContext::dispatch<hb_sanitize_context_t>(hb_sanitize_context_t*) const
00000000006da690 000000000000040c t hb_sanitize_context_t::return_t OT::Layout::GPOS_impl::PosLookupSubTable::dispatch<hb_sanitize_context_t>(hb_sanitize_context_t*, unsigned int) const
00000000006daaa0 00000000000002fc t bool OT::Lookup::sanitize<OT::Layout::GPOS_impl::PosLookupSubTable>(hb_sanitize_context_t*) const
00000000006dada0 0000000000000284 t bool OT::GSUBGPOSVersion1_2<OT::Layout::SmallTypes>::sanitize<OT::Layout::GPOS_impl::PosLookup>(hb_sanitize_context_t*) const
00000000006db030 00000000000002bc W OT::GSUBGPOS::accelerator_t<OT::Layout::GPOS>::accelerator_t(hb_face_t*)
00000000006db030 00000000000002bc t OT::GSUBGPOS::accelerator_t<OT::Layout::GPOS>::accelerator_t(hb_face_t*)
00000000006db2f0 0000000000000108 t hb_lazy_loader_t<OT::GPOS_accelerator_t, hb_face_lazy_loader_t<OT::GPOS_accelerator_t, 26u>, hb_face_t, 26u, OT::GPOS_accelerator_t>::get_stored() const
00000000006db400 0000000000000150 T hb_ot_layout_has_positioning
00000000006db550 00000000000006a0 t hb_sanitize_context_t::return_t OT::Layout::GSUB_impl::SubstLookupSubTable::dispatch<hb_sanitize_context_t>(hb_sanitize_context_t*, unsigned int) const
00000000006dbbf0 00000000000002a0 t bool OT::Lookup::sanitize<OT::Layout::GSUB_impl::SubstLookupSubTable>(hb_sanitize_context_t*) const
00000000006dbe90 0000000000000284 t bool OT::GSUBGPOSVersion1_2<OT::Layout::SmallTypes>::sanitize<OT::Layout::GSUB_impl::SubstLookup>(hb_sanitize_context_t*) const
00000000006dc120 00000000000002bc W OT::GSUBGPOS::accelerator_t<OT::Layout::GSUB>::accelerator_t(hb_face_t*)
00000000006dc120 00000000000002bc t OT::GSUBGPOS::accelerator_t<OT::Layout::GSUB>::accelerator_t(hb_face_t*)
00000000006dc3e0 0000000000000108 t hb_lazy_loader_t<OT::GSUB_accelerator_t, hb_face_lazy_loader_t<OT::GSUB_accelerator_t, 25u>, hb_face_t, 25u, OT::GSUB_accelerator_t>::get_stored() const
00000000006dc4f0 0000000000000508 t OT::GDEF::is_blocklisted(hb_blob_t*, hb_face_t*) const
00000000006dca00 0000000000000374 t OT::hb_kern_machine_t<AAT::KerxSubTableFormat0<OT::KernOTSubTableHeader>::accelerator_t>::kern(hb_font_t*, hb_buffer_t*, unsigned int, bool) const
00000000006dcd80 00000000000003b0 t OT::hb_kern_machine_t<AAT::KerxSubTableFormat2<OT::KernOTSubTableHeader>::accelerator_t>::kern(hb_font_t*, hb_buffer_t*, unsigned int, bool) const
00000000006dd130 0000000000000374 t OT::hb_kern_machine_t<AAT::KerxSubTableFormat0<OT::KernAATSubTableHeader>::accelerator_t>::kern(hb_font_t*, hb_buffer_t*, unsigned int, bool) const
00000000006dd4b0 00000000000003b0 t OT::hb_kern_machine_t<AAT::KerxSubTableFormat2<OT::KernAATSubTableHeader>::accelerator_t>::kern(hb_font_t*, hb_buffer_t*, unsigned int, bool) const
00000000006dd860 000000000000035c t OT::hb_kern_machine_t<OT::KernSubTableFormat3<OT::KernAATSubTableHeader> >::kern(hb_font_t*, hb_buffer_t*, unsigned int, bool) const
00000000006ddbc0 000000000000095c t hb_ot_layout_kern(hb_ot_shape_plan_t const*, hb_font_t*, hb_buffer_t*)
00000000006de520 00000000000006f0 t void hb_ot_map_t::apply<GSUBProxy>(GSUBProxy const&, hb_ot_shape_plan_t const*, hb_font_t*, hb_buffer_t*) const
00000000006dec10 00000000000007a8 t void hb_ot_map_t::apply<GPOSProxy>(GPOSProxy const&, hb_ot_shape_plan_t const*, hb_font_t*, hb_buffer_t*) const
00000000006df3c0 00000000000001ac t hb_ot_map_t::position(hb_ot_shape_plan_t const*, hb_font_t*, hb_buffer_t*) const
00000000006df570 0000000000000114 T hb_ot_layout_has_glyph_classes
00000000006df690 00000000000002d4 t hb_ot_layout_substitute_start(hb_font_t*, hb_buffer_t*)
00000000006df970 0000000000000084 t get_gsubgpos_table(hb_face_t*, unsigned int)
00000000006dfa00 0000000000000308 T hb_ot_layout_table_select_script
00000000006dfd10 000000000000010c t hb_ot_layout_table_find_feature(hb_face_t*, unsigned int, unsigned int, unsigned int*)
00000000006dfe20 0000000000000208 T hb_ot_layout_script_select_language2
00000000006e0030 0000000000000008 T hb_ot_layout_script_select_language
00000000006e0040 00000000000001f4 T hb_ot_layout_language_get_required_feature
00000000006e0240 00000000000001f4 T hb_ot_layout_language_find_feature
00000000006e0440 0000000000000054 T hb_ot_layout_table_get_lookup_count
00000000006e04a0 0000000000000154 T hb_ot_layout_table_find_feature_variations
00000000006e0600 00000000000001b4 T hb_ot_layout_feature_with_variations_get_lookups
00000000006e07c0 0000000000000048 T hb_ot_layout_has_substitution
00000000006e0810 000000000000029c T hb_ot_layout_lookup_would_substitute
00000000006e0ab0 00000000000000a8 t hb_ot_map_t::substitute(hb_ot_shape_plan_t const*, hb_font_t*, hb_buffer_t*) const
00000000006e0b60 0000000000000018 W hb_ot_map_t::lookup_map_t::cmp(void const*, void const*)
00000000006e0b80 0000000000000034 W hb_ot_map_builder_t::feature_info_t::cmp(void const*, void const*)
00000000006e0bc0 0000000000000420 t void sort_r_simple<>(void*, unsigned long, unsigned long, int (*)(void const*, void const*))
00000000006e0fe0 0000000000000120 t hb_ot_map_builder_t::hb_ot_map_builder_t(hb_face_t*, hb_segment_properties_t const&)
00000000006e0fe0 0000000000000120 T hb_ot_map_builder_t::hb_ot_map_builder_t(hb_face_t*, hb_segment_properties_t const&)
00000000006e1100 0000000000000088 t hb_ot_map_builder_t::~hb_ot_map_builder_t()
00000000006e1100 0000000000000088 T hb_ot_map_builder_t::~hb_ot_map_builder_t()
00000000006e1190 000000000000014c t hb_ot_map_builder_t::add_feature(unsigned int, hb_ot_map_feature_flags_t, unsigned int)
00000000006e12e0 0000000000000074 t hb_ot_map_builder_t::has_feature(unsigned int)
00000000006e1360 0000000000000238 t hb_ot_map_builder_t::add_lookups(hb_ot_map_t&, unsigned int, unsigned int, unsigned int, unsigned int, bool, bool, bool, bool, unsigned int)
00000000006e15a0 0000000000000120 t hb_ot_map_builder_t::add_pause(unsigned int, bool (*)(hb_ot_shape_plan_t const*, hb_font_t*, hb_buffer_t*))
00000000006e16c0 0000000000000cbc t hb_ot_map_builder_t::compile(hb_ot_map_t&, hb_ot_shape_plan_key_t const&)
00000000006e2380 00000000000001e0 t joining_type(unsigned int)
00000000006e2560 0000000000000214 t collect_features_arabic(hb_ot_shape_planner_t*)
00000000006e2780 0000000000000070 t record_stch(hb_ot_shape_plan_t const*, hb_font_t*, hb_buffer_t*)
00000000006e27f0 0000000000000070 t arabic_fallback_plan_destroy(arabic_fallback_plan_t*) [clone .part.0]
00000000006e2860 0000000000000028 t hb_buffer_t::deallocate_var(unsigned int, unsigned int) [clone .part.0]
00000000006e2890 000000000000026c t reorder_marks_arabic(hb_ot_shape_plan_t const*, hb_buffer_t*, unsigned int, unsigned int)
00000000006e2b00 0000000000000028 t OT::Lookup* hb_serialize_context_t::extend_size<OT::Lookup>(OT::Lookup*, unsigned long, bool) [clone .part.0]
00000000006e2b30 0000000000000028 t OT::ArrayOf<OT::Offset<OT::IntType<unsigned short, 2u>, true>, OT::IntType<unsigned short, 2u> >* hb_serialize_context_t::extend_size<OT::ArrayOf<OT::Offset<OT::IntType<unsigned short, 2u>, true>, OT::IntType<unsigned short, 2u> > >(OT::ArrayOf<OT::Offset<OT::IntType<unsigned short, 2u>, true>, OT::IntType<unsigned short, 2u> >*, unsigned long, bool) [clone .part.0]
00000000006e2b60 0000000000000028 t OT::IntType<unsigned short, 2u>* hb_serialize_context_t::extend_size<OT::IntType<unsigned short, 2u> >(OT::IntType<unsigned short, 2u>*, unsigned long, bool) [clone .part.0]
00000000006e2b90 0000000000000028 t OT::ArrayOf<OT::OffsetTo<OT::Layout::GSUB_impl::LigatureSet<OT::Layout::SmallTypes>, OT::IntType<unsigned short, 2u>, true>, OT::IntType<unsigned short, 2u> >* hb_serialize_context_t::extend_size<OT::ArrayOf<OT::OffsetTo<OT::Layout::GSUB_impl::LigatureSet<OT::Layout::SmallTypes>, OT::IntType<unsigned short, 2u>, true>, OT::IntType<unsigned short, 2u> > >(OT::ArrayOf<OT::OffsetTo<OT::Layout::GSUB_impl::LigatureSet<OT::Layout::SmallTypes>, OT::IntType<unsigned short, 2u>, true>, OT::IntType<unsigned short, 2u> >*, unsigned long, bool) [clone .part.0]
00000000006e2bc0 0000000000000028 t void hb_serialize_context_t::add_link<OT::OffsetTo<OT::Layout::Common::Coverage, OT::IntType<unsigned short, 2u>, true> >(OT::OffsetTo<OT::Layout::Common::Coverage, OT::IntType<unsigned short, 2u>, true>&, unsigned int, hb_serialize_context_t::whence_t, unsigned int) [clone .part.0]
00000000006e2bf0 0000000000000028 t void hb_serialize_context_t::add_link<OT::OffsetTo<OT::Layout::GSUB_impl::SubstLookupSubTable, OT::IntType<unsigned short, 2u>, true> >(OT::OffsetTo<OT::Layout::GSUB_impl::SubstLookupSubTable, OT::IntType<unsigned short, 2u>, true>&, unsigned int, hb_serialize_context_t::whence_t, unsigned int) [clone .part.0]
00000000006e2c20 0000000000000028 t hb_serialize_context_t::end_serialize() [clone .part.0]
00000000006e2c50 0000000000000028 t OT::ArrayOf<OT::HBGlyphID16, OT::IntType<unsigned short, 2u> >* hb_serialize_context_t::extend_size<OT::ArrayOf<OT::HBGlyphID16, OT::IntType<unsigned short, 2u> > >(OT::ArrayOf<OT::HBGlyphID16, OT::IntType<unsigned short, 2u> >*, unsigned long, bool) [clone .part.0]
00000000006e2c80 0000000000000028 t OT::Layout::Common::CoverageFormat2_4<OT::Layout::SmallTypes>* hb_serialize_context_t::extend_size<OT::Layout::Common::CoverageFormat2_4<OT::Layout::SmallTypes> >(OT::Layout::Common::CoverageFormat2_4<OT::Layout::SmallTypes>*, unsigned long, bool) [clone .part.0]
00000000006e2cb0 0000000000000028 t OT::ArrayOf<OT::OffsetTo<OT::Layout::GSUB_impl::Ligature<OT::Layout::SmallTypes>, OT::IntType<unsigned short, 2u>, true>, OT::IntType<unsigned short, 2u> >* hb_serialize_context_t::extend_size<OT::ArrayOf<OT::OffsetTo<OT::Layout::GSUB_impl::Ligature<OT::Layout::SmallTypes>, OT::IntType<unsigned short, 2u>, true>, OT::IntType<unsigned short, 2u> > >(OT::ArrayOf<OT::OffsetTo<OT::Layout::GSUB_impl::Ligature<OT::Layout::SmallTypes>, OT::IntType<unsigned short, 2u>, true>, OT::IntType<unsigned short, 2u> >*, unsigned long, bool) [clone .part.0]
00000000006e2ce0 0000000000000028 t OT::ArrayOf<OT::Layout::Common::RangeRecord<OT::Layout::SmallTypes>, OT::IntType<unsigned short, 2u> >* hb_serialize_context_t::extend_size<OT::ArrayOf<OT::Layout::Common::RangeRecord<OT::Layout::SmallTypes>, OT::IntType<unsigned short, 2u> > >(OT::ArrayOf<OT::Layout::Common::RangeRecord<OT::Layout::SmallTypes>, OT::IntType<unsigned short, 2u> >*, unsigned long, bool) [clone .part.0]
00000000006e2d10 0000000000000028 t OT::Layout::GSUB_impl::SubstLookup* hb_serialize_context_t::start_serialize<OT::Layout::GSUB_impl::SubstLookup>() [clone .part.0]
00000000006e2d40 0000000000000038 t data_destroy_arabic(void*)
00000000006e2d80 0000000000000024 t deallocate_buffer_var(hb_ot_shape_plan_t const*, hb_font_t*, hb_buffer_t*)
00000000006e2db0 00000000000001e4 t data_create_arabic(hb_ot_shape_plan_t const*)
00000000006e2fa0 0000000000000584 t postprocess_glyphs_arabic(hb_ot_shape_plan_t const*, hb_buffer_t*, hb_font_t*)
00000000006e3530 0000000000000390 t hb_serialize_context_t::resolve_links()
00000000006e38c0 0000000000000390 t OT::Lookup::serialize(hb_serialize_context_t*, unsigned int, unsigned int, unsigned int)
00000000006e3c50 00000000000008a8 t setup_masks_arabic_plan(arabic_shape_plan_t const*, hb_buffer_t*, hb_script_t)
00000000006e4500 000000000000000c t setup_masks_arabic(hb_ot_shape_plan_t const*, hb_buffer_t*, hb_font_t*)
00000000006e4510 0000000000000104 t hb_hashmap_t<hb_serialize_context_t::object_t const*, unsigned int, false>::fini()
00000000006e4620 0000000000000124 t hb_serialize_context_t::~hb_serialize_context_t()
00000000006e4620 0000000000000124 W hb_serialize_context_t::~hb_serialize_context_t()
00000000006e4750 00000000000001e0 t hb_serialize_context_t::hb_serialize_context_t(void*, unsigned int)
00000000006e4750 00000000000001e0 W hb_serialize_context_t::hb_serialize_context_t(void*, unsigned int)
00000000006e4930 00000000000003f8 t hb_hashmap_t<hb_serialize_context_t::object_t const*, unsigned int, false>::resize(unsigned int)
00000000006e4d30 0000000000000508 t hb_serialize_context_t::discard_stale_objects()
00000000006e5240 0000000000000108 t hb_serialize_context_t::pop_discard()
00000000006e5350 00000000000009c0 t hb_serialize_context_t::pop_pack(bool)
00000000006e5d10 0000000000000198 t hb_pool_t<hb_serialize_context_t::object_t, 32u>::alloc()
00000000006e5eb0 0000000000000114 t arabic_fallback_plan_shape(arabic_fallback_plan_t*, hb_font_t*, hb_buffer_t*)
00000000006e5fd0 00000000000001d4 t OT::ArrayOf<OT::HBGlyphID16, OT::IntType<unsigned short, 2u> >::serialize(hb_serialize_context_t*, unsigned int, bool)
00000000006e61b0 00000000000001dc t OT::ArrayOf<OT::Layout::Common::RangeRecord<OT::Layout::SmallTypes>, OT::IntType<unsigned short, 2u> >::serialize(hb_serialize_context_t*, unsigned int, bool)
00000000006e6390 0000000000000904 t bool OT::OffsetTo<OT::Layout::Common::Coverage, OT::IntType<unsigned short, 2u>, true>::serialize_serialize<hb_map_iter_t<hb_zip_iter_t<hb_sorted_array_t<OT::HBGlyphID16>, hb_array_t<OT::HBGlyphID16> >, ._anon_114 const&, (hb_function_sortedness_t)1, (void*)0>&>(hb_serialize_context_t*, hb_map_iter_t<hb_zip_iter_t<hb_sorted_array_t<OT::HBGlyphID16>, hb_array_t<OT::HBGlyphID16> >, ._anon_114 const&, (hb_function_sortedness_t)1, (void*)0>&)
00000000006e6ca0 0000000000000228 t bool OT::Layout::GSUB_impl::SingleSubstFormat2_4<OT::Layout::SmallTypes>::serialize<hb_zip_iter_t<hb_sorted_array_t<OT::HBGlyphID16>, hb_array_t<OT::HBGlyphID16> >, (void*)0>(hb_serialize_context_t*, hb_zip_iter_t<hb_sorted_array_t<OT::HBGlyphID16>, hb_array_t<OT::HBGlyphID16> >)
00000000006e6ed0 0000000000000330 t bool OT::Layout::GSUB_impl::SingleSubst::serialize<hb_zip_iter_t<hb_sorted_array_t<OT::HBGlyphID16>, hb_array_t<OT::HBGlyphID16> >, (void*)0>(hb_serialize_context_t*, hb_zip_iter_t<hb_sorted_array_t<OT::HBGlyphID16>, hb_array_t<OT::HBGlyphID16> >)
00000000006e7200 0000000000000618 t arabic_fallback_synthesize_lookup_single(hb_ot_shape_plan_t const*, hb_font_t*, unsigned int) [clone .constprop.0]
00000000006e7820 000000000000068c t bool OT::OffsetTo<OT::Layout::Common::Coverage, OT::IntType<unsigned short, 2u>, true>::serialize_serialize<hb_sorted_array_t<OT::HBGlyphID16 const>&>(hb_serialize_context_t*, hb_sorted_array_t<OT::HBGlyphID16 const>&)
00000000006e7eb0 000000000000121c t OT::Layout::GSUB_impl::SubstLookup::serialize_ligature(hb_serialize_context_t*, unsigned int, hb_sorted_array_t<OT::HBGlyphID16 const>, hb_array_t<unsigned int const>, hb_array_t<OT::HBGlyphID16 const>, hb_array_t<unsigned int const>, hb_array_t<OT::HBGlyphID16 const>) [clone .isra.0]
00000000006e90d0 00000000000003a4 t OT::Layout::GSUB_impl::SubstLookup* arabic_fallback_synthesize_lookup_ligature<ligature_mark_set_t [1]>(hb_ot_shape_plan_t const*, hb_font_t*, ligature_mark_set_t const (&) [1], unsigned int) [clone .constprop.0]
00000000006e9480 0000000000000524 t OT::Layout::GSUB_impl::SubstLookup* arabic_fallback_synthesize_lookup_ligature<ligature_set_t [18]>(hb_ot_shape_plan_t const*, hb_font_t*, ligature_set_t const (&) [18], unsigned int) [clone .constprop.0]
00000000006e99b0 00000000000003b0 t OT::Layout::GSUB_impl::SubstLookup* arabic_fallback_synthesize_lookup_ligature<ligature_3_set_t [1]>(hb_ot_shape_plan_t const*, hb_font_t*, ligature_3_set_t const (&) [1], unsigned int) [clone .constprop.0]
00000000006e9d60 0000000000000208 t arabic_fallback_shape(hb_ot_shape_plan_t const*, hb_font_t*, hb_buffer_t*)
00000000006e9f70 0000000000000004 t data_destroy_hangul(void*)
00000000006e9f80 0000000000000060 t collect_features_hangul(hb_ot_shape_planner_t*)
00000000006e9fe0 0000000000000018 t override_features_hangul(hb_ot_shape_planner_t*)
00000000006ea000 000000000000007c t setup_masks_hangul(hb_ot_shape_plan_t const*, hb_buffer_t*, hb_font_t*)
00000000006ea080 0000000000000028 t bool hb_buffer_t::replace_glyphs<unsigned int>(unsigned int, unsigned int, unsigned int const*) [clone .part.0]
00000000006ea0b0 00000000000000a8 t data_create_hangul(hb_ot_shape_plan_t const*)
00000000006ea160 000000000000177c t preprocess_text_hangul(hb_ot_shape_plan_t const*, hb_buffer_t*, hb_font_t*)
00000000006eb8e0 00000000000000f4 t reorder_marks_hebrew(hb_ot_shape_plan_t const*, hb_buffer_t*, unsigned int, unsigned int)
00000000006eb9e0 0000000000000234 t compose_hebrew(hb_ot_shape_normalize_context_t const*, unsigned int, unsigned int, unsigned int*)
00000000006ebc20 00000000000000d8 t compose_indic(hb_ot_shape_normalize_context_t const*, unsigned int, unsigned int, unsigned int*)
00000000006ebd00 0000000000000014 t preprocess_text_indic(hb_ot_shape_plan_t const*, hb_buffer_t*, hb_font_t*)
00000000006ebd20 0000000000000004 t data_destroy_indic(void*)
00000000006ebd30 0000000000000044 t override_features_indic(hb_ot_shape_planner_t*)
00000000006ebd80 00000000000000fc t collect_features_indic(hb_ot_shape_planner_t*)
00000000006ebe80 0000000000000028 t hb_buffer_t::allocate_var(unsigned int, unsigned int) [clone .part.0]
00000000006ebeb0 0000000000000028 t hb_buffer_t::deallocate_var(unsigned int, unsigned int) [clone .part.0]
00000000006ebee0 0000000000000064 t decompose_indic(hb_ot_shape_normalize_context_t const*, unsigned int, unsigned int*, unsigned int*)
00000000006ebf50 0000000000000070 t setup_masks_indic(hb_ot_shape_plan_t const*, hb_buffer_t*, hb_font_t*)
00000000006ebfc0 0000000000001060 t initial_reordering_consonant_syllable(hb_ot_shape_plan_t const*, hb_face_t*, hb_buffer_t*, unsigned int, unsigned int) [clone .isra.0]
00000000006ed020 0000000000000f30 t final_reordering_indic(hb_ot_shape_plan_t const*, hb_font_t*, hb_buffer_t*)
00000000006edf50 0000000000000570 t initial_reordering_indic(hb_ot_shape_plan_t const*, hb_font_t*, hb_buffer_t*)
00000000006ee4c0 0000000000000684 t find_syllables_indic(hb_buffer_t*)
00000000006eeb50 000000000000024c t setup_syllables_indic(hb_ot_shape_plan_t const*, hb_font_t*, hb_buffer_t*)
00000000006eeda0 0000000000000138 t hb_indic_would_substitute_feature_t::init(hb_ot_map_t const*, unsigned int, bool)
00000000006eeee0 00000000000001fc t data_create_indic(hb_ot_shape_plan_t const*)
00000000006ef0e0 0000000000000084 t decompose_khmer(hb_ot_shape_normalize_context_t const*, unsigned int, unsigned int*, unsigned int*)
00000000006ef170 00000000000000ac t compose_khmer(hb_ot_shape_normalize_context_t const*, unsigned int, unsigned int, unsigned int*)
00000000006ef220 0000000000000004 t data_destroy_khmer(void*)
00000000006ef230 00000000000000a0 t override_features_khmer(hb_ot_shape_planner_t*)
00000000006ef2d0 00000000000000e0 t collect_features_khmer(hb_ot_shape_planner_t*)
00000000006ef3b0 0000000000000028 t hb_buffer_t::allocate_var(unsigned int, unsigned int) [clone .part.0]
00000000006ef3e0 00000000000000c4 t data_create_khmer(hb_ot_shape_plan_t const*)
00000000006ef4b0 0000000000000058 t setup_masks_khmer(hb_ot_shape_plan_t const*, hb_buffer_t*, hb_font_t*)
00000000006ef510 0000000000000458 t reorder_khmer(hb_ot_shape_plan_t const*, hb_font_t*, hb_buffer_t*)
00000000006ef970 0000000000000454 t find_syllables_khmer(hb_buffer_t*)
00000000006efdd0 000000000000024c t setup_syllables_khmer(hb_ot_shape_plan_t const*, hb_font_t*, hb_buffer_t*)
00000000006f0020 0000000000000010 t compare_myanmar_order(hb_glyph_info_t const*, hb_glyph_info_t const*)
00000000006f0030 00000000000000f8 t collect_features_myanmar(hb_ot_shape_planner_t*)
00000000006f0130 0000000000000028 t hb_buffer_t::allocate_var(unsigned int, unsigned int) [clone .part.0]
00000000006f0160 0000000000000028 t hb_buffer_t::deallocate_var(unsigned int, unsigned int) [clone .part.0]
00000000006f0190 0000000000000064 t setup_masks_myanmar(hb_ot_shape_plan_t const*, hb_buffer_t*, hb_font_t*)
00000000006f0200 00000000000006a8 t reorder_myanmar(hb_ot_shape_plan_t const*, hb_font_t*, hb_buffer_t*)
00000000006f08b0 00000000000003a0 t find_syllables_myanmar(hb_buffer_t*)
00000000006f0c50 000000000000024c t setup_syllables_myanmar(hb_ot_shape_plan_t const*, hb_font_t*, hb_buffer_t*)
00000000006f0ea0 00000000000002f0 t hb_syllabic_insert_dotted_circles(hb_font_t*, hb_buffer_t*, unsigned int, unsigned int, int, int)
00000000006f1190 0000000000000040 T hb_syllabic_clear_var(hb_ot_shape_plan_t const*, hb_font_t*, hb_buffer_t*)
00000000006f11d0 00000000000000f8 t thai_pua_shape(unsigned int, thai_action_t, hb_font_t*)
00000000006f12d0 0000000000000028 t bool hb_buffer_t::replace_glyphs<unsigned int>(unsigned int, unsigned int, unsigned int const*) [clone .part.0]
00000000006f1300 00000000000006f8 t preprocess_text_thai(hb_ot_shape_plan_t const*, hb_buffer_t*, hb_font_t*)
00000000006f1a00 0000000000000034 t _hb_clear_substitution_flags(hb_ot_shape_plan_t const*, hb_font_t*, hb_buffer_t*)
00000000006f1a40 00000000000000ac t compose_use(hb_ot_shape_normalize_context_t const*, unsigned int, unsigned int, unsigned int*)
00000000006f1af0 0000000000000004 t preprocess_text_use(hb_ot_shape_plan_t const*, hb_buffer_t*, hb_font_t*)
00000000006f1b00 000000000000002c t data_destroy_use(void*)
00000000006f1b30 00000000000001d8 t collect_features_use(hb_ot_shape_planner_t*)
00000000006f1d10 0000000000000028 t hb_buffer_t::allocate_var(unsigned int, unsigned int) [clone .part.0]
00000000006f1d40 00000000000001b8 t data_create_use(hb_ot_shape_plan_t const*)
00000000006f1f00 00000000000000ec t setup_masks_use(hb_ot_shape_plan_t const*, hb_buffer_t*, hb_font_t*)
00000000006f1ff0 00000000000000d8 t record_pref_use(hb_ot_shape_plan_t const*, hb_font_t*, hb_buffer_t*)
00000000006f20d0 00000000000000cc t hb_filter_iter_t<hb_filter_iter_t<hb_zip_iter_t<hb_iota_iter_t<unsigned int, unsigned int>, hb_array_t<hb_glyph_info_t> >, find_syllables_use(hb_buffer_t*)::{lambda(hb_glyph_info_t const&)#1}, ._anon_115 const&, (void*)0>, find_syllables_use(hb_buffer_t*)::{lambda(hb_pair_t<unsigned int, hb_glyph_info_t const&>)#2}, ._anon_103 const&, (void*)0>::__next__()
00000000006f21a0 00000000000000d0 t hb_filter_iter_t<hb_filter_iter_t<hb_zip_iter_t<hb_iota_iter_t<unsigned int, unsigned int>, hb_array_t<hb_glyph_info_t> >, find_syllables_use(hb_buffer_t*)::{lambda(hb_glyph_info_t const&)#1}, ._anon_115 const&, (void*)0>, find_syllables_use(hb_buffer_t*)::{lambda(hb_pair_t<unsigned int, hb_glyph_info_t const&>)#2}, ._anon_103 const&, (void*)0>::__prev__()
00000000006f2270 00000000000000e8 t hb_zip_iter_t<hb_iota_iter_t<unsigned int, unsigned int>, hb_filter_iter_t<hb_filter_iter_t<hb_zip_iter_t<hb_iota_iter_t<unsigned int, unsigned int>, hb_array_t<hb_glyph_info_t> >, find_syllables_use(hb_buffer_t*)::{lambda(hb_glyph_info_t const&)#1}, ._anon_115 const&, (void*)0>, find_syllables_use(hb_buffer_t*)::{lambda(hb_pair_t<unsigned int, hb_glyph_info_t const&>)#2}, ._anon_103 const&, (void*)0> >::__forward__(unsigned int)
00000000006f2360 00000000000000f4 t record_rphf_use(hb_ot_shape_plan_t const*, hb_font_t*, hb_buffer_t*)
00000000006f2460 000000000000011c t machine_index_t<hb_zip_iter_t<hb_iota_iter_t<unsigned int, unsigned int>, hb_filter_iter_t<hb_filter_iter_t<hb_zip_iter_t<hb_iota_iter_t<unsigned int, unsigned int>, hb_array_t<hb_glyph_info_t> >, find_syllables_use(hb_buffer_t*)::{lambda(hb_glyph_info_t const&)#1}, ._anon_115 const&, (void*)0>, find_syllables_use(hb_buffer_t*)::{lambda(hb_pair_t<unsigned int, hb_glyph_info_t const&>)#2}, ._anon_103 const&, (void*)0> > >::operator=(machine_index_t<hb_zip_iter_t<hb_iota_iter_t<unsigned int, unsigned int>, hb_filter_iter_t<hb_filter_iter_t<hb_zip_iter_t<hb_iota_iter_t<unsigned int, unsigned int>, hb_array_t<hb_glyph_info_t> >, find_syllables_use(hb_buffer_t*)::{lambda(hb_glyph_info_t const&)#1}, ._anon_115 const&, (void*)0>, find_syllables_use(hb_buffer_t*)::{lambda(hb_pair_t<unsigned int, hb_glyph_info_t const&>)#2}, ._anon_103 const&, (void*)0> > > const&)
00000000006f2580 0000000000002008 t find_syllables_use(hb_buffer_t*)
00000000006f4590 00000000000005a4 t setup_syllables_use(hb_ot_shape_plan_t const*, hb_font_t*, hb_buffer_t*)
00000000006f4b40 0000000000000374 t reorder_use(hb_ot_shape_plan_t const*, hb_font_t*, hb_buffer_t*)
00000000006f4ec0 00000000000000e8 t _output_dotted_circle(hb_buffer_t*)
00000000006f4fb0 000000000000201c t _hb_preprocess_text_vowel_constraints(hb_ot_shape_plan_t const*, hb_buffer_t*, hb_font_t*)
00000000006f6fd0 0000000000000028 t hb_buffer_t::assert_var(unsigned int, unsigned int) [clone .part.0]
00000000006f7000 00000000000007d0 t position_around_base(hb_ot_shape_plan_t const*, hb_font_t*, hb_buffer_t*, unsigned int, unsigned int, bool)
00000000006f77d0 00000000000001c4 t _hb_ot_shape_fallback_mark_position_recategorize_marks(hb_ot_shape_plan_t const*, hb_font_t*, hb_buffer_t*)
00000000006f79a0 0000000000000218 t _hb_ot_shape_fallback_mark_position(hb_ot_shape_plan_t const*, hb_font_t*, hb_buffer_t*, bool)
00000000006f7bc0 00000000000002dc t _hb_ot_shape_fallback_spaces(hb_ot_shape_plan_t const*, hb_font_t*, hb_buffer_t*)
00000000006f7ea0 000000000000065c t OT::hb_kern_machine_t<hb_ot_shape_fallback_kern_driver_t>::kern(hb_font_t*, hb_buffer_t*, unsigned int, bool) const
00000000006f8500 00000000000002ac t _hb_ot_shape_fallback_kern(hb_ot_shape_plan_t const*, hb_font_t*, hb_buffer_t*)
00000000006f87b0 0000000000000030 t decompose_unicode(hb_ot_shape_normalize_context_t const*, unsigned int, unsigned int*, unsigned int*)
00000000006f87e0 0000000000000050 t compare_combining_class(hb_glyph_info_t const*, hb_glyph_info_t const*)
00000000006f8830 0000000000000040 t compose_unicode(hb_ot_shape_normalize_context_t const*, unsigned int, unsigned int, unsigned int*)
00000000006f8870 00000000000002d8 t _hb_glyph_info_set_unicode_props(hb_glyph_info_t*, hb_buffer_t*)
00000000006f8b50 0000000000000028 t bool hb_buffer_t::replace_glyphs<unsigned int>(unsigned int, unsigned int, unsigned int const*) [clone .part.0]
00000000006f8b80 0000000000000344 t decompose(hb_ot_shape_normalize_context_t const*, bool, unsigned int)
00000000006f8ed0 00000000000003f0 t decompose_current_character(hb_ot_shape_normalize_context_t const*, bool)
00000000006f92c0 0000000000000dfc t _hb_ot_shape_normalize(hb_ot_shape_plan_t const*, hb_buffer_t*, hb_font_t*)
00000000006fa0c0 0000000000000020 t TOUPPER(unsigned char)
00000000006fa0e0 0000000000000020 t TOLOWER(unsigned char)
00000000006fa100 00000000000001dc t parse_private_use_subtag(char const*, unsigned int*, unsigned int*, char const*, unsigned char (*)(unsigned char))
00000000006fa2e0 0000000000000098 t subtag_matches(char const*, char const*, char const*, unsigned int)
00000000006fa380 00000000000036b8 T hb_ot_tags_from_script_and_language
00000000006fda40 000000000000007c t hb_ucd_combining_class(hb_unicode_funcs_t*, unsigned int, void*)
00000000006fdac0 0000000000000070 t hb_ucd_general_category(hb_unicode_funcs_t*, unsigned int, void*)
00000000006fdb30 000000000000007c t hb_ucd_mirroring(hb_unicode_funcs_t*, unsigned int, void*)
00000000006fdbb0 0000000000000080 t hb_ucd_script(hb_unicode_funcs_t*, unsigned int, void*)
00000000006fdc30 0000000000000180 t hb_ucd_decompose(hb_unicode_funcs_t*, unsigned int, unsigned int*, unsigned int*, void*)
00000000006fddb0 0000000000000160 t hb_ucd_compose(hb_unicode_funcs_t*, unsigned int, unsigned int, unsigned int*, void*)
00000000006fdf10 000000000000012c t hb_ucd_get_unicode_funcs
00000000006fe040 00000000000001cc t _hb_buffer_serialize_unicode_text(hb_buffer_t*, unsigned int, unsigned int, char*, unsigned int, unsigned int*, hb_buffer_serialize_flags_t)
00000000006fe210 000000000000022c t _hb_buffer_serialize_unicode_json(hb_buffer_t*, unsigned int, unsigned int, char*, unsigned int, unsigned int*, hb_buffer_serialize_flags_t)
00000000006fe440 0000000000000028 t hb_buffer_t::assert_unicode() [clone .part.0]
00000000006fe470 00000000000000d4 T hb_buffer_serialize_unicode
00000000006fe550 00000000000002b4 t hb_indic_get_categories(unsigned int)
00000000006fe820 0000000000000240 T atanf
00000000006fea60 0000000000000050 T fmodf
00000000006feac0 00000000000001b0 T sinf
00000000006fec80 00000000000001b4 T log
00000000006fee40 0000000000000098 T sin
00000000006feee0 0000000000000004 T atan2
00000000006fef00 000000000000000c T lrintf
00000000006fef20 0000000000000008 T fabsf
00000000006fef40 0000000000000034 t with_errno
00000000006fef80 0000000000000018 t xflow
00000000006fefa0 000000000000000c t __math_uflow
00000000006fefc0 000000000000000c t __math_oflow
00000000006fefe0 0000000000000020 t __math_divzero
00000000006ff000 000000000000001c t __math_invalid
00000000006ff020 0000000000000014 t __math_check_uflow
00000000006ff040 0000000000000020 t __math_check_oflow
00000000006ff060 00000000000000dc T log2f
00000000006ff140 0000000000000300 T __ieee754_rem_pio2
00000000006ff440 0000000000000068 T acosf
00000000006ff4c0 0000000000000498 T pow
00000000006ff960 00000000000001ec T __ieee754_fmodf
00000000006ffb60 0000000000000880 T __kernel_rem_pio2
00000000007003e0 000000000000007c T ldexpf
0000000000700460 000000000000010c T scalbn
0000000000700580 00000000000000f8 T scalbnf
0000000000700680 00000000000000dc T expf
0000000000700760 0000000000000318 T __ieee754_acosf
0000000000700a80 0000000000000050 T sqrtf
0000000000700ae0 0000000000000050 T sqrt
0000000000700b40 000000000000007c T ldexp
0000000000700bc0 0000000000000338 T powf
0000000000700f00 000000000000006c T hypotf
0000000000700f80 000000000000009c T __kernel_sin
0000000000701020 0000000000000004 T atan2f
0000000000701040 0000000000000064 T tanf
00000000007010c0 0000000000000090 T cos
0000000000701160 0000000000000034 t with_errnof
00000000007011a0 0000000000000018 t xflowf
00000000007011c0 0000000000000008 t __math_uflowf
00000000007011e0 000000000000000c t __math_may_uflowf
0000000000701200 0000000000000008 t __math_oflowf
0000000000701220 0000000000000020 t __math_divzerof
0000000000701240 000000000000001c t __math_invalidf
0000000000701260 0000000000000078 T frexp
00000000007012e0 0000000000000008 T __ieee754_sqrtf
0000000000701300 00000000000001b0 T log2
00000000007014c0 000000000000000c T nanf
00000000007014e0 00000000000000c8 T exp2f
00000000007015c0 00000000000001a8 T __ieee754_hypotf
0000000000701780 00000000000001b4 T cosf
0000000000701940 0000000000000008 T __ieee754_sqrt
0000000000701960 00000000000001dc T __ieee754_atan2
0000000000701b40 0000000000000008 T floor
0000000000701b60 0000000000000170 T exp
0000000000701ce0 0000000000000018 T finitef
0000000000701d00 00000000000000dc T logf
0000000000701de0 0000000000000018 T finite
0000000000701e00 000000000000021c T atan
0000000000702020 00000000000001d0 T __ieee754_atan2f
0000000000702200 0000000000000130 T __kernel_cos
0000000000702340 0000000000000008 T fabs
0000000000702360 0000000000000314 T __ieee754_rem_pio2f
0000000000702680 000000000000020c T __kernel_tanf
00000000007028a0 000000000000000c T nan
00000000007028c0 0000000000000884 T __kernel_rem_pio2f
0000000000703160 0000000000000008 T floorf
0000000000703180 00000000000000f8 t __eqtf2
0000000000703180 00000000000000f8 T __netf2
0000000000703280 0000000000000914 t __multf3
0000000000703ba0 0000000000000064 t __floatunsitf
0000000000703c20 0000000000000130 t __extenddftf2
0000000000703d60 0000000000000370 t __trunctfsf2
00000000007040e0 00000000000002ac t init_dwarf_reg_size_table
00000000007043a0 0000000000000160 t uw_install_context_1
0000000000704500 000000000000018c t read_encoded_value
00000000007046a0 00000000000007c4 t execute_stack_op
0000000000704e80 0000000000000338 t uw_update_context_1
00000000007051c0 0000000000000148 t uw_update_context
0000000000705320 00000000000007d4 t execute_cfa_program_specialized
0000000000705b00 0000000000000814 t execute_cfa_program_generic
0000000000706320 0000000000000444 t uw_frame_state_for
0000000000706780 0000000000000370 t uw_init_context_1
0000000000706b00 000000000000010c t _Unwind_RaiseException_Phase2
0000000000706c20 000000000000010c t _Unwind_ForcedUnwind_Phase2
0000000000706d40 0000000000000054 t _Unwind_SetGR
0000000000706da0 0000000000000014 t _Unwind_GetIPInfo
0000000000706dc0 0000000000000008 t _Unwind_SetIP
0000000000706de0 0000000000000008 t _Unwind_GetLanguageSpecificData
0000000000706e00 0000000000000008 t _Unwind_GetRegionStart
0000000000706e20 0000000000000008 t _Unwind_GetDataRelBase
0000000000706e40 0000000000000008 t _Unwind_GetTextRelBase
0000000000706e60 0000000000000004 t _Unwind_DebugHook
0000000000706e80 000000000000018c t _Unwind_RaiseException
0000000000707020 0000000000000114 t _Unwind_Resume
0000000000707140 000000000000010c t _Unwind_Resume_or_Rethrow
0000000000707260 000000000000001c t _Unwind_DeleteException
0000000000707280 0000000000000018 t fde_unencoded_compare
00000000007072a0 000000000000002c t fde_unencoded_extract
00000000007072e0 00000000000000d4 t frame_downheap
00000000007073c0 0000000000000138 t read_encoded_value_with_base
0000000000707500 0000000000000238 t fde_radixsort
0000000000707740 0000000000000104 t __deregister_frame_info_bases.part.0
0000000000707860 000000000000012c t get_cie_encoding
00000000007079a0 00000000000000d4 t fde_mixed_encoding_extract
0000000000707a80 00000000000001f0 t classify_object_over_fdes.constprop.0
0000000000707c80 00000000000000bc t fde_single_encoding_extract
0000000000707d40 00000000000000ac t fde_single_encoding_compare
0000000000707e00 000000000000010c t fde_mixed_encoding_compare
0000000000707f20 0000000000000214 t add_fdes.isra.0
0000000000708140 000000000000027c t linear_search_fdes
00000000007083c0 0000000000000528 t search_object
0000000000708900 0000000000000074 t __register_frame_info
0000000000708980 0000000000000018 t __deregister_frame_info
00000000007089a0 00000000000001d4 t _Unwind_Find_FDE
0000000000708b80 0000000000000030 T __arm_za_disable
0000000000708b80 0000000000000030 t __libgcc_arm_za_disable
0000000000708bc0 0000000000000070 t __sfp_handle_exceptions
0000000000708c30 00000000000000a0 T __arm_tpidr2_save
0000000000708c30 00000000000000a0 t __libgcc_arm_tpidr2_save
0000000000708ce0 0000000000000024 T srand
0000000000708d20 0000000000000038 T rand
0000000000708d60 000000000000002c T getenv
0000000000708da0 000000000000002c T strndup
0000000000708de0 0000000000000020 T _freelocale_r
0000000000708e00 0000000000000024 T freelocale
0000000000708e40 0000000000000124 T _ungetwc_r
0000000000708f80 0000000000000068 T ungetwc
0000000000709000 00000000000000b8 T __submore
00000000007090c0 00000000000001dc T _ungetc_r
00000000007092a0 000000000000002c T ungetc
00000000007092e0 0000000000000008 T wmemmove
0000000000709300 00000000000000b4 T _fputs_r
00000000007093c0 000000000000002c T fputs
0000000000709400 0000000000000064 T _init_signal_r
0000000000709480 000000000000006c T _signal_r
0000000000709500 00000000000000a4 T _raise_r
00000000007095c0 0000000000000024 T raise
0000000000709600 000000000000002c T signal
0000000000709640 0000000000000004 T getwc
0000000000709660 0000000000000018 T isalpha
0000000000709680 0000000000000064 T __assert_func
0000000000709700 00000000000000ec t iso_year_adjust.isra.0
0000000000709800 0000000000001020 t __strftime.isra.0
000000000070a820 0000000000000044 T strftime
000000000070a880 0000000000000418 T _strerror_r
000000000070aca0 000000000000002c T strerror
000000000070ace0 00000000000000f0 T _fwrite_r
000000000070ade0 0000000000000044 T fwrite
000000000070ae40 0000000000000104 T strrchr
000000000070af60 0000000000000060 T __itoa
000000000070afc0 0000000000000004 T itoa
000000000070afe0 0000000000000184 T _fgets_r
000000000070b180 000000000000003c T fgets
000000000070b1c0 000000000000000c T abs
000000000070b1e0 0000000000000494 T __sfvwrite_r
000000000070b680 000000000000003c T setenv
000000000070b6c0 0000000000000008 T _user_strerror
000000000070b6e0 00000000000002e8 t _strtoll_l.isra.0
000000000070b9e0 0000000000000044 T _strtoll_r
000000000070ba40 0000000000000048 T strtoll
000000000070baa0 00000000000000b8 t currentlocale
000000000070bb60 00000000000007ac T __loadlocale
000000000070c320 0000000000000094 T __get_locale_env
000000000070c3c0 00000000000003dc T _setlocale_r
000000000070c7a0 000000000000002c T __locale_mb_cur_max
000000000070c7e0 000000000000002c T setlocale
000000000070c820 0000000000000004 T wcsxfrm
000000000070c840 0000000000000008 T atof
000000000070c860 0000000000000054 t sulp
000000000070c8c0 0000000000001210 T _strtod_l
000000000070dae0 0000000000000050 T _strtod_r
000000000070db40 000000000000003c T strtod_l
000000000070db80 0000000000000054 T strtod
000000000070dbe0 00000000000000d0 T strtof_l
000000000070dcc0 00000000000000f4 T strtof
000000000070ddc0 0000000000000024 T srandom
000000000070de00 0000000000000038 T random
000000000070de40 00000000000000a0 T sprintf
000000000070dee0 0000000000000078 T fiprintf
000000000070df60 00000000000000b4 T getc
000000000070e020 00000000000000a8 T __utoa
000000000070e0e0 00000000000000ec t iso_year_adjust.isra.0
000000000070e1e0 0000000000000040 T __ctloc
000000000070e220 0000000000001024 t __strftime.isra.0
000000000070f260 0000000000000044 T wcsftime
000000000070f2c0 0000000000000028 T putchar
000000000070f300 000000000000007c T strcat
000000000070f380 0000000000000030 T wcscmp
000000000070f3c0 000000000000011c t rshift
000000000070f4e0 00000000000008c4 T __gethex
000000000070fdc0 0000000000000060 T strxfrm
000000000070fe20 00000000000001a4 t _strtoul_l.isra.0
000000000070ffe0 0000000000000044 T _strtoul_r
0000000000710040 0000000000000048 T strtoul
00000000007100c0 0000000000000130 T strlen
0000000000710200 0000000000000048 T __ascii_mbtowc
0000000000710260 00000000000002dc T __utf8_mbtowc
0000000000710540 00000000000000cc T __sjis_mbtowc
0000000000710620 0000000000000124 T __eucjp_mbtowc
0000000000710760 00000000000001c0 T __jis_mbtowc
0000000000710920 000000000000003c T write
0000000000710960 00000000000004b0 T _fseeko_r
0000000000710e20 000000000000003c T fseeko
0000000000710e60 0000000000000094 T ferror
0000000000710f00 0000000000000080 T strncat
0000000000710f80 000000000000002c T gettimeofday
0000000000710fc0 00000000000000b8 T bsearch
0000000000711080 0000000000000014 T _tzset_unlocked
00000000007110c0 00000000000000cc T strchr
00000000007111a0 0000000000000008 T wmemcpy
00000000007111c0 0000000000000314 T _fread_r
00000000007114e0 0000000000000044 T fread
0000000000711540 000000000000002c T calloc
0000000000711580 00000000000000d8 T _vsnprintf_r
0000000000711660 0000000000000054 T vsnprintf
00000000007116c0 00000000000000dc T memchr
00000000007117a0 00000000000001d8 T _wctype_r
0000000000711980 0000000000000024 T wctype
00000000007119c0 000000000000004c T __sread
0000000000711a20 0000000000000008 T __seofread
0000000000711a40 0000000000000068 T __swrite
0000000000711ac0 0000000000000050 T __sseek
0000000000711b20 0000000000000008 T __sclose
0000000000711b40 000000000000006c T _vasprintf_r
0000000000711bc0 000000000000004c T vasprintf
0000000000711c20 000000000000002c T aligned_alloc
0000000000711c60 000000000000000c T labs
0000000000711c80 0000000000000974 T qsort
0000000000711c80 0000000000000974 t qsort.localalias
0000000000712600 0000000000000018 T abort
0000000000712620 0000000000000038 t lflush
0000000000712660 00000000000001b0 T __srefill_r
0000000000712820 0000000000000004 T call_once
0000000000712840 0000000000000004 T mtx_destroy
0000000000712860 000000000000002c T mtx_init
00000000007128a0 000000000000005c T mtx_lock
0000000000712900 000000000000005c T mtx_unlock
0000000000712960 0000000000000134 T _fclose_r
0000000000712aa0 0000000000000024 T fclose
0000000000712ae0 000000000000003c T read
0000000000712b20 000000000000000c T __gettzinfo
0000000000712b40 00000000000001b4 T strncmp
0000000000712d00 0000000000000134 T swprintf
0000000000712e34 0000000000000790 t get_arg
00000000007135c4 0000000000003c10 T _vfprintf_r
00000000007171d4 000000000000004c T vfprintf
0000000000717220 00000000000000d4 t __sbprintf
0000000000717300 00000000000000c0 T _calloc_r
00000000007173c0 0000000000000078 T fprintf
0000000000717440 0000000000000134 T strcmp
0000000000717580 0000000000000094 T __swhatbuf_r
0000000000717620 00000000000000fc T __smakebuf_r
0000000000717720 000000000000002c T realloc
0000000000717760 0000000000000038 T strlcpy
00000000007177a0 0000000000000024 T strdup
0000000000717800 00000000000000b8 T strnlen
00000000007178c0 000000000000002c T memalign
0000000000717900 000000000000001c t stdio_exit_handler
0000000000717920 000000000000006c t cleanup_stdio
00000000007179a0 0000000000000134 t global_stdio_init.part.0
0000000000717ae0 000000000000000c T __sfp_lock_acquire
0000000000717b00 000000000000000c T __sfp_lock_release
0000000000717b20 000000000000012c T __sfp
0000000000717c60 0000000000000054 T __sinit
0000000000717cc0 000000000000000c T __tz_lock
0000000000717ce0 000000000000000c T __tz_unlock
0000000000717d00 000000000000000c T _Exit
0000000000717d20 00000000000007e8 T _malloc_r
0000000000718508 0000000000000038 T setjmp
0000000000718540 000000000000003c T longjmp
0000000000718580 00000000000000e0 T _putc_r
0000000000718660 00000000000000e4 T putc
0000000000718760 0000000000000074 T strcasecmp
00000000007187e0 00000000000001a4 t quorem
00000000007189a0 0000000000001304 T _dtoa_r
0000000000719cc0 00000000000000d8 T _wcrtomb_r
0000000000719da0 00000000000000e4 T wcrtomb
0000000000719ea0 0000000000000024 T isatty
0000000000719f00 000000000000022c T memcpy
0000000000719f00 T memmove
000000000071a140 0000000000000078 T _strndup_r
000000000071a1c0 0000000000000124 T _malloc_trim_r
000000000071a300 00000000000002d4 T _free_r
000000000071a5e0 0000000000000008 T towupper
000000000071a600 0000000000000034 T strtok
000000000071a634 0000000000000790 t get_arg
000000000071adc4 0000000000003c0c T _svfprintf_r
000000000071e9e0 000000000000001c T atoi
000000000071ea00 00000000000002e8 t _strtol_l.part.0
000000000071ed00 0000000000000070 T _strtol_r
000000000071ed80 0000000000000074 T strtol
000000000071ee00 0000000000000098 T clearerr
000000000071eea0 000000000000003c T wcslcpy
000000000071eee0 0000000000000024 T close
000000000071ef20 0000000000000018 T isspace
000000000071ef40 0000000000000094 T feof
000000000071efe0 0000000000000004 T strcoll
000000000071f000 00000000000006c0 T _tzset_unlocked_r
000000000071f6c0 0000000000000014 T __errno
000000000071f6e0 0000000000000044 T malloc
000000000071f740 0000000000000024 T free
000000000071f780 0000000000000078 T printf
000000000071f800 0000000000000094 T wctob
000000000071f8a0 0000000000000024 T wcscpy
000000000071f8e0 000000000000003c T lseek
000000000071f920 0000000000000158 T sniprintf
000000000071fa80 00000000000000b4 T sscanf
000000000071fb40 0000000000000124 T _fopen_r
000000000071fc80 000000000000002c T fopen
000000000071fcc0 0000000000000010 T __set_ctype
000000000071fce0 0000000000000048 T time
000000000071fd40 00000000000000a8 T strlcat
000000000071fe00 0000000000000020 T isblank
000000000071fe20 0000000000000094 T btowc
000000000071fec0 00000000000000ac T asprintf
000000000071ff80 00000000000000d0 T _puts_r
0000000000720060 0000000000000024 T puts
00000000007200a0 0000000000000154 T _fdopen_r
0000000000720200 000000000000002c T fdopen
0000000000720240 0000000000000088 T open
00000000007202e0 000000000000002c T gmtime
0000000000720320 0000000000000048 T mbstowcs
0000000000720380 0000000000000104 T _findenv_r
00000000007204a0 0000000000000018 T _getenv_r
00000000007204c0 0000000000000134 t critical_factorization
0000000000720600 0000000000000334 t two_way_long_needle
0000000000720940 0000000000000258 T strstr
0000000000720ba0 0000000000000034 T wmemchr
0000000000720be0 00000000000000a4 T fputc
0000000000720ca0 0000000000000090 T _vsscanf_r
0000000000720d40 000000000000004c T vsscanf
0000000000720da0 000000000000053c T _realloc_r
00000000007212e0 0000000000000020 T islower
0000000000721300 0000000000000084 T strncasecmp
00000000007213a0 000000000000005c T _strdup_r
0000000000721400 0000000000000098 T _fwalk_sglue
00000000007214a0 000000000000000c T __malloc_lock
00000000007214c0 000000000000000c T __malloc_unlock
00000000007214e0 0000000000000160 T _ftello_r
0000000000721640 0000000000000024 T ftello
0000000000721680 00000000000000ac T fileno
0000000000721740 000000000000025c T __tzcalc_limits
00000000007219a0 0000000000000068 T __srget_r
0000000000721a40 0000000000000104 T memset
0000000000721b60 0000000000000004 T _ftell_r
0000000000721b80 0000000000000024 T ftell
0000000000721bc0 0000000000000254 T _setenv_r
0000000000721e20 000000000000002c T stat
0000000000721e4c 0000000000000270 t wcvt
00000000007220bc 000000000000073c t get_arg.isra.0
00000000007227f8 00000000000036c0 T _svfwprintf_r
0000000000725ec0 00000000000000a0 T __strtok_r
0000000000725f60 0000000000000008 T strtok_r
0000000000725f68 0000000000000074 t get_arg
0000000000725fdc 00000000000032d0 T __ssvfscanf_r
00000000007292c0 0000000000000004 T _fseek_r
00000000007292e0 000000000000003c T fseek
0000000000729320 0000000000000014 T atexit
0000000000729340 000000000000012c T strcpy
0000000000729480 0000000000000350 T _newlocale_r
00000000007297e0 000000000000003c T newlocale
0000000000729820 0000000000000034 T __ascii_wctomb
0000000000729860 00000000000000e4 T __utf8_wctomb
0000000000729960 0000000000000084 T __sjis_wctomb
0000000000729a00 00000000000000a8 T __eucjp_wctomb
0000000000729ac0 00000000000000bc T __jis_wctomb
0000000000729b80 0000000000000040 T __memcpy_chk
0000000000729bc0 0000000000000028 T wcslen
0000000000729c00 0000000000000020 T isupper
0000000000729c20 0000000000000158 T snprintf
0000000000729d80 000000000000008c T strncpy
0000000000729e20 0000000000000024 T toupper
0000000000729e60 00000000000001a4 t _strtoull_l.isra.0
000000000072a020 0000000000000044 T _strtoull_r
000000000072a080 0000000000000048 T strtoull
000000000072a100 0000000000000150 T stpcpy
000000000072a260 000000000000001c T wmemset
000000000072a280 0000000000000010 T _wcsrtombs_r
000000000072a2a0 0000000000000004 T wcscoll
000000000072a2a4 0000000000000790 t get_arg
000000000072aa34 0000000000002888 T _svfiprintf_r
000000000072d2c0 00000000000001c8 T memcmp
000000000072d4a0 0000000000000048 T __match
000000000072d500 000000000000025c T __hexnan
000000000072d760 0000000000000008 T towlower
000000000072d780 0000000000000004 T putwc
000000000072d7a0 00000000000000bc T __sflags
000000000072d860 00000000000000f0 T _mbrtowc_r
000000000072d960 0000000000000100 T mbrtowc
000000000072da60 0000000000000090 T __libc_init_array
000000000072db00 000000000000005c T iswctype
000000000072db60 0000000000000060 T _fgetwc_r
000000000072dbc0 0000000000000050 T fgetwc
000000000072dc20 0000000000000180 T __swsetup_r
000000000072dda0 00000000000001e8 T __sflush_r
000000000072dfa0 00000000000000b8 T _fflush_r
000000000072e060 0000000000000044 T fflush
000000000072e0c0 00000000000001cc T _wcstoul_l
000000000072e2a0 000000000000005c T wcstoul
000000000072e300 0000000000000008 T iswalnum
000000000072e320 000000000000000c T __env_lock
000000000072e340 000000000000000c T __env_unlock
000000000072e360 0000000000000048 T iswspace_l
000000000072e3c0 000000000000008c T _Balloc
000000000072e460 0000000000000020 T _Bfree
000000000072e480 0000000000000108 T __multadd
000000000072e5a0 000000000000013c T __s2b
000000000072e6e0 0000000000000094 T __hi0bits
000000000072e780 00000000000000fc T __lo0bits
000000000072e880 000000000000004c T __i2b
000000000072e8e0 00000000000001ec T __multiply
000000000072eae0 00000000000000fc T __pow5mult
000000000072ebe0 0000000000000174 T __lshift
000000000072ed60 0000000000000050 T __mcmp
000000000072edc0 00000000000001c4 T __mdiff
000000000072efa0 0000000000000084 T __ulp
000000000072f040 0000000000000168 T __b2d
000000000072f1c0 0000000000000154 T __d2b
000000000072f320 00000000000000ac T __ratio
000000000072f3e0 0000000000000078 T __copybits
000000000072f460 000000000000006c T __any_on
000000000072f4e0 00000000000000c8 T __ssprint_r
000000000072f5c0 0000000000000008 T iswblank
000000000072f5e0 0000000000000008 T iswlower
000000000072f600 00000000000002a0 T gmtime_r
000000000072f8a0 0000000000000790 t get_arg
0000000000730030 000000000000294c T _vfiprintf_r
000000000073297c 00000000000000d4 t __sbprintf
0000000000732a60 000000000000017c T _memalign_r
0000000000732be0 0000000000000118 T __swbuf_r
0000000000732d00 0000000000000188 T _wcsnrtombs_l
0000000000732ea0 0000000000000074 T _wcsnrtombs_r
0000000000732f14 0000000000000074 t get_arg
0000000000732f88 00000000000000f0 T _sungetc_r
0000000000733078 0000000000000070 T __ssrefill_r
00000000007330e8 00000000000000e0 T _sfread_r
00000000007331c8 00000000000028bc T __ssvfiscanf_r
0000000000735aa0 0000000000000008 T iswalpha
0000000000735ac0 0000000000000020 T _towctrans_r
0000000000735ae0 000000000000002c T towctrans
0000000000735b20 00000000000000c8 T __sswprint_r
0000000000735c00 0000000000000044 T __sprint_r
0000000000735c60 00000000000000b4 T siscanf
0000000000735d20 0000000000000008 T iswspace
0000000000735d40 0000000000000010 T iswdigit
0000000000735d60 00000000000000d4 T __sccl
0000000000735e40 00000000000000e8 T _mbstowcs_r
0000000000735f40 0000000000000008 T __localeconv_l
0000000000735f60 0000000000000028 T _localeconv_r
0000000000735fa0 0000000000000034 T iswalpha_l
0000000000735fe0 0000000000000050 T __chk_fail
0000000000736040 0000000000000104 T __fputwc
0000000000736160 000000000000007c T _fputwc_r
00000000007361e0 0000000000000068 T fputwc
0000000000736260 000000000000011c T _mbsnrtowcs_r
0000000000736380 0000000000000008 T iswprint
00000000007363a0 0000000000000008 T iswcntrl
00000000007363c0 000000000000007c T category
0000000000736440 0000000000000020 T iswxdigit
0000000000736460 0000000000000054 T mbrlen
00000000007364c0 00000000000000e0 T __register_exitproc
00000000007365a0 000000000000009c T stpncpy
0000000000736640 0000000000000188 T __ssputs_r
00000000007367e0 0000000000000008 T iswupper
0000000000736800 0000000000000008 T iswgraph
0000000000736820 0000000000000064 T iswlower_l
00000000007368a0 000000000000002c T iswblank_l
00000000007368e0 0000000000000038 T iswalnum_l
0000000000736920 0000000000000008 T iswpunct
0000000000736940 0000000000000204 T towctrans_l
0000000000736b60 0000000000000020 T iswprint_l
0000000000736b80 0000000000000024 T iswcntrl_l
0000000000736bc0 0000000000000064 T iswupper_l
0000000000736c40 0000000000000028 T iswgraph_l
0000000000736c80 0000000000000070 T __swbufw_r
0000000000736d00 000000000000013c T __call_exitprocs
0000000000736e40 0000000000000020 T iswpunct_l
0000000000736e60 0000000000000020 T _exit
0000000000736e80 0000000000000170 T chdir
0000000000737000 0000000000000034 T clock_gettime
0000000000737040 000000000000021c T _concatenate_path
0000000000737260 0000000000000094 T _fstat_r
0000000000737300 0000000000000014 T _getpid_r
0000000000737320 0000000000000020 T __getreent
0000000000737340 0000000000000024 T _gettimeofday_r
0000000000737380 0000000000000094 T __release_handle
0000000000737420 00000000000000c8 T __alloc_handle
0000000000737500 0000000000000050 T __get_handle
0000000000737560 0000000000000108 T _close_r
0000000000737680 0000000000000008 t null_write
00000000007376a0 0000000000000018 T setDefaultDevice
00000000007376c0 0000000000000114 T FindDevice
00000000007377e0 0000000000000034 T RemoveDevice
0000000000737820 00000000000000c8 T AddDevice
0000000000737900 0000000000000034 T GetDeviceOpTab
0000000000737940 0000000000000008 T _isatty_r
0000000000737960 0000000000000014 T _kill_r
0000000000737980 00000000000000a4 T _lseek_r
0000000000737a40 000000000000001c T pthread_mutexattr_init
0000000000737a60 000000000000001c T pthread_mutexattr_settype
0000000000737a80 0000000000000080 T pthread_mutex_init
0000000000737b00 0000000000000010 T pthread_mutex_destroy
0000000000737b20 000000000000006c T pthread_mutex_lock
0000000000737ba0 000000000000006c T pthread_mutex_unlock
0000000000737c20 0000000000000020 T pthread_condattr_init
0000000000737c40 0000000000000058 T pthread_cond_init
0000000000737ca0 0000000000000010 T pthread_cond_destroy
0000000000737cc0 0000000000000014 T pthread_cond_signal
0000000000737ce0 0000000000000014 T pthread_cond_broadcast
0000000000737d00 0000000000000054 T pthread_cond_wait
0000000000737d60 0000000000000020 T pthread_attr_init
0000000000737d80 0000000000000020 T pthread_attr_setstacksize
0000000000737da0 000000000000001c T pthread_attr_setdetachstate
0000000000737dc0 0000000000000084 T pthread_create
0000000000737e60 0000000000000040 T pthread_join
0000000000737ea0 0000000000000018 T pthread_self
0000000000737ec0 00000000000000d8 T pthread_once
0000000000737fa0 0000000000000024 T pthread_key_create
0000000000737fe0 0000000000000018 T pthread_setspecific
0000000000738000 0000000000000018 T pthread_getspecific
0000000000738020 0000000000000018 T pthread_key_delete
0000000000738040 0000000000000008 T pthread_setcanceltype
0000000000738060 0000000000000030 T sem_destroy
00000000007380a0 0000000000000058 T sem_init
0000000000738100 0000000000000064 T sem_post
0000000000738180 00000000000000b0 T sem_timedwait
0000000000738240 0000000000000078 T sem_trywait
00000000007382c0 0000000000000098 T sem_wait
0000000000738360 00000000000000e0 T _open_r
0000000000738440 00000000000000ac T _read_r
0000000000738500 0000000000000078 W _sbrk_r
0000000000738580 0000000000000090 T _stat_r
0000000000738620 0000000000000014 T timespec2nsec
0000000000738640 00000000000000c8 T abstimespec2nsec
0000000000738720 0000000000000014 T __libc_lock_acquire
0000000000738740 0000000000000014 T __libc_lock_release
0000000000738760 0000000000000014 T __libc_lock_acquire_recursive
0000000000738780 0000000000000014 T __libc_lock_release_recursive
00000000007387a0 0000000000000018 T __libc_cond_signal
00000000007387c0 0000000000000018 T __libc_cond_broadcast
00000000007387e0 0000000000000018 T __libc_cond_wait
0000000000738800 0000000000000018 T __libc_cond_wait_recursive
0000000000738820 00000000000000ac T _write_r
00000000007388e0 00000000000003c4 t __trunctfdf2
0000000000738ca8 T _init
0000000000738ce0 T _fini
000000000080b4d8 0000000000000036 r CSWTCH.143
000000000080be60 0000000000000400 R bend_coarse
000000000080c260 0000000000000800 R bend_fine
000000000080ca60 0000000000000200 R freq_table
000000000080cc60 0000000000000400 R vol_table
000000000080d090 00000000000000c8 r format_list
000000000080d160 0000000000002804 r ResamplerFilterDifference
000000000080f970 0000000000002804 r ResamplerFilter
0000000000812180 0000000000000200 r mix8
00000000008125f0 0000000000000044 r CSWTCH.10
0000000000812640 0000000000000800 r SDL_default_keymap
0000000000812e80 000000000000000c r CSWTCH.396
0000000000812e80 000000000000000c r CSWTCH.398
0000000000812e80 000000000000000c r CSWTCH.400
0000000000812e80 000000000000000c r CSWTCH.402
0000000000812e80 000000000000000c r CSWTCH.404
0000000000812e80 000000000000000c r CSWTCH.406
0000000000812e90 0000000000000014 r CSWTCH.91
0000000000812ea8 0000000000000028 r CSWTCH.89
0000000000812ed0 0000000000000014 r __func__.0
0000000000812ee8 0000000000000014 r __func__.1
0000000000812f00 0000000000000017 r __func__.2
0000000000812f18 0000000000000016 r __func__.3
0000000000812f30 0000000000000016 r __func__.4
0000000000812f48 0000000000000017 r __func__.5
0000000000812f60 0000000000000016 r __func__.6
0000000000812f78 0000000000000015 r __func__.7
0000000000812fb0 00000000000000d8 r GLES2_Fragment_TextureExternalOES
0000000000813090 0000000000000031 r GLES2_Fragment_TextureExternalOES_Prologue
00000000008130d0 000000000000030f r GLES2_Fragment_TextureNV21BT709
00000000008133e0 000000000000030f r GLES2_Fragment_TextureNV21BT601
00000000008136f0 00000000000002fd r GLES2_Fragment_TextureNV21JPEG
00000000008139f0 000000000000030f r GLES2_Fragment_TextureNV12BT709_RG
0000000000813d00 000000000000030f r GLES2_Fragment_TextureNV12BT709_RA
0000000000814010 000000000000030f r GLES2_Fragment_TextureNV12BT601_RG
0000000000814320 000000000000030f r GLES2_Fragment_TextureNV12BT601_RA
0000000000814630 00000000000002fd r GLES2_Fragment_TextureNV12JPEG
0000000000814930 000000000000033f r GLES2_Fragment_TextureYUVBT709
0000000000814c70 000000000000033f r GLES2_Fragment_TextureYUVBT601
0000000000814fb0 000000000000032d r GLES2_Fragment_TextureYUVJPEG
00000000008152e0 0000000000000107 r GLES2_Fragment_TextureBGR
00000000008153f0 0000000000000141 r GLES2_Fragment_TextureRGB
0000000000815540 0000000000000127 r GLES2_Fragment_TextureARGB
0000000000815670 00000000000000cf r GLES2_Fragment_TextureABGR
0000000000815740 000000000000004c r GLES2_Fragment_Solid
0000000000815790 0000000000000133 r GLES2_Vertex_Default
00000000008158d0 000000000000004c r GLES2_Fragment_Include_Undef_Precision
0000000000815920 0000000000000040 r GLES2_Fragment_Include_High_Texture_Precision
0000000000815960 0000000000000042 r GLES2_Fragment_Include_Medium_Texture_Precision
00000000008159b0 0000000000000097 r GLES2_Fragment_Include_Best_Texture_Precision
0000000000815a48 000000000000000d r __func__.0
0000000000815a58 0000000000000020 r CSWTCH.26
0000000000815a78 0000000000000020 r CSWTCH.25
0000000000815a98 0000000000000020 r CSWTCH.24
0000000000815ab8 0000000000000020 r CSWTCH.23
0000000000815b30 0000000000000078 r RGB2YUVFactorTables.0
0000000000815bb0 0000000000000200 r lut.0
0000000000815db0 0000000000000024 r YUV2RGB
0000000000815dd8 0000000000000002 r sink_channels.0
0000000000815de0 0000000000000018 r arConfig
0000000000815e00 00000000000000e0 r pad_mapping_right_joy
0000000000815ee0 00000000000000e0 r pad_mapping_left_joy
0000000000815fc0 00000000000000e0 r pad_mapping_default
00000000008160a0 0000000000000800 r RGB565_BGRA8888_LUT
00000000008168a0 0000000000000800 r RGB565_RGBA8888_LUT
00000000008170a0 0000000000000800 r RGB565_ABGR8888_LUT
00000000008178a0 0000000000000800 r RGB565_ARGB8888_LUT
00000000008180b0 0000000000000014 r CSWTCH.52
00000000008180c8 0000000000000024 r gains.6636
00000000008180f0 0000000000000020 R tf_select_table
0000000000818110 0000000000000004 r spread_icdf
0000000000818118 0000000000000003 r tapset_icdf
0000000000818120 000000000000000b r trim_icdf
0000000000818130 0000000000000020 r correction.4177
0000000000818150 00000000000000e7 r band_allocation
0000000000818238 0000000000000188 r cache_bits50
00000000008183c0 00000000000000a8 r cache_caps50
0000000000818468 00000000000000d2 r cache_index50
0000000000818540 000000000000002c r eband5ms
0000000000818570 00000000000000f0 r fft_bitrev120
0000000000818660 00000000000001e0 r fft_bitrev240
0000000000818840 00000000000003c0 r fft_bitrev480
0000000000818c00 0000000000000078 r fft_bitrev60
0000000000818c78 0000000000000f00 r fft_twiddles48000_960
0000000000819b78 000000000000002a r logN400
0000000000819ba8 0000000000001c20 r mdct_twiddles960
000000000081b7c8 00000000000001e0 r window120
000000000081b9a8 0000000000000010 r beta_coef
000000000081b9b8 0000000000000064 R eMeans
000000000081ba20 0000000000000150 r e_prob_model
000000000081bb70 0000000000000010 r pred_coef
000000000081bb80 0000000000000003 r small_energy_icdf
000000000081bb88 0000000000000018 r LOG2_FRAC_TABLE
000000000081bba0 000000000000000c r SPREAD_FACTOR.6494
000000000081bbb0 0000000000000003 r silk_LBRR_flags_2_iCDF
000000000081bbb8 0000000000000007 r silk_LBRR_flags_3_iCDF
000000000081bbc0 0000000000000006 R silk_LTPScales_table_Q14
000000000081bbc8 0000000000000003 R silk_LTPscale_iCDF
000000000081bbd0 0000000000000007 R silk_NLSF_EXT_iCDF
000000000081bbd8 0000000000000005 R silk_NLSF_interpolation_factor_iCDF
000000000081bbe0 0000000000000008 R silk_Quantization_Offsets_Q10
000000000081bbe8 0000000000000002 R silk_lsb_iCDF
000000000081bbf0 0000000000000002 R silk_stereo_only_code_mid_iCDF
000000000081bbf8 0000000000000019 R silk_stereo_pred_joint_iCDF
000000000081bc18 0000000000000020 R silk_stereo_pred_quant_Q13
000000000081bc38 0000000000000004 R silk_type_offset_VAD_iCDF
000000000081bc40 0000000000000002 R silk_type_offset_no_VAD_iCDF
000000000081bc48 0000000000000003 R silk_uniform3_iCDF
000000000081bc50 0000000000000004 R silk_uniform4_iCDF
000000000081bc58 0000000000000005 R silk_uniform5_iCDF
000000000081bc60 0000000000000006 R silk_uniform6_iCDF
000000000081bc68 0000000000000008 R silk_uniform8_iCDF
000000000081bc70 000000000000000f r delay_matrix_dec
000000000081bc80 000000000000000f r delay_matrix_enc
000000000081bc90 000000000000001c R silk_Resampler_1_2_COEFS
000000000081bcb0 0000000000000028 R silk_Resampler_1_3_COEFS
000000000081bcd8 0000000000000028 R silk_Resampler_1_4_COEFS
000000000081bd00 0000000000000028 R silk_Resampler_1_6_COEFS
000000000081bd28 0000000000000028 R silk_Resampler_2_3_COEFS
000000000081bd50 000000000000003a R silk_Resampler_3_4_COEFS
000000000081bd90 0000000000000060 R silk_resampler_frac_FIR_12
000000000081bdf0 0000000000000010 r bit_deinterleave_table.7015
000000000081be00 0000000000000010 r bit_interleave_table.7005
000000000081be10 0000000000000010 r exp2_table8.6846
000000000081be20 0000000000000078 r ordery_table
000000000081be98 00000000000013e0 r CELT_PVQ_U_DATA
000000000081d278 0000000000000004 r HARM_ATT_Q15
000000000081d280 0000000000000004 r PLC_RAND_ATTENUATE_UV_Q15
000000000081d288 0000000000000004 r PLC_RAND_ATTENUATE_V_Q15
000000000081d290 0000000000000029 R silk_delta_gain_iCDF
000000000081d2c0 0000000000000018 R silk_gain_iCDF
000000000081d2d8 0000000000000008 r silk_LTP_gain_iCDF_0
000000000081d2e0 0000000000000010 r silk_LTP_gain_iCDF_1
000000000081d2f0 0000000000000020 r silk_LTP_gain_iCDF_2
000000000081d310 0000000000000028 r silk_LTP_gain_vq_0
000000000081d338 0000000000000050 r silk_LTP_gain_vq_1
000000000081d388 00000000000000a0 r silk_LTP_gain_vq_2
000000000081d428 0000000000000003 R silk_LTP_per_index_iCDF
000000000081d430 0000000000000140 r silk_NLSF_CB1_NB_MB_Q8
000000000081d570 0000000000000280 r silk_NLSF_CB1_Wght_Q9
000000000081d7f0 0000000000000040 r silk_NLSF_CB1_iCDF_NB_MB
000000000081d830 0000000000000048 r silk_NLSF_CB2_BITS_NB_MB_Q5
000000000081d878 00000000000000a0 r silk_NLSF_CB2_SELECT_NB_MB
000000000081d918 0000000000000048 r silk_NLSF_CB2_iCDF_NB_MB
000000000081d960 0000000000000016 r silk_NLSF_DELTA_MIN_NB_MB_Q15
000000000081d978 0000000000000012 r silk_NLSF_PRED_NB_MB_Q8
000000000081d990 0000000000000200 r silk_NLSF_CB1_WB_Q8
000000000081db90 0000000000000400 r silk_NLSF_CB1_WB_Wght_Q9
000000000081df90 0000000000000040 r silk_NLSF_CB1_iCDF_WB
000000000081dfd0 0000000000000048 r silk_NLSF_CB2_BITS_WB_Q5
000000000081e018 0000000000000100 r silk_NLSF_CB2_SELECT_WB
000000000081e118 0000000000000048 r silk_NLSF_CB2_iCDF_WB
000000000081e160 0000000000000022 r silk_NLSF_DELTA_MIN_WB_Q15
000000000081e188 000000000000001e r silk_NLSF_PRED_WB_Q8
000000000081e1a8 0000000000000003 R silk_pitch_contour_10_ms_NB_iCDF
000000000081e1b0 000000000000000c R silk_pitch_contour_10_ms_iCDF
000000000081e1c0 000000000000000b R silk_pitch_contour_NB_iCDF
000000000081e1d0 0000000000000022 R silk_pitch_contour_iCDF
000000000081e1f8 0000000000000015 R silk_pitch_delta_iCDF
000000000081e210 0000000000000020 R silk_pitch_lag_iCDF
000000000081e230 00000000000000b4 R silk_pulses_per_block_iCDF
000000000081e2e8 0000000000000012 R silk_rate_levels_iCDF
000000000081e300 0000000000000098 R silk_shell_code_table0
000000000081e398 0000000000000098 R silk_shell_code_table1
000000000081e430 0000000000000098 R silk_shell_code_table2
000000000081e4c8 0000000000000098 R silk_shell_code_table3
000000000081e560 0000000000000011 R silk_shell_code_table_offsets
000000000081e578 000000000000002a R silk_sign_iCDF
000000000081e5a8 000000000000000a r ordering10.23678
000000000081e5b8 0000000000000010 r ordering16.23677
000000000081e5c8 000000000000002c R silk_CB_lags_stage2
000000000081e5f8 0000000000000006 R silk_CB_lags_stage2_10_ms
000000000081e600 0000000000000088 R silk_CB_lags_stage3
000000000081e688 0000000000000018 R silk_CB_lags_stage3_10_ms
000000000081e6a0 0000000000000102 R silk_LSFCosTab_FIX_Q12
000000000081e7a8 0000000000000024 r sRGB_XYZ.0
000000000081e7d0 00000000000000e0 r png_sRGB_checks
000000000081e8b0 0000000000000020 r sRGB_xy
000000000081e8d0 000000000000000a r valid_parameters.0
000000000081e8e0 0000000000000011 r digits.1
000000000081e900 0000000000000010 r png_digit
000000000081e910 0000000000000007 r png_pass_ystart.4
000000000081e918 0000000000000007 r png_pass_yinc.5
000000000081e920 0000000000000007 r png_pass_start.0
000000000081e920 0000000000000007 r png_pass_start.6
000000000081e928 0000000000000007 r png_pass_inc.1
000000000081e928 0000000000000007 r png_pass_inc.7
000000000081e930 000000000000001c r png_pass_inc.8
000000000081e950 0000000000000090 r row_mask.9
000000000081e9e0 0000000000000048 r display_mask.10
000000000081ea30 0000000000000100 r fourbppswaptable
000000000081eb30 0000000000000100 r twobppswaptable
000000000081ec30 0000000000000100 r onebppswaptable
000000000081ed30 0000000000000007 r png_pass_ystart.2
000000000081ed38 0000000000000007 r png_pass_yinc.3
000000000081ed40 0000000000000007 r png_pass_start.1
000000000081ed40 0000000000000007 r png_pass_start.4
000000000081ed48 0000000000000007 r png_pass_inc.0
000000000081ed48 0000000000000007 r png_pass_inc.5
000000000081ed50 0000000000000400 r crc_table
000000000081f150 0000000000000080 r x2n_table
000000000081f1d0 0000000000002000 r crc_braid_table
0000000000821210 0000000000000800 r lenfix.1
0000000000821a10 0000000000000080 r distfix.0
0000000000821a90 0000000000000026 r order.2
0000000000821ac0 0000000000000040 r dext.0
0000000000821b00 0000000000000040 r dbase.1
0000000000821b40 000000000000003e r lext.2
0000000000821b80 000000000000003e r lbase.3
0000000000821bc0 000000000000002f R inflate_copyright
0000000000821bf0 0000000000000100 R _length_code
0000000000821cf0 0000000000000074 r extra_lbits
0000000000821d70 0000000000000074 r base_length
0000000000821df0 0000000000000200 R _dist_code
0000000000821ff0 0000000000000078 r extra_dbits
0000000000822070 0000000000000078 r base_dist
00000000008220f0 0000000000000013 r bl_order
0000000000822108 0000000000000078 r static_dtree
0000000000822180 0000000000000480 r static_ltree
0000000000822600 000000000000004c r extra_blbits
0000000000822650 0000000000000011 r bits_ac_chrominance.1
0000000000822670 0000000000000011 r bits_ac_luminance.5
0000000000822690 0000000000000011 r bits_dc_chrominance.3
00000000008226b0 0000000000000011 r bits_dc_luminance.7
00000000008226d0 0000000000000100 r std_chrominance_quant_tbl
00000000008227d0 0000000000000100 r std_luminance_quant_tbl
00000000008228d0 00000000000000a2 r val_ac_chrominance.0
0000000000822980 00000000000000a2 r val_ac_luminance.4
0000000000822a28 000000000000000c r val_dc_chrominance.2
0000000000822a38 000000000000000c r val_dc_luminance.6
0000000000822ad0 0000000000000044 r rgb_pixelsize
0000000000822b20 0000000000000020 r dither_matrix
0000000000822b40 0000000000000100 r base_dither_matrix
0000000000822c40 0000000000000044 r rgb_blue
0000000000822c90 0000000000000044 r rgb_green
0000000000822ce0 0000000000000044 r rgb_red
0000000000822d28 000000000000000c r c_scales
0000000000822d40 0000000000000044 r rgb_blue
0000000000822d90 0000000000000044 r rgb_green
0000000000822de0 0000000000000044 r rgb_red
0000000000822e28 0000000000000140 R jpeg_natural_order
0000000000822f70 0000000000000010 r extra_pool_slop
0000000000822f80 0000000000000010 r first_pool_slop
0000000000822f90 0000000000000044 r rgb_blue
0000000000822fe0 0000000000000044 r rgb_green
0000000000823030 0000000000000044 r rgb_pixelsize
0000000000823080 0000000000000044 r rgb_red
00000000008230d0 0000000000000040 r aanscalefactor.0
0000000000823110 0000000000000080 r aanscales.1
0000000000823190 0000000000000020 r dither_matrix
00000000008231b0 0000000000000044 r rgb_blue
0000000000823200 0000000000000044 r rgb_green
0000000000823250 0000000000000044 r rgb_pixelsize
00000000008232a0 0000000000000044 r rgb_red
00000000008232f0 0000000000000040 r aanscalefactor.0
0000000000823330 0000000000000011 r bits_ac_chrominance.1
0000000000823350 0000000000000011 r bits_ac_luminance.5
0000000000823370 0000000000000011 r bits_dc_chrominance.3
0000000000823390 0000000000000011 r bits_dc_luminance.7
00000000008233b0 00000000000000a2 r val_ac_chrominance.0
0000000000823460 00000000000000a2 r val_ac_luminance.4
0000000000823508 000000000000000c r val_dc_chrominance.2
0000000000823518 000000000000000c r val_dc_luminance.6
0000000000823528 0000000000000390 R jpeg_aritab
00000000008238c0 0000000000000100 r jsimd_h2_downsample_consts
00000000008239c0 0000000000000008 r jsimd_ycc_rgb_convert_neon_consts
00000000008239d0 0000000000000008 r jsimd_fdct_ifast_neon_consts
00000000008239e0 0000000000000008 r jsimd_idct_2x2_neon_consts
00000000008239f0 0000000000000018 r jsimd_idct_4x4_neon_consts
0000000000823a10 0000000000000008 r jsimd_idct_ifast_neon_consts
0000000000823a20 r Ljsimd_idct_islow_neon_consts
0000000000823a40 r Ljsimd_ycc_rgb_neon_consts
0000000000823a60 r Ljsimd_rgb_ycc_neon_consts
0000000000823a80 r Ljsimd_fdct_islow_neon_consts
0000000000823aa0 r Ljsimd_huff_encode_one_block_neon_consts
0000000000823b70 00000000000000b0 r ft_trig_arctan_table
0000000000823d50 0000000000000020 r fvaraxis_fields.0
0000000000823d70 0000000000000024 r fvar_fields.1
0000000000823da0 0000000000000024 r gvar_fields.2
0000000000823dc8 00000000000005d0 r sfnt_id.3
00000000008243a0 0000000000000190 r trick_names.4
0000000000824530 0000000000000100 r opcode_length
0000000000824630 0000000000000100 r Pop_Push_Count
0000000000824730 0000000000000060 R tt_default_graphics_state
0000000000824790 0000000000000004 r tt_service_truetype_engine
00000000008247f0 0000000000000014 r cff_header_fields.0
0000000000824810 0000000000000200 r cff_expert_encoding
0000000000824a10 0000000000000200 r cff_standard_encoding
0000000000824c10 00000000000000ae r cff_expertsubset_charset
0000000000824cc0 000000000000014c r cff_expert_charset
0000000000824e10 00000000000001ca r cff_isoadobe_charset
0000000000824fe0 0000000000000050 r power_ten_limits
0000000000825030 0000000000000050 r power_tens
0000000000825080 0000000000000074 r pfr_header_fields
0000000000825100 0000000000000098 r winfnt_header_fields
00000000008251a0 0000000000000018 r winpe_rsrc_data_entry_fields
00000000008251c0 0000000000000010 r winpe_rsrc_dir_entry_fields
00000000008251d0 0000000000000020 r winpe_rsrc_dir_fields
00000000008251f0 0000000000000020 r winpe32_section_fields
0000000000825210 0000000000000034 r winpe32_header_fields
0000000000825250 0000000000000018 r winne_header_fields
0000000000825270 0000000000000014 r winmz_header_fields
0000000000825290 0000000000000034 r pcf_accel_msb_header
00000000008252d0 0000000000000034 r pcf_accel_header
0000000000825310 000000000000001c r pcf_enc_msb_header
0000000000825330 000000000000001c r pcf_enc_header
0000000000825350 0000000000000014 r pcf_property_msb_header
0000000000825370 0000000000000014 r pcf_property_header
0000000000825390 000000000000001c r pcf_compressed_metric_header
00000000008253b0 0000000000000020 r pcf_metric_msb_header
00000000008253d0 0000000000000020 r pcf_metric_header
00000000008253f0 0000000000000018 r pcf_table_header
0000000000825410 0000000000000010 r pcf_toc_header
0000000000825420 0000000000000008 r nibble_mask
0000000000825430 0000000000000020 r hdigits
0000000000825450 0000000000000020 r ddigits
0000000000825470 0000000000000080 r a2i
00000000008254f0 0000000000000001 r empty
0000000000825520 000000000000003c r woff_header_fields.0
0000000000825560 0000000000000010 r ttc_header_fields.1
0000000000825570 0000000000000084 r tt_encodings.2
0000000000825600 000000000000004c r metrics_header_fields.3
0000000000825650 000000000000003c r maxp_fields_extra.4
0000000000825690 0000000000000010 r maxp_fields.5
00000000008256a0 0000000000000010 r os2_fields_extra5.6
00000000008256b0 000000000000001c r os2_fields_extra2.7
00000000008256d0 0000000000000010 r os2_fields_extra1.8
00000000008256e0 00000000000000b0 r os2_fields.9
0000000000825790 000000000000002c r post_fields.10
00000000008257c0 000000000000001c r name_record_fields.11
00000000008257e0 000000000000000c r langTag_record_fields.12
00000000008257f0 0000000000000014 r name_table_fields.13
0000000000825810 0000000000000044 r pclt_fields.14
0000000000825860 0000000000000054 r header_fields.15
00000000008258c0 0000000000000018 r table_dir_entry_fields.16
00000000008258e0 0000000000000018 r offset_table_fields.17
0000000000825900 0000000000000010 r hexdigits
0000000000825910 0000000000000010 r sfnt_ps_map
0000000000825920 0000000000000018 R af_hani_nonbase_uniranges
0000000000825940 0000000000000110 R af_hani_uniranges
0000000000825a50 0000000000000050 R af_tibt_nonbase_uniranges
0000000000825aa0 0000000000000010 R af_tibt_uniranges
0000000000825ab0 0000000000000028 R af_sylo_nonbase_uniranges
0000000000825ae0 0000000000000010 R af_sylo_uniranges
0000000000825af0 0000000000000038 R af_orya_nonbase_uniranges
0000000000825b30 0000000000000010 R af_orya_uniranges
0000000000825b40 0000000000000020 R af_limb_nonbase_uniranges
0000000000825b60 0000000000000010 R af_limb_uniranges
0000000000825b70 0000000000000008 R af_vaii_nonbase_uniranges
0000000000825b80 0000000000000010 R af_vaii_uniranges
0000000000825b90 0000000000000008 R af_tfng_nonbase_uniranges
0000000000825ba0 0000000000000010 R af_tfng_uniranges
0000000000825bb0 0000000000000020 R af_thai_nonbase_uniranges
0000000000825bd0 0000000000000010 R af_thai_uniranges
0000000000825be0 0000000000000030 R af_telu_nonbase_uniranges
0000000000825c10 0000000000000010 R af_telu_uniranges
0000000000825c20 0000000000000030 R af_tavt_nonbase_uniranges
0000000000825c50 0000000000000010 R af_tavt_uniranges
0000000000825c60 0000000000000020 R af_taml_nonbase_uniranges
0000000000825c80 0000000000000010 R af_taml_uniranges
0000000000825c90 0000000000000018 R af_sund_nonbase_uniranges
0000000000825cb0 0000000000000018 R af_sund_uniranges
0000000000825cd0 0000000000000018 R af_sinh_nonbase_uniranges
0000000000825cf0 0000000000000010 R af_sinh_uniranges
0000000000825d00 0000000000000008 R af_shaw_nonbase_uniranges
0000000000825d10 0000000000000010 R af_shaw_uniranges
0000000000825d20 0000000000000018 R af_saur_nonbase_uniranges
0000000000825d40 0000000000000010 R af_saur_uniranges
0000000000825d50 0000000000000008 R af_rohg_nonbase_uniranges
0000000000825d60 0000000000000010 R af_rohg_uniranges
0000000000825d70 0000000000000008 R af_osma_nonbase_uniranges
0000000000825d80 0000000000000010 R af_osma_uniranges
0000000000825d90 0000000000000008 R af_osge_nonbase_uniranges
0000000000825da0 0000000000000010 R af_osge_uniranges
0000000000825db0 0000000000000008 R af_orkh_nonbase_uniranges
0000000000825dc0 0000000000000010 R af_orkh_uniranges
0000000000825dd0 0000000000000008 R af_olck_nonbase_uniranges
0000000000825de0 0000000000000010 R af_olck_uniranges
0000000000825df0 0000000000000008 R af_none_nonbase_uniranges
0000000000825df8 0000000000000008 R af_none_uniranges
0000000000825e00 0000000000000018 R af_nkoo_nonbase_uniranges
0000000000825e20 0000000000000010 R af_nkoo_uniranges
0000000000825e30 0000000000000068 R af_mymr_nonbase_uniranges
0000000000825ea0 0000000000000020 R af_mymr_uniranges
0000000000825ec0 0000000000000018 R af_mong_nonbase_uniranges
0000000000825ee0 0000000000000018 R af_mong_uniranges
0000000000825ef8 0000000000000008 R af_medf_nonbase_uniranges
0000000000825f00 0000000000000010 R af_medf_uniranges
0000000000825f10 0000000000000028 R af_mlym_nonbase_uniranges
0000000000825f40 0000000000000010 R af_mlym_uniranges
0000000000825f50 0000000000000008 R af_lisu_nonbase_uniranges
0000000000825f60 0000000000000010 R af_lisu_uniranges
0000000000825f70 0000000000000008 R af_latp_nonbase_uniranges
0000000000825f80 0000000000000070 R af_latp_uniranges
0000000000825ff0 0000000000000008 R af_latb_nonbase_uniranges
0000000000826000 0000000000000020 R af_latb_uniranges
0000000000826020 0000000000000088 R af_latn_nonbase_uniranges
00000000008260b0 0000000000000108 R af_latn_uniranges
00000000008261c0 0000000000000020 R af_lao_nonbase_uniranges
00000000008261e0 0000000000000010 R af_lao_uniranges
00000000008261f0 0000000000000008 R af_khms_nonbase_uniranges
0000000000826200 0000000000000010 R af_khms_uniranges
0000000000826210 0000000000000028 R af_khmr_nonbase_uniranges
0000000000826240 0000000000000010 R af_khmr_uniranges
0000000000826250 0000000000000038 R af_knda_nonbase_uniranges
0000000000826290 0000000000000010 R af_knda_uniranges
00000000008262a0 0000000000000010 R af_kali_nonbase_uniranges
00000000008262b0 0000000000000010 R af_kali_uniranges
00000000008262c0 0000000000000030 R af_hebr_nonbase_uniranges
00000000008262f0 0000000000000018 R af_hebr_uniranges
0000000000826310 0000000000000030 R af_guru_nonbase_uniranges
0000000000826340 0000000000000010 R af_guru_uniranges
0000000000826350 0000000000000038 R af_gujr_nonbase_uniranges
0000000000826390 0000000000000010 R af_gujr_uniranges
00000000008263a0 0000000000000040 R af_grek_nonbase_uniranges
00000000008263e0 0000000000000018 R af_grek_uniranges
00000000008263f8 0000000000000008 R af_goth_nonbase_uniranges
0000000000826400 0000000000000010 R af_goth_uniranges
0000000000826410 0000000000000010 R af_glag_nonbase_uniranges
0000000000826420 0000000000000018 R af_glag_uniranges
0000000000826438 0000000000000008 R af_geok_nonbase_uniranges
0000000000826440 0000000000000018 R af_geok_uniranges
0000000000826458 0000000000000008 R af_geor_nonbase_uniranges
0000000000826460 0000000000000018 R af_geor_uniranges
0000000000826480 0000000000000010 R af_ethi_nonbase_uniranges
0000000000826490 0000000000000028 R af_ethi_uniranges
00000000008264b8 0000000000000008 R af_dsrt_nonbase_uniranges
00000000008264c0 0000000000000010 R af_dsrt_uniranges
00000000008264d0 0000000000000048 R af_deva_nonbase_uniranges
0000000000826520 0000000000000038 R af_deva_uniranges
0000000000826560 0000000000000028 R af_cyrl_nonbase_uniranges
0000000000826590 0000000000000030 R af_cyrl_uniranges
00000000008265c0 0000000000000008 R af_cprt_nonbase_uniranges
00000000008265d0 0000000000000010 R af_cprt_uniranges
00000000008265e0 0000000000000010 R af_copt_nonbase_uniranges
00000000008265f0 0000000000000010 R af_copt_uniranges
0000000000826600 0000000000000008 R af_cher_nonbase_uniranges
0000000000826610 0000000000000018 R af_cher_uniranges
0000000000826628 0000000000000008 R af_cari_nonbase_uniranges
0000000000826630 0000000000000010 R af_cari_uniranges
0000000000826640 0000000000000008 R af_cans_nonbase_uniranges
0000000000826650 0000000000000018 R af_cans_uniranges
0000000000826670 0000000000000020 R af_cakm_nonbase_uniranges
0000000000826690 0000000000000010 R af_cakm_uniranges
00000000008266a0 0000000000000010 R af_buhd_nonbase_uniranges
00000000008266b0 0000000000000010 R af_buhd_uniranges
00000000008266c0 0000000000000038 R af_beng_nonbase_uniranges
0000000000826700 0000000000000010 R af_beng_uniranges
0000000000826710 0000000000000010 R af_bamu_nonbase_uniranges
0000000000826720 0000000000000010 R af_bamu_uniranges
0000000000826730 0000000000000010 R af_avst_nonbase_uniranges
0000000000826740 0000000000000010 R af_avst_uniranges
0000000000826750 0000000000000010 R af_armn_nonbase_uniranges
0000000000826760 0000000000000018 R af_armn_uniranges
0000000000826780 00000000000000a0 R af_arab_nonbase_uniranges
0000000000826820 0000000000000038 R af_arab_uniranges
0000000000826860 0000000000000010 R af_adlm_nonbase_uniranges
0000000000826870 0000000000000010 R af_adlm_uniranges
0000000000826880 0000000000000014 R af_hani_dflt_style_class
0000000000826898 0000000000000014 R af_tibt_dflt_style_class
00000000008268b0 0000000000000014 R af_sylo_dflt_style_class
00000000008268c8 0000000000000014 R af_orya_dflt_style_class
00000000008268e0 0000000000000014 R af_limb_dflt_style_class
00000000008268f8 0000000000000014 R af_vaii_dflt_style_class
0000000000826910 0000000000000014 R af_thai_dflt_style_class
0000000000826928 0000000000000014 R af_tfng_dflt_style_class
0000000000826940 0000000000000014 R af_telu_dflt_style_class
0000000000826958 0000000000000014 R af_tavt_dflt_style_class
0000000000826970 0000000000000014 R af_taml_dflt_style_class
0000000000826988 0000000000000014 R af_sund_dflt_style_class
00000000008269a0 0000000000000014 R af_sinh_dflt_style_class
00000000008269b8 0000000000000014 R af_shaw_dflt_style_class
00000000008269d0 0000000000000014 R af_saur_dflt_style_class
00000000008269e8 0000000000000014 R af_rohg_dflt_style_class
0000000000826a00 0000000000000014 R af_osma_dflt_style_class
0000000000826a18 0000000000000014 R af_osge_dflt_style_class
0000000000826a30 0000000000000014 R af_orkh_dflt_style_class
0000000000826a48 0000000000000014 R af_olck_dflt_style_class
0000000000826a60 0000000000000014 R af_none_dflt_style_class
0000000000826a78 0000000000000014 R af_nkoo_dflt_style_class
0000000000826a90 0000000000000014 R af_mymr_dflt_style_class
0000000000826aa8 0000000000000014 R af_mong_dflt_style_class
0000000000826ac0 0000000000000014 R af_medf_dflt_style_class
0000000000826ad8 0000000000000014 R af_mlym_dflt_style_class
0000000000826af0 0000000000000014 R af_lisu_dflt_style_class
0000000000826b08 0000000000000014 R af_latp_dflt_style_class
0000000000826b20 0000000000000014 R af_latb_dflt_style_class
0000000000826b38 0000000000000014 R af_latn_dflt_style_class
0000000000826b50 0000000000000014 R af_latn_titl_style_class
0000000000826b68 0000000000000014 R af_latn_sups_style_class
0000000000826b80 0000000000000014 R af_latn_subs_style_class
0000000000826b98 0000000000000014 R af_latn_smcp_style_class
0000000000826bb0 0000000000000014 R af_latn_sinf_style_class
0000000000826bc8 0000000000000014 R af_latn_pcap_style_class
0000000000826be0 0000000000000014 R af_latn_ordn_style_class
0000000000826bf8 0000000000000014 R af_latn_c2sc_style_class
0000000000826c10 0000000000000014 R af_latn_c2cp_style_class
0000000000826c28 0000000000000014 R af_lao_dflt_style_class
0000000000826c40 0000000000000014 R af_knda_dflt_style_class
0000000000826c58 0000000000000014 R af_khms_dflt_style_class
0000000000826c70 0000000000000014 R af_khmr_dflt_style_class
0000000000826c88 0000000000000014 R af_kali_dflt_style_class
0000000000826ca0 0000000000000014 R af_hebr_dflt_style_class
0000000000826cb8 0000000000000014 R af_guru_dflt_style_class
0000000000826cd0 0000000000000014 R af_gujr_dflt_style_class
0000000000826ce8 0000000000000014 R af_grek_dflt_style_class
0000000000826d00 0000000000000014 R af_grek_titl_style_class
0000000000826d18 0000000000000014 R af_grek_sups_style_class
0000000000826d30 0000000000000014 R af_grek_subs_style_class
0000000000826d48 0000000000000014 R af_grek_smcp_style_class
0000000000826d60 0000000000000014 R af_grek_sinf_style_class
0000000000826d78 0000000000000014 R af_grek_pcap_style_class
0000000000826d90 0000000000000014 R af_grek_ordn_style_class
0000000000826da8 0000000000000014 R af_grek_c2sc_style_class
0000000000826dc0 0000000000000014 R af_grek_c2cp_style_class
0000000000826dd8 0000000000000014 R af_goth_dflt_style_class
0000000000826df0 0000000000000014 R af_glag_dflt_style_class
0000000000826e08 0000000000000014 R af_geok_dflt_style_class
0000000000826e20 0000000000000014 R af_geor_dflt_style_class
0000000000826e38 0000000000000014 R af_ethi_dflt_style_class
0000000000826e50 0000000000000014 R af_dsrt_dflt_style_class
0000000000826e68 0000000000000014 R af_deva_dflt_style_class
0000000000826e80 0000000000000014 R af_cyrl_dflt_style_class
0000000000826e98 0000000000000014 R af_cyrl_titl_style_class
0000000000826eb0 0000000000000014 R af_cyrl_sups_style_class
0000000000826ec8 0000000000000014 R af_cyrl_subs_style_class
0000000000826ee0 0000000000000014 R af_cyrl_smcp_style_class
0000000000826ef8 0000000000000014 R af_cyrl_sinf_style_class
0000000000826f10 0000000000000014 R af_cyrl_pcap_style_class
0000000000826f28 0000000000000014 R af_cyrl_ordn_style_class
0000000000826f40 0000000000000014 R af_cyrl_c2sc_style_class
0000000000826f58 0000000000000014 R af_cyrl_c2cp_style_class
0000000000826f70 0000000000000014 R af_cprt_dflt_style_class
0000000000826f88 0000000000000014 R af_copt_dflt_style_class
0000000000826fa0 0000000000000014 R af_cher_dflt_style_class
0000000000826fb8 0000000000000014 R af_cari_dflt_style_class
0000000000826fd0 0000000000000014 R af_cans_dflt_style_class
0000000000826fe8 0000000000000014 R af_cakm_dflt_style_class
0000000000827000 0000000000000014 R af_buhd_dflt_style_class
0000000000827018 0000000000000014 R af_beng_dflt_style_class
0000000000827030 0000000000000014 R af_bamu_dflt_style_class
0000000000827048 0000000000000014 R af_avst_dflt_style_class
0000000000827060 0000000000000014 R af_armn_dflt_style_class
0000000000827078 0000000000000014 R af_arab_dflt_style_class
0000000000827090 0000000000000014 R af_adlm_dflt_style_class
00000000008270b0 0000000000000848 R af_blue_stringsets
0000000000827900 000000000000159b R af_blue_strings
0000000000828fc0 000000000000000c r readFromStack.0
0000000000828fd0 000000000000000c r readFromStack.1
0000000000828fe0 000000000000000c r readFromStack.2
0000000000828ff0 000000000000000c r readFromStack.3
0000000000829000 0000000000000080 r ft_char_table
0000000000829080 0000000000000028 r ft_extra_glyph_name_offsets
00000000008290b0 0000000000000055 r ft_extra_glyph_names
0000000000829110 0000000000000028 r ft_extra_glyph_unicodes
0000000000829140 000000000000dabd R ft_adobe_glyph_list
0000000000836c00 0000000000000200 R t1_expert_encoding
0000000000836e00 0000000000000200 R t1_standard_encoding
0000000000837000 000000000000030e R ft_sid_names
0000000000837310 0000000000000204 R ft_mac_names
0000000000837520 0000000000000e70 R ft_standard_glyph_names
0000000000838390 0000000000000018 r __func__.0
00000000008383a8 0000000000000015 r __func__.1
00000000008383c0 0000000000000013 r __func__.10
00000000008383d8 0000000000000012 r __func__.11
00000000008383f0 000000000000001b r __func__.12
0000000000838410 0000000000000019 r __func__.13
0000000000838430 000000000000001e r __func__.14
0000000000838450 0000000000000016 r __func__.15
0000000000838468 000000000000001a r __func__.16
0000000000838488 0000000000000018 r __func__.17
00000000008384a0 0000000000000019 r __func__.18
00000000008384c0 0000000000000014 r __func__.19
00000000008384d8 0000000000000016 r __func__.2
00000000008384f0 0000000000000019 r __func__.20
0000000000838510 0000000000000012 r __func__.21
0000000000838528 0000000000000013 r __func__.22
0000000000838540 0000000000000011 r __func__.23
0000000000838558 0000000000000018 r __func__.24
0000000000838570 0000000000000018 r __func__.25
0000000000838588 0000000000000013 r __func__.26
00000000008385a0 0000000000000019 r __func__.27
00000000008385c0 0000000000000019 r __func__.28
00000000008385e0 000000000000001b r __func__.29
0000000000838600 0000000000000012 r __func__.3
0000000000838618 0000000000000018 r __func__.30
0000000000838630 000000000000001c r __func__.31
0000000000838650 0000000000000016 r __func__.32
0000000000838668 0000000000000011 r __func__.33
0000000000838680 0000000000000018 r __func__.34
0000000000838698 000000000000001c r __func__.35
00000000008386b8 0000000000000020 r __func__.36
00000000008386d8 000000000000001c r __func__.37
00000000008386f8 000000000000001a r __func__.38
0000000000838718 000000000000000f r __func__.39
0000000000838728 0000000000000022 r __func__.4
0000000000838750 0000000000000012 r __func__.41
0000000000838768 0000000000000018 r __func__.42
0000000000838780 0000000000000011 r __func__.43
0000000000838798 0000000000000013 r __func__.44
00000000008387b0 000000000000000c r __func__.45
00000000008387c0 0000000000000019 r __func__.46
00000000008387e0 0000000000000012 r __func__.47
00000000008387f8 0000000000000010 r __func__.48
0000000000838808 000000000000000f r __func__.49
0000000000838818 0000000000000022 r __func__.5
0000000000838840 000000000000000f r __func__.50
0000000000838850 000000000000000e r __func__.51
0000000000838860 0000000000000017 r __func__.52
0000000000838878 0000000000000010 r __func__.53
0000000000838888 0000000000000016 r __func__.54
00000000008388a0 000000000000000f r __func__.55
00000000008388b0 0000000000000011 r __func__.56
00000000008388c8 0000000000000021 r __func__.57
00000000008388f0 000000000000000c r __func__.58
0000000000838900 000000000000000b r __func__.59
0000000000838910 0000000000000013 r __func__.6
0000000000838928 0000000000000015 r __func__.60
0000000000838940 0000000000000015 r __func__.61
0000000000838958 0000000000000015 r __func__.62
0000000000838970 000000000000000e r __func__.63
0000000000838980 000000000000000a r __func__.64
0000000000838990 0000000000000015 r __func__.65
00000000008389a8 000000000000000e r __func__.66
00000000008389b8 000000000000000f r __func__.67
00000000008389c8 000000000000000f r __func__.68
00000000008389d8 0000000000000010 r __func__.69
00000000008389e8 0000000000000011 r __func__.7
0000000000838a00 0000000000000013 r __func__.70
0000000000838a18 0000000000000010 r __func__.71
0000000000838a28 0000000000000011 r __func__.72
0000000000838a40 0000000000000010 r __func__.73
0000000000838a50 0000000000000012 r __func__.74
0000000000838a68 0000000000000018 r __func__.75
0000000000838a80 000000000000001f r __func__.76
0000000000838aa0 000000000000001e r __func__.77
0000000000838ac0 0000000000000017 r __func__.78
0000000000838ad8 000000000000001f r __func__.79
0000000000838af8 0000000000000022 r __func__.8
0000000000838b20 000000000000001e r __func__.80
0000000000838b40 0000000000000017 r __func__.81
0000000000838b58 0000000000000010 r __func__.82
0000000000838b68 000000000000000f r __func__.83
0000000000838b78 0000000000000012 r __func__.84
0000000000838b90 0000000000000011 r __func__.85
0000000000838ba8 0000000000000013 r __func__.86
0000000000838bc0 0000000000000010 r __func__.87
0000000000838bd0 000000000000000e r __func__.88
0000000000838be0 000000000000000f r __func__.89
0000000000838bf0 000000000000001a r __func__.9
0000000000838c10 000000000000000d r __func__.90
0000000000838c20 000000000000000e r __func__.91
0000000000838c30 000000000000001d r __func__.92
0000000000838c50 0000000000000016 r __func__.93
0000000000838c68 000000000000000e r __func__.94
0000000000838d50 0000000000000250 r _eglValidationTable
0000000000838fa0 000000000000000c r CSWTCH.4
0000000000839018 000000000000001c r depthfmts.0
0000000000839038 0000000000000018 r CSWTCH.53
0000000000839050 000000000000001c r CSWTCH.55
0000000000839070 00000000000002b2 r CSWTCH.63
0000000000839328 0000000000000010 r CSWTCH.86
0000000000839338 0000000000000010 r CSWTCH.91
0000000000839658 0000000000000010 r CSWTCH.133
0000000000839668 000000000000001c r CSWTCH.91
0000000000839688 0000000000000030 r code_gk110.5
00000000008396b8 0000000000000078 r code_gm107.6
0000000000839730 0000000000000028 r code_nvc0.3
0000000000839758 0000000000000030 r code_nve4.4
0000000000839788 00000000000002f0 r nve4_su_format_aux_map
0000000000839a78 0000000000000178 r nve4_su_format_map
0000000000839bf0 0000000000000088 r cpbs.0
0000000000839c78 0000000000000004 r deleted_key_value
0000000000839c80 00000000000003e0 r hash_sizes
000000000083a060 0000000000000017 r __func__.4
000000000083a368 0000000000000010 r debug_severity_enums
000000000083a378 0000000000000018 r debug_source_enums
000000000083a390 0000000000000024 r debug_type_enums
000000000083a840 0000000000000028 r CSWTCH.3422
000000000083a868 0000000000000028 r CSWTCH.3875
000000000083a890 0000000000000017 r __func__.0
000000000083a8a8 0000000000000018 r __func__.1
000000000083a8c0 0000000000000015 r __func__.10
000000000083a8d8 0000000000000015 r __func__.11
000000000083a8f0 0000000000000016 r __func__.12
000000000083a908 0000000000000016 r __func__.13
000000000083a920 0000000000000016 r __func__.14
000000000083a938 0000000000000016 r __func__.15
000000000083a950 0000000000000016 r __func__.16
000000000083a968 0000000000000016 r __func__.17
000000000083a980 0000000000000016 r __func__.18
000000000083a998 0000000000000017 r __func__.19
000000000083a9b0 0000000000000017 r __func__.2
000000000083a9c8 0000000000000017 r __func__.20
000000000083a9e0 0000000000000017 r __func__.21
000000000083a9f8 0000000000000018 r __func__.3
000000000083aa10 0000000000000017 r __func__.4
000000000083aa28 0000000000000018 r __func__.5
000000000083aa40 0000000000000016 r __func__.52
000000000083aa58 0000000000000017 r __func__.53
000000000083aa70 0000000000000016 r __func__.54
000000000083aa88 0000000000000017 r __func__.55
000000000083aaa0 0000000000000016 r __func__.56
000000000083aab8 0000000000000017 r __func__.57
000000000083aad0 0000000000000016 r __func__.58
000000000083aae8 0000000000000017 r __func__.59
000000000083ab00 0000000000000017 r __func__.6
000000000083ab18 0000000000000015 r __func__.60
000000000083ab30 0000000000000015 r __func__.61
000000000083ab48 0000000000000015 r __func__.62
000000000083ab60 0000000000000015 r __func__.63
000000000083ab78 0000000000000016 r __func__.64
000000000083ab90 0000000000000016 r __func__.65
000000000083aba8 0000000000000016 r __func__.66
000000000083abc0 0000000000000016 r __func__.67
000000000083abd8 000000000000001b r __func__.68
000000000083abf8 000000000000001c r __func__.69
000000000083ac18 0000000000000018 r __func__.7
000000000083ac30 0000000000000015 r __func__.8
000000000083ac48 0000000000000015 r __func__.9
000000000083ac60 0000000000000029 r CSWTCH.23
000000000083b3e0 000000000000001f r __func__.0
000000000083b5c8 0000000000000020 r CSWTCH.175
000000000083b5e8 0000000000000018 r CSWTCH.179
000000000083b600 0000000000000018 r CSWTCH.180
000000000083b600 0000000000000018 r CSWTCH.181
000000000083b618 0000000000000030 r CSWTCH.182
000000000083b648 000000000000001e r __func__.0
000000000083b668 00000000000000a9 r mappings
000000000083b718 0000000000000013 r __func__.0
000000000083b730 000000000000001b r __func__.0
000000000083b750 0000000000002598 r MESA_remap_table_functions
000000000083dce8 000000000000f43d r _mesa_function_pool
000000000084d150 0000000000000114 r CSWTCH.18
000000000084d268 000000000000002c r CSWTCH.20
000000000084d360 0000000000000030 r targets.0
000000000084d890 00000000000000c0 r anchor_indices
000000000084d950 0000000000000a68 r bptc_float_modes
000000000084e3b8 0000000000000100 r bptc_unorm_modes
000000000084e4b8 0000000000000100 r partition_table1
000000000084e5b8 0000000000000100 r partition_table2
000000000084e6b8 0000000000000004 r weights2.0
000000000084e6c0 0000000000000008 r weights3.1
000000000084e6c8 0000000000000010 r weights4.2
000000000084e6d8 0000000000000080 r etc1_modifier_tables
000000000084e758 0000000000000020 r etc2_distance_table
000000000084e778 0000000000000200 r etc2_modifier_tables
000000000084e978 0000000000000080 r etc2_modifier_tables_non_opaque
000000000084e9f8 0000000000000020 r lookup.0
000000000084e9f8 0000000000000020 r lookup.1
000000000084ea18 0000000000000020 r _rgb_scale_5
000000000084ea38 0000000000000040 r _rgb_scale_6
000000000084eab0 0000000000000014 r CSWTCH.326
000000000084eac8 0000000000000014 r CSWTCH.327
000000000084eae0 0000000000000028 r targets.2
000000000084eb08 0000000000000010 r zeroData.0
000000000084eb18 0000000000000030 r CSWTCH.135
000000000084eb48 0000000000000030 r CSWTCH.136
000000000084eb78 0000000000000030 r CSWTCH.137
000000000084eba8 0000000000000030 r CSWTCH.138
000000000084ebd8 0000000000000028 r default_combine_state
000000000084ec00 0000000000000030 r targets.0
000000000084ec30 00000000000001f8 r compatible_internal_formats
000000000084ee28 00000000000000a0 r gles_astc_3d_compatible_internal_formats
000000000084eec8 00000000000000e0 r gles_astc_compatible_internal_formats
000000000084efa8 0000000000000050 r gles_etc2_compatible_internal_formats
000000000084eff8 0000000000000040 r s3tc_compatible_internal_formats
000000000084f038 0000000000000050 r CSWTCH.125
000000000084f0a8 000000000000000e r CSWTCH.253
000000000084f0b8 000000000000000e r CSWTCH.254
000000000084f0c8 000000000000000e r CSWTCH.255
000000000084f0d8 0000000000000038 r CSWTCH.256
000000000084f110 0000000000000038 r CSWTCH.257
000000000084f148 0000000000000038 r CSWTCH.258
000000000084f180 0000000000000038 r CSWTCH.259
000000000084f1b8 0000000000000038 r CSWTCH.260
000000000084f1f0 0000000000000038 r CSWTCH.261
000000000084f228 0000000000000038 r CSWTCH.262
000000000084f260 0000000000000038 r CSWTCH.263
000000000084f298 00000000000001a0 r vertex_formats
000000000084f438 0000000000000040 r Identity
000000000084f478 0000000000000015 r __func__.0
000000000084f490 000000000000001b r __func__.1
000000000084f4b0 0000000000000019 r __func__.10
000000000084f4d0 0000000000000019 r __func__.11
000000000084f4f0 0000000000000019 r __func__.12
000000000084f510 000000000000001a r __func__.13
000000000084f530 000000000000001a r __func__.14
000000000084f550 000000000000001a r __func__.15
000000000084f570 000000000000001a r __func__.16
000000000084f590 000000000000001a r __func__.17
000000000084f5b0 000000000000001a r __func__.18
000000000084f5d0 000000000000001a r __func__.19
000000000084f5f0 000000000000001c r __func__.2
000000000084f610 000000000000001b r __func__.20
000000000084f630 000000000000001b r __func__.21
000000000084f650 000000000000001b r __func__.22
000000000084f670 000000000000001b r __func__.3
000000000084f690 000000000000001c r __func__.4
000000000084f6b0 000000000000001b r __func__.5
000000000084f6d0 000000000000001a r __func__.53
000000000084f6f0 000000000000001b r __func__.54
000000000084f710 000000000000001a r __func__.55
000000000084f730 000000000000001b r __func__.56
000000000084f750 000000000000001a r __func__.57
000000000084f770 000000000000001b r __func__.58
000000000084f790 000000000000001a r __func__.59
000000000084f7b0 000000000000001c r __func__.6
000000000084f7d0 000000000000001b r __func__.60
000000000084f7f0 0000000000000019 r __func__.61
000000000084f810 0000000000000019 r __func__.62
000000000084f830 0000000000000019 r __func__.63
000000000084f850 0000000000000019 r __func__.64
000000000084f870 000000000000001a r __func__.65
000000000084f890 000000000000001a r __func__.66
000000000084f8b0 000000000000001a r __func__.67
000000000084f8d0 000000000000001a r __func__.68
000000000084f8f0 000000000000001f r __func__.69
000000000084f910 000000000000001b r __func__.7
000000000084f930 0000000000000020 r __func__.74
000000000084f950 000000000000001c r __func__.8
000000000084f970 0000000000000019 r __func__.9
000000000084f990 0000000000000020 r default_double.71
000000000084f9b0 0000000000000010 r default_float.73
000000000084f9c0 0000000000000010 r default_int.72
000000000084f9d0 0000000000000020 r default_uint64.70
000000000084f9f0 0000000000000040 R _vbo_attribute_alias_map
000000000084fa30 000000000000001d r __func__.0
000000000084fa50 000000000000001e r __func__.1
000000000084fa70 000000000000001b r __func__.10
000000000084fa90 000000000000001b r __func__.11
000000000084fab0 000000000000001c r __func__.12
000000000084fad0 000000000000001c r __func__.13
000000000084faf0 000000000000001c r __func__.14
000000000084fb10 000000000000001c r __func__.15
000000000084fb30 000000000000001c r __func__.16
000000000084fb50 000000000000001c r __func__.17
000000000084fb70 000000000000001c r __func__.18
000000000084fb90 000000000000001d r __func__.19
000000000084fbb0 000000000000001d r __func__.2
000000000084fbd0 000000000000001d r __func__.20
000000000084fbf0 000000000000001d r __func__.21
000000000084fc10 000000000000001e r __func__.3
000000000084fc30 000000000000001d r __func__.4
000000000084fc50 000000000000001e r __func__.5
000000000084fc70 000000000000001c r __func__.52
000000000084fc90 000000000000001d r __func__.53
000000000084fcb0 000000000000001c r __func__.54
000000000084fcd0 000000000000001d r __func__.55
000000000084fcf0 000000000000001c r __func__.56
000000000084fd10 000000000000001d r __func__.57
000000000084fd30 000000000000001c r __func__.58
000000000084fd50 000000000000001d r __func__.59
000000000084fd70 000000000000001d r __func__.6
000000000084fd90 000000000000001b r __func__.60
000000000084fdb0 000000000000001b r __func__.61
000000000084fdd0 000000000000001b r __func__.62
000000000084fdf0 000000000000001b r __func__.63
000000000084fe10 000000000000001c r __func__.64
000000000084fe30 000000000000001c r __func__.65
000000000084fe50 000000000000001c r __func__.66
000000000084fe70 000000000000001c r __func__.67
000000000084fe90 0000000000000021 r __func__.68
000000000084feb8 0000000000000022 r __func__.69
000000000084fee0 000000000000001e r __func__.7
000000000084ff00 000000000000001b r __func__.8
000000000084ff20 000000000000001b r __func__.9
000000000084ff40 0000000000000018 r __func__.0
000000000084ff58 0000000000000019 r __func__.1
000000000084ff78 0000000000000016 r __func__.10
000000000084ff90 0000000000000016 r __func__.11
000000000084ffa8 0000000000000017 r __func__.12
000000000084ffc0 0000000000000017 r __func__.13
000000000084ffd8 0000000000000017 r __func__.14
000000000084fff0 0000000000000017 r __func__.15
0000000000850008 0000000000000017 r __func__.16
0000000000850020 0000000000000017 r __func__.17
0000000000850038 0000000000000017 r __func__.18
0000000000850050 0000000000000018 r __func__.19
0000000000850068 0000000000000018 r __func__.2
0000000000850080 0000000000000018 r __func__.20
0000000000850098 0000000000000018 r __func__.21
00000000008500b0 0000000000000019 r __func__.3
00000000008500d0 0000000000000018 r __func__.4
00000000008500e8 0000000000000019 r __func__.5
0000000000850108 0000000000000017 r __func__.52
0000000000850120 0000000000000018 r __func__.53
0000000000850138 0000000000000017 r __func__.54
0000000000850150 0000000000000018 r __func__.55
0000000000850168 0000000000000017 r __func__.56
0000000000850180 0000000000000018 r __func__.57
0000000000850198 0000000000000017 r __func__.58
00000000008501b0 0000000000000018 r __func__.59
00000000008501c8 0000000000000018 r __func__.6
00000000008501e0 0000000000000016 r __func__.60
00000000008501f8 0000000000000016 r __func__.61
0000000000850210 0000000000000016 r __func__.62
0000000000850228 0000000000000016 r __func__.63
0000000000850240 0000000000000017 r __func__.64
0000000000850258 0000000000000017 r __func__.65
0000000000850270 0000000000000017 r __func__.66
0000000000850288 0000000000000017 r __func__.67
00000000008502a0 000000000000001c r __func__.68
00000000008502c0 0000000000000019 r __func__.7
00000000008502e0 000000000000001d r __func__.73
0000000000850300 0000000000000016 r __func__.8
0000000000850318 0000000000000016 r __func__.9
0000000000850330 0000000000000020 r default_double.70
0000000000850350 0000000000000010 r default_float.72
0000000000850360 0000000000000010 r default_int.71
0000000000850370 0000000000000020 r default_uint64.69
0000000000850a10 000000000001671d r enum_string_table
0000000000867130 0000000000007660 r enum_string_table_offsets
000000000086e890 0000000000000018 r CSWTCH.218
000000000086ebb8 00000000000002b2 r CSWTCH.47
000000000086f680 0000000000000010 r table_1010102_snorm
000000000086f690 0000000000000010 r table_1010102_uint
000000000086f6a0 0000000000000010 r table_1010102_unorm
000000000086f6b0 0000000000000020 r table_8888_unorm
000000000086f6d0 0000000000000010 r zeros.3
000000000086f6e0 000000000000001c r CSWTCH.3
000000000086f700 000000000000001c r CSWTCH.4
000000000086f720 000000000000001c r CSWTCH.5
000000000086f740 0000000000000018 r CSWTCH.43
000000000086f758 0000000000000320 r cap_mapping.10
000000000086fa78 0000000000000010 r color_formats.4
000000000086fa88 0000000000000014 r depth_formats.3
000000000086faa0 000000000000008c r depthstencil_mapping.7
000000000086fb30 00000000000004ec r rendertarget_mapping.9
0000000000870020 000000000000008c r rt_blendable.8
00000000008700b0 000000000000008c r tbo_rgb32.0
0000000000870140 00000000000009d8 r texture_mapping.6
0000000000870b18 00000000000001a4 r vertex_mapping.5
0000000000870cc0 0000000000005d00 r format_map
0000000000876bc0 0000000000000004 r zero.0
0000000000876bc8 000000000000001c r CSWTCH.47
0000000000876be8 000000000000000a r bias_state.1
0000000000876bf8 000000000000000a r depth_range_state
0000000000876c08 000000000000000a r scale_state.2
0000000000876c18 000000000000000a r texcoord_state.0
0000000000876c28 000000000000001c r CSWTCH.24
0000000000876c48 0000000000000034 r known_desktop_gl_versions
0000000000876c80 0000000000000034 r known_desktop_glsl_versions
0000000000876cb8 0000000000000028 r _mesa_glsl_process_extension(char const*, YYLTYPE*, char const*, YYLTYPE*, _mesa_glsl_parse_state*)::fmt
0000000000876ed0 0000000000000034 r CSWTCH.324
0000000000876f08 000000000000000e R ir_variable::tmp_name
0000000000876f18 000000000000001a r ir_swizzle::create(ir_rvalue*, char const*, unsigned int)::idx_map
0000000000876f38 000000000000001a r ir_swizzle::create(ir_rvalue*, char const*, unsigned int)::base_idx
0000000000876f58 0000000000000050 r CSWTCH.302
0000000000876fa8 0000000000000050 r CSWTCH.30
0000000000877020 0000000000000050 r CSWTCH.228
0000000000877070 000000000000000e r CSWTCH.231
0000000000877080 000000000000000c r CSWTCH.255
00000000008771e0 0000000000000050 r CSWTCH.67
0000000000877230 0000000000000010 r CSWTCH.61
0000000000877370 0000000000000018 r CSWTCH.162
0000000000877388 000000000000000d r CSWTCH.41
0000000000877608 000000000000018a r yytranslate
0000000000877798 0000000000000272 r yyr1
0000000000877a10 0000000000000139 r yyr2
0000000000877b50 00000000000003b6 r yypact
0000000000877f08 00000000000013a6 r yycheck
00000000008792b0 00000000000000de r yypgoto
0000000000879390 00000000000013a6 r yytable
000000000087a738 00000000000003b6 r yydefact
000000000087aaf0 00000000000000de r yydefgoto
000000000087abd0 0000000000000020 r _mesa_glsl_parse(_mesa_glsl_parse_state*)::yyloc_default
000000000087ae30 0000000000000100 r yy_ec
000000000087af30 0000000000000d28 r yy_chk
000000000087bc58 00000000000008ce r yy_def
000000000087c528 0000000000000d28 r yy_nxt
000000000087d250 00000000000008ce r yy_base
000000000087db20 000000000000004a r yy_meta
000000000087db70 00000000000008b0 r yy_accept
000000000087e4a0 000000000000017a r yy_accept
000000000087e620 00000000000001a0 r yy_base
000000000087e7c0 0000000000000498 r yy_chk
000000000087ec58 00000000000001a0 r yy_def
000000000087edf8 0000000000000100 r yy_ec
000000000087eef8 0000000000000031 r yy_meta
000000000087ef30 0000000000000498 r yy_nxt
000000000087f4d0 00000000000005b8 r yycheck
000000000087fa88 00000000000000b9 r yydefact
000000000087fb48 0000000000000028 r yydefgoto
000000000087fb70 0000000000000014 r yyloc_default.0
000000000087fb88 0000000000000172 r yypact
000000000087fd00 0000000000000028 r yypgoto
000000000087fd28 0000000000000075 r yyr1
000000000087fda0 0000000000000075 r yyr2
000000000087fe18 00000000000000ea r yyrline
000000000087ff08 00000000000000b9 r yystos
000000000087ffc8 00000000000002dc r yytable
00000000008802a8 000000000000012b r yytranslate
00000000008803d8 0000000000000050 r CSWTCH.378
0000000000880428 000000000000000e r CSWTCH.381
0000000000880438 0000000000000020 r prime_deltas
00000000008804a8 00000000000003f0 r opcode_info
0000000000880898 0000000000000038 r CSWTCH.35
00000000008808d0 0000000000000028 r CSWTCH.39
0000000000880a30 0000000000000048 r CSWTCH.21
0000000000880a78 0000000000000024 r CSWTCH.4
0000000000880b20 0000000000000048 r shader_templ.3
0000000000880b68 000000000000023b r text.4
0000000000880da8 00000000000000b4 r text.5
0000000000880e60 00000000000001e0 r vbuf_format_fallbacks
0000000000881040 000000000000000f r slab_order.0
0000000000881050 0000000000000060 r CSWTCH.24
00000000008810b0 0000000000000030 r CSWTCH.45
00000000008810e0 0000000000000060 r nouveau_decoder_msvld
0000000000881140 000000000000001c r CSWTCH.104
0000000000881160 0000000000000002 r ms1.3
0000000000881168 0000000000000004 r ms2.2
0000000000881170 0000000000000008 r ms4.1
0000000000881178 0000000000000010 r ms8.0
0000000000881188 00000000000011a0 R nvc0_format_table
0000000000882328 0000000000000bc0 R nvc0_vertex_format
0000000000882ee8 0000000000000010 r CSWTCH.33
0000000000882ef8 000000000000000c r CSWTCH.34
0000000000882f28 0000000000000028 r CSWTCH.44
0000000000882f50 0000000000000028 r CSWTCH.45
0000000000882f78 0000000000000028 r sm20_achieved_occupancy
0000000000882fa0 0000000000000028 r sm20_branch_efficiency
0000000000882fc8 0000000000000028 r sm20_inst_per_wrap
0000000000882ff0 0000000000000028 r sm20_inst_replay_overhead
0000000000883018 0000000000000028 r sm20_ipc
0000000000883040 0000000000000028 r sm20_issue_slot_utilization
0000000000883068 0000000000000028 r sm20_issued_ipc
0000000000883090 0000000000000028 r sm21_inst_issued
00000000008830b8 0000000000000028 r sm21_inst_replay_overhead
00000000008830e0 0000000000000028 r sm21_issue_slot_utilization
0000000000883108 0000000000000028 r sm21_issue_slots
0000000000883130 0000000000000028 r sm21_issued_ipc
0000000000883158 0000000000000028 r sm30_inst_issued
0000000000883180 0000000000000028 r sm30_inst_replay_overhead
00000000008831a8 0000000000000028 r sm30_issue_slot_utilization
00000000008831d0 0000000000000028 r sm30_issue_slots
00000000008831f8 0000000000000028 r sm30_issued_ipc
0000000000883220 0000000000000028 r sm30_shared_replay_overhead
0000000000883248 0000000000000028 r sm30_warp_execution_efficiency
0000000000883270 0000000000000028 r sm35_warp_nonpred_execution_efficiency
0000000000883298 0000000000000160 r gm107_read_hw_sm_counters_code
00000000008833f8 00000000000000b8 r nvc0_read_hw_sm_counters_code
00000000008834b0 0000000000000130 r nve4_read_hw_sm_counters_code
00000000008835e0 0000000000000130 r nvf0_read_hw_sm_counters_code
0000000000883710 0000000000000068 r sm20_active_cycles
0000000000883778 0000000000000068 r sm20_active_warps
00000000008837e0 0000000000000068 r sm20_atom_count
0000000000883848 0000000000000068 r sm20_branch
00000000008838b0 0000000000000068 r sm20_divergent_branch
0000000000883918 0000000000000068 r sm20_gld_request
0000000000883980 0000000000000068 r sm20_gred_count
00000000008839e8 0000000000000068 r sm20_gst_request
0000000000883a50 0000000000000068 r sm20_inst_executed
0000000000883ab8 0000000000000068 r sm20_inst_issued
0000000000883b20 0000000000000068 r sm20_local_ld
0000000000883b88 0000000000000068 r sm20_local_st
0000000000883bf0 0000000000000068 r sm20_prof_trigger_0
0000000000883c58 0000000000000068 r sm20_prof_trigger_1
0000000000883cc0 0000000000000068 r sm20_prof_trigger_2
0000000000883d28 0000000000000068 r sm20_prof_trigger_3
0000000000883d90 0000000000000068 r sm20_prof_trigger_4
0000000000883df8 0000000000000068 r sm20_prof_trigger_5
0000000000883e60 0000000000000068 r sm20_prof_trigger_6
0000000000883ec8 0000000000000068 r sm20_prof_trigger_7
0000000000883f30 0000000000000068 r sm20_shared_ld
0000000000883f98 0000000000000068 r sm20_shared_st
0000000000884000 0000000000000068 r sm20_th_inst_executed_0
0000000000884068 0000000000000068 r sm20_th_inst_executed_1
00000000008840d0 0000000000000068 r sm20_threads_launched
0000000000884138 0000000000000068 r sm20_warps_launched
00000000008841a0 0000000000000068 r sm21_inst_executed
0000000000884208 0000000000000068 r sm21_inst_issued1_0
0000000000884270 0000000000000068 r sm21_inst_issued1_1
00000000008842d8 0000000000000068 r sm21_inst_issued2_0
0000000000884340 0000000000000068 r sm21_inst_issued2_1
00000000008843a8 0000000000000068 r sm21_th_inst_executed_0
0000000000884410 0000000000000068 r sm21_th_inst_executed_1
0000000000884478 0000000000000068 r sm21_th_inst_executed_2
00000000008844e0 0000000000000068 r sm21_th_inst_executed_3
0000000000884548 0000000000000068 r sm30_active_cycles
00000000008845b0 0000000000000068 r sm30_active_warps
0000000000884618 0000000000000068 r sm30_atom_cas_count
0000000000884680 0000000000000068 r sm30_atom_count
00000000008846e8 0000000000000068 r sm30_branch
0000000000884750 0000000000000068 r sm30_divergent_branch
00000000008847b8 0000000000000068 r sm30_gld_mem_div_replay
0000000000884820 0000000000000068 r sm30_gld_request
0000000000884888 0000000000000068 r sm30_gred_count
00000000008848f0 0000000000000068 r sm30_gst_mem_div_replay
0000000000884958 0000000000000068 r sm30_gst_request
00000000008849c0 0000000000000068 r sm30_gst_transactions
0000000000884a28 0000000000000068 r sm30_inst_executed
0000000000884a90 0000000000000068 r sm30_inst_issued1
0000000000884af8 0000000000000068 r sm30_inst_issued2
0000000000884b60 0000000000000068 r sm30_l1_gld_hit
0000000000884bc8 0000000000000068 r sm30_l1_gld_miss
0000000000884c30 0000000000000068 r sm30_l1_gld_transactions
0000000000884c98 0000000000000068 r sm30_l1_gst_transactions
0000000000884d00 0000000000000068 r sm30_l1_local_ld_hit
0000000000884d68 0000000000000068 r sm30_l1_local_ld_miss
0000000000884dd0 0000000000000068 r sm30_l1_local_st_hit
0000000000884e38 0000000000000068 r sm30_l1_local_st_miss
0000000000884ea0 0000000000000068 r sm30_l1_shared_ld_transactions
0000000000884f08 0000000000000068 r sm30_l1_shared_st_transactions
0000000000884f70 0000000000000068 r sm30_local_ld
0000000000884fd8 0000000000000068 r sm30_local_ld_transactions
0000000000885040 0000000000000068 r sm30_local_st
00000000008850a8 0000000000000068 r sm30_local_st_transactions
0000000000885110 0000000000000068 r sm30_prof_trigger_0
0000000000885178 0000000000000068 r sm30_prof_trigger_1
00000000008851e0 0000000000000068 r sm30_prof_trigger_2
0000000000885248 0000000000000068 r sm30_prof_trigger_3
00000000008852b0 0000000000000068 r sm30_prof_trigger_4
0000000000885318 0000000000000068 r sm30_prof_trigger_5
0000000000885380 0000000000000068 r sm30_prof_trigger_6
00000000008853e8 0000000000000068 r sm30_prof_trigger_7
0000000000885450 0000000000000068 r sm30_shared_ld
00000000008854b8 0000000000000068 r sm30_shared_ld_replay
0000000000885520 0000000000000068 r sm30_shared_st
0000000000885588 0000000000000068 r sm30_shared_st_replay
00000000008855f0 0000000000000068 r sm30_sm_cta_launched
0000000000885658 0000000000000068 r sm30_threads_launched
00000000008856c0 0000000000000068 r sm30_uncached_gld_transactions
0000000000885728 0000000000000068 r sm30_warps_launched
0000000000885790 0000000000000068 r sm35_atom_cas_count
00000000008857f8 0000000000000068 r sm35_atom_count
0000000000885860 0000000000000068 r sm35_gred_count
00000000008858c8 0000000000000068 r sm35_not_pred_off_inst_executed
0000000000885930 0000000000000068 r sm35_shared_ld_replay
0000000000885998 0000000000000068 r sm35_shared_st_replay
0000000000885a00 0000000000000068 r sm35_th_inst_executed
0000000000885a68 0000000000000068 r sm50_active_ctas
0000000000885ad0 0000000000000068 r sm50_active_cycles
0000000000885b38 0000000000000068 r sm50_active_warps
0000000000885ba0 0000000000000068 r sm50_atom_count
0000000000885c08 0000000000000068 r sm50_branch
0000000000885c70 0000000000000068 r sm50_divergent_branch
0000000000885cd8 0000000000000068 r sm50_global_atom_cas
0000000000885d40 0000000000000068 r sm50_global_ld
0000000000885da8 0000000000000068 r sm50_global_st
0000000000885e10 0000000000000068 r sm50_gred_count
0000000000885e78 0000000000000068 r sm50_inst_executed
0000000000885ee0 0000000000000068 r sm50_inst_issued0
0000000000885f48 0000000000000068 r sm50_inst_issued1
0000000000885fb0 0000000000000068 r sm50_inst_issued2
0000000000886018 0000000000000068 r sm50_local_ld
0000000000886080 0000000000000068 r sm50_local_st
00000000008860e8 0000000000000068 r sm50_not_pred_off_inst_executed
0000000000886150 0000000000000068 r sm50_prof_trigger_0
00000000008861b8 0000000000000068 r sm50_prof_trigger_1
0000000000886220 0000000000000068 r sm50_prof_trigger_2
0000000000886288 0000000000000068 r sm50_prof_trigger_3
00000000008862f0 0000000000000068 r sm50_prof_trigger_4
0000000000886358 0000000000000068 r sm50_prof_trigger_5
00000000008863c0 0000000000000068 r sm50_prof_trigger_6
0000000000886428 0000000000000068 r sm50_prof_trigger_7
0000000000886490 0000000000000068 r sm50_shared_atom
00000000008864f8 0000000000000068 r sm50_shared_atom_cas
0000000000886560 0000000000000068 r sm50_shared_ld
00000000008865c8 0000000000000068 r sm50_shared_ld_bank_conflict
0000000000886630 0000000000000068 r sm50_shared_ld_transactions
0000000000886698 0000000000000068 r sm50_shared_st
0000000000886700 0000000000000068 r sm50_shared_st_bank_conflict
0000000000886768 0000000000000068 r sm50_shared_st_transactions
00000000008867d0 0000000000000068 r sm50_sm_cta_launched
0000000000886838 0000000000000068 r sm50_th_inst_executed
00000000008868a0 0000000000000068 r sm50_warps_launched
0000000000886908 0000000000000068 r sm52_atom_count
0000000000886970 0000000000000068 r sm52_global_atom_cas
00000000008869d8 0000000000000068 r sm52_global_ld
0000000000886a40 0000000000000068 r sm52_global_st
0000000000886aa8 0000000000000068 r sm52_gred_count
0000000000886b10 0000000000000068 r sm52_inst_executed
0000000000886b78 0000000000000068 r sm52_inst_issued0
0000000000886be0 0000000000000068 r sm52_inst_issued1
0000000000886c48 0000000000000068 r sm52_inst_issued2
0000000000886cb0 0000000000000068 r sm52_local_ld
0000000000886d18 0000000000000068 r sm52_local_st
0000000000886d80 0000000000000068 r sm52_shared_atom
0000000000886de8 0000000000000068 r sm52_shared_atom_cas
0000000000886e50 0000000000000068 r sm52_shared_ld
0000000000886eb8 0000000000000068 r sm52_shared_st
0000000000886f20 0000000000000068 r sm52_warps_launched
0000000000886f88 0000000000000038 r supported_modifiers.0
0000000000886fc0 0000000000000014 r CSWTCH.55
0000000000886fd8 0000000000000010 r CSWTCH.57
0000000000886fe8 0000000000000040 r CSWTCH.59
0000000000887028 0000000000000020 r CSWTCH.63
0000000000887048 0000000000000068 r CSWTCH.66
00000000008870b0 0000000000000010 r lut.0
00000000008870c0 0000000000000060 r CSWTCH.8
0000000000887120 0000000000000060 r CSWTCH.9
0000000000887180 0000000000000060 r CSWTCH.11
00000000008871e0 0000000000000011 r hex_digits.0
00000000008871fc 0000000000000004 r deleted_key_value
0000000000887200 00000000000003e0 r hash_sizes
00000000008875e0 0000000000000100 R util_format_linear_to_srgb_8unorm_table
00000000008876e0 00000000000001a0 R util_format_linear_to_srgb_helper_table
0000000000887880 0000000000000400 R util_format_srgb_8unorm_to_linear_float_table
0000000000887c80 0000000000000100 R util_format_srgb_to_linear_8unorm_table
0000000000887d80 00000000000000c0 r anchor_indices
0000000000887e40 0000000000000a68 r bptc_float_modes
00000000008888a8 0000000000000100 r bptc_unorm_modes
00000000008889a8 0000000000000100 r partition_table1
0000000000888aa8 0000000000000100 r partition_table2
0000000000888ba8 0000000000000004 r weights2.0
0000000000888bb0 0000000000000008 r weights3.1
0000000000888bb8 0000000000000010 r weights4.2
0000000000888bc8 0000000000000080 r etc1_modifier_tables
0000000000888c48 0000000000000020 r lookup.0
0000000000888c68 0000000000000029 r __func__.0
0000000000888c98 000000000000002b r __func__.1
0000000000888cc8 000000000000002a r __func__.2
0000000000888cf8 0000000000000029 r __func__.3
0000000000888d28 000000000000002b r __func__.4
0000000000888d58 000000000000002a r __func__.5
0000000000888d88 0000000000000029 r __func__.0
0000000000888db8 000000000000002b r __func__.1
0000000000888de8 000000000000002a r __func__.2
0000000000888e18 0000000000000029 r __func__.3
0000000000888e48 000000000000002b r __func__.4
0000000000888e78 000000000000002a r __func__.5
0000000000888ea8 0000000000000050 r CSWTCH.136
0000000000888f70 0000000000000009 r swz.5
0000000000888f80 0000000000000014 r CSWTCH.9
0000000000888f98 000000000000000a r fogColorState.0
0000000000888fa8 000000000000000a r fogPStateOpt.1
0000000000888fb8 0000000000000028 r mvpState.2
0000000000888fe0 0000000000000028 r mvpState.3
0000000000889140 0000000000000048 r CSWTCH.38
0000000000889188 000000000000001e r __func__.1
00000000008891a8 000000000000001e r __func__.2
0000000000889250 0000000000000060 R _mesa_vao_attribute_map
00000000008892b0 0000000000000074 r CSWTCH.71
0000000000889328 0000000000000010 r color_logicop_mapping
00000000008894c0 0000000000000004 r undef
0000000000889704 0000000000000004 R RGBA32_FLOAT
0000000000889708 0000000000000004 R RGBA32_INT
000000000088970c 0000000000000004 R RGBA32_UINT
0000000000889a90 0000000000000018 r error_value
0000000000889aa8 0000000000000008 r extra_AMD_depth_clamp_separate
0000000000889ab0 0000000000000008 r extra_AMD_framebuffer_multisample_advanced
0000000000889ab8 000000000000000c r extra_ARB_ES2_compatibility_api_es2
0000000000889ac8 000000000000000c r extra_ARB_ES3_compatibility_api_es3
0000000000889ad8 0000000000000008 r extra_ARB_blend_func_extended
0000000000889ae0 0000000000000008 r extra_ARB_clip_control
0000000000889ae8 0000000000000008 r extra_ARB_color_buffer_float
0000000000889af0 000000000000000c r extra_ARB_color_buffer_float_or_glcore
0000000000889b00 000000000000000c r extra_ARB_compute_shader_es31
0000000000889b10 0000000000000008 r extra_ARB_compute_variable_group_size
0000000000889b18 0000000000000008 r extra_ARB_cull_distance
0000000000889b20 0000000000000008 r extra_ARB_depth_clamp
0000000000889b28 0000000000000008 r extra_ARB_draw_indirect
0000000000889b30 0000000000000008 r extra_ARB_explicit_uniform_location
0000000000889b38 0000000000000008 r extra_ARB_fragment_program
0000000000889b40 0000000000000008 r extra_ARB_fragment_shader
0000000000889b48 0000000000000008 r extra_ARB_framebuffer_no_attachments
0000000000889b50 0000000000000008 r extra_ARB_framebuffer_no_attachments_and_geometry_shader
0000000000889b58 000000000000000c r extra_ARB_framebuffer_object_EXT_framebuffer_multisample
0000000000889b68 000000000000000c r extra_ARB_gpu_shader5_or_OES_sample_variables
0000000000889b78 000000000000000c r extra_ARB_gpu_shader5_or_oes_geometry_shader
0000000000889b88 0000000000000008 r extra_ARB_indirect_parameters
0000000000889b90 0000000000000008 r extra_ARB_polygon_offset_clamp
0000000000889b98 0000000000000008 r extra_ARB_query_buffer_object
0000000000889ba0 0000000000000008 r extra_ARB_sample_locations
0000000000889ba8 0000000000000008 r extra_ARB_seamless_cube_map
0000000000889bb0 0000000000000008 r extra_ARB_shader_atomic_counters
0000000000889bb8 0000000000000008 r extra_ARB_shader_atomic_counters_and_geometry_shader
0000000000889bc0 0000000000000008 r extra_ARB_shader_atomic_counters_and_tessellation
0000000000889bc8 0000000000000008 r extra_ARB_shader_image_load_store
0000000000889bd0 0000000000000008 r extra_ARB_shader_image_load_store_and_geometry_shader
0000000000889bd8 0000000000000008 r extra_ARB_shader_image_load_store_and_tessellation
0000000000889be0 0000000000000010 r extra_ARB_shader_image_load_store_shader_storage_buffer_object_es31
0000000000889bf0 0000000000000008 r extra_ARB_shader_storage_buffer_object
0000000000889bf8 0000000000000008 r extra_ARB_shader_storage_buffer_object_and_geometry_shader
0000000000889c00 000000000000000c r extra_ARB_shader_storage_buffer_object_es31
0000000000889c10 0000000000000008 r extra_ARB_sparse_buffer
0000000000889c18 0000000000000008 r extra_ARB_spirv_extensions
0000000000889c20 0000000000000008 r extra_ARB_sync
0000000000889c28 0000000000000008 r extra_ARB_tessellation_shader
0000000000889c30 0000000000000008 r extra_ARB_texture_buffer_range
0000000000889c38 0000000000000008 r extra_ARB_texture_cube_map
0000000000889c40 000000000000000c r extra_ARB_texture_cube_map_array_OES_texture_cube_map_array
0000000000889c50 0000000000000008 r extra_ARB_texture_gather
0000000000889c58 0000000000000008 r extra_ARB_texture_multisample
0000000000889c60 0000000000000008 r extra_ARB_timer_query
0000000000889c68 000000000000000c r extra_ARB_transform_feedback2_api_es3
0000000000889c78 0000000000000008 r extra_ARB_transform_feedback3
0000000000889c80 000000000000000c r extra_ARB_transform_feedback3_ARB_gpu_shader5
0000000000889c90 0000000000000008 r extra_ARB_uniform_buffer_object
0000000000889c98 0000000000000008 r extra_ARB_uniform_buffer_object_and_geometry_shader
0000000000889ca0 0000000000000008 r extra_ARB_vertex_program
0000000000889ca8 000000000000000c r extra_ARB_vertex_program_ARB_fragment_program
0000000000889cb8 000000000000000c r extra_ARB_vertex_program_api_es2
0000000000889cc8 0000000000000008 r extra_ARB_vertex_shader
0000000000889cd0 000000000000000c r extra_ARB_viewport_array_or_oes_geometry_shader
0000000000889ce0 000000000000000c r extra_ARB_viewport_array_or_oes_viewport_array
0000000000889cf0 0000000000000008 r extra_ATI_fragment_shader
0000000000889cf8 0000000000000008 r extra_ATI_meminfo
0000000000889d00 000000000000000c r extra_ES32
0000000000889d10 0000000000000008 r extra_EXT_depth_bounds_test
0000000000889d18 0000000000000010 r extra_EXT_disjoint_timer_query
0000000000889d28 0000000000000008 r extra_EXT_framebuffer_sRGB
0000000000889d30 000000000000000c r extra_EXT_framebuffer_sRGB_and_new_buffers
0000000000889d40 000000000000000c r extra_EXT_packed_float
0000000000889d50 0000000000000008 r extra_EXT_pixel_buffer_object
0000000000889d58 0000000000000008 r extra_EXT_provoking_vertex
0000000000889d60 0000000000000008 r extra_EXT_provoking_vertex_32
0000000000889d68 0000000000000010 r extra_EXT_shader_framebuffer_fetch
0000000000889d78 0000000000000008 r extra_EXT_stencil_two_side
0000000000889d80 0000000000000008 r extra_EXT_texture_array
0000000000889d88 000000000000000c r extra_EXT_texture_array_es3
0000000000889d98 0000000000000008 r extra_EXT_texture_filter_anisotropic
0000000000889da0 000000000000000c r extra_EXT_texture_integer_and_new_buffers
0000000000889db0 0000000000000008 r extra_EXT_transform_feedback
0000000000889db8 0000000000000008 r extra_EXT_window_rectangles
0000000000889dc0 0000000000000010 r extra_GLSL_130_es3_gpushader4
0000000000889dd0 0000000000000008 r extra_INTEL_conservative_rasterization
0000000000889dd8 0000000000000008 r extra_INTEL_performance_query
0000000000889de0 0000000000000008 r extra_KHR_blend_equation_advanced_coherent
0000000000889de8 0000000000000008 r extra_KHR_robustness
0000000000889df0 0000000000000010 r extra_KHR_robustness_or_GL
0000000000889e00 0000000000000008 r extra_NVX_gpu_memory_info
0000000000889e08 0000000000000008 r extra_NV_conservative_raster
0000000000889e10 0000000000000008 r extra_NV_conservative_raster_dilate
0000000000889e18 0000000000000008 r extra_NV_conservative_raster_pre_snap_triangles
0000000000889e20 0000000000000008 r extra_NV_fog_distance
0000000000889e28 0000000000000008 r extra_NV_point_sprite
0000000000889e30 000000000000000c r extra_NV_point_sprite_ARB_point_sprite
0000000000889e40 0000000000000008 r extra_NV_primitive_restart
0000000000889e48 000000000000000c r extra_NV_read_buffer_api_gl
0000000000889e58 0000000000000008 r extra_NV_texture_rectangle
0000000000889e60 0000000000000008 r extra_NV_viewport_swizzle
0000000000889e68 0000000000000008 r extra_OES_EGL_image_external
0000000000889e70 0000000000000008 r extra_OES_primitive_bounding_box
0000000000889e78 0000000000000010 r extra_core_ARB_color_buffer_float_and_new_buffers
0000000000889e88 0000000000000008 r extra_flush_current
0000000000889e90 000000000000000c r extra_flush_current_valid_texture_unit
0000000000889ea0 000000000000000c r extra_gl30_es3
0000000000889eb0 000000000000000c r extra_gl32_es3
0000000000889ec0 000000000000000c r extra_gl40_ARB_sample_shading
0000000000889ed0 0000000000000008 r extra_new_buffers
0000000000889ed8 0000000000000008 r extra_new_frag_clamp
0000000000889ee0 0000000000000008 r extra_texture_buffer_object
0000000000889ee8 0000000000000008 r extra_valid_clip_distance
0000000000889ef0 0000000000000008 r extra_valid_draw_buffer
0000000000889ef8 0000000000000008 r extra_valid_texture_unit
0000000000889f00 0000000000000008 r extra_version_30
0000000000889f08 0000000000000008 r extra_version_31
0000000000889f10 0000000000000008 r extra_version_32
0000000000889f18 000000000000000c r extra_version_32_OES_geometry_shader
0000000000889f28 0000000000000008 r extra_version_43
0000000000889f30 0000000000000800 r table_API_OPENGL
000000000088a730 0000000000000800 r table_API_OPENGLES
000000000088af30 0000000000000800 r table_API_OPENGLES2
000000000088b730 0000000000000800 r table_API_OPENGLES3
000000000088bf30 0000000000000800 r table_API_OPENGLES31
000000000088c730 0000000000000800 r table_API_OPENGLES32
000000000088cf30 0000000000000040 r transpose
000000000088cf70 0000000000000020 r stage_pairs.0
000000000088cf90 0000000000000044 r cem_ranges
000000000088cfd8 00000000000000c8 r formats
000000000088d0a0 0000000000000028 r CSWTCH.17
000000000088d0a0 0000000000000028 r CSWTCH.27
000000000088d748 0000000000000080 r CSWTCH.53
000000000088d7c8 000000000000000a r fog_color.0
000000000088d7d8 000000000000000a r fog_params_state.1
000000000088d7e8 000000000000001c r CSWTCH.10
000000000088d808 0000000000000080 r table.0
000000000088d888 0000000000000030 r CSWTCH.32
000000000088dab8 0000000000000010 r zeros.0
000000000088dac8 000000000000001c r CSWTCH.4
000000000088dae8 0000000000000007 r CSWTCH.5
000000000088daf0 0000000000000014 r CSWTCH.15
000000000088db08 000000000000001c r CSWTCH.6
000000000088dee8 000000000000001c r CSWTCH.14
000000000088e640 000000000000002c r CSWTCH.1206
000000000088e670 000000000000002c r CSWTCH.1207
000000000088e6a0 000000000000002c r CSWTCH.1208
000000000088e6d0 000000000000002c r CSWTCH.1209
000000000088e700 000000000000002c r CSWTCH.1210
000000000088e730 000000000000002c r CSWTCH.1211
000000000088e760 000000000000002c r CSWTCH.1212
000000000088e790 000000000000002c r CSWTCH.1213
000000000088e7c0 000000000000002c r CSWTCH.1214
000000000088e7f0 000000000000002c r CSWTCH.1215
000000000088e820 000000000000002c r CSWTCH.1216
000000000088e850 000000000000002c r CSWTCH.1217
000000000088e880 000000000000002c r CSWTCH.1218
000000000088e8b0 000000000000002c r CSWTCH.1219
000000000088e8e0 000000000000002c r CSWTCH.1220
000000000088e910 000000000000002c r CSWTCH.1221
000000000088e940 000000000000002c r CSWTCH.1222
000000000088e970 000000000000002c r CSWTCH.1223
000000000088e9a0 000000000000002c r CSWTCH.1224
000000000088e9d0 000000000000002c r CSWTCH.1225
000000000088ea00 0000000000000050 r CSWTCH.470
000000000088ea50 0000000000000014 r CSWTCH.625
000000000088ea68 000000000000001c r CSWTCH.648
000000000088ea88 0000000000000010 r swizzle_for_size(int)::size_swizzles
000000000088ea98 000000000000000a r get_mesa_program_tgsi(gl_context*, gl_shader_program*, gl_linked_shader*)::wposTransformState
000000000088eaa8 000000000000000a r glsl_to_tgsi_visitor::visit_expression(ir_expression*, st_src_reg*)::transform_y_state
000000000088eab8 000000000000000a r glsl_to_tgsi_visitor::visit_expression(ir_expression*, st_src_reg*)::transform_y_state
000000000088eac8 000000000000000c r glsl_to_tgsi_visitor::emit_dp(ir_instruction*, st_dst_reg, st_src_reg, st_src_reg, unsigned int)::dot_opcodes
000000000088ead8 0000000000000030 r CSWTCH.223
000000000088eb08 000000000000000c r CSWTCH.251
000000000088eb18 0000000000000038 r CSWTCH.98
000000000088eb50 000000000000000a r wposTransformState.0
000000000088eb60 0000000000000040 r emit_inline_matrix_constructor(glsl_type const*, exec_list*, exec_list*, void*)::rhs_swiz
000000000088ec08 000000000000002c r CSWTCH.1085
000000000088ec38 000000000000002c r CSWTCH.1086
000000000088ec68 0000000000000050 r CSWTCH.922
000000000088ecb8 00000000000000d4 r ast_expression::do_hir(exec_list*, _mesa_glsl_parse_state*, bool)::operations
000000000088ed90 0000000000000018 r gl_ClipPlane_elements
000000000088eda8 0000000000000018 r gl_EyePlaneQ_elements
000000000088edc0 0000000000000018 r gl_EyePlaneR_elements
000000000088edd8 0000000000000018 r gl_EyePlaneS_elements
000000000088edf0 0000000000000018 r gl_EyePlaneT_elements
000000000088ee08 0000000000000018 r gl_NumSamples_elements
000000000088ee20 0000000000000018 r gl_NormalScale_elements
000000000088ee38 0000000000000048 r gl_NormalMatrix_elements
000000000088ee80 0000000000000018 r gl_ObjectPlaneQ_elements
000000000088ee98 0000000000000018 r gl_ObjectPlaneR_elements
000000000088eeb0 0000000000000018 r gl_ObjectPlaneS_elements
000000000088eec8 0000000000000018 r gl_ObjectPlaneT_elements
000000000088eee0 0000000000000060 r gl_TextureMatrix_elements
000000000088ef40 0000000000000060 r gl_ModelViewMatrix_elements
000000000088efa0 0000000000000018 r gl_TextureEnvColor_elements
000000000088efb8 0000000000000060 r gl_ProjectionMatrix_elements
000000000088f018 0000000000000060 r gl_TextureMatrixInverse_elements
000000000088f078 0000000000000018 r gl_CurrentAttribFragMESA_elements
000000000088f090 0000000000000018 r gl_CurrentAttribVertMESA_elements
000000000088f0a8 0000000000000018 r gl_FogParamsOptimizedMESA_elements
000000000088f0c0 0000000000000060 r gl_ModelViewMatrixInverse_elements
000000000088f120 0000000000000060 r gl_TextureMatrixTranspose_elements
000000000088f180 0000000000000060 r gl_ProjectionMatrixInverse_elements
000000000088f1e0 0000000000000060 r gl_ModelViewMatrixTranspose_elements
000000000088f240 0000000000000060 r gl_ModelViewProjectionMatrix_elements
000000000088f2a0 0000000000000060 r gl_ProjectionMatrixTranspose_elements
000000000088f300 0000000000000060 r gl_TextureMatrixInverseTranspose_elements
000000000088f360 0000000000000060 r gl_ModelViewMatrixInverseTranspose_elements
000000000088f3c0 0000000000000060 r gl_ModelViewProjectionMatrixInverse_elements
000000000088f420 0000000000000060 r gl_ProjectionMatrixInverseTranspose_elements
000000000088f480 0000000000000060 r gl_ModelViewProjectionMatrixTranspose_elements
000000000088f4e0 0000000000000060 r gl_ModelViewProjectionMatrixInverseTranspose_elements
000000000088f540 0000000000000050 r CSWTCH.31
000000000088f590 0000000000000050 r CSWTCH.26
000000000088f5e0 0000000000000038 r CSWTCH.160
000000000088f7c0 000000000000001c r CSWTCH.72
000000000088fa18 0000000000000018 r CSWTCH.981
000000000088fa30 0000000000000520 R nv50_ir::TexInstruction::formatTable
000000000088ff50 00000000000001b0 R nv50_ir::TexInstruction::Target::descTable
0000000000890480 0000000000000030 r CSWTCH.652
00000000008904b0 0000000000000029 r CSWTCH.654
00000000008904e0 0000000000000048 r CSWTCH.656
0000000000890528 00000000000000fc r CSWTCH.659
0000000000890628 0000000000000054 r CSWTCH.661
0000000000890680 00000000000000dc r CSWTCH.880
0000000000890900 0000000000000034 r CSWTCH.708
0000000000890938 0000000000000024 r CSWTCH.828
0000000000890960 0000000000000008 r nv50_ir::reverseCondCode(nv50_ir::CondCode)::ccRev
0000000000890968 0000000000000034 r CSWTCH.574
00000000008909a0 0000000000000034 r CSWTCH.45
00000000008909d8 00000000000001f8 R nv50_ir::Target::operationClass
0000000000890bd0 000000000000007e R nv50_ir::Target::operationSrcNr
0000000000890c78 0000000000000034 r CSWTCH.60
0000000000890cb0 0000000000000160 r nv50_ir::_initProps
0000000000890e10 0000000000000030 r nv50_ir::_initPropsNVE4
0000000000890e40 0000000000000038 r nv50_ir::_initPropsGM107
0000000000890e78 000000000000003c r nv50_ir::TargetNVC0::initOpInfo()::commutative
0000000000890eb8 000000000000006c r nv50_ir::TargetNVC0::initOpInfo()::noDest
0000000000890f28 0000000000000060 r CSWTCH.39
0000000000890f88 0000000000000400 r util_crc32_table
0000000000891388 0000000000000010 r fog_modes.0
00000000008915a8 00000000000002c4 r yycheck
0000000000891870 0000000000000384 r yydefact
0000000000891bf8 0000000000000110 r yydefgoto
0000000000891d08 0000000000000014 r yyloc_default.0
0000000000891d20 0000000000000384 r yypact
00000000008920a8 0000000000000110 r yypgoto
00000000008921b8 000000000000010c r yyr1
00000000008922c8 000000000000010c r yyr2
00000000008923d8 00000000000002c4 r yytable
00000000008926a0 000000000000016a r yytranslate
0000000000892810 000000000000001c r CSWTCH.4
0000000000892830 0000000000000038 r CSWTCH.5
0000000000892868 0000000000000060 r CSWTCH.2
00000000008928c8 0000000000000060 r CSWTCH.8
0000000000892928 0000000000000034 r CSWTCH.129
0000000000892960 0000000000000020 r nv50_ir::BuildUtil::mkClobber(nv50_ir::DataFile, unsigned int, int)::baseSize2
0000000000892a78 0000000000000034 r CSWTCH.357
0000000000892ab0 000000000000000e r CSWTCH.363
0000000000892ac0 0000000000000038 r CSWTCH.475
0000000000892af8 0000000000000038 r CSWTCH.477
0000000000892b30 000000000000001c r CSWTCH.488
0000000000892b50 000000000000001c r CSWTCH.489
0000000000892b70 0000000000000038 r CSWTCH.501
0000000000892ba8 0000000000000004 r CSWTCH.661
0000000000892bb0 0000000000000020 r CSWTCH.680
0000000000892bb0 0000000000000020 r CSWTCH.739
0000000000892bd0 000000000000000c r CSWTCH.694
0000000000892be0 000000000000000c r CSWTCH.696
0000000000892be0 000000000000000c r CSWTCH.698
0000000000892bf0 000000000000001c r CSWTCH.748
0000000000892c10 0000000000000030 r CSWTCH.751
0000000000892c40 0000000000000005 r CSWTCH.753
0000000000892c48 0000000000000008 r nv50_ir::reverseCondCode(nv50_ir::CondCode)::ccRev
0000000000892c50 0000000000000034 r CSWTCH.79
0000000000892d90 0000000000000034 r CSWTCH.451
0000000000892dc8 0000000000000014 r CSWTCH.459
0000000000892f10 0000000000000068 r CSWTCH.15
0000000000892f78 000000000000053a r yy_accept
00000000008934b8 0000000000000540 r yy_base
00000000008939f8 00000000000007f0 r yy_chk
00000000008941e8 0000000000000540 r yy_def
0000000000894728 0000000000000100 r yy_ec
0000000000894828 0000000000000044 r yy_meta
0000000000894870 00000000000007f0 r yy_nxt
0000000000895060 000000000000a555 r public_string_pool
000000000089f5b8 000000000000d7a0 r public_stubs
00000000008acd58 0000000000000027 V typeinfo name for __gnu_cxx::__concurrence_lock_error
00000000008acd80 0000000000000029 V typeinfo name for __gnu_cxx::__concurrence_unlock_error
00000000008acdb0 000000000000002c V typeinfo name for __gnu_cxx::__concurrence_broadcast_error
00000000008acde0 0000000000000027 V typeinfo name for __gnu_cxx::__concurrence_wait_error
00000000008ace08 0000000000000025 V typeinfo name for __cxxabiv1::__si_class_type_info
00000000008ace30 000000000000000d V typeinfo name for std::type_info
00000000008ace40 0000000000000012 V typeinfo name for std::locale::facet
00000000008ace58 0000000000000002 R std::locale::facet::_S_c_name
00000000008ace60 0000000000000035 r typeinfo name for std::__facet_shims::(anonymous namespace)::numpunct_shim<char>
00000000008ace98 0000000000000034 r typeinfo name for std::__facet_shims::(anonymous namespace)::collate_shim<char>
00000000008aced0 000000000000003b r typeinfo name for std::__facet_shims::(anonymous namespace)::moneypunct_shim<char, true>
00000000008acf10 000000000000003b r typeinfo name for std::__facet_shims::(anonymous namespace)::moneypunct_shim<char, false>
00000000008acf50 0000000000000036 r typeinfo name for std::__facet_shims::(anonymous namespace)::money_get_shim<char>
00000000008acf88 0000000000000036 r typeinfo name for std::__facet_shims::(anonymous namespace)::money_put_shim<char>
00000000008acfc0 0000000000000035 r typeinfo name for std::__facet_shims::(anonymous namespace)::messages_shim<char>
00000000008acff8 0000000000000035 r typeinfo name for std::__facet_shims::(anonymous namespace)::numpunct_shim<wchar_t>
00000000008ad030 0000000000000034 r typeinfo name for std::__facet_shims::(anonymous namespace)::collate_shim<wchar_t>
00000000008ad068 000000000000003b r typeinfo name for std::__facet_shims::(anonymous namespace)::moneypunct_shim<wchar_t, true>
00000000008ad0a8 000000000000003b r typeinfo name for std::__facet_shims::(anonymous namespace)::moneypunct_shim<wchar_t, false>
00000000008ad0e8 0000000000000036 r typeinfo name for std::__facet_shims::(anonymous namespace)::money_get_shim<wchar_t>
00000000008ad120 0000000000000036 r typeinfo name for std::__facet_shims::(anonymous namespace)::money_put_shim<wchar_t>
00000000008ad158 0000000000000035 r typeinfo name for std::__facet_shims::(anonymous namespace)::messages_shim<wchar_t>
00000000008ad190 0000000000000019 V typeinfo name for std::locale::facet::__shim
00000000008ad1b0 0000000000000035 r typeinfo name for std::__facet_shims::(anonymous namespace)::time_get_shim<char>
00000000008ad1e8 0000000000000035 r typeinfo name for std::__facet_shims::(anonymous namespace)::time_get_shim<wchar_t>
00000000008ad220 000000000000000f V typeinfo name for std::ctype_base
00000000008ad230 000000000000000c V typeinfo name for std::ctype<char>
00000000008ad240 000000000000000c V typeinfo name for std::ctype<wchar_t>
00000000008ad250 0000000000000035 r typeinfo name for std::__facet_shims::(anonymous namespace)::numpunct_shim<char>
00000000008ad288 0000000000000034 r typeinfo name for std::__facet_shims::(anonymous namespace)::collate_shim<char>
00000000008ad2c0 000000000000003b r typeinfo name for std::__facet_shims::(anonymous namespace)::moneypunct_shim<char, true>
00000000008ad300 000000000000003b r typeinfo name for std::__facet_shims::(anonymous namespace)::moneypunct_shim<char, false>
00000000008ad340 0000000000000036 r typeinfo name for std::__facet_shims::(anonymous namespace)::money_get_shim<char>
00000000008ad378 0000000000000036 r typeinfo name for std::__facet_shims::(anonymous namespace)::money_put_shim<char>
00000000008ad3b0 0000000000000035 r typeinfo name for std::__facet_shims::(anonymous namespace)::messages_shim<char>
00000000008ad3e8 0000000000000035 r typeinfo name for std::__facet_shims::(anonymous namespace)::numpunct_shim<wchar_t>
00000000008ad420 0000000000000034 r typeinfo name for std::__facet_shims::(anonymous namespace)::collate_shim<wchar_t>
00000000008ad458 000000000000003b r typeinfo name for std::__facet_shims::(anonymous namespace)::moneypunct_shim<wchar_t, true>
00000000008ad498 000000000000003b r typeinfo name for std::__facet_shims::(anonymous namespace)::moneypunct_shim<wchar_t, false>
00000000008ad4d8 0000000000000036 r typeinfo name for std::__facet_shims::(anonymous namespace)::money_get_shim<wchar_t>
00000000008ad510 0000000000000036 r typeinfo name for std::__facet_shims::(anonymous namespace)::money_put_shim<wchar_t>
00000000008ad548 0000000000000035 r typeinfo name for std::__facet_shims::(anonymous namespace)::messages_shim<wchar_t>
00000000008ad580 0000000000000035 r typeinfo name for std::__facet_shims::(anonymous namespace)::time_get_shim<char>
00000000008ad5b8 0000000000000035 r typeinfo name for std::__facet_shims::(anonymous namespace)::time_get_shim<wchar_t>
00000000008ad6a0 000000000000000d V typeinfo name for std::time_base
00000000008ad6b0 000000000000000f V typeinfo name for std::money_base
00000000008ad6c0 0000000000000012 V typeinfo name for std::messages_base
00000000008ad6d8 0000000000000018 V typeinfo name for std::__cxx11::collate<wchar_t>
00000000008ad6f0 0000000000000019 V typeinfo name for std::__cxx11::numpunct<wchar_t>
00000000008ad710 0000000000000020 V typeinfo name for std::__cxx11::moneypunct<wchar_t, true>
00000000008ad730 0000000000000020 V typeinfo name for std::__cxx11::moneypunct<wchar_t, false>
00000000008ad750 0000000000000019 V typeinfo name for std::__cxx11::messages<wchar_t>
00000000008ad770 0000000000000046 V typeinfo name for std::__cxx11::money_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >
00000000008ad7b8 0000000000000046 V typeinfo name for std::__cxx11::money_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >
00000000008ad800 0000000000000045 V typeinfo name for std::__cxx11::time_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >
00000000008ad848 0000000000000036 V typeinfo name for __gnu_cxx::stdio_sync_filebuf<char, std::char_traits<char> >
00000000008ad880 0000000000000036 V typeinfo name for __gnu_cxx::stdio_sync_filebuf<wchar_t, std::char_traits<wchar_t> >
00000000008ad8b8 000000000000000e r std::__detail::_Prime_rehash_policy::_M_next_bkt(unsigned long) const::__fast_bkt
00000000008ad8c8 0000000000000988 R std::__detail::__prime_list
00000000008ae250 0000000000000022 V typeinfo name for std::basic_ios<char, std::char_traits<char> >
00000000008ae278 0000000000000022 V typeinfo name for std::basic_ios<wchar_t, std::char_traits<wchar_t> >
00000000008ae2a0 000000000000000c V typeinfo name for std::ios_base
00000000008ae2b0 0000000000000003 V typeinfo name for std::istream
00000000008ae2b8 0000000000000027 V typeinfo name for std::basic_istream<wchar_t, std::char_traits<wchar_t> >
00000000008ae390 0000000000000011 V typeinfo name for std::codecvt_base
00000000008ae3a8 000000000000000e V typeinfo name for std::collate<char>
00000000008ae3b8 000000000000000f V typeinfo name for std::numpunct<char>
00000000008ae3c8 000000000000003a V typeinfo name for std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >
00000000008ae408 000000000000003a V typeinfo name for std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >
00000000008ae448 0000000000000019 V typeinfo name for std::__timepunct_cache<char>
00000000008ae468 0000000000000013 V typeinfo name for std::__timepunct<char>
00000000008ae480 0000000000000016 V typeinfo name for std::moneypunct<char, true>
00000000008ae498 0000000000000016 V typeinfo name for std::moneypunct<char, false>
00000000008ae4b0 000000000000000f V typeinfo name for std::messages<char>
00000000008ae4c0 000000000000002c V typeinfo name for std::__codecvt_abstract_base<char, char, _mbstate_t>
00000000008ae4f0 000000000000003c V typeinfo name for std::money_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >
00000000008ae530 000000000000003c V typeinfo name for std::money_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >
00000000008ae570 000000000000003b V typeinfo name for std::time_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >
00000000008ae5b0 000000000000003b V typeinfo name for std::time_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >
00000000008ae5f0 000000000000001e V typeinfo name for std::__moneypunct_cache<char, false>
00000000008ae610 000000000000001e V typeinfo name for std::__moneypunct_cache<char, true>
00000000008ae630 0000000000000018 V typeinfo name for std::__numpunct_cache<char>
00000000008ae648 0000000000000003 V typeinfo name for std::ostream
00000000008ae650 0000000000000027 V typeinfo name for std::basic_ostream<wchar_t, std::char_traits<wchar_t> >
00000000008ae678 0000000000000029 V typeinfo name for std::basic_streambuf<char, std::char_traits<char> >
00000000008ae6a8 0000000000000029 V typeinfo name for std::basic_streambuf<wchar_t, std::char_traits<wchar_t> >
00000000008ae6d8 0000000000000019 V typeinfo name for std::_V2::error_category
00000000008ae6f8 0000000000000011 V typeinfo name for std::system_error
00000000008ae7b8 000000000000000e V typeinfo name for std::collate<wchar_t>
00000000008ae7c8 000000000000001d V typeinfo name for std::__ctype_abstract_base<wchar_t>
00000000008ae7e8 000000000000000f V typeinfo name for std::numpunct<wchar_t>
00000000008ae7f8 000000000000003a V typeinfo name for std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >
00000000008ae838 000000000000003a V typeinfo name for std::num_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >
00000000008ae878 0000000000000019 V typeinfo name for std::__timepunct_cache<wchar_t>
00000000008ae898 0000000000000013 V typeinfo name for std::__timepunct<wchar_t>
00000000008ae8b0 0000000000000016 V typeinfo name for std::moneypunct<wchar_t, true>
00000000008ae8c8 0000000000000016 V typeinfo name for std::moneypunct<wchar_t, false>
00000000008ae8e0 000000000000000f V typeinfo name for std::messages<wchar_t>
00000000008ae8f0 000000000000002c V typeinfo name for std::__codecvt_abstract_base<wchar_t, char, _mbstate_t>
00000000008ae920 000000000000003c V typeinfo name for std::money_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >
00000000008ae960 000000000000003c V typeinfo name for std::money_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >
00000000008ae9a0 000000000000003b V typeinfo name for std::time_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >
00000000008ae9e0 000000000000003b V typeinfo name for std::time_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >
00000000008aea20 000000000000001e V typeinfo name for std::__moneypunct_cache<wchar_t, false>
00000000008aea40 000000000000001e V typeinfo name for std::__moneypunct_cache<wchar_t, true>
00000000008aea60 0000000000000018 V typeinfo name for std::__numpunct_cache<wchar_t>
00000000008aea78 000000000000000d V typeinfo name for std::bad_alloc
00000000008aea88 0000000000000019 V typeinfo name for std::bad_array_new_length
00000000008aeaa8 000000000000000c V typeinfo name for std::bad_cast
00000000008aeab8 0000000000000022 V typeinfo name for __cxxabiv1::__class_type_info
00000000008aeae0 000000000000000d V typeinfo name for std::exception
00000000008aeaf0 0000000000000012 V typeinfo name for std::bad_exception
00000000008aeb08 0000000000000020 V typeinfo name for __cxxabiv1::__forced_unwind
00000000008aeb28 0000000000000024 V typeinfo name for __cxxabiv1::__foreign_exception
00000000008aeb50 0000000000000001 R std::nothrow
00000000008aeb58 0000000000000026 V typeinfo name for __cxxabiv1::__vmi_class_type_info
00000000008aeb80 000000000000001b V typeinfo name for std::codecvt<char, char, _mbstate_t>
00000000008aeba0 000000000000001b V typeinfo name for std::codecvt<wchar_t, char, _mbstate_t>
00000000008aebc0 0000000000000034 r std::(anonymous namespace)::mon_yday
00000000008aebf8 0000000000000004 R std::money_base::_S_default_pattern
00000000008af308 0000000000000010 V typeinfo name for std::logic_error
00000000008af318 0000000000000011 V typeinfo name for std::length_error
00000000008af330 0000000000000011 V typeinfo name for std::out_of_range
00000000008af348 0000000000000012 V typeinfo name for std::runtime_error
00000000008af360 000000000000002d V typeinfo name for std::__codecvt_abstract_base<char16_t, char, _mbstate_t>
00000000008af390 000000000000001c V typeinfo name for std::codecvt<char16_t, char, _mbstate_t>
00000000008af3b0 000000000000002d V typeinfo name for std::__codecvt_abstract_base<char32_t, char, _mbstate_t>
00000000008af3e0 000000000000001c V typeinfo name for std::codecvt<char32_t, char, _mbstate_t>
00000000008af400 000000000000002e V typeinfo name for std::__codecvt_abstract_base<char16_t, char8_t, _mbstate_t>
00000000008af430 000000000000001d V typeinfo name for std::codecvt<char16_t, char8_t, _mbstate_t>
00000000008af450 000000000000002e V typeinfo name for std::__codecvt_abstract_base<char32_t, char8_t, _mbstate_t>
00000000008af480 000000000000001d V typeinfo name for std::codecvt<char32_t, char8_t, _mbstate_t>
00000000008af4a0 000000000000001d V typeinfo name for std::ios_base::failure[abi:cxx11]
00000000008af4c0 0000000000000012 V typeinfo name for std::__ios_failure
00000000008af4d8 0000000000000018 V typeinfo name for std::__iosfail_type_info
00000000008af5a0 0000000000000018 V typeinfo name for std::__cxx11::collate<char>
00000000008af5b8 0000000000000019 V typeinfo name for std::__cxx11::numpunct<char>
00000000008af5d8 0000000000000020 V typeinfo name for std::__cxx11::moneypunct<char, true>
00000000008af5f8 0000000000000020 V typeinfo name for std::__cxx11::moneypunct<char, false>
00000000008af618 0000000000000019 V typeinfo name for std::__cxx11::messages<char>
00000000008af638 0000000000000046 V typeinfo name for std::__cxx11::money_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >
00000000008af680 0000000000000046 V typeinfo name for std::__cxx11::money_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >
00000000008af6c8 0000000000000045 V typeinfo name for std::__cxx11::time_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >
00000000008af710 0000000000000025 r typeinfo name for (anonymous namespace)::io_error_category
00000000008af738 0000000000000016 V typeinfo name for std::ios_base::failure
00000000008af750 0000000000000800 r vwin1024
00000000008aff50 0000000000000100 r vwin128
00000000008b0050 0000000000001000 r vwin2048
00000000008b1050 0000000000000200 r vwin256
00000000008b1250 0000000000002000 r vwin4096
00000000008b3250 0000000000000400 r vwin512
00000000008b3650 0000000000000080 r vwin64
00000000008b36d0 0000000000004000 r vwin8192
00000000008b76d0 0000000000000400 r FLOOR_fromdB_LOOKUP
00000000008b7ad0 0000000000000010 r ADJUST_SQRT2
00000000008b7ae0 0000000000000204 r COS_LOOKUP_I
00000000008b7ce8 0000000000000080 r FROMdB2_LOOKUP
00000000008b7d68 000000000000008c r FROMdB_LOOKUP
00000000008b7df8 0000000000000208 r INVSQ_LOOKUP_I
00000000008b8000 0000000000000200 r INVSQ_LOOKUP_IDel
00000000008b8200 0000000000000040 r MLOOP_1
00000000008b8240 0000000000000040 r MLOOP_2
00000000008b8280 0000000000000008 r MLOOP_3
00000000008b8288 0000000000000070 r barklook
00000000008b82f8 0000000000000010 r bitrev
00000000008b8308 0000000000001008 r sincos_lookup0
00000000008b9310 0000000000001000 r sincos_lookup1
00000000008ba310 0000000000002000 r crc_lookup
00000000008bc310 0000000000000108 r mask
00000000008bc418 0000000000000010 r __func__.0
00000000008bc428 0000000000000010 r __func__.1
00000000008bc438 000000000000001b r __func__.2
00000000008bc460 0000000000000030 r my_encodings
00000000008bc490 0000000000000048 r my_rates
00000000008bc4d8 0000000000000015 r __func__.0
00000000008bc4f0 000000000000001b r __func__.0
00000000008bc510 0000000000000008 r __func__.1
00000000008bc518 000000000000000d r __func__.2
00000000008bc528 000000000000000e r __func__.3
00000000008bc538 0000000000000008 r __func__.4
00000000008bc540 000000000000001b r __func__.5
00000000008bc560 000000000000000e r __func__.6
00000000008bc570 000000000000000a r __func__.7
00000000008bc580 0000000000000048 r freqs
00000000008bc5d0 0000000000000180 r tabsel_123
00000000008bc750 000000000000000e r __func__.0
00000000008bc760 000000000000001c r __func__.1
00000000008bc780 0000000000000014 r __func__.2
00000000008bc798 000000000000001f r __func__.3
00000000008bc7b8 0000000000000012 r __func__.4
00000000008bc7d0 0000000000000016 r __func__.5
00000000008bc7e8 0000000000000019 r __func__.6
00000000008bc808 0000000000000017 r __func__.7
00000000008bc820 0000000000000010 r __func__.0
00000000008bc830 000000000000000d r __func__.1
00000000008bc840 000000000000000e r __func__.2
00000000008bc850 000000000000000f r __func__.3
00000000008bc860 0000000000000010 r __func__.4
00000000008bc870 0000000000000015 r __func__.5
00000000008bc888 000000000000000c r __func__.6
00000000008bc898 0000000000000011 r __func__.7
00000000008bc8b0 0000000000000013 r __func__.8
00000000008bc8d0 0000000000000010 r encoding_widths
00000000008bc8e0 0000000000000019 r frame_type
00000000008bc900 0000000000000015 r __func__.0
00000000008bc918 000000000000000d r __func__.1
00000000008bc928 000000000000001b r __func__.2
00000000008bc948 0000000000000006 r dn_nodec
00000000008bc950 000000000000000c r dn_sse_vintage
00000000008bc960 0000000000000011 r dn_dreidnowext_vintage
00000000008bc978 000000000000000e r dn_dreidnow_vintage
00000000008bc988 0000000000000004 r dn_avx
00000000008bc990 0000000000000007 r dn_neon64
00000000008bc998 0000000000000005 r dn_neon
00000000008bc9a0 0000000000000004 r dn_arm
00000000008bc9a8 0000000000000007 r dn_x86_64
00000000008bc9b0 0000000000000004 r dn_sse
00000000008bc9b8 0000000000000008 r dn_altivec
00000000008bc9c0 0000000000000009 r dn_dreidnowext
00000000008bc9d0 0000000000000006 r dn_dreidnow
00000000008bc9d8 0000000000000004 r dn_mmx
00000000008bc9e0 000000000000000c r dn_ifuenf_dither
00000000008bc9f0 0000000000000005 r dn_ifuenf
00000000008bc9f8 0000000000000005 r dn_ivier
00000000008bca00 0000000000000005 r dn_idrei
00000000008bca08 000000000000000f r dn_generic_dither
00000000008bca18 0000000000000008 r dn_generic
00000000008bca20 0000000000000005 r dn_autodec
00000000008bca28 000000000000000d r __func__.1
00000000008bca38 000000000000000d r __func__.2
00000000008bca48 0000000000000012 r __func__.3
00000000008bca60 0000000000000011 r __func__.5
00000000008bca78 000000000000001c r __func__.0
00000000008bcaa0 0000000000000808 r intwinbase
00000000008bd2a8 0000000000000004 r cos4
00000000008bd2b0 0000000000000008 r cos8
00000000008bd2c0 0000000000000010 r cos16
00000000008bd2d0 0000000000000020 r cos32
00000000008bd2f0 0000000000000040 r cos64
00000000008bd330 0000000000000008 r __func__.0
00000000008bd338 000000000000000b r __func__.1
00000000008bd348 000000000000000d r __func__.2
00000000008bd358 000000000000000b r __func__.3
00000000008bd368 0000000000000011 r __func__.4
00000000008bd380 0000000000000008 r __func__.0
00000000008bd388 000000000000000c r __func__.1
00000000008bd398 0000000000000011 r __func__.2
00000000008bd3b0 0000000000000c00 r grp_9tab
00000000008bdfb0 0000000000000180 r grp_5tab
00000000008be130 0000000000000060 r grp_3tab
00000000008be190 0000000000001b00 r layer12_table
00000000008bfc90 0000000000000310 r alloc_4
00000000008bffa0 00000000000001c0 r alloc_3
00000000008c0160 0000000000000140 r alloc_2
00000000008c02a0 00000000000004b0 r alloc_1
00000000008c0750 0000000000000480 r alloc_0
00000000008c0d68 0000000000000016 r __func__.0
00000000008c0d80 0000000000000008 r __func__.1
00000000008c0d88 0000000000000012 r __func__.2
00000000008c0da0 0000000000000011 r __func__.3
00000000008c0db8 00000000000003de r bandInfo
00000000008c11a0 0000000000000200 r i_slen2
00000000008c13a0 0000000000000400 r n_slen2
00000000008c17a0 0000000000000318 r mapbuf2
00000000008c1ac0 0000000000000af8 r mapbuf1
00000000008c25c0 0000000000000ab0 r mapbuf0
00000000008c3070 0000000000000100 r pow2_2
00000000008c3170 0000000000000100 r pow1_2
00000000008c3270 0000000000000100 r pow2_1
00000000008c3370 0000000000000100 r pow1_1
00000000008c3470 0000000000000040 r tan2_2
00000000008c34b0 0000000000000040 r tan1_2
00000000008c34f0 0000000000000040 r tan2_1
00000000008c3530 0000000000000040 r tan1_1
00000000008c3570 0000000000000240 r win1
00000000008c37b0 0000000000000240 r win
00000000008c39f0 000000000000803c r ispow
00000000008cba30 000000000000003e r tab_c1
00000000008cba70 000000000000003e r tab_c0
00000000008cbab0 0000000000000800 r tab24_
00000000008cc2b0 0000000000000820 r tab16_
00000000008ccad0 00000000000007e0 r tab15_
00000000008cd2b0 00000000000007e0 r tab13_
00000000008cda90 00000000000001e0 r tab12_
00000000008cdc70 00000000000001e0 r tab11_
00000000008cde50 0000000000000220 r tab10_
00000000008ce070 0000000000000100 r tab9_
00000000008ce170 0000000000000100 r tab8_
00000000008ce270 0000000000000120 r tab7_
00000000008ce390 0000000000000080 r tab6_
00000000008ce410 0000000000000060 r tab5_
00000000008ce470 0000000000000060 r tab3_
00000000008ce4d0 0000000000000060 r tab2_
00000000008ce530 0000000000000020 r tab1_
00000000008ce550 0000000000000020 r tab0_
00000000008ce600 0000000000000040 r PreAmpTable
00000000008ce640 0000000000000080 r ModSinusTable
00000000008ce6c0 0000000000000080 r ModRandomTable
00000000008ce740 0000000000000080 r ModSquareTable
00000000008ce7c0 0000000000000040 r PreAmpAGCTable
00000000008ce800 0000000000000100 r ft2VibratoTable
00000000008ce900 0000000000000080 r ModRampDownTable
00000000008ce980 0000000000000400 r LinearSlideUpTable
00000000008ced80 0000000000000400 r LinearSlideDownTable
00000000008cf180 0000000000000040 r FineLinearSlideUpTable
00000000008cf1c0 0000000000000040 r FineLinearSlideDownTable
00000000008cf240 0000000000000020 r FreqS3MTable
00000000008cf260 0000000000000010 r retrigTable1
00000000008cf270 0000000000000010 r retrigTable2
00000000008cf280 0000000000000c00 r XMLinearTable
00000000008cfe80 00000000000000d0 r XMPeriodTable
00000000008cff50 0000000000000020 r S3MFineTuneTable
00000000008cff70 0000000000000400 r LinearSlideUpTable
00000000008d0370 0000000000000400 r LinearSlideDownTable
00000000008d0770 0000000000000090 r ProTrackerPeriodTable
00000000008d0800 0000000000000040 r FineLinearSlideUpTable
00000000008d0840 0000000000000180 r ProTrackerTunedPeriods
00000000008d09c0 0000000000000040 r FineLinearSlideDownTable
00000000008d0a00 0000000000000010 r ImpulseTrackerPortaVolCmd
00000000008d0a18 0000000000000020 r MMCMP8BitFetch
00000000008d0a38 0000000000000040 r MMCMP16BitFetch
00000000008d0a78 0000000000000020 r MMCMP8BitCommands
00000000008d0a98 0000000000000040 r MMCMP16BitCommands
00000000008d0b48 000000000000003c r CSWTCH.23
00000000008d0b88 000000000000003c r CSWTCH.24
00000000008d0bc8 000000000000000a r bpmvals
00000000008d0c40 0000000000000010 r abc_setup_chordnames()::list_7sus4
00000000008d0c50 0000000000000010 r abc_setup_chordnames()::list_7sus9
00000000008d0c60 0000000000000014 r abc_setup_chordnames()::list_9sus4
00000000008d0c78 0000000000000008 r abc_setup_chordnames()::list_5
00000000008d0c80 0000000000000010 r abc_setup_chordnames()::list_6
00000000008d0c90 0000000000000010 r abc_setup_chordnames()::list_7
00000000008d0ca0 0000000000000014 r abc_setup_chordnames()::list_9
00000000008d0cb8 000000000000000c r abc_setup_chordnames()::list_m
00000000008d0cc8 0000000000000018 r abc_setup_chordnames()::list_11
00000000008d0ce0 0000000000000018 r abc_setup_chordnames()::list_13
00000000008d0cf8 0000000000000010 r abc_setup_chordnames()::list_M7
00000000008d0d08 0000000000000014 r abc_setup_chordnames()::list_M9
00000000008d0d20 0000000000000010 r abc_setup_chordnames()::list_m6
00000000008d0d30 0000000000000010 r abc_setup_chordnames()::list_m7
00000000008d0d40 0000000000000014 r abc_setup_chordnames()::list_m9
00000000008d0d58 000000000000000c r abc_setup_chordnames()::list_Maj
00000000008d0d68 000000000000000c r abc_setup_chordnames()::list_aug
00000000008d0d78 000000000000000c r abc_setup_chordnames()::list_dim
00000000008d0d88 000000000000000c r abc_setup_chordnames()::list_sus
00000000008d0d98 0000000000000010 r abc_setup_chordnames()::list_7sus
00000000008d0da8 0000000000000010 r abc_setup_chordnames()::list_aug7
00000000008d0db8 0000000000000010 r abc_setup_chordnames()::list_dim7
00000000008d0dc8 0000000000000014 r abc_setup_chordnames()::list_dim9
00000000008d0de0 0000000000000010 r abc_setup_chordnames()::list_maj7
00000000008d0df0 0000000000000014 r abc_setup_chordnames()::list_maj9
00000000008d0e08 000000000000000c r abc_setup_chordnames()::list_plus
00000000008d0e18 000000000000000c r abc_setup_chordnames()::list_sus9
00000000008d2228 0000000000000027 r CSWTCH.60
00000000008d2250 0000000000000041 r tune
00000000008d2298 0000000000000014 r CSWTCH.1001
00000000008d22c0 0000000000000024 r s_emptyFence.0
00000000008d2360 0000000000000023 r g_bq_InterfaceDescriptor
00000000008d2390 0000000000000086 r _error_code_map
00000000008d2418 0000000000000020 r error_table
00000000008d2438 000000000000000d r kModeBpp
00000000008d2448 0000000000000003 r kFilterExtraRows
00000000008d2450 000000000000000c r kQuantToDitherAmp
00000000008d2460 0000000000000020 r kScan
00000000008d2480 0000000000000030 r CSWTCH.31
00000000008d24b0 0000000000000004 r kCat3
00000000008d24b8 0000000000000005 r kCat4
00000000008d24c0 0000000000000006 r kCat5
00000000008d24c8 000000000000000c r kCat6
00000000008d24d8 0000000000000010 r kZigzag
00000000008d24e8 000000000000000a r kAlphabetSize
00000000008d24f8 0000000000000013 r kCodeLengthCodeOrder
00000000008d2510 0000000000000003 r kCodeLengthExtraBits
00000000008d2518 0000000000000003 r kCodeLengthRepeatOffsets
00000000008d2520 0000000000000078 r kCodeToPlane
00000000008d2598 0000000000000005 r kLiteralMap
00000000008d25a0 0000000000000018 r kTableSize
00000000008d2630 0000000000000008 r k0g0g.0
00000000008d2638 0000000000000008 r kGreenShuffle
00000000008d2640 0000000000000008 r kCoeffs1
00000000008d2648 0000000000000064 r kBitMask
00000000008d26b0 0000000000000080 R kVP8Log2Range
00000000008d2730 0000000000000080 R kVP8NewRange
00000000008d27b0 00000000000000dc r kRandomTable
00000000008d2890 0000000000000100 r kAcTable
00000000008d2990 0000000000000080 r kDcTable
00000000008d2a10 0000000000000420 r CoeffsProba0
00000000008d2e30 0000000000000420 r CoeffsUpdateProba
00000000008d3250 0000000000000384 r kBModesProba
00000000008d35d8 0000000000000011 r kBands
00000000008d3640 0000000000000100 r canon_map
00000000008d3740 0000000000000048 r _pow10(unsigned int)::_powers_of_10
00000000008d3788 000000000000000a r _double_parser_trans_actions
00000000008d3798 000000000000000a r _double_parser_trans_targs
00000000008d37b0 00000000000000bf r _double_parser_indicies
00000000008d3870 0000000000000009 r _double_parser_index_offsets
00000000008d3880 0000000000000009 r _double_parser_key_spans
00000000008d3890 0000000000000013 r _double_parser_trans_keys
00000000008d3930 000000000000040c r format1_names_msgidx
00000000008d3d40 000000000000073a r format1_names_msgstr
00000000008d4480 0000000000000620 r cff1_std_strings_msgidx
00000000008d4aa0 0000000000000d73 r cff1_std_strings_msgstr
00000000008d5820 00000000000005a0 r _hb_arabic_u16
00000000008d5dc0 00000000000001d0 r _hb_arabic_u8
00000000008d6080 0000000000000038 r horizontal_features
00000000008d60c0 0000000000000038 r common_features
00000000008d60f8 0000000000000002 R _hb_Null_AAT_Lookup
00000000008d6100 000000000000000c R _hb_Null_OT_CmapSubtableLongGroup
00000000008d6110 0000000000000009 R _hb_Null_OT_RangeRecord
00000000008d6120 0000000000000008 R _hb_Null_OT_LangSys
00000000008d6128 0000000000000002 R _hb_Null_OT_Index
00000000008d6130 00000000000001c0 R _hb_NullPool
00000000008d62f0 00000000000001d0 r _hb_emoji_u8
00000000008d64c0 0000000000000100 R _hb_modified_combining_class
00000000008d6600 00000000000005a0 r _hb_arabic_u16
00000000008d6ba0 00000000000001d0 r _hb_arabic_u8
00000000008d6d70 00000000000004e0 r feature_mappings
00000000008d72e0 0000000000000100 r standard_encoding_to_sid
00000000008d73e0 0000000000000158 r expert_subset_charset_sid_to_gid
00000000008d7540 0000000000000294 r expert_charset_sid_to_gid
00000000008d77e0 00000000000000ae r expert_subset_charset_to_sid
00000000008d7890 000000000000014c r expert_charset_to_sid
00000000008d7a60 0000000000000008 r table_tags
00000000008d7a70 0000000000000038 r modifier_combining_marks
00000000008d7ab0 000000000000001c r arabic_fallback_features
00000000008d7ad0 00000000000000a8 r arabic_state_table
00000000008d7b80 0000000000000020 r arabic_features
00000000008d7ba0 0000000000000014 r ligature_3_table
00000000008d7bb8 0000000000000016 r ligature_mark_table
00000000008d7bd0 0000000000000414 r ligature_table
00000000008d7ff0 0000000000000598 r shaping_table
00000000008d8590 0000000000000597 r joining_table
00000000008d8b28 0000000000000001 r hb_first
00000000008d8bb0 0000000000000060 R _hb_ot_shaper_dumber
00000000008d8c10 0000000000000060 R _hb_ot_shaper_default
00000000008d8c70 0000000000000010 r hangul_features
00000000008d8c80 000000000000006c r compose_hebrew(hb_ot_shape_normalize_context_t const*, unsigned int, unsigned int, unsigned int*)::sDageshForms
00000000008d8d20 0000000000000088 r indic_features
00000000008d8da8 00000000000000f0 r indic_configs
00000000008d8ea0 0000000000000114 r _indic_syllable_machine_eof_trans
00000000008d8fc0 000000000000008a r _indic_syllable_machine_from_state_actions
00000000008d9050 000000000000008a r _indic_syllable_machine_to_state_actions
00000000008d90e0 0000000000000096 r _indic_syllable_machine_trans_actions
00000000008d9180 0000000000000096 r _indic_syllable_machine_trans_targs
00000000008d9220 000000000000059f r _indic_syllable_machine_indicies
00000000008d97c0 0000000000000114 r _indic_syllable_machine_index_offsets
00000000008d98e0 000000000000008a r _indic_syllable_machine_key_spans
00000000008d9970 0000000000000115 r _indic_syllable_machine_trans_keys
00000000008d9a90 0000000000000048 r khmer_features
00000000008d9ae0 0000000000000056 r _khmer_syllable_machine_eof_trans
00000000008d9b40 000000000000002b r _khmer_syllable_machine_from_state_actions
00000000008d9b70 000000000000002b r _khmer_syllable_machine_to_state_actions
00000000008d9ba0 0000000000000031 r _khmer_syllable_machine_trans_actions
00000000008d9be0 0000000000000031 r _khmer_syllable_machine_trans_targs
00000000008d9c20 00000000000003bd r _khmer_syllable_machine_indicies
00000000008d9fe0 0000000000000056 r _khmer_syllable_machine_index_offsets
00000000008da040 000000000000002b r _khmer_syllable_machine_key_spans
00000000008da070 0000000000000057 r _khmer_syllable_machine_trans_keys
00000000008da0c8 0000000000000060 R _hb_ot_shaper_myanmar_zawgyi
00000000008da130 0000000000000010 r myanmar_other_features
00000000008da140 0000000000000010 r myanmar_basic_features
00000000008da150 000000000000006e r _myanmar_syllable_machine_eof_trans
00000000008da1c0 0000000000000037 r _myanmar_syllable_machine_from_state_actions
00000000008da200 0000000000000037 r _myanmar_syllable_machine_to_state_actions
00000000008da240 000000000000003d r _myanmar_syllable_machine_trans_actions
00000000008da280 000000000000003d r _myanmar_syllable_machine_trans_targs
00000000008da2c0 00000000000007cd r _myanmar_syllable_machine_indicies
00000000008daa90 000000000000006e r _myanmar_syllable_machine_index_offsets
00000000008dab00 0000000000000037 r _myanmar_syllable_machine_key_spans
00000000008dab40 000000000000006f r _myanmar_syllable_machine_trans_keys
00000000008dabb0 0000000000000048 r thai_below_state_machine
00000000008dac00 0000000000000014 r thai_below_start_state
00000000008dac20 0000000000000060 r thai_above_state_machine
00000000008dac80 0000000000000014 r thai_above_start_state
00000000008dac98 0000000000000012 r thai_pua_shape(unsigned int, thai_action_t, hb_font_t*)::RD_mappings
00000000008dacb0 000000000000004e r thai_pua_shape(unsigned int, thai_action_t, hb_font_t*)::SL_mappings
00000000008dad00 0000000000000024 r thai_pua_shape(unsigned int, thai_action_t, hb_font_t*)::SDL_mappings
00000000008dad28 0000000000000036 r thai_pua_shape(unsigned int, thai_action_t, hb_font_t*)::SD_mappings
00000000008dad90 0000000000000014 r use_other_features
00000000008dadb0 0000000000000010 r use_topographical_features
00000000008dadc0 000000000000001c r use_basic_features
00000000008dade0 0000000000000620 r hb_use_u16
00000000008db400 0000000000000c45 r hb_use_u8
00000000008dc050 00000000000000fc r _use_syllable_machine_eof_trans
00000000008dc150 000000000000007e r _use_syllable_machine_from_state_actions
00000000008dc1d0 000000000000007e r _use_syllable_machine_to_state_actions
00000000008dc250 000000000000008f r _use_syllable_machine_trans_actions
00000000008dc2e0 000000000000008f r _use_syllable_machine_trans_targs
00000000008dc370 000000000000118b r _use_syllable_machine_indicies
00000000008dd500 00000000000000fc r _use_syllable_machine_index_offsets
00000000008dd600 000000000000007e r _use_syllable_machine_key_spans
00000000008dd680 00000000000000fd r _use_syllable_machine_trans_keys
00000000008dd780 0000000000000001 r hb_second
00000000008dd788 0000000000000001 r hb_identity
00000000008dd860 00000000000025c8 r ot_languages3
00000000008dfe30 0000000000000658 r ot_languages2
00000000008e0490 0000000000000188 r _hb_ucd_i16
00000000008e0620 00000000000048d0 r _hb_ucd_u16
00000000008e4ef0 00000000000045cc r _hb_ucd_u8
00000000008e94c0 0000000000000c20 r _hb_ucd_dm2_u64_map
00000000008ea0e0 00000000000009f8 r _hb_ucd_dm2_u32_map
00000000008eaae0 00000000000000dc r _hb_ucd_dm1_p2_map
00000000008eabc0 0000000000000672 r _hb_ucd_dm1_p0_map
00000000008eb240 0000000000000294 r _hb_ucd_sc_map
00000000008eb4e0 0000000000000d80 r indic_table
00000000008ec260 0000000000000010 r atanlo
00000000008ec270 0000000000000010 r atanhi
00000000008ec280 0000000000000080 r npio2_hw
00000000008ec300 0000000000000108 r two_over_pi
00000000008ec408 0000000000000008 r Zero
00000000008ec410 0000000000000040 r PIo2
00000000008ec450 0000000000000010 r init_jk
00000000008ec460 0000000000000060 R __inv_pio4
00000000008ec4c0 00000000000000e0 R __sincosf_table
00000000008ec5a0 0000000000000870 R __exp_data
00000000008ece10 0000000000001048 R __pow_log_data
00000000008ede60 0000000000000890 R __log_data
00000000008ee6f0 0000000000000018 r CSWTCH.9
00000000008ee708 0000000000000018 r CSWTCH.8
00000000008ee720 0000000000000128 R __powf_log2_data
00000000008ee850 0000000000000120 R __log2f_data
00000000008ee970 0000000000000020 r atanlo
00000000008ee990 0000000000000020 r atanhi
00000000008ee9b0 000000000000000c r CSWTCH.9
00000000008ee9c0 000000000000000c r CSWTCH.8
00000000008ee9d0 0000000000000148 R __exp2f_data
00000000008eeb20 0000000000000080 r npio2_hw
00000000008eeba0 0000000000000318 r two_over_pi
00000000008eeeb8 0000000000000120 R __logf_data
00000000008eefe0 000000000000002c r PIo2
00000000008ef010 000000000000000c r init_jk
00000000008ef020 0000000000000490 R __log2_data
00000000008ef5c8 0000000000000008 r terminator.0
00000000008ef5d0 0000000000000001 R __aarch64_have_sme
00000000008ef810 0000000000000014 r fpinan.0
00000000008ef828 0000000000000014 r fpi.1
00000000008ef840 0000000000000028 r tinytens
00000000008ef918 0000000000000100 R __hexdig
00000000008efa20 0000000000000048 r JIS_action_table
00000000008efa70 0000000000000048 r JIS_state_table
00000000008efbf0 0000000000000010 r zeroes.0
00000000008efc00 0000000000000010 r blanks.1
00000000008efd10 0000000000000010 r zeroes.0
00000000008efd20 0000000000000010 r blanks.1
00000000008efd30 0000000000000101 R _ctype_
00000000008effd0 0000000000000040 r zeroes.0
00000000008f0010 0000000000000040 r blanks.1
00000000008f0150 0000000000000022 r basefix.0
00000000008f0270 0000000000000010 r zeroes.0
00000000008f0280 0000000000000010 r blanks.1
00000000008f0290 000000000000006c R __action_table
00000000008f0300 000000000000006c R __state_table
00000000008f0370 0000000000000100 R __chclass
00000000008f0480 000000000000000c r p05.0
00000000008f0490 0000000000000028 R __mprec_bigtens
00000000008f04b8 00000000000000c8 R __mprec_tens
00000000008f0680 0000000000000010 r zeroes.0
00000000008f0690 0000000000000010 r blanks.1
00000000008f0710 0000000000000022 r basefix.0
00000000008f0738 0000000000000060 R __month_lengths
00000000008f0798 00000000000035dc r categories
00000000008f3d78 r __tls_align
00000000008f5a11 r __eh_frame_hdr_end
00000000008f5a11 r __eh_frame_hdr_start
00000000008f5a18 r __EH_FRAME_BEGIN__
00000000009e10c0 r __FRAME_END__
00000000009e2000 d __init_array_start
00000000009e2000 d __preinit_array_end
00000000009e2000 d __preinit_array_start
00000000009e2000 d __relro_start
00000000009e2008 d __frame_dummy_init_array_entry
00000000009e2080 d __fini_array_start
00000000009e2080 d __init_array_end
00000000009e2088 d __do_global_dtors_aux_fini_array_entry
00000000009e20b8 d __fini_array_end
00000000009e20c0 0000000000000070 d known.9876
00000000009e2130 0000000000000038 d SDL_priority_prefixes
00000000009e2170 0000000000000200 d channel_converters
00000000009e2370 00000000000000b0 d map_StringForControllerButton
00000000009e2420 0000000000000038 d map_StringForControllerAxis
00000000009e2458 00000000000020b0 d arrControllers
00000000009e4510 0000000000000020 d getpixes
00000000009e4530 0000000000000028 d colorkey_blit
00000000009e4560 0000000000000028 d bitmap_blit
00000000009e4590 0000000000000028 d one_blitkey
00000000009e45c0 0000000000000028 d one_blit
00000000009e45f0 0000000000000020 d normal_blit
00000000009e4610 00000000000001b0 d normal_blit_4
00000000009e47c0 0000000000000150 d normal_blit_3
00000000009e4910 0000000000000150 d normal_blit_2
00000000009e4a60 0000000000000030 d normal_blit_1
00000000009e4a90 0000000000000048 d fft_state48000_960_0
00000000009e4ad8 0000000000000048 d fft_state48000_960_1
00000000009e4b20 0000000000000048 d fft_state48000_960_2
00000000009e4b68 0000000000000048 d fft_state48000_960_3
00000000009e4bb0 00000000000000a0 d mode48000_960_120
00000000009e4c50 0000000000000010 D silk_LBRR_flags_iCDF_ptr
00000000009e4c60 0000000000000078 d CELT_PVQ_U_ROW
00000000009e4cd8 0000000000000018 D silk_LTP_gain_iCDF_ptrs
00000000009e4cf0 0000000000000018 D silk_LTP_vq_ptrs_Q7
00000000009e4d08 0000000000000048 D silk_NLSF_CB_NB_MB
00000000009e4d50 0000000000000048 D silk_NLSF_CB_WB
00000000009e4d98 00000000000000a0 d configuration_table
00000000009e4e38 0000000000000020 d static_l_desc
00000000009e4e58 0000000000000020 d static_d_desc
00000000009e4e78 0000000000000020 d static_bl_desc
00000000009e4e98 0000000000000050 D z_errmsg
00000000009e4ee8 0000000000000410 D jpeg_std_message_table
00000000009e52f8 0000000000000090 d ft_raccess_guess_table
00000000009e5388 0000000000000040 D ft_svg_glyph_class
00000000009e53c8 0000000000000040 D ft_outline_glyph_class
00000000009e5408 0000000000000040 D ft_bitmap_glyph_class
00000000009e5448 00000000000000c0 D tt_driver_class
00000000009e5508 0000000000000070 d tt_services
00000000009e5578 0000000000000008 d tt_service_truetype_glyf
00000000009e5580 0000000000000048 d tt_service_metrics_variations
00000000009e55c8 0000000000000098 d tt_service_gx_multi_masters
00000000009e5660 0000000000000010 d tt_service_properties
00000000009e5670 00000000000008d0 d t1_keywords
00000000009e5f40 00000000000000c0 D t1_driver_class
00000000009e6000 0000000000000080 d t1_services
00000000009e6080 0000000000000008 d t1_service_kerning
00000000009e6088 0000000000000028 d t1_service_ps_info
00000000009e60b0 0000000000000098 d t1_service_multi_masters
00000000009e6148 0000000000000008 d t1_service_ps_name
00000000009e6150 0000000000000010 d t1_service_glyph_dict
00000000009e6160 00000000000009a0 d cff_field_handlers
00000000009e6b00 00000000000000c0 D cff_driver_class
00000000009e6bc0 00000000000000b0 d cff_services
00000000009e6c70 0000000000000028 d cff_service_cff_load
00000000009e6c98 0000000000000048 d cff_service_metrics_variations
00000000009e6ce0 0000000000000098 d cff_service_multi_masters
00000000009e6d78 0000000000000018 d cff_service_cid_info
00000000009e6d90 0000000000000008 d cff_service_get_cmap_info
00000000009e6d98 0000000000000008 d cff_service_ps_name
00000000009e6da0 0000000000000028 d cff_service_ps_info
00000000009e6dc8 0000000000000010 d cff_service_glyph_dict
00000000009e6dd8 0000000000000050 D cff_cmap_unicode_class_rec
00000000009e6e28 0000000000000050 D cff_cmap_encoding_class_rec
00000000009e6e78 00000000000000c0 D t1cid_driver_class
00000000009e6f38 0000000000000060 d cid_services
00000000009e6f98 0000000000000018 d cid_service_cid_info
00000000009e6fb0 0000000000000028 d cid_service_ps_info
00000000009e6fd8 0000000000000008 d cid_service_ps_name
00000000009e6fe0 00000000000009f0 d cid_field_records
00000000009e79d0 0000000000000050 d pfr_phy_font_extra_items
00000000009e7a20 00000000000000c0 D pfr_driver_class
00000000009e7ae0 0000000000000030 d pfr_services
00000000009e7b10 0000000000000018 d pfr_metrics_service_rec
00000000009e7b28 0000000000000050 D pfr_cmap_class_rec
00000000009e7b78 00000000000003c0 d t42_keywords
00000000009e7f38 00000000000000c0 D t42_driver_class
00000000009e7ff8 0000000000000050 d t42_services
00000000009e8048 0000000000000028 d t42_service_ps_info
00000000009e8070 0000000000000008 d t42_service_ps_font_name
00000000009e8078 0000000000000010 d t42_service_glyph_dict
00000000009e8088 00000000000000c0 D winfnt_driver_class
00000000009e8148 0000000000000030 d winfnt_services
00000000009e8178 0000000000000008 d winfnt_service_rec
00000000009e8180 0000000000000050 d fnt_cmap_class_rec
00000000009e81d0 00000000000000c0 D pcf_driver_class
00000000009e8290 0000000000000040 d pcf_services
00000000009e82d0 0000000000000010 d pcf_service_properties
00000000009e82e0 0000000000000010 d pcf_service_bdf
00000000009e82f0 0000000000000050 d pcf_cmap_class
00000000009e8340 00000000000000c0 D bdf_driver_class
00000000009e8400 0000000000000030 d bdf_services
00000000009e8430 0000000000000010 d bdf_service_bdf
00000000009e8440 0000000000000050 d bdf_cmap_class
00000000009e8490 00000000000007c8 d bdf_properties_
00000000009e8c60 0000000000000050 d tt_cmap_classes
00000000009e8cb0 0000000000000068 D tt_cmap_unicode_class_rec
00000000009e8d18 0000000000000068 D tt_cmap14_class_rec
00000000009e8d80 0000000000000068 D tt_cmap13_class_rec
00000000009e8de8 0000000000000068 D tt_cmap12_class_rec
00000000009e8e50 0000000000000068 D tt_cmap10_class_rec
00000000009e8eb8 0000000000000068 D tt_cmap8_class_rec
00000000009e8f20 0000000000000068 D tt_cmap6_class_rec
00000000009e8f88 0000000000000068 D tt_cmap4_class_rec
00000000009e8ff0 0000000000000068 D tt_cmap2_class_rec
00000000009e9058 0000000000000068 D tt_cmap0_class_rec
00000000009e90c0 0000000000000048 D sfnt_module_class
00000000009e9108 0000000000000170 d sfnt_interface
00000000009e9278 0000000000000060 d sfnt_services
00000000009e92d8 0000000000000010 d sfnt_service_bdf
00000000009e92e8 0000000000000008 d tt_service_get_cmap_info
00000000009e92f0 0000000000000008 d sfnt_service_ps_name
00000000009e92f8 0000000000000010 d sfnt_service_glyph_dict
00000000009e9308 0000000000000018 d sfnt_service_sfnt_table
00000000009e9320 0000000000000048 D autofit_module_class
00000000009e9368 0000000000000020 D af_autofitter_interface
00000000009e9388 0000000000000020 d af_services
00000000009e93a8 0000000000000010 d af_service_properties
00000000009e93b8 0000000000000040 D af_latin_writing_system_class
00000000009e93f8 0000000000000040 D af_indic_writing_system_class
00000000009e9440 00000000000002c0 D af_style_classes
00000000009e9700 00000000000001e8 D af_script_classes
00000000009e98f0 0000000000000028 D af_writing_system_classes
00000000009e9918 0000000000000028 D af_hani_script_class
00000000009e9940 0000000000000028 D af_tibt_script_class
00000000009e9968 0000000000000028 D af_sylo_script_class
00000000009e9990 0000000000000028 D af_orya_script_class
00000000009e99b8 0000000000000028 D af_limb_script_class
00000000009e99e0 0000000000000028 D af_vaii_script_class
00000000009e9a08 0000000000000028 D af_thai_script_class
00000000009e9a30 0000000000000028 D af_tfng_script_class
00000000009e9a58 0000000000000028 D af_telu_script_class
00000000009e9a80 0000000000000028 D af_tavt_script_class
00000000009e9aa8 0000000000000028 D af_taml_script_class
00000000009e9ad0 0000000000000028 D af_sund_script_class
00000000009e9af8 0000000000000028 D af_sinh_script_class
00000000009e9b20 0000000000000028 D af_shaw_script_class
00000000009e9b48 0000000000000028 D af_saur_script_class
00000000009e9b70 0000000000000028 D af_rohg_script_class
00000000009e9b98 0000000000000028 D af_osma_script_class
00000000009e9bc0 0000000000000028 D af_osge_script_class
00000000009e9be8 0000000000000028 D af_orkh_script_class
00000000009e9c10 0000000000000028 D af_olck_script_class
00000000009e9c38 0000000000000028 D af_none_script_class
00000000009e9c60 0000000000000028 D af_nkoo_script_class
00000000009e9c88 0000000000000028 D af_mymr_script_class
00000000009e9cb0 0000000000000028 D af_mong_script_class
00000000009e9cd8 0000000000000028 D af_medf_script_class
00000000009e9d00 0000000000000028 D af_mlym_script_class
00000000009e9d28 0000000000000028 D af_lisu_script_class
00000000009e9d50 0000000000000028 D af_latp_script_class
00000000009e9d78 0000000000000028 D af_latb_script_class
00000000009e9da0 0000000000000028 D af_latn_script_class
00000000009e9dc8 0000000000000028 D af_lao_script_class
00000000009e9df0 0000000000000028 D af_knda_script_class
00000000009e9e18 0000000000000028 D af_khms_script_class
00000000009e9e40 0000000000000028 D af_khmr_script_class
00000000009e9e68 0000000000000028 D af_kali_script_class
00000000009e9e90 0000000000000028 D af_hebr_script_class
00000000009e9eb8 0000000000000028 D af_guru_script_class
00000000009e9ee0 0000000000000028 D af_gujr_script_class
00000000009e9f08 0000000000000028 D af_grek_script_class
00000000009e9f30 0000000000000028 D af_goth_script_class
00000000009e9f58 0000000000000028 D af_glag_script_class
00000000009e9f80 0000000000000028 D af_geok_script_class
00000000009e9fa8 0000000000000028 D af_geor_script_class
00000000009e9fd0 0000000000000028 D af_ethi_script_class
00000000009e9ff8 0000000000000028 D af_dsrt_script_class
00000000009ea020 0000000000000028 D af_deva_script_class
00000000009ea048 0000000000000028 D af_cyrl_script_class
00000000009ea070 0000000000000028 D af_cprt_script_class
00000000009ea098 0000000000000028 D af_copt_script_class
00000000009ea0c0 0000000000000028 D af_cher_script_class
00000000009ea0e8 0000000000000028 D af_cari_script_class
00000000009ea110 0000000000000028 D af_cans_script_class
00000000009ea138 0000000000000028 D af_cakm_script_class
00000000009ea160 0000000000000028 D af_buhd_script_class
00000000009ea188 0000000000000028 D af_beng_script_class
00000000009ea1b0 0000000000000028 D af_bamu_script_class
00000000009ea1d8 0000000000000028 D af_avst_script_class
00000000009ea200 0000000000000028 D af_armn_script_class
00000000009ea228 0000000000000028 D af_arab_script_class
00000000009ea250 0000000000000028 D af_adlm_script_class
00000000009ea278 0000000000000040 D af_dummy_writing_system_class
00000000009ea2b8 0000000000000040 D af_cjk_writing_system_class
00000000009ea2f8 0000000000000048 D pshinter_module_class
00000000009ea340 0000000000000018 d pshinter_interface
00000000009ea358 0000000000000078 D ft_smooth_renderer_class
00000000009ea3d0 0000000000000030 D ft_grays_raster
00000000009ea400 0000000000000030 d func_interface
00000000009ea430 0000000000000078 D ft_raster1_renderer_class
00000000009ea4a8 0000000000000030 D ft_standard_raster
00000000009ea4d8 0000000000000078 D ft_svg_renderer_class
00000000009ea550 0000000000000020 d ft_svg_services
00000000009ea570 0000000000000010 d ft_svg_service_properties
00000000009ea580 0000000000000008 d svg_interface
00000000009ea588 0000000000000030 D ft_sdf_raster
00000000009ea5b8 0000000000000030 d sdf_decompose_funcs
00000000009ea5e8 0000000000000030 D ft_bitmap_sdf_raster
00000000009ea618 0000000000000078 D ft_bitmap_sdf_renderer_class
00000000009ea690 0000000000000078 D ft_sdf_renderer_class
00000000009ea708 0000000000000020 d sdf_services
00000000009ea728 0000000000000010 d sdf_service_properties
00000000009ea738 0000000000000050 D t1_cmap_unicode_class_rec
00000000009ea788 0000000000000050 D t1_cmap_custom_class_rec
00000000009ea7d8 0000000000000050 D t1_cmap_expert_class_rec
00000000009ea828 0000000000000050 D t1_cmap_standard_class_rec
00000000009ea878 0000000000000048 D psaux_module_class
00000000009ea8c0 0000000000000058 d psaux_interface
00000000009ea918 0000000000000018 D cff_decoder_funcs
00000000009ea930 0000000000000040 D cff_builder_funcs
00000000009ea970 0000000000000020 D t1_cmap_classes
00000000009ea990 0000000000000018 D afm_parser_funcs
00000000009ea9a8 0000000000000020 D t1_decoder_funcs
00000000009ea9c8 0000000000000040 D t1_builder_funcs
00000000009eaa08 0000000000000068 D ps_parser_funcs
00000000009eaa70 0000000000000020 D ps_table_funcs
00000000009eaa90 0000000000000250 d afm_key_table
00000000009eace0 0000000000000048 D psnames_module_class
00000000009ead28 0000000000000020 d pscmaps_services
00000000009ead48 0000000000000040 d pscmaps_interface
00000000009ead88 0000000000000080 d egl_platforms
00000000009eae08 0000000000000020 d level_strings
00000000009eae28 0000000000000048 d st_gl_api
00000000009eae70 00000000000000d8 D util_format_a16_float_description
00000000009eaf48 00000000000000d8 D util_format_a16_sint_description
00000000009eb020 00000000000000d8 D util_format_a16_snorm_description
00000000009eb0f8 00000000000000d8 D util_format_a16_uint_description
00000000009eb1d0 00000000000000d8 D util_format_a16_unorm_description
00000000009eb2a8 00000000000000d8 D util_format_a1b5g5r5_uint_description
00000000009eb380 00000000000000d8 D util_format_a1b5g5r5_unorm_description
00000000009eb458 00000000000000d8 D util_format_a1r5g5b5_uint_description
00000000009eb530 00000000000000d8 D util_format_a1r5g5b5_unorm_description
00000000009eb608 00000000000000d8 D util_format_a2b10g10r10_uint_description
00000000009eb6e0 00000000000000d8 D util_format_a2b10g10r10_unorm_description
00000000009eb7b8 00000000000000d8 D util_format_a2r10g10b10_uint_description
00000000009eb890 00000000000000d8 D util_format_a2r10g10b10_unorm_description
00000000009eb968 00000000000000d8 D util_format_a32_float_description
00000000009eba40 00000000000000d8 D util_format_a32_sint_description
00000000009ebb18 00000000000000d8 D util_format_a32_uint_description
00000000009ebbf0 00000000000000d8 D util_format_a4b4g4r4_uint_description
00000000009ebcc8 00000000000000d8 D util_format_a4b4g4r4_unorm_description
00000000009ebda0 00000000000000d8 D util_format_a4r4_unorm_description
00000000009ebe78 00000000000000d8 D util_format_a4r4g4b4_uint_description
00000000009ebf50 00000000000000d8 D util_format_a4r4g4b4_unorm_description
00000000009ec028 00000000000000d8 D util_format_a8_sint_description
00000000009ec100 00000000000000d8 D util_format_a8_snorm_description
00000000009ec1d8 00000000000000d8 D util_format_a8_uint_description
00000000009ec2b0 00000000000000d8 D util_format_a8_unorm_description
00000000009ec388 00000000000000d8 D util_format_a8b8g8r8_sint_description
00000000009ec460 00000000000000d8 D util_format_a8b8g8r8_snorm_description
00000000009ec538 00000000000000d8 D util_format_a8b8g8r8_srgb_description
00000000009ec610 00000000000000d8 D util_format_a8b8g8r8_sscaled_description
00000000009ec6e8 00000000000000d8 D util_format_a8b8g8r8_uint_description
00000000009ec7c0 00000000000000d8 D util_format_a8b8g8r8_unorm_description
00000000009ec898 00000000000000d8 D util_format_a8b8g8r8_uscaled_description
00000000009ec970 00000000000000d8 D util_format_a8r8_unorm_description
00000000009eca48 00000000000000d8 D util_format_a8r8g8b8_srgb_description
00000000009ecb20 00000000000000d8 D util_format_a8r8g8b8_uint_description
00000000009ecbf8 00000000000000d8 D util_format_a8r8g8b8_unorm_description
00000000009eccd0 00000000000000d8 D util_format_astc_10x10_description
00000000009ecda8 00000000000000d8 D util_format_astc_10x10_srgb_description
00000000009ece80 00000000000000d8 D util_format_astc_10x5_description
00000000009ecf58 00000000000000d8 D util_format_astc_10x5_srgb_description
00000000009ed030 00000000000000d8 D util_format_astc_10x6_description
00000000009ed108 00000000000000d8 D util_format_astc_10x6_srgb_description
00000000009ed1e0 00000000000000d8 D util_format_astc_10x8_description
00000000009ed2b8 00000000000000d8 D util_format_astc_10x8_srgb_description
00000000009ed390 00000000000000d8 D util_format_astc_12x10_description
00000000009ed468 00000000000000d8 D util_format_astc_12x10_srgb_description
00000000009ed540 00000000000000d8 D util_format_astc_12x12_description
00000000009ed618 00000000000000d8 D util_format_astc_12x12_srgb_description
00000000009ed6f0 00000000000000d8 D util_format_astc_3x3x3_description
00000000009ed7c8 00000000000000d8 D util_format_astc_3x3x3_srgb_description
00000000009ed8a0 00000000000000d8 D util_format_astc_4x3x3_description
00000000009ed978 00000000000000d8 D util_format_astc_4x3x3_srgb_description
00000000009eda50 00000000000000d8 D util_format_astc_4x4_description
00000000009edb28 00000000000000d8 D util_format_astc_4x4_srgb_description
00000000009edc00 00000000000000d8 D util_format_astc_4x4x3_description
00000000009edcd8 00000000000000d8 D util_format_astc_4x4x3_srgb_description
00000000009eddb0 00000000000000d8 D util_format_astc_4x4x4_description
00000000009ede88 00000000000000d8 D util_format_astc_4x4x4_srgb_description
00000000009edf60 00000000000000d8 D util_format_astc_5x4_description
00000000009ee038 00000000000000d8 D util_format_astc_5x4_srgb_description
00000000009ee110 00000000000000d8 D util_format_astc_5x4x4_description
00000000009ee1e8 00000000000000d8 D util_format_astc_5x4x4_srgb_description
00000000009ee2c0 00000000000000d8 D util_format_astc_5x5_description
00000000009ee398 00000000000000d8 D util_format_astc_5x5_srgb_description
00000000009ee470 00000000000000d8 D util_format_astc_5x5x4_description
00000000009ee548 00000000000000d8 D util_format_astc_5x5x4_srgb_description
00000000009ee620 00000000000000d8 D util_format_astc_5x5x5_description
00000000009ee6f8 00000000000000d8 D util_format_astc_5x5x5_srgb_description
00000000009ee7d0 00000000000000d8 D util_format_astc_6x5_description
00000000009ee8a8 00000000000000d8 D util_format_astc_6x5_srgb_description
00000000009ee980 00000000000000d8 D util_format_astc_6x5x5_description
00000000009eea58 00000000000000d8 D util_format_astc_6x5x5_srgb_description
00000000009eeb30 00000000000000d8 D util_format_astc_6x6_description
00000000009eec08 00000000000000d8 D util_format_astc_6x6_srgb_description
00000000009eece0 00000000000000d8 D util_format_astc_6x6x5_description
00000000009eedb8 00000000000000d8 D util_format_astc_6x6x5_srgb_description
00000000009eee90 00000000000000d8 D util_format_astc_6x6x6_description
00000000009eef68 00000000000000d8 D util_format_astc_6x6x6_srgb_description
00000000009ef040 00000000000000d8 D util_format_astc_8x5_description
00000000009ef118 00000000000000d8 D util_format_astc_8x5_srgb_description
00000000009ef1f0 00000000000000d8 D util_format_astc_8x6_description
00000000009ef2c8 00000000000000d8 D util_format_astc_8x6_srgb_description
00000000009ef3a0 00000000000000d8 D util_format_astc_8x8_description
00000000009ef478 00000000000000d8 D util_format_astc_8x8_srgb_description
00000000009ef550 00000000000000d8 D util_format_atc_rgb_description
00000000009ef628 00000000000000d8 D util_format_atc_rgba_explicit_description
00000000009ef700 00000000000000d8 D util_format_atc_rgba_interpolated_description
00000000009ef7d8 00000000000000d8 D util_format_b10g10r10a2_sint_description
00000000009ef8b0 00000000000000d8 D util_format_b10g10r10a2_snorm_description
00000000009ef988 00000000000000d8 D util_format_b10g10r10a2_sscaled_description
00000000009efa60 00000000000000d8 D util_format_b10g10r10a2_uint_description
00000000009efb38 00000000000000d8 D util_format_b10g10r10a2_unorm_description
00000000009efc10 00000000000000d8 D util_format_b10g10r10a2_uscaled_description
00000000009efce8 00000000000000d8 D util_format_b10g10r10x2_unorm_description
00000000009efdc0 00000000000000d8 D util_format_b2g3r3_uint_description
00000000009efe98 00000000000000d8 D util_format_b2g3r3_unorm_description
00000000009eff70 00000000000000d8 D util_format_b4g4r4a4_uint_description
00000000009f0048 00000000000000d8 D util_format_b4g4r4a4_unorm_description
00000000009f0120 00000000000000d8 D util_format_b4g4r4x4_unorm_description
00000000009f01f8 00000000000000d8 D util_format_b5g5r5a1_uint_description
00000000009f02d0 00000000000000d8 D util_format_b5g5r5a1_unorm_description
00000000009f03a8 00000000000000d8 D util_format_b5g5r5x1_unorm_description
00000000009f0480 00000000000000d8 D util_format_b5g6r5_srgb_description
00000000009f0558 00000000000000d8 D util_format_b5g6r5_uint_description
00000000009f0630 00000000000000d8 D util_format_b5g6r5_unorm_description
00000000009f0708 00000000000000d8 D util_format_b8g8r8_sint_description
00000000009f07e0 00000000000000d8 D util_format_b8g8r8_snorm_description
00000000009f08b8 00000000000000d8 D util_format_b8g8r8_srgb_description
00000000009f0990 00000000000000d8 D util_format_b8g8r8_sscaled_description
00000000009f0a68 00000000000000d8 D util_format_b8g8r8_uint_description
00000000009f0b40 00000000000000d8 D util_format_b8g8r8_unorm_description
00000000009f0c18 00000000000000d8 D util_format_b8g8r8_uscaled_description
00000000009f0cf0 00000000000000d8 D util_format_b8g8r8a8_sint_description
00000000009f0dc8 00000000000000d8 D util_format_b8g8r8a8_snorm_description
00000000009f0ea0 00000000000000d8 D util_format_b8g8r8a8_srgb_description
00000000009f0f78 00000000000000d8 D util_format_b8g8r8a8_sscaled_description
00000000009f1050 00000000000000d8 D util_format_b8g8r8a8_uint_description
00000000009f1128 00000000000000d8 D util_format_b8g8r8a8_unorm_description
00000000009f1200 00000000000000d8 D util_format_b8g8r8a8_uscaled_description
00000000009f12d8 00000000000000d8 D util_format_b8g8r8x8_srgb_description
00000000009f13b0 00000000000000d8 D util_format_b8g8r8x8_unorm_description
00000000009f1488 00000000000000d8 D util_format_etc2_r11_snorm_description
00000000009f1560 00000000000000d8 D util_format_etc2_r11_unorm_description
00000000009f1638 00000000000000d8 D util_format_etc2_rg11_snorm_description
00000000009f1710 00000000000000d8 D util_format_etc2_rg11_unorm_description
00000000009f17e8 00000000000000d8 D util_format_etc2_rgb8_description
00000000009f18c0 00000000000000d8 D util_format_etc2_rgb8a1_description
00000000009f1998 00000000000000d8 D util_format_etc2_rgba8_description
00000000009f1a70 00000000000000d8 D util_format_etc2_srgb8_description
00000000009f1b48 00000000000000d8 D util_format_etc2_srgb8a1_description
00000000009f1c20 00000000000000d8 D util_format_etc2_srgba8_description
00000000009f1cf8 00000000000000d8 D util_format_fxt1_rgb_description
00000000009f1dd0 00000000000000d8 D util_format_fxt1_rgba_description
00000000009f1ea8 00000000000000d8 D util_format_g16r16_snorm_description
00000000009f1f80 00000000000000d8 D util_format_g16r16_unorm_description
00000000009f2058 00000000000000d8 D util_format_g8r8_sint_description
00000000009f2130 00000000000000d8 D util_format_g8r8_snorm_description
00000000009f2208 00000000000000d8 D util_format_g8r8_unorm_description
00000000009f22e0 00000000000000d8 D util_format_i16_float_description
00000000009f23b8 00000000000000d8 D util_format_i16_sint_description
00000000009f2490 00000000000000d8 D util_format_i16_snorm_description
00000000009f2568 00000000000000d8 D util_format_i16_uint_description
00000000009f2640 00000000000000d8 D util_format_i16_unorm_description
00000000009f2718 00000000000000d8 D util_format_i32_float_description
00000000009f27f0 00000000000000d8 D util_format_i32_sint_description
00000000009f28c8 00000000000000d8 D util_format_i32_uint_description
00000000009f29a0 00000000000000d8 D util_format_i8_sint_description
00000000009f2a78 00000000000000d8 D util_format_i8_snorm_description
00000000009f2b50 00000000000000d8 D util_format_i8_uint_description
00000000009f2c28 00000000000000d8 D util_format_i8_unorm_description
00000000009f2d00 00000000000000d8 D util_format_l16_float_description
00000000009f2dd8 00000000000000d8 D util_format_l16_sint_description
00000000009f2eb0 00000000000000d8 D util_format_l16_snorm_description
00000000009f2f88 00000000000000d8 D util_format_l16_uint_description
00000000009f3060 00000000000000d8 D util_format_l16_unorm_description
00000000009f3138 00000000000000d8 D util_format_l16a16_float_description
00000000009f3210 00000000000000d8 D util_format_l16a16_sint_description
00000000009f32e8 00000000000000d8 D util_format_l16a16_snorm_description
00000000009f33c0 00000000000000d8 D util_format_l16a16_uint_description
00000000009f3498 00000000000000d8 D util_format_l16a16_unorm_description
00000000009f3570 00000000000000d8 D util_format_l32_float_description
00000000009f3648 00000000000000d8 D util_format_l32_sint_description
00000000009f3720 00000000000000d8 D util_format_l32_uint_description
00000000009f37f8 00000000000000d8 D util_format_l32a32_float_description
00000000009f38d0 00000000000000d8 D util_format_l32a32_sint_description
00000000009f39a8 00000000000000d8 D util_format_l32a32_uint_description
00000000009f3a80 00000000000000d8 D util_format_l4a4_unorm_description
00000000009f3b58 00000000000000d8 D util_format_l8_sint_description
00000000009f3c30 00000000000000d8 D util_format_l8_snorm_description
00000000009f3d08 00000000000000d8 D util_format_l8_srgb_description
00000000009f3de0 00000000000000d8 D util_format_l8_uint_description
00000000009f3eb8 00000000000000d8 D util_format_l8_unorm_description
00000000009f3f90 00000000000000d8 D util_format_l8a8_sint_description
00000000009f4068 00000000000000d8 D util_format_l8a8_snorm_description
00000000009f4140 00000000000000d8 D util_format_l8a8_srgb_description
00000000009f4218 00000000000000d8 D util_format_l8a8_uint_description
00000000009f42f0 00000000000000d8 D util_format_l8a8_unorm_description
00000000009f43c8 00000000000000d8 D util_format_none_description
00000000009f44a0 00000000000000d8 D util_format_r10g10b10a2_sint_description
00000000009f4578 00000000000000d8 D util_format_r10g10b10a2_snorm_description
00000000009f4650 00000000000000d8 D util_format_r10g10b10a2_sscaled_description
00000000009f4728 00000000000000d8 D util_format_r10g10b10a2_uint_description
00000000009f4800 00000000000000d8 D util_format_r10g10b10a2_unorm_description
00000000009f48d8 00000000000000d8 D util_format_r10g10b10a2_uscaled_description
00000000009f49b0 00000000000000d8 D util_format_r10g10b10x2_snorm_description
00000000009f4a88 00000000000000d8 D util_format_r10g10b10x2_unorm_description
00000000009f4b60 00000000000000d8 D util_format_r10g10b10x2_uscaled_description
00000000009f4c38 00000000000000d8 D util_format_r10sg10sb10sa2u_norm_description
00000000009f4d10 00000000000000d8 D util_format_r16_float_description
00000000009f4de8 00000000000000d8 D util_format_r16_sint_description
00000000009f4ec0 00000000000000d8 D util_format_r16_snorm_description
00000000009f4f98 00000000000000d8 D util_format_r16_sscaled_description
00000000009f5070 00000000000000d8 D util_format_r16_uint_description
00000000009f5148 00000000000000d8 D util_format_r16_unorm_description
00000000009f5220 00000000000000d8 D util_format_r16_uscaled_description
00000000009f52f8 00000000000000d8 D util_format_r16a16_float_description
00000000009f53d0 00000000000000d8 D util_format_r16a16_sint_description
00000000009f54a8 00000000000000d8 D util_format_r16a16_snorm_description
00000000009f5580 00000000000000d8 D util_format_r16a16_uint_description
00000000009f5658 00000000000000d8 D util_format_r16a16_unorm_description
00000000009f5730 00000000000000d8 D util_format_r16g16_float_description
00000000009f5808 00000000000000d8 D util_format_r16g16_sint_description
00000000009f58e0 00000000000000d8 D util_format_r16g16_snorm_description
00000000009f59b8 00000000000000d8 D util_format_r16g16_sscaled_description
00000000009f5a90 00000000000000d8 D util_format_r16g16_uint_description
00000000009f5b68 00000000000000d8 D util_format_r16g16_unorm_description
00000000009f5c40 00000000000000d8 D util_format_r16g16_uscaled_description
00000000009f5d18 00000000000000d8 D util_format_r16g16b16_float_description
00000000009f5df0 00000000000000d8 D util_format_r16g16b16_sint_description
00000000009f5ec8 00000000000000d8 D util_format_r16g16b16_snorm_description
00000000009f5fa0 00000000000000d8 D util_format_r16g16b16_sscaled_description
00000000009f6078 00000000000000d8 D util_format_r16g16b16_uint_description
00000000009f6150 00000000000000d8 D util_format_r16g16b16_unorm_description
00000000009f6228 00000000000000d8 D util_format_r16g16b16_uscaled_description
00000000009f6300 00000000000000d8 D util_format_r16g16b16a16_float_description
00000000009f63d8 00000000000000d8 D util_format_r16g16b16a16_sint_description
00000000009f64b0 00000000000000d8 D util_format_r16g16b16a16_snorm_description
00000000009f6588 00000000000000d8 D util_format_r16g16b16a16_sscaled_description
00000000009f6660 00000000000000d8 D util_format_r16g16b16a16_uint_description
00000000009f6738 00000000000000d8 D util_format_r16g16b16a16_unorm_description
00000000009f6810 00000000000000d8 D util_format_r16g16b16a16_uscaled_description
00000000009f68e8 00000000000000d8 D util_format_r16g16b16x16_float_description
00000000009f69c0 00000000000000d8 D util_format_r16g16b16x16_sint_description
00000000009f6a98 00000000000000d8 D util_format_r16g16b16x16_snorm_description
00000000009f6b70 00000000000000d8 D util_format_r16g16b16x16_uint_description
00000000009f6c48 00000000000000d8 D util_format_r16g16b16x16_unorm_description
00000000009f6d20 00000000000000d8 D util_format_r32_fixed_description
00000000009f6df8 00000000000000d8 D util_format_r32_float_description
00000000009f6ed0 00000000000000d8 D util_format_r32_sint_description
00000000009f6fa8 00000000000000d8 D util_format_r32_snorm_description
00000000009f7080 00000000000000d8 D util_format_r32_sscaled_description
00000000009f7158 00000000000000d8 D util_format_r32_uint_description
00000000009f7230 00000000000000d8 D util_format_r32_unorm_description
00000000009f7308 00000000000000d8 D util_format_r32_uscaled_description
00000000009f73e0 00000000000000d8 D util_format_r32a32_float_description
00000000009f74b8 00000000000000d8 D util_format_r32a32_sint_description
00000000009f7590 00000000000000d8 D util_format_r32a32_uint_description
00000000009f7668 00000000000000d8 D util_format_r32g32_fixed_description
00000000009f7740 00000000000000d8 D util_format_r32g32_float_description
00000000009f7818 00000000000000d8 D util_format_r32g32_sint_description
00000000009f78f0 00000000000000d8 D util_format_r32g32_snorm_description
00000000009f79c8 00000000000000d8 D util_format_r32g32_sscaled_description
00000000009f7aa0 00000000000000d8 D util_format_r32g32_uint_description
00000000009f7b78 00000000000000d8 D util_format_r32g32_unorm_description
00000000009f7c50 00000000000000d8 D util_format_r32g32_uscaled_description
00000000009f7d28 00000000000000d8 D util_format_r32g32b32_fixed_description
00000000009f7e00 00000000000000d8 D util_format_r32g32b32_float_description
00000000009f7ed8 00000000000000d8 D util_format_r32g32b32_sint_description
00000000009f7fb0 00000000000000d8 D util_format_r32g32b32_snorm_description
00000000009f8088 00000000000000d8 D util_format_r32g32b32_sscaled_description
00000000009f8160 00000000000000d8 D util_format_r32g32b32_uint_description
00000000009f8238 00000000000000d8 D util_format_r32g32b32_unorm_description
00000000009f8310 00000000000000d8 D util_format_r32g32b32_uscaled_description
00000000009f83e8 00000000000000d8 D util_format_r32g32b32a32_fixed_description
00000000009f84c0 00000000000000d8 D util_format_r32g32b32a32_float_description
00000000009f8598 00000000000000d8 D util_format_r32g32b32a32_sint_description
00000000009f8670 00000000000000d8 D util_format_r32g32b32a32_snorm_description
00000000009f8748 00000000000000d8 D util_format_r32g32b32a32_sscaled_description
00000000009f8820 00000000000000d8 D util_format_r32g32b32a32_uint_description
00000000009f88f8 00000000000000d8 D util_format_r32g32b32a32_unorm_description
00000000009f89d0 00000000000000d8 D util_format_r32g32b32a32_uscaled_description
00000000009f8aa8 00000000000000d8 D util_format_r32g32b32x32_float_description
00000000009f8b80 00000000000000d8 D util_format_r32g32b32x32_sint_description
00000000009f8c58 00000000000000d8 D util_format_r32g32b32x32_uint_description
00000000009f8d30 00000000000000d8 D util_format_r3g3b2_uint_description
00000000009f8e08 00000000000000d8 D util_format_r3g3b2_unorm_description
00000000009f8ee0 00000000000000d8 D util_format_r4a4_unorm_description
00000000009f8fb8 00000000000000d8 D util_format_r4g4b4a4_uint_description
00000000009f9090 00000000000000d8 D util_format_r4g4b4a4_unorm_description
00000000009f9168 00000000000000d8 D util_format_r5g5b5a1_uint_description
00000000009f9240 00000000000000d8 D util_format_r5g5b5a1_unorm_description
00000000009f9318 00000000000000d8 D util_format_r5g6b5_uint_description
00000000009f93f0 00000000000000d8 D util_format_r5g6b5_unorm_description
00000000009f94c8 00000000000000d8 D util_format_r5sg5sb6u_norm_description
00000000009f95a0 00000000000000d8 D util_format_r64_float_description
00000000009f9678 00000000000000d8 D util_format_r64g64_float_description
00000000009f9750 00000000000000d8 D util_format_r64g64b64_float_description
00000000009f9828 00000000000000d8 D util_format_r64g64b64a64_float_description
00000000009f9900 00000000000000d8 D util_format_r8_sint_description
00000000009f99d8 00000000000000d8 D util_format_r8_snorm_description
00000000009f9ab0 00000000000000d8 D util_format_r8_srgb_description
00000000009f9b88 00000000000000d8 D util_format_r8_sscaled_description
00000000009f9c60 00000000000000d8 D util_format_r8_uint_description
00000000009f9d38 00000000000000d8 D util_format_r8_unorm_description
00000000009f9e10 00000000000000d8 D util_format_r8_uscaled_description
00000000009f9ee8 00000000000000d8 D util_format_r8a8_sint_description
00000000009f9fc0 00000000000000d8 D util_format_r8a8_snorm_description
00000000009fa098 00000000000000d8 D util_format_r8a8_uint_description
00000000009fa170 00000000000000d8 D util_format_r8a8_unorm_description
00000000009fa248 00000000000000d8 D util_format_r8g8_sint_description
00000000009fa320 00000000000000d8 D util_format_r8g8_snorm_description
00000000009fa3f8 00000000000000d8 D util_format_r8g8_srgb_description
00000000009fa4d0 00000000000000d8 D util_format_r8g8_sscaled_description
00000000009fa5a8 00000000000000d8 D util_format_r8g8_uint_description
00000000009fa680 00000000000000d8 D util_format_r8g8_unorm_description
00000000009fa758 00000000000000d8 D util_format_r8g8_uscaled_description
00000000009fa830 00000000000000d8 D util_format_r8g8b8_sint_description
00000000009fa908 00000000000000d8 D util_format_r8g8b8_snorm_description
00000000009fa9e0 00000000000000d8 D util_format_r8g8b8_srgb_description
00000000009faab8 00000000000000d8 D util_format_r8g8b8_sscaled_description
00000000009fab90 00000000000000d8 D util_format_r8g8b8_uint_description
00000000009fac68 00000000000000d8 D util_format_r8g8b8_unorm_description
00000000009fad40 00000000000000d8 D util_format_r8g8b8_uscaled_description
00000000009fae18 00000000000000d8 D util_format_r8g8b8a8_sint_description
00000000009faef0 00000000000000d8 D util_format_r8g8b8a8_snorm_description
00000000009fafc8 00000000000000d8 D util_format_r8g8b8a8_srgb_description
00000000009fb0a0 00000000000000d8 D util_format_r8g8b8a8_sscaled_description
00000000009fb178 00000000000000d8 D util_format_r8g8b8a8_uint_description
00000000009fb250 00000000000000d8 D util_format_r8g8b8a8_unorm_description
00000000009fb328 00000000000000d8 D util_format_r8g8b8a8_uscaled_description
00000000009fb400 00000000000000d8 D util_format_r8g8b8x8_sint_description
00000000009fb4d8 00000000000000d8 D util_format_r8g8b8x8_snorm_description
00000000009fb5b0 00000000000000d8 D util_format_r8g8b8x8_srgb_description
00000000009fb688 00000000000000d8 D util_format_r8g8b8x8_uint_description
00000000009fb760 00000000000000d8 D util_format_r8g8b8x8_unorm_description
00000000009fb838 00000000000000d8 D util_format_r8sg8sb8ux8u_norm_description
00000000009fb910 00000000000000d8 D util_format_x1b5g5r5_unorm_description
00000000009fb9e8 00000000000000d8 D util_format_x8b8g8r8_sint_description
00000000009fbac0 00000000000000d8 D util_format_x8b8g8r8_snorm_description
00000000009fbb98 00000000000000d8 D util_format_x8b8g8r8_srgb_description
00000000009fbc70 00000000000000d8 D util_format_x8b8g8r8_unorm_description
00000000009fbd48 00000000000000d8 D util_format_x8r8g8b8_srgb_description
00000000009fbe20 00000000000000d8 D util_format_x8r8g8b8_unorm_description
00000000009fbef8 00000000000000d8 D util_format_z24_unorm_s8_uint_as_r8g8b8a8_description
00000000009fbfd0 0000000000002ac0 D _mesa_extension_table
00000000009fea90 0000000000005240 d format_info
0000000000a03cd0 0000000000000028 d weights.3
0000000000a03cf8 0000000000000040 d decode_1.0
0000000000a03d38 0000000000000038 d inv_mat_tab
0000000000a03d70 0000000000000020 d vert_attrfunc
0000000000a03d90 0000000000000088 d prim_names
0000000000a03e18 0000000000000180 d st_debug_flags
0000000000a03f98 0000000000001220 d _mesa_glsl_supported_extensions
0000000000a051b8 0000000000000060 d tex_opcode_strs
0000000000a05218 00000000000004c8 D ir_expression_operation_strings
0000000000a056e0 0000000000000140 V vtable for ir_hierarchical_visitor
0000000000a05820 00000000000000d0 V vtable for ir_print_visitor
0000000000a058f0 0000000000000048 V vtable for parcel_out_uniform_storage
0000000000a05938 0000000000000038 d vtable for (anonymous namespace)::count_uniform_size
0000000000a05970 00000000000000d0 d vtable for (anonymous namespace)::ir_lower_jumps_visitor
0000000000a05a40 0000000000000890 d yytname
0000000000a062d0 0000000000000018 d _mesa_glsl_parse(_mesa_glsl_parse_state*)::local_size_qualifiers
0000000000a062e8 0000000000000070 d _mesa_glsl_parse(_mesa_glsl_parse_state*)::map
0000000000a06358 0000000000000580 d _mesa_glsl_parse(_mesa_glsl_parse_state*)::map
0000000000a068d8 0000000000000030 d _mesa_glsl_parse(_mesa_glsl_parse_state*)::map
0000000000a06908 0000000000000100 d _mesa_glsl_parse(_mesa_glsl_parse_state*)::map
0000000000a06a08 00000000000002b8 d yytname
0000000000a06cc0 0000000000000008 D glsl_type::bvec2_type
0000000000a06cc8 0000000000000008 D glsl_type::bvec3_type
0000000000a06cd0 0000000000000008 D glsl_type::bvec4_type
0000000000a06cd8 0000000000000008 D glsl_type::dmat2_type
0000000000a06ce0 0000000000000008 D glsl_type::dmat3_type
0000000000a06ce8 0000000000000008 D glsl_type::dmat4_type
0000000000a06cf0 0000000000000008 D glsl_type::dvec2_type
0000000000a06cf8 0000000000000008 D glsl_type::dvec3_type
0000000000a06d00 0000000000000008 D glsl_type::dvec4_type
0000000000a06d08 0000000000000008 D glsl_type::error_type
0000000000a06d10 0000000000000008 D glsl_type::float_type
0000000000a06d18 0000000000000008 D glsl_type::ivec2_type
0000000000a06d20 0000000000000008 D glsl_type::ivec3_type
0000000000a06d28 0000000000000008 D glsl_type::ivec4_type
0000000000a06d30 0000000000000008 D glsl_type::uvec2_type
0000000000a06d38 0000000000000008 D glsl_type::uvec3_type
0000000000a06d40 0000000000000008 D glsl_type::uvec4_type
0000000000a06d48 0000000000000008 D glsl_type::double_type
0000000000a06d50 0000000000000008 D glsl_type::mat2x3_type
0000000000a06d58 0000000000000008 D glsl_type::mat2x4_type
0000000000a06d60 0000000000000008 D glsl_type::mat3x2_type
0000000000a06d68 0000000000000008 D glsl_type::mat3x4_type
0000000000a06d70 0000000000000008 D glsl_type::mat4x2_type
0000000000a06d78 0000000000000008 D glsl_type::mat4x3_type
0000000000a06d80 0000000000000008 D glsl_type::dmat2x3_type
0000000000a06d88 0000000000000008 D glsl_type::dmat2x4_type
0000000000a06d90 0000000000000008 D glsl_type::dmat3x2_type
0000000000a06d98 0000000000000008 D glsl_type::dmat3x4_type
0000000000a06da0 0000000000000008 D glsl_type::dmat4x2_type
0000000000a06da8 0000000000000008 D glsl_type::dmat4x3_type
0000000000a06db0 0000000000000008 D glsl_type::i64vec2_type
0000000000a06db8 0000000000000008 D glsl_type::i64vec3_type
0000000000a06dc0 0000000000000008 D glsl_type::i64vec4_type
0000000000a06dc8 0000000000000008 D glsl_type::image1D_type
0000000000a06dd0 0000000000000008 D glsl_type::image2D_type
0000000000a06dd8 0000000000000008 D glsl_type::image3D_type
0000000000a06de0 0000000000000008 D glsl_type::int64_t_type
0000000000a06de8 0000000000000008 D glsl_type::u64vec2_type
0000000000a06df0 0000000000000008 D glsl_type::u64vec3_type
0000000000a06df8 0000000000000008 D glsl_type::u64vec4_type
0000000000a06e00 0000000000000008 D glsl_type::iimage1D_type
0000000000a06e08 0000000000000008 D glsl_type::iimage2D_type
0000000000a06e10 0000000000000008 D glsl_type::iimage3D_type
0000000000a06e18 0000000000000008 D glsl_type::uimage1D_type
0000000000a06e20 0000000000000008 D glsl_type::uimage2D_type
0000000000a06e28 0000000000000008 D glsl_type::uimage3D_type
0000000000a06e30 0000000000000008 D glsl_type::uint64_t_type
0000000000a06e38 0000000000000008 D glsl_type::image2DMS_type
0000000000a06e40 0000000000000008 D glsl_type::imageCube_type
0000000000a06e48 0000000000000008 D glsl_type::sampler1D_type
0000000000a06e50 0000000000000008 D glsl_type::sampler2D_type
0000000000a06e58 0000000000000008 D glsl_type::sampler3D_type
0000000000a06e60 0000000000000008 D glsl_type::iimage2DMS_type
0000000000a06e68 0000000000000008 D glsl_type::iimageCube_type
0000000000a06e70 0000000000000008 D glsl_type::isampler1D_type
0000000000a06e78 0000000000000008 D glsl_type::isampler2D_type
0000000000a06e80 0000000000000008 D glsl_type::isampler3D_type
0000000000a06e88 0000000000000008 D glsl_type::uimage2DMS_type
0000000000a06e90 0000000000000008 D glsl_type::uimageCube_type
0000000000a06e98 0000000000000008 D glsl_type::usampler1D_type
0000000000a06ea0 0000000000000008 D glsl_type::usampler2D_type
0000000000a06ea8 0000000000000008 D glsl_type::usampler3D_type
0000000000a06eb0 0000000000000008 D glsl_type::atomic_uint_type
0000000000a06eb8 0000000000000008 D glsl_type::image2DRect_type
0000000000a06ec0 0000000000000008 D glsl_type::imageBuffer_type
0000000000a06ec8 0000000000000008 D glsl_type::sampler2DMS_type
0000000000a06ed0 0000000000000008 D glsl_type::samplerCube_type
0000000000a06ed8 0000000000000008 D glsl_type::iimage2DRect_type
0000000000a06ee0 0000000000000008 D glsl_type::iimageBuffer_type
0000000000a06ee8 0000000000000008 D glsl_type::image1DArray_type
0000000000a06ef0 0000000000000008 D glsl_type::image2DArray_type
0000000000a06ef8 0000000000000008 D glsl_type::isampler2DMS_type
0000000000a06f00 0000000000000008 D glsl_type::isamplerCube_type
0000000000a06f08 0000000000000008 D glsl_type::uimage2DRect_type
0000000000a06f10 0000000000000008 D glsl_type::uimageBuffer_type
0000000000a06f18 0000000000000008 D glsl_type::usampler2DMS_type
0000000000a06f20 0000000000000008 D glsl_type::usamplerCube_type
0000000000a06f28 0000000000000008 D glsl_type::iimage1DArray_type
0000000000a06f30 0000000000000008 D glsl_type::iimage2DArray_type
0000000000a06f38 0000000000000008 D glsl_type::sampler2DRect_type
0000000000a06f40 0000000000000008 D glsl_type::samplerBuffer_type
0000000000a06f48 0000000000000008 D glsl_type::uimage1DArray_type
0000000000a06f50 0000000000000008 D glsl_type::uimage2DArray_type
0000000000a06f58 0000000000000008 D glsl_type::image2DMSArray_type
0000000000a06f60 0000000000000008 D glsl_type::imageCubeArray_type
0000000000a06f68 0000000000000008 D glsl_type::isampler2DRect_type
0000000000a06f70 0000000000000008 D glsl_type::isamplerBuffer_type
0000000000a06f78 0000000000000008 D glsl_type::sampler1DArray_type
0000000000a06f80 0000000000000008 D glsl_type::sampler2DArray_type
0000000000a06f88 0000000000000008 D glsl_type::usampler2DRect_type
0000000000a06f90 0000000000000008 D glsl_type::usamplerBuffer_type
0000000000a06f98 0000000000000008 D glsl_type::iimage2DMSArray_type
0000000000a06fa0 0000000000000008 D glsl_type::iimageCubeArray_type
0000000000a06fa8 0000000000000008 D glsl_type::isampler1DArray_type
0000000000a06fb0 0000000000000008 D glsl_type::isampler2DArray_type
0000000000a06fb8 0000000000000008 D glsl_type::sampler1DShadow_type
0000000000a06fc0 0000000000000008 D glsl_type::sampler2DShadow_type
0000000000a06fc8 0000000000000008 D glsl_type::uimage2DMSArray_type
0000000000a06fd0 0000000000000008 D glsl_type::uimageCubeArray_type
0000000000a06fd8 0000000000000008 D glsl_type::usampler1DArray_type
0000000000a06fe0 0000000000000008 D glsl_type::usampler2DArray_type
0000000000a06fe8 0000000000000008 D glsl_type::sampler2DMSArray_type
0000000000a06ff0 0000000000000008 D glsl_type::samplerCubeArray_type
0000000000a06ff8 0000000000000008 D glsl_type::isampler2DMSArray_type
0000000000a07000 0000000000000008 D glsl_type::isamplerCubeArray_type
0000000000a07008 0000000000000008 D glsl_type::samplerCubeShadow_type
0000000000a07010 0000000000000008 D glsl_type::usampler2DMSArray_type
0000000000a07018 0000000000000008 D glsl_type::usamplerCubeArray_type
0000000000a07020 0000000000000008 D glsl_type::samplerExternalOES_type
0000000000a07028 0000000000000008 D glsl_type::sampler2DRectShadow_type
0000000000a07030 0000000000000008 D glsl_type::sampler1DArrayShadow_type
0000000000a07038 0000000000000008 D glsl_type::sampler2DArrayShadow_type
0000000000a07040 0000000000000008 D glsl_type::samplerCubeArrayShadow_type
0000000000a07048 0000000000000008 D glsl_type::int_type
0000000000a07050 0000000000000008 D glsl_type::bool_type
0000000000a07058 0000000000000008 D glsl_type::mat2_type
0000000000a07060 0000000000000008 D glsl_type::mat3_type
0000000000a07068 0000000000000008 D glsl_type::mat4_type
0000000000a07070 0000000000000008 D glsl_type::uint_type
0000000000a07078 0000000000000008 D glsl_type::vec2_type
0000000000a07080 0000000000000008 D glsl_type::vec3_type
0000000000a07088 0000000000000008 D glsl_type::vec4_type
0000000000a07090 0000000000000008 D glsl_type::void_type
0000000000a07098 00000000000007e0 d opcode_names
0000000000a07878 0000000000000078 d tgsi_file_names
0000000000a078f0 0000000000000168 d names.0
0000000000a07a58 0000000000000028 d hw_query_funcs
0000000000a07a80 0000000000000020 d hw_metric_query_funcs
0000000000a07aa0 0000000000000180 d nvc0_hw_metric_queries
0000000000a07c20 0000000000000020 d hw_sm_query_funcs
0000000000a07c40 0000000000000648 d nvc0_hw_sm_queries
0000000000a08288 0000000000000028 d weights.3
0000000000a082b0 0000000000000200 d fragAttribs.7
0000000000a084b0 0000000000000060 d fragResults.1
0000000000a08510 0000000000000100 d vertAttribs.8
0000000000a08610 0000000000000200 d vertResults.2
0000000000a08810 0000000000000400 d AttribFuncsARB
0000000000a08c10 0000000000000200 d AttribFuncsNV
0000000000a08e10 0000000000000038 d table_set
0000000000a08e48 0000000000003d38 d values
0000000000a0cb80 0000000000000120 d inst_desc
0000000000a0cca0 00000000000000d0 V vtable for glsl_to_tgsi_visitor
0000000000a0cd70 0000000000000140 d ast_expression::operator_string(ast_operators)::operators
0000000000a0ceb0 0000000000000020 d get_type_name_for_precision_qualifier(glsl_type const*)::names
0000000000a0ced0 0000000000000040 d get_type_name_for_precision_qualifier(glsl_type const*)::names
0000000000a0cf10 0000000000000040 d get_type_name_for_precision_qualifier(glsl_type const*)::names
0000000000a0cf50 0000000000000040 d get_type_name_for_precision_qualifier(glsl_type const*)::names
0000000000a0cf90 0000000000000020 d get_type_name_for_precision_qualifier(glsl_type const*)::names
0000000000a0cfb0 0000000000000020 d get_type_name_for_precision_qualifier(glsl_type const*)::names
0000000000a0cfd0 0000000000000040 d get_type_name_for_precision_qualifier(glsl_type const*)::names
0000000000a0d010 0000000000000020 d get_type_name_for_precision_qualifier(glsl_type const*)::names
0000000000a0d030 0000000000000020 d get_type_name_for_precision_qualifier(glsl_type const*)::names
0000000000a0d050 0000000000000040 d get_type_name_for_precision_qualifier(glsl_type const*)::names
0000000000a0d090 0000000000000040 d get_type_name_for_precision_qualifier(glsl_type const*)::names
0000000000a0d0d0 0000000000000040 d get_type_name_for_precision_qualifier(glsl_type const*)::names
0000000000a0d110 0000000000000020 d get_type_name_for_precision_qualifier(glsl_type const*)::names
0000000000a0d130 0000000000000020 d get_type_name_for_precision_qualifier(glsl_type const*)::names
0000000000a0d150 0000000000000040 d get_type_name_for_precision_qualifier(glsl_type const*)::names
0000000000a0d190 0000000000000020 d get_type_name_for_precision_qualifier(glsl_type const*)::names
0000000000a0d1b0 0000000000000040 d get_type_name_for_precision_qualifier(glsl_type const*)::names
0000000000a0d1f0 0000000000000040 d get_type_name_for_precision_qualifier(glsl_type const*)::names
0000000000a0d230 0000000000000040 d get_type_name_for_precision_qualifier(glsl_type const*)::names
0000000000a0d270 0000000000000020 d get_type_name_for_precision_qualifier(glsl_type const*)::names
0000000000a0d290 0000000000000020 d get_type_name_for_precision_qualifier(glsl_type const*)::names
0000000000a0d2b0 0000000000000040 d get_type_name_for_precision_qualifier(glsl_type const*)::names
0000000000a0d2f0 0000000000000020 d ast_declarator_list::hir(exec_list*, _mesa_glsl_parse_state*)::precision_names
0000000000a0d310 0000000000000038 d deprecated_types
0000000000a0d348 0000000000000078 d gl_Fog_elements
0000000000a0d3c0 00000000000000a8 d gl_Point_elements
0000000000a0d468 0000000000000048 d gl_DepthRange_elements
0000000000a0d4b0 0000000000000018 d gl_LightModel_elements
0000000000a0d4c8 0000000000000120 d gl_LightSource_elements
0000000000a0d5e8 0000000000000078 d gl_BackMaterial_elements
0000000000a0d660 0000000000000078 d gl_FrontMaterial_elements
0000000000a0d6d8 0000000000000420 d _mesa_builtin_uniform_desc
0000000000a0daf8 0000000000000048 d gl_BackLightProduct_elements
0000000000a0db40 0000000000000048 d gl_FrontLightProduct_elements
0000000000a0db88 0000000000000018 d gl_BackLightModelProduct_elements
0000000000a0dba0 0000000000000018 d gl_FrontLightModelProduct_elements
0000000000a0dbb8 0000000000000028 V vtable for nv50_ir::Instruction
0000000000a0dbe0 0000000000000028 V vtable for nv50_ir::TexInstruction
0000000000a0dc08 0000000000000028 V vtable for nv50_ir::CmpInstruction
0000000000a0dc30 0000000000000028 V vtable for nv50_ir::FlowInstruction
0000000000a0dc58 0000000000000020 V vtable for nv50_ir::DeepClonePolicy<nv50_ir::Function>
0000000000a0dc78 0000000000000028 d vtable for (anonymous namespace)::Converter::BindArgumentsPass
0000000000a0dca0 0000000000000020 V vtable for nv50_ir::Graph
0000000000a0dcc0 0000000000000040 V vtable for nv50_ir::DFSIterator
0000000000a0dd00 0000000000000040 V vtable for nv50_ir::CFGIterator
0000000000a0dd40 0000000000000028 V vtable for nv50_ir::CopyPropagation
0000000000a0dd68 0000000000000028 V vtable for nv50_ir::MergeSplits
0000000000a0dd90 0000000000000028 V vtable for nv50_ir::LoadPropagation
0000000000a0ddb8 0000000000000028 V vtable for nv50_ir::IndirectPropagation
0000000000a0dde0 0000000000000028 V vtable for nv50_ir::ConstantFolding
0000000000a0de08 0000000000000028 V vtable for nv50_ir::ModifierFolding
0000000000a0de30 0000000000000028 V vtable for nv50_ir::AlgebraicOpt
0000000000a0de58 0000000000000028 V vtable for nv50_ir::LateAlgebraicOpt
0000000000a0de80 0000000000000028 V vtable for nv50_ir::Split64BitOpPreRA
0000000000a0dea8 0000000000000028 V vtable for nv50_ir::MemoryOpt
0000000000a0ded0 0000000000000028 V vtable for nv50_ir::FlatteningPass
0000000000a0def8 0000000000000028 V vtable for nv50_ir::PostRaLoadPropagation
0000000000a0df20 0000000000000028 V vtable for nv50_ir::GlobalCSE
0000000000a0df48 0000000000000028 V vtable for nv50_ir::LocalCSE
0000000000a0df70 0000000000000028 V vtable for nv50_ir::DeadCodeElim
0000000000a0df98 0000000000000020 V vtable for nv50_ir::ShallowClonePolicy<nv50_ir::Function>
0000000000a0dfb8 0000000000000030 d nv50_ir::pixldOpStr
0000000000a0dfe8 0000000000000010 d nv50_ir::subfmOpStr
0000000000a0dff8 0000000000000080 d nv50_ir::texMaskStr
0000000000a0e078 00000000000000c0 d nv50_ir::CondCodeStr
0000000000a0e138 0000000000000070 d nv50_ir::DataTypeStr
0000000000a0e1a8 0000000000000170 d nv50_ir::SemanticStr
0000000000a0e318 0000000000000010 d nv50_ir::rcprsqOpStr
0000000000a0e328 0000000000000040 d nv50_ir::RoundModeStr
0000000000a0e368 0000000000000050 d nv50_ir::atomSubOpStr
0000000000a0e3b8 0000000000000018 d nv50_ir::ldstSubOpStr
0000000000a0e3d0 0000000000000020 d nv50_ir::gatherCompStr
0000000000a0e3f0 0000000000000020 d nv50_ir::xmadOpCModeStr
0000000000a0e410 0000000000000028 d nv50_ir::barOpStr
0000000000a0e438 0000000000000038 d nv50_ir::cctlOpStr
0000000000a0e470 0000000000000010 d nv50_ir::emitOpStr
0000000000a0e480 0000000000000080 d nv50_ir::interpStr
0000000000a0e500 0000000000000020 d nv50_ir::shflOpStr
0000000000a0e520 0000000000000028 V vtable for nv50_ir::RegAlloc::PhiMovesPass
0000000000a0e548 0000000000000028 V vtable for nv50_ir::RegAlloc::ArgumentMovesPass
0000000000a0e570 0000000000000028 V vtable for nv50_ir::RegAlloc::BuildIntervalsPass
0000000000a0e598 0000000000000028 V vtable for nv50_ir::RegAlloc::InsertConstraintsPass
0000000000a0e5c0 0000000000000020 V vtable for nv50_ir::DominatorTree
0000000000a0e5e0 0000000000000050 V vtable for nv50_ir::DLList::Iterator
0000000000a0e630 00000000000005a0 d InstInfo
0000000000a0ebd0 00000000000007e8 d yytname
0000000000a0f3b8 0000000000000078 d file_names
0000000000a0f430 0000000000000028 V vtable for nv50_ir::SchedDataCalculatorGM107
0000000000a0f458 0000000000000028 V vtable for nv50_ir::NVC0LegalizeSSA
0000000000a0f480 0000000000000028 V vtable for nv50_ir::NVC0LegalizePostRA
0000000000a0f4a8 0000000000000030 V vtable for nv50_ir::NVC0LoweringPass
0000000000a0f4d8 0000000000003a50 D table_noop_array
0000000000a12f28 0000000000003250 d public_entries
0000000000a16178 0000000000000030 d vtable for std::__facet_shims::(anonymous namespace)::money_get_shim<char>
0000000000a161a8 0000000000000030 d vtable for std::__facet_shims::(anonymous namespace)::money_put_shim<char>
0000000000a161d8 0000000000000038 d vtable for std::__facet_shims::(anonymous namespace)::messages_shim<char>
0000000000a16210 0000000000000030 d vtable for std::__facet_shims::(anonymous namespace)::money_get_shim<wchar_t>
0000000000a16240 0000000000000030 d vtable for std::__facet_shims::(anonymous namespace)::money_put_shim<wchar_t>
0000000000a16270 0000000000000038 d vtable for std::__facet_shims::(anonymous namespace)::messages_shim<wchar_t>
0000000000a162a8 0000000000000050 d vtable for std::__facet_shims::(anonymous namespace)::time_get_shim<char>
0000000000a162f8 0000000000000050 d vtable for std::__facet_shims::(anonymous namespace)::time_get_shim<wchar_t>
0000000000a16348 0000000000000030 d vtable for std::__facet_shims::(anonymous namespace)::money_get_shim<char>
0000000000a16378 0000000000000030 d vtable for std::__facet_shims::(anonymous namespace)::money_put_shim<char>
0000000000a163a8 0000000000000038 d vtable for std::__facet_shims::(anonymous namespace)::messages_shim<char>
0000000000a163e0 0000000000000030 d vtable for std::__facet_shims::(anonymous namespace)::money_get_shim<wchar_t>
0000000000a16410 0000000000000030 d vtable for std::__facet_shims::(anonymous namespace)::money_put_shim<wchar_t>
0000000000a16440 0000000000000038 d vtable for std::__facet_shims::(anonymous namespace)::messages_shim<wchar_t>
0000000000a16480 0000000000000168 d mpg123_error
0000000000a165f0 0000000000000020 d text_converters
0000000000a16610 00000000000000a8 d decname
0000000000a166c0 00000000000000d8 d mapend
0000000000a167a0 00000000000000d8 d map
0000000000a16878 0000000000000020 d htc
0000000000a16898 0000000000000200 d ht
0000000000a16a98 0000000000000200 d gpMixFunctionTable
0000000000a16c98 0000000000000200 d gpFastMixFunctionTable
0000000000a16e98 0000000000000028 d mustype
0000000000a16ec0 0000000000000078 d sig
0000000000a16f38 0000000000000080 d keySigs
0000000000a16fb8 0000000000000018 d pat_fun
0000000000a16fd0 0000000000000100 d romFS_devoptab
0000000000a170d0 0000000000000100 d fsdev_devoptab
0000000000a171d0 0000000000000020 d kCat3456
0000000000a171f0 0000000000000030 d _hb_all_shapers
0000000000a17220 0000000000000060 D _hb_ot_shaper_arabic
0000000000a17280 0000000000000060 D _hb_ot_shaper_hangul
0000000000a172e0 0000000000000060 D _hb_ot_shaper_hebrew
0000000000a17340 0000000000000060 D _hb_ot_shaper_indic
0000000000a173a0 0000000000000060 D _hb_ot_shaper_khmer
0000000000a17400 0000000000000060 D _hb_ot_shaper_myanmar
0000000000a17460 0000000000000060 D _hb_ot_shaper_thai
0000000000a174c0 0000000000000060 D _hb_ot_shaper_use
0000000000a17520 0000000000000038 d categories
0000000000a17558 00000000000001f8 D _C_time_locale
0000000000a17750 0000000000000100 D dotab_stdnull
0000000000a17850 0000000000000180 d supported
0000000000a179d0 0000000000000030 d s_music_interfaces
0000000000a17a00 0000000000000010 d render_drivers
0000000000a17a10 00000000000000a0 d ft_default_modules
0000000000a17ab0 0000000000000010 d t1_service_properties
0000000000a17ac0 0000000000000010 d cff_service_properties
0000000000a17ad0 0000000000000010 d cid_service_properties
0000000000a17ae0 0000000000000530 d egl_functions.40
0000000000a18010 00000000000000d8 D util_format_ayuv_description
0000000000a180e8 00000000000000d8 D util_format_bptc_rgb_float_description
0000000000a181c0 00000000000000d8 D util_format_bptc_rgb_ufloat_description
0000000000a18298 00000000000000d8 D util_format_bptc_rgba_unorm_description
0000000000a18370 00000000000000d8 D util_format_bptc_srgba_description
0000000000a18448 00000000000000d8 D util_format_dxt1_rgb_description
0000000000a18520 00000000000000d8 D util_format_dxt1_rgba_description
0000000000a185f8 00000000000000d8 D util_format_dxt1_srgb_description
0000000000a186d0 00000000000000d8 D util_format_dxt1_srgba_description
0000000000a187a8 00000000000000d8 D util_format_dxt3_rgba_description
0000000000a18880 00000000000000d8 D util_format_dxt3_srgba_description
0000000000a18958 00000000000000d8 D util_format_dxt5_rgba_description
0000000000a18a30 00000000000000d8 D util_format_dxt5_srgba_description
0000000000a18b08 00000000000000d8 D util_format_etc1_rgb8_description
0000000000a18be0 00000000000000d8 D util_format_g8r8_b8r8_unorm_description
0000000000a18cb8 00000000000000d8 D util_format_g8r8_g8b8_unorm_description
0000000000a18d90 00000000000000d8 D util_format_iyuv_description
0000000000a18e68 00000000000000d8 D util_format_latc1_snorm_description
0000000000a18f40 00000000000000d8 D util_format_latc1_unorm_description
0000000000a19018 00000000000000d8 D util_format_latc2_snorm_description
0000000000a190f0 00000000000000d8 D util_format_latc2_unorm_description
0000000000a191c8 00000000000000d8 D util_format_nv12_description
0000000000a192a0 00000000000000d8 D util_format_nv21_description
0000000000a19378 00000000000000d8 D util_format_p010_description
0000000000a19450 00000000000000d8 D util_format_p016_description
0000000000a19528 00000000000000d8 D util_format_r11g11b10_float_description
0000000000a19600 00000000000000d8 D util_format_r1_unorm_description
0000000000a196d8 00000000000000d8 D util_format_r8g8_b8g8_unorm_description
0000000000a197b0 00000000000000d8 D util_format_r8g8_r8b8_unorm_description
0000000000a19888 00000000000000d8 D util_format_r8g8bx_snorm_description
0000000000a19960 00000000000000d8 D util_format_r9g9b9e5_float_description
0000000000a19a38 00000000000000d8 D util_format_rgtc1_snorm_description
0000000000a19b10 00000000000000d8 D util_format_rgtc1_unorm_description
0000000000a19be8 00000000000000d8 D util_format_rgtc2_snorm_description
0000000000a19cc0 00000000000000d8 D util_format_rgtc2_unorm_description
0000000000a19d98 00000000000000d8 D util_format_s8_uint_description
0000000000a19e70 00000000000000d8 D util_format_s8_uint_z24_unorm_description
0000000000a19f48 00000000000000d8 D util_format_s8x24_uint_description
0000000000a1a020 00000000000000d8 D util_format_uyvy_description
0000000000a1a0f8 00000000000000d8 D util_format_x24s8_uint_description
0000000000a1a1d0 00000000000000d8 D util_format_x32_s8x24_uint_description
0000000000a1a2a8 00000000000000d8 D util_format_x8z24_unorm_description
0000000000a1a380 00000000000000d8 D util_format_xyuv_description
0000000000a1a458 00000000000000d8 D util_format_yuyv_description
0000000000a1a530 00000000000000d8 D util_format_yv12_description
0000000000a1a608 00000000000000d8 D util_format_yv16_description
0000000000a1a6e0 00000000000000d8 D util_format_z16_unorm_description
0000000000a1a7b8 00000000000000d8 D util_format_z24_unorm_s8_uint_description
0000000000a1a890 00000000000000d8 D util_format_z24x8_unorm_description
0000000000a1a968 00000000000000d8 D util_format_z32_float_description
0000000000a1aa40 00000000000000d8 D util_format_z32_float_s8x24_uint_description
0000000000a1ab18 00000000000000d8 D util_format_z32_unorm_description
0000000000a1abf0 0000000000000030 V vtable for ast_node
0000000000a1ac20 0000000000000030 V vtable for ast_compound_statement
0000000000a1ac50 0000000000000030 V vtable for ast_expression_statement
0000000000a1ac80 0000000000000030 V vtable for ast_function
0000000000a1acb0 0000000000000030 V vtable for ast_fully_specified_type
0000000000a1ace0 0000000000000030 V vtable for ast_parameter_declarator
0000000000a1ad10 0000000000000030 V vtable for ast_function_definition
0000000000a1ad40 0000000000000030 V vtable for ast_declaration
0000000000a1ad70 0000000000000030 V vtable for ast_declarator_list
0000000000a1ada0 0000000000000030 V vtable for ast_jump_statement
0000000000a1add0 0000000000000030 V vtable for ast_demote_statement
0000000000a1ae00 0000000000000030 V vtable for ast_selection_statement
0000000000a1ae30 0000000000000030 V vtable for ast_switch_statement
0000000000a1ae60 0000000000000030 V vtable for ast_switch_body
0000000000a1ae90 0000000000000030 V vtable for ast_case_label
0000000000a1aec0 0000000000000030 V vtable for ast_case_label_list
0000000000a1aef0 0000000000000030 V vtable for ast_case_statement
0000000000a1af20 0000000000000030 V vtable for ast_case_statement_list
0000000000a1af50 0000000000000030 V vtable for ast_iteration_statement
0000000000a1af80 0000000000000030 V vtable for ast_struct_specifier
0000000000a1afb0 0000000000000030 V vtable for ast_subroutine_list
0000000000a1afe0 0000000000000080 V vtable for ir_rvalue
0000000000a1b060 0000000000000040 V vtable for ir_variable
0000000000a1b0a0 0000000000000080 V vtable for ir_swizzle
0000000000a1b120 0000000000000040 V vtable for ir_return
0000000000a1b160 0000000000000040 V vtable for ir_discard
0000000000a1b1a0 0000000000000040 V vtable for ir_demote
0000000000a1b1e0 0000000000000040 V vtable for ir_loop_jump
0000000000a1b220 0000000000000040 V vtable for ir_if
0000000000a1b260 0000000000000040 V vtable for ir_loop
0000000000a1b2a0 0000000000000048 V vtable for ir_call
0000000000a1b2e8 0000000000000088 V vtable for ir_dereference_variable
0000000000a1b370 0000000000000088 V vtable for ir_dereference_array
0000000000a1b3f8 0000000000000088 V vtable for ir_dereference_record
0000000000a1b480 0000000000000080 V vtable for ir_texture
0000000000a1b500 0000000000000048 V vtable for ir_assignment
0000000000a1b548 0000000000000040 V vtable for ir_function
0000000000a1b588 0000000000000040 V vtable for ir_function_signature
0000000000a1b5c8 0000000000000088 V vtable for ir_constant
0000000000a1b650 0000000000000140 V vtable for fixup_ir_call_visitor
0000000000a1b790 0000000000000080 V vtable for ir_expression
0000000000a1b810 0000000000000040 V vtable for ir_emit_vertex
0000000000a1b850 0000000000000040 V vtable for ir_end_primitive
0000000000a1b890 0000000000000040 V vtable for ir_barrier
0000000000a1b8d0 0000000000000140 V vtable for array_sizing_visitor
0000000000a1ba10 0000000000000140 d vtable for (anonymous namespace)::deref_type_updater
0000000000a1bb50 0000000000000140 d vtable for (anonymous namespace)::find_deref_visitor
0000000000a1bc90 0000000000000150 d vtable for (anonymous namespace)::array_resize_visitor
0000000000a1bde0 0000000000000140 d vtable for (anonymous namespace)::find_assignment_visitor
0000000000a1bf20 0000000000000140 d vtable for (anonymous namespace)::find_emit_vertex_visitor
0000000000a1c060 0000000000000140 d vtable for (anonymous namespace)::dynamic_sampler_array_indexing_visitor
0000000000a1c1a0 0000000000000140 d vtable for remap_variables(ir_instruction*, gl_linked_shader*, hash_table*)::remap_visitor
0000000000a1c2e0 0000000000000140 d vtable for (anonymous namespace)::call_link_visitor
0000000000a1c420 0000000000000038 d vtable for (anonymous namespace)::ubo_visitor
0000000000a1c458 0000000000000038 d vtable for (anonymous namespace)::count_block_size
0000000000a1c490 0000000000000038 V vtable for tfeedback_candidate_generator
0000000000a1c4c8 0000000000000140 V vtable for examine_rhs
0000000000a1c608 0000000000000140 d vtable for (anonymous namespace)::loop_analysis
0000000000a1c748 0000000000000140 V vtable for loop_unroll_count
0000000000a1c888 0000000000000140 d vtable for (anonymous namespace)::loop_unroll_visitor
0000000000a1c9c8 0000000000000140 d vtable for (anonymous namespace)::lower_builtins_visitor
0000000000a1cb08 0000000000000148 d vtable for (anonymous namespace)::lower_const_array_visitor
0000000000a1cc50 0000000000000140 d vtable for (anonymous namespace)::lower_cs_derived_visitor
0000000000a1cd90 0000000000000140 d vtable for (anonymous namespace)::lower_discard_flow_visitor
0000000000a1ced0 0000000000000148 d vtable for (anonymous namespace)::lower_distance_visitor
0000000000a1d018 0000000000000148 d vtable for (anonymous namespace)::lower_distance_visitor_counter
0000000000a1d160 0000000000000140 d vtable for (anonymous namespace)::lower_instructions_visitor
0000000000a1d2a0 0000000000000140 V vtable for lower_packed_varyings_gs_splicer
0000000000a1d3e0 0000000000000140 V vtable for lower_packed_varyings_return_splicer
0000000000a1d520 0000000000000148 d vtable for (anonymous namespace)::flatten_named_interface_blocks_declarations
0000000000a1d668 0000000000000148 d vtable for (anonymous namespace)::find_precision_visitor
0000000000a1d7b0 0000000000000148 d vtable for (anonymous namespace)::lower_precision_visitor
0000000000a1d8f8 0000000000000140 d vtable for (anonymous namespace)::find_lowerable_rvalues_visitor
0000000000a1da38 0000000000000140 d vtable for (anonymous namespace)::lower_subroutine_visitor
0000000000a1db78 0000000000000148 d vtable for (anonymous namespace)::lower_tess_level_visitor
0000000000a1dcc0 0000000000000148 d vtable for (anonymous namespace)::ir_vec_index_to_swizzle_visitor
0000000000a1de08 0000000000000158 d vtable for (anonymous namespace)::vector_deref_visitor
0000000000a1df60 0000000000000158 d vtable for (anonymous namespace)::vector_insert_visitor
0000000000a1e0b8 0000000000000140 d vtable for (anonymous namespace)::lower_vertex_id_visitor
0000000000a1e1f8 0000000000000150 d vtable for (anonymous namespace)::lower_shared_reference_visitor
0000000000a1e348 0000000000000150 d vtable for (anonymous namespace)::lower_ubo_reference_visitor
0000000000a1e498 0000000000000140 d vtable for (anonymous namespace)::lower_xfb_var_splicer
0000000000a1e5d8 0000000000000158 d vtable for (anonymous namespace)::ir_algebraic_visitor
0000000000a1e730 0000000000000158 V vtable for ir_array_splitting_visitor
0000000000a1e888 0000000000000140 d vtable for (anonymous namespace)::ir_array_reference_visitor
0000000000a1e9c8 0000000000000140 d vtable for (anonymous namespace)::opt_conditional_discard_visitor
0000000000a1eb08 0000000000000158 d vtable for (anonymous namespace)::ir_constant_folding_visitor
0000000000a1ec60 0000000000000148 d vtable for (anonymous namespace)::ir_constant_propagation_visitor
0000000000a1eda8 0000000000000148 d vtable for (anonymous namespace)::ir_constant_variable_visitor
0000000000a1eef0 0000000000000148 d vtable for (anonymous namespace)::ir_copy_propagation_elements_visitor
0000000000a1f038 0000000000000140 d vtable for (anonymous namespace)::varying_info_visitor
0000000000a1f178 0000000000000148 d vtable for (anonymous namespace)::replace_varyings_visitor
0000000000a1f2c0 0000000000000140 d vtable for (anonymous namespace)::array_index_visit
0000000000a1f400 0000000000000148 d vtable for (anonymous namespace)::kill_for_derefs_visitor
0000000000a1f548 0000000000000140 d vtable for (anonymous namespace)::ir_dead_functions_visitor
0000000000a1f688 0000000000000140 d vtable for (anonymous namespace)::nested_if_flattener
0000000000a1f7c8 0000000000000140 d vtable for (anonymous namespace)::matrix_flipper
0000000000a1f908 0000000000000150 V vtable for ir_variable_replacement_visitor
0000000000a1fa58 0000000000000140 d vtable for (anonymous namespace)::ir_save_lvalue_visitor
0000000000a1fb98 0000000000000150 d vtable for (anonymous namespace)::ir_function_inlining_visitor
0000000000a1fce8 0000000000000140 d vtable for (anonymous namespace)::ir_if_simplification_visitor
0000000000a1fe28 0000000000000148 d vtable for (anonymous namespace)::ir_minmax_visitor
0000000000a1ff70 0000000000000148 d vtable for (anonymous namespace)::ir_rebalance_visitor
0000000000a200b8 0000000000000140 d vtable for (anonymous namespace)::redundant_jumps_visitor
0000000000a201f8 0000000000000140 d vtable for (anonymous namespace)::ir_structure_reference_visitor
0000000000a20338 0000000000000158 d vtable for (anonymous namespace)::ir_structure_splitting_visitor
0000000000a20490 0000000000000148 d vtable for (anonymous namespace)::ir_opt_swizzle_visitor
0000000000a205d8 0000000000000140 d vtable for (anonymous namespace)::ir_tree_grafting_visitor
0000000000a20718 0000000000000140 d vtable for (anonymous namespace)::ir_vectorize_visitor
0000000000a20858 0000000000000150 d vtable for (anonymous namespace)::ir_invariance_propagation_visitor
0000000000a209a8 0000000000000030 V vtable for ast_layout_expression
0000000000a209d8 0000000000000028 D nouveau_buffer_vtbl
0000000000a20a00 0000000000000028 D nvc0_miptree_vtbl
0000000000a20a28 0000000000000038 d vtable for (anonymous namespace)::add_uniform_to_shader
0000000000a20a60 0000000000000200 d update_functions
0000000000a20c60 0000000000000140 V vtable for ir_control_flow_info_visitor
0000000000a20da0 0000000000000030 V vtable for ast_array_specifier
0000000000a20dd0 0000000000000038 V vtable for ast_expression_bin
0000000000a20e08 0000000000000038 V vtable for ast_function_expression
0000000000a20e40 0000000000000038 V vtable for ast_aggregate_initializer
0000000000a20e78 0000000000000140 V vtable for read_from_write_only_variable_visitor
0000000000a20fb8 0000000000000038 V vtable for ast_expression
0000000000a20ff0 0000000000000140 V vtable for interface_block_usage_visitor
0000000000a21130 0000000000000030 V vtable for ast_interface_block
0000000000a21160 0000000000000030 V vtable for ast_tcs_output_layout
0000000000a21190 0000000000000030 V vtable for ast_gs_input_layout
0000000000a211c0 0000000000000030 V vtable for ast_cs_input_layout
0000000000a211f0 0000000000000030 V vtable for ast_warnings_toggle
0000000000a21220 0000000000000030 V vtable for ast_type_specifier
0000000000a21250 0000000000000140 V vtable for ir_array_refcount_visitor
0000000000a21390 0000000000000140 V vtable for ir_function_can_inline_visitor
0000000000a214d0 0000000000000140 d vtable for (anonymous namespace)::has_recursion_visitor
0000000000a21610 0000000000000140 d vtable for (anonymous namespace)::ir_set_program_inouts_visitor
0000000000a21750 0000000000000140 V vtable for ir_variable_refcount_visitor
0000000000a21890 0000000000000140 V vtable for link_uniform_block_active_visitor
0000000000a219d0 0000000000000140 d vtable for (anonymous namespace)::lower_discard_visitor
0000000000a21b10 0000000000000140 d vtable for (anonymous namespace)::ir_if_to_cond_assign_visitor
0000000000a21c50 0000000000000148 d vtable for (anonymous namespace)::lower_64bit_visitor
0000000000a21d98 0000000000000140 d vtable for (anonymous namespace)::ir_mat_op_to_vec_visitor
0000000000a21ed8 0000000000000148 V vtable for lower_offset_array_visitor
0000000000a22020 0000000000000158 d vtable for (anonymous namespace)::lower_packing_builtins_visitor
0000000000a22178 0000000000000148 d vtable for (anonymous namespace)::deref_replacer
0000000000a222c0 0000000000000140 d vtable for (anonymous namespace)::find_variable_index
0000000000a22400 0000000000000148 d vtable for (anonymous namespace)::variable_index_to_cond_assign_visitor
0000000000a22548 0000000000000140 d vtable for (anonymous namespace)::ir_vec_index_to_cond_assign_visitor
0000000000a22688 0000000000000148 d vtable for (anonymous namespace)::lower_vector_visitor
0000000000a227d0 0000000000000140 d vtable for (anonymous namespace)::output_read_remover
0000000000a22910 0000000000000028 D nv50_miptree_vtbl
0000000000a22938 0000000000000048 V vtable for nv50_ir::LValue
0000000000a22980 0000000000000048 V vtable for nv50_ir::Symbol
0000000000a229c8 0000000000000048 V vtable for nv50_ir::ImmediateValue
0000000000a22a10 0000000000000048 V vtable for nv50_ir::Value
0000000000a22a58 0000000000000048 V vtable for nv50_ir::CodeEmitter
0000000000a22aa0 00000000000000d8 V vtable for nv50_ir::TargetGM107
0000000000a22b78 0000000000000158 V vtable for ir_expression_flattening_visitor
0000000000a22cd0 0000000000000048 V vtable for nv50_ir::CodeEmitterGM107
0000000000a22d18 0000000000000028 V vtable for nv50_ir::GM107LegalizeSSA
0000000000a22d40 0000000000000030 V vtable for nv50_ir::GM107LoweringPass
0000000000a22d70 00000000000000b8 V vtable for nv50_ir::TargetNVC0
0000000000a22e28 0000000000000018 V typeinfo for __gnu_cxx::__concurrence_lock_error
0000000000a22e40 0000000000000018 V typeinfo for __gnu_cxx::__concurrence_unlock_error
0000000000a22e58 0000000000000018 V typeinfo for __gnu_cxx::__concurrence_broadcast_error
0000000000a22e70 0000000000000018 V typeinfo for __gnu_cxx::__concurrence_wait_error
0000000000a22e88 0000000000000028 V vtable for __gnu_cxx::__concurrence_lock_error
0000000000a22eb0 0000000000000028 V vtable for __gnu_cxx::__concurrence_unlock_error
0000000000a22ed8 0000000000000028 V vtable for __gnu_cxx::__concurrence_broadcast_error
0000000000a22f00 0000000000000028 V vtable for __gnu_cxx::__concurrence_wait_error
0000000000a22f28 0000000000000018 V typeinfo for __cxxabiv1::__si_class_type_info
0000000000a22f40 0000000000000058 V vtable for __cxxabiv1::__si_class_type_info
0000000000a22f98 0000000000000010 V typeinfo for std::type_info
0000000000a22fa8 0000000000000010 V typeinfo for std::locale::facet
0000000000a22fb8 0000000000000038 d typeinfo for std::__facet_shims::(anonymous namespace)::numpunct_shim<char>
0000000000a22ff0 0000000000000038 d typeinfo for std::__facet_shims::(anonymous namespace)::collate_shim<char>
0000000000a23028 0000000000000038 d typeinfo for std::__facet_shims::(anonymous namespace)::moneypunct_shim<char, true>
0000000000a23060 0000000000000038 d typeinfo for std::__facet_shims::(anonymous namespace)::moneypunct_shim<char, false>
0000000000a23098 0000000000000038 d typeinfo for std::__facet_shims::(anonymous namespace)::money_get_shim<char>
0000000000a230d0 0000000000000038 d typeinfo for std::__facet_shims::(anonymous namespace)::money_put_shim<char>
0000000000a23108 0000000000000038 d typeinfo for std::__facet_shims::(anonymous namespace)::messages_shim<char>
0000000000a23140 0000000000000038 d typeinfo for std::__facet_shims::(anonymous namespace)::numpunct_shim<wchar_t>
0000000000a23178 0000000000000038 d typeinfo for std::__facet_shims::(anonymous namespace)::collate_shim<wchar_t>
0000000000a231b0 0000000000000038 d typeinfo for std::__facet_shims::(anonymous namespace)::moneypunct_shim<wchar_t, true>
0000000000a231e8 0000000000000038 d typeinfo for std::__facet_shims::(anonymous namespace)::moneypunct_shim<wchar_t, false>
0000000000a23220 0000000000000038 d typeinfo for std::__facet_shims::(anonymous namespace)::money_get_shim<wchar_t>
0000000000a23258 0000000000000038 d typeinfo for std::__facet_shims::(anonymous namespace)::money_put_shim<wchar_t>
0000000000a23290 0000000000000038 d typeinfo for std::__facet_shims::(anonymous namespace)::messages_shim<wchar_t>
0000000000a232c8 0000000000000010 V typeinfo for std::locale::facet::__shim
0000000000a232d8 0000000000000038 d typeinfo for std::__facet_shims::(anonymous namespace)::time_get_shim<char>
0000000000a23310 0000000000000038 d typeinfo for std::__facet_shims::(anonymous namespace)::time_get_shim<wchar_t>
0000000000a23348 0000000000000048 d vtable for std::__facet_shims::(anonymous namespace)::numpunct_shim<char>
0000000000a23390 0000000000000038 d vtable for std::__facet_shims::(anonymous namespace)::collate_shim<char>
0000000000a233c8 0000000000000068 d vtable for std::__facet_shims::(anonymous namespace)::moneypunct_shim<char, true>
0000000000a23430 0000000000000068 d vtable for std::__facet_shims::(anonymous namespace)::moneypunct_shim<char, false>
0000000000a23498 0000000000000048 d vtable for std::__facet_shims::(anonymous namespace)::numpunct_shim<wchar_t>
0000000000a234e0 0000000000000038 d vtable for std::__facet_shims::(anonymous namespace)::collate_shim<wchar_t>
0000000000a23518 0000000000000068 d vtable for std::__facet_shims::(anonymous namespace)::moneypunct_shim<wchar_t, true>
0000000000a23580 0000000000000068 d vtable for std::__facet_shims::(anonymous namespace)::moneypunct_shim<wchar_t, false>
0000000000a235e8 0000000000000010 V typeinfo for std::ctype_base
0000000000a235f8 0000000000000038 V typeinfo for std::ctype<char>
0000000000a23630 0000000000000018 V typeinfo for std::ctype<wchar_t>
0000000000a23648 0000000000000060 V vtable for std::ctype<char>
0000000000a236a8 0000000000000080 V vtable for std::ctype<wchar_t>
0000000000a23728 0000000000000038 d typeinfo for std::__facet_shims::(anonymous namespace)::numpunct_shim<char>
0000000000a23760 0000000000000038 d typeinfo for std::__facet_shims::(anonymous namespace)::collate_shim<char>
0000000000a23798 0000000000000038 d typeinfo for std::__facet_shims::(anonymous namespace)::moneypunct_shim<char, true>
0000000000a237d0 0000000000000038 d typeinfo for std::__facet_shims::(anonymous namespace)::moneypunct_shim<char, false>
0000000000a23808 0000000000000038 d typeinfo for std::__facet_shims::(anonymous namespace)::money_get_shim<char>
0000000000a23840 0000000000000038 d typeinfo for std::__facet_shims::(anonymous namespace)::money_put_shim<char>
0000000000a23878 0000000000000038 d typeinfo for std::__facet_shims::(anonymous namespace)::messages_shim<char>
0000000000a238b0 0000000000000038 d typeinfo for std::__facet_shims::(anonymous namespace)::numpunct_shim<wchar_t>
0000000000a238e8 0000000000000038 d typeinfo for std::__facet_shims::(anonymous namespace)::collate_shim<wchar_t>
0000000000a23920 0000000000000038 d typeinfo for std::__facet_shims::(anonymous namespace)::moneypunct_shim<wchar_t, true>
0000000000a23958 0000000000000038 d typeinfo for std::__facet_shims::(anonymous namespace)::moneypunct_shim<wchar_t, false>
0000000000a23990 0000000000000038 d typeinfo for std::__facet_shims::(anonymous namespace)::money_get_shim<wchar_t>
0000000000a239c8 0000000000000038 d typeinfo for std::__facet_shims::(anonymous namespace)::money_put_shim<wchar_t>
0000000000a23a00 0000000000000038 d typeinfo for std::__facet_shims::(anonymous namespace)::messages_shim<wchar_t>
0000000000a23a38 0000000000000038 d typeinfo for std::__facet_shims::(anonymous namespace)::time_get_shim<char>
0000000000a23a70 0000000000000038 d typeinfo for std::__facet_shims::(anonymous namespace)::time_get_shim<wchar_t>
0000000000a23aa8 0000000000000048 d vtable for std::__facet_shims::(anonymous namespace)::numpunct_shim<char>
0000000000a23af0 0000000000000038 d vtable for std::__facet_shims::(anonymous namespace)::collate_shim<char>
0000000000a23b28 0000000000000068 d vtable for std::__facet_shims::(anonymous namespace)::moneypunct_shim<char, true>
0000000000a23b90 0000000000000068 d vtable for std::__facet_shims::(anonymous namespace)::moneypunct_shim<char, false>
0000000000a23bf8 0000000000000048 d vtable for std::__facet_shims::(anonymous namespace)::numpunct_shim<wchar_t>
0000000000a23c40 0000000000000038 d vtable for std::__facet_shims::(anonymous namespace)::collate_shim<wchar_t>
0000000000a23c78 0000000000000068 d vtable for std::__facet_shims::(anonymous namespace)::moneypunct_shim<wchar_t, true>
0000000000a23ce0 0000000000000068 d vtable for std::__facet_shims::(anonymous namespace)::moneypunct_shim<wchar_t, false>
0000000000a23d48 0000000000000058 d vtable for std::__facet_shims::(anonymous namespace)::time_get_shim<char>
0000000000a23da0 0000000000000058 d vtable for std::__facet_shims::(anonymous namespace)::time_get_shim<wchar_t>
0000000000a23df8 0000000000000010 V typeinfo for std::time_base
0000000000a23e08 0000000000000010 V typeinfo for std::money_base
0000000000a23e18 0000000000000010 V typeinfo for std::messages_base
0000000000a23e28 0000000000000018 V typeinfo for std::__cxx11::collate<wchar_t>
0000000000a23e40 0000000000000018 V typeinfo for std::__cxx11::numpunct<wchar_t>
0000000000a23e58 0000000000000038 V typeinfo for std::__cxx11::moneypunct<wchar_t, true>
0000000000a23e90 0000000000000038 V typeinfo for std::__cxx11::moneypunct<wchar_t, false>
0000000000a23ec8 0000000000000038 V typeinfo for std::__cxx11::messages<wchar_t>
0000000000a23f00 0000000000000018 V typeinfo for std::__cxx11::money_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >
0000000000a23f18 0000000000000018 V typeinfo for std::__cxx11::money_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >
0000000000a23f30 0000000000000038 V typeinfo for std::__cxx11::time_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >
0000000000a23f68 0000000000000038 V vtable for std::__cxx11::collate<wchar_t>
0000000000a23fa0 0000000000000048 V vtable for std::__cxx11::numpunct<wchar_t>
0000000000a23fe8 0000000000000068 V vtable for std::__cxx11::moneypunct<wchar_t, true>
0000000000a24050 0000000000000068 V vtable for std::__cxx11::moneypunct<wchar_t, false>
0000000000a240b8 0000000000000038 V vtable for std::__cxx11::messages<wchar_t>
0000000000a240f0 0000000000000030 V vtable for std::__cxx11::money_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >
0000000000a24120 0000000000000030 V vtable for std::__cxx11::money_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >
0000000000a24150 0000000000000058 V vtable for std::__cxx11::time_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >
0000000000a241a8 0000000000000018 V typeinfo for __gnu_cxx::stdio_sync_filebuf<char, std::char_traits<char> >
0000000000a241c0 0000000000000018 V typeinfo for __gnu_cxx::stdio_sync_filebuf<wchar_t, std::char_traits<wchar_t> >
0000000000a241d8 0000000000000080 V vtable for __gnu_cxx::stdio_sync_filebuf<char, std::char_traits<char> >
0000000000a24258 0000000000000080 V vtable for __gnu_cxx::stdio_sync_filebuf<wchar_t, std::char_traits<wchar_t> >
0000000000a242d8 0000000000000018 V typeinfo for std::basic_ios<char, std::char_traits<char> >
0000000000a242f0 0000000000000018 V typeinfo for std::basic_ios<wchar_t, std::char_traits<wchar_t> >
0000000000a24308 0000000000000020 V vtable for std::basic_ios<char, std::char_traits<char> >
0000000000a24328 0000000000000020 V vtable for std::basic_ios<wchar_t, std::char_traits<wchar_t> >
0000000000a24348 0000000000000010 V typeinfo for std::ios_base
0000000000a24358 0000000000000020 V vtable for std::ios_base
0000000000a24378 0000000000000028 V typeinfo for std::istream
0000000000a243a0 0000000000000028 V typeinfo for std::basic_istream<wchar_t, std::char_traits<wchar_t> >
0000000000a243c8 0000000000000010 V VTT for std::istream
0000000000a243d8 0000000000000050 V vtable for std::istream
0000000000a24428 0000000000000010 V VTT for std::basic_istream<wchar_t, std::char_traits<wchar_t> >
0000000000a24438 0000000000000050 V vtable for std::basic_istream<wchar_t, std::char_traits<wchar_t> >
0000000000a24488 0000000000000010 V typeinfo for std::codecvt_base
0000000000a24498 0000000000000018 V typeinfo for std::collate<char>
0000000000a244b0 0000000000000018 V typeinfo for std::numpunct<char>
0000000000a244c8 0000000000000018 V typeinfo for std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >
0000000000a244e0 0000000000000018 V typeinfo for std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >
0000000000a244f8 0000000000000018 V typeinfo for std::__timepunct_cache<char>
0000000000a24510 0000000000000018 V typeinfo for std::__timepunct<char>
0000000000a24528 0000000000000038 V typeinfo for std::moneypunct<char, true>
0000000000a24560 0000000000000038 V typeinfo for std::moneypunct<char, false>
0000000000a24598 0000000000000038 V typeinfo for std::messages<char>
0000000000a245d0 0000000000000038 V typeinfo for std::__codecvt_abstract_base<char, char, _mbstate_t>
0000000000a24608 0000000000000018 V typeinfo for std::money_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >
0000000000a24620 0000000000000018 V typeinfo for std::money_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >
0000000000a24638 0000000000000018 V typeinfo for std::time_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >
0000000000a24650 0000000000000038 V typeinfo for std::time_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >
0000000000a24688 0000000000000018 V typeinfo for std::__moneypunct_cache<char, false>
0000000000a246a0 0000000000000018 V typeinfo for std::__moneypunct_cache<char, true>
0000000000a246b8 0000000000000018 V typeinfo for std::__numpunct_cache<char>
0000000000a246d0 0000000000000038 V vtable for std::collate<char>
0000000000a24708 0000000000000048 V vtable for std::numpunct<char>
0000000000a24750 0000000000000078 V vtable for std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >
0000000000a247c8 0000000000000060 V vtable for std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >
0000000000a24828 0000000000000020 V vtable for std::__timepunct_cache<char>
0000000000a24848 0000000000000020 V vtable for std::__timepunct<char>
0000000000a24868 0000000000000068 V vtable for std::moneypunct<char, true>
0000000000a248d0 0000000000000068 V vtable for std::moneypunct<char, false>
0000000000a24938 0000000000000038 V vtable for std::messages<char>
0000000000a24970 0000000000000058 V vtable for std::__codecvt_abstract_base<char, char, _mbstate_t>
0000000000a249c8 0000000000000030 V vtable for std::money_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >
0000000000a249f8 0000000000000030 V vtable for std::money_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >
0000000000a24a28 0000000000000028 V vtable for std::time_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >
0000000000a24a50 0000000000000050 V vtable for std::time_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >
0000000000a24aa0 0000000000000020 V vtable for std::__moneypunct_cache<char, false>
0000000000a24ac0 0000000000000020 V vtable for std::__moneypunct_cache<char, true>
0000000000a24ae0 0000000000000020 V vtable for std::__numpunct_cache<char>
0000000000a24b00 0000000000000110 D std::locale::_S_twinned_facets
0000000000a24c10 0000000000000028 V typeinfo for std::ostream
0000000000a24c38 0000000000000028 V typeinfo for std::basic_ostream<wchar_t, std::char_traits<wchar_t> >
0000000000a24c60 0000000000000010 V VTT for std::ostream
0000000000a24c70 0000000000000050 V vtable for std::ostream
0000000000a24cc0 0000000000000010 V VTT for std::basic_ostream<wchar_t, std::char_traits<wchar_t> >
0000000000a24cd0 0000000000000050 V vtable for std::basic_ostream<wchar_t, std::char_traits<wchar_t> >
0000000000a24d20 0000000000000010 V typeinfo for std::basic_streambuf<char, std::char_traits<char> >
0000000000a24d30 0000000000000010 V typeinfo for std::basic_streambuf<wchar_t, std::char_traits<wchar_t> >
0000000000a24d40 0000000000000080 V vtable for std::basic_streambuf<char, std::char_traits<char> >
0000000000a24dc0 0000000000000080 V vtable for std::basic_streambuf<wchar_t, std::char_traits<wchar_t> >
0000000000a24e40 0000000000000010 V typeinfo for std::_V2::error_category
0000000000a24e50 0000000000000018 V typeinfo for std::system_error
0000000000a24e68 0000000000000028 V vtable for std::system_error
0000000000a24e90 0000000000000018 V typeinfo for std::collate<wchar_t>
0000000000a24ea8 0000000000000038 V typeinfo for std::__ctype_abstract_base<wchar_t>
0000000000a24ee0 0000000000000018 V typeinfo for std::numpunct<wchar_t>
0000000000a24ef8 0000000000000018 V typeinfo for std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >
0000000000a24f10 0000000000000018 V typeinfo for std::num_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >
0000000000a24f28 0000000000000018 V typeinfo for std::__timepunct_cache<wchar_t>
0000000000a24f40 0000000000000018 V typeinfo for std::__timepunct<wchar_t>
0000000000a24f58 0000000000000038 V typeinfo for std::moneypunct<wchar_t, true>
0000000000a24f90 0000000000000038 V typeinfo for std::moneypunct<wchar_t, false>
0000000000a24fc8 0000000000000038 V typeinfo for std::messages<wchar_t>
0000000000a25000 0000000000000038 V typeinfo for std::__codecvt_abstract_base<wchar_t, char, _mbstate_t>
0000000000a25038 0000000000000018 V typeinfo for std::money_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >
0000000000a25050 0000000000000018 V typeinfo for std::money_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >
0000000000a25068 0000000000000018 V typeinfo for std::time_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >
0000000000a25080 0000000000000038 V typeinfo for std::time_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >
0000000000a250b8 0000000000000018 V typeinfo for std::__moneypunct_cache<wchar_t, false>
0000000000a250d0 0000000000000018 V typeinfo for std::__moneypunct_cache<wchar_t, true>
0000000000a250e8 0000000000000018 V typeinfo for std::__numpunct_cache<wchar_t>
0000000000a25100 0000000000000038 V vtable for std::collate<wchar_t>
0000000000a25138 0000000000000080 V vtable for std::__ctype_abstract_base<wchar_t>
0000000000a251b8 0000000000000048 V vtable for std::numpunct<wchar_t>
0000000000a25200 0000000000000078 V vtable for std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >
0000000000a25278 0000000000000060 V vtable for std::num_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >
0000000000a252d8 0000000000000020 V vtable for std::__timepunct_cache<wchar_t>
0000000000a252f8 0000000000000020 V vtable for std::__timepunct<wchar_t>
0000000000a25318 0000000000000068 V vtable for std::moneypunct<wchar_t, true>
0000000000a25380 0000000000000068 V vtable for std::moneypunct<wchar_t, false>
0000000000a253e8 0000000000000038 V vtable for std::messages<wchar_t>
0000000000a25420 0000000000000058 V vtable for std::__codecvt_abstract_base<wchar_t, char, _mbstate_t>
0000000000a25478 0000000000000030 V vtable for std::money_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >
0000000000a254a8 0000000000000030 V vtable for std::money_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >
0000000000a254d8 0000000000000028 V vtable for std::time_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >
0000000000a25500 0000000000000050 V vtable for std::time_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >
0000000000a25550 0000000000000020 V vtable for std::__moneypunct_cache<wchar_t, false>
0000000000a25570 0000000000000020 V vtable for std::__moneypunct_cache<wchar_t, true>
0000000000a25590 0000000000000020 V vtable for std::__numpunct_cache<wchar_t>
0000000000a255b0 0000000000000018 V typeinfo for std::bad_alloc
0000000000a255c8 0000000000000028 V vtable for std::bad_alloc
0000000000a255f0 0000000000000018 V typeinfo for std::bad_array_new_length
0000000000a25608 0000000000000028 V vtable for std::bad_array_new_length
0000000000a25630 0000000000000018 V typeinfo for std::bad_cast
0000000000a25648 0000000000000028 V vtable for std::bad_cast
0000000000a25670 0000000000000018 V typeinfo for __cxxabiv1::__class_type_info
0000000000a25688 0000000000000058 V vtable for __cxxabiv1::__class_type_info
0000000000a256e0 0000000000000010 V typeinfo for std::exception
0000000000a256f0 0000000000000018 V typeinfo for std::bad_exception
0000000000a25708 0000000000000010 V typeinfo for __cxxabiv1::__forced_unwind
0000000000a25718 0000000000000010 V typeinfo for __cxxabiv1::__foreign_exception
0000000000a25728 0000000000000028 V vtable for std::bad_exception
0000000000a25750 0000000000000018 V typeinfo for __cxxabiv1::__vmi_class_type_info
0000000000a25768 0000000000000058 V vtable for __cxxabiv1::__vmi_class_type_info
0000000000a257c0 0000000000000018 V typeinfo for std::codecvt<char, char, _mbstate_t>
0000000000a257d8 0000000000000018 V typeinfo for std::codecvt<wchar_t, char, _mbstate_t>
0000000000a257f0 0000000000000058 V vtable for std::codecvt<char, char, _mbstate_t>
0000000000a25848 0000000000000058 V vtable for std::codecvt<wchar_t, char, _mbstate_t>
0000000000a258a0 0000000000000018 V typeinfo for std::logic_error
0000000000a258b8 0000000000000018 V typeinfo for std::length_error
0000000000a258d0 0000000000000018 V typeinfo for std::out_of_range
0000000000a258e8 0000000000000018 V typeinfo for std::runtime_error
0000000000a25900 0000000000000028 V vtable for std::logic_error
0000000000a25928 0000000000000028 V vtable for std::length_error
0000000000a25950 0000000000000028 V vtable for std::out_of_range
0000000000a25978 0000000000000028 V vtable for std::runtime_error
0000000000a259a0 0000000000000038 V typeinfo for std::__codecvt_abstract_base<char16_t, char, _mbstate_t>
0000000000a259d8 0000000000000018 V typeinfo for std::codecvt<char16_t, char, _mbstate_t>
0000000000a259f0 0000000000000038 V typeinfo for std::__codecvt_abstract_base<char32_t, char, _mbstate_t>
0000000000a25a28 0000000000000018 V typeinfo for std::codecvt<char32_t, char, _mbstate_t>
0000000000a25a40 0000000000000038 V typeinfo for std::__codecvt_abstract_base<char16_t, char8_t, _mbstate_t>
0000000000a25a78 0000000000000018 V typeinfo for std::codecvt<char16_t, char8_t, _mbstate_t>
0000000000a25a90 0000000000000038 V typeinfo for std::__codecvt_abstract_base<char32_t, char8_t, _mbstate_t>
0000000000a25ac8 0000000000000018 V typeinfo for std::codecvt<char32_t, char8_t, _mbstate_t>
0000000000a25ae0 0000000000000058 V vtable for std::__codecvt_abstract_base<char16_t, char, _mbstate_t>
0000000000a25b38 0000000000000058 V vtable for std::__codecvt_abstract_base<char32_t, char, _mbstate_t>
0000000000a25b90 0000000000000058 V vtable for std::__codecvt_abstract_base<char16_t, char8_t, _mbstate_t>
0000000000a25be8 0000000000000058 V vtable for std::__codecvt_abstract_base<char32_t, char8_t, _mbstate_t>
0000000000a25c40 0000000000000058 V vtable for std::codecvt<char16_t, char, _mbstate_t>
0000000000a25c98 0000000000000058 V vtable for std::codecvt<char32_t, char, _mbstate_t>
0000000000a25cf0 0000000000000058 V vtable for std::codecvt<char16_t, char8_t, _mbstate_t>
0000000000a25d48 0000000000000058 V vtable for std::codecvt<char32_t, char8_t, _mbstate_t>
0000000000a25da0 0000000000000018 V typeinfo for std::ios_base::failure[abi:cxx11]
0000000000a25db8 0000000000000018 V typeinfo for std::__ios_failure
0000000000a25dd0 0000000000000028 V typeinfo for std::__iosfail_type_info
0000000000a25df8 0000000000000028 V vtable for std::ios_base::failure[abi:cxx11]
0000000000a25e20 0000000000000028 V vtable for std::__ios_failure
0000000000a25e48 0000000000000058 V vtable for std::__iosfail_type_info
0000000000a25ea0 0000000000000018 V typeinfo for std::__cxx11::collate<char>
0000000000a25eb8 0000000000000018 V typeinfo for std::__cxx11::numpunct<char>
0000000000a25ed0 0000000000000038 V typeinfo for std::__cxx11::moneypunct<char, true>
0000000000a25f08 0000000000000038 V typeinfo for std::__cxx11::moneypunct<char, false>
0000000000a25f40 0000000000000038 V typeinfo for std::__cxx11::messages<char>
0000000000a25f78 0000000000000018 V typeinfo for std::__cxx11::money_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >
0000000000a25f90 0000000000000018 V typeinfo for std::__cxx11::money_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >
0000000000a25fa8 0000000000000038 V typeinfo for std::__cxx11::time_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >
0000000000a25fe0 0000000000000038 V vtable for std::__cxx11::collate<char>
0000000000a26018 0000000000000048 V vtable for std::__cxx11::numpunct<char>
0000000000a26060 0000000000000068 V vtable for std::__cxx11::moneypunct<char, true>
0000000000a260c8 0000000000000068 V vtable for std::__cxx11::moneypunct<char, false>
0000000000a26130 0000000000000038 V vtable for std::__cxx11::messages<char>
0000000000a26168 0000000000000030 V vtable for std::__cxx11::money_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >
0000000000a26198 0000000000000030 V vtable for std::__cxx11::money_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >
0000000000a261c8 0000000000000058 V vtable for std::__cxx11::time_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >
0000000000a26220 0000000000000018 d typeinfo for (anonymous namespace)::io_error_category
0000000000a26238 0000000000000050 d vtable for (anonymous namespace)::io_error_category
0000000000a26288 0000000000000018 V typeinfo for std::ios_base::failure
0000000000a262a0 0000000000000028 V vtable for std::ios_base::failure
0000000000a262d0 0000000000000200 d synth_base
0000000000a264d0 00000000000001a8 D __C_locale
0000000000a26678 a _DYNAMIC
0000000000a26798 d __got_start__
0000000000a26798 a _GLOBAL_OFFSET_TABLE_
0000000000a2c018 d __got_end__
0000000000a2d000 d __data_start
0000000000a2d020 0000000000000028 D weaponPoints
0000000000a2d088 0000000000000001 D inStartScreen
0000000000a2d089 0000000000000001 D musicEnabled
0000000000a2d08a 0000000000000001 D pistol
0000000000a2d08c 0000000000000004 d g_hb_script
0000000000a2d090 0000000000000004 d g_hb_direction
0000000000a2d098 00000000000000a0 D nsvg__colors
0000000000a2d138 0000000000000008 d mix_music
0000000000a2d140 0000000000000004 d music_active
0000000000a2d144 0000000000000004 d music_volume
0000000000a2d148 0000000000000090 D Mix_MusicInterface_MODPLUG
0000000000a2d1d8 0000000000000090 D Mix_MusicInterface_MPG123
0000000000a2d268 0000000000000090 D Mix_MusicInterface_OGG
0000000000a2d2f8 0000000000000090 D Mix_MusicInterface_Opus
0000000000a2d388 0000000000000090 D Mix_MusicInterface_TIMIDITY
0000000000a2d418 0000000000000090 D Mix_MusicInterface_WAV
0000000000a2d4a8 0000000000000004 d SDL_MainIsReady
0000000000a2d500 0000000000000008 d assertion_handler
0000000000a2d508 0000000000000008 d SDL_log_function
0000000000a2d510 0000000000000004 d SDL_test_priority
0000000000a2d514 0000000000000004 d SDL_application_priority
0000000000a2d518 0000000000000004 d SDL_assert_priority
0000000000a2d51c 0000000000000004 d SDL_default_priority
0000000000a2d520 000000000000006c d extensible_guids
0000000000a2d58c 0000000000000004 d SDL_SIMDAlignment
0000000000a2d590 0000000000000004 d SDL_CPUFeatures
0000000000a2d594 0000000000000004 d SDL_update_sensors
0000000000a2d598 0000000000000004 d SDL_update_joysticks
0000000000a2d5a0 0000000000000060 D GLES2_RenderDriver
0000000000a2d600 0000000000000030 d sdl_assert_data.1
0000000000a2d630 0000000000000060 D SW_RenderDriver
0000000000a2d690 0000000000000028 d s_mem
0000000000a2d6b8 0000000000000048 D SDL_expand_byte
0000000000a2d700 0000000000000001 d lookup_8
0000000000a2d708 0000000000000002 d lookup_7
0000000000a2d710 0000000000000004 d lookup_6
0000000000a2d718 0000000000000008 d lookup_5
0000000000a2d720 0000000000000010 d lookup_4
0000000000a2d730 0000000000000020 d lookup_3
0000000000a2d750 0000000000000040 d lookup_2
0000000000a2d790 0000000000000080 d lookup_1
0000000000a2d810 0000000000000100 d lookup_0
0000000000a2d910 0000000000000004 d val.0
0000000000a2d914 0000000000000004 d SDL_YUV_ConversionMode
0000000000a2d918 0000000000000004 d thread_local_storage
0000000000a2d920 0000000000000018 D SWITCH_bootstrap
0000000000a2d938 0000000000000020 D SWITCHAUDIO_bootstrap
0000000000a2d958 00000000000000a0 D SDL_SWITCH_JoystickDriver
0000000000a2d9f8 00000000000000a0 D SDL_VIRTUAL_JoystickDriver
0000000000a2da98 0000000000000058 D SDL_DUMMY_SensorDriver
0000000000a2daf0 0000000000000004 d features.0
0000000000a2daf8 0000000000000be8 D SDL_GeneratedBlitFuncTable
0000000000a2e6e0 0000000000000004 d simd_features
0000000000a2e6e4 0000000000000004 d simd_huffman
0000000000a2e6e8 0000000000000004 d simd_support
0000000000a2e6f0 0000000000000018 D _eglSoftwareDevice
0000000000a2e708 0000000000000088 D _eglGlobal
0000000000a2e790 0000000000000018 d logging
0000000000a2e7a8 0000000000000024 D mme9097_blend_enables
0000000000a2e7d0 0000000000000060 D mme9097_compute_counter
0000000000a2e830 000000000000004c D mme9097_compute_counter_to_query
0000000000a2e880 0000000000000044 D mme9097_conservative_raster_state
0000000000a2e8c8 0000000000000078 D mme9097_draw_arrays_indirect
0000000000a2e940 00000000000000b8 D mme9097_draw_arrays_indirect_count
0000000000a2e9f8 00000000000000a8 D mme9097_draw_elts_indirect
0000000000a2eaa0 00000000000000f4 D mme9097_draw_elts_indirect_count
0000000000a2eb98 0000000000000044 D mme9097_gp_select
0000000000a2ebe0 000000000000001c D mme9097_per_instance_bf
0000000000a2ec00 0000000000000044 D mme9097_poly_mode_back
0000000000a2ec48 0000000000000044 D mme9097_poly_mode_front
0000000000a2ec90 0000000000000088 D mme9097_query_buffer_write
0000000000a2ed18 0000000000000044 D mme9097_tep_select
0000000000a2ed60 0000000000000030 D mme9097_vertex_array_select
0000000000a2ed90 0000000000000040 D mme90c0_launch_grid_indirect
0000000000a2edd0 0000000000000080 d validate_list_cp
0000000000a2ee50 0000000000000001 d first.8
0000000000a2ee54 0000000000000004 d NextDynamicID
0000000000a2ee58 000000000000001f d out_of_memory
0000000000a2ee78 0000000000000004 d debug.0
0000000000a2ee7c 0000000000000004 d debug.3
0000000000a2ee80 0000000000000010 d color.2
0000000000a2ee90 0000000000000004 d index.3
0000000000a2ee98 000000000000000c d normal.1
0000000000a2eea8 0000000000000010 d texcoord.0
0000000000a2eeb8 0000000000000010 d vertex.4
0000000000a2eec8 0000000000000020 d override.0
0000000000a2eee8 0000000000000001 d first.1
0000000000a2eee9 0000000000000001 d first.1
0000000000a2ef78 0000000000000004 d ir_print_visitor::unique_name(ir_variable*)::i
0000000000a2ef7c 0000000000000004 d ir_print_visitor::unique_name(ir_variable*)::arg
0000000000a2ef80 0000000000000020 D tgsi_swizzle_names
0000000000a2efa0 0000000000000001 d firsttime.0
0000000000a2efa8 0000000000000010 D tgsi_fs_coord_origin_names
0000000000a2efb8 0000000000000010 D tgsi_fs_coord_pixel_center_names
0000000000a2efc8 0000000000000030 D tgsi_immediate_type_names
0000000000a2eff8 0000000000000018 D tgsi_interpolate_locations
0000000000a2f010 0000000000000020 D tgsi_interpolate_names
0000000000a2f030 0000000000000008 D tgsi_invariant_name
0000000000a2f038 0000000000000020 D tgsi_memory_names
0000000000a2f058 0000000000000078 D tgsi_primitive_names
0000000000a2f0d0 0000000000000030 D tgsi_processor_type_names
0000000000a2f100 00000000000000d8 D tgsi_property_names
0000000000a2f1d8 0000000000000030 D tgsi_return_type_names
0000000000a2f208 0000000000000188 D tgsi_semantic_names
0000000000a2f390 0000000000000098 D tgsi_texture_names
0000000000a2f428 0000000000000080 d validate_list_cp
0000000000a2f4a8 0000000000000038 d sm20_hw_metric_queries
0000000000a2f4e0 0000000000000048 d sm21_hw_metric_queries
0000000000a2f528 0000000000000058 d sm30_hw_metric_queries
0000000000a2f580 0000000000000058 d sm35_hw_metric_queries
0000000000a2f5d8 0000000000000058 d sm50_hw_metric_queries
0000000000a2f630 00000000000000d0 d sm20_hw_sm_queries
0000000000a2f700 00000000000000f8 d sm21_hw_sm_queries
0000000000a2f7f8 0000000000000168 d sm30_hw_sm_queries
0000000000a2f960 0000000000000168 d sm35_hw_sm_queries
0000000000a2fac8 0000000000000120 d sm50_hw_sm_queries
0000000000a2fbe8 0000000000000120 d sm52_hw_sm_queries
0000000000a2fd08 0000000000000220 d validate_list_3d
0000000000a2ff28 0000000000000008 D util_format_dxt1_rgb_fetch
0000000000a2ff30 0000000000000008 D util_format_dxt1_rgba_fetch
0000000000a2ff38 0000000000000008 D util_format_dxt3_rgba_fetch
0000000000a2ff40 0000000000000008 D util_format_dxt5_rgba_fetch
0000000000a2ff48 0000000000000008 D util_format_dxtn_pack
0000000000a2ff50 0000000000000030 d markers.0
0000000000a2ff80 0000000000000720 d builtin_type_versions
0000000000a306a0 00000000000003f0 D nv50_ir::operationStr
0000000000a30a90 0000000000000700 D nv50_ir::gm107_builtin_code
0000000000a31190 0000000000000020 D nv50_ir::gm107_builtin_offsets
0000000000a311b0 0000000000000190 D nv50_ir::gf100_builtin_code
0000000000a31340 0000000000001590 D nv50_ir::gk104_builtin_code
0000000000a328d0 00000000000005a8 D nv50_ir::gk110_builtin_code
0000000000a32e78 0000000000000020 D nv50_ir::gf100_builtin_offsets
0000000000a32e98 0000000000000020 D nv50_ir::gk104_builtin_offsets
0000000000a32eb8 0000000000000020 D nv50_ir::gk110_builtin_offsets
0000000000a32ed8 0000000000000001 d first.1
0000000000a32edc 0000000000000004 d next_dynamic_slot
0000000000a32ee0 0000000000000004 d debug.0
0000000000a32ee8 0000000000000008 V DW.ref.__gxx_personality_v0
0000000000a32ef0 0000000000000008 V DW.ref._ZTIN10__cxxabiv115__forced_unwindE
0000000000a32ef8 0000000000000001 D std::ios_base::Init::_S_synced_with_stdio
0000000000a32f00 0000000000000008 D __cxxabiv1::__unexpected_handler
0000000000a32f08 0000000000000008 D std::__num_base::_S_atoms_out
0000000000a32f10 0000000000000008 D std::__num_base::_S_atoms_in
0000000000a32f18 0000000000000008 D std::money_base::_S_atoms
0000000000a32f20 0000000000000070 D std::__timepunct_cache<wchar_t>::_S_timezones
0000000000a32f90 0000000000000070 D std::__timepunct_cache<char>::_S_timezones
0000000000a33000 0000000000000008 d (anonymous namespace)::io_category_instance
0000000000a33008 0000000000000008 D __cxxabiv1::__terminate_handler
0000000000a33010 0000000000000010 D _floor_P
0000000000a33020 0000000000000008 D _mapping_P
0000000000a33028 0000000000000018 D _residue_P
0000000000a33040 0000000000000030 D floor1_exportbundle
0000000000a33070 0000000000000030 D floor0_exportbundle
0000000000a330a0 0000000000000028 D residue0_exportbundle
0000000000a330c8 0000000000000028 D residue1_exportbundle
0000000000a330f0 0000000000000028 D residue2_exportbundle
0000000000a33118 0000000000000028 D mapping0_exportbundle
0000000000a33390 0000000000000060 d bad_reader
0000000000a333f0 00000000000001e0 d readers
0000000000a335d0 0000000000000028 D INT123_pnts
0000000000a336d0 000000000000002c d pretab_choice
0000000000a33700 0000000000000038 D ModPlug::gSettings
0000000000a33738 0000000000000004 D CSoundFile::gnChannels
0000000000a3373c 0000000000000004 D CSoundFile::gdwMixingFreq
0000000000a33740 0000000000000004 D CSoundFile::gnBitsPerSample
0000000000a33744 0000000000000004 D CSoundFile::m_nMaxMixChannels
0000000000a33748 0000000000000004 D CSoundFile::gnVolumeRampSamples
0000000000a3374c 0000000000000004 D CSoundFile::m_nStereoSeparation
0000000000a33750 0000000000000004 D CSoundFile::gnAGC
0000000000a33754 0000000000000004 D CSoundFile::m_nXBassDepth
0000000000a33758 0000000000000004 D CSoundFile::m_nXBassRange
0000000000a3375c 0000000000000004 D CSoundFile::m_nReverbDelay
0000000000a33760 0000000000000004 D CSoundFile::m_nReverbDepth
0000000000a33764 0000000000000004 D CSoundFile::m_nProLogicDelay
0000000000a33768 0000000000000004 D CSoundFile::m_nProLogicDepth
0000000000a33770 0000000000000008 D autovibit2xm
0000000000a33778 0000000000000008 V __nx_applet_init_timeout
0000000000a33780 0000000000000001 V __nx_applet_auto_notifyrunning
0000000000a33784 0000000000000004 V __nx_applet_type
0000000000a33788 0000000000000004 V __nx_nv_transfermem_size
0000000000a3378c 0000000000000004 V __nx_nv_service_type
0000000000a33790 0000000000000004 d g_ctrl_fd
0000000000a33794 0000000000000004 d g_ctrlgpu_fd
0000000000a33798 0000000000000004 d g_nvmap_fd
0000000000a3379c 0000000000000004 V __nx_fs_num_sessions
0000000000a337a0 0000000000000004 d g_viServiceType
0000000000a337a4 0000000000000004 V __nx_vi_stray_layer_flags
0000000000a337a8 0000000000000008 V __nx_exception_stack_size
0000000000a337b0 0000000000000001 V __nx_fsdev_support_cwd
0000000000a337b4 0000000000000004 V __nx_fsdev_direntry_cache_size
0000000000a337b8 0000000000000008 d WebPInitAlphaProcessing_body_last_cpuinfo_used.0
0000000000a337c0 0000000000000008 D VP8GetCPUInfo
0000000000a337c8 0000000000000008 d VP8DspInit_body_last_cpuinfo_used.0
0000000000a337d0 0000000000000008 d VP8FiltersInit_body_last_cpuinfo_used.0
0000000000a337d8 0000000000000008 d VP8LDspInit_body_last_cpuinfo_used.0
0000000000a337e0 0000000000000008 d WebPRescalerDspInit_body_last_cpuinfo_used.0
0000000000a337e8 0000000000000008 d WebPInitUpsamplers_body_last_cpuinfo_used.0
0000000000a337f0 0000000000000008 d WebPInitYUV444Converters_body_last_cpuinfo_used.2
0000000000a337f8 0000000000000008 d WebPInitConvertARGBToYUV_body_last_cpuinfo_used.0
0000000000a33800 0000000000000008 d WebPInitSamplers_body_last_cpuinfo_used.2
0000000000a33808 0000000000000030 d g_worker_interface
0000000000a33838 0000000000000400 D BZ2_crc32Table
0000000000a33c38 0000000000000800 D BZ2_rNums
0000000000a34440 00000000000000e0 D _hb_Null_hb_buffer_t
0000000000a34520 00000000000000c0 D _hb_Null_hb_font_t
0000000000a345e0 00000000000000b8 d _hb_font_funcs_default
0000000000a34698 00000000000000b8 D _hb_Null_hb_font_funcs_t
0000000000a34750 0000000000000048 d _hb_draw_funcs_default
0000000000a34798 00000000000000d8 D _hb_Null_hb_unicode_funcs_t
0000000000a348a0 0000000000000048 D _hb_Null_hb_draw_funcs_t
0000000000a348e8 00000000000001a0 D _hb_Null_hb_face_t
0000000000a34a88 0000000000000088 D _hb_Null_hb_paint_funcs_t
0000000000a34b40 0000000000000008 D _impure_ptr
0000000000a34b48 0000000000000160 D _impure_data
0000000000a34cb0 00000000000000e7 d global_locale_string
0000000000a34d98 00000000000001a8 D __global_locale
0000000000a34f40 0000000000000020 D __default_locale
0000000000a34f60 0000000000000058 d tzinfo
0000000000a34fb8 0000000000000018 D __sglue
0000000000a34fd0 0000000000000008 D __malloc_sbrk_base
0000000000a34fd8 0000000000000008 D __malloc_trim_threshold
0000000000a34fe0 0000000000000810 D __malloc_av_
0000000000a357f0 0000000000000010 D _tzname
0000000000a35800 0000000000000008 D environ
0000000000a35808 00000000000007b0 d caseconv_table
0000000000a35fc0 0000000000000400 d _current_working_directory
0000000000a363c0 0000000000002000 d handles
0000000000a383c0 0000000000000010 d __stderr_handle
0000000000a383d0 0000000000000010 d __stdout_handle
0000000000a383e0 0000000000000010 d __stdin_handle
0000000000a383f0 0000000000000118 D devoptab_list
0000000000a38508 0000000000000004 d defaultDevice
0000000000a38510 d __tdata_lma
0000000000a38518 d __tdata_lma_end
0000000000a38520 b __bss_start__
0000000000a38520 b completed.1
0000000000a38528 b object.0
0000000000a38560 0000000000000048 B player
0000000000a385a8 0000000000000001 B quit
0000000000a385b0 0000000000000020 B brown_seal
0000000000a385d0 0000000000000010 B muzzleFlashTextures
0000000000a385e0 0000000000000001 B showMuzzleFlash
0000000000a385e4 0000000000000004 B muzzleFlashTimer
0000000000a385f0 0000000000000020 B shellTextures
0000000000a38610 0000000000000008 B backdropTexture
0000000000a38618 0000000000000008 B iceTexture
0000000000a38620 0000000000000008 B hudTexture
0000000000a38630 0000000000000050 B weaponTextures
0000000000a38680 0000000000000008 B font
0000000000a38688 0000000000000001 B isReloading
0000000000a3868c 0000000000000004 B reloadStartTime
0000000000a38690 0000000000000008 B pistolReloadSound
0000000000a38698 0000000000000004 B bulletCount
0000000000a386a0 0000000000000018 B bullets
0000000000a386b8 0000000000000008 B pistolShootSound
0000000000a386c0 0000000000000018 B shells
0000000000a386d8 0000000000000008 B startMenuBackgroundTexture
0000000000a386e0 0000000000000004 B selectedOption
0000000000a386e8 0000000000000008 B dosTitleFont
0000000000a386f0 0000000000000008 B dosFont
0000000000a386f8 0000000000000004 B selectedPauseOption
0000000000a386fc 0000000000000001 B confirmingQuit
0000000000a38700 0000000000000004 B quitConfirmOption
0000000000a38704 0000000000000001 B isPaused
0000000000a38708 0000000000000004 B selectedOptionsMenuOption
0000000000a38710 0000000000000008 B backgroundMusic
0000000000a38718 0000000000000004 B score
0000000000a3871c 0000000000000004 b TTF_byteswapped
0000000000a38720 0000000000000004 b TTF_initialized
0000000000a38728 0000000000000008 b library
0000000000a38730 0000000000000004 b initialized
0000000000a38738 0000000000000010 b Gif89
0000000000a38748 000000000000031c b GifScreen
0000000000a38a64 0000000000000004 b ZeroDataBlock
0000000000a38a68 0000000000000100 b buf.9898
0000000000a38b68 0000000000000118 b buf.9926
0000000000a38c80 0000000000000004 b clear_code.9952
0000000000a38c84 0000000000000004 b code_size.9946
0000000000a38c88 0000000000000004 b curbit.9927
0000000000a38c8c 0000000000000004 b done.9929
0000000000a38c90 0000000000000004 b end_code.9953
0000000000a38c94 0000000000000004 b firstcode.9950
0000000000a38c98 0000000000000004 b fresh.9943
0000000000a38c9c 0000000000000004 b last_byte.9930
0000000000a38ca0 0000000000000004 b lastbit.9928
0000000000a38ca4 0000000000000004 b max_code.9948
0000000000a38ca8 0000000000000004 b max_code_size.9949
0000000000a38cac 0000000000000004 b oldcode.9951
0000000000a38cb0 0000000000000004 b set_code_size.9947
0000000000a38cb8 0000000000000008 b sp.9956
0000000000a38cc0 0000000000008000 b stack.9955
0000000000a40cc0 0000000000008000 b table.9954
0000000000a48cc0 0000000000000090 b lib
0000000000a48d50 00000000000000f0 b lib
0000000000a48e40 0000000000000004 b buflen
0000000000a48e48 0000000000000008 b error
0000000000a48e50 0000000000000008 b linebuf
0000000000a48e58 0000000000000028 b lib
0000000000a48e80 0000000000000004 b audio_device
0000000000a48e84 0000000000000004 b audio_opened
0000000000a48e88 0000000000000008 b channel_done_callback
0000000000a48e90 0000000000000008 b chunk_decoders
0000000000a48e98 0000000000000008 b mix_channel
0000000000a48ea0 0000000000000008 b mix_postmix
0000000000a48ea8 0000000000000008 b mix_postmix_data
0000000000a48eb0 0000000000000020 b mixer
0000000000a48ed0 0000000000000008 b music_data
0000000000a48ed8 0000000000000004 b num_channels
0000000000a48edc 0000000000000004 b num_decoders
0000000000a48ee0 0000000000000008 b posteffects
0000000000a48ee8 0000000000000004 b reserved_channels
0000000000a48eec 0000000000000004 b ms_per_step
0000000000a48ef0 0000000000000008 B music_cmd
0000000000a48ef8 0000000000000008 b music_decoders
0000000000a48f00 0000000000000008 b music_finished_hook
0000000000a48f08 0000000000000008 b music_playing
0000000000a48f10 0000000000000004 b num_decoders
0000000000a48f18 0000000000000008 b soundfont_paths
0000000000a48f20 0000000000000048 b modplug
0000000000a48f68 0000000000000038 b settings
0000000000a48fa0 0000000000000088 b mpg123
0000000000a49028 0000000000000058 b vorbis
0000000000a49080 0000000000000040 b opus
0000000000a490c0 0000000000000100 b def_instr_name
0000000000a491c0 0000000000000004 b rcf_count.10150
0000000000a491c4 0000000000000004 B _Mix_effects_max_speed
0000000000a491c8 0000000000000008 b pathlist
0000000000a491d0 0000000000000001 b lastchan.10105
0000000000a491d1 0000000000000001 b laststatus.10104
0000000000a491d2 0000000000000001 b nrpn.10106
0000000000a491d8 0000000000000010 b rpn_lsb.10108
0000000000a491e8 0000000000000010 b rpn_msb.10107
0000000000a491f8 0000000000000008 b pos_args_array
0000000000a49200 0000000000000008 b pos_args_global
0000000000a49208 0000000000000004 b position_channels
0000000000a49210 0000000000000020 b SDL_SubsystemRefCount
0000000000a49230 0000000000000004 b SDL_bInMainQuit
0000000000a49234 0000000000000004 b assertion_running.0
0000000000a49238 0000000000000004 b spinlock.1
0000000000a49240 0000000000000008 b assertion_userdata
0000000000a49248 0000000000000008 b assertion_mutex
0000000000a49250 0000000000000008 b triggered_assertions
0000000000a49258 0000000000000008 b SDL_hints
0000000000a49260 0000000000000008 b log_function_mutex
0000000000a49268 0000000000000008 b SDL_log_userdata
0000000000a49270 0000000000000008 b SDL_loglevels
0000000000a49278 0000000000000004 b format_idx_sub
0000000000a4927c 0000000000000004 b format_idx
0000000000a49280 0000000000000080 b open_devices
0000000000a49300 00000000000000c8 b current_audio
0000000000a493c8 0000000000000004 b converters_chosen.0
0000000000a493d0 0000000000000008 B SDL_Convert_F32_to_S32
0000000000a493d8 0000000000000008 B SDL_Convert_F32_to_U16
0000000000a493e0 0000000000000008 B SDL_Convert_F32_to_S16
0000000000a493e8 0000000000000008 B SDL_Convert_F32_to_U8
0000000000a493f0 0000000000000008 B SDL_Convert_F32_to_S8
0000000000a493f8 0000000000000008 B SDL_Convert_S32_to_F32
0000000000a49400 0000000000000008 B SDL_Convert_U16_to_F32
0000000000a49408 0000000000000008 B SDL_Convert_S16_to_F32
0000000000a49410 0000000000000008 B SDL_Convert_U8_to_F32
0000000000a49418 0000000000000008 B SDL_Convert_S8_to_F32
0000000000a49420 0000000000000004 b checked.0
0000000000a49424 0000000000000004 b SDL_EventLoggingVerbosity
0000000000a49428 0000000000000040 b SDL_EventQ
0000000000a49470 0000000000000800 b SDL_disabled_events
0000000000a49c70 0000000000000004 b SDL_sentinel_pending
0000000000a49c74 0000000000000004 b SDL_event_watchers_removed
0000000000a49c78 0000000000000004 b SDL_event_watchers_dispatching
0000000000a49c7c 0000000000000004 b SDL_event_watchers_count
0000000000a49c80 0000000000000008 b SDL_event_watchers
0000000000a49c88 0000000000000018 b SDL_EventOK
0000000000a49ca0 0000000000000008 b SDL_event_watchers_lock
0000000000a49ca8 0000000000000004 b recordAll
0000000000a49cac 0000000000000004 b SDL_numGestureTouches
0000000000a49cb0 0000000000000008 b SDL_gestureTouch
0000000000a49cb8 0000000000000c18 b SDL_keyboard
0000000000a4a8d0 0000000000000004 b track_mouse_down
0000000000a4a8d8 0000000000000128 b SDL_mouse
0000000000a4aa00 0000000000000004 b send_quit_pending
0000000000a4aa08 0000000000000008 b track_touchid
0000000000a4aa10 0000000000000008 b track_fingerid
0000000000a4aa18 0000000000000004 b finger_touching
0000000000a4aa20 0000000000000008 b SDL_touchDevices
0000000000a4aa28 0000000000000004 b SDL_num_touch
0000000000a4aa30 0000000000000008 b SDL_haptics
0000000000a4aa38 0000000000000010 b SDL_ignored_controllers
0000000000a4aa48 0000000000000010 b SDL_allowed_controllers
0000000000a4aa58 0000000000000001 b gamecontroller_magic
0000000000a4aa60 0000000000000008 b s_pDefaultMapping
0000000000a4aa68 0000000000000008 b s_pSupportedControllers
0000000000a4aa70 0000000000000010 b s_zeroGUID
0000000000a4aa80 0000000000000008 b SDL_gamecontrollers
0000000000a4aa88 0000000000000001 B SDL_joystick_magic
0000000000a4aa8c 0000000000000004 b SDL_joystick_allows_background_events
0000000000a4aa90 0000000000000008 b SDL_joystick_players
0000000000a4aa98 0000000000000004 b SDL_joystick_player_count
0000000000a4aaa0 0000000000000008 b SDL_joysticks
0000000000a4aaa8 0000000000000004 b SDL_joysticks_quitting
0000000000a4aaac 0000000000000004 b SDL_joysticks_initialized
0000000000a4aab0 0000000000000004 b SDL_joysticks_locked
0000000000a4aab8 0000000000000004 b SDL_joystick_lock_pending
0000000000a4aac0 0000000000000008 b SDL_joystick_lock
0000000000a4aac8 0000000000000001 b texture_magic
0000000000a4aac9 0000000000000001 b renderer_magic
0000000000a4aacc 0000000000000004 b SDL_updating_sensor
0000000000a4aad0 0000000000000008 b SDL_sensors
0000000000a4aad8 0000000000000008 b SDL_sensor_lock
0000000000a4aae0 0000000000000080 b SDL_global_error_str.0
0000000000a4ab60 0000000000000028 b SDL_global_error.1
0000000000a4ab88 0000000000000004 b tls_lock.2
0000000000a4ab8c 0000000000000004 b tls_being_created.3
0000000000a4ab90 0000000000000004 b tls_errbuf.4
0000000000a4ab94 0000000000000004 b tls_lock.5
0000000000a4ab98 0000000000000004 b SDL_tls_id.6
0000000000a4aba0 0000000000000008 b SDL_generic_TLS
0000000000a4aba8 0000000000000008 b SDL_generic_TLS_mutex
0000000000a4abb0 00000000000000d0 b SDL_timer_data
0000000000a4ac80 0000000000000004 b formats_lock
0000000000a4ac88 0000000000000008 b formats
0000000000a4ac90 0000000000000004 b SDL_messagebox_count
0000000000a4ac98 0000000000000008 b _this
0000000000a4aca0 0000000000000004 b lock.0
0000000000a4aca4 0000000000000004 b generic_local_storage
0000000000a4aca8 0000000000000004 b operationMode
0000000000a4acb0 0000000000000008 b switch_window
0000000000a4acb8 00000000000003c0 b state
0000000000a4b078 0000000000000008 b start
0000000000a4b080 0000000000000001 b started
0000000000a4b088 0000000000000008 b g_VJoys
0000000000a4b090 0000000000000200 b keys
0000000000a4b290 0000000000000008 b last_timestamp
0000000000a4b298 0000000000000008 b prev_buttons
0000000000a4b2a0 0000000000000001 b kbdShown
0000000000a4b2a1 0000000000000001 b kbdInited
0000000000a4b2a8 0000000000000048 b kbdAppearArg
0000000000a4b2f0 00000000000005d8 b kbd
0000000000a4b8c8 0000000000000290 b touchStateOld
0000000000a4bb58 0000000000000290 b touchState
0000000000a4bde8 0000000000000030 b dummy_thread
0000000000a4be18 0000000000000008 b _eglDriver
0000000000a4be20 0000000000000010 b _eglModuleMutex
0000000000a4be30 0000000000000010 b _eglGlobalMutex
0000000000a4be40 0000000000000004 b drifb_ID
0000000000a4be48 0000000000000010 b nouveau_screen_mutex
0000000000a4be58 0000000000000004 b id.1
0000000000a4be5c 0000000000000004 b id.0
0000000000a4be60 0000000000001000 b buf.10
0000000000a4ce60 0000000000000040 b rest.3
0000000000a4cea0 0000000000000001 b value.7
0000000000a4cea8 0000000000000010 B OneTimeLock
0000000000a4ceb8 0000000000000400 B _mesa_ubyte_to_float_color_tab
0000000000a4d2b8 0000000000000001 b initialized.0
0000000000a4d2c0 0000000000000010 b DynamicIDMutex
0000000000a4d2d0 0000000000000004 b oom_msg_id.0
0000000000a4d2d8 000000000000063c b InstSize
0000000000a4d914 0000000000000001 b tableInitialized.70
0000000000a4d918 0000000000000008 b LogFile
0000000000a4d920 0000000000000004 b error_msg_id.1
0000000000a4d924 0000000000000004 b numCalls.2
0000000000a4d928 0000000000000110 B _mesa_extension_override_disables
0000000000a4da38 0000000000000110 B _mesa_extension_override_enables
0000000000a4db48 0000000000000088 b unrecognized_extensions
0000000000a4dbd0 0000000000000001 b warned.0
0000000000a4dbd8 00000000000004d8 b DummyFramebuffer
0000000000a4e0b0 0000000000000058 b DummyRenderbuffer
0000000000a4e108 00000000000004d8 b IncompleteFramebuffer
0000000000a4e5e0 0000000000000004 b msg_id.1
0000000000a4e5e4 0000000000000004 b msg_id.2
0000000000a4e5e8 0000000000000008 b format_array_format_table
0000000000a4e5f0 0000000000000004 b format_array_format_table_exists
0000000000a4e5f4 0000000000000004 b msg_id.0
0000000000a4e5f8 00000000000012c8 B driDispatchRemapTable
0000000000a4f8c0 0000000000000001 b initialized.0
0000000000a4f8c8 0000000000000008 b path.0
0000000000a4f8d0 0000000000000001 b read_env_var.1
0000000000a4f8d4 0000000000000004 b msg_id.1
0000000000a4f8d8 0000000000000001 b initialized.1
0000000000a4f8d9 0000000000000001 b initialized.3
0000000000a4f8e0 0000000000000bc0 b table.0
0000000000a504a0 0000000000000bc0 b table.2
0000000000a51060 0000000000000014 b token_tmp
0000000000a51074 0000000000000001 b value.0
0000000000a51078 0000000000000004 B ST_DEBUG
0000000000a51080 0000000000000008 b value.0
0000000000a51088 0000000000000008 b guard variable for (anonymous namespace)::builtin_builder::add_image_function(char const*, char const*, ir_function_signature* ((anonymous namespace)::builtin_builder::*)(glsl_type const*, unsigned int, unsigned int), unsigned int, unsigned int, ir_intrinsic_id)::types
0000000000a51090 0000000000000004 b builtin_users
0000000000a51098 0000000000000010 b builtins_lock
0000000000a510a8 0000000000000010 b builtins
0000000000a510b8 0000000000000108 b (anonymous namespace)::builtin_builder::add_image_function(char const*, char const*, ir_function_signature* ((anonymous namespace)::builtin_builder::*)(glsl_type const*, unsigned int, unsigned int), unsigned int, unsigned int, ir_intrinsic_id)::types
0000000000a511c0 0000000000000001 B ir_variable::temporaries_allocate_names
0000000000a511c4 0000000000000004 B glcpp_parser_debug
0000000000a511c8 0000000000000008 b guard variable for glsl_type::vec(unsigned int)::ts
0000000000a511d0 0000000000000008 b guard variable for glsl_type::bvec(unsigned int)::ts
0000000000a511d8 0000000000000008 b guard variable for glsl_type::dvec(unsigned int)::ts
0000000000a511e0 0000000000000008 b guard variable for glsl_type::ivec(unsigned int)::ts
0000000000a511e8 0000000000000008 b guard variable for glsl_type::uvec(unsigned int)::ts
0000000000a511f0 0000000000000008 b guard variable for glsl_type::i8vec(unsigned int)::ts
0000000000a511f8 0000000000000008 b guard variable for glsl_type::u8vec(unsigned int)::ts
0000000000a51200 0000000000000008 b guard variable for glsl_type::f16vec(unsigned int)::ts
0000000000a51208 0000000000000008 b guard variable for glsl_type::i16vec(unsigned int)::ts
0000000000a51210 0000000000000008 b guard variable for glsl_type::i64vec(unsigned int)::ts
0000000000a51218 0000000000000008 b guard variable for glsl_type::u16vec(unsigned int)::ts
0000000000a51220 0000000000000008 b guard variable for glsl_type::u64vec(unsigned int)::ts
0000000000a51228 0000000000000004 b glsl_type_users
0000000000a51230 0000000000000030 B glsl_type::_bool_type
0000000000a51260 0000000000000030 B glsl_type::_mat2_type
0000000000a51290 0000000000000030 B glsl_type::_mat3_type
0000000000a512c0 0000000000000030 B glsl_type::_mat4_type
0000000000a512f0 0000000000000030 B glsl_type::_uint_type
0000000000a51320 0000000000000030 B glsl_type::_vec2_type
0000000000a51350 0000000000000030 B glsl_type::_vec3_type
0000000000a51380 0000000000000030 B glsl_type::_vec4_type
0000000000a513b0 0000000000000030 B glsl_type::_vec8_type
0000000000a513e0 0000000000000030 B glsl_type::_void_type
0000000000a51410 0000000000000010 B glsl_type::hash_mutex
0000000000a51420 0000000000000030 B glsl_type::_bvec2_type
0000000000a51450 0000000000000030 B glsl_type::_bvec3_type
0000000000a51480 0000000000000030 B glsl_type::_bvec4_type
0000000000a514b0 0000000000000030 B glsl_type::_bvec8_type
0000000000a514e0 0000000000000030 B glsl_type::_dmat2_type
0000000000a51510 0000000000000030 B glsl_type::_dmat3_type
0000000000a51540 0000000000000030 B glsl_type::_dmat4_type
0000000000a51570 0000000000000030 B glsl_type::_dvec2_type
0000000000a515a0 0000000000000030 B glsl_type::_dvec3_type
0000000000a515d0 0000000000000030 B glsl_type::_dvec4_type
0000000000a51600 0000000000000030 B glsl_type::_dvec8_type
0000000000a51630 0000000000000030 B glsl_type::_error_type
0000000000a51660 0000000000000030 B glsl_type::_float_type
0000000000a51690 0000000000000030 B glsl_type::_ivec2_type
0000000000a516c0 0000000000000030 B glsl_type::_ivec3_type
0000000000a516f0 0000000000000030 B glsl_type::_ivec4_type
0000000000a51720 0000000000000030 B glsl_type::_ivec8_type
0000000000a51750 0000000000000030 B glsl_type::_uvec2_type
0000000000a51780 0000000000000030 B glsl_type::_uvec3_type
0000000000a517b0 0000000000000030 B glsl_type::_uvec4_type
0000000000a517e0 0000000000000030 B glsl_type::_uvec8_type
0000000000a51810 0000000000000030 B glsl_type::_vec16_type
0000000000a51840 0000000000000008 B glsl_type::array_types
0000000000a51848 0000000000000030 B glsl_type::_bvec16_type
0000000000a51878 0000000000000030 B glsl_type::_double_type
0000000000a518a8 0000000000000030 B glsl_type::_dvec16_type
0000000000a518d8 0000000000000030 B glsl_type::_i8vec2_type
0000000000a51908 0000000000000030 B glsl_type::_i8vec3_type
0000000000a51938 0000000000000030 B glsl_type::_i8vec4_type
0000000000a51968 0000000000000030 B glsl_type::_i8vec8_type
0000000000a51998 0000000000000030 B glsl_type::_int8_t_type
0000000000a519c8 0000000000000030 B glsl_type::_ivec16_type
0000000000a519f8 0000000000000030 B glsl_type::_mat2x3_type
0000000000a51a28 0000000000000030 B glsl_type::_mat2x4_type
0000000000a51a58 0000000000000030 B glsl_type::_mat3x2_type
0000000000a51a88 0000000000000030 B glsl_type::_mat3x4_type
0000000000a51ab8 0000000000000030 B glsl_type::_mat4x2_type
0000000000a51ae8 0000000000000030 B glsl_type::_mat4x3_type
0000000000a51b18 0000000000000030 B glsl_type::_u8vec2_type
0000000000a51b48 0000000000000030 B glsl_type::_u8vec3_type
0000000000a51b78 0000000000000030 B glsl_type::_u8vec4_type
0000000000a51ba8 0000000000000030 B glsl_type::_u8vec8_type
0000000000a51bd8 0000000000000030 B glsl_type::_uvec16_type
0000000000a51c08 0000000000000008 B glsl_type::struct_types
0000000000a51c10 0000000000000030 B glsl_type::_dmat2x3_type
0000000000a51c40 0000000000000030 B glsl_type::_dmat2x4_type
0000000000a51c70 0000000000000030 B glsl_type::_dmat3x2_type
0000000000a51ca0 0000000000000030 B glsl_type::_dmat3x4_type
0000000000a51cd0 0000000000000030 B glsl_type::_dmat4x2_type
0000000000a51d00 0000000000000030 B glsl_type::_dmat4x3_type
0000000000a51d30 0000000000000030 B glsl_type::_f16mat2_type
0000000000a51d60 0000000000000030 B glsl_type::_f16mat3_type
0000000000a51d90 0000000000000030 B glsl_type::_f16mat4_type
0000000000a51dc0 0000000000000030 B glsl_type::_f16vec2_type
0000000000a51df0 0000000000000030 B glsl_type::_f16vec3_type
0000000000a51e20 0000000000000030 B glsl_type::_f16vec4_type
0000000000a51e50 0000000000000030 B glsl_type::_f16vec8_type
0000000000a51e80 0000000000000030 B glsl_type::_i16vec2_type
0000000000a51eb0 0000000000000030 B glsl_type::_i16vec3_type
0000000000a51ee0 0000000000000030 B glsl_type::_i16vec4_type
0000000000a51f10 0000000000000030 B glsl_type::_i16vec8_type
0000000000a51f40 0000000000000030 B glsl_type::_i64vec2_type
0000000000a51f70 0000000000000030 B glsl_type::_i64vec3_type
0000000000a51fa0 0000000000000030 B glsl_type::_i64vec4_type
0000000000a51fd0 0000000000000030 B glsl_type::_i64vec8_type
0000000000a52000 0000000000000030 B glsl_type::_i8vec16_type
0000000000a52030 0000000000000030 B glsl_type::_image1D_type
0000000000a52060 0000000000000030 B glsl_type::_image2D_type
0000000000a52090 0000000000000030 B glsl_type::_image3D_type
0000000000a520c0 0000000000000030 B glsl_type::_int16_t_type
0000000000a520f0 0000000000000030 B glsl_type::_int64_t_type
0000000000a52120 0000000000000030 B glsl_type::_sampler_type
0000000000a52150 0000000000000030 B glsl_type::_u16vec2_type
0000000000a52180 0000000000000030 B glsl_type::_u16vec3_type
0000000000a521b0 0000000000000030 B glsl_type::_u16vec4_type
0000000000a521e0 0000000000000030 B glsl_type::_u16vec8_type
0000000000a52210 0000000000000030 B glsl_type::_u64vec2_type
0000000000a52240 0000000000000030 B glsl_type::_u64vec3_type
0000000000a52270 0000000000000030 B glsl_type::_u64vec4_type
0000000000a522a0 0000000000000030 B glsl_type::_u64vec8_type
0000000000a522d0 0000000000000030 B glsl_type::_u8vec16_type
0000000000a52300 0000000000000030 B glsl_type::_uint8_t_type
0000000000a52330 0000000000000030 B glsl_type::_f16vec16_type
0000000000a52360 0000000000000030 B glsl_type::_i16vec16_type
0000000000a52390 0000000000000030 B glsl_type::_i64vec16_type
0000000000a523c0 0000000000000030 B glsl_type::_iimage1D_type
0000000000a523f0 0000000000000030 B glsl_type::_iimage2D_type
0000000000a52420 0000000000000030 B glsl_type::_iimage3D_type
0000000000a52450 0000000000000030 B glsl_type::_u16vec16_type
0000000000a52480 0000000000000030 B glsl_type::_u64vec16_type
0000000000a524b0 0000000000000030 B glsl_type::_uimage1D_type
0000000000a524e0 0000000000000030 B glsl_type::_uimage2D_type
0000000000a52510 0000000000000030 B glsl_type::_uimage3D_type
0000000000a52540 0000000000000030 B glsl_type::_uint16_t_type
0000000000a52570 0000000000000030 B glsl_type::_uint64_t_type
0000000000a525a0 0000000000000008 B glsl_type::function_types
0000000000a525a8 0000000000000030 B glsl_type::_f16mat2x3_type
0000000000a525d8 0000000000000030 B glsl_type::_f16mat2x4_type
0000000000a52608 0000000000000030 B glsl_type::_f16mat3x2_type
0000000000a52638 0000000000000030 B glsl_type::_f16mat3x4_type
0000000000a52668 0000000000000030 B glsl_type::_f16mat4x2_type
0000000000a52698 0000000000000030 B glsl_type::_f16mat4x3_type
0000000000a526c8 0000000000000030 B glsl_type::_float16_t_type
0000000000a526f8 0000000000000030 B glsl_type::_image2DMS_type
0000000000a52728 0000000000000030 B glsl_type::_imageCube_type
0000000000a52758 0000000000000030 B glsl_type::_sampler1D_type
0000000000a52788 0000000000000030 B glsl_type::_sampler2D_type
0000000000a527b8 0000000000000030 B glsl_type::_sampler3D_type
0000000000a527e8 0000000000000008 B glsl_type::interface_types
0000000000a527f0 0000000000000030 B glsl_type::_iimage2DMS_type
0000000000a52820 0000000000000030 B glsl_type::_iimageCube_type
0000000000a52850 0000000000000030 B glsl_type::_isampler1D_type
0000000000a52880 0000000000000030 B glsl_type::_isampler2D_type
0000000000a528b0 0000000000000030 B glsl_type::_isampler3D_type
0000000000a528e0 0000000000000030 B glsl_type::_uimage2DMS_type
0000000000a52910 0000000000000030 B glsl_type::_uimageCube_type
0000000000a52940 0000000000000030 B glsl_type::_usampler1D_type
0000000000a52970 0000000000000030 B glsl_type::_usampler2D_type
0000000000a529a0 0000000000000030 B glsl_type::_usampler3D_type
0000000000a529d0 0000000000000008 B glsl_type::subroutine_types
0000000000a529d8 0000000000000030 B glsl_type::_atomic_uint_type
0000000000a52a08 0000000000000030 B glsl_type::_image2DRect_type
0000000000a52a38 0000000000000030 B glsl_type::_imageBuffer_type
0000000000a52a68 0000000000000030 B glsl_type::_sampler2DMS_type
0000000000a52a98 0000000000000030 B glsl_type::_samplerCube_type
0000000000a52ac8 0000000000000030 B glsl_type::_iimage2DRect_type
0000000000a52af8 0000000000000030 B glsl_type::_iimageBuffer_type
0000000000a52b28 0000000000000030 B glsl_type::_image1DArray_type
0000000000a52b58 0000000000000030 B glsl_type::_image2DArray_type
0000000000a52b88 0000000000000030 B glsl_type::_isampler2DMS_type
0000000000a52bb8 0000000000000030 B glsl_type::_isamplerCube_type
0000000000a52be8 0000000000000030 B glsl_type::_subpassInput_type
0000000000a52c18 0000000000000030 B glsl_type::_uimage2DRect_type
0000000000a52c48 0000000000000030 B glsl_type::_uimageBuffer_type
0000000000a52c78 0000000000000030 B glsl_type::_usampler2DMS_type
0000000000a52ca8 0000000000000030 B glsl_type::_usamplerCube_type
0000000000a52cd8 0000000000000030 B glsl_type::_iimage1DArray_type
0000000000a52d08 0000000000000030 B glsl_type::_iimage2DArray_type
0000000000a52d38 0000000000000030 B glsl_type::_isubpassInput_type
0000000000a52d68 0000000000000030 B glsl_type::_sampler2DRect_type
0000000000a52d98 0000000000000030 B glsl_type::_samplerBuffer_type
0000000000a52dc8 0000000000000030 B glsl_type::_uimage1DArray_type
0000000000a52df8 0000000000000030 B glsl_type::_uimage2DArray_type
0000000000a52e28 0000000000000030 B glsl_type::_usubpassInput_type
0000000000a52e58 0000000000000030 B glsl_type::_image2DMSArray_type
0000000000a52e88 0000000000000030 B glsl_type::_imageCubeArray_type
0000000000a52eb8 0000000000000030 B glsl_type::_isampler2DRect_type
0000000000a52ee8 0000000000000030 B glsl_type::_isamplerBuffer_type
0000000000a52f18 0000000000000030 B glsl_type::_sampler1DArray_type
0000000000a52f48 0000000000000030 B glsl_type::_sampler2DArray_type
0000000000a52f78 0000000000000030 B glsl_type::_subpassInputMS_type
0000000000a52fa8 0000000000000030 B glsl_type::_usampler2DRect_type
0000000000a52fd8 0000000000000030 B glsl_type::_usamplerBuffer_type
0000000000a53008 0000000000000030 B glsl_type::_iimage2DMSArray_type
0000000000a53038 0000000000000030 B glsl_type::_iimageCubeArray_type
0000000000a53068 0000000000000030 B glsl_type::_isampler1DArray_type
0000000000a53098 0000000000000030 B glsl_type::_isampler2DArray_type
0000000000a530c8 0000000000000030 B glsl_type::_isubpassInputMS_type
0000000000a530f8 0000000000000030 B glsl_type::_sampler1DShadow_type
0000000000a53128 0000000000000030 B glsl_type::_sampler2DShadow_type
0000000000a53158 0000000000000030 B glsl_type::_uimage2DMSArray_type
0000000000a53188 0000000000000030 B glsl_type::_uimageCubeArray_type
0000000000a531b8 0000000000000030 B glsl_type::_usampler1DArray_type
0000000000a531e8 0000000000000030 B glsl_type::_usampler2DArray_type
0000000000a53218 0000000000000030 B glsl_type::_usubpassInputMS_type
0000000000a53248 0000000000000008 B glsl_type::explicit_matrix_types
0000000000a53250 0000000000000030 B glsl_type::_sampler2DMSArray_type
0000000000a53280 0000000000000030 B glsl_type::_samplerCubeArray_type
0000000000a532b0 0000000000000030 B glsl_type::_isampler2DMSArray_type
0000000000a532e0 0000000000000030 B glsl_type::_isamplerCubeArray_type
0000000000a53310 0000000000000030 B glsl_type::_samplerCubeShadow_type
0000000000a53340 0000000000000030 B glsl_type::_usampler2DMSArray_type
0000000000a53370 0000000000000030 B glsl_type::_usamplerCubeArray_type
0000000000a533a0 0000000000000030 B glsl_type::_samplerExternalOES_type
0000000000a533d0 0000000000000030 B glsl_type::_sampler2DRectShadow_type
0000000000a53400 0000000000000030 B glsl_type::_sampler1DArrayShadow_type
0000000000a53430 0000000000000030 B glsl_type::_sampler2DArrayShadow_type
0000000000a53460 0000000000000030 B glsl_type::_samplerCubeArrayShadow_type
0000000000a53490 0000000000000030 B glsl_type::_int_type
0000000000a534c0 0000000000000030 b glsl_type::vec(unsigned int)::ts
0000000000a534f0 0000000000000030 b glsl_type::bvec(unsigned int)::ts
0000000000a53520 0000000000000030 b glsl_type::dvec(unsigned int)::ts
0000000000a53550 0000000000000030 b glsl_type::ivec(unsigned int)::ts
0000000000a53580 0000000000000030 b glsl_type::uvec(unsigned int)::ts
0000000000a535b0 0000000000000030 b glsl_type::i8vec(unsigned int)::ts
0000000000a535e0 0000000000000030 b glsl_type::u8vec(unsigned int)::ts
0000000000a53610 0000000000000030 b glsl_type::f16vec(unsigned int)::ts
0000000000a53640 0000000000000030 b glsl_type::i16vec(unsigned int)::ts
0000000000a53670 0000000000000030 b glsl_type::i64vec(unsigned int)::ts
0000000000a536a0 0000000000000030 b glsl_type::u16vec(unsigned int)::ts
0000000000a536d0 0000000000000030 b glsl_type::u64vec(unsigned int)::ts
0000000000a53700 0000000000000400 b views.0
0000000000a53b00 0000000000000100 b zeros.1
0000000000a53c00 0000000000000080 b error_tokens
0000000000a53c80 0000000000000004 b id.0
0000000000a53c88 0000000000000080 b buffer.1
0000000000a53d08 0000000000000004 B nouveau_mesa_debug
0000000000a53d0c 0000000000000004 b id.1
0000000000a53d10 0000000000000004 b id.0
0000000000a53d18 0000000000000008 b fout.0
0000000000a53d20 0000000000000008 b loc
0000000000a53d28 0000000000000004 b cpu_once_flag
0000000000a53d30 0000000000000014 B util_cpu_caps
0000000000a53d48 0000000000000018 b address_reg
0000000000a53d60 0000000000000018 b undef_dst
0000000000a53d78 0000000000000018 b undef_src
0000000000a53d90 0000000000000050 b buf.0
0000000000a53de0 000000000000000a b s.4
0000000000a53df0 0000000000000014 b s.6
0000000000a53e08 0000000000000014 b s.9
0000000000a53e20 0000000000000064 b str.3
0000000000a53e88 00000000000003f0 B _mesa_DummyProgram
0000000000a54278 00000000000000c8 b DummyShader
0000000000a54340 00000000000000a0 b DummyBufferObject
0000000000a543e0 0000000000000001 b disable.2
0000000000a543e4 0000000000000004 b id.0
0000000000a543e8 0000000000000004 b id.1
0000000000a543ec 0000000000000001 b read.3
0000000000a543f0 0000000000000004 b warnCount.0
0000000000a543f8 0000000000000004 b DummySemaphoreObject
0000000000a543fc 0000000000000004 b count.0
0000000000a54400 0000000000000078 b inv_tab
0000000000a54478 0000000000004800 b CachedShaders
0000000000a58c78 0000000000000004 b NumCachedShaders
0000000000a58c80 0000000000000020 b address_reg
0000000000a58ca0 0000000000000020 b address_reg2
0000000000a58cc0 0000000000000020 b sampler_reladdr
0000000000a58ce0 0000000000000020 b undef_dst
0000000000a58d00 0000000000000020 b undef_src
0000000000a58d20 0000000000000004 b glsl_to_tgsi_visitor::visit(ir_constant*)::in_array
0000000000a58d28 00000000000000f0 b gl_FogParameters_fields
0000000000a58e18 0000000000000090 b gl_LightProducts_fields
0000000000a58ea8 0000000000000150 b gl_PointParameters_fields
0000000000a58ff8 0000000000000030 b gl_LightModelProducts_fields
0000000000a59028 00000000000000f0 b gl_MaterialParameters_fields
0000000000a59118 0000000000000090 b gl_DepthRangeParameters_fields
0000000000a591a8 0000000000000030 b gl_LightModelParameters_fields
0000000000a591d8 0000000000000240 b gl_LightSourceParameters_fields
0000000000a59418 0000000000000030 B glsl_type::_struct_gl_FogParameters_type
0000000000a59448 0000000000000030 B glsl_type::_struct_gl_LightProducts_type
0000000000a59478 0000000000000030 B glsl_type::_struct_gl_PointParameters_type
0000000000a594a8 0000000000000030 B glsl_type::_struct_gl_LightModelProducts_type
0000000000a594d8 0000000000000030 B glsl_type::_struct_gl_MaterialParameters_type
0000000000a59508 0000000000000030 B glsl_type::_struct_gl_DepthRangeParameters_type
0000000000a59538 0000000000000030 B glsl_type::_struct_gl_LightModelParameters_type
0000000000a59568 0000000000000030 B glsl_type::_struct_gl_LightSourceParameters_type
0000000000a59598 0000000000000008 b nv50_ir::colour
0000000000a595a0 0000000000000121 B nv50_ir::GCRA::relDegree
0000000000a596c8 0000000000000014 b s.0
0000000000a596dc 0000000000000001 b value.0
0000000000a596e0 0000000000000010 b dynamic_mutex.0
0000000000a596f0 0000000000001800 b dynamic_stubs
0000000000a5aef0 0000000000000004 b flag.1
0000000000a5aef4 0000000000000004 b num_dynamic_stubs
0000000000a5aef8 0000000000000008 b nop_handler
0000000000a5af00 0000000000000004 b (anonymous namespace)::get_static_cond()::once
0000000000a5af10 0000000000000010 b (anonymous namespace)::fake_cond
0000000000a5af20 0000000000000008 b (anonymous namespace)::static_cond
0000000000a5af28 0000000000000004 b (anonymous namespace)::get_static_mutex()::once
0000000000a5af30 0000000000000010 b (anonymous namespace)::fake_mutex
0000000000a5af40 0000000000000008 b (anonymous namespace)::static_mutex
0000000000a5af50 0000000000000050 B __gnu_internal::buf_wcerr_sync
0000000000a5afa0 0000000000000050 B __gnu_internal::buf_wcin_sync
0000000000a5aff0 0000000000000050 B __gnu_internal::buf_wcout_sync
0000000000a5b040 0000000000000050 B __gnu_internal::buf_cerr_sync
0000000000a5b090 0000000000000050 B __gnu_internal::buf_cin_sync
0000000000a5b0e0 0000000000000050 B __gnu_internal::buf_cout_sync
0000000000a5b130 0000000000000001 b std::__ioinit
0000000000a5b138 0000000000000110 B std::wclog
0000000000a5b248 0000000000000110 B std::wcerr
0000000000a5b358 0000000000000110 B std::wcout
0000000000a5b468 0000000000000118 B std::wcin
0000000000a5b580 0000000000000110 B std::clog
0000000000a5b690 0000000000000110 B std::cerr
0000000000a5b7a0 0000000000000110 B std::cout
0000000000a5b8b0 0000000000000118 B std::cin
0000000000a5b9c8 0000000000000004 B std::locale::id::_S_refcount
0000000000a5b9d0 0000000000000004 B std::locale::facet::_S_once
0000000000a5b9d8 0000000000000008 B std::locale::facet::_S_c_locale
0000000000a5b9e0 0000000000000004 B std::locale::_S_once
0000000000a5b9e8 0000000000000008 B std::locale::_S_global
0000000000a5b9f0 0000000000000008 B std::locale::_S_classic
0000000000a5b9f8 0000000000000008 b guard variable for (anonymous namespace)::get_locale_cache_mutex()::locale_cache_mutex
0000000000a5ba00 0000000000000010 b (anonymous namespace)::get_locale_cache_mutex()::locale_cache_mutex
0000000000a5ba10 0000000000000020 V std::string::_Rep::_S_empty_rep_storage
0000000000a5ba30 0000000000000020 V std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_Rep::_S_empty_rep_storage
0000000000a5ba50 0000000000000008 B std::ctype<wchar_t>::id
0000000000a5ba58 0000000000000008 B std::ctype<char>::id
0000000000a5ba60 0000000000000008 V guard variable for std::__cxx11::collate<wchar_t>::id
0000000000a5ba68 0000000000000008 V guard variable for std::__cxx11::messages<wchar_t>::id
0000000000a5ba70 0000000000000008 V guard variable for std::__cxx11::time_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::id
0000000000a5ba78 0000000000000008 V guard variable for std::__cxx11::numpunct<wchar_t>::id
0000000000a5ba80 0000000000000008 V guard variable for std::__cxx11::moneypunct<wchar_t, true>::id
0000000000a5ba88 0000000000000008 V guard variable for std::__cxx11::moneypunct<wchar_t, false>::id
0000000000a5ba90 0000000000000008 V guard variable for std::__cxx11::money_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::id
0000000000a5ba98 0000000000000008 V guard variable for std::__cxx11::money_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::id
0000000000a5baa0 0000000000000008 V std::__cxx11::collate<wchar_t>::id
0000000000a5baa8 0000000000000008 V std::__cxx11::messages<wchar_t>::id
0000000000a5bab0 0000000000000008 V std::__cxx11::time_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::id
0000000000a5bab8 0000000000000008 V std::__cxx11::numpunct<wchar_t>::id
0000000000a5bac0 0000000000000008 V std::__cxx11::moneypunct<wchar_t, true>::id
0000000000a5bac8 0000000000000008 V std::__cxx11::moneypunct<wchar_t, false>::id
0000000000a5bad0 0000000000000008 V std::__cxx11::money_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::id
0000000000a5bad8 0000000000000008 V std::__cxx11::money_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::id
0000000000a5bae0 0000000000000004 B std::ios_base::Init::_S_refcount
0000000000a5bae8 0000000000000008 V guard variable for std::collate<char>::id
0000000000a5baf0 0000000000000008 V guard variable for std::messages<char>::id
0000000000a5baf8 0000000000000008 V guard variable for std::time_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::id
0000000000a5bb00 0000000000000008 V guard variable for std::time_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::id
0000000000a5bb08 0000000000000008 V guard variable for std::__timepunct<char>::id
0000000000a5bb10 0000000000000008 V guard variable for std::numpunct<char>::id
0000000000a5bb18 0000000000000008 V guard variable for std::moneypunct<char, true>::id
0000000000a5bb20 0000000000000008 V guard variable for std::moneypunct<char, false>::id
0000000000a5bb28 0000000000000008 V guard variable for std::money_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::id
0000000000a5bb30 0000000000000008 V guard variable for std::money_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::id
0000000000a5bb38 0000000000000008 V guard variable for std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::id
0000000000a5bb40 0000000000000008 V guard variable for std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::id
0000000000a5bb48 0000000000000008 V std::collate<char>::id
0000000000a5bb50 0000000000000008 V std::messages<char>::id
0000000000a5bb58 0000000000000008 V std::time_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::id
0000000000a5bb60 0000000000000008 V std::time_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::id
0000000000a5bb68 0000000000000008 V std::__timepunct<char>::id
0000000000a5bb70 0000000000000008 V std::numpunct<char>::id
0000000000a5bb78 0000000000000008 V std::moneypunct<char, true>::id
0000000000a5bb80 0000000000000008 V std::moneypunct<char, false>::id
0000000000a5bb88 0000000000000008 V std::money_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::id
0000000000a5bb90 0000000000000008 V std::money_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::id
0000000000a5bb98 0000000000000008 V std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::id
0000000000a5bba0 0000000000000008 V std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::id
0000000000a5bbb0 0000000000000190 b (anonymous namespace)::timepunct_cache_w
0000000000a5bd40 00000000000000a0 b (anonymous namespace)::moneypunct_cache_wf
0000000000a5bde0 00000000000000a0 b (anonymous namespace)::moneypunct_cache_wt
0000000000a5be80 0000000000000150 b (anonymous namespace)::numpunct_cache_w
0000000000a5bfd0 0000000000000190 b (anonymous namespace)::timepunct_cache_c
0000000000a5c160 0000000000000070 b (anonymous namespace)::moneypunct_cache_cf
0000000000a5c1d0 0000000000000070 b (anonymous namespace)::moneypunct_cache_ct
0000000000a5c240 0000000000000090 b (anonymous namespace)::numpunct_cache_c
0000000000a5c2d0 0000000000000010 b (anonymous namespace)::codecvt_c32_c8
0000000000a5c2e0 0000000000000010 b (anonymous namespace)::codecvt_c16_c8
0000000000a5c2f0 0000000000000010 b (anonymous namespace)::codecvt_c32
0000000000a5c300 0000000000000010 b (anonymous namespace)::codecvt_c16
0000000000a5c310 0000000000000020 b (anonymous namespace)::messages_w
0000000000a5c330 0000000000000010 b (anonymous namespace)::time_put_w
0000000000a5c340 0000000000000010 b (anonymous namespace)::time_get_w
0000000000a5c350 0000000000000028 b (anonymous namespace)::timepunct_w
0000000000a5c380 0000000000000010 b (anonymous namespace)::money_put_w
0000000000a5c390 0000000000000010 b (anonymous namespace)::money_get_w
0000000000a5c3a0 0000000000000018 b (anonymous namespace)::moneypunct_wf
0000000000a5c3c0 0000000000000018 b (anonymous namespace)::moneypunct_wt
0000000000a5c3e0 0000000000000018 b (anonymous namespace)::codecvt_w
0000000000a5c400 0000000000000010 b (anonymous namespace)::num_put_w
0000000000a5c410 0000000000000010 b (anonymous namespace)::num_get_w
0000000000a5c420 0000000000000018 b (anonymous namespace)::numpunct_w
0000000000a5c440 0000000000000018 b (anonymous namespace)::collate_w
0000000000a5c460 00000000000004f0 b (anonymous namespace)::ctype_w
0000000000a5c950 0000000000000020 b (anonymous namespace)::messages_c
0000000000a5c970 0000000000000010 b (anonymous namespace)::time_put_c
0000000000a5c980 0000000000000010 b (anonymous namespace)::time_get_c
0000000000a5c990 0000000000000028 b (anonymous namespace)::timepunct_c
0000000000a5c9c0 0000000000000010 b (anonymous namespace)::money_put_c
0000000000a5c9d0 0000000000000010 b (anonymous namespace)::money_get_c
0000000000a5c9e0 0000000000000018 b (anonymous namespace)::moneypunct_cf
0000000000a5ca00 0000000000000018 b (anonymous namespace)::moneypunct_ct
0000000000a5ca20 0000000000000018 b (anonymous namespace)::codecvt_c
0000000000a5ca40 0000000000000010 b (anonymous namespace)::num_put_c
0000000000a5ca50 0000000000000010 b (anonymous namespace)::num_get_c
0000000000a5ca60 0000000000000018 b (anonymous namespace)::numpunct_c
0000000000a5ca80 0000000000000018 b (anonymous namespace)::collate_c
0000000000a5caa0 0000000000000240 b (anonymous namespace)::ctype_c
0000000000a5cce0 0000000000000180 b (anonymous namespace)::cache_vec
0000000000a5ce60 0000000000000180 b (anonymous namespace)::facet_vec
0000000000a5cfe0 000000000000000c b (anonymous namespace)::name_c
0000000000a5cff0 0000000000000030 b (anonymous namespace)::name_vec
0000000000a5d020 0000000000000008 b (anonymous namespace)::c_locale
0000000000a5d030 0000000000000028 b (anonymous namespace)::c_locale_impl
0000000000a5d058 0000000000000008 b guard variable for (anonymous namespace)::get_locale_mutex()::locale_mutex
0000000000a5d060 0000000000000010 b (anonymous namespace)::get_locale_mutex()::locale_mutex
0000000000a5d070 0000000000000008 V guard variable for std::collate<wchar_t>::id
0000000000a5d078 0000000000000008 V guard variable for std::messages<wchar_t>::id
0000000000a5d080 0000000000000008 V guard variable for std::time_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::id
0000000000a5d088 0000000000000008 V guard variable for std::time_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::id
0000000000a5d090 0000000000000008 V guard variable for std::__timepunct<wchar_t>::id
0000000000a5d098 0000000000000008 V guard variable for std::numpunct<wchar_t>::id
0000000000a5d0a0 0000000000000008 V guard variable for std::moneypunct<wchar_t, true>::id
0000000000a5d0a8 0000000000000008 V guard variable for std::moneypunct<wchar_t, false>::id
0000000000a5d0b0 0000000000000008 V guard variable for std::money_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::id
0000000000a5d0b8 0000000000000008 V guard variable for std::money_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::id
0000000000a5d0c0 0000000000000008 V guard variable for std::num_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::id
0000000000a5d0c8 0000000000000008 V guard variable for std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::id
0000000000a5d0d0 0000000000000008 V std::collate<wchar_t>::id
0000000000a5d0d8 0000000000000008 V std::messages<wchar_t>::id
0000000000a5d0e0 0000000000000008 V std::time_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::id
0000000000a5d0e8 0000000000000008 V std::time_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::id
0000000000a5d0f0 0000000000000008 V std::__timepunct<wchar_t>::id
0000000000a5d0f8 0000000000000008 V std::numpunct<wchar_t>::id
0000000000a5d100 0000000000000008 V std::moneypunct<wchar_t, true>::id
0000000000a5d108 0000000000000008 V std::moneypunct<wchar_t, false>::id
0000000000a5d110 0000000000000008 V std::money_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::id
0000000000a5d118 0000000000000008 V std::money_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::id
0000000000a5d120 0000000000000008 V std::num_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::id
0000000000a5d128 0000000000000008 V std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::id
0000000000a5d130 0000000000000028 b (anonymous namespace)::emergency_pool
0000000000a5d158 0000000000000004 b init
0000000000a5d15c 0000000000000001 B __eh_globals_init::_S_init
0000000000a5d160 0000000000000010 b (anonymous namespace)::eh_globals
0000000000a5d170 0000000000000008 b (anonymous namespace)::__new_handler
0000000000a5d178 0000000000000008 B std::codecvt<wchar_t, char, _mbstate_t>::id
0000000000a5d180 0000000000000008 B std::codecvt<char, char, _mbstate_t>::id
0000000000a5d188 0000000000000008 B std::codecvt<char32_t, char8_t, _mbstate_t>::id
0000000000a5d190 0000000000000008 B std::codecvt<char16_t, char8_t, _mbstate_t>::id
0000000000a5d198 0000000000000008 B std::codecvt<char32_t, char, _mbstate_t>::id
0000000000a5d1a0 0000000000000008 B std::codecvt<char16_t, char, _mbstate_t>::id
0000000000a5d1b0 0000000000000020 b std::(anonymous namespace)::messages_w
0000000000a5d1d0 0000000000000010 b std::(anonymous namespace)::time_get_w
0000000000a5d1e0 0000000000000010 b std::(anonymous namespace)::money_put_w
0000000000a5d1f0 0000000000000010 b std::(anonymous namespace)::money_get_w
0000000000a5d200 0000000000000018 b std::(anonymous namespace)::moneypunct_wf
0000000000a5d220 0000000000000018 b std::(anonymous namespace)::moneypunct_wt
0000000000a5d240 0000000000000018 b std::(anonymous namespace)::numpunct_w
0000000000a5d260 0000000000000018 b std::(anonymous namespace)::collate_w
0000000000a5d280 0000000000000020 b std::(anonymous namespace)::messages_c
0000000000a5d2a0 0000000000000010 b std::(anonymous namespace)::time_get_c
0000000000a5d2b0 0000000000000010 b std::(anonymous namespace)::money_put_c
0000000000a5d2c0 0000000000000010 b std::(anonymous namespace)::money_get_c
0000000000a5d2d0 0000000000000018 b std::(anonymous namespace)::moneypunct_cf
0000000000a5d2f0 0000000000000018 b std::(anonymous namespace)::moneypunct_ct
0000000000a5d310 0000000000000018 b std::(anonymous namespace)::numpunct_c
0000000000a5d330 0000000000000018 b std::(anonymous namespace)::collate_c
0000000000a5d348 0000000000000008 V guard variable for std::__cxx11::collate<char>::id
0000000000a5d350 0000000000000008 V guard variable for std::__cxx11::messages<char>::id
0000000000a5d358 0000000000000008 V guard variable for std::__cxx11::time_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::id
0000000000a5d360 0000000000000008 V guard variable for std::__cxx11::numpunct<char>::id
0000000000a5d368 0000000000000008 V guard variable for std::__cxx11::moneypunct<char, true>::id
0000000000a5d370 0000000000000008 V guard variable for std::__cxx11::moneypunct<char, false>::id
0000000000a5d378 0000000000000008 V guard variable for std::__cxx11::money_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::id
0000000000a5d380 0000000000000008 V guard variable for std::__cxx11::money_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::id
0000000000a5d388 0000000000000008 V std::__cxx11::collate<char>::id
0000000000a5d390 0000000000000008 V std::__cxx11::messages<char>::id
0000000000a5d398 0000000000000008 V std::__cxx11::time_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::id
0000000000a5d3a0 0000000000000008 V std::__cxx11::numpunct<char>::id
0000000000a5d3a8 0000000000000008 V std::__cxx11::moneypunct<char, true>::id
0000000000a5d3b0 0000000000000008 V std::__cxx11::moneypunct<char, false>::id
0000000000a5d3b8 0000000000000008 V std::__cxx11::money_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::id
0000000000a5d3c0 0000000000000008 V std::__cxx11::money_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::id
0000000000a5d3c8 0000000000000004 b seq
0000000000a5d3cc 0000000000000004 B ModPlug::gSampleSize
0000000000a5d3d0 0000000000000004 B CSoundFile::gdwSysInfo
0000000000a5d3d4 0000000000000004 B CSoundFile::gnCPUUsage
0000000000a5d3d8 0000000000000008 B CSoundFile::gpSndMixHook
0000000000a5d3e0 0000000000000004 B CSoundFile::gdwSoundSetup
0000000000a5d3e8 0000000000000008 B CSoundFile::gpMixPluginCreateProc
0000000000a5d3f0 0000000000000004 B CSoundFile::gnVUMeter
0000000000a5d3f4 0000000000000004 B gbInitPlugins
0000000000a5d3f8 0000000000000004 B gnDryLOfsVol
0000000000a5d3fc 0000000000000004 B gnDryROfsVol
0000000000a5d400 0000000000000004 B gnReverbSend
0000000000a5d404 0000000000000004 B gnRvbLOfsVol
0000000000a5d408 0000000000000004 B gnRvbROfsVol
0000000000a5d410 0000000000000100 b XBassDelay
0000000000a5d510 0000000000000004 b nXBassMask
0000000000a5d518 0000000000000100 b XBassBuffer
0000000000a5d618 0000000000000020 b gRvbLowPass
0000000000a5d638 0000000000000004 b nDolbyDepth
0000000000a5d63c 0000000000000004 b nFilterAttn
0000000000a5d640 0000000000000004 b nReverbSize
0000000000a5d648 0000000000025800 b ReverbBuffer
0000000000a82e48 0000000000000004 b nReverbSize2
0000000000a82e4c 0000000000000004 b nReverbSize3
0000000000a82e50 0000000000000004 b nReverbSize4
0000000000a82e54 0000000000000004 b nSurroundPos
0000000000a82e58 0000000000000004 b nXBassDlyPos
0000000000a82e60 000000000001cad0 b ReverbBuffer2
0000000000a9f930 0000000000014310 b ReverbBuffer3
0000000000ab3c40 000000000000dd0c b ReverbBuffer4
0000000000ac194c 0000000000000004 b nSurroundSize
0000000000ac1950 0000000000009600 b SurroundBuffer
0000000000acaf50 0000000000000004 b nDolbyHiFltPos
0000000000acaf54 0000000000000004 b nDolbyHiFltSum
0000000000acaf58 0000000000000004 b nDolbyLoDlyPos
0000000000acaf5c 0000000000000004 b nDolbyLoFltPos
0000000000acaf60 0000000000000004 b nDolbyLoFltSum
0000000000acaf64 0000000000000004 b nReverbLoDlyPos
0000000000acaf68 0000000000000004 b nReverbLoFltPos
0000000000acaf6c 0000000000000004 b nReverbLoFltSum
0000000000acaf70 0000000000000004 b nXBassBufferPos
0000000000acaf74 0000000000000004 b nReverbBufferPos
0000000000acaf78 0000000000000004 b nReverbBufferPos2
0000000000acaf7c 0000000000000004 b nReverbBufferPos3
0000000000acaf80 0000000000000004 b nReverbBufferPos4
0000000000acaf88 0000000000000100 b DolbyLoFilterDelay
0000000000acb088 0000000000000100 b DolbyHiFilterBuffer
0000000000acb188 0000000000000100 b DolbyLoFilterBuffer
0000000000acb288 0000000000000100 b ReverbLoFilterDelay
0000000000acb388 0000000000000100 b ReverbLoFilterBuffer
0000000000acb488 0000000000000004 b nLeftNR
0000000000acb48c 0000000000000004 b nRightNR
0000000000acb490 0000000000000004 b gRvbLPPos
0000000000acb494 0000000000000004 b gRvbLPSum
0000000000acb498 0000000000000004 b nXBassSum
0000000000acb4a0 0000000000001000 B MixRearBuffer
0000000000acc4a0 0000000000001000 B MixReverbBuffer
0000000000acd4a0 0000000000002000 B MixSoundBuffer
0000000000acf4a0 0000000000002000 B CzCUBICSPLINE::lut
0000000000ad14a0 0000000000008010 B CzWINDOWEDFIR::lut
0000000000ad94b0 0000000000000001 B sfir
0000000000ad94b8 0000000000000001 B sspline
0000000000ad94c0 0000000000000780 b chordnotes
0000000000ad9c40 0000000000000004 b chordsnamed
0000000000ad9c44 0000000000000001 b global_part
0000000000ad9c48 0000000000000004 b global_voiceno
0000000000ad9c4c 0000000000000004 b global_songstart
0000000000ad9c50 0000000000000004 b global_octave_shift
0000000000ad9c54 0000000000000004 b global_tempo_factor
0000000000ad9c58 0000000000000004 b global_tempo_divider
0000000000ad9c60 0000000000000140 b chordlen
0000000000ad9da0 0000000000000280 b chordname
0000000000ada020 0000000000000004 b abc_partpat_to_orderlist(unsigned char (*) [2], char const*, _ABCHANDLE*, unsigned char**, int)::ordersize
0000000000ada028 0000000000000400 b pathforpat
0000000000ada428 00000000000000bf b pat_gm_used
0000000000ada4e8 0000000000000400 b timiditycfg
0000000000ada8e8 000000000002fc00 b midipat
0000000000b0a4e8 00000000000000bf b pat_loops
0000000000b0a5a8 0000000000000028 b pat_gm_name::buf
0000000000b0a5d0 0000000000000004 b pat_readpat(int, char*, int)::readlasttime
0000000000b0a5d8 0000000000000008 b pat_readpat(int, char*, int)::opt
0000000000b0a5e0 0000000000000008 b pat_readpat(int, char*, int)::mmpat
0000000000b0a5e8 0000000000000004 b pat_readpat(int, char*, int)::wavesize
0000000000b0a5f0 0000000000000008 b g_appletGuard
0000000000b0a5f8 0000000000000001 b g_appletInfoInitialized
0000000000b0a600 0000000000000050 b g_appletInfo
0000000000b0a650 0000000000000004 b g_appletCpuBoostMode
0000000000b0a654 0000000000000004 b g_appletThemeColorType
0000000000b0a658 000000000000000c b g_appletLibraryAppletLaunchableEvent
0000000000b0a664 0000000000000001 b g_appletSuspendedTickInitialized
0000000000b0a668 0000000000000008 b g_appletSuspendedTick
0000000000b0a670 0000000000000008 b g_appletInitTickBase
0000000000b0a678 000000000000000c b g_appletSuspendedTickEvent
0000000000b0a684 0000000000000001 b g_appletCopyrightInitialized
0000000000b0a688 0000000000000028 b g_appletCopyrightTmem
0000000000b0a6b0 0000000000000004 b g_appletRecordingInitialized
0000000000b0a6b8 0000000000000028 b g_appletRecordingTmem
0000000000b0a6e0 0000000000000018 b g_appletFirstHook
0000000000b0a6f8 0000000000000001 b g_appletNotifiedRunning
0000000000b0a6f9 0000000000000001 b g_appletFocusState
0000000000b0a6fc 0000000000000004 b g_appletPerformanceMode
0000000000b0a700 0000000000000001 b g_appletOperationMode
0000000000b0a708 0000000000000008 b g_appletResourceUserId
0000000000b0a710 000000000000000c b g_appletMessageEvent
0000000000b0a720 0000000000000010 b g_appletIDebugFunctions
0000000000b0a730 0000000000000010 b g_appletIDisplayController
0000000000b0a740 0000000000000010 b g_appletIAudioController
0000000000b0a750 0000000000000010 b g_appletIWindowController
0000000000b0a760 0000000000000010 b g_appletISelfController
0000000000b0a770 0000000000000010 b g_appletICommonStateGetter
0000000000b0a780 0000000000000010 b g_appletILibraryAppletCreator
0000000000b0a790 0000000000000010 b g_appletIProcessWindingController
0000000000b0a7a0 0000000000000010 b g_appletILibraryAppletSelfAccessor
0000000000b0a7b0 0000000000000010 b g_appletIApplicationCreator
0000000000b0a7c0 0000000000000010 b g_appletIGlobalStateController
0000000000b0a7d0 0000000000000010 b g_appletIFunctions
0000000000b0a7e0 0000000000000010 b g_appletIAppletCommonFunctions
0000000000b0a7f0 0000000000000004 b g_appletExitProcessResult
0000000000b0a7f4 0000000000000001 b g_appletExitProcessFlag
0000000000b0a7f5 0000000000000001 b g_appletLeftInitialized
0000000000b0a7f8 0000000000000010 b g_appletProxySession
0000000000b0a808 0000000000000010 b g_appletSrv
0000000000b0a818 0000000000000004 V __nx_applet_exit_mode
0000000000b0a820 0000000000000008 V __nx_applet_PerformanceConfiguration
0000000000b0a828 0000000000000080 V __nx_applet_AppletAttribute
0000000000b0a8a8 0000000000000008 b g_audrenGuard
0000000000b0a8b0 000000000000000c b g_audrenEvent
0000000000b0a8c0 0000000000000028 b g_audrenWorkBuf
0000000000b0a8e8 0000000000000010 b g_audrenIAudioRenderer
0000000000b0a8f8 0000000000000004 B g_audrenRevision
0000000000b0a900 0000000000000008 b g_hidGuard
0000000000b0a908 0000000000000008 b g_sevenSixAxisSensorBuffer
0000000000b0a910 0000000000000004 b g_hidVibrationMutex
0000000000b0a918 0000000000000020 b g_hidSharedmem
0000000000b0a938 0000000000000010 b g_hidIActiveVibrationDeviceList
0000000000b0a948 0000000000000010 b g_hidIAppletResource
0000000000b0a958 0000000000000010 b g_hidSrv
0000000000b0a968 0000000000000008 b g_nvGuard
0000000000b0a970 0000000000000028 b g_nvTransfermem
0000000000b0a998 0000000000000010 b g_nvSrvClone
0000000000b0a9a8 0000000000000010 b g_nvSrv
0000000000b0a9b8 0000000000000008 b g_psmGuard
0000000000b0a9c0 0000000000000010 b g_psmSrv
0000000000b0a9d0 0000000000000008 b g_smGuard
0000000000b0a9d8 0000000000000008 b g_smOverridesNum
0000000000b0a9e0 0000000000000180 b g_smOverrides
0000000000b0ab60 0000000000000010 b g_smSrv
0000000000b0ab70 0000000000000008 b g_nvFenceGuard
0000000000b0ab78 0000000000000300 b g_NvEvents
0000000000b0ae78 0000000000000008 b g_NvEventUsedMask
0000000000b0ae80 0000000000000008 b g_nvGpuGuard
0000000000b0ae88 0000000000000004 b g_tpc_masks
0000000000b0ae90 0000000000000028 b g_zcull_info
0000000000b0aeb8 0000000000000004 b g_zcull_ctx_size
0000000000b0aec0 00000000000000a0 b g_gpu_characteristics
0000000000b0af60 0000000000000008 b g_nvMapGuard
0000000000b0af68 0000000000000080 b g_defaultWin
0000000000b0afe8 0000000000000010 b g_viLayer
0000000000b0aff8 0000000000000050 b g_viDisplay
0000000000b0b048 0000000000000001 b g_libappletJumpFlag
0000000000b0b050 0000000000000008 b g_userIdStorage
0000000000b0b060 0000000000000010 b g_randomSeed
0000000000b0b070 0000000000000001 b g_hasRandomSeed
0000000000b0b074 0000000000000004 b g_lastLoadResult
0000000000b0b078 0000000000000008 b g_nextLoadArgv
0000000000b0b080 0000000000000008 b g_nextLoadPath
0000000000b0b088 0000000000000004 b g_processHandle
0000000000b0b090 0000000000000018 b g_syscallHints
0000000000b0b0a8 0000000000000008 b g_overrideArgv
0000000000b0b0b0 0000000000000008 b g_overrideHeapSize
0000000000b0b0b8 0000000000000008 b g_overrideHeapAddr
0000000000b0b0c0 0000000000000008 b g_loaderRetAddr
0000000000b0b0c8 0000000000000004 b g_mainThreadHandle
0000000000b0b0d0 0000000000000008 b g_loaderInfoSize
0000000000b0b0d8 0000000000000008 b g_loaderInfo
0000000000b0b0e0 0000000000000001 b g_isNso
0000000000b0b0e4 0000000000000004 b g_hosVersion
0000000000b0b0e8 0000000000000008 V __romfs_path
0000000000b0b0f0 0000000000003b00 b romfs_mounts
0000000000b0ebf0 0000000000000001 b romfs_initialised
0000000000b0ebf8 B __stack_top
0000000000b0ec00 0000000000000001 b g_IsLegacyKernel
0000000000b0ec08 0000000000000008 b g_Reservations
0000000000b0ec10 0000000000000010 b g_StackRegion
0000000000b0ec20 0000000000000010 b g_AslrRegion
0000000000b0ec30 0000000000000010 b g_HeapRegion
0000000000b0ec40 0000000000000010 b g_AliasRegion
0000000000b0ec50 0000000000000004 b g_VirtmemMutex
0000000000b0ec58 0000000000000008 b g_apmGuard
0000000000b0ec60 0000000000000010 b g_apmISession
0000000000b0ec70 0000000000000010 b g_apmSrv
0000000000b0ec80 0000000000000054 b g_bsdSessionMgr
0000000000b0ecd8 0000000000000008 b g_fsGuard
0000000000b0ece0 0000000000000054 b g_fsSessionMgr
0000000000b0ed38 0000000000000010 b g_fsSrv
0000000000b0ed48 0000000000000008 b g_viGuard
0000000000b0ed50 0000000000000010 b g_viIHOSBinderDriverIndirect
0000000000b0ed60 0000000000000010 b g_viIManagerDisplayService
0000000000b0ed70 0000000000000010 b g_viISystemDisplayService
0000000000b0ed80 0000000000000010 b g_viIHOSBinderDriverRelay
0000000000b0ed90 0000000000000010 b g_viIApplicationDisplayService
0000000000b0eda0 0000000000000010 b g_viRootService
0000000000b0edb0 0000000000000008 V __nx_vi_layer_id
0000000000b0edb8 0000000000000008 b g_argv_empty
0000000000b0edc0 0000000000000008 B __system_argv
0000000000b0edc8 0000000000000004 B __system_argc
0000000000b0edd0 0000000000000340 B __nx_exceptiondump
0000000000b0f110 0000000000000004 V __nx_exception_ignoredebug
0000000000b0f120 0000000000000400 V __nx_exception_stack
0000000000b0f520 0000000000000008 V __nx_heap_size
0000000000b0f528 0000000000000008 b __bootticks
0000000000b0f530 0000000000000008 b __boottime
0000000000b0f538 0000000000000004 V __nx_time_type
0000000000b0f540 0000000000000004 B __nxlink_host
0000000000b0f548 0000000000002800 b fsdev_fsdevices
0000000000b11d48 0000000000000004 b fsdev_fsdevice_cwd
0000000000b11d4c 0000000000000001 b fsdev_initialised
0000000000b11d50 0000000000000004 b g_randMutex
0000000000b11d54 0000000000000001 b g_randInit
0000000000b11d60 0000000000000040 b g_chacha
0000000000b11da0 00000000000000d8 b g_tlsDestructors
0000000000b11e78 0000000000000008 b g_tlsUsageMask
0000000000b11e80 0000000000000038 b g_mainThread
0000000000b11eb8 0000000000000008 b g_threadList
0000000000b11ec0 0000000000000004 b g_threadMutex
0000000000b11ec8 0000000000000008 b g_setsysGuard
0000000000b11ed0 0000000000000010 b g_setsysSrv
0000000000b11ee0 0000000000000008 b g_timeGuard
0000000000b11ee8 0000000000000020 b g_timeSharedmem
0000000000b11f08 0000000000000010 b g_timeLocalSystemClock
0000000000b11f18 0000000000000010 b g_timeTimeZoneService
0000000000b11f28 0000000000000010 b g_timeSteadyClock
0000000000b11f38 0000000000000010 b g_timeNetworkSystemClock
0000000000b11f48 0000000000000010 b g_timeUserSystemClock
0000000000b11f58 0000000000000010 b g_timeSrv
0000000000b11f68 0000000000000004 V __nx_time_service_type
0000000000b11f70 0000000000000008 b GetCoeffs
0000000000b11f78 0000000000000008 B WebPApplyAlphaMultiply
0000000000b11f80 0000000000000008 B WebPApplyAlphaMultiply4444
0000000000b11f88 0000000000000008 B WebPDispatchAlpha
0000000000b11f90 0000000000000008 B WebPDispatchAlphaToGreen
0000000000b11f98 0000000000000008 B WebPExtractAlpha
0000000000b11fa0 0000000000000008 B WebPExtractGreen
0000000000b11fa8 0000000000000008 B WebPHasAlpha32b
0000000000b11fb0 0000000000000008 B WebPHasAlpha8b
0000000000b11fb8 0000000000000010 b WebPInitAlphaProcessing_body_lock.1
0000000000b11fc8 0000000000000008 B WebPMultARGBRow
0000000000b11fd0 0000000000000008 B WebPMultRow
0000000000b11fd8 0000000000000008 B WebPPackRGB
0000000000b11fe0 0000000000000008 B VP8DitherCombine8x8
0000000000b11fe8 0000000000000010 b VP8DspInit_body_lock.1
0000000000b11ff8 0000000000000008 B VP8HFilter16
0000000000b12000 0000000000000008 B VP8HFilter16i
0000000000b12008 0000000000000008 B VP8HFilter8
0000000000b12010 0000000000000008 B VP8HFilter8i
0000000000b12018 0000000000000038 B VP8PredChroma8
0000000000b12050 0000000000000038 B VP8PredLuma16
0000000000b12088 0000000000000050 B VP8PredLuma4
0000000000b120d8 0000000000000008 B VP8SimpleHFilter16
0000000000b120e0 0000000000000008 B VP8SimpleHFilter16i
0000000000b120e8 0000000000000008 B VP8SimpleVFilter16
0000000000b120f0 0000000000000008 B VP8SimpleVFilter16i
0000000000b120f8 0000000000000008 B VP8Transform
0000000000b12100 0000000000000008 B VP8TransformAC3
0000000000b12108 0000000000000008 B VP8TransformDC
0000000000b12110 0000000000000008 B VP8TransformDCUV
0000000000b12118 0000000000000008 B VP8TransformUV
0000000000b12120 0000000000000008 B VP8TransformWHT
0000000000b12128 0000000000000008 B VP8VFilter16
0000000000b12130 0000000000000008 B VP8VFilter16i
0000000000b12138 0000000000000008 B VP8VFilter8
0000000000b12140 0000000000000008 B VP8VFilter8i
0000000000b12148 0000000000000010 b VP8FiltersInit_body_lock.1
0000000000b12158 0000000000000020 B WebPFilters
0000000000b12178 0000000000000020 B WebPUnfilters
0000000000b12198 0000000000000008 B VP8LAddGreenToBlueAndRed
0000000000b121a0 0000000000000008 B VP8LConvertBGRAToBGR
0000000000b121a8 0000000000000008 B VP8LConvertBGRAToRGB
0000000000b121b0 0000000000000008 B VP8LConvertBGRAToRGB565
0000000000b121b8 0000000000000008 B VP8LConvertBGRAToRGBA
0000000000b121c0 0000000000000008 B VP8LConvertBGRAToRGBA4444
0000000000b121c8 0000000000000010 b VP8LDspInit_body_lock.1
0000000000b121d8 0000000000000008 B VP8LMapColor32b
0000000000b121e0 0000000000000008 B VP8LMapColor8b
0000000000b121e8 0000000000000080 B VP8LPredictors
0000000000b12268 0000000000000080 B VP8LPredictorsAdd
0000000000b122e8 0000000000000080 B VP8LPredictorsAdd_C
0000000000b12368 0000000000000080 B VP8LPredictors_C
0000000000b123e8 0000000000000008 B VP8LTransformColorInverse
0000000000b123f0 0000000000000010 b WebPRescalerDspInit_body_lock.1
0000000000b12400 0000000000000008 B WebPRescalerExportRowExpand
0000000000b12408 0000000000000008 B WebPRescalerExportRowShrink
0000000000b12410 0000000000000008 B WebPRescalerImportRowExpand
0000000000b12418 0000000000000008 B WebPRescalerImportRowShrink
0000000000b12420 0000000000000010 b WebPInitUpsamplers_body_lock.1
0000000000b12430 0000000000000010 b WebPInitYUV444Converters_body_lock.3
0000000000b12440 0000000000000068 B WebPUpsamplers
0000000000b124a8 0000000000000068 B WebPYUV444Converters
0000000000b12510 0000000000000008 B WebPConvertARGBToUV
0000000000b12518 0000000000000008 B WebPConvertARGBToY
0000000000b12520 0000000000000008 B WebPConvertBGR24ToY
0000000000b12528 0000000000000008 B WebPConvertRGB24ToY
0000000000b12530 0000000000000008 B WebPConvertRGBA32ToUV
0000000000b12538 0000000000000010 b WebPInitConvertARGBToYUV_body_lock.1
0000000000b12548 0000000000000010 b WebPInitSamplers_body_lock.3
0000000000b12558 0000000000000068 B WebPSamplers
0000000000b125c0 0000000000000008 B WebPSharpYUVFilterRow
0000000000b125c8 0000000000000008 B WebPSharpYUVUpdateRGB
0000000000b125d0 0000000000000008 B WebPSharpYUVUpdateY
0000000000b125d8 0000000000000008 b langs
0000000000b125e0 0000000000000004 B _hb_options
0000000000b125e8 0000000000000008 b static_ot_funcs
0000000000b125f0 0000000000000001 b hb_ot_font_cmap_cache_user_data_key
0000000000b125f8 0000000000000008 b static_outline_recording_pen_funcs
0000000000b12600 0000000000000008 b static_paint_extents_funcs
0000000000b12608 0000000000000008 b static_draw_extents_funcs
0000000000b12610 0000000000000008 b static_shapers
0000000000b12620 00000000000001c0 B _hb_CrapPool
0000000000b127e0 0000000000000008 b static_ft_funcs
0000000000b127e8 0000000000000004 b hb_ot_tags_from_language(char const*, char const*, unsigned int*, unsigned int*)::last_tag_idx
0000000000b127f0 0000000000000008 b static_ucd_funcs
0000000000b127f8 0000000000000004 b once_regsizes.0
0000000000b12800 0000000000000062 b dwarf_reg_size_table
0000000000b12868 0000000000000010 b object_mutex
0000000000b12878 0000000000000008 b seen_objects
0000000000b12880 0000000000000008 b unseen_objects
0000000000b12890 00000000000000e0 b saved_categories.0
0000000000b12970 00000000000000e0 b new_categories.1
0000000000b12a50 000000000000000c b __sfp_recursive_mutex
0000000000b12a60 0000000000000228 B __sf
0000000000b12c88 0000000000000008 B __stdio_exit_handler
0000000000b12c90 0000000000000004 b __tz_mutex
0000000000b12c98 0000000000000028 B __malloc_current_mallinfo
0000000000b12cc0 0000000000000008 B __malloc_max_total_mem
0000000000b12cc8 0000000000000008 B __malloc_max_sbrked_mem
0000000000b12cd0 0000000000000008 B __malloc_top_pad
0000000000b12cd8 0000000000000008 b prev_tzenv
0000000000b12ce0 000000000000000c b __tzname_dst
0000000000b12cf0 000000000000000c b __tzname_std
0000000000b12d00 000000000000000c b __malloc_recursive_mutex
0000000000b12d0c 0000000000000004 b alloced.0
0000000000b12d10 0000000000000008 B _timezone
0000000000b12d18 0000000000000004 B _daylight
0000000000b12d20 000000000000000c b __env_recursive_mutex
0000000000b12d30 0000000000000008 b initial_env
0000000000b12d38 0000000000000318 B __atexit0
0000000000b13050 0000000000000008 B __atexit
0000000000b13058 000000000000000c B __atexit_recursive_mutex
0000000000b13070 0000000000000400 b temp_cwd
0000000000b13470 0000000000000004 b __hndl_lock
0000000000b13478 0000000000000008 B fake_heap_start
0000000000b13480 0000000000000008 B fake_heap_end
0000000000b13488 0000000000000004 b __pthread_once_cv
0000000000b1348c 0000000000000004 b __pthread_once_lock
0000000000b13490 0000000000000008 b heap_start.0
0000000000b13498 0000000000000020 B music_spec
0000000000b134b8 0000000000000400 B master_drumset
0000000000b138b8 0000000000000400 B master_tonebank
0000000000b13cb8 b __tls_start
0000000000b140e8 b __bss_end__
0000000000b140e8 a __end__
0000000000b140e8 b __tls_end
0000000000b15000 a __argdata__
