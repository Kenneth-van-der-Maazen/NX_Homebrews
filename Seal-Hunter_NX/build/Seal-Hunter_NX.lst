0000000000000000 a __start__
0000000000000000 0000000000000008 D _glapi_tls_Dispatch
0000000000000000 T _start
0000000000000000 d _TLS_MODULE_BASE_
0000000000000008 0000000000000008 b _egl_TLS
0000000000000010 0000000000000008 B _glapi_tls_Context
0000000000000018 0000000000000004 B g_bsdErrno
000000000000001c 0000000000000004 B g_bsdResult
0000000000000020 0000000000000004 b g_fsPriority
0000000000000024 0000000000000004 b fsdev_last_result
0000000000000028 0000000000000401 B __nx_dev_path_buf
00000000000000e0 T __nx_exit
00000000000000f0 T __nx_mod0
0000000000000124 0000000000000034 W __gnu_cxx::__throw_concurrence_lock_error()
0000000000000158 0000000000000034 W __gnu_cxx::__throw_concurrence_unlock_error()
000000000000018c 0000000000000034 W __gnu_cxx::__throw_concurrence_broadcast_error()
00000000000001c0 0000000000000050 t std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::~basic_string() [clone .isra.0]
0000000000000210 0000000000000050 t std::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string() [clone .isra.0]
0000000000000260 0000000000000014 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, unsigned long, std::allocator<char> const&) [clone .part.0]
0000000000000260 0000000000000014 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .part.0]
0000000000000260 0000000000000014 t std::__cxx11::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::basic_string(wchar_t const*, unsigned long, std::allocator<wchar_t> const&) [clone .part.0]
0000000000000274 0000000000000034 T std::__throw_bad_alloc()
00000000000002a8 0000000000000034 T std::__throw_bad_array_new_length()
00000000000002dc 0000000000000034 T std::__throw_bad_cast()
0000000000000310 0000000000000054 T std::__throw_logic_error(char const*)
0000000000000364 0000000000000054 T std::__throw_length_error(char const*)
00000000000003b8 0000000000000054 T std::__throw_out_of_range(char const*)
000000000000040c 000000000000000c T std::__throw_out_of_range_fmt(char const*, ...)
0000000000000418 0000000000000054 T std::__throw_runtime_error(char const*)
000000000000046c 0000000000000180 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_replace_cold(char*, unsigned long, char const*, unsigned long, unsigned long)
00000000000005ec 0000000000000050 t std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::~basic_string() [clone .isra.0]
000000000000063c 0000000000000050 t std::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string() [clone .isra.0]
000000000000068c 0000000000000194 W std::__cxx11::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_M_replace_cold(wchar_t*, unsigned long, wchar_t const*, unsigned long, unsigned long)
0000000000000820 0000000000000034 T __cxa_throw_bad_array_new_length
0000000000000854 0000000000000010 T std::terminate()
0000000000000864 0000000000000010 T std::unexpected()
0000000000000874 00000000000000a0 T std::__throw_ios_failure(char const*)
0000000000000914 0000000000000044 T __cxa_call_terminate
0000000000000960 0000000000000118 t _GLOBAL__sub_D_sealCubTextures
0000000000000a80 000000000000000c t _GLOBAL__sub_D_builtin_functions.cpp
0000000000000a90 00000000000008a0 t _GLOBAL__sub_D_glsl_types.cpp
0000000000001330 000000000000006c t _GLOBAL__sub_D_builtin_types.cpp
00000000000013a0 000000000000000c t _GLOBAL__sub_D.00090_globals_io.cc
00000000000013c0 0000000000000034 t _GLOBAL__sub_D_eh_globals.cc
0000000000001400 0000000000000034 T exit
0000000000001440 00000000000008e0 T main
0000000000001d20 00000000000000b4 t _GLOBAL__sub_I_sealCubTextures
0000000000001de0 0000000000000014 t _GLOBAL__sub_I_builtin_functions.cpp
0000000000001e00 0000000000001f80 t _GLOBAL__sub_I_glsl_types.cpp
0000000000003d80 0000000000000044 t _GLOBAL__sub_I_ir_to_mesa.cpp
0000000000003dd0 0000000000000090 t _GLOBAL__sub_I_st_glsl_to_tgsi.cpp
0000000000003e60 0000000000000f08 t _GLOBAL__sub_I_builtin_types.cpp
0000000000004d70 0000000000000048 t _GLOBAL__sub_I_nv50_ir_ra.cpp
0000000000004dc0 000000000000000c t _GLOBAL__sub_I.00090_globals_io.cc
0000000000004de0 00000000000000a4 t _GLOBAL__sub_I_cxx11_wlocale_inst.cc
0000000000004ea0 0000000000000108 t _GLOBAL__sub_I_locale_inst.cc
0000000000004fc0 0000000000000108 t _GLOBAL__sub_I_wlocale_inst.cc
00000000000050e0 000000000000020c t _GLOBAL__sub_I_eh_alloc.cc
0000000000005300 0000000000000038 t _GLOBAL__sub_I_eh_globals.cc
0000000000005340 00000000000000a4 t _GLOBAL__sub_I_cxx11_locale_inst.cc
00000000000053f0 0000000000000024 t _GLOBAL__sub_I_fastmix.cpp
0000000000005420 t __do_global_dtors_aux
0000000000005480 t frame_dummy
00000000000054b0 0000000000000008 W std::ctype<char>::do_widen(char) const
00000000000054c0 0000000000000084 t std::basic_ostream<char, std::char_traits<char> >& std::endl<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&) [clone .isra.0]
0000000000005550 00000000000000bc t void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*, std::forward_iterator_tag) [clone .isra.0]
0000000000005610 0000000000000088 T renderText(SDL_Renderer*, char const*, _TTF_Font*, int, int, SDL_Color)
00000000000056a0 0000000000000220 T initPlayer(SDL_Renderer*)
00000000000058c0 000000000000007c T initBrownSeal(SDL_Renderer*)
0000000000005940 0000000000000318 T initSealCubTextures(SDL_Renderer*)
0000000000005c60 0000000000000300 T initSealCubDeathTextures(SDL_Renderer*)
0000000000005f60 0000000000000218 T spawnSealCub(SDL_Renderer*)
0000000000006180 0000000000000124 T initBloodTexture(SDL_Renderer*)
00000000000062b0 0000000000000090 T renderSealCubs(SDL_Renderer*)
0000000000006340 0000000000000170 T updateSealCubs()
00000000000064b0 0000000000000080 T initMuzzleFlash(SDL_Renderer*)
0000000000006530 00000000000000a8 T renderMuzzleFlash(SDL_Renderer*)
00000000000065e0 0000000000000190 T initShellTextures(SDL_Renderer*)
0000000000006770 0000000000000080 T initBackdropAndIce(SDL_Renderer*)
00000000000067f0 0000000000000124 T initHUD(SDL_Renderer*)
0000000000006920 0000000000000338 T initWeapons(SDL_Renderer*)
0000000000006c60 00000000000008a0 T renderHUD(SDL_Renderer*)
0000000000007500 0000000000000064 T renderBackdropAndIce(SDL_Renderer*)
0000000000007570 00000000000003b8 T renderPlayer(SDL_Renderer*)
0000000000007930 0000000000000288 T shootBullet()
0000000000007bc0 00000000000002ac T updateFloatingTexts()
0000000000007e70 00000000000000a4 T updateReload()
0000000000007f20 00000000000000b8 T renderFloatingTexts(SDL_Renderer*)
0000000000007fe0 000000000000009c T renderBullets(SDL_Renderer*)
0000000000008080 0000000000000088 T renderShells(SDL_Renderer*)
0000000000008110 00000000000000b4 T updateShells()
00000000000081d0 0000000000000544 T renderBulletCount(SDL_Renderer*)
0000000000008720 0000000000000088 T renderBloodSplatters(SDL_Renderer*)
00000000000087b0 0000000000000124 T handlePlayerMovement(PadState*)
00000000000088e0 0000000000000198 T renderStartMenu(SDL_Renderer*)
0000000000008a80 00000000000000d8 T renderPauseMenu(SDL_Renderer*)
0000000000008b60 00000000000000d8 T handlePauseMenuInput(PadState*)
0000000000008c40 0000000000000088 T handleStartMenuInput(PadState*)
0000000000008cd0 00000000000000e4 T renderOptionsMenu(SDL_Renderer*)
0000000000008dc0 0000000000000088 T handleOptionsMenuInput(PadState*)
0000000000008e50 000000000000010c T renderQuitConfirmation(SDL_Renderer*)
0000000000008f60 00000000000000cc T handleEvents(PadState*)
0000000000009030 00000000000001a0 W void std::vector<FloatingText, std::allocator<FloatingText> >::_M_realloc_append<FloatingText const&>(FloatingText const&)
00000000000091d0 00000000000000d8 T addFloatingText(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int, int)
00000000000092b0 0000000000000310 T updateBullets()
00000000000095c0 0000000000000064 t RWread
0000000000009630 00000000000001dc t TTF_initFontMetrics
0000000000009810 0000000000000b88 t Load_Glyph
000000000000a3a0 0000000000000084 t UCS2_to_UTF8_len
000000000000a430 00000000000000c8 t UCS2_to_UTF8
000000000000a500 0000000000000168 t AllocateAlignedPixels
000000000000a670 00000000000000ac t Create_Surface_Solid
000000000000a720 0000000000000184 t Create_Surface_Shaded
000000000000a8b0 0000000000000098 t Create_Surface_Blended
000000000000a950 00000000000000ac t Create_Surface_LCD.isra.0
000000000000aa00 00000000000000b4 t clip_glyph.isra.0
000000000000aac0 0000000000000160 t Draw_Line.isra.0
000000000000ac20 000000000000006c t Flush_Cache
000000000000ac90 00000000000006e0 t TTF_Size_Internal
000000000000b370 0000000000000698 t Render_Line_64_Blended
000000000000ba10 00000000000006a4 t Render_Line_64_Blended_SP
000000000000c0c0 00000000000033fc t Render_Line
000000000000f4c0 000000000000039c t TTF_Render_Internal
000000000000f860 000000000000005c T TTF_Init
000000000000f8c0 00000000000000e0 T TTF_SetFontSizeDPI
000000000000f9a0 000000000000007c T TTF_CloseFont
000000000000fa20 000000000000001c T TTF_SetFontKerning
000000000000fa40 00000000000002cc T TTF_OpenFontIndexDPIRW
000000000000fd10 0000000000000064 T TTF_OpenFontIndexDPI
000000000000fd80 000000000000000c T TTF_OpenFontIndex
000000000000fd90 0000000000000008 T TTF_OpenFont
000000000000fda0 0000000000000014 T TTF_RenderText_Solid
000000000000fdc0 0000000000000014 T TTF_RenderText_Blended
000000000000fde0 0000000000000044 T TTF_Quit
000000000000fe30 00000000000000cc T IMG_Init
000000000000ff00 00000000000001b4 T IMG_LoadTyped_RW
00000000000100c0 0000000000000060 T IMG_Load
0000000000010120 00000000000000b4 t IMG_isICOCUR
00000000000101e0 00000000000006d8 t LoadICOCUR_RW.constprop.0
00000000000108c0 00000000000000ac T IMG_isBMP
0000000000010970 0000000000000008 T IMG_isICO
0000000000010980 0000000000000008 T IMG_isCUR
0000000000010990 0000000000000be8 T IMG_LoadBMP_RW
0000000000011580 0000000000000008 T IMG_LoadICO_RW
0000000000011590 0000000000000008 T IMG_LoadCUR_RW
00000000000115a0 0000000000000078 t GetDataBlock
0000000000011620 00000000000000b0 t ReadColorMap
00000000000116d0 0000000000000150 t GetCode.part.0
0000000000011820 00000000000003d8 t LWZReadByte.part.1
0000000000011c00 00000000000006a0 t ReadImage.isra.2
00000000000122a0 00000000000000e4 T IMG_isGIF
0000000000012390 00000000000004d4 T IMG_LoadGIF_RW
0000000000012870 0000000000000004 t init_source
0000000000012880 000000000000005c t fill_input_buffer
00000000000128e0 000000000000007c t skip_input_data
0000000000012960 0000000000000018 t my_error_exit
0000000000012980 0000000000000004 t output_no_message
0000000000012990 0000000000000004 t term_source
00000000000129a0 00000000000000c4 T IMG_InitJPG
0000000000012a70 00000000000001ac T IMG_isJPG
0000000000012c20 00000000000002e0 T IMG_LoadJPG_RW
0000000000012f00 00000000000000e4 T IMG_isLBM
0000000000012ff0 0000000000000ad4 T IMG_LoadLBM_RW
0000000000013ad0 00000000000000a8 T IMG_isPCX
0000000000013b80 0000000000000544 T IMG_LoadPCX_RW
00000000000140d0 000000000000002c t png_read_data
0000000000014100 0000000000000160 T IMG_InitPNG
0000000000014260 00000000000000c0 T IMG_isPNG
0000000000014320 0000000000000568 T IMG_LoadPNG_RW
0000000000014890 00000000000000e8 t ReadNumber
0000000000014980 00000000000000ac T IMG_isPNM
0000000000014a30 0000000000000424 T IMG_LoadPNM_RW
0000000000014e60 000000000000007c t nsvg__xformMultiply
0000000000014ee0 0000000000000108 t nsvg__xformInverse
0000000000014ff0 0000000000000128 t nsvg__convertToPixels
0000000000015120 00000000000000d8 t nsvg__parseUnits
0000000000015200 0000000000000048 t nsvg__scaleGradient
0000000000015250 0000000000000020 t nsvg__cmpEdge
0000000000015270 0000000000000058 t nsvg__applyOpacity
00000000000152d0 00000000000002f4 t nsvg__parseElement
00000000000155d0 0000000000000050 t nsvg__strndup
0000000000015620 0000000000000108 t nsvg__content
0000000000015730 0000000000000048 t nsvg__xformPremultiply
0000000000015780 000000000000026c t nsvg__parseColor
00000000000159f0 0000000000000048 t nsvg__parseOpacity
0000000000015a40 000000000000004c t nsvg__parseCoordinateRaw
0000000000015a90 0000000000000040 t nsvg__actualLength
0000000000015ad0 00000000000002b8 t nsvg__createGradient
0000000000015d90 0000000000000068 t nsvg__normalize
0000000000015e00 00000000000001d8 t nsvg__atof
0000000000015fe0 0000000000000084 t nsvg__addPoint
0000000000016070 00000000000000a0 t nsvg__lineTo
0000000000016110 000000000000005c t nsvg__cubicBezTo
0000000000016170 0000000000000034 t nsvg__moveTo
00000000000161b0 00000000000000e8 t nsvg__addPathPoint
00000000000162a0 00000000000001a0 t nsvg__flattenCubicBez
0000000000016440 0000000000000080 t nsvg__appendPathPoint
00000000000164c0 00000000000000a4 t nsvg__vecang
0000000000016570 0000000000000048 t nsvg__deletePaths
00000000000165c0 00000000000002f4 t nsvg__curveBounds
00000000000168c0 00000000000001fc t nsvg__addPath
0000000000016ac0 00000000000003bc t nsvg__initPaint.part.9
0000000000016e80 00000000000000b4 t nsvg__endElement
0000000000016f40 00000000000001a0 t nsvg__prepareStroke.isra.12
00000000000170e0 00000000000000e4 t nsvg__addEdge
00000000000171d0 00000000000001bc t nsvg__roundCap.isra.23
0000000000017390 00000000000001b4 t nsvg__getLocalBounds.isra.26
0000000000017550 000000000000033c t nsvg__addShape
0000000000017890 00000000000000d8 t nsvg__fillScanline.constprop.30
0000000000017970 00000000000008d0 t nsvg__rasterizeSortedEdges
0000000000018240 000000000000020c t nsvg__parseNumber.constprop.34
0000000000018450 0000000000000168 t nsvg__parseTransformArgs.constprop.33
00000000000185c0 0000000000000408 t nsvg__parseTransform
00000000000189d0 0000000000000988 t nsvg__parseAttr
0000000000019360 00000000000001a4 t nsvg__parseNameValue
0000000000019510 0000000000000114 t nsvg__parseStyle
0000000000019630 0000000000000070 t nsvg__parseAttribs
00000000000196a0 000000000000015c t nsvg__parseGradientStop
0000000000019800 0000000000000314 t nsvg__parseGradient
0000000000019b20 00000000000000b4 t nsvg__getNextPathItem
0000000000019be0 0000000000000134 t nsvg__parsePoly
0000000000019d20 0000000000001c40 t nsvg__startElement
000000000001b960 00000000000007d8 t nsvg__expandStroke
000000000001c140 0000000000000164 T nsvg__parseXML
000000000001c2b0 00000000000000b0 T nsvgDelete
000000000001c360 00000000000005c0 T nsvgParse
000000000001c920 0000000000000074 T nsvgDeleteRasterizer
000000000001c9a0 0000000000000050 T nsvgCreateRasterizer
000000000001c9f0 0000000000000aec T nsvgRasterize
000000000001d4e0 00000000000000b8 T IMG_isSVG
000000000001d5a0 0000000000000100 T IMG_LoadSVG_RW
000000000001d6a0 00000000000006dc T IMG_LoadTGA_RW
000000000001dd80 0000000000000020 T IMG_InitTIF
000000000001dda0 0000000000000008 T IMG_isTIF
000000000001ddb0 0000000000000008 T IMG_LoadTIF_RW
000000000001ddc0 0000000000000040 t free_xcf_header
000000000001de00 0000000000000050 t load_xcf_tile_none
000000000001de50 0000000000000128 t xcf_read_property
000000000001df80 00000000000000b4 t read_string
000000000001e040 0000000000000204 t load_xcf_tile_rle
000000000001e250 00000000000000ac T IMG_isXCF
000000000001e300 0000000000000d2c T IMG_LoadXCF_RW
000000000001f030 00000000000000a8 t get_colorhash.isra.0
000000000001f0e0 00000000000001a4 t get_next_line.part.1
000000000001f290 0000000000000788 t load_xpm
000000000001fa20 00000000000000ac T IMG_isXPM
000000000001fad0 0000000000000014 T IMG_LoadXPM_RW
000000000001faf0 0000000000000088 t get_line.constprop.0
000000000001fb80 000000000000010c t get_header
000000000001fc90 0000000000000078 T IMG_isXV
000000000001fd10 0000000000000148 T IMG_LoadXV_RW
000000000001fe60 0000000000000170 t webp_getinfo
000000000001ffd0 0000000000000040 T IMG_InitWEBP
0000000000020010 0000000000000008 T IMG_isWEBP
0000000000020020 0000000000000234 T IMG_LoadWEBP_RW
0000000000020260 000000000000007c t _Mix_remove_all_effects
00000000000202e0 0000000000000044 t _Mix_channel_done_playing
0000000000020330 00000000000000d4 t Mix_DoEffects
0000000000020410 00000000000000b0 t add_chunk_decoder
00000000000204c0 000000000000061c T Mix_LoadWAV_RW
0000000000020ae0 00000000000000bc T Mix_FreeChunk
0000000000020ba0 00000000000000b4 T Mix_Volume
0000000000020ba0 00000000000000b4 t Mix_Volume.localalias.9
0000000000020c60 00000000000003ec t mix_channels
0000000000021050 00000000000000ec T Mix_HaltChannel
0000000000021050 00000000000000ec t Mix_HaltChannel.localalias.8
0000000000021140 00000000000000bc T Mix_Playing
0000000000021200 0000000000000200 T Mix_PlayChannelTimed
0000000000021400 0000000000000060 t _Mix_UnregisterAllEffects_locked
0000000000021460 0000000000000040 T Mix_UnregisterAllEffects
00000000000214a0 00000000000000d4 T Mix_CloseAudio
0000000000021580 00000000000001cc T Mix_OpenAudioDevice
0000000000021750 000000000000000c T Mix_OpenAudio
0000000000021760 000000000000000c t Mix_LockAudio
0000000000021770 000000000000000c t Mix_UnlockAudio
0000000000021780 0000000000000058 t music_internal_halt
00000000000217e0 000000000000006c t music_internal_playing
0000000000021850 00000000000000b0 t add_music_decoder
0000000000021900 0000000000000308 t open_music_type.part.0
0000000000021c10 0000000000000008 t get_num_music_interfaces
0000000000021c20 0000000000000010 t get_music_interface
0000000000021c30 0000000000000100 t music_pcm_getaudio
0000000000021d30 00000000000001b4 T music_mixer
0000000000021ef0 0000000000000108 t load_music_type
0000000000022000 000000000000001c t open_music_type
0000000000022020 00000000000000b4 t detect_music_type_from_magic
00000000000220e0 0000000000000350 T Mix_LoadMUSType_RW
0000000000022430 00000000000003e0 T Mix_LoadMUS
0000000000022810 000000000000007c T Mix_FreeMusic
0000000000022890 0000000000000220 T Mix_FadeInMusicPos
0000000000022ab0 000000000000000c T Mix_PlayMusic
0000000000022ac0 0000000000000078 T Mix_VolumeMusic
0000000000022b40 000000000000008c t open_music
0000000000022bd0 000000000000003c T Mix_HaltMusic
0000000000022c10 0000000000000050 T Mix_PauseMusic
0000000000022c60 0000000000000054 T Mix_ResumeMusic
0000000000022cc0 0000000000000080 T Mix_SetMusicCMD
0000000000022d40 00000000000000a0 t close_music
0000000000022de0 0000000000000068 t MODPLUG_Load
0000000000022e50 0000000000000018 t MODPLUG_Unload
0000000000022e70 00000000000000dc t MODPLUG_Open
0000000000022f50 0000000000000014 t MODPLUG_SetVolume
0000000000022f70 0000000000000030 t MODPLUG_Play
0000000000022fa0 0000000000000038 t MODPLUG_Seek
0000000000022fe0 000000000000004c t MODPLUG_Delete
0000000000023030 0000000000000168 T MODPLUG_CreateFromRW
00000000000231a0 0000000000000010 t MODPLUG_GetAudio
00000000000231b0 00000000000000e4 t MODPLUG_GetSome
00000000000232a0 00000000000000b8 t MPG123_Load
0000000000023360 0000000000000018 t MPG123_Unload
0000000000023380 0000000000000010 t rwops_read
0000000000023390 0000000000000008 t rwops_seek
00000000000233a0 0000000000000004 t rwops_cleanup
00000000000233b0 0000000000000008 t MPG123_SetVolume
00000000000233c0 000000000000000c t MPG123_Close
00000000000233d0 0000000000000074 t MPG123_Delete
0000000000023450 0000000000000034 t MPG123_Open
0000000000023490 0000000000000010 t MPG123_GetAudio
00000000000234a0 0000000000000028 t mpg_err
00000000000234d0 0000000000000074 t MPG123_Seek
0000000000023550 000000000000000c t MPG123_Play
0000000000023560 000000000000020c t MPG123_CreateFromRW
0000000000023770 00000000000001e4 t MPG123_GetSome
0000000000023960 000000000000007c t OGG_Load
00000000000239e0 0000000000000018 t OGG_Unload
0000000000023a00 000000000000001c t sdl_read_func
0000000000023a20 0000000000000018 t sdl_seek_func
0000000000023a40 0000000000000010 t sdl_tell_func
0000000000023a50 0000000000000008 t OGG_SetVolume
0000000000023a60 0000000000000060 t OGG_Delete
0000000000023ac0 00000000000001dc t set_ov_error
0000000000023ca0 0000000000000050 t OGG_Seek
0000000000023cf0 000000000000000c t OGG_Play
0000000000023d00 0000000000000010 t OGG_GetAudio
0000000000023d10 000000000000010c t OGG_UpdateSection
0000000000023e20 0000000000000304 t OGG_CreateFromRW
0000000000024130 00000000000001d0 t OGG_GetSome
0000000000024300 000000000000005c t OPUS_Load
0000000000024360 0000000000000018 t OPUS_Unload
0000000000024380 0000000000000020 t sdl_read_func
00000000000243a0 000000000000001c t sdl_seek_func
00000000000243c0 0000000000000010 t sdl_tell_func
00000000000243d0 0000000000000008 t OPUS_SetVolume
00000000000243e0 0000000000000060 t OPUS_Delete
0000000000024440 00000000000001f8 t set_op_error
0000000000024640 0000000000000050 t OPUS_Seek
0000000000024690 000000000000000c t OPUS_Play
00000000000246a0 0000000000000010 t OPUS_GetAudio
00000000000246b0 0000000000000108 t OPUS_UpdateSection
00000000000247c0 0000000000000144 t OPUS_CreateFromRW
0000000000024910 0000000000000140 t OPUS_GetSome
0000000000024a50 0000000000000044 t TIMIDITY_Delete
0000000000024aa0 0000000000000124 T TIMIDITY_CreateFromRW
0000000000024bd0 0000000000000004 t TIMIDITY_Close
0000000000024be0 0000000000000030 t TIMIDITY_Seek
0000000000024c10 0000000000000010 t TIMIDITY_GetAudio
0000000000024c20 0000000000000038 t TIMIDITY_Play
0000000000024c60 0000000000000008 t TIMIDITY_SetVolume
0000000000024c70 0000000000000004 t TIMIDITY_Open
0000000000024c80 000000000000011c t TIMIDITY_GetSome
0000000000024da0 0000000000000008 t WAV_SetVolume
0000000000024db0 0000000000000074 t WAV_Play
0000000000024e30 000000000000005c t WAV_Delete
0000000000024e90 0000000000000010 t WAV_GetAudio
0000000000024ea0 000000000000022c t WAV_GetSome
00000000000250d0 0000000000000738 t WAV_CreateFromRW
0000000000025810 0000000000000164 t recompute_freq
0000000000025980 0000000000000114 t recompute_amp
0000000000025aa0 00000000000000a0 t adjust_volume
0000000000025b40 00000000000000c0 t do_compute_data
0000000000025c00 0000000000000140 t compute_data
0000000000025d40 0000000000000324 t start_note
0000000000026070 0000000000000048 t finish_note.part.2
00000000000260c0 00000000000000b4 t note_off
0000000000026180 00000000000000a4 t Timidity_Start
0000000000026230 0000000000000280 t Timidity_Seek
00000000000264b0 0000000000000630 t Timidity_PlaySome
0000000000026ae0 00000000000000c4 t Timidity_SetVolume
0000000000026bb0 0000000000000810 t read_config_file
00000000000273c0 00000000000000b4 t Timidity_Init_NoConfig
0000000000027480 00000000000000a4 t Timidity_Init
0000000000027530 0000000000000390 t Timidity_LoadSong
00000000000278c0 0000000000000074 t Timidity_FreeSong
0000000000027940 00000000000000e4 t Timidity_Exit
0000000000027a30 000000000000002c t _Mix_InitEffects
0000000000027a60 0000000000000004 t _Mix_DeinitEffects
0000000000027a70 000000000000059c t Mix_LoadAIFF_RW
0000000000028010 0000000000000538 t voc_get_block.isra.0
0000000000028550 0000000000000334 t Mix_LoadVOC_RW
0000000000028890 0000000000000184 t open_file
0000000000028a20 0000000000000004 t safe_malloc
0000000000028a30 0000000000000080 t add_to_pathlist
0000000000028ab0 000000000000004c t free_pathlist
0000000000028b00 0000000000000074 t free_instrument
0000000000028b80 000000000000099c t load_instrument.isra.5
0000000000029520 0000000000000198 t fill_bank
00000000000296c0 0000000000000088 t load_missing_instruments
0000000000029750 00000000000000a4 t free_instruments
0000000000029800 0000000000000058 t set_default_instrument
0000000000029860 00000000000000dc t recompute_envelope
0000000000029940 0000000000000108 t apply_envelope_to_amp
0000000000029a50 0000000000000168 t update_signal
0000000000029bc0 0000000000000780 t mix_voice
000000000002a340 0000000000000048 T s32tos8
000000000002a390 000000000000004c T s32tou8
000000000002a3e0 0000000000000048 T s32tos16
000000000002a430 000000000000004c T s32tou16
000000000002a480 000000000000004c T s32tos16x
000000000002a4d0 0000000000000050 T s32tou16x
000000000002a520 0000000000000038 T s32tof32
000000000002a560 0000000000000030 T s32tos32
000000000002a590 0000000000000034 T s32tos32x
000000000002a5d0 00000000000008e8 t read_track
000000000002aec0 0000000000000754 t read_midi_file
000000000002b620 00000000000001b8 t update_vibrato.isra.2
000000000002b7e0 0000000000000874 t resample_voice
000000000002c060 00000000000002f0 t pre_resample
000000000002c350 000000000000007c t _Eff_PositionDeinit
000000000002c3d0 000000000000000c T SDL_ExitProcess
000000000002c3e0 0000000000000274 T SDL_QuitSubSystem
000000000002c660 0000000000000218 T SDL_InitSubSystem
000000000002c880 0000000000000004 T SDL_Init
000000000002c890 0000000000000090 T SDL_WasInit
000000000002c920 0000000000000058 T SDL_Quit
000000000002c980 000000000000000c T SDL_GetPlatform
000000000002c990 0000000000000080 t debug_print
000000000002ca10 00000000000003a4 t SDL_PromptAssertion
000000000002cdc0 000000000000016c T SDL_ReportAssertion
000000000002cf30 000000000000002c T SDL_ResetAssertionReport
000000000002cf60 00000000000000e0 T SDL_AssertionsQuit
000000000002d040 0000000000000154 T SDL_SetError
000000000002d1a0 0000000000000030 T SDL_GetError
000000000002d1d0 0000000000000018 T SDL_ClearError
000000000002d1f0 0000000000000068 T SDL_Error
000000000002d260 0000000000000170 T SDL_SetHintWithPriority
000000000002d3d0 0000000000000008 T SDL_SetHint
000000000002d3e0 0000000000000080 T SDL_GetHint
000000000002d460 0000000000000048 T SDL_GetStringBoolean
000000000002d4b0 0000000000000024 T SDL_GetHintBoolean
000000000002d4e0 00000000000000b0 T SDL_DelHintCallback
000000000002d590 0000000000000180 T SDL_AddHintCallback
000000000002d710 0000000000000070 T SDL_ClearHints
000000000002d780 0000000000000040 t SDL_LogOutput
000000000002d7c0 0000000000000038 T SDL_LogInit
000000000002d800 0000000000000070 T SDL_LogGetPriority
000000000002d870 0000000000000068 T SDL_LogResetPriorities
000000000002d8e0 0000000000000030 T SDL_LogQuit
000000000002d910 00000000000001e8 T SDL_LogMessageV
000000000002db00 0000000000000080 T SDL_Log
000000000002db80 0000000000000078 T SDL_LogDebug
000000000002dc00 0000000000000078 T SDL_LogInfo
000000000002dc80 0000000000000078 T SDL_LogWarn
000000000002dd00 0000000000000020 T SDL_AtomicTryLock
000000000002dd20 000000000000006c T SDL_AtomicLock
000000000002dd90 0000000000000008 T SDL_AtomicUnlock
000000000002dda0 0000000000000004 t SDL_AudioThreadInit_Default
000000000002ddb0 0000000000000008 t SDL_AudioGetDeviceBuf_Default
000000000002ddc0 0000000000000008 t SDL_AudioCaptureFromDevice_Default
000000000002ddd0 0000000000000004 t SDL_AudioDeinitialize_Default
000000000002dde0 0000000000000008 t SDL_AudioOpenDevice_Default
000000000002ddf0 00000000000001a0 t add_audio_device
000000000002df90 000000000000000c t SDL_BufferQueueFillCallback
000000000002dfa0 0000000000000060 t SDL_BufferQueueDrainCallback
000000000002e000 0000000000000044 t SDL_AudioUnlockDevice_Default
000000000002e050 0000000000000044 t SDL_AudioLockDevice_Default
000000000002e0a0 0000000000000280 t SDL_RunAudio
000000000002e320 00000000000000e4 t close_audio_device
000000000002e410 0000000000000004 t SDL_AudioCloseDevice_Default
000000000002e420 0000000000000004 t SDL_AudioFreeDeviceHandle_Default
000000000002e430 0000000000000004 t SDL_AudioThreadDeinit_Default
000000000002e440 0000000000000004 t SDL_AudioWaitDevice_Default
000000000002e450 0000000000000004 t SDL_AudioPlayDevice_Default
000000000002e460 0000000000000004 t SDL_AudioFlushCapture_Default
000000000002e470 00000000000000bc T SDL_AddAudioDevice
000000000002e530 0000000000000050 t SDL_AudioDetectDevices_Default
000000000002e580 00000000000000d4 T SDL_OpenedAudioDeviceDisconnected
000000000002e660 0000000000000244 t SDL_CaptureAudio
000000000002e8b0 000000000000000c T SDL_GetCurrentAudioDriver
000000000002e8c0 0000000000000094 T SDL_PauseAudioDevice
000000000002e960 0000000000000038 T SDL_LockAudioDevice
000000000002e9a0 0000000000000038 T SDL_UnlockAudioDevice
000000000002e9e0 0000000000000040 T SDL_CloseAudioDevice
000000000002ea20 0000000000000160 T SDL_AudioQuit
000000000002eb80 0000000000000390 T SDL_AudioInit
000000000002ef10 000000000000004c T SDL_NextAudioFormat
000000000002ef60 00000000000000f0 T SDL_FirstAudioFormat
000000000002f050 0000000000000028 T SDL_SilenceValueForFormat
000000000002f080 0000000000000044 T SDL_CalculateAudioSpec
000000000002f0d0 0000000000000ce0 t open_audio_device
000000000002fdb0 0000000000000008 T SDL_OpenAudioDevice
000000000002fdc0 000000000000007c t SDL_ConvertMonoToStereo
000000000002fe40 0000000000000088 t SDL_ConvertMonoTo21
000000000002fed0 0000000000000080 t SDL_ConvertMonoToQuad
000000000002ff50 0000000000000084 t SDL_ConvertMonoTo41
000000000002ffe0 0000000000000090 t SDL_ConvertMonoTo51
0000000000030070 0000000000000094 t SDL_ConvertMonoTo61
0000000000030110 0000000000000088 t SDL_ConvertMonoTo71
00000000000301a0 0000000000000078 t SDL_ConvertStereoToMono
0000000000030220 000000000000009c t SDL_ConvertStereoTo21
00000000000302c0 0000000000000094 t SDL_ConvertStereoToQuad
0000000000030360 0000000000000098 t SDL_ConvertStereoTo41
0000000000030400 00000000000000a4 t SDL_ConvertStereoTo51
00000000000304b0 00000000000000a8 t SDL_ConvertStereoTo61
0000000000030560 000000000000009c t SDL_ConvertStereoTo71
0000000000030600 00000000000000a4 t SDL_Convert21ToMono
00000000000306b0 00000000000000c4 t SDL_Convert21ToStereo
0000000000030780 00000000000000e0 t SDL_Convert21ToQuad
0000000000030860 00000000000000c8 t SDL_Convert21To41
0000000000030930 00000000000000d0 t SDL_Convert21To51
0000000000030a00 00000000000000d4 t SDL_Convert21To61
0000000000030ae0 00000000000000c8 t SDL_Convert21To71
0000000000030bb0 000000000000008c t SDL_ConvertQuadToMono
0000000000030c40 00000000000000c4 t SDL_ConvertQuadToStereo
0000000000030d10 00000000000000c8 t SDL_ConvertQuadTo21
0000000000030de0 00000000000000b4 t SDL_ConvertQuadTo41
0000000000030ea0 00000000000000c0 t SDL_ConvertQuadTo51
0000000000030f60 00000000000000f4 t SDL_ConvertQuadTo61
0000000000031060 00000000000000b8 t SDL_ConvertQuadTo71
0000000000031120 00000000000000a8 t SDL_Convert41ToMono
00000000000311d0 00000000000000f0 t SDL_Convert41ToStereo
00000000000312c0 00000000000000e0 t SDL_Convert41To21
00000000000313a0 00000000000000dc t SDL_Convert41ToQuad
0000000000031480 00000000000000dc t SDL_Convert41To51
0000000000031560 0000000000000110 t SDL_Convert41To61
0000000000031670 00000000000000d4 t SDL_Convert41To71
0000000000031750 00000000000000ac t SDL_Convert51ToMono
0000000000031800 00000000000000f8 t SDL_Convert51ToStereo
0000000000031900 00000000000000f8 t SDL_Convert51To21
0000000000031a00 00000000000000ec t SDL_Convert51ToQuad
0000000000031af0 00000000000000e4 t SDL_Convert51To41
0000000000031be0 0000000000000118 t SDL_Convert51To61
0000000000031d00 00000000000000d8 t SDL_Convert51To71
0000000000031de0 00000000000000d4 t SDL_Convert61ToMono
0000000000031ec0 000000000000011c t SDL_Convert61ToStereo
0000000000031fe0 0000000000000114 t SDL_Convert61To21
0000000000032100 0000000000000120 t SDL_Convert61ToQuad
0000000000032220 0000000000000118 t SDL_Convert61To41
0000000000032340 0000000000000120 t SDL_Convert61To51
0000000000032460 0000000000000108 t SDL_Convert61To71
0000000000032570 00000000000000b8 t SDL_Convert71ToMono
0000000000032630 0000000000000118 t SDL_Convert71ToStereo
0000000000032750 0000000000000110 t SDL_Convert71To21
0000000000032860 000000000000010c t SDL_Convert71ToQuad
0000000000032970 00000000000000fc t SDL_Convert71To41
0000000000032a70 00000000000000fc t SDL_Convert71To51
0000000000032b70 00000000000000f8 t SDL_Convert71To61
0000000000032c70 0000000000000014 t SDL_ResetAudioStreamResampler
0000000000032c90 000000000000022c t SDL_Convert_Byteswap
0000000000032ec0 0000000000000008 t SDL_CleanupAudioStreamResampler
0000000000032ed0 0000000000000634 t SDL_ResampleCVT_c8
0000000000033510 0000000000000620 t SDL_ResampleCVT_c6
0000000000033b30 0000000000000638 t SDL_ResampleCVT_c4
0000000000034170 0000000000000638 t SDL_ResampleCVT_c2
00000000000347b0 0000000000000588 t SDL_ResampleCVT_c1
0000000000034d40 0000000000000698 t SDL_ResampleAudioStream
00000000000353e0 000000000000004c T SDL_ConvertAudio
0000000000035430 0000000000000298 t SDL_AudioStreamPutInternal
00000000000356d0 00000000000007d8 T SDL_BuildAudioCVT
0000000000035eb0 00000000000003c0 T SDL_AudioStreamPut
0000000000036270 0000000000000114 T SDL_AudioStreamFlush
0000000000036390 0000000000000078 T SDL_AudioStreamGet
0000000000036410 0000000000000024 T SDL_AudioStreamAvailable
0000000000036440 0000000000000060 T SDL_AudioStreamClear
00000000000364a0 0000000000000054 T SDL_FreeAudioStream
0000000000036500 00000000000002a0 T SDL_NewAudioStream
00000000000367a0 000000000000024c t SDL_Convert_F32_to_S32_NEON
00000000000369f0 00000000000001ac t SDL_Convert_F32_to_U16_NEON
0000000000036ba0 0000000000000194 t SDL_Convert_F32_to_S16_NEON
0000000000036d40 00000000000001e0 t SDL_Convert_F32_to_U8_NEON
0000000000036f20 00000000000001c0 t SDL_Convert_F32_to_S8_NEON
00000000000370e0 00000000000001ac t SDL_Convert_S32_to_F32_NEON
0000000000037290 0000000000000160 t SDL_Convert_U16_to_F32_NEON
00000000000373f0 0000000000000148 t SDL_Convert_S16_to_F32_NEON
0000000000037540 000000000000017c t SDL_Convert_U8_to_F32_NEON
00000000000376c0 000000000000015c t SDL_Convert_S8_to_F32_NEON
0000000000037820 0000000000000108 T SDL_ChooseAudioConverters
0000000000037930 00000000000019ac T SDL_MixAudioFormat
00000000000392e0 0000000000000128 t MS_ADPCM_CalculateSampleFrames
0000000000039410 0000000000000150 t IMA_ADPCM_CalculateSampleFrames
0000000000039560 0000000000002784 T SDL_LoadWAV_RW
000000000003bcf0 0000000000000064 T SDL_HasAltiVec
000000000003bd60 0000000000000064 T SDL_HasMMX
000000000003bdd0 0000000000000064 T SDL_Has3DNow
000000000003be40 0000000000000064 T SDL_HasSSE
000000000003beb0 0000000000000064 T SDL_HasSSE2
000000000003bf20 0000000000000064 T SDL_HasARMSIMD
000000000003bf90 0000000000000064 T SDL_HasNEON
000000000003c000 000000000000006c T SDL_SIMDGetAlignment
000000000003c070 0000000000000074 T SDL_SIMDAlloc
000000000003c0f0 0000000000000010 T SDL_SIMDFree
000000000003c100 0000000000000074 t SDL_EventLoggingChanged
000000000003c180 0000000000001230 t SDL_LogEvent
000000000003d3b0 0000000000000160 t SDL_AddEvent
000000000003d510 0000000000000038 t SDL_AutoUpdateSensorsChanged
000000000003d550 0000000000000048 t SDL_AutoUpdateJoysticksChanged
000000000003d5a0 0000000000000194 T SDL_StopEventLoop
000000000003d740 0000000000000404 T SDL_PeepEvents
000000000003db50 0000000000000120 T SDL_FlushEvents
000000000003dc70 0000000000000008 T SDL_FlushEvent
000000000003dc80 00000000000001b8 T SDL_PushEvent
000000000003de40 0000000000000088 T SDL_AddEventWatch
000000000003ded0 00000000000000d8 T SDL_DelEventWatch
000000000003dfb0 0000000000000118 T SDL_FilterEvents
000000000003e0d0 0000000000000190 T SDL_EventState
000000000003e260 00000000000000a0 T SDL_StartEventLoop
000000000003e300 000000000000002c t SDL_PollSentinelChanged
000000000003e330 0000000000000054 T SDL_SendAppEvent
000000000003e390 0000000000000008 T SDL_SendKeymapChangedEvent
000000000003e3a0 00000000000000a8 T SDL_EventsInit
000000000003e450 0000000000000074 T SDL_EventsQuit
000000000003e4d0 0000000000000104 t dollarDifference
000000000003e5e0 00000000000000bc t SDL_AddDollarGesture_one
000000000003e6a0 0000000000000364 t dollarNormalize.isra.0
000000000003ea10 0000000000000028 T SDL_GestureQuit
000000000003ea40 000000000000008c T SDL_GestureAddTouch
000000000003ead0 00000000000000e4 T SDL_GestureDelTouch
000000000003ebc0 00000000000006a0 T SDL_GestureProcessEvent
000000000003f260 00000000000001dc T SDL_SetKeymap
000000000003f440 000000000000002c T SDL_KeyboardInit
000000000003f470 000000000000000c T SDL_GetKeyboardFocus
000000000003f480 00000000000002b8 T SDL_SendKeyboardKey
000000000003f740 0000000000000058 T SDL_ResetKeyboard
000000000003f7a0 00000000000000f4 T SDL_SetKeyboardFocus
000000000003f8a0 00000000000000e8 T SDL_SendKeyboardText
000000000003f990 0000000000000004 T SDL_KeyboardQuit
000000000003f9a0 000000000000002c t SDL_MouseRelativeWarpMotionChanged
000000000003f9d0 000000000000002c t SDL_TouchMouseEventsChanged
000000000003fa00 000000000000002c t SDL_MouseRelativeSystemScaleChanged
000000000003fa30 000000000000004c t SDL_MouseTouchEventsChanged
000000000003fa80 0000000000000058 t SDL_MouseRelativeSpeedScaleChanged
000000000003fae0 0000000000000058 t SDL_MouseNormalSpeedScaleChanged
000000000003fb40 0000000000000048 t SDL_MouseDoubleClickRadiusChanged
000000000003fb90 0000000000000048 t SDL_MouseDoubleClickTimeChanged
000000000003fbe0 000000000000000c T SDL_GetMouse
000000000003fbf0 0000000000000114 T SDL_MouseInit
000000000003fd10 0000000000000978 t SDL_PrivateSendMouseMotion
0000000000040690 0000000000000018 T SDL_GetMouseFocus
00000000000406b0 0000000000000188 T SDL_GetMouseState
0000000000040840 00000000000000d0 T SDL_PerformWarpMouseInWindow
0000000000040910 0000000000000008 T SDL_WarpMouseInWindow
0000000000040920 0000000000000018 T SDL_GetRelativeMouseMode
0000000000040940 00000000000002a0 T SDL_UpdateMouseCapture
0000000000040be0 000000000000004c t SDL_MouseAutoCaptureChanged
0000000000040c30 0000000000000064 T SDL_CaptureMouse
0000000000040ca0 00000000000000d8 T SDL_SetCursor
0000000000040d80 0000000000000074 T SDL_SetMouseFocus
0000000000040e00 00000000000000f4 t SDL_UpdateMouseFocus.isra.0
0000000000040f00 000000000000043c t SDL_PrivateSendMouseButton
0000000000041340 0000000000000008 T SDL_SendMouseButton
0000000000041350 0000000000000090 T SDL_SendMouseMotion
00000000000413e0 0000000000000190 T SDL_SetRelativeMouseMode
0000000000041570 00000000000000a0 T SDL_FreeCursor
0000000000041610 000000000000005c T SDL_ShowCursor
0000000000041670 0000000000000194 T SDL_MouseQuit
0000000000041810 0000000000000040 t SDL_HandleSIG
0000000000041850 0000000000000080 T SDL_QuitInit
00000000000418d0 000000000000006c T SDL_QuitQuit
0000000000041940 0000000000000010 T SDL_SendQuit
0000000000041950 0000000000000008 T SDL_TouchInit
0000000000041960 00000000000000b0 T SDL_GetTouch
0000000000041a10 000000000000014c T SDL_AddTouch
0000000000041b60 0000000000000458 T SDL_SendTouch
0000000000041b60 0000000000000458 t SDL_SendTouch.localalias
0000000000041fc0 0000000000000244 T SDL_SendTouchMotion
0000000000042210 0000000000000104 T SDL_DelTouch
0000000000042320 0000000000000078 T SDL_TouchQuit
00000000000423a0 0000000000000060 t RemovePendingSizeChangedAndResizedEvents
0000000000042400 000000000000003c t RemovePendingExposedEvents
0000000000042440 000000000000003c t RemovePendingMoveEvents
0000000000042480 00000000000003b4 T SDL_SendWindowEvent
0000000000042840 0000000000000010 t mem_size
0000000000042850 0000000000000020 t mem_writeconst
0000000000042870 0000000000000088 t mem_read
0000000000042900 00000000000000b0 t mem_seek
00000000000429b0 0000000000000084 t stdio_seek
0000000000042a40 0000000000000060 t stdio_read
0000000000042aa0 0000000000000060 t stdio_write
0000000000042b00 0000000000000048 T SDL_AllocRW
0000000000042b50 000000000000006c T SDL_RWFromFP
0000000000042bc0 0000000000000078 T SDL_RWFromFile
0000000000042c40 00000000000000c8 T SDL_RWFromConstMem
0000000000042d10 0000000000000004 T SDL_FreeRW
0000000000042d20 0000000000000058 t stdio_close
0000000000042d80 0000000000000024 t mem_close
0000000000042db0 000000000000000c T SDL_RWsize
0000000000042dc0 000000000000000c T SDL_RWseek
0000000000042dd0 0000000000000064 t stdio_size
0000000000042e40 0000000000000014 T SDL_RWtell
0000000000042e60 000000000000000c T SDL_RWread
0000000000042e70 000000000000000c T SDL_RWclose
0000000000042e80 000000000000011c T SDL_LoadFile_RW
0000000000042fa0 0000000000000030 T SDL_LoadFile
0000000000042fd0 0000000000000028 T SDL_ReadLE16
0000000000043000 000000000000002c T SDL_ReadBE16
0000000000043030 0000000000000028 T SDL_ReadLE32
0000000000043060 000000000000002c T SDL_ReadBE32
0000000000043090 000000000000001c T SDL_HapticInit
00000000000430b0 0000000000000068 T SDL_HapticDestroyEffect
0000000000043120 0000000000000160 T SDL_HapticClose
0000000000043280 0000000000000030 T SDL_HapticQuit
00000000000432b0 0000000000000238 t SDL_PrivateMatchControllerMappingForGUID
00000000000434f0 0000000000000114 t SDL_LoadVIDPIDListFromHint
0000000000043610 0000000000000010 t SDL_GameControllerIgnoreDevicesExceptChanged
0000000000043620 0000000000000010 t SDL_GameControllerIgnoreDevicesChanged
0000000000043630 00000000000000e8 t SDL_PrivateAppendToMappingString.part.0.constprop.0
0000000000043720 00000000000000f4 t SDL_PrivateGameControllerButton.isra.0
0000000000043820 0000000000000090 T SDL_GameControllerGetAxisFromString
00000000000438b0 0000000000000080 T SDL_GameControllerGetButtonFromString
0000000000043930 00000000000002cc t SDL_PrivateGameControllerParseElement
0000000000043c00 0000000000000220 t SDL_PrivateLoadButtonMapping
0000000000043e20 000000000000034c t SDL_PrivateAddMappingForGUID
0000000000044170 000000000000027c t SDL_PrivateGameControllerAddMapping
00000000000443f0 00000000000003d0 t SDL_CreateMappingForHIDAPIController
00000000000447c0 0000000000000074 t SDL_CreateMappingForRAWINPUTController
0000000000044840 0000000000000094 t SDL_CreateMappingForWGIController
00000000000448e0 00000000000001f4 t SDL_PrivateGetControllerMappingForGUID
0000000000044ae0 00000000000003f4 t SDL_PrivateGetControllerMapping.part.0
0000000000044ee0 0000000000000038 T SDL_GameControllerAddMapping
0000000000044f20 00000000000001e0 T SDL_GameControllerAddMappingsFromRW
0000000000045100 0000000000000158 T SDL_GameControllerInitMappings
0000000000045260 0000000000000078 T SDL_IsGameController
00000000000452e0 000000000000008c T SDL_GameControllerInit
0000000000045370 00000000000001fc T SDL_GameControllerGetAxis
0000000000045570 0000000000000198 T SDL_GameControllerGetButton
0000000000045710 00000000000008ac t SDL_GameControllerEventWatcher
0000000000045fc0 00000000000000c8 T SDL_GameControllerClose
0000000000046090 000000000000003c T SDL_GameControllerQuit
00000000000460d0 00000000000000e4 T SDL_GameControllerQuitMappings
00000000000461c0 000000000000002c t SDL_JoystickAllowBackgroundEventsChanged
00000000000461f0 0000000000000054 T SDL_LockJoysticks
0000000000046250 0000000000000070 T SDL_UnlockJoysticks
00000000000462c0 0000000000000004 T SDL_AssertJoysticksLocked
00000000000462d0 000000000000004c T SDL_NumJoysticks
0000000000046320 00000000000000b4 T SDL_JoystickNameForIndex
00000000000463e0 000000000000003c T SDL_PrivateJoystickValid
0000000000046420 00000000000000bc T SDL_PrivateJoystickGetAutoGamepadMapping
00000000000464e0 00000000000000a4 T SDL_JoystickGetAxis
0000000000046590 000000000000009c T SDL_JoystickGetHat
0000000000046630 000000000000009c T SDL_JoystickGetButton
00000000000466d0 0000000000000064 T SDL_JoystickInstanceID
0000000000046740 000000000000004c T SDL_JoystickFromInstanceID
0000000000046790 000000000000010c T SDL_JoystickRumble
00000000000468a0 00000000000000fc T SDL_JoystickRumbleTriggers
00000000000469a0 000000000000018c T SDL_JoystickClose
0000000000046b30 00000000000000bc T SDL_JoystickQuit
0000000000046bf0 00000000000000ac T SDL_JoystickInit
0000000000046ca0 00000000000000d0 T SDL_PrivateJoystickHat
0000000000046d70 0000000000000108 T SDL_PrivateJoystickButton
0000000000046e80 00000000000000a4 T SDL_JoystickEventState
0000000000046f30 0000000000000090 T SDL_GetJoystickGUIDInfo
0000000000046fc0 00000000000000f4 T SDL_CreateJoystickGUID
00000000000470c0 0000000000000020 T SDL_CreateJoystickGUIDForName
00000000000470e0 0000000000000008 T SDL_SetJoystickGUIDVersion
00000000000470f0 0000000000000008 T SDL_SetJoystickGUIDCRC
0000000000047100 0000000000000220 T SDL_GetJoystickGameControllerTypeFromVIDPID
0000000000047320 000000000000004c T SDL_IsJoystickXboxOneElite
0000000000047370 0000000000000110 T SDL_IsJoystickXboxSeriesX
0000000000047480 000000000000001c T SDL_IsJoystickDualSenseEdge
00000000000474a0 000000000000001c T SDL_IsJoystickNintendoSwitchJoyConPair
00000000000474c0 0000000000000028 T SDL_IsJoystickSteamController
00000000000474f0 0000000000000010 T SDL_IsJoystickXInput
0000000000047500 0000000000000010 T SDL_IsJoystickWGI
0000000000047510 0000000000000010 T SDL_IsJoystickHIDAPI
0000000000047520 0000000000000010 T SDL_IsJoystickRAWINPUT
0000000000047530 0000000000000010 T SDL_IsJoystickVirtual
0000000000047540 00000000000001b0 T SDL_PrivateJoystickAxis
0000000000047540 00000000000001b0 t SDL_PrivateJoystickAxis.localalias
00000000000476f0 0000000000000098 T SDL_GetJoystickGameControllerTypeFromGUID
0000000000047790 00000000000000c0 T SDL_JoystickGetDeviceGUID
0000000000047850 0000000000000004 T SDL_JoystickGetGUIDFromString
0000000000047860 00000000000001fc T GuessControllerType
0000000000047a60 0000000000000110 t QueueCmdSetClipRect
0000000000047b70 0000000000000128 t QueueCmdSetViewport
0000000000047ca0 0000000000000204 t PrepQueueCmdDraw
0000000000047eb0 000000000000023c t QueueCmdFillRects
00000000000480f0 00000000000000ec T SDL_AllocateRenderVertices
00000000000481e0 0000000000000008 T SDL_GetNumRenderDrivers
00000000000481f0 0000000000000080 T SDL_GetRenderDriverInfo
0000000000048270 000000000000000c T SDL_GetRenderer
0000000000048280 000000000000006c T SDL_GetRendererInfo
00000000000482f0 0000000000000078 T SDL_QueryTexture
0000000000048370 000000000000009c T SDL_GetRendererOutputSize
0000000000048410 00000000000000c8 T SDL_SetTextureColorMod
00000000000484e0 00000000000000ac T SDL_SetTextureAlphaMod
0000000000048590 00000000000000d8 T SDL_SetTextureBlendMode
0000000000048670 0000000000000284 T SDL_LockTexture
0000000000048900 00000000000001d4 T SDL_UnlockTexture
0000000000048ae0 00000000000003e4 T SDL_UpdateTexture
0000000000048ed0 0000000000000020 T SDL_RenderTargetSupported
0000000000048ef0 00000000000002bc T SDL_SetRenderTarget
00000000000491b0 0000000000000048 T SDL_GetRenderTarget
0000000000049200 0000000000000154 T SDL_RenderSetViewport
0000000000049360 0000000000000468 T SDL_CreateRenderer
00000000000497d0 0000000000000054 T SDL_RenderSetScale
0000000000049830 0000000000000310 t UpdateLogicalSize.constprop.0
0000000000049b40 0000000000000638 t SDL_RendererEventWatch
000000000004a180 0000000000000064 T SDL_SetRenderDrawColor
000000000004a1f0 000000000000009c T SDL_SetRenderDrawBlendMode
000000000004a290 0000000000000140 T SDL_RenderClear
000000000004a3d0 0000000000000368 T SDL_RenderFillRectsF
000000000004a740 00000000000000a4 T SDL_RenderFillRect
000000000004a7f0 0000000000000388 T SDL_RenderCopyF
000000000004ab80 0000000000000028 T SDL_RenderCopy
000000000004abb0 0000000000000138 T SDL_RenderPresent
000000000004acf0 0000000000000158 T SDL_DestroyTexture
000000000004ae50 0000000000000858 T SDL_CreateTexture
000000000004ae50 0000000000000858 t SDL_CreateTexture.localalias
000000000004b6b0 0000000000000630 T SDL_CreateTextureFromSurface
000000000004bce0 0000000000000100 T SDL_DestroyRenderer
000000000004bde0 0000000000000040 T SDL_GetBlendModeSrcColorFactor
000000000004be20 0000000000000040 T SDL_GetBlendModeDstColorFactor
000000000004be60 0000000000000030 T SDL_GetBlendModeColorOperation
000000000004be90 0000000000000030 T SDL_GetBlendModeSrcAlphaFactor
000000000004bec0 0000000000000034 T SDL_GetBlendModeDstAlphaFactor
000000000004bf00 0000000000000030 T SDL_GetBlendModeAlphaOperation
000000000004bf30 0000000000000538 T SDL_SW_UpdateYUVTexture
000000000004c470 00000000000000e0 T SDL_SW_LockYUVTexture
000000000004c550 00000000000001fc T SDL_SW_CopyYUVToRGB
000000000004c750 0000000000000040 T SDL_SW_DestroyYUVTexture
000000000004c790 0000000000000210 T SDL_SW_CreateYUVTexture
000000000004c9a0 0000000000000020 t GLES2_WindowEvent
000000000004c9c0 0000000000000008 t GLES2_QueueSetViewport
000000000004c9d0 00000000000000a0 t GLES2_LockTexture
000000000004ca70 0000000000000110 t GLES2_SetTextureScaleMode
000000000004cb80 0000000000000008 t GLES2_RenderPresent
000000000004cb90 000000000000001c t GLES2_GetOutputSize
000000000004cbb0 0000000000000348 t GLES2_RenderReadPixels
000000000004cf00 00000000000000a4 t GLES2_SetRenderTarget
000000000004cfb0 0000000000000d40 t GLES2_CreateTexture
000000000004dcf0 0000000000000158 t GLES2_SupportsBlendMode
000000000004de50 00000000000004dc t GLES2_QueueGeometry
000000000004e330 0000000000000110 t GLES2_QueueDrawPoints
000000000004e440 0000000000000180 t GLES2_QueueDrawLines
000000000004e5c0 00000000000002ec t GLES2_CacheShader
000000000004e8b0 00000000000008ac t SetDrawState
000000000004f160 0000000000000b90 t GLES2_CreateRenderer
000000000004fcf0 0000000000000084 t GLES2_SetVSync
000000000004fd80 0000000000000184 t GLES2_TexSubImage2D.isra.0
000000000004ff10 000000000000007c t GLES2_UnbindTexture
000000000004ff90 00000000000000f0 t GLES2_DestroyTexture
0000000000050080 00000000000000fc t GLES2_BindTexture
0000000000050180 0000000000000214 t GLES2_UpdateTextureNV
00000000000503a0 000000000000026c t GLES2_UpdateTextureYUV
0000000000050610 00000000000001dc t GLES2_DestroyRenderer
00000000000507f0 00000000000003c0 t GLES2_UpdateTexture
0000000000050bb0 0000000000000030 t GLES2_UnlockTexture
0000000000050be0 000000000000076c t GLES2_RunCommandQueue
0000000000051350 000000000000001c T GLES2_GetShaderPrologue
0000000000051370 0000000000000064 T GLES2_GetShaderInclude
00000000000513e0 0000000000000088 T GLES2_GetTexCoordPrecisionEnumFromHint
0000000000051470 0000000000000100 T GLES2_GetShader
0000000000051570 000000000000001c t SW_WindowEvent
0000000000051590 0000000000000040 t SW_LockTexture
00000000000515d0 0000000000000004 t SW_UnlockTexture
00000000000515e0 0000000000000004 t SW_SetTextureScaleMode
00000000000515f0 0000000000000028 t SW_SetRenderTarget
0000000000051620 0000000000000008 t SW_QueueSetViewport
0000000000051630 0000000000000008 t SW_DestroyTexture
0000000000051640 0000000000000014 t SW_RenderPresent
0000000000051660 0000000000000404 t SW_QueueGeometry
0000000000051a70 000000000000021c t SW_QueueFillRects
0000000000051c90 00000000000000f4 t SW_QueueDrawPoints
0000000000051d90 00000000000000dc t SW_QueueCopyEx
0000000000051e70 0000000000000094 t SW_QueueCopy
0000000000051f10 00000000000000f0 t SW_UpdateTexture
0000000000052000 00000000000000c4 t SW_CreateTexture
00000000000520d0 0000000000000028 t SW_DestroyRenderer
0000000000052100 00000000000000e4 t SetDrawState.part.0
00000000000521f0 0000000000000060 t SW_GetOutputSize
0000000000052250 00000000000000a0 t PrepTextureForCopy.isra.0
00000000000522f0 0000000000000110 t SW_RenderReadPixels
0000000000052400 0000000000001260 t SW_RunCommandQueue
0000000000053660 00000000000001e0 T SW_CreateRendererForSurface
0000000000053840 00000000000000ac t SW_CreateRenderer
00000000000538f0 00000000000000e0 t computeSourceIncrements90
00000000000539d0 0000000000000290 T SDLgfx_rotozoomSurfaceSizeTrig
0000000000053c60 0000000000000fb0 T SDLgfx_rotateSurface
0000000000054c10 0000000000000010 T trianglepoint_2_fixedpoint
0000000000054c20 00000000000015cc T SDL_SW_FillTriangle
00000000000561f0 0000000000002678 T SDL_SW_BlitTriangle
0000000000058870 000000000000000c T SDL_LockSensors
0000000000058880 000000000000000c T SDL_UnlockSensors
0000000000058890 0000000000000058 T SDL_SensorInit
00000000000588f0 00000000000000c8 T SDL_SensorClose
00000000000589c0 000000000000006c T SDL_SensorQuit
0000000000058a30 0000000000000118 T SDL_crc16
0000000000058b50 0000000000000018 T SDL_getenv
0000000000058b70 0000000000000004 t real_free
0000000000058b80 0000000000000004 t real_realloc
0000000000058b90 0000000000000004 t real_calloc
0000000000058ba0 0000000000000004 t real_malloc
0000000000058bb0 0000000000000044 T SDL_GetOriginalMemoryFunctions
0000000000058c00 000000000000004c T SDL_malloc
0000000000058c50 000000000000005c T SDL_calloc
0000000000058cb0 000000000000007c T SDL_realloc
0000000000058d30 0000000000000030 T SDL_free
0000000000058d60 0000000000000004 T SDL_qsort
0000000000058d70 0000000000000004 T SDL_atan2
0000000000058d80 0000000000000004 T SDL_atan2f
0000000000058d90 0000000000000004 T SDL_acosf
0000000000058da0 0000000000000008 T SDL_ceil
0000000000058db0 0000000000000008 T SDL_ceilf
0000000000058dc0 0000000000000004 T SDL_cos
0000000000058dd0 0000000000000004 T SDL_cosf
0000000000058de0 0000000000000008 T SDL_fabs
0000000000058df0 0000000000000008 T SDL_fabsf
0000000000058e00 0000000000000008 T SDL_floor
0000000000058e10 0000000000000008 T SDL_floorf
0000000000058e20 0000000000000008 T SDL_truncf
0000000000058e30 0000000000000004 T SDL_fmodf
0000000000058e40 0000000000000004 T SDL_pow
0000000000058e50 0000000000000008 T SDL_round
0000000000058e60 0000000000000004 T SDL_sin
0000000000058e70 0000000000000004 T SDL_sinf
0000000000058e80 0000000000000014 T SDL_sqrt
0000000000058ea0 0000000000000014 T SDL_sqrtf
0000000000058ec0 0000000000000004 T SDL_tanf
0000000000058ed0 000000000000000c T SDL_abs
0000000000058ee0 0000000000000018 T SDL_isdigit
0000000000058f00 0000000000000018 T SDL_isspace
0000000000058f20 0000000000000024 T SDL_toupper
0000000000058f50 0000000000000004 T SDL_memcpy
0000000000058f60 0000000000000004 T SDL_memset
0000000000058f70 0000000000000004 T SDL_memmove
0000000000058f80 0000000000000004 T SDL_memcmp
0000000000058f90 0000000000000004 T SDL_strlen
0000000000058fa0 0000000000000004 T SDL_strlcpy
0000000000058fb0 00000000000000f8 T SDL_utf8strlcpy
00000000000590b0 0000000000000028 T SDL_utf8strlen
00000000000590e0 0000000000000004 T SDL_strlcat
00000000000590f0 000000000000004c T SDL_strdup
0000000000059140 0000000000000004 T SDL_strchr
0000000000059150 0000000000000004 T SDL_strrchr
0000000000059160 0000000000000004 T SDL_strstr
0000000000059170 0000000000000004 T SDL_itoa
0000000000059180 0000000000000004 T SDL_atoi
0000000000059190 0000000000000004 T SDL_atof
00000000000591a0 0000000000000004 T SDL_strtol
00000000000591b0 0000000000000004 T SDL_strtoll
00000000000591c0 0000000000000004 T SDL_strtoull
00000000000591d0 0000000000000004 T SDL_strcmp
00000000000591e0 0000000000000004 T SDL_strncmp
00000000000591f0 0000000000000004 T SDL_strcasecmp
0000000000059200 0000000000000004 T SDL_strncasecmp
0000000000059210 0000000000000024 T SDL_vsscanf
0000000000059240 000000000000006c T SDL_sscanf
00000000000592b0 0000000000000034 T SDL_vsnprintf
00000000000592f0 000000000000006c T SDL_snprintf
0000000000059360 00000000000000fc T SDL_vasprintf
0000000000059460 000000000000006c T SDL_asprintf
00000000000594d0 0000000000000038 t SDL_FreeErrBuf
0000000000059510 0000000000000024 T SDL_TLSCreate
0000000000059540 0000000000000054 T SDL_TLSGet
00000000000595a0 0000000000000114 T SDL_TLSSet
00000000000596c0 0000000000000090 T SDL_TLSCleanup
0000000000059750 00000000000000c4 T SDL_Generic_GetTLSData
0000000000059820 00000000000000fc T SDL_Generic_SetTLSData
0000000000059920 0000000000000130 T SDL_GetErrBuf
0000000000059a50 0000000000000098 T SDL_RunThread
0000000000059af0 00000000000000c8 T SDL_CreateThreadWithStackSize
0000000000059bc0 0000000000000004 T SDL_CreateThreadInternal
0000000000059bd0 0000000000000004 T SDL_SetThreadPriority
0000000000059be0 0000000000000048 T SDL_WaitThread
0000000000059c30 00000000000000d8 T SDL_TimerQuit
0000000000059d10 00000000000000b8 T SDL_TimerInit
0000000000059dd0 0000000000000014 T SDL_GetTicks
0000000000059df0 000000000000020c t SDL_TimerThread
000000000005a000 0000000000000378 t SDL_FillRect1
000000000005a380 0000000000000138 t SDL_FillRect2
000000000005a4c0 000000000000026c t SDL_FillRect3
000000000005a730 0000000000000070 t SDL_FillRect4
000000000005a7a0 00000000000001fc T SDL_FillRects
000000000005a9a0 0000000000000054 T SDL_FillRect
000000000005aa00 00000000000004bc T SDL_GetPixelFormatName
000000000005aec0 00000000000001e0 T SDL_PixelFormatEnumToMasks
000000000005b0a0 0000000000000580 T SDL_MasksToPixelFormatEnum
000000000005b620 00000000000001e8 T SDL_InitFormat
000000000005b810 0000000000000114 T SDL_AllocFormat
000000000005b930 00000000000000b4 T SDL_AllocPalette
000000000005b9f0 0000000000000060 T SDL_FreePalette
000000000005ba50 00000000000000d0 T SDL_FreeFormat
000000000005bb20 00000000000000b4 T SDL_SetPixelFormatPalette
000000000005bbe0 0000000000000098 T SDL_DitherColors
000000000005bc80 0000000000000090 T SDL_FindColor
000000000005bd10 00000000000000dc t Map1to1
000000000005bdf0 000000000000005c t MapNto1.isra.0
000000000005be50 000000000000008c T SDL_DetectPalette
000000000005bee0 000000000000009c T SDL_MapRGB
000000000005bf80 00000000000000b0 T SDL_MapRGBA
000000000005c030 0000000000000104 T SDL_GetRGBA
000000000005c140 0000000000000044 T SDL_AllocBlitMap
000000000005c190 000000000000004c T SDL_InvalidateMap
000000000005c1e0 000000000000003c T SDL_InvalidateAllBlitMap
000000000005c220 0000000000000600 T SDL_MapSurface
000000000005c820 000000000000002c T SDL_FreeBlitMap
000000000005c850 0000000000000134 T SDL_GetSpanEnclosingRect
000000000005c990 000000000000010c T SDL_IntersectRect
000000000005caa0 0000000000000204 T SDL_EnclosePoints
000000000005ccb0 0000000000000484 T SDL_IntersectRectAndLine
000000000005d140 00000000000000d4 T SDL_HasIntersectionF
000000000005d220 00000000000004c8 T SDL_SoftStretch
000000000005d6f0 0000000000001fe8 T SDL_SoftStretchLinear
000000000005f6e0 0000000000000054 T SDL_SetSurfacePalette
000000000005f740 0000000000000058 T SDL_SetSurfaceRLE
000000000005f7a0 00000000000000e4 T SDL_SetColorKey
000000000005f890 000000000000001c T SDL_HasColorKey
000000000005f8b0 0000000000000044 T SDL_GetColorKey
000000000005f900 0000000000000084 T SDL_SetSurfaceColorMod
000000000005f990 0000000000000044 T SDL_GetSurfaceColorMod
000000000005f9e0 0000000000000064 T SDL_SetSurfaceAlphaMod
000000000005fa50 0000000000000024 T SDL_GetSurfaceAlphaMod
000000000005fa80 00000000000000f8 T SDL_SetSurfaceBlendMode
000000000005fb80 000000000000008c T SDL_GetSurfaceBlendMode
000000000005fc10 0000000000000054 T SDL_SetClipRect
000000000005fc70 0000000000000018 T SDL_GetClipRect
000000000005fc90 00000000000000bc T SDL_LowerBlit
000000000005fd50 000000000000020c T SDL_UpperBlit
000000000005ff60 0000000000000068 T SDL_LockSurface
000000000005ffd0 0000000000000030 T SDL_UnlockSurface
0000000000060000 000000000000039c T SDL_ConvertPixels
00000000000603a0 00000000000000d8 T SDL_FreeSurface
0000000000060480 0000000000000294 T SDL_CreateRGBSurfaceWithFormat
0000000000060720 0000000000000084 T SDL_CreateRGBSurface
00000000000607b0 00000000000001b8 T SDL_CreateRGBSurfaceFrom
0000000000060970 0000000000000164 T SDL_CreateRGBSurfaceWithFormatFrom
0000000000060ae0 00000000000003c4 T SDL_PrivateLowerBlitScaled
0000000000060eb0 00000000000003c4 T SDL_PrivateUpperBlitScaled
0000000000061280 0000000000000708 T SDL_ConvertSurface
0000000000061280 0000000000000708 t SDL_ConvertSurface.localalias
0000000000061990 0000000000000084 t cmpmodes
0000000000061a20 0000000000000358 t SDL_GetClosestDisplayModeForDisplay
0000000000061d80 000000000000000c T SDL_GetVideoDevice
0000000000061d90 0000000000000108 T SDL_AddVideoDisplay
0000000000061ea0 000000000000004c T SDL_GetIndexOfDisplay
0000000000061ef0 0000000000000010 T SDL_IsVideoContextExternal
0000000000061f00 00000000000000f8 T SDL_GetDisplayBounds
0000000000061f00 00000000000000f8 t SDL_GetDisplayBounds.localalias
0000000000062000 0000000000000140 t GetRectDisplayIndex
0000000000062140 0000000000000170 T SDL_AddDisplayMode
00000000000622b0 000000000000000c T SDL_SetCurrentDisplayMode
00000000000622c0 0000000000000140 t SDL_SetDisplayModeForDisplay
0000000000062400 00000000000000c0 T SDL_ResetDisplayModes
00000000000624c0 000000000000007c T SDL_GetDesktopDisplayMode
0000000000062540 000000000000015c T SDL_GetWindowDisplayIndex
00000000000626a0 0000000000000038 T SDL_GetDisplayForWindow
00000000000626e0 0000000000000144 T SDL_GetWindowDisplayMode
0000000000062830 0000000000000094 T SDL_ToggleDragAndDropSupport
00000000000628d0 0000000000000020 T SDL_HasWindows
00000000000628f0 000000000000005c T SDL_GetWindowID
0000000000062950 0000000000000034 T SDL_GetWindowFromID
0000000000062990 000000000000005c T SDL_GetWindowFlags
00000000000629f0 00000000000000c4 T SDL_SetWindowTitle
0000000000062ac0 0000000000000158 T SDL_SetWindowData
0000000000062c20 0000000000000060 t SDL_DestroyWindowTexture
0000000000062c80 00000000000000c4 T SDL_GetWindowData
0000000000062d50 0000000000000054 T SDL_GetWindowSize
0000000000062db0 0000000000000080 T SDL_GetWindowSizeInPixels
0000000000062e30 00000000000000ec t SDL_UpdateWindowTexture
0000000000062f20 0000000000000434 t SDL_CreateWindowTexture
0000000000063360 0000000000000094 T SDL_ShowWindow
0000000000063400 000000000000005c T SDL_RaiseWindow
0000000000063460 000000000000005c T SDL_MaximizeWindow
00000000000634c0 0000000000000060 T SDL_RestoreWindow
0000000000063520 0000000000000064 T SDL_HasWindowSurface
0000000000063590 0000000000000088 T SDL_UpdateWindowSurfaceRects
0000000000063620 000000000000008c T SDL_UpdateWindowSurface
00000000000636b0 0000000000000090 T SDL_DestroyWindowSurface
0000000000063740 0000000000000218 T SDL_GetWindowSurface
0000000000063960 0000000000000134 T SDL_UpdateWindowGrab
0000000000063aa0 000000000000006c T SDL_SetWindowKeyboardGrab
0000000000063b10 000000000000006c T SDL_SetWindowMouseGrab
0000000000063b80 000000000000008c T SDL_SetWindowGrab
0000000000063c10 0000000000000078 T SDL_GetWindowMouseRect
0000000000063c90 0000000000000070 T SDL_OnWindowResized
0000000000063d00 0000000000000354 t SDL_UpdateFullscreenMode
0000000000064060 00000000000000b0 T SDL_HideWindow
0000000000064110 00000000000000a8 T SDL_MinimizeWindow
00000000000641c0 00000000000000d8 T SDL_SetWindowFullscreen
00000000000642a0 00000000000000f8 t SDL_FinishWindowCreation
00000000000643a0 0000000000000008 T SDL_OnWindowHidden
00000000000643b0 000000000000017c T SDL_SetWindowSize
0000000000064530 0000000000000058 T SDL_OnWindowMoved
0000000000064590 000000000000001c T SDL_OnWindowMinimized
00000000000645b0 0000000000000020 T SDL_OnWindowRestored
00000000000645d0 0000000000000004 T SDL_OnWindowShown
00000000000645e0 0000000000000024 T SDL_OnWindowEnter
0000000000064610 0000000000000004 T SDL_OnWindowLeave
0000000000064620 0000000000000088 T SDL_OnWindowFocusGained
00000000000646b0 00000000000000c8 T SDL_OnWindowFocusLost
0000000000064780 000000000000002c T SDL_GetFocusWindow
00000000000647b0 000000000000002c T SDL_EnableScreenSaver
00000000000647e0 0000000000000030 T SDL_DisableScreenSaver
0000000000064810 00000000000000d8 T SDL_GL_LoadLibrary
00000000000648f0 0000000000000074 T SDL_GL_GetProcAddress
0000000000064970 0000000000000044 T SDL_GL_UnloadLibrary
00000000000649c0 000000000000016c T SDL_GL_ExtensionSupported
0000000000064b30 0000000000000098 T SDL_GL_ResetAttributes
0000000000064bd0 0000000000000180 T SDL_GL_SetAttribute
0000000000064bd0 0000000000000180 t SDL_GL_SetAttribute.localalias
0000000000064d50 00000000000004b0 T SDL_GL_GetAttribute
0000000000064d50 00000000000004b0 t SDL_GL_GetAttribute.localalias
0000000000065200 00000000000000e4 T SDL_GL_CreateContext
00000000000652f0 0000000000000034 T SDL_GL_GetCurrentWindow
0000000000065330 0000000000000034 T SDL_GL_GetCurrentContext
0000000000065370 000000000000016c T SDL_GL_MakeCurrent
00000000000654e0 000000000000005c T SDL_GL_GetDrawableSize
0000000000065540 0000000000000080 T SDL_GL_SetSwapInterval
00000000000655c0 000000000000004c T SDL_GL_GetSwapInterval
0000000000065610 00000000000000b4 T SDL_GL_SwapWindowWithResult
00000000000656d0 0000000000000068 T SDL_GL_DeleteContext
0000000000065740 0000000000000090 T SDL_StartTextInput
00000000000657d0 0000000000000028 T SDL_IsTextInputActive
0000000000065800 0000000000000098 T SDL_StopTextInput
00000000000658a0 0000000000000024 T SDL_HasScreenKeyboardSupport
00000000000658d0 000000000000000c T SDL_GetMessageBoxCount
00000000000658e0 000000000000018c T SDL_ShowMessageBox
0000000000065a70 00000000000000b0 T SDL_Vulkan_LoadLibrary
0000000000065b20 0000000000000044 T SDL_Vulkan_UnloadLibrary
0000000000065b70 0000000000000310 T SDL_RecreateWindow
0000000000065e80 000000000000024c T SDL_DestroyWindow
00000000000660d0 0000000000000448 T SDL_CreateWindow
0000000000066520 0000000000000144 T SDL_VideoQuit
0000000000066670 0000000000000278 T SDL_VideoInit
00000000000668f0 00000000000001ac t SDL_ConvertPixels_SwapUVPlanes
0000000000066aa0 0000000000000338 t SDL_ConvertPixels_PackUVPlanes_to_NV
0000000000066de0 0000000000000340 t SDL_ConvertPixels_SplitNV_to_UVPlanes
0000000000067120 00000000000001e4 t GetYUVPlanes.isra.0
0000000000067310 000000000000000c T SDL_GetYUVConversionMode
0000000000067320 0000000000000034 T SDL_GetYUVConversionModeForResolution
0000000000067360 0000000000004250 t SDL_ConvertPixels_ARGB8888_to_YUV
000000000006b5b0 0000000000000178 T SDL_CalculateYUVSize
000000000006b730 00000000000008c0 T SDL_ConvertPixels_YUV_to_RGB
000000000006b730 00000000000008c0 t SDL_ConvertPixels_YUV_to_RGB.localalias
000000000006bff0 000000000000012c T SDL_ConvertPixels_RGB_to_YUV
000000000006c120 00000000000025d4 T SDL_ConvertPixels_YUV_to_YUV
000000000006e700 0000000000000530 T yuv420_rgb565_std
000000000006ec30 00000000000004b0 T yuv420_rgb24_std
000000000006f0e0 0000000000000514 T yuv420_rgba_std
000000000006f600 0000000000000514 T yuv420_bgra_std
000000000006fb20 00000000000004fc T yuv420_argb_std
0000000000070020 00000000000004f4 T yuv420_abgr_std
0000000000070520 000000000000024c T yuv422_rgb565_std
0000000000070770 000000000000021c T yuv422_rgb24_std
0000000000070990 0000000000000240 T yuv422_rgba_std
0000000000070bd0 0000000000000240 T yuv422_bgra_std
0000000000070e10 0000000000000234 T yuv422_argb_std
0000000000071050 0000000000000234 T yuv422_abgr_std
0000000000071290 0000000000000530 T yuvnv12_rgb565_std
00000000000717c0 00000000000004b0 T yuvnv12_rgb24_std
0000000000071c70 0000000000000514 T yuvnv12_rgba_std
0000000000072190 0000000000000514 T yuvnv12_bgra_std
00000000000726b0 00000000000004fc T yuvnv12_argb_std
0000000000072bb0 00000000000004f4 T yuvnv12_abgr_std
00000000000730b0 0000000000000018 t RunThread
00000000000730d0 00000000000000b0 T SDL_SYS_CreateThread
0000000000073180 000000000000001c T SDL_SYS_SetupThread
00000000000731a0 0000000000000004 T SDL_ThreadID
00000000000731b0 0000000000000050 T SDL_SYS_SetThreadPriority
0000000000073200 000000000000000c T SDL_SYS_WaitThread
0000000000073210 0000000000000078 T SDL_CreateSemaphore
0000000000073290 000000000000002c T SDL_DestroySemaphore
00000000000732c0 0000000000000034 T SDL_SemTryWait
0000000000073300 0000000000000068 T SDL_SemWait
0000000000073370 0000000000000134 T SDL_SemWaitTimeout
00000000000734b0 000000000000005c T SDL_SemPost
0000000000073510 0000000000000090 T SDL_CreateMutex
00000000000735a0 000000000000002c T SDL_DestroyMutex
00000000000735d0 0000000000000038 T SDL_LockMutex
0000000000073610 0000000000000038 T SDL_UnlockMutex
0000000000073650 00000000000000b0 T SDL_SYS_GetTLSData
0000000000073700 0000000000000044 T SDL_SYS_SetTLSData
0000000000073750 0000000000000008 T SWITCH_CreateWindowFrom
0000000000073760 0000000000000004 T SWITCH_SetWindowTitle
0000000000073770 0000000000000004 T SWITCH_SetWindowIcon
0000000000073780 00000000000001a8 t SWITCH_CreateDevice
0000000000073930 0000000000000034 t SWITCH_Destroy
0000000000073970 000000000000009c T SWITCH_VideoInit
0000000000073a10 0000000000000040 T SWITCH_VideoQuit
0000000000073a50 0000000000000060 T SWITCH_GetDisplayModes
0000000000073ab0 0000000000000090 T SWITCH_DestroyWindow
0000000000073b40 00000000000000a0 T SWITCH_SetDisplayMode
0000000000073be0 00000000000000b8 T SWITCH_SetWindowSize
0000000000073ca0 0000000000000128 T SWITCH_CreateWindow
0000000000073dd0 00000000000000c4 T SWITCH_PumpEvents
0000000000073ea0 0000000000000004 T SWITCH_RestoreWindow
0000000000073eb0 0000000000000004 T SWITCH_SetWindowPosition
0000000000073ec0 0000000000000004 T SWITCH_ShowWindow
0000000000073ed0 0000000000000004 T SWITCH_HideWindow
0000000000073ee0 0000000000000004 T SWITCH_RaiseWindow
0000000000073ef0 0000000000000004 T SWITCH_MaximizeWindow
0000000000073f00 0000000000000004 T SWITCH_MinimizeWindow
0000000000073f10 0000000000000004 t SWITCHAUDIO_WaitDevice
0000000000073f20 000000000000000c t SWITCHAUDIO_GetDeviceBuf
0000000000073f30 0000000000000054 t SWITCHAUDIO_Init
0000000000073f90 0000000000000060 t SWITCHAUDIO_CloseDevice
0000000000073ff0 000000000000017c t SWITCHAUDIO_PlayDevice
0000000000074170 00000000000002ec t SWITCHAUDIO_OpenDevice
0000000000074460 0000000000000004 t SWITCHAUDIO_ThreadInit
0000000000074470 0000000000000008 t SWITCH_JoystickGetCount
0000000000074480 0000000000000004 t SWITCH_JoystickDetect
0000000000074490 000000000000000c t SWITCH_JoystickGetDeviceName
00000000000744a0 0000000000000008 t SWITCH_JoystickGetDevicePath
00000000000744b0 0000000000000008 t SWITCH_JoystickGetDevicePlayerIndex
00000000000744c0 0000000000000004 t SWITCH_JoystickSetDevicePlayerIndex
00000000000744d0 0000000000000004 t SWITCH_JoystickGetDeviceInstanceID
00000000000744e0 0000000000000024 t SWITCH_JoystickOpen
0000000000074510 0000000000000008 t SWITCH_JoystickGetCapabilities
0000000000074520 0000000000000008 t SWITCH_JoystickSetLED
0000000000074530 0000000000000004 t SWITCH_JoystickClose
0000000000074540 0000000000000008 t SWITCH_JoystickGetGamepadMapping
0000000000074550 0000000000000184 t SWITCH_UpdateControllerSupport
00000000000746e0 000000000000025c t SWITCH_JoystickUpdate
0000000000074940 0000000000000008 t SWITCH_JoystickSetSensorsEnabled
0000000000074950 0000000000000008 t SWITCH_JoystickSendEffect
0000000000074960 0000000000000008 t SWITCH_JoystickRumbleTriggers
0000000000074970 00000000000000c0 t SWITCH_JoystickRumble
0000000000074a30 000000000000000c t SWITCH_JoystickGetDeviceGUID
0000000000074a40 0000000000000158 t SWITCH_JoystickInit
0000000000074ba0 0000000000000004 t SWITCH_JoystickQuit
0000000000074bb0 000000000000000c T SDL_TicksQuit
0000000000074bc0 0000000000000008 T SDL_GetPerformanceCounter
0000000000074bd0 0000000000000038 T SDL_TicksInit
0000000000074c10 0000000000000008 T SDL_GetPerformanceFrequency
0000000000074c20 0000000000000054 T SDL_GetTicks64
0000000000074c80 0000000000000010 T SDL_Delay
0000000000074c90 0000000000000008 t VIRTUAL_JoystickInit
0000000000074ca0 0000000000000004 t VIRTUAL_JoystickDetect
0000000000074cb0 0000000000000008 t VIRTUAL_JoystickGetDevicePath
0000000000074cc0 0000000000000008 t VIRTUAL_JoystickGetDevicePlayerIndex
0000000000074cd0 0000000000000ae0 t VIRTUAL_JoystickGetGamepadMapping
00000000000757b0 0000000000000050 t VIRTUAL_JoystickGetDeviceInstanceID
0000000000075800 0000000000000064 t VIRTUAL_JoystickSetDevicePlayerIndex
0000000000075870 000000000000004c t VIRTUAL_JoystickGetDeviceName
00000000000758c0 0000000000000030 t VIRTUAL_JoystickClose
00000000000758f0 0000000000000064 t VIRTUAL_JoystickGetCapabilities
0000000000075960 0000000000000034 t VIRTUAL_JoystickGetCount
00000000000759a0 0000000000000008 t VIRTUAL_JoystickSetSensorsEnabled
00000000000759b0 00000000000000c8 t VIRTUAL_FreeHWData
0000000000075a80 0000000000000038 t VIRTUAL_JoystickQuit
0000000000075ac0 00000000000000d4 t VIRTUAL_JoystickUpdate
0000000000075ba0 0000000000000084 t VIRTUAL_JoystickOpen
0000000000075c30 0000000000000084 t VIRTUAL_JoystickSetLED
0000000000075cc0 0000000000000058 t VIRTUAL_JoystickGetDeviceGUID
0000000000075d20 000000000000007c t VIRTUAL_JoystickRumble
0000000000075da0 000000000000007c t VIRTUAL_JoystickRumbleTriggers
0000000000075e20 000000000000007c t VIRTUAL_JoystickSendEffect
0000000000075ea0 0000000000000008 T SDL_SYS_HapticInit
0000000000075eb0 0000000000000004 T SDL_SYS_HapticClose
0000000000075ec0 0000000000000004 T SDL_SYS_HapticQuit
0000000000075ed0 000000000000000c T SDL_SYS_HapticDestroyEffect
0000000000075ee0 0000000000000008 t SDL_DUMMY_SensorInit
0000000000075ef0 0000000000000004 t SDL_DUMMY_SensorDetect
0000000000075f00 0000000000000008 t SDL_DUMMY_SensorGetDeviceName
0000000000075f10 0000000000000008 t SDL_DUMMY_SensorGetDeviceType
0000000000075f20 0000000000000008 t SDL_DUMMY_SensorGetDeviceNonPortableType
0000000000075f30 0000000000000004 t SDL_DUMMY_SensorUpdate
0000000000075f40 0000000000000008 t SDL_DUMMY_SensorOpen
0000000000075f50 0000000000000004 t SDL_DUMMY_SensorClose
0000000000075f60 0000000000000008 t SDL_DUMMY_SensorGetDeviceInstanceID
0000000000075f70 0000000000000008 t SDL_DUMMY_SensorGetCount
0000000000075f80 0000000000000004 t SDL_DUMMY_SensorQuit
0000000000075f90 00000000000000bc T SDL_NewDataQueue
0000000000076050 0000000000000064 T SDL_FreeDataQueue
00000000000760c0 00000000000000bc T SDL_ClearDataQueue
0000000000076180 000000000000018c T SDL_WriteToDataQueue
0000000000076310 00000000000000fc T SDL_ReadFromDataQueue
0000000000076410 000000000000003c T SDL_CountDataQueue
0000000000076450 0000000000000130 T SDL_GUIDFromString
0000000000076580 0000000000000054 T SDL_ListAdd
00000000000765e0 0000000000000034 T SDL_ListRemove
0000000000076620 0000000000000030 T SDL_powerof2
0000000000076650 0000000000000020 T SDL_AtomicCAS
0000000000076670 0000000000000018 T SDL_AtomicSet
0000000000076690 000000000000001c T SDL_AtomicAdd
00000000000766b0 0000000000000008 T SDL_AtomicGet
00000000000766c0 00000000000000b0 T SDL_SendDisplayEvent
0000000000076770 0000000000001548 t SDL_BlendFillRect_RGB555
0000000000077cc0 0000000000001528 t SDL_BlendFillRect_RGB565
00000000000791f0 0000000000001030 t SDL_BlendFillRect_RGB888
000000000007a220 000000000000120c t SDL_BlendFillRect_ARGB8888
000000000007b430 0000000000003f00 t SDL_BlendFillRect_RGB
000000000007f330 000000000000253c t SDL_BlendFillRect_RGBA
0000000000081870 00000000000001e8 T SDL_BlendFillRects
0000000000081a60 0000000000002248 t SDL_BlendLine_RGB2
0000000000083cb0 0000000000001584 t SDL_BlendLine_RGB555
0000000000085240 0000000000001574 t SDL_BlendLine_RGB565
00000000000867c0 00000000000021a8 t SDL_BlendLine_RGB4
0000000000088970 00000000000025bc t SDL_BlendLine_RGBA4
000000000008af30 00000000000023d0 t SDL_BlendLine_RGB888
000000000008d300 0000000000002b7c t SDL_BlendLine_ARGB8888
000000000008fe80 000000000000025c T SDL_BlendLines
00000000000900e0 0000000000000294 t SDL_BlendPoint_RGB555
0000000000090380 0000000000000290 t SDL_BlendPoint_RGB565
0000000000090610 00000000000001fc t SDL_BlendPoint_RGB888
0000000000090810 0000000000000238 t SDL_BlendPoint_ARGB8888
0000000000090a50 0000000000000758 t SDL_BlendPoint_RGB
00000000000911b0 00000000000004a8 t SDL_BlendPoint_RGBA
0000000000091660 0000000000000128 T SDL_BlendPoint
0000000000091790 0000000000000204 T SDL_BlendPoints
00000000000919a0 000000000000056c t SDL_DrawLine4
0000000000091f10 00000000000005ac t SDL_DrawLine2
00000000000924c0 0000000000000288 t SDL_DrawLine1
0000000000092750 00000000000001e4 T SDL_DrawLines
0000000000092940 00000000000000f0 T SDL_DrawPoint
0000000000092a30 0000000000000118 T SDL_DrawPoints
0000000000092b50 00000000000000c4 t copy_opaque_16
0000000000092c20 00000000000000e0 t uncopy_opaque_16
0000000000092d00 00000000000005f8 t copy_transl_565
0000000000093300 00000000000005f8 t copy_transl_555
0000000000093900 00000000000000e0 t uncopy_transl_16
00000000000939e0 000000000000050c t copy_32
0000000000093ef0 00000000000000d4 t uncopy_32
0000000000093fd0 0000000000000008 t getpix_8
0000000000093fe0 0000000000000008 t getpix_16
0000000000093ff0 0000000000000010 t getpix_24
0000000000094000 0000000000000008 t getpix_32
0000000000094010 0000000000001720 t SDL_RLEAlphaBlit
0000000000095730 0000000000003c18 t SDL_RLEBlit
0000000000099350 000000000000027c T SDL_UnRLESurface
00000000000995d0 0000000000000f34 T SDL_RLESurface
000000000009a510 0000000000000268 t SDL_SoftBlit
000000000009a780 00000000000003b0 T SDL_CalculateBlit
000000000009ab30 0000000000000308 t BlitBto1
000000000009ae40 00000000000001ac t BlitBto2
000000000009aff0 0000000000000184 t BlitBto3
000000000009b180 00000000000001b4 t BlitBto4
000000000009b340 0000000000000240 t BlitBto1Key
000000000009b580 0000000000000164 t BlitBto2Key
000000000009b6f0 0000000000000160 t BlitBto4Key
000000000009b850 0000000000000dc4 t BlitBtoNAlpha
000000000009c620 0000000000000e48 t BlitBtoNAlphaKey
000000000009d470 00000000000000d0 t Blit4bto4
000000000009d540 00000000000000ac t Blit4bto4Key
000000000009d5f0 00000000000001b8 t BlitBto3Key
000000000009d7b0 00000000000000f4 T SDL_CalculateBlit0
000000000009d8b0 00000000000001dc t Blit1to1
000000000009da90 00000000000001f4 t Blit1to2
000000000009dc90 00000000000003cc t Blit1to3
000000000009e060 0000000000000214 t Blit1to4
000000000009e280 00000000000004cc t Blit1to1Key
000000000009e750 00000000000002f8 t Blit1to2Key
000000000009ea50 0000000000000474 t Blit1to3Key
000000000009eed0 00000000000002c4 t Blit1to4Key
000000000009f1a0 0000000000001b50 t Blit1toNAlpha
00000000000a0cf0 0000000000003a4c t Blit1toNAlphaKey
00000000000a4740 00000000000000b8 T SDL_CalculateBlit1
00000000000a4800 0000000000000df8 t BlitNto1SurfaceAlpha
00000000000a5600 0000000000000fd0 t BlitNto1PixelAlpha
00000000000a65d0 0000000000001c98 t BlitNto1SurfaceAlphaKey
00000000000a8270 000000000000056c t BlitRGBtoRGBSurfaceAlpha
00000000000a87e0 000000000000045c t BlitRGBtoRGBPixelAlpha
00000000000a8c40 00000000000004d8 t BlitRGBtoBGRPixelAlpha
00000000000a9120 0000000000000330 t Blit16to16SurfaceAlpha128
00000000000a9450 00000000000002ac t Blit565to565SurfaceAlpha
00000000000a9700 00000000000002ac t Blit555to555SurfaceAlpha
00000000000a99b0 000000000000050c t BlitARGBto565PixelAlpha
00000000000a9ec0 000000000000050c t BlitARGBto555PixelAlpha
00000000000aa3d0 00000000000021ac t BlitNtoNSurfaceAlpha
00000000000ac580 00000000000020ac t BlitNtoNSurfaceAlphaKey
00000000000ae630 0000000000002644 t BlitNtoNPixelAlpha
00000000000b0c80 00000000000002f4 T SDL_CalculateBlitA
00000000000b0f80 00000000000006c8 t Blit_RGB888_index8
00000000000b1650 00000000000006c8 t Blit_RGB101010_index8
00000000000b1d20 000000000000034c t Blit_RGB888_RGB555
00000000000b2070 000000000000034c t Blit_RGB888_RGB565
00000000000b23c0 00000000000003c8 t Blit_RGB565_32
00000000000b2790 000000000000000c t Blit_RGB565_ARGB8888
00000000000b27a0 000000000000000c t Blit_RGB565_ABGR8888
00000000000b27b0 000000000000000c t Blit_RGB565_RGBA8888
00000000000b27c0 000000000000000c t Blit_RGB565_BGRA8888
00000000000b27d0 00000000000001f4 t Blit_RGB555_ARGB1555
00000000000b29d0 0000000000001f10 t BlitNto1
00000000000b48e0 00000000000003d8 t Blit4to4MaskAlpha
00000000000b4cc0 0000000000000164 t get_permutation
00000000000b4e30 0000000000002c4c t BlitNtoN
00000000000b7a80 0000000000000b4c t BlitNtoNCopyAlpha
00000000000b85d0 0000000000002588 t BlitNto1Key
00000000000bab60 00000000000002c4 t Blit2to2Key
00000000000bae30 0000000000003d8c t BlitNtoNKey
00000000000bebc0 0000000000003528 t BlitNtoNKeyCopyAlpha
00000000000c20f0 0000000000000f38 t Blit2101010toN
00000000000c3030 0000000000001760 t BlitNto2101010
00000000000c4790 000000000000073c t Blit_3or4_to_3or4__same_rgb
00000000000c4ed0 0000000000000b38 t Blit_3or4_to_3or4__inversed_rgb
00000000000c5a10 000000000000034c T SDL_CalculateBlitN
00000000000c5d60 00000000000000c8 t SDL_Blit_RGB888_RGB888_Scale
00000000000c5e30 00000000000006a4 t SDL_Blit_RGB888_RGB888_Blend
00000000000c64e0 0000000000000228 t SDL_Blit_RGB888_RGB888_Blend_Scale
00000000000c6710 000000000000042c t SDL_Blit_RGB888_RGB888_Modulate
00000000000c6b40 0000000000000198 t SDL_Blit_RGB888_RGB888_Modulate_Scale
00000000000c6ce0 00000000000007fc t SDL_Blit_RGB888_RGB888_Modulate_Blend
00000000000c74e0 0000000000000514 t SDL_Blit_RGB888_RGB888_Modulate_Blend_Scale
00000000000c7a00 00000000000000dc t SDL_Blit_RGB888_BGR888_Scale
00000000000c7ae0 00000000000006e4 t SDL_Blit_RGB888_BGR888_Blend
00000000000c81d0 0000000000000230 t SDL_Blit_RGB888_BGR888_Blend_Scale
00000000000c8400 0000000000000464 t SDL_Blit_RGB888_BGR888_Modulate
00000000000c8870 00000000000001a0 t SDL_Blit_RGB888_BGR888_Modulate_Scale
00000000000c8a10 00000000000007f8 t SDL_Blit_RGB888_BGR888_Modulate_Blend
00000000000c9210 0000000000000520 t SDL_Blit_RGB888_BGR888_Modulate_Blend_Scale
00000000000c9730 00000000000000cc t SDL_Blit_RGB888_ARGB8888_Scale
00000000000c9800 00000000000006f4 t SDL_Blit_RGB888_ARGB8888_Blend
00000000000c9f00 0000000000000274 t SDL_Blit_RGB888_ARGB8888_Blend_Scale
00000000000ca180 0000000000000474 t SDL_Blit_RGB888_ARGB8888_Modulate
00000000000ca600 00000000000001ac t SDL_Blit_RGB888_ARGB8888_Modulate_Scale
00000000000ca7b0 00000000000008ac t SDL_Blit_RGB888_ARGB8888_Modulate_Blend
00000000000cb060 0000000000000564 t SDL_Blit_RGB888_ARGB8888_Modulate_Blend_Scale
00000000000cb5d0 0000000000000004 t SDL_Blit_BGR888_RGB888_Scale
00000000000cb5e0 00000000000006e4 t SDL_Blit_BGR888_RGB888_Blend
00000000000cbcd0 0000000000000230 t SDL_Blit_BGR888_RGB888_Blend_Scale
00000000000cbf00 0000000000000464 t SDL_Blit_BGR888_RGB888_Modulate
00000000000cc370 00000000000001a0 t SDL_Blit_BGR888_RGB888_Modulate_Scale
00000000000cc510 0000000000000804 t SDL_Blit_BGR888_RGB888_Modulate_Blend
00000000000ccd20 0000000000000514 t SDL_Blit_BGR888_RGB888_Modulate_Blend_Scale
00000000000cd240 00000000000006a4 t SDL_Blit_BGR888_BGR888_Blend
00000000000cd8f0 0000000000000228 t SDL_Blit_BGR888_BGR888_Blend_Scale
00000000000cdb20 000000000000042c t SDL_Blit_BGR888_BGR888_Modulate
00000000000cdf50 0000000000000198 t SDL_Blit_BGR888_BGR888_Modulate_Scale
00000000000ce0f0 00000000000007f0 t SDL_Blit_BGR888_BGR888_Modulate_Blend
00000000000ce8e0 0000000000000518 t SDL_Blit_BGR888_BGR888_Modulate_Blend_Scale
00000000000cee00 00000000000000e0 t SDL_Blit_BGR888_ARGB8888_Scale
00000000000ceee0 0000000000000734 t SDL_Blit_BGR888_ARGB8888_Blend
00000000000cf620 0000000000000278 t SDL_Blit_BGR888_ARGB8888_Blend_Scale
00000000000cf8a0 00000000000004a4 t SDL_Blit_BGR888_ARGB8888_Modulate
00000000000cfd50 00000000000001bc t SDL_Blit_BGR888_ARGB8888_Modulate_Scale
00000000000cff10 00000000000008ac t SDL_Blit_BGR888_ARGB8888_Modulate_Blend
00000000000d07c0 0000000000000564 t SDL_Blit_BGR888_ARGB8888_Modulate_Blend_Scale
00000000000d0d30 00000000000000cc t SDL_Blit_ARGB8888_RGB888_Scale
00000000000d0e00 00000000000009e8 t SDL_Blit_ARGB8888_RGB888_Blend
00000000000d17f0 0000000000000424 t SDL_Blit_ARGB8888_RGB888_Blend_Scale
00000000000d1c20 0000000000000004 t SDL_Blit_ARGB8888_RGB888_Modulate
00000000000d1c30 0000000000000004 t SDL_Blit_ARGB8888_RGB888_Modulate_Scale
00000000000d1c40 000000000000096c t SDL_Blit_ARGB8888_RGB888_Modulate_Blend
00000000000d25b0 00000000000005cc t SDL_Blit_ARGB8888_RGB888_Modulate_Blend_Scale
00000000000d2b80 0000000000000004 t SDL_Blit_ARGB8888_BGR888_Scale
00000000000d2b90 00000000000009e8 t SDL_Blit_ARGB8888_BGR888_Blend
00000000000d3580 0000000000000430 t SDL_Blit_ARGB8888_BGR888_Blend_Scale
00000000000d39b0 0000000000000004 t SDL_Blit_ARGB8888_BGR888_Modulate
00000000000d39c0 0000000000000004 t SDL_Blit_ARGB8888_BGR888_Modulate_Scale
00000000000d39d0 000000000000096c t SDL_Blit_ARGB8888_BGR888_Modulate_Blend
00000000000d4340 00000000000005c8 t SDL_Blit_ARGB8888_BGR888_Modulate_Blend_Scale
00000000000d4910 0000000000000a58 t SDL_Blit_ARGB8888_ARGB8888_Blend
00000000000d5370 0000000000000414 t SDL_Blit_ARGB8888_ARGB8888_Blend_Scale
00000000000d5790 00000000000006ec t SDL_Blit_ARGB8888_ARGB8888_Modulate
00000000000d5e80 00000000000002c0 t SDL_Blit_ARGB8888_ARGB8888_Modulate_Scale
00000000000d6140 0000000000000a10 t SDL_Blit_ARGB8888_ARGB8888_Modulate_Blend
00000000000d6b50 0000000000000538 t SDL_Blit_ARGB8888_ARGB8888_Modulate_Blend_Scale
00000000000d7090 00000000000000cc t SDL_Blit_RGBA8888_RGB888_Scale
00000000000d7160 00000000000009e0 t SDL_Blit_RGBA8888_RGB888_Blend
00000000000d7b40 0000000000000424 t SDL_Blit_RGBA8888_RGB888_Blend_Scale
00000000000d7f70 0000000000000424 t SDL_Blit_RGBA8888_RGB888_Modulate
00000000000d83a0 0000000000000190 t SDL_Blit_RGBA8888_RGB888_Modulate_Scale
00000000000d8530 000000000000096c t SDL_Blit_RGBA8888_RGB888_Modulate_Blend
00000000000d8ea0 00000000000005cc t SDL_Blit_RGBA8888_RGB888_Modulate_Blend_Scale
00000000000d9470 00000000000000dc t SDL_Blit_RGBA8888_BGR888_Scale
00000000000d9550 00000000000009e0 t SDL_Blit_RGBA8888_BGR888_Blend
00000000000d9f30 0000000000000430 t SDL_Blit_RGBA8888_BGR888_Blend_Scale
00000000000da360 000000000000046c t SDL_Blit_RGBA8888_BGR888_Modulate
00000000000da7d0 00000000000001a8 t SDL_Blit_RGBA8888_BGR888_Modulate_Scale
00000000000da980 000000000000096c t SDL_Blit_RGBA8888_BGR888_Modulate_Blend
00000000000db2f0 00000000000005c8 t SDL_Blit_RGBA8888_BGR888_Modulate_Blend_Scale
00000000000db8c0 00000000000000cc t SDL_Blit_RGBA8888_ARGB8888_Scale
00000000000db990 0000000000000a58 t SDL_Blit_RGBA8888_ARGB8888_Blend
00000000000dc3f0 0000000000000414 t SDL_Blit_RGBA8888_ARGB8888_Blend_Scale
00000000000dc810 000000000000075c t SDL_Blit_RGBA8888_ARGB8888_Modulate
00000000000dcf70 00000000000002d8 t SDL_Blit_RGBA8888_ARGB8888_Modulate_Scale
00000000000dd250 0000000000000a10 t SDL_Blit_RGBA8888_ARGB8888_Modulate_Blend
00000000000ddc60 0000000000000538 t SDL_Blit_RGBA8888_ARGB8888_Modulate_Blend_Scale
00000000000de1a0 0000000000000004 t SDL_Blit_ABGR8888_RGB888_Scale
00000000000de1b0 00000000000009e8 t SDL_Blit_ABGR8888_RGB888_Blend
00000000000deba0 000000000000042c t SDL_Blit_ABGR8888_RGB888_Blend_Scale
00000000000defd0 0000000000000004 t SDL_Blit_ABGR8888_RGB888_Modulate
00000000000defe0 0000000000000004 t SDL_Blit_ABGR8888_RGB888_Modulate_Scale
00000000000deff0 000000000000096c t SDL_Blit_ABGR8888_RGB888_Modulate_Blend
00000000000df960 00000000000005cc t SDL_Blit_ABGR8888_RGB888_Modulate_Blend_Scale
00000000000dff30 0000000000000004 t SDL_Blit_ABGR8888_BGR888_Scale
00000000000dff40 00000000000009e8 t SDL_Blit_ABGR8888_BGR888_Blend
00000000000e0930 0000000000000430 t SDL_Blit_ABGR8888_BGR888_Blend_Scale
00000000000e0d60 0000000000000004 t SDL_Blit_ABGR8888_BGR888_Modulate
00000000000e0d70 0000000000000004 t SDL_Blit_ABGR8888_BGR888_Modulate_Scale
00000000000e0d80 000000000000096c t SDL_Blit_ABGR8888_BGR888_Modulate_Blend
00000000000e16f0 00000000000005c8 t SDL_Blit_ABGR8888_BGR888_Modulate_Blend_Scale
00000000000e1cc0 00000000000000dc t SDL_Blit_ABGR8888_ARGB8888_Scale
00000000000e1da0 0000000000000a50 t SDL_Blit_ABGR8888_ARGB8888_Blend
00000000000e27f0 0000000000000414 t SDL_Blit_ABGR8888_ARGB8888_Blend_Scale
00000000000e2c10 000000000000079c t SDL_Blit_ABGR8888_ARGB8888_Modulate
00000000000e33b0 00000000000002e8 t SDL_Blit_ABGR8888_ARGB8888_Modulate_Scale
00000000000e36a0 0000000000000a10 t SDL_Blit_ABGR8888_ARGB8888_Modulate_Blend
00000000000e40b0 0000000000000538 t SDL_Blit_ABGR8888_ARGB8888_Modulate_Blend_Scale
00000000000e45f0 0000000000000004 t SDL_Blit_BGRA8888_RGB888_Scale
00000000000e4600 00000000000009e0 t SDL_Blit_BGRA8888_RGB888_Blend
00000000000e4fe0 000000000000042c t SDL_Blit_BGRA8888_RGB888_Blend_Scale
00000000000e5410 000000000000046c t SDL_Blit_BGRA8888_RGB888_Modulate
00000000000e5880 00000000000001a8 t SDL_Blit_BGRA8888_RGB888_Modulate_Scale
00000000000e5a30 000000000000096c t SDL_Blit_BGRA8888_RGB888_Modulate_Blend
00000000000e63a0 00000000000005cc t SDL_Blit_BGRA8888_RGB888_Modulate_Blend_Scale
00000000000e6970 0000000000000004 t SDL_Blit_BGRA8888_BGR888_Scale
00000000000e6980 00000000000009e8 t SDL_Blit_BGRA8888_BGR888_Blend
00000000000e7370 0000000000000430 t SDL_Blit_BGRA8888_BGR888_Blend_Scale
00000000000e77a0 0000000000000424 t SDL_Blit_BGRA8888_BGR888_Modulate
00000000000e7bd0 0000000000000190 t SDL_Blit_BGRA8888_BGR888_Modulate_Scale
00000000000e7d60 000000000000096c t SDL_Blit_BGRA8888_BGR888_Modulate_Blend
00000000000e86d0 00000000000005c8 t SDL_Blit_BGRA8888_BGR888_Modulate_Blend_Scale
00000000000e8ca0 00000000000000cc t SDL_Blit_BGRA8888_ARGB8888_Scale
00000000000e8d70 0000000000000a50 t SDL_Blit_BGRA8888_ARGB8888_Blend
00000000000e97c0 0000000000000414 t SDL_Blit_BGRA8888_ARGB8888_Blend_Scale
00000000000e9be0 00000000000007bc t SDL_Blit_BGRA8888_ARGB8888_Modulate
00000000000ea3a0 00000000000002ec t SDL_Blit_BGRA8888_ARGB8888_Modulate_Scale
00000000000ea690 0000000000000a10 t SDL_Blit_BGRA8888_ARGB8888_Modulate_Blend
00000000000eb0a0 0000000000000538 t SDL_Blit_BGRA8888_ARGB8888_Modulate_Blend_Scale
00000000000eb5e0 00000000000000c8 t SDL_Blit_ARGB8888_ARGB8888_Scale
00000000000eb6b0 00000000000000c8 t SDL_Blit_BGR888_BGR888_Scale
00000000000eb780 0000000000000160 T SDL_BlitCopy
00000000000eb8e0 0000000000001450 T SDL_Blit_Slow
00000000000ecd30 0000000000000090 t SDL_EGL_GetVersion
00000000000ecdc0 0000000000000134 T SDL_EGL_SetErrorEx
00000000000ecf00 0000000000000134 T SDL_EGL_HasExtension
00000000000ed040 0000000000000548 t SDL_EGL_PrivateChooseConfig
00000000000ed590 00000000000000b0 T SDL_EGL_GetProcAddress
00000000000ed640 0000000000000080 T SDL_EGL_UnloadLibrary
00000000000ed6c0 0000000000000284 T SDL_EGL_LoadLibraryOnly
00000000000ed950 0000000000000168 T SDL_EGL_LoadLibrary
00000000000edac0 000000000000008c T SDL_EGL_ChooseConfig
00000000000edb50 0000000000000104 T SDL_EGL_MakeCurrent
00000000000edc60 0000000000000094 T SDL_EGL_SetSwapInterval
00000000000edd00 0000000000000030 T SDL_EGL_GetSwapInterval
00000000000edd30 0000000000000060 T SDL_EGL_SwapBuffers
00000000000edd90 0000000000000024 T SDL_EGL_DeleteContext
00000000000eddc0 00000000000003bc T SDL_EGL_CreateContext
00000000000ee180 0000000000000160 T SDL_EGL_CreateSurface
00000000000ee2e0 0000000000000024 T SDL_EGL_DestroySurface
00000000000ee310 0000000000000004 T SWITCH_InitKeyboard
00000000000ee320 00000000000000c4 T SWITCH_PollKeyboard
00000000000ee3f0 0000000000000004 T SWITCH_QuitKeyboard
00000000000ee400 0000000000000008 t SWITCH_SetRelativeMouseMode
00000000000ee410 0000000000000020 T SWITCH_InitMouse
00000000000ee430 0000000000000154 T SWITCH_PollMouse
00000000000ee590 0000000000000004 T SWITCH_QuitMouse
00000000000ee5a0 0000000000000018 T SWITCH_GLES_DefaultProfileConfig
00000000000ee5c0 000000000000000c T SWITCH_GLES_LoadLibrary
00000000000ee5d0 000000000000000c T SWITCH_GLES_CreateContext
00000000000ee5e0 0000000000000010 T SWITCH_GLES_MakeCurrent
00000000000ee5f0 000000000000000c T SWITCH_GLES_SwapWindow
00000000000ee600 0000000000000004 t SWITCH_CancelCb
00000000000ee610 0000000000000030 t SWITCH_EnterCb
00000000000ee640 0000000000000004 T SWITCH_InitSwkb
00000000000ee650 000000000000004c T SWITCH_PollSwkb
00000000000ee6a0 0000000000000040 T SWITCH_QuitSwkb
00000000000ee6e0 0000000000000008 T SWITCH_HasScreenKeyboardSupport
00000000000ee6f0 000000000000000c T SWITCH_IsScreenKeyboardShown
00000000000ee700 0000000000000100 T SWITCH_StartTextInput
00000000000ee800 000000000000003c T SWITCH_StopTextInput
00000000000ee840 0000000000000064 T SWITCH_InitTouch
00000000000ee8b0 0000000000000004 T SWITCH_QuitTouch
00000000000ee8c0 0000000000000524 T SWITCH_PollTouch
00000000000eedf0 0000000000000028 T SDL_LoadFunction
00000000000eee20 0000000000000004 T SDL_UnloadObject
00000000000eee30 000000000000009c t op_granpos_add
00000000000eeed0 0000000000000148 t op_get_next_page
00000000000ef020 00000000000002e4 t op_fetch_headers_impl
00000000000ef310 000000000000009c t op_fetch_headers
00000000000ef3b0 0000000000000054 t op_get_packet_duration
00000000000ef410 00000000000000e8 t op_collect_audio_packets
00000000000ef500 00000000000000d8 t op_clear
00000000000ef5e0 0000000000000080 t op_seek_helper
00000000000ef660 00000000000000ac t op_decode
00000000000ef710 0000000000000078 t op_rescale64.part.0
00000000000ef790 0000000000000084 t op_granpos_diff
00000000000ef820 0000000000000268 t op_find_initial_pcm_offset
00000000000efa90 0000000000000278 t op_find_final_pcm_offset
00000000000efd10 00000000000000d8 t op_update_gain.part.7
00000000000efdf0 000000000000011c t op_make_decode_ready.part.8
00000000000eff10 0000000000000660 t op_fetch_and_process_page
00000000000f0570 0000000000000340 t op_read_native.part.9
00000000000f08b0 0000000000000a0c t op_open_seekable2
00000000000f12c0 0000000000000074 t op_open2
00000000000f1340 0000000000000268 T op_test_callbacks
00000000000f15b0 000000000000004c T op_open_callbacks
00000000000f1600 000000000000002c T op_free
00000000000f1630 0000000000000008 T op_seekable
00000000000f1640 0000000000000040 T op_head
00000000000f1680 0000000000000cf8 T op_pcm_seek
00000000000f2380 0000000000000018 T op_read
00000000000f23a0 0000000000000058 t op_strdup_with_len
00000000000f2400 00000000000000d4 t op_tags_ensure_capacity
00000000000f24e0 0000000000000280 t opus_tags_parse_impl
00000000000f2760 00000000000001b0 T opus_head_parse
00000000000f2910 000000000000000c T opus_tags_init
00000000000f2920 0000000000000078 T opus_tags_clear
00000000000f29a0 000000000000009c T opus_tags_parse
00000000000f2a40 000000000000003c T opus_tagncompare
00000000000f2a80 0000000000000128 t opus_tags_get_gain.isra.0.constprop.1
00000000000f2bb0 0000000000000018 T opus_tags_get_album_gain
00000000000f2bd0 0000000000000018 T opus_tags_get_track_gain
00000000000f2bf0 000000000000005c t op_strncasecmp
00000000000f2c50 0000000000000328 T opus_pcm_soft_clip
00000000000f2f80 000000000000009c T opus_packet_get_samples_per_frame
00000000000f3020 0000000000000438 t opus_packet_parse_impl
00000000000f3460 0000000000000084 t smooth_fade
00000000000f34f0 0000000000000cd4 t opus_decode_frame
00000000000f41d0 000000000000006c T opus_decoder_get_size
00000000000f4240 0000000000000124 T opus_decoder_init
00000000000f4370 000000000000020c T opus_decoder_ctl
00000000000f4580 0000000000000044 T opus_packet_get_bandwidth
00000000000f45d0 0000000000000010 T opus_packet_get_nb_channels
00000000000f45e0 00000000000005e4 t opus_decode_native
00000000000f4bd0 000000000000004c T opus_packet_get_nb_frames
00000000000f4c20 0000000000000060 T opus_packet_get_nb_samples
00000000000f4c80 00000000000000f8 t opus_copy_channel_out_short
00000000000f4d80 0000000000000074 T opus_multistream_decoder_get_size
00000000000f4e00 0000000000000160 T opus_multistream_decoder_init
00000000000f4f60 0000000000000130 T opus_multistream_decoder_create
00000000000f5090 0000000000000394 t opus_multistream_decoder_ctl_va_list
00000000000f5430 0000000000000078 T opus_multistream_decoder_ctl
00000000000f54b0 000000000000048c t opus_multistream_decode_native
00000000000f5940 0000000000000034 T opus_multistream_decode
00000000000f5980 0000000000000004 T opus_multistream_decoder_destroy
00000000000f5990 0000000000000038 t celt_fatal
00000000000f59d0 0000000000000088 t resampling_factor
00000000000f5a60 0000000000000234 t comb_filter
00000000000f5ca0 0000000000000068 t init_caps
00000000000f5d10 00000000000001c8 t deemphasis
00000000000f5ee0 000000000000042c t celt_synthesis
00000000000f6310 00000000000009a0 t celt_decode_lost
00000000000f6cb0 00000000000002ec t validate_celt_decoder
00000000000f6fa0 0000000000000060 t celt_decoder_get_size
00000000000f7000 0000000000001088 t celt_decode_with_ec
00000000000f8090 00000000000002f8 t opus_custom_decoder_ctl
00000000000f8390 00000000000000f0 t celt_decoder_init
00000000000f8480 000000000000004c t ec_tell_frac
00000000000f84d0 000000000000007c t ec_dec_normalize
00000000000f8550 0000000000000060 t ec_dec_init
00000000000f85b0 000000000000002c t ec_decode
00000000000f85e0 0000000000000034 t ec_decode_bin
00000000000f8620 0000000000000044 t ec_dec_update
00000000000f8670 0000000000000044 t ec_dec_bit_logp
00000000000f86c0 0000000000000058 t ec_dec_icdf
00000000000f8720 0000000000000074 t ec_dec_bits
00000000000f87a0 0000000000000110 t ec_dec_uint
00000000000f88b0 000000000000021c t clt_mdct_backward_c
00000000000f8ad0 0000000000000050 t opus_custom_mode_create
00000000000f8b20 00000000000000e8 t find_best_pitch
00000000000f8c10 000000000000023c t pitch_downsample
00000000000f8e50 0000000000000254 t pitch_search
00000000000f90b0 0000000000000128 t _celt_lpc
00000000000f91e0 0000000000000270 t celt_fir_c
00000000000f9450 0000000000000368 t celt_iir
00000000000f97c0 0000000000000184 t _celt_autocorr
00000000000f9950 0000000000000218 t unquant_coarse_energy
00000000000f9b70 0000000000000120 t unquant_fine_energy
00000000000f9c90 0000000000000168 t unquant_energy_finalise
00000000000f9e00 0000000000000d04 t clt_compute_allocation
00000000000fab10 00000000000000a4 t exp_rotation1
00000000000fabc0 000000000000017c t exp_rotation.part.0
00000000000fad40 000000000000023c t op_pvq_search_c
00000000000faf80 00000000000001e8 t alg_quant
00000000000fb170 0000000000000180 t alg_unquant
00000000000fb2f0 000000000000009c t renormalise_vector
00000000000fb390 000000000000024c t stereo_itheta
00000000000fb5e0 0000000000000228 t celt_pitch_xcorr_float_neon
00000000000fb810 00000000000000bc t celt_inner_prod_neon
00000000000fb8d0 00000000000000f4 t dual_inner_prod_neon
00000000000fb9d0 0000000000000010 t silk_Get_Decoder_Size
00000000000fb9e0 0000000000000038 t silk_InitDecoder
00000000000fba20 0000000000000acc t silk_Decode
00000000000fc4f0 0000000000000264 t silk_stereo_MS_to_LR
00000000000fc760 00000000000003a0 t silk_resampler_init
00000000000fcb00 00000000000001ac t silk_resampler
00000000000fccb0 00000000000006b8 t silk_resampler_private_down_FIR
00000000000fd370 00000000000001b8 t silk_resampler_private_IIR_FIR
00000000000fd530 0000000000000174 t silk_resampler_private_up2_HQ
00000000000fd6b0 0000000000000004 t silk_resampler_private_up2_HQ_wrapper
00000000000fd6c0 0000000000000130 t silk_stereo_decode_pred
00000000000fd7f0 0000000000000030 t silk_stereo_decode_mid_only
00000000000fd820 0000000000000064 t validate_layout
00000000000fd890 0000000000000070 t get_left_channel
00000000000fd900 0000000000000074 t get_right_channel
00000000000fd980 0000000000000074 t get_mono_channel
00000000000fda00 00000000000000bc t intensity_stereo.isra.0
00000000000fdac0 000000000000014c t deinterleave_hadamard
00000000000fdc10 00000000000000a8 t special_hybrid_folding.isra.1
00000000000fdcc0 0000000000000108 t quant_band_n1.isra.2
00000000000fddd0 0000000000000018 t celt_lcg_rand
00000000000fddf0 000000000000006c t bitexact_log2tan
00000000000fde60 00000000000008f0 t compute_theta
00000000000fe750 00000000000005b0 t quant_partition
00000000000fed00 00000000000001e4 t denormalise_bands
00000000000feef0 000000000000033c t anti_collapse
00000000000ff230 000000000000007c t haar1
00000000000ff2b0 00000000000004fc t quant_band
00000000000ff7b0 000000000000056c t quant_band_stereo
00000000000ffd20 0000000000001024 t quant_all_bands
0000000000100d50 000000000000013c t encode_pulses
0000000000100e90 00000000000002d0 t decode_pulses
0000000000101160 00000000000000a0 t ec_enc_carry_out.part.0
0000000000101200 00000000000000b0 t ec_encode
00000000001012b0 0000000000000098 t ec_enc_bit_logp
0000000000101350 00000000000000a0 t ec_enc_bits
00000000001013f0 0000000000000090 t ec_enc_uint
0000000000101480 0000000000000768 t opus_fft_impl
0000000000101bf0 0000000000000194 t ec_laplace_decode
0000000000101d90 0000000000000048 t isqrt32
0000000000101de0 000000000000004c t silk_init_decoder
0000000000101e30 0000000000000220 t silk_decode_frame
0000000000102050 0000000000000260 t silk_decode_parameters
00000000001022b0 00000000000003e0 t silk_decode_indices
0000000000102690 0000000000000284 t silk_decode_pulses
0000000000102920 0000000000000284 t silk_decoder_set_fs
0000000000102bb0 00000000000000f4 t silk_gains_dequant
0000000000102cb0 0000000000000178 t silk_NLSF_decode
0000000000102e30 0000000000000028 t silk_PLC_Reset
0000000000102e60 0000000000000aa4 t silk_PLC
0000000000103910 00000000000001f0 t silk_PLC_glue_frames
0000000000103b00 0000000000000420 t silk_shell_decoder
0000000000103f20 00000000000000a0 t silk_NLSF_unpack
0000000000103fc0 0000000000000074 t silk_bwexpander
0000000000104040 000000000000012c t silk_decode_pitch
0000000000104170 000000000000006c t silk_log2lin
00000000001041e0 0000000000000174 t silk_LPC_analysis_filter
0000000000104360 000000000000036c t silk_NLSF2A
00000000001046d0 00000000000002e8 t silk_NLSF_stabilize
00000000001049c0 0000000000000054 t silk_resampler_private_AR2
0000000000104a20 0000000000000084 t silk_insertion_sort_increasing_all_values_int16
0000000000104ab0 0000000000000128 t silk_sum_sqr_shift
0000000000104be0 0000000000000220 t silk_LPC_fit
0000000000104e00 0000000000000640 t silk_LPC_inverse_pred_gain_neon
0000000000105440 000000000000004c t silk_CNG_Reset
0000000000105490 00000000000006b4 t silk_CNG
0000000000105b50 0000000000000108 t silk_decode_signs
0000000000105c60 0000000000000990 t silk_decode_core
00000000001065f0 0000000000000060 t silk_bwexpander_32
0000000000106650 00000000000003b4 t silk_LPC_inverse_pred_gain_c
0000000000106a10 0000000000000110 t png_colorspace_endpoints_match
0000000000106b20 0000000000000010 T png_zalloc
0000000000106b30 0000000000000004 T png_zfree
0000000000106b40 00000000000000e0 t png_colorspace_set_xy_and_XYZ
0000000000106c20 0000000000000248 t png_icc_profile_error
0000000000106e70 0000000000000070 T png_sig_cmp
0000000000106ee0 0000000000000030 T png_reset_crc
0000000000106f10 00000000000000a4 T png_calculate_crc
0000000000106fc0 0000000000000118 T png_user_version_check
00000000001070e0 000000000000015c T png_create_png_struct
0000000000107240 0000000000000050 T png_create_info_struct
0000000000107290 000000000000048c T png_free_data
0000000000107720 000000000000006c T png_destroy_info_struct
0000000000107790 0000000000000014 T png_get_io_ptr
00000000001077b0 0000000000000004 T png_save_int_32
00000000001077c0 0000000000000054 T png_handle_as_unknown
0000000000107820 0000000000000028 T png_chunk_unknown_handling
0000000000107850 0000000000000100 T png_zstream_error
0000000000107950 000000000000005c T png_colorspace_sync_info
00000000001079b0 000000000000002c T png_colorspace_sync
00000000001079e0 0000000000000090 T png_icc_check_length
0000000000107a70 000000000000038c T png_icc_check_header
0000000000107e00 00000000000000f0 T png_icc_check_tag_table
0000000000107ef0 00000000000002cc T png_check_IHDR
00000000001081c0 0000000000000198 T png_check_fp_number
0000000000108360 0000000000000060 T png_check_fp_string
00000000001083c0 0000000000000084 T png_muldiv
0000000000108450 0000000000000180 t png_xy_from_XYZ
00000000001085d0 0000000000000168 T png_colorspace_set_rgb_coefficients
0000000000108740 0000000000000058 T png_reciprocal
00000000001087a0 0000000000000338 t png_XYZ_from_xy
0000000000108ae0 00000000000000e4 T png_colorspace_set_chromaticities
0000000000108bd0 0000000000000018 T png_gamma_significant
0000000000108bf0 00000000000000c0 t png_colorspace_check_gamma
0000000000108cb0 00000000000000bc T png_colorspace_set_gamma
0000000000108d70 0000000000000150 T png_colorspace_set_sRGB
0000000000108ec0 00000000000001dc T png_icc_set_sRGB
00000000001090a0 000000000000017c t png_build_16bit_table
0000000000109220 000000000000006c T png_reciprocal2
0000000000109290 0000000000000064 T png_gamma_8bit_correct
0000000000109300 00000000000000bc t png_build_8bit_table
00000000001093c0 0000000000000068 T png_gamma_16bit_correct
0000000000109430 0000000000000030 T png_gamma_correct
0000000000109460 0000000000000158 T png_destroy_gamma_table
00000000001095c0 0000000000000448 T png_build_gamma_table
0000000000109a10 00000000000000e8 t png_format_buffer.isra.0
0000000000109b00 0000000000000058 T png_safecat
0000000000109b60 0000000000000168 T png_format_number
0000000000109cd0 0000000000000090 T png_warning
0000000000109d60 0000000000000030 T png_warning_parameter
0000000000109d90 00000000000000ac T png_warning_parameter_signed
0000000000109e40 0000000000000130 T png_formatted_warning
0000000000109f70 0000000000000034 T png_chunk_warning
0000000000109fb0 0000000000000078 T png_free_jmpbuf
000000000010a030 0000000000000024 T png_longjmp
000000000010a060 0000000000000070 T png_error
000000000010a0d0 0000000000000018 T png_app_warning
000000000010a0f0 0000000000000018 T png_app_error
000000000010a110 0000000000000028 T png_chunk_error
000000000010a140 0000000000000018 T png_chunk_benign_error
000000000010a160 0000000000000028 T png_chunk_report
000000000010a190 0000000000000058 T png_benign_error
000000000010a1f0 00000000000000c0 T png_set_longjmp_fn
000000000010a2b0 0000000000000010 T png_set_error_fn
000000000010a2c0 0000000000000014 T png_get_error_ptr
000000000010a2e0 0000000000000020 T png_get_valid
000000000010a300 000000000000001c T png_get_channels
000000000010a320 0000000000000090 T png_get_IHDR
000000000010a3b0 0000000000000040 T png_get_PLTE
000000000010a3f0 0000000000000078 T png_get_tRNS
000000000010a470 000000000000002c T png_malloc_base
000000000010a4a0 000000000000003c T png_malloc_array
000000000010a4e0 00000000000000e4 T png_realloc_array
000000000010a5d0 0000000000000040 T png_malloc
000000000010a610 0000000000000038 T png_calloc
000000000010a650 0000000000000048 T png_malloc_warn
000000000010a6a0 0000000000000018 T png_free_default
000000000010a6c0 0000000000000024 T png_free
000000000010a6f0 0000000000000064 T png_destroy_png_struct
000000000010a760 0000000000000014 T png_set_mem_fn
000000000010a780 0000000000000050 T png_create_read_struct_2
000000000010a7d0 0000000000000010 T png_create_read_struct
000000000010a7e0 00000000000004a0 T png_read_info
000000000010ac80 0000000000000050 T png_read_update_info
000000000010acd0 0000000000000020 T png_start_read_image
000000000010acf0 000000000000042c T png_read_row
000000000010b120 00000000000000ec T png_read_image
000000000010b210 0000000000000588 T png_read_end
000000000010b7a0 000000000000015c T png_destroy_read_struct
000000000010b900 000000000000004c T png_default_read_data
000000000010b950 0000000000000024 T png_read_data
000000000010b980 0000000000000058 T png_set_read_fn
000000000010b9e0 00000000000001e0 t png_do_gray_to_rgb
000000000010bbc0 0000000000000548 t png_do_expand
000000000010c110 0000000000000034 T png_set_strip_16
000000000010c150 0000000000000038 T png_set_expand
000000000010c190 0000000000000038 T png_set_palette_to_rgb
000000000010c1d0 0000000000000034 T png_set_expand_gray_1_2_4_to_8
000000000010c210 0000000000000038 T png_set_tRNS_to_alpha
000000000010c250 0000000000000058 T png_set_gray_to_rgb
000000000010c2b0 0000000000000014 T png_set_read_user_transform_fn
000000000010c2d0 0000000000000c94 T png_init_read_transformations
000000000010cf70 00000000000002bc T png_read_transform_info
000000000010d230 0000000000002a20 T png_do_read_transformations
000000000010fc50 0000000000000044 t png_read_filter_row_sub
000000000010fca0 0000000000000030 t png_read_filter_row_up
000000000010fcd0 0000000000000078 t png_read_filter_row_avg
000000000010fd50 000000000000007c t png_read_filter_row_paeth_1byte_pixel
000000000010fdd0 00000000000000b0 t png_read_filter_row_paeth_multibyte_pixel
000000000010fe80 0000000000000148 t png_inflate_claim
000000000010ffd0 00000000000000b4 t png_read_buffer
0000000000110090 0000000000000028 T png_get_uint_31
00000000001100c0 00000000000000f0 T png_read_sig
00000000001101b0 0000000000000048 T png_crc_read
0000000000110200 000000000000008c T png_crc_error
0000000000110290 00000000000000a0 T png_crc_finish
0000000000110330 00000000000000d8 t png_cache_unknown_chunk
0000000000110410 0000000000000040 T png_zlib_inflate
0000000000110450 0000000000000164 t png_inflate.constprop.0
00000000001105c0 0000000000000250 t png_decompress_chunk.constprop.0
0000000000110810 0000000000000134 t png_inflate_read.constprop.0.isra.0
0000000000110950 0000000000000158 T png_handle_IHDR
0000000000110ab0 0000000000000278 T png_handle_PLTE
0000000000110d30 000000000000006c T png_handle_IEND
0000000000110da0 00000000000000c0 T png_handle_gAMA
0000000000110e60 00000000000001cc T png_handle_sBIT
0000000000111030 00000000000001c0 T png_handle_cHRM
00000000001111f0 00000000000000e8 T png_handle_sRGB
00000000001112e0 000000000000058c T png_handle_iCCP
0000000000111870 00000000000002c8 T png_handle_sPLT
0000000000111b40 00000000000001e8 T png_handle_tRNS
0000000000111d30 0000000000000240 T png_handle_bKGD
0000000000111f70 00000000000001c4 T png_handle_eXIf
0000000000112140 0000000000000148 T png_handle_hIST
0000000000112290 00000000000000f4 T png_handle_pHYs
0000000000112390 0000000000000110 T png_handle_oFFs
00000000001124a0 0000000000000314 T png_handle_pCAL
00000000001127c0 000000000000029c T png_handle_sCAL
0000000000112a60 00000000000000e0 T png_handle_tIME
0000000000112b40 000000000000019c T png_handle_tEXt
0000000000112ce0 000000000000023c T png_handle_zTXt
0000000000112f20 000000000000032c T png_handle_iTXt
0000000000113250 00000000000001bc T png_handle_unknown
0000000000113410 0000000000000058 T png_check_chunk_name
0000000000113470 00000000000000d8 T png_check_chunk_length
0000000000113550 000000000000008c T png_read_chunk_header
00000000001135e0 0000000000000520 T png_combine_row
0000000000113b00 0000000000000428 T png_do_read_interlace
0000000000113f30 00000000000000c0 T png_read_filter_row
0000000000113ff0 000000000000021c T png_read_IDAT_data
0000000000114210 0000000000000094 T png_read_finish_IDAT
00000000001142b0 0000000000000100 T png_read_finish_row
00000000001143b0 0000000000000438 T png_read_start_row
00000000001147f0 000000000000006c t check_location
0000000000114860 0000000000000030 T png_set_bKGD
0000000000114890 00000000000000b4 T png_set_eXIf_1
0000000000114950 00000000000000cc T png_set_hIST
0000000000114a20 0000000000000100 T png_set_IHDR
0000000000114b20 0000000000000024 T png_set_oFFs
0000000000114b50 00000000000002b0 T png_set_pCAL
0000000000114e00 000000000000018c T png_set_sCAL_s
0000000000114f90 0000000000000024 T png_set_pHYs
0000000000114fc0 0000000000000144 T png_set_PLTE
0000000000115110 0000000000000030 T png_set_sBIT
0000000000115140 0000000000000348 T png_set_text_2
0000000000115490 0000000000000088 T png_set_tIME
0000000000115520 00000000000001c4 T png_set_tRNS
00000000001156f0 00000000000001c0 T png_set_sPLT
00000000001158b0 0000000000000154 T png_set_unknown_chunks
0000000000115a10 000000000000006c T png_set_rows
0000000000115a80 00000000000001d4 T png_check_keyword
0000000000115c60 0000000000000014 T png_set_bgr
0000000000115c80 0000000000000024 T png_set_swap
0000000000115cb0 0000000000000028 T png_set_packing
0000000000115ce0 0000000000000020 T png_set_packswap
0000000000115d00 0000000000000028 T png_set_shift
0000000000115d30 0000000000000030 T png_set_interlace_handling
0000000000115d60 0000000000000088 T png_set_filler
0000000000115df0 0000000000000014 T png_set_swap_alpha
0000000000115e10 0000000000000014 T png_set_invert_alpha
0000000000115e30 0000000000000014 T png_set_invert_mono
0000000000115e50 00000000000000ac T png_do_invert
0000000000115f00 0000000000000048 T png_do_swap
0000000000115f50 000000000000006c T png_do_packswap
0000000000115fc0 0000000000000230 T png_do_strip_channel
00000000001161f0 0000000000000118 T png_do_bgr
0000000000116310 000000000000018c T png_do_check_palette_indexes
00000000001164a0 000000000000004c T png_default_write_data
00000000001164f0 0000000000000010 T png_default_flush
0000000000116500 0000000000000024 T png_write_data
0000000000116530 0000000000000014 T png_flush
0000000000116550 000000000000004c T png_set_write_fn
00000000001165a0 00000000000000e4 t write_unknown_chunks.part.0
0000000000116690 0000000000000178 T png_write_info_before_PLTE
0000000000116810 0000000000000334 T png_write_info
0000000000116b50 00000000000001b8 T png_write_end
0000000000116d10 000000000000007c T png_create_write_struct_2
0000000000116d90 0000000000000010 T png_create_write_struct
0000000000116da0 0000000000000394 T png_write_row
0000000000117140 0000000000000080 T png_write_image
00000000001171c0 0000000000000058 T png_write_flush
0000000000117220 00000000000000b8 T png_destroy_write_struct
00000000001172e0 0000000000000160 T png_write_png
0000000000117440 0000000000000798 T png_do_write_transformations
0000000000117be0 0000000000000174 t png_image_size
0000000000117d60 0000000000000258 t png_deflate_claim
0000000000117fc0 00000000000000b8 t optimize_cmf.part.0
0000000000118080 0000000000000204 t png_text_compress.constprop.0
0000000000118290 000000000000000c T png_save_uint_32
00000000001182a0 000000000000000c T png_save_uint_16
00000000001182b0 000000000000006c T png_write_sig
0000000000118320 0000000000000060 T png_write_chunk_data
0000000000118380 0000000000000078 t png_write_compressed_data_out
0000000000118400 000000000000004c T png_write_chunk_end
0000000000118450 00000000000000c8 t png_write_complete_chunk
0000000000118520 00000000000000d4 T png_write_chunk
0000000000118600 0000000000000040 T png_free_buffer_list
0000000000118640 00000000000002b4 T png_write_IHDR
0000000000118900 0000000000000174 T png_write_PLTE
0000000000118a80 0000000000000234 T png_compress_IDAT
0000000000118cc0 00000000000000b0 T png_write_IEND
0000000000118d70 00000000000000b8 T png_write_gAMA_fixed
0000000000118e30 00000000000000c4 T png_write_sRGB
0000000000118f00 000000000000019c T png_write_iCCP
00000000001190a0 00000000000001e8 T png_write_sPLT
0000000000119290 00000000000000d0 T png_write_sBIT
0000000000119360 0000000000000114 T png_write_cHRM_fixed
0000000000119480 0000000000000174 T png_write_tRNS
0000000000119600 0000000000000174 T png_write_bKGD
0000000000119780 00000000000000d8 T png_write_eXIf
0000000000119860 00000000000000f4 T png_write_hIST
0000000000119960 0000000000000170 T png_write_tEXt
0000000000119ad0 0000000000000168 T png_write_zTXt
0000000000119c40 0000000000000398 T png_write_iTXt
0000000000119fe0 00000000000000ec T png_write_oFFs
000000000011a0d0 00000000000002b0 T png_write_pCAL
000000000011a380 00000000000000d0 T png_write_sCAL_s
000000000011a450 00000000000000ec T png_write_pHYs
000000000011a540 00000000000000b8 T png_write_tIME
000000000011a600 00000000000001a4 T png_write_start_row
000000000011a7b0 0000000000000144 T png_write_finish_row
000000000011a900 0000000000000310 T png_do_write_interlace
000000000011ac10 000000000000075c T png_write_find_filter
000000000011b370 0000000000000070 T png_init_filter_functions_neon
000000000011b3e0 0000000000000040 T png_read_filter_row_up_neon
000000000011b420 0000000000000060 T png_read_filter_row_sub3_neon
000000000011b480 0000000000000050 T png_read_filter_row_sub4_neon
000000000011b4d0 0000000000000084 T png_read_filter_row_avg3_neon
000000000011b560 0000000000000068 T png_read_filter_row_avg4_neon
000000000011b5d0 000000000000014c T png_read_filter_row_paeth3_neon
000000000011b720 0000000000000140 T png_read_filter_row_paeth4_neon
000000000011b860 0000000000000064 T png_riffle_palette_neon
000000000011b8d0 00000000000000e4 T png_do_expand_palette_rgba8_neon
000000000011b9c0 0000000000000140 T png_do_expand_palette_rgb8_neon
000000000011bb00 00000000000003a0 T adler32_z
000000000011bea0 0000000000000008 T adler32
000000000011beb0 00000000000000e4 T adler32_combine
000000000011bfa0 00000000000000e4 T adler32_combine64
000000000011c090 000000000000000c T get_crc_table
000000000011c0a0 00000000000003c4 T crc32_z
000000000011c470 0000000000000008 T crc32
000000000011c480 00000000000000cc T crc32_combine64
000000000011c550 0000000000000004 T crc32_combine
000000000011c560 0000000000000090 T crc32_combine_gen64
000000000011c5f0 0000000000000004 T crc32_combine_gen
000000000011c600 0000000000000044 T crc32_combine_op
000000000011c650 000000000000007c t slide_hash
000000000011c6d0 00000000000001dc t longest_match
000000000011c8b0 00000000000000c8 t read_buf
000000000011c980 0000000000000268 t fill_window
000000000011cbf0 00000000000000b0 t flush_pending
000000000011cca0 0000000000000570 t deflate_slow
000000000011d210 0000000000000400 t deflate_fast
000000000011d610 000000000000058c t deflate_stored
000000000011dba0 000000000000007c t deflateStateCheck.part.0
000000000011dc20 000000000000008c t deflateStateCheck
000000000011dcb0 00000000000001e0 T deflateSetDictionary
000000000011de90 00000000000000d8 T deflateGetDictionary
000000000011df70 00000000000000f0 T deflateResetKeep
000000000011e060 00000000000000b4 T deflateReset
000000000011e120 0000000000000058 T deflateSetHeader
000000000011e180 0000000000000068 T deflatePending
000000000011e1f0 00000000000000f4 T deflatePrime
000000000011e2f0 0000000000000058 T deflateTune
000000000011e350 0000000000000158 T deflateBound
000000000011e4b0 0000000000001184 T deflate
000000000011f640 0000000000000174 T deflateParams
000000000011f7c0 00000000000000a0 T deflateEnd
000000000011f860 00000000000002a4 T deflateInit2_
000000000011fb10 000000000000001c T deflateInit_
000000000011fb30 00000000000001cc T deflateCopy
000000000011fd00 0000000000000114 t updatewindow
000000000011fe20 0000000000000050 t inflateStateCheck
000000000011fe70 0000000000000080 T inflateResetKeep
000000000011fef0 0000000000000050 T inflateReset
000000000011ff40 00000000000000ac T inflateReset2
000000000011fff0 0000000000000118 T inflateInit2_
0000000000120110 0000000000000010 T inflateInit_
0000000000120120 00000000000000b0 T inflatePrime
00000000001201d0 00000000000018ec T inflate
0000000000121ac0 000000000000005c T inflateEnd
0000000000121b20 00000000000000d4 T inflateGetDictionary
0000000000121c00 00000000000000c0 T inflateSetDictionary
0000000000121cc0 0000000000000068 T inflateGetHeader
0000000000121d30 0000000000000308 T inflateSync
0000000000122040 0000000000000070 T inflateSyncPoint
00000000001220b0 00000000000001e0 T inflateCopy
0000000000122290 0000000000000060 T inflateUndermine
00000000001222f0 000000000000007c T inflateValidate
0000000000122370 0000000000000090 T inflateMark
0000000000122400 0000000000000064 T inflateCodesUsed
0000000000122470 000000000000047c t inflate_table
00000000001228f0 0000000000000078 t bi_windup
0000000000122970 00000000000000f4 t pqdownheap
0000000000122a70 00000000000004e8 t build_tree
0000000000122f60 00000000000001e0 t scan_tree
0000000000123140 0000000000000668 t send_tree
00000000001237b0 00000000000003cc t compress_block
0000000000123b80 0000000000000098 t _tr_init
0000000000123c20 0000000000000148 t _tr_stored_block
0000000000123d70 0000000000000088 t _tr_flush_bits
0000000000123e00 0000000000000148 t _tr_align
0000000000123f50 0000000000000614 t _tr_flush_block
0000000000124570 00000000000000dc T _tr_tally
0000000000124650 000000000000000c T zlibVersion
0000000000124660 0000000000000008 T zlibCompileFlags
0000000000124670 0000000000000030 T zError
00000000001246a0 0000000000000008 T zcalloc
00000000001246b0 0000000000000008 T zcfree
00000000001246c0 00000000000004f4 t inflate_fast
0000000000124bc0 00000000000000d8 T jpeg_CreateCompress
0000000000124ca0 0000000000000004 T jpeg_destroy_compress
0000000000124cb0 0000000000000094 T jpeg_suppress_tables
0000000000124d50 0000000000000180 T jpeg_finish_compress
0000000000124ed0 00000000000000a4 T jpeg_start_compress
0000000000124f80 00000000000000f0 T jpeg_write_scanlines
0000000000125070 00000000000000dc T jinit_compress_master
0000000000125150 0000000000000054 t start_pass_main
00000000001251b0 0000000000000134 t process_data_simple_main
00000000001252f0 00000000000000d0 T jinit_c_main_controller
00000000001253c0 0000000000000074 t write_marker_byte
0000000000125440 00000000000000c8 t write_file_trailer
0000000000125510 00000000000001a4 t write_marker_header
00000000001256c0 00000000000004d0 t emit_sof
0000000000125b90 00000000000003a4 t emit_dqt
0000000000125f40 0000000000000188 t write_frame_header
00000000001260d0 0000000000000324 t emit_dht
0000000000126400 0000000000000200 t write_tables_only
0000000000126600 0000000000000bd4 t write_scan_header
00000000001271e0 0000000000000ba0 t write_file_header
0000000000127d80 0000000000000080 T jinit_marker_writer
0000000000127e00 00000000000006dc t validate_script
00000000001284e0 0000000000000040 t pass_startup
0000000000128520 00000000000000c4 t finish_pass_master
00000000001285f0 0000000000000258 t per_scan_setup
0000000000128850 0000000000000144 t select_scan_parameters
00000000001289a0 00000000000001f8 t prepare_for_pass
0000000000128ba0 000000000000039c T jinit_c_master_control
0000000000128f40 000000000000005c T jpeg_abort
0000000000128fa0 0000000000000034 T jpeg_destroy
0000000000128fe0 0000000000000028 T jpeg_alloc_quant_table
0000000000129010 0000000000000028 T jpeg_alloc_huff_table
0000000000129040 00000000000000d0 t add_huff_table.part.0
0000000000129110 00000000000000fc T jpeg_add_quant_table
0000000000129210 000000000000005c T jpeg_set_linear_quality
0000000000129270 0000000000000040 T jpeg_quality_scaling
00000000001292b0 0000000000000034 T jpeg_set_quality
00000000001292f0 000000000000029c T jpeg_set_colorspace
0000000000129590 0000000000000068 T jpeg_default_colorspace
0000000000129600 0000000000000198 T jpeg_set_defaults
00000000001297a0 000000000000006c t encode_mcu_AC_first_prepare
0000000000129810 000000000000009c t encode_mcu_AC_refine_prepare
00000000001298b0 00000000000001fc t start_pass_phuff
0000000000129ab0 0000000000000144 t emit_bits.constprop.0
0000000000129c00 0000000000000170 t emit_bits
0000000000129d70 0000000000000244 t emit_eobrun
0000000000129fc0 0000000000000058 t finish_pass_phuff
000000000012a020 0000000000000228 t finish_pass_gather_phuff
000000000012a250 0000000000000134 t emit_restart
000000000012a390 000000000000021c t encode_mcu_DC_refine
000000000012a5b0 0000000000000478 t encode_mcu_AC_refine
000000000012aa30 0000000000000338 t encode_mcu_AC_first
000000000012ad70 00000000000001b8 t encode_mcu_DC_first
000000000012af30 0000000000000054 T jinit_phuff_encoder
000000000012af90 0000000000000050 t start_pass_prep
000000000012afe0 000000000000027c t pre_process_data
000000000012b260 0000000000000284 t pre_process_context
000000000012b4f0 0000000000000338 T jinit_c_prep_controller
000000000012b830 0000000000000004 t start_pass_downsample
000000000012b840 000000000000009c t sep_downsample
000000000012b8e0 000000000000032c t int_downsample
000000000012bc10 00000000000000f0 t h2v1_downsample
000000000012bd00 0000000000000110 t h2v2_downsample
000000000012be10 00000000000005cc t h2v2_smooth_downsample
000000000012c3e0 00000000000001e4 t fullsize_smooth_downsample
000000000012c5d0 00000000000000a4 t fullsize_downsample
000000000012c680 0000000000000274 T jinit_downsampler
000000000012c900 0000000000000118 T jpeg_CreateDecompress
000000000012ca20 0000000000000004 T jpeg_destroy_decompress
000000000012ca30 0000000000000284 T jpeg_consume_input
000000000012ccc0 0000000000000090 T jpeg_read_header
000000000012cd50 00000000000000ec T jpeg_finish_decompress
000000000012ce40 0000000000000158 t output_pass_setup
000000000012cfa0 000000000000010c T jpeg_start_decompress
000000000012d0b0 00000000000000dc T jpeg_read_scanlines
000000000012d190 0000000000000014 t finish_input_pass
000000000012d1b0 0000000000000058 t reset_input_controller
000000000012d210 000000000000048c t start_input_pass
000000000012d6a0 000000000000036c t consume_markers
000000000012da10 0000000000000068 T jinit_input_controller
000000000012da80 00000000000003cc t get_sof
000000000012de50 0000000000000250 t examine_app0
000000000012e0a0 0000000000000128 t skip_variable
000000000012e1d0 0000000000000134 t next_marker
000000000012e310 0000000000000020 t reset_marker_reader
000000000012e330 00000000000003bc t get_dht
000000000012e6f0 0000000000000c50 t read_markers
000000000012f340 00000000000000dc t examine_app14
000000000012f420 00000000000001c8 t get_interesting_appn
000000000012f5f0 00000000000000bc t read_restart_marker
000000000012f6b0 000000000000015c T jpeg_resync_to_restart
000000000012f810 00000000000000bc T jinit_marker_reader
000000000012f8d0 00000000000001bc t prepare_for_output_pass
000000000012fa90 000000000000003c t finish_output_pass
000000000012fad0 00000000000000f4 t use_merged_upsample.part.0
000000000012fbd0 00000000000004f4 T jpeg_calc_output_dimensions
00000000001300d0 00000000000003e0 T jinit_master_decompress
00000000001304b0 0000000000000014 t start_pass_merged_upsample
00000000001304d0 0000000000000050 t merged_1v_upsample
0000000000130520 00000000000007bc t h2v1_merged_upsample
0000000000130ce0 0000000000000c58 t h2v2_merged_upsample
0000000000131940 000000000000017c t h2v1_merged_upsample_565
0000000000131ac0 00000000000001d8 t h2v1_merged_upsample_565D
0000000000131ca0 0000000000000254 t h2v2_merged_upsample_565
0000000000131f00 0000000000000318 t h2v2_merged_upsample_565D
0000000000132220 000000000000011c t merged_2v_upsample
0000000000132340 0000000000000244 T jinit_merged_upsampler
0000000000132590 00000000000003e8 t start_pass_phuff_decoder
0000000000132980 0000000000000534 t decode_mcu_AC_refine
0000000000132ec0 0000000000000188 t decode_mcu_DC_refine
0000000000133050 0000000000000330 t decode_mcu_AC_first
0000000000133380 000000000000033c t decode_mcu_DC_first
00000000001336c0 00000000000000b8 T jinit_phuff_decoder
0000000000133780 000000000000011c t start_pass_dpost
00000000001338a0 000000000000008c t post_process_1pass
0000000000133930 00000000000000f8 t post_process_prepass
0000000000133a30 00000000000000e8 t post_process_2pass
0000000000133b20 00000000000000d0 T jinit_d_post_controller
0000000000133bf0 0000000000000014 t start_pass_upsample
0000000000133c10 000000000000014c t sep_upsample
0000000000133d60 0000000000000008 t fullsize_upsample
0000000000133d70 0000000000000008 t noop_upsample
0000000000133d80 00000000000001c8 t h2v1_upsample
0000000000133f50 00000000000003d4 t h2v1_fancy_upsample
0000000000134330 00000000000000ac t h1v2_fancy_upsample
00000000001343e0 0000000000000144 t h2v2_fancy_upsample
0000000000134530 0000000000000118 t int_upsample
0000000000134650 0000000000000214 t h2v2_upsample
0000000000134870 0000000000000334 T jinit_upsampler
0000000000134bb0 0000000000000070 t emit_message
0000000000134c20 0000000000000010 t reset_error_mgr
0000000000134c30 00000000000000cc t format_message
0000000000134d00 0000000000000044 t output_message
0000000000134d50 000000000000002c t error_exit
0000000000134d80 0000000000000058 T jpeg_std_error
0000000000134de0 00000000000001d8 t create_colorindex
0000000000134fc0 0000000000000098 t color_quantize
0000000000135060 0000000000000078 t color_quantize3
00000000001350e0 00000000000000e0 t quantize3_ord_dither
00000000001351c0 0000000000000004 t finish_pass_1_quant
00000000001351d0 0000000000000018 t new_color_map_1_quant
00000000001351f0 0000000000000680 t start_pass_1_quant
0000000000135870 000000000000023c t quantize_fs_dither
0000000000135ab0 0000000000000180 t quantize_ord_dither
0000000000135c30 0000000000000520 T jinit_1pass_quantizer
0000000000136150 00000000000000a4 t prescan_quantize
0000000000136200 00000000000009a8 t fill_inverse_cmap
0000000000136bb0 000000000000011c t pass2_no_dither
0000000000136cd0 0000000000000354 t pass2_fs_dither
0000000000137030 0000000000000114 t init_error_limit
0000000000137150 0000000000000004 t finish_pass2
0000000000137160 0000000000000010 t new_color_map_2_quant
0000000000137170 0000000000000160 t start_pass_2_quant
00000000001372d0 00000000000005f8 t update_box.isra.0
00000000001378d0 00000000000003e0 t finish_pass1
0000000000137cb0 00000000000001b8 T jinit_2pass_quantizer
0000000000137e70 0000000000000010 T jdiv_round_up
0000000000137e80 0000000000000018 T jround_up
0000000000137ea0 0000000000000060 T jcopy_sample_rows
0000000000137f00 0000000000000014 T jcopy_block_row
0000000000137f20 000000000000000c T jzero_far
0000000000137f30 00000000000001d0 t alloc_small
0000000000138100 0000000000000098 t request_virt_barray
00000000001381a0 0000000000000098 t request_virt_sarray
0000000000138240 0000000000000158 t free_pool
00000000001383a0 0000000000000048 t self_destruct
00000000001383f0 0000000000000158 t alloc_large
0000000000138550 00000000000000e4 t alloc_barray
0000000000138640 000000000000011c t alloc_sarray
0000000000138760 0000000000000274 t realize_virt_arrays
00000000001389e0 00000000000003bc t access_virt_sarray
0000000000138da0 00000000000003c4 t access_virt_barray
0000000000139170 0000000000000170 T jinit_memory_mgr
00000000001392e0 0000000000000008 T jpeg_get_small
00000000001392f0 0000000000000008 T jpeg_free_small
0000000000139300 0000000000000008 T jpeg_get_large
0000000000139310 0000000000000008 T jpeg_free_large
0000000000139320 0000000000000020 T jpeg_mem_available
0000000000139340 0000000000000018 T jpeg_open_backing_store
0000000000139360 0000000000000008 T jpeg_mem_init
0000000000139370 0000000000000004 T jpeg_mem_term
0000000000139380 0000000000000228 t start_pass
00000000001395b0 000000000000046c t arith_encode
0000000000139a20 000000000000046c t arith_encode.constprop.0
0000000000139e90 000000000000046c t arith_encode.constprop.1
000000000013a300 000000000000059c t finish_pass
000000000013a8a0 0000000000000198 t emit_restart
000000000013aa40 000000000000047c t encode_mcu
000000000013aec0 0000000000000288 t encode_mcu_AC_refine
000000000013b150 00000000000000b4 t encode_mcu_DC_refine
000000000013b210 00000000000002dc t encode_mcu_AC_first
000000000013b4f0 000000000000025c t encode_mcu_DC_first
000000000013b750 000000000000007c T jinit_arith_encoder
000000000013b7d0 00000000000003ec t start_pass
000000000013bbc0 0000000000000108 t process_restart
000000000013bcd0 0000000000000280 t arith_decode
000000000013bf50 00000000000003c0 t decode_mcu
000000000013c310 0000000000000214 t decode_mcu_AC_refine
000000000013c530 00000000000000d4 t decode_mcu_DC_refine
000000000013c610 0000000000000278 t decode_mcu_AC_first
000000000013c890 0000000000000294 t decode_mcu_DC_first
000000000013cb30 00000000000000e8 T jinit_arith_decoder
000000000013cc20 000000000000016c t init_simd.part.0
000000000013cd90 0000000000000044 T jsimd_can_rgb_ycc
000000000013cde0 0000000000000044 T jsimd_can_rgb_gray
000000000013ce30 0000000000000044 T jsimd_can_ycc_rgb
000000000013ce80 0000000000000044 T jsimd_can_ycc_rgb565
000000000013ced0 00000000000000f4 T jsimd_rgb_ycc_convert
000000000013cfd0 00000000000000e4 T jsimd_rgb_gray_convert
000000000013d0c0 00000000000000f4 T jsimd_ycc_rgb_convert
000000000013d1c0 0000000000000008 T jsimd_ycc_rgb565_convert
000000000013d1d0 0000000000000044 T jsimd_can_h2v2_downsample
000000000013d220 0000000000000044 T jsimd_can_h2v1_downsample
000000000013d270 0000000000000020 T jsimd_h2v2_downsample
000000000013d290 0000000000000020 T jsimd_h2v1_downsample
000000000013d2b0 0000000000000044 T jsimd_can_h2v2_upsample
000000000013d300 0000000000000044 T jsimd_can_h2v1_upsample
000000000013d350 000000000000000c T jsimd_h2v2_upsample
000000000013d360 000000000000000c T jsimd_h2v1_upsample
000000000013d370 0000000000000044 T jsimd_can_h2v2_fancy_upsample
000000000013d3c0 0000000000000044 T jsimd_can_h2v1_fancy_upsample
000000000013d410 0000000000000044 T jsimd_can_h1v2_fancy_upsample
000000000013d460 000000000000000c T jsimd_h2v2_fancy_upsample
000000000013d470 000000000000000c T jsimd_h2v1_fancy_upsample
000000000013d480 000000000000000c T jsimd_h1v2_fancy_upsample
000000000013d490 0000000000000044 T jsimd_can_h2v2_merged_upsample
000000000013d4e0 0000000000000044 T jsimd_can_h2v1_merged_upsample
000000000013d530 00000000000000e4 T jsimd_h2v2_merged_upsample
000000000013d620 00000000000000e4 T jsimd_h2v1_merged_upsample
000000000013d710 0000000000000044 T jsimd_can_convsamp
000000000013d760 0000000000000008 T jsimd_can_convsamp_float
000000000013d770 0000000000000004 T jsimd_convsamp
000000000013d780 0000000000000004 T jsimd_convsamp_float
000000000013d790 0000000000000044 T jsimd_can_fdct_islow
000000000013d7e0 0000000000000044 T jsimd_can_fdct_ifast
000000000013d830 0000000000000008 T jsimd_can_fdct_float
000000000013d840 0000000000000004 T jsimd_fdct_islow
000000000013d850 0000000000000004 T jsimd_fdct_ifast
000000000013d860 0000000000000004 T jsimd_fdct_float
000000000013d870 0000000000000044 T jsimd_can_quantize
000000000013d8c0 0000000000000008 T jsimd_can_quantize_float
000000000013d8d0 0000000000000004 T jsimd_quantize
000000000013d8e0 0000000000000004 T jsimd_quantize_float
000000000013d8f0 0000000000000044 T jsimd_can_idct_2x2
000000000013d940 0000000000000044 T jsimd_can_idct_4x4
000000000013d990 0000000000000014 T jsimd_idct_2x2
000000000013d9b0 0000000000000014 T jsimd_idct_4x4
000000000013d9d0 0000000000000044 T jsimd_can_idct_islow
000000000013da20 0000000000000044 T jsimd_can_idct_ifast
000000000013da70 0000000000000008 T jsimd_can_idct_float
000000000013da80 0000000000000014 T jsimd_idct_islow
000000000013daa0 0000000000000014 T jsimd_idct_ifast
000000000013dac0 0000000000000004 T jsimd_idct_float
000000000013dad0 000000000000004c T jsimd_can_huff_encode_one_block
000000000013db20 0000000000000014 T jsimd_huff_encode_one_block
000000000013db40 0000000000000044 T jsimd_can_encode_mcu_AC_first_prepare
000000000013db90 0000000000000004 T jsimd_encode_mcu_AC_first_prepare
000000000013dba0 0000000000000044 T jsimd_can_encode_mcu_AC_refine_prepare
000000000013dbf0 0000000000000004 T jsimd_encode_mcu_AC_refine_prepare
000000000013dc00 0000000000000130 t start_pass_coef
000000000013dd30 0000000000000298 t compress_output
000000000013dfd0 0000000000000294 t compress_first_pass
000000000013e270 0000000000000510 t compress_data
000000000013e780 0000000000000134 T jinit_c_coef_controller
000000000013e8c0 00000000000000d0 t rgb_ycc_start
000000000013e990 0000000000000608 t rgb_ycc_convert
000000000013efa0 00000000000003a8 t rgb_gray_convert
000000000013f350 000000000000148c t rgb_rgb_convert
00000000001407e0 0000000000000108 t cmyk_ycck_convert
00000000001408f0 00000000000005c0 t grayscale_convert
0000000000140eb0 0000000000000afc t null_convert
00000000001419b0 0000000000000004 t null_method
00000000001419c0 00000000000003ac T jinit_color_converter
0000000000141d70 0000000000000338 t convsamp
00000000001420b0 000000000000014c t quantize
0000000000142200 00000000000000ac t forward_DCT
00000000001422b0 0000000000000438 t convsamp_float
00000000001426f0 0000000000000188 t quantize_float
0000000000142880 00000000000000ac t forward_DCT_float
0000000000142930 0000000000000130 t compute_reciprocal
0000000000142a60 0000000000000388 t start_pass_fdctmgr
0000000000142df0 0000000000000244 T jinit_forward_dct
0000000000143040 0000000000000244 t encode_mcu_gather
0000000000143290 00000000000001bc t flush_bits
0000000000143450 0000000000000088 t finish_pass_huff
00000000001434e0 000000000000f1ec t encode_mcu_huff
00000000001526d0 00000000000002c8 T jpeg_make_c_derived_tbl
00000000001529a0 00000000000001d0 t start_pass_huff
0000000000152b70 00000000000003c8 T jpeg_gen_optimal_table
0000000000152f40 0000000000000100 t finish_pass_gather
0000000000153040 0000000000000058 T jinit_huff_encoder
00000000001530a0 0000000000000054 t start_input_pass
0000000000153100 0000000000000008 t dummy_consume_data
0000000000153110 00000000000002b4 t consume_data
00000000001533d0 0000000000000278 t decompress_data
0000000000153650 00000000000002f0 t start_output_pass
0000000000153940 0000000000000360 t decompress_onepass
0000000000153ca0 0000000000001e74 t decompress_smooth_data
0000000000155b20 0000000000000198 T jinit_d_coef_controller
0000000000155cc0 0000000000000118 t build_ycc_rgb_table
0000000000155de0 00000000000004e0 t ycc_rgb_convert
00000000001562c0 0000000000000090 t rgb_gray_convert
0000000000156350 0000000000000694 t null_convert
00000000001569f0 0000000000001384 t gray_rgb_convert
0000000000157d80 0000000000001744 t rgb_rgb_convert
00000000001594d0 00000000000000e0 t ycck_cmyk_convert
00000000001595b0 0000000000000244 t ycc_rgb565_convert
0000000000159800 00000000000002c0 t ycc_rgb565D_convert
0000000000159ac0 000000000000068c t rgb_rgb565_convert
000000000015a150 00000000000001fc t rgb_rgb565D_convert
000000000015a350 00000000000002d8 t gray_rgb565_convert
000000000015a630 000000000000013c t gray_rgb565D_convert
000000000015a770 0000000000000004 t start_pass_dcolor
000000000015a780 0000000000000018 t grayscale_convert
000000000015a7a0 00000000000003f0 T jinit_color_deconverter
000000000015ab90 00000000000006a4 t start_pass
000000000015b240 00000000000000c4 T jinit_inverse_dct
000000000015b310 00000000000000d0 t add_huff_table.part.0
000000000015b3e0 00000000000006d0 T jpeg_make_d_derived_tbl
000000000015bab0 000000000000044c t start_pass_huff_decoder
000000000015bf00 0000000000000150 T jpeg_fill_bit_buffer
000000000015c050 000000000000016c T jpeg_huff_decode
000000000015c1c0 000000000000128c t decode_mcu
000000000015d450 0000000000000130 T jinit_huff_decoder
000000000015d580 00000000000000a8 t process_data_simple_main
000000000015d630 0000000000000334 t process_data_context_main
000000000015d970 0000000000000028 t process_data_crank_post
000000000015d9a0 000000000000030c t start_pass_main
000000000015dcb0 00000000000001d0 T jinit_d_main_controller
000000000015de80 0000000000000438 T jpeg_fdct_float
000000000015e2c0 00000000000002f0 T jpeg_fdct_ifast
000000000015e5b0 0000000000000338 T jpeg_fdct_islow
000000000015e8f0 000000000000033c T jpeg_idct_float
000000000015ec30 0000000000000408 T jpeg_idct_ifast
000000000015f040 0000000000000430 T jpeg_idct_islow
000000000015f470 0000000000000a20 T jpeg_idct_7x7
000000000015fe90 00000000000004a0 T jpeg_idct_6x6
0000000000160330 0000000000000624 T jpeg_idct_5x5
0000000000160960 00000000000001f0 T jpeg_idct_3x3
0000000000160b50 0000000000000a44 T jpeg_idct_9x9
00000000001615a0 0000000000000aa4 T jpeg_idct_10x10
0000000000162050 00000000000004b8 T jpeg_idct_11x11
0000000000162510 0000000000000db8 T jpeg_idct_12x12
00000000001632d0 00000000000005cc T jpeg_idct_13x13
00000000001638a0 0000000000000fdc T jpeg_idct_14x14
0000000000164880 0000000000000558 T jpeg_idct_15x15
0000000000164de0 0000000000000620 T jpeg_idct_16x16
0000000000165400 00000000000002b0 T jpeg_idct_4x4
00000000001656b0 0000000000000224 T jpeg_idct_2x2
00000000001658e0 0000000000000030 T jpeg_idct_1x1
0000000000165910 00000000000001bc T jsimd_rgb_gray_convert_neon
0000000000165910 00000000000001bc t jsimd_rgb_gray_convert_neon.localalias
0000000000165ad0 0000000000000004 T jsimd_extrgb_gray_convert_neon
0000000000165ae0 00000000000001bc T jsimd_extrgbx_gray_convert_neon
0000000000165ca0 00000000000001bc T jsimd_extbgr_gray_convert_neon
0000000000165e60 00000000000001bc T jsimd_extbgrx_gray_convert_neon
0000000000166020 00000000000001bc T jsimd_extxbgr_gray_convert_neon
00000000001661e0 00000000000001bc T jsimd_extxrgb_gray_convert_neon
00000000001663a0 000000000000052c T jsimd_encode_mcu_AC_first_prepare_neon
00000000001668d0 00000000000006b4 T jsimd_encode_mcu_AC_refine_prepare_neon
0000000000166f90 0000000000000090 T jsimd_h2v1_downsample_neon
0000000000167020 00000000000000b4 T jsimd_h2v2_downsample_neon
00000000001670e0 0000000000000418 T jsimd_h2v1_merged_upsample_neon
00000000001670e0 0000000000000418 t jsimd_h2v1_merged_upsample_neon.localalias
0000000000167500 0000000000000678 T jsimd_h2v2_merged_upsample_neon
0000000000167500 0000000000000678 t jsimd_h2v2_merged_upsample_neon.localalias
0000000000167b80 0000000000000004 T jsimd_h2v1_extrgb_merged_upsample_neon
0000000000167b90 0000000000000004 T jsimd_h2v2_extrgb_merged_upsample_neon
0000000000167ba0 00000000000004a0 T jsimd_h2v1_extrgbx_merged_upsample_neon
0000000000168040 0000000000000730 T jsimd_h2v2_extrgbx_merged_upsample_neon
0000000000168770 0000000000000418 T jsimd_h2v1_extbgr_merged_upsample_neon
0000000000168b90 0000000000000678 T jsimd_h2v2_extbgr_merged_upsample_neon
0000000000169210 00000000000004a0 T jsimd_h2v1_extbgrx_merged_upsample_neon
00000000001696b0 0000000000000740 T jsimd_h2v2_extbgrx_merged_upsample_neon
0000000000169df0 0000000000000494 T jsimd_h2v1_extxbgr_merged_upsample_neon
000000000016a290 0000000000000750 T jsimd_h2v2_extxbgr_merged_upsample_neon
000000000016a9e0 0000000000000494 T jsimd_h2v1_extxrgb_merged_upsample_neon
000000000016ae80 0000000000000750 T jsimd_h2v2_extxrgb_merged_upsample_neon
000000000016b5d0 0000000000000154 T jsimd_h2v1_fancy_upsample_neon
000000000016b730 00000000000002d8 T jsimd_h2v2_fancy_upsample_neon
000000000016ba10 00000000000000b8 T jsimd_h1v2_fancy_upsample_neon
000000000016bad0 000000000000005c T jsimd_h2v1_upsample_neon
000000000016bb30 0000000000000078 T jsimd_h2v2_upsample_neon
000000000016bbb0 00000000000001c8 T jsimd_fdct_ifast_neon
000000000016bd80 0000000000000110 T jsimd_idct_2x2_neon
000000000016be90 00000000000003bc T jsimd_idct_4x4_neon
000000000016c250 0000000000000068 T jsimd_convsamp_neon
000000000016c2c0 00000000000001e4 T jsimd_quantize_neon
000000000016c4b0 0000000000000578 T jsimd_idct_ifast_neon
000000000016ca30 t jsimd_idct_islow_neon
000000000016d10c T jsimd_ycc_extrgb_convert_neon
000000000016d374 T jsimd_ycc_extbgr_convert_neon
000000000016d5dc T jsimd_ycc_extrgbx_convert_neon
000000000016d844 T jsimd_ycc_extbgrx_convert_neon
000000000016daac T jsimd_ycc_extxbgr_convert_neon
000000000016dd14 T jsimd_ycc_extxrgb_convert_neon
000000000016df7c t jsimd_ycc_rgb565_convert_neon
000000000016e1f0 T jsimd_ycc_extrgb_convert_neon_slowst3
000000000016e510 T jsimd_ycc_extbgr_convert_neon_slowst3
000000000016e830 T jsimd_extrgb_ycc_convert_neon
000000000016eaf4 T jsimd_extbgr_ycc_convert_neon
000000000016edb8 T jsimd_extrgbx_ycc_convert_neon
000000000016f07c T jsimd_extbgrx_ycc_convert_neon
000000000016f340 T jsimd_extxbgr_ycc_convert_neon
000000000016f604 T jsimd_extxrgb_ycc_convert_neon
000000000016f8c8 T jsimd_extrgb_ycc_convert_neon_slowld3
000000000016fc44 T jsimd_extbgr_ycc_convert_neon_slowld3
000000000016ffc0 t jsimd_fdct_islow_neon
0000000000170344 t jsimd_huff_encode_one_block_neon
0000000000170b1c t jsimd_huff_encode_one_block_neon_slowtbl
00000000001714b0 000000000000003c T FT_Add_Default_Modules
00000000001714f0 0000000000000184 T FT_Set_Default_Properties
0000000000171680 0000000000000074 T FT_Init_FreeType
0000000000171700 0000000000000038 T FT_Done_FreeType
0000000000171740 0000000000000068 t FT_GlyphLoader_Adjust_Points
00000000001717b0 0000000000000028 t hash_str_lookup
00000000001717e0 0000000000000038 t hash_num_lookup
0000000000171820 0000000000000014 t hash_num_compare
0000000000171840 0000000000000090 t hash_bucket
00000000001718d0 0000000000000078 t destroy_size
0000000000171950 00000000000000ac t find_unicode_charmap
0000000000171a00 000000000000004c t memory_stream_close
0000000000171a50 0000000000000010 t ft_raccess_sort_ref_by_id
0000000000171a60 00000000000000dc t ft_trig_pseudo_rotate
0000000000171b40 00000000000000f8 t ft_trig_pseudo_polarize
0000000000171c40 000000000000003c t hash_str_compare
0000000000171c80 0000000000000154 t ft_property_do
0000000000171de0 00000000000000a8 t destroy_charmaps.part.0
0000000000171e90 00000000000000c0 t raccess_guess_darwin_hfsplus
0000000000171f50 00000000000000c0 t raccess_guess_darwin_newvfs
0000000000172010 00000000000000dc t raccess_make_file_name
00000000001720f0 0000000000000054 t raccess_guess_linux_cap
0000000000172150 0000000000000054 t raccess_guess_vfat
00000000001721b0 0000000000000018 T FT_RoundFix
00000000001721d0 0000000000000064 T FT_MulDiv
0000000000172240 0000000000000060 t FT_MulDiv_No_Round
00000000001722a0 0000000000000014 T FT_MulFix
00000000001722c0 000000000000007c t ft_recompute_scaled_metrics
0000000000172340 0000000000000070 T FT_DivFix
00000000001723b0 00000000000000d8 T FT_Matrix_Multiply
0000000000172490 00000000000000ac T FT_Matrix_Invert
0000000000172540 00000000000000fc t FT_Matrix_Multiply_Scaled
0000000000172640 00000000000000ac t FT_Matrix_Check
00000000001726f0 0000000000000098 t FT_Vector_Transform_Scaled
0000000000172790 00000000000001a0 t FT_Vector_NormLen
0000000000172930 000000000000001c t ft_corner_orientation
0000000000172950 00000000000000d8 t ft_corner_is_flat
0000000000172a30 000000000000003c t FT_MulAddFix
0000000000172a70 0000000000000078 T FT_Palette_Select
0000000000172af0 000000000000002c T FT_Get_Font_Format
0000000000172b20 000000000000002c t FT_GlyphLoader_Rewind
0000000000172b50 00000000000000cc t FT_GlyphLoader_Reset
0000000000172c20 000000000000003c t FT_GlyphLoader_Done
0000000000172c60 0000000000000088 t FT_GlyphLoader_Prepare
0000000000172cf0 00000000000000ac t FT_GlyphLoader_Add
0000000000172da0 0000000000000080 t ft_hash_str_init
0000000000172e20 0000000000000080 t ft_hash_num_init
0000000000172ea0 0000000000000080 t ft_hash_str_free
0000000000172f20 0000000000000024 t ft_hash_str_lookup
0000000000172f50 0000000000000028 t ft_hash_num_lookup
0000000000172f80 00000000000000e0 t ft_lcd_padding
0000000000173060 0000000000000058 t ft_service_list_lookup
00000000001730c0 0000000000000014 t ft_validator_init
00000000001730e0 0000000000000018 t ft_validator_error
0000000000173100 0000000000000064 t FT_Stream_Free
0000000000173170 0000000000000068 t ft_glyphslot_free_bitmap
00000000001731e0 0000000000000114 t ft_glyphslot_done
0000000000173300 000000000000005c t ft_glyphslot_set_bitmap
0000000000173360 00000000000000a0 t FT_Done_GlyphSlot
0000000000173400 0000000000000024 T FT_Get_Transform
0000000000173430 0000000000000138 t FT_Match_Size
0000000000173570 0000000000000064 t ft_synthesize_vertical_metrics
00000000001735e0 00000000000000b4 t FT_Select_Metrics
00000000001736a0 00000000000002c8 t FT_Request_Metrics
0000000000173970 0000000000000064 T FT_Select_Size
00000000001739e0 00000000000000b0 T FT_Request_Size
0000000000173a90 0000000000000094 T FT_Set_Char_Size
0000000000173b30 0000000000000120 T FT_Get_Kerning
0000000000173c50 0000000000000088 T FT_Select_Charmap
0000000000173ce0 000000000000004c T FT_Get_Char_Index
0000000000173d30 000000000000009c T FT_Get_Next_Char
0000000000173dd0 00000000000000bc T FT_Get_Name_Index
0000000000173e90 00000000000000f4 T FT_Get_Glyph_Name
0000000000173f90 00000000000000b4 T FT_Load_Sfnt_Table
0000000000174050 0000000000000098 T FT_Sfnt_Table_Info
00000000001740f0 0000000000000070 T FT_Get_CMap_Format
0000000000174160 00000000000000a4 T FT_Set_Charmap
0000000000174210 0000000000000088 t find_variant_selector_charmap.isra.0
00000000001742a0 0000000000000088 T FT_Face_GetCharVariantIndex
0000000000174330 0000000000000034 T FT_Activate_Size
0000000000174370 000000000000004c t FT_Lookup_Renderer
00000000001743c0 000000000000009c T FT_Get_Module
0000000000174460 0000000000000020 t FT_Get_Module_Interface
0000000000174480 00000000000000bc t ft_module_get_service
0000000000174540 000000000000000c t ft_property_string_set
0000000000174550 0000000000000088 T FT_New_Library
00000000001745e0 0000000000000048 T FT_Get_Color_Glyph_Layer
0000000000174630 0000000000000034 T FT_Get_Color_Glyph_Paint
0000000000174670 0000000000000030 T FT_Get_Color_Glyph_ClipBox
00000000001746a0 0000000000000034 T FT_Get_Paint_Layers
00000000001746e0 0000000000000030 T FT_Get_Paint
0000000000174710 0000000000000034 T FT_Get_Colorline_Stops
0000000000174750 00000000000003b0 T FT_Outline_Decompose
0000000000174b00 0000000000000084 T FT_Outline_Check
0000000000174b90 00000000000000c4 T FT_Outline_Copy
0000000000174c60 00000000000000a0 T FT_Outline_Done
0000000000174d00 0000000000000084 T FT_Outline_Get_CBox
0000000000174d90 00000000000002a0 t ft_glyphslot_preset_bitmap
0000000000175030 0000000000000048 T FT_Outline_Translate
0000000000175080 000000000000007c T FT_Vector_Transform
0000000000175100 0000000000000064 T FT_Outline_Transform
0000000000175170 00000000000001bc T FT_Outline_Get_Orientation
0000000000175330 00000000000003ac T FT_Outline_EmboldenXY
00000000001756e0 000000000000022c T ps_property_set
0000000000175910 00000000000000cc T ps_property_get
00000000001759e0 00000000000000f0 t FT_Raccess_Guess
0000000000175ad0 0000000000000014 t FT_Stream_OpenMemory
0000000000175af0 0000000000000018 t FT_Stream_Close
0000000000175b10 000000000000005c t FT_Stream_Seek
0000000000175b70 0000000000000070 t FT_Stream_Skip
0000000000175be0 0000000000000008 t FT_Stream_Pos
0000000000175bf0 00000000000000a0 t FT_Stream_Read
0000000000175c90 000000000000009c t FT_Stream_ReadAt
0000000000175d30 0000000000000090 t FT_Stream_TryRead
0000000000175dc0 0000000000000040 t FT_Stream_ReleaseFrame
0000000000175e00 0000000000000170 t FT_Stream_EnterFrame
0000000000175f70 0000000000000034 t FT_Stream_ExtractFrame
0000000000175fb0 0000000000000040 t FT_Stream_ExitFrame
0000000000175ff0 0000000000000024 t FT_Stream_GetByte
0000000000176020 0000000000000034 t FT_Stream_GetUShort
0000000000176060 000000000000002c t FT_Stream_GetUShortLE
0000000000176090 0000000000000030 t FT_Stream_GetULong
00000000001760c0 000000000000002c t FT_Stream_GetULongLE
00000000001760f0 0000000000000094 t FT_Stream_ReadByte
0000000000176190 00000000000000a8 t FT_Stream_ReadUShort
0000000000176240 000000000000031c t FT_Raccess_Get_HeaderInfo
0000000000176560 00000000000000a0 t FT_Stream_ReadUShortLE
0000000000176600 00000000000000b8 t FT_Stream_ReadUOffset
00000000001766c0 00000000000000a4 t FT_Stream_ReadULong
0000000000176770 0000000000000448 t FT_Raccess_Get_DataOffsets
0000000000176bc0 0000000000000198 t raccess_guess_apple_generic.isra.0
0000000000176d60 0000000000000024 t raccess_guess_apple_double
0000000000176d90 0000000000000024 t raccess_guess_apple_single
0000000000176dc0 00000000000000a0 t FT_Stream_ReadULongLE
0000000000176e60 0000000000000284 t FT_Stream_ReadFields
00000000001770f0 0000000000000028 T FT_Tan
0000000000177120 000000000000008c T FT_Atan2
00000000001771b0 0000000000000044 T FT_Vector_Unit
0000000000177200 0000000000000020 T FT_Cos
0000000000177220 0000000000000020 T FT_Sin
0000000000177240 0000000000000164 T FT_Vector_Rotate
00000000001773b0 0000000000000118 T FT_Vector_Length
00000000001774d0 0000000000000020 t FT_Hypot
00000000001774f0 0000000000000018 T FT_Vector_From_Polar
0000000000177510 0000000000000048 T FT_Angle_Diff
0000000000177560 0000000000000088 t ft_mem_alloc
00000000001775f0 0000000000000160 t FT_Stream_New
0000000000177750 000000000000007c t ft_glyphslot_alloc_bitmap
00000000001777d0 0000000000000220 t open_face
00000000001779f0 0000000000000200 t FT_New_GlyphSlot
0000000000177bf0 0000000000000254 t FT_Render_Glyph_Internal
0000000000177e50 0000000000000028 T FT_Render_Glyph
0000000000177e80 0000000000000604 T FT_Load_Glyph
0000000000178490 00000000000001ec T FT_Get_Advances
0000000000178680 000000000000011c T FT_Get_Advance
00000000001787a0 00000000000000e8 t raccess_guess_linux_double_from_file_name
0000000000178890 00000000000000b8 t raccess_guess_linux_netatalk
0000000000178950 00000000000000b8 t raccess_guess_linux_double
0000000000178a10 00000000000000b8 t raccess_guess_darwin_ufs_export
0000000000178ad0 000000000000005c t ft_mem_qalloc
0000000000178b30 00000000000000dc t ft_mem_qrealloc
0000000000178c10 000000000000016c t FT_CMap_New
0000000000178d80 0000000000000090 t ft_mem_realloc
0000000000178e10 000000000000008c t FT_GlyphLoader_CreateExtra
0000000000178ea0 000000000000025c t FT_GlyphLoader_CheckPoints
0000000000179100 000000000000009c t FT_GlyphLoader_CheckSubGlyphs
00000000001791a0 0000000000000184 T FT_Outline_New
0000000000179330 0000000000000134 t hash_insert
0000000000179470 0000000000000004 t ft_hash_str_insert
0000000000179480 0000000000000008 t ft_hash_num_insert
0000000000179490 0000000000000014 t ft_mem_free
00000000001794b0 00000000000000ac t ft_mem_strdup
0000000000179560 0000000000000040 t ft_mem_strcpyn
00000000001795a0 0000000000000030 T FT_List_Find
00000000001795d0 0000000000000030 T FT_List_Add
0000000000179600 0000000000000180 T FT_New_Size
0000000000179780 0000000000000034 T FT_List_Remove
00000000001797c0 00000000000000ec T FT_Done_Size
00000000001798b0 0000000000000060 T FT_List_Iterate
0000000000179910 0000000000000084 T FT_List_Finalize
00000000001799a0 0000000000000108 t destroy_face
0000000000179ab0 00000000000000c0 T FT_Done_Face
0000000000179b70 0000000000000940 t ft_open_face_internal
000000000017a4b0 0000000000000118 t open_face_from_buffer
000000000017a5d0 000000000000038c t open_face_PS_from_sfnt_stream.isra.0
000000000017a960 00000000000007a8 t IsMacResource
000000000017b110 0000000000000008 T FT_Open_Face
000000000017b120 00000000000001dc T FT_Remove_Module
000000000017b300 00000000000002e0 T FT_Add_Module
000000000017b5e0 000000000000013c T FT_Done_Library
000000000017b720 0000000000000038 t ft_bitmap_glyph_bbox
000000000017b760 0000000000000034 t ft_outline_glyph_prepare
000000000017b7a0 0000000000000020 t ft_bitmap_glyph_copy
000000000017b7c0 000000000000000c t ft_bitmap_glyph_done
000000000017b7d0 00000000000000ac t ft_bitmap_glyph_init
000000000017b880 0000000000000008 t ft_outline_glyph_bbox
000000000017b890 0000000000000068 t ft_outline_glyph_copy
000000000017b900 0000000000000090 t ft_outline_glyph_init
000000000017b990 000000000000000c t ft_outline_glyph_done
000000000017b9a0 00000000000000ac t ft_svg_glyph_prepare
000000000017ba50 00000000000000e0 t ft_svg_glyph_transform
000000000017bb30 00000000000000e4 t ft_svg_glyph_copy
000000000017bc20 00000000000000fc t ft_svg_glyph_init
000000000017bd20 0000000000000030 t ft_svg_glyph_done
000000000017bd50 0000000000000044 t ft_outline_glyph_transform
000000000017bda0 00000000000000e4 T FT_New_Glyph
000000000017be90 0000000000000074 T FT_Glyph_Transform
000000000017bf10 0000000000000040 T FT_Done_Glyph
000000000017bf50 0000000000000108 T FT_Glyph_Copy
000000000017c060 0000000000000114 T FT_Get_Glyph
000000000017c180 0000000000000278 T FT_Glyph_To_Bitmap
000000000017c400 00000000000000fc t ft_stroke_border_close
000000000017c500 0000000000000094 t ft_stroke_border_get_counts
000000000017c5a0 00000000000000e0 t ft_stroke_border_grow
000000000017c680 0000000000000084 t ft_stroke_border_cubicto
000000000017c710 0000000000000198 t ft_stroke_border_arcto
000000000017c8b0 00000000000000e4 t ft_stroke_border_lineto
000000000017c9a0 00000000000003fc t ft_stroker_process_corner
000000000017cda0 00000000000000a4 t ft_stroker_cap.part.0.constprop.0
000000000017ce50 00000000000000d8 t ft_stroker_subpath_start
000000000017cf30 00000000000007d0 t FT_Stroker_CubicTo.part.0
000000000017d700 00000000000005b0 t FT_Stroker_ConicTo.part.0
000000000017dcb0 00000000000000a0 T FT_Stroker_New
000000000017dd50 0000000000000024 T FT_Stroker_Rewind
000000000017dd80 0000000000000024 T FT_Stroker_Set
000000000017ddb0 00000000000000ac T FT_Stroker_Done
000000000017de60 0000000000000144 T FT_Stroker_LineTo
000000000017dfb0 000000000000001c T FT_Stroker_ConicTo
000000000017dfd0 0000000000000024 T FT_Stroker_CubicTo
000000000017e000 0000000000000064 T FT_Stroker_BeginSubPath
000000000017e070 0000000000000278 T FT_Stroker_EndSubPath
000000000017e2f0 0000000000000098 T FT_Stroker_GetCounts
000000000017e390 000000000000013c T FT_Stroker_ExportBorder
000000000017e4d0 0000000000000038 T FT_Stroker_Export
000000000017e510 0000000000000314 T FT_Stroker_ParseOutline
000000000017e830 0000000000000148 T FT_Glyph_Stroke
000000000017e980 000000000000003c t tt_get_kerning
000000000017e9c0 000000000000007c t tt_get_metrics_incremental
000000000017ea40 0000000000000074 t TT_Load_Glyph_Header
000000000017eac0 0000000000000084 t tt_loader_set_pp
000000000017eb50 0000000000000408 t ft_var_get_value_pointer
000000000017ef60 0000000000000020 t ft_size_reset_iterator
000000000017ef80 0000000000000014 t tt_cvt_ready_iterator
000000000017efa0 0000000000000060 t tt_get_var_blend
000000000017f000 000000000000004c t TT_MulFix14
000000000017f050 000000000000006c t TT_DotFix14
000000000017f0c0 0000000000000008 t Current_Ppem
000000000017f0d0 000000000000000c t Read_CVT
000000000017f0e0 0000000000000068 t Direct_Move_X
000000000017f150 000000000000005c t Direct_Move_Y
000000000017f1b0 0000000000000018 t Direct_Move_Orig_X
000000000017f1d0 0000000000000018 t Direct_Move_Orig_Y
000000000017f1f0 0000000000000028 t Round_None
000000000017f220 000000000000003c t Round_To_Grid
000000000017f260 0000000000000040 t Round_To_Half_Grid
000000000017f2a0 0000000000000034 t Round_Down_To_Grid
000000000017f2e0 000000000000003c t Round_Up_To_Grid
000000000017f320 000000000000003c t Round_To_Double_Grid
000000000017f360 0000000000000058 t Round_Super
000000000017f3c0 0000000000000058 t Round_Super_45
000000000017f420 000000000000002c t Project
000000000017f450 000000000000002c t Dual_Project
000000000017f480 0000000000000008 t Project_x
000000000017f490 0000000000000008 t Project_y
000000000017f4a0 000000000000012c t Compute_Funcs
000000000017f5d0 0000000000000090 t SkipCode
000000000017f660 00000000000000bc t Move_Zp2_Point
000000000017f720 0000000000000020 t tt_size_init
000000000017f740 0000000000000014 t tt_driver_init
000000000017f760 0000000000000004 t tt_driver_done
000000000017f770 00000000000000f8 t tt_face_get_location
000000000017f870 0000000000000018 t compare_ppem
000000000017f890 00000000000000c4 t tt_size_reset_height
000000000017f960 0000000000000110 t ft_var_apply_tuple
000000000017fa70 00000000000000b4 t Direct_Move_Orig
000000000017fb30 000000000000011c t Direct_Move
000000000017fc50 0000000000000090 t TT_Done_Context
000000000017fce0 0000000000000078 t tt_glyphzone_done
000000000017fd60 0000000000000090 t tt_size_done_bytecode
000000000017fdf0 0000000000000024 t tt_size_done
000000000017fe20 0000000000000040 t tt_var_done_delta_set_index_map
000000000017fe60 00000000000000d8 t tt_var_done_item_variation_store
000000000017ff40 000000000000002c t tt_construct_ps_name
000000000017ff70 00000000000001f0 t TT_Load_Context
0000000000180160 0000000000000170 t tt_size_run_prep
00000000001802d0 0000000000000258 t TT_Hint_Glyph
0000000000180530 0000000000000068 t TT_Access_Glyph_Frame
00000000001805a0 0000000000000008 t TT_Forget_Glyph_Frame
00000000001805b0 00000000000001ec t ft_var_readpackedpoints
00000000001807a0 00000000000001a8 t ft_var_readpackeddeltas
0000000000180950 0000000000000094 t Current_Ratio
00000000001809f0 00000000000003dc t TT_Load_Simple_Glyph
0000000000180dd0 000000000000000c t tt_slot_init
0000000000180de0 000000000000067c t tt_face_vary_cvt
0000000000181460 0000000000000104 t tt_face_load_cvt
0000000000181570 0000000000000988 t tt_face_init
0000000000181f00 0000000000000284 t TT_Load_Composite_Glyph
0000000000182190 000000000000004c t tt_property_get
00000000001821e0 00000000000003fc t tt_var_get_item_delta
00000000001825e0 00000000000001b0 t tt_apply_mvar
0000000000182790 00000000000002c8 t ft_var_to_normalized
0000000000182a60 00000000000004e0 t tt_var_load_item_variation_store
0000000000182f40 0000000000000254 t tt_var_load_delta_set_index_mapping
00000000001831a0 0000000000000234 t ft_var_load_hvvar
00000000001833e0 00000000000000f4 t tt_hvadvance_adjust
00000000001834e0 0000000000000008 t tt_vadvance_adjust
00000000001834f0 0000000000000008 t tt_hadvance_adjust
0000000000183500 00000000000002bc t ft_var_load_avar
00000000001837c0 00000000000009bc t TT_Get_MM_Var
0000000000184180 0000000000000044 t TT_Get_Default_Named_Instance
00000000001841d0 000000000000009c t TT_Get_VMetrics
0000000000184270 0000000000000134 t tt_get_advances
00000000001843b0 0000000000000188 t tt_delta_interpolate.part.0
0000000000184540 0000000000000d74 t TT_Vary_Apply_Glyph_Deltas
00000000001852c0 000000000000019c t iup_worker_interpolate_
0000000000185460 000000000000007c t Modify_CVT_Check.part.0
00000000001854e0 000000000000004c t Write_CVT
0000000000185530 000000000000006c t Move_CVT_Stretched
00000000001855a0 0000000000000060 t Write_CVT_Stretched
0000000000185600 0000000000000088 t tt_get_interface
0000000000185690 00000000000000b0 t tt_property_set
0000000000185740 00000000000001c0 t Ins_DELTAP.constprop.0
0000000000185900 00000000000003cc t Ins_IP.constprop.0
0000000000185cd0 0000000000000264 t Ins_ISECT.constprop.0
0000000000185f40 0000000000000280 t Ins_MIRP.constprop.0
00000000001861c0 0000000000000138 t Compute_Point_Displacement.constprop.0
0000000000186300 000000000000008c t Ins_JMPR.constprop.0
0000000000186390 00000000000000fc t SetSuperRound.constprop.0
0000000000186490 0000000000000160 t tt_size_reset
00000000001865f0 0000000000000064 t tt_size_select
0000000000186660 0000000000000110 t tt_size_request
0000000000186770 0000000000000054 t Move_CVT
00000000001867d0 00000000000002b0 t Ins_IUP.constprop.0
0000000000186a80 0000000000000790 t tt_set_mm_blend
0000000000187210 0000000000000008 t TT_Set_MM_Blend
0000000000187220 00000000000000f4 t TT_Get_Var_Design
0000000000187320 000000000000024c t TT_Set_Var_Design
0000000000187570 0000000000000120 t TT_Set_Named_Instance
0000000000187690 00000000000000f4 t TT_Get_MM_Blend
0000000000187790 0000000000001084 t load_truetype_glyph
0000000000188820 0000000000000100 t Ins_SxVTL.constprop.0
0000000000188920 000000000000021c t tt_done_blend
0000000000188b40 00000000000000c4 t tt_face_done
0000000000188c10 0000000000000098 t Current_Ppem_Stretched
0000000000188cb0 000000000000009c t Read_CVT_Stretched
0000000000188d50 000000000000010c t Ins_UNKNOWN.constprop.0
0000000000188e60 0000000000002ab8 T TT_RunIns
000000000018b920 0000000000000098 T TT_New_Context
000000000018b9c0 0000000000000f04 t TT_Load_Glyph
000000000018c8d0 00000000000000c8 t tt_glyph_load
000000000018c9a0 0000000000000020 t compare_kern_pairs
000000000018c9c0 0000000000000008 t t1_get_ps_name
000000000018c9d0 0000000000000024 t t1_ps_get_font_info
000000000018ca00 0000000000000010 t t1_ps_get_font_extra
000000000018ca10 0000000000000008 t t1_ps_has_glyph_names
000000000018ca20 0000000000000044 t t1_ps_get_font_private
000000000018ca70 0000000000000068 t T1_Get_Multi_Master
000000000018cae0 00000000000000c4 t T1_Set_MM_WeightVector
000000000018cbb0 00000000000000ac t T1_Get_MM_WeightVector
000000000018cc60 0000000000000038 t parse_buildchar
000000000018cca0 0000000000000010 t parse_private
000000000018ccb0 00000000000000d0 t read_binary_data
000000000018cd80 0000000000000010 t T1_GlyphSlot_Done
000000000018cd90 0000000000000078 t T1_Driver_Init
000000000018ce10 0000000000000004 t T1_Driver_Done
000000000018ce20 0000000000000050 t T1_GlyphSlot_Init
000000000018ce70 00000000000001d0 t T1_Parse_Glyph_And_Get_Char_String
000000000018d040 0000000000000060 t T1_Parse_Glyph
000000000018d0a0 0000000000000144 t T1_Compute_Max_Advance
000000000018d1f0 000000000000012c t T1_Get_Advances
000000000018d320 0000000000000174 t T1_Done_Blend
000000000018d4a0 00000000000004b4 t parse_encoding
000000000018d960 00000000000004b4 t T1_Load_Glyph
000000000018de20 000000000000007c t t1_get_name_index
000000000018dea0 00000000000001ec t t1_allocate_blend
000000000018e090 0000000000000164 t parse_weight_vector
000000000018e200 00000000000002b0 t parse_blend_design_positions
000000000018e4b0 0000000000000590 t parse_dict
000000000018ea40 0000000000000090 t read_pfb_tag
000000000018ead0 0000000000000644 t parse_charstrings
000000000018f120 00000000000003d8 t parse_subrs
000000000018f500 0000000000000130 t t1_parse_font_matrix
000000000018f630 000000000000000c t Get_Interface
000000000018f640 00000000000000a0 t mm_axis_unmap
000000000018f6e0 00000000000000ec t T1_Get_Track_Kerning
000000000018f7d0 00000000000006d8 t t1_ps_get_font_value
000000000018feb0 0000000000000028 t t1_get_glyph_name
000000000018fee0 000000000000015c t mm_weights_unmap
0000000000190040 0000000000000098 t T1_Get_MM_Blend
00000000001900e0 00000000000000d0 t T1_Get_Var_Design
00000000001901b0 000000000000025c t T1_Get_MM_Var
0000000000190410 00000000000000c4 t t1_get_index
00000000001904e0 00000000000000a4 t check_type1_format.part.0
0000000000190590 0000000000000090 t Get_Kerning
0000000000190620 0000000000000058 t T1_Size_Get_Globals_Funcs.isra.0
0000000000190680 0000000000000060 t T1_Size_Init
00000000001906e0 000000000000004c t T1_Size_Done
0000000000190730 0000000000000070 t T1_Size_Request
00000000001907a0 000000000000011c t t1_set_mm_blend.isra.0
00000000001908c0 0000000000000154 t T1_Set_MM_Design
0000000000190a20 000000000000007c t T1_Set_Var_Design
0000000000190aa0 0000000000000010 t T1_Reset_MM_Blend
0000000000190ab0 0000000000000008 t T1_Set_MM_Blend
0000000000190ac0 0000000000000a88 t T1_Open_Face
0000000000191550 0000000000000428 t T1_Face_Init
0000000000191980 00000000000001b4 t T1_Face_Done
0000000000191b40 00000000000003e8 t T1_Read_Metrics
0000000000191f30 00000000000001ac t parse_blend_axis_types
00000000001920e0 00000000000002a0 t parse_blend_design_map
0000000000192380 000000000000001c t cff_cmap_encoding_init
00000000001923a0 0000000000000008 t cff_cmap_encoding_done
00000000001923b0 000000000000001c t cff_cmap_encoding_char_index
00000000001923d0 0000000000000040 t cff_cmap_encoding_char_next
0000000000192410 000000000000004c t cff_cmap_unicode_init
0000000000192460 0000000000000018 t cff_cmap_unicode_char_index
0000000000192480 0000000000000018 t cff_cmap_unicode_char_next
00000000001924a0 000000000000003c t cff_get_kerning
00000000001924e0 000000000000000c t cff_ps_has_glyph_names
00000000001924f0 000000000000002c t cff_get_is_cid
0000000000192520 0000000000000048 t cff_get_cid_from_glyph_index
0000000000192570 0000000000000010 t cff_set_mm_blend
0000000000192580 0000000000000010 t cff_get_mm_blend
0000000000192590 0000000000000010 t cff_set_mm_weightvector
00000000001925a0 0000000000000010 t cff_get_mm_weightvector
00000000001925b0 0000000000000010 t cff_construct_ps_name
00000000001925c0 0000000000000010 t cff_get_mm_var
00000000001925d0 0000000000000010 t cff_set_var_design
00000000001925e0 0000000000000010 t cff_get_var_design
00000000001925f0 0000000000000010 t cff_set_named_instance
0000000000192600 0000000000000010 t cff_get_default_named_instance
0000000000192610 0000000000000010 t cff_load_item_variation_store
0000000000192620 0000000000000010 t cff_load_delta_set_index_mapping
0000000000192630 0000000000000010 t cff_get_item_delta
0000000000192640 0000000000000010 t cff_done_item_variation_store
0000000000192650 0000000000000010 t cff_done_delta_set_index_map
0000000000192660 0000000000000010 t cff_hadvance_adjust
0000000000192670 0000000000000010 t cff_metrics_adjust
0000000000192680 00000000000000d0 t cff_parse_integer
0000000000192750 0000000000000020 t cff_get_standard_encoding
0000000000192770 00000000000000ac t cff_fd_select_get
0000000000192820 0000000000000010 t cff_get_var_blend
0000000000192830 0000000000000018 t cff_done_blend
0000000000192850 0000000000000010 t cff_slot_done
0000000000192860 0000000000000078 t cff_driver_init
00000000001928e0 0000000000000004 t cff_driver_done
00000000001928f0 0000000000000034 t cff_cmap_unicode_done
0000000000192930 00000000000000c4 t cff_vstore_done
0000000000192a00 0000000000000054 t cff_slot_init
0000000000192a60 0000000000000178 t cff_make_private_dict
0000000000192be0 0000000000000050 t cff_index_done
0000000000192c30 00000000000000a0 t cff_get_cmap_info
0000000000192cd0 0000000000000084 t cff_get_ps_name
0000000000192d60 0000000000000420 t cff_parse_real
0000000000193180 0000000000000128 t cff_get_name_index
00000000001932b0 00000000000000f0 t cff_charset_compute_cids
00000000001933a0 0000000000000064 t cff_blend_check_vector
0000000000193410 0000000000000290 t cff_blend_build_vector
00000000001936a0 0000000000000408 t cff_index_get_pointers
0000000000193ab0 0000000000000058 t cff_index_get_sid_string
0000000000193b10 00000000000000c4 t cff_get_ros
0000000000193be0 0000000000000118 t cff_ps_get_font_info
0000000000193d00 00000000000000d4 t cff_get_glyph_name
0000000000193de0 0000000000000144 t cff_ps_get_font_extra
0000000000193f30 0000000000000068 t cff_subfont_done.part.0
0000000000193fa0 000000000000007c t cff_get_interface
0000000000194020 0000000000000058 t cff_size_get_globals_funcs.isra.0
0000000000194080 0000000000000170 t cff_size_init
00000000001941f0 000000000000008c t cff_size_done
0000000000194280 0000000000000108 t cff_size_select
0000000000194390 00000000000001a0 t cff_size_request
0000000000194530 00000000000001e8 t cff_face_done
0000000000194720 0000000000000308 t cff_parse_font_matrix
0000000000194a30 00000000000000f8 t do_fixed.isra.0
0000000000194b30 00000000000000b8 t cff_parse_font_bbox
0000000000194bf0 0000000000000074 t cff_parse_num.isra.0
0000000000194c70 000000000000008c t cff_parse_private_dict
0000000000194d00 0000000000000080 t cff_parse_multiple_master
0000000000194d80 0000000000000084 t cff_parse_cid_ros
0000000000194e10 0000000000000060 t cff_parse_vsindex
0000000000194e70 0000000000000354 t cff_parser_run
00000000001951d0 000000000000021c t cff_load_private_dict
00000000001953f0 0000000000000058 t cff_free_glyph_data
0000000000195450 0000000000000310 t cff_parse_blend
0000000000195760 0000000000000260 t cff_index_access_element
00000000001959c0 0000000000000058 t cff_get_glyph_data
0000000000195a20 0000000000000898 t cff_slot_load
00000000001962c0 0000000000000038 t cff_glyph_load
0000000000196300 0000000000000220 t cff_get_advances
0000000000196520 00000000000000d8 t cff_index_get_name
0000000000196600 00000000000001c4 t cff_index_init
00000000001967d0 0000000000000354 t cff_subfont_load
0000000000196b30 0000000000001da4 t cff_face_init
00000000001988e0 0000000000000060 t cff_sid_to_glyph_name
0000000000198940 00000000000000b0 t cff_parse_maxstack
00000000001989f0 0000000000000054 t parse_expansion_factor
0000000000198a50 0000000000000004 t parse_font_name
0000000000198a60 0000000000000010 t cid_slot_done
0000000000198a70 0000000000000078 t cid_driver_init
0000000000198af0 0000000000000004 t cid_driver_done
0000000000198b00 0000000000000018 t cid_get_postscript_name
0000000000198b20 0000000000000024 t cid_ps_get_font_info
0000000000198b50 0000000000000010 t cid_ps_get_font_extra
0000000000198b60 000000000000002c t cid_get_ros
0000000000198b90 0000000000000014 t cid_get_is_cid
0000000000198bb0 0000000000000050 t cid_slot_init
0000000000198c00 0000000000000154 t cid_face_done
0000000000198d60 000000000000016c t cid_compute_fd_and_offsets
0000000000198ed0 00000000000003a0 t cid_load_glyph
0000000000199270 00000000000003e0 t cid_slot_load_glyph
0000000000199650 000000000000003c t cid_get_cid_from_glyph_index
0000000000199690 0000000000000164 t cid_parse_font_matrix
0000000000199800 0000000000000100 t parse_fd_array
0000000000199900 000000000000000c t cid_get_interface
0000000000199910 0000000000000058 t cid_size_get_globals_funcs.isra.0
0000000000199970 0000000000000070 t cid_size_init
00000000001999e0 000000000000004c t cid_size_done
0000000000199a30 000000000000006c t cid_size_request
0000000000199aa0 0000000000000d40 t cid_face_open
000000000019a7e0 0000000000000298 t cid_face_init
000000000019aa80 0000000000000060 t pfr_cmap_init
000000000019aae0 000000000000000c t pfr_cmap_done
000000000019aaf0 0000000000000070 t pfr_cmap_char_index
000000000019ab60 00000000000000c0 t pfr_cmap_char_next
000000000019ac20 0000000000000044 t pfr_get_advance
000000000019ac70 00000000000000a8 t pfr_glyph_close_contour
000000000019ad20 00000000000001ec t pfr_face_get_kerning
000000000019af10 0000000000000228 t pfr_extra_item_load_bitmap_info
000000000019b140 0000000000000058 t pfr_slot_done
000000000019b1a0 0000000000000034 t pfr_slot_init
000000000019b1e0 0000000000000114 t pfr_extra_item_load_stem_snaps
000000000019b300 000000000000014c t pfr_extra_item_load_kerning_pairs
000000000019b450 000000000000009c t pfr_extra_item_load_font_id
000000000019b4f0 00000000000000e8 t pfr_aux_name_load
000000000019b5e0 000000000000000c t pfr_get_service
000000000019b5f0 0000000000000090 t pfr_get_metrics
000000000019b680 0000000000000080 t pfr_get_kerning
000000000019b700 00000000000000f8 t pfr_face_done
000000000019b800 000000000000008c t pfr_glyph_line_to.isra.0
000000000019b890 0000000000000a6c t pfr_glyph_load_rec
000000000019c300 0000000000000a20 t pfr_slot_load
000000000019cd20 0000000000000cb0 t pfr_face_init
000000000019d9d0 0000000000000008 t t42_get_ps_font_name
000000000019d9e0 0000000000000024 t t42_ps_get_font_info
000000000019da10 0000000000000010 t t42_ps_get_font_extra
000000000019da20 0000000000000008 t t42_ps_has_glyph_names
000000000019da30 0000000000000004 t T42_Driver_Done
000000000019da40 000000000000006c t T42_Size_Select
000000000019dab0 000000000000006c t T42_Size_Request
000000000019db20 0000000000000148 t T42_GlyphSlot_Load
000000000019dc70 000000000000000c t T42_GlyphSlot_Done
000000000019dc80 0000000000000098 t T42_GlyphSlot_Init
000000000019dd20 000000000000005c t T42_Size_Init
000000000019dd80 0000000000000138 t T42_Face_Done
000000000019dec0 000000000000004c t T42_Driver_Init
000000000019df10 0000000000000510 t t42_parse_charstrings
000000000019e420 00000000000000ac t t42_get_name_index
000000000019e4d0 00000000000004ec t t42_parse_sfnts
000000000019e9c0 0000000000000120 t t42_parse_font_matrix
000000000019eae0 000000000000000c t T42_Get_Interface
000000000019eaf0 0000000000000028 t t42_get_glyph_name
000000000019eb20 0000000000000040 t T42_Size_Done
000000000019eb60 0000000000000a3c t T42_Face_Init
000000000019f5a0 0000000000000478 t t42_parse_encoding
000000000019fa20 000000000000002c t fnt_cmap_init
000000000019fa50 0000000000000014 t fnt_cmap_char_index
000000000019fa70 0000000000000050 t fnt_cmap_char_next
000000000019fac0 0000000000000048 t winfnt_get_header
000000000019fb10 0000000000000058 t FNT_Size_Select
000000000019fb70 0000000000000250 t FNT_Load_Glyph
000000000019fdc0 0000000000000064 t fnt_font_done
000000000019fe30 00000000000000d4 t fnt_font_load
000000000019ff10 000000000000000c t winfnt_get_service
000000000019ff20 0000000000000aa0 t FNT_Face_Init
00000000001a09c0 0000000000000040 t FNT_Face_Done
00000000001a0a00 0000000000000100 t FNT_Size_Request
00000000001a0b00 0000000000000018 t pcf_cmap_init
00000000001a0b20 0000000000000008 t pcf_cmap_done
00000000001a0b30 0000000000000058 t pcf_cmap_char_index
00000000001a0b90 00000000000000c0 t pcf_cmap_char_next
00000000001a0c50 000000000000001c t pcf_get_charset_id
00000000001a0c70 0000000000000008 t pcf_property_set
00000000001a0c80 0000000000000008 t pcf_property_get
00000000001a0c90 0000000000000008 t pcf_driver_init
00000000001a0ca0 0000000000000004 t pcf_driver_done
00000000001a0cb0 000000000000004c t PCF_Size_Select
00000000001a0d00 00000000000002a8 t PCF_Glyph_Load
00000000001a0fb0 000000000000000c t pcf_driver_requester
00000000001a0fc0 0000000000000168 t PCF_Face_Done.part.0
00000000001a1130 000000000000000c t PCF_Face_Done
00000000001a1140 0000000000000090 t pcf_find_property.isra.0
00000000001a11d0 0000000000000070 t pcf_get_bdf_property
00000000001a1240 00000000000000f0 t PCF_Size_Request
00000000001a1330 0000000000000230 t pcf_get_accel
00000000001a1560 0000000000001494 t pcf_load_font
00000000001a2a00 0000000000000270 t PCF_Face_Init
00000000001a2c70 00000000000000b8 t bdf_atol_
00000000001a2d30 00000000000000c0 t bdf_atos_
00000000001a2df0 0000000000000018 t by_encoding
00000000001a2e10 0000000000000008 t bdf_parse_end_
00000000001a2e20 000000000000001c t bdf_cmap_init
00000000001a2e40 0000000000000008 t bdf_cmap_done
00000000001a2e50 0000000000000078 t bdf_cmap_char_index
00000000001a2ed0 00000000000000c8 t bdf_cmap_char_next
00000000001a2fa0 000000000000001c t bdf_get_charset_id
00000000001a2fc0 0000000000000048 t BDF_Size_Select
00000000001a3010 0000000000000148 t BDF_Glyph_Load
00000000001a3160 000000000000009c t bdf_list_ensure_
00000000001a3200 0000000000000088 t bdf_add_comment_
00000000001a3290 000000000000000c t bdf_driver_requester
00000000001a32a0 0000000000000088 t bdf_atoul_
00000000001a3330 0000000000000088 t bdf_atous_
00000000001a33c0 00000000000001cc t bdf_free_font.part.0
00000000001a3590 00000000000000a4 t BDF_Face_Done
00000000001a3640 0000000000000258 t bdf_list_split_.part.0
00000000001a38a0 00000000000000a4 t bdf_list_join_.constprop.0
00000000001a3950 0000000000000058 t bdf_list_shift_.constprop.0
00000000001a39b0 000000000000053c t bdf_add_property_.isra.0
00000000001a3ef0 00000000000000f0 t BDF_Size_Request
00000000001a3fe0 00000000000000b0 t bdf_get_bdf_property
00000000001a4090 00000000000003c4 t bdf_parse_properties_
00000000001a4460 0000000000001010 t BDF_Face_Init
00000000001a5470 00000000000008a0 t bdf_parse_start_
00000000001a5d10 0000000000000c64 t bdf_parse_glyphs_
00000000001a6980 0000000000000098 t premultiply_data
00000000001a6a20 0000000000000048 t convert_bytes_to_data
00000000001a6a70 0000000000000004 t warning_callback
00000000001a6a80 0000000000000094 t get_sfnt_table
00000000001a6b20 0000000000000060 t sfnt_table_info
00000000001a6b80 0000000000000034 t sfnt_is_postscript
00000000001a6bc0 0000000000000028 t sfnt_is_alphanumeric
00000000001a6bf0 00000000000000d4 t sfnt_get_name_id
00000000001a6cd0 0000000000000020 t compare_offsets
00000000001a6cf0 0000000000000010 t tt_cmap_init
00000000001a6d00 0000000000000020 t tt_cmap0_char_index
00000000001a6d20 0000000000000044 t tt_cmap0_char_next
00000000001a6d70 0000000000000020 t tt_cmap0_get_info
00000000001a6d90 0000000000000058 t tt_cmap2_get_subheader
00000000001a6df0 000000000000008c t tt_cmap2_char_index
00000000001a6e80 00000000000001ac t tt_cmap2_char_next
00000000001a7030 0000000000000024 t tt_cmap2_get_info
00000000001a7060 0000000000000028 t tt_cmap4_init
00000000001a7090 0000000000000114 t tt_cmap4_set_range
00000000001a71b0 0000000000000154 t tt_cmap4_next
00000000001a7310 0000000000000234 t tt_cmap4_char_map_linear
00000000001a7550 00000000000005a4 t tt_cmap4_char_map_binary
00000000001a7b00 0000000000000050 t tt_cmap4_char_index
00000000001a7b50 0000000000000080 t tt_cmap4_char_next
00000000001a7bd0 0000000000000024 t tt_cmap4_get_info
00000000001a7c00 0000000000000040 t tt_cmap6_char_index
00000000001a7c40 00000000000000a4 t tt_cmap6_char_next
00000000001a7cf0 0000000000000024 t tt_cmap6_get_info
00000000001a7d20 000000000000008c t tt_cmap8_char_index
00000000001a7db0 0000000000000128 t tt_cmap8_char_next
00000000001a7ee0 0000000000000020 t tt_cmap8_get_info
00000000001a7f00 000000000000004c t tt_cmap10_char_index
00000000001a7f50 000000000000008c t tt_cmap10_char_next
00000000001a7fe0 0000000000000020 t tt_cmap10_get_info
00000000001a8000 0000000000000020 t tt_cmap12_init
00000000001a8020 00000000000000e8 t tt_cmap12_next
00000000001a8110 0000000000000140 t tt_cmap12_char_map_binary
00000000001a8250 0000000000000020 t tt_cmap12_char_index
00000000001a8270 0000000000000020 t tt_cmap12_get_info
00000000001a8290 0000000000000020 t tt_cmap13_init
00000000001a82b0 0000000000000084 t tt_cmap13_next
00000000001a8340 0000000000000124 t tt_cmap13_char_map_binary
00000000001a8470 0000000000000020 t tt_cmap13_char_index
00000000001a8490 0000000000000020 t tt_cmap13_get_info
00000000001a84b0 0000000000000024 t tt_cmap14_init
00000000001a84e0 0000000000000008 t tt_cmap14_char_index
00000000001a84f0 000000000000000c t tt_cmap14_char_next
00000000001a8500 0000000000000014 t tt_cmap14_get_info
00000000001a8520 0000000000000074 t tt_cmap14_char_map_def_binary
00000000001a85a0 0000000000000074 t tt_cmap14_char_map_nondef_binary
00000000001a8620 0000000000000070 t tt_cmap14_find_variant
00000000001a8690 000000000000007c t tt_cmap14_char_var_index
00000000001a8710 0000000000000084 t tt_cmap14_char_var_isdefault
00000000001a87a0 0000000000000038 t tt_cmap_unicode_init
00000000001a87e0 0000000000000014 t tt_cmap_unicode_char_index
00000000001a8800 0000000000000014 t tt_cmap_unicode_char_next
00000000001a8820 000000000000001c t tt_get_cmap_info
00000000001a8840 0000000000000144 t tt_face_get_colr_layer
00000000001a8990 000000000000007c t get_child_table_pointer
00000000001a8a10 00000000000000ec t get_deltas_for_var_index_base
00000000001a8b00 00000000000000d4 t tt_face_get_colr_glyph_paint
00000000001a8be0 00000000000000a8 t tt_face_get_paint_layers
00000000001a8c90 00000000000000a0 t tt_face_palette_set
00000000001a8d30 000000000000002c t extract_svg_doc
00000000001a8d60 0000000000000188 t tt_face_get_kerning
00000000001a8ef0 00000000000000a8 t tt_sbit_decoder_load_metrics
00000000001a8fa0 00000000000001ec t tt_sbit_decoder_load_byte_aligned
00000000001a9190 000000000000022c t tt_sbit_decoder_load_bit_aligned
00000000001a93c0 000000000000000c t sfnt_get_interface
00000000001a93d0 00000000000001b0 t tt_face_load_kern
00000000001a9580 0000000000000030 t tt_face_free_sbit
00000000001a95b0 00000000000001fc t tt_face_get_metrics
00000000001a97b0 00000000000000a0 t tt_name_ascii_from_other
00000000001a9850 00000000000000b8 t tt_name_ascii_from_utf16
00000000001a9910 0000000000000040 t tt_face_free_svg
00000000001a9950 0000000000000288 t tt_face_get_name
00000000001a9be0 000000000000007c t tt_face_free_colr
00000000001a9c60 0000000000000040 t tt_face_free_cpal
00000000001a9ca0 0000000000000084 t tt_face_free_ps_names
00000000001a9d30 00000000000000e4 t tt_face_free_name
00000000001a9e20 000000000000020c t sfnt_done_face
00000000001aa030 0000000000000030 t sfnt_stream_close
00000000001aa060 0000000000000038 t tt_cmap14_done
00000000001aa0a0 0000000000000034 t tt_cmap_unicode_done
00000000001aa0e0 00000000000002b0 t tt_face_load_svg_doc
00000000001aa390 0000000000000154 t tt_face_load_svg
00000000001aa4f0 00000000000003bc t tt_face_colr_blend_layer
00000000001aa8b0 00000000000003b8 t tt_face_load_colr
00000000001aac70 0000000000000080 t tt_face_load_hmtx
00000000001aacf0 00000000000003c4 t tt_face_load_cpal
00000000001ab0c0 00000000000002a4 t tt_face_load_strike_metrics
00000000001ab370 0000000000000164 t tt_face_load_gasp
00000000001ab4e0 000000000000000c t tt_face_set_sbit_strike
00000000001ab4f0 00000000000003f4 t tt_face_load_sbit
00000000001ab8f0 0000000000000058 t tt_face_load_pclt
00000000001ab950 0000000000000398 t tt_face_load_name
00000000001abcf0 00000000000000e0 t tt_face_load_maxp
00000000001abdd0 0000000000000098 t tt_face_load_hhea
00000000001abe70 0000000000000430 t Load_SBit_Png
00000000001ac2a0 000000000000007c t tt_sbit_decoder_load_png
00000000001ac320 000000000000003c t error_callback
00000000001ac360 00000000000000b8 t tt_cmap0_validate
00000000001ac420 000000000000024c t tt_cmap2_validate
00000000001ac670 00000000000004fc t tt_cmap4_validate
00000000001acb70 00000000000000e4 t tt_cmap6_validate
00000000001acc60 0000000000000298 t tt_cmap8_validate
00000000001acf00 00000000000000e8 t tt_cmap10_validate
00000000001acff0 0000000000000168 t tt_cmap12_validate
00000000001ad160 0000000000000158 t tt_cmap13_validate
00000000001ad2c0 000000000000036c t tt_cmap14_validate
00000000001ad630 0000000000000070 t tt_cmap12_char_next
00000000001ad6a0 0000000000000070 t tt_cmap13_char_next
00000000001ad710 0000000000000060 t tt_face_load_cmap
00000000001ad770 0000000000000470 t tt_face_get_ps_name.part.0
00000000001adbe0 0000000000000024 t tt_face_get_ps_name
00000000001adc10 0000000000000058 t tt_face_load_bhed
00000000001adc70 0000000000000084 t tt_face_load_post
00000000001add00 00000000000000fc t tt_face_load_os2
00000000001ade00 0000000000000074 t read_data_from_FT_Stream
00000000001ade80 00000000000003f0 t tt_face_load_font_dir
00000000001ae270 000000000000027c t tt_face_build_cmaps.isra.0
00000000001ae4f0 0000000000000ef0 t sfnt_init_face
00000000001af3e0 000000000000012c t get_apple_string.isra.0
00000000001af510 0000000000000144 t get_win_string.isra.0
00000000001af660 0000000000000a60 t sfnt_get_ps_name
00000000001b00c0 0000000000000058 t tt_face_load_head
00000000001b0120 00000000000000cc t sfnt_get_name_index
00000000001b01f0 0000000000000048 t tt_get_glyph_name
00000000001b0240 0000000000000088 t sfnt_get_glyph_name
00000000001b02d0 0000000000000058 t tt_face_goto_table
00000000001b0330 0000000000000090 t sfnt_load_table
00000000001b03c0 0000000000000090 t tt_face_load_any
00000000001b0450 000000000000032c t tt_face_find_bdf_prop
00000000001b0780 0000000000000098 t sfnt_get_charset_id
00000000001b0820 00000000000000e4 t tt_cmap14_variants
00000000001b0910 00000000000000f4 t tt_cmap14_get_nondef_chars
00000000001b0a10 0000000000000158 t tt_cmap14_get_def_chars
00000000001b0b70 00000000000003b0 t tt_cmap14_variant_chars
00000000001b0f20 0000000000000140 t tt_cmap14_char_variants
00000000001b1060 0000000000000688 t tt_sbit_decoder_load_image
00000000001b16f0 0000000000000160 t tt_sbit_decoder_load_compound
00000000001b1850 0000000000000544 t tt_face_load_sbit_image
00000000001b1da0 0000000000000c58 t sfnt_load_face
00000000001b2a00 00000000000001cc t tt_face_get_colorline_stops
00000000001b2bd0 0000000000000364 t tt_face_get_color_glyph_clipbox
00000000001b2f40 0000000000000f70 t tt_face_get_paint
00000000001b3eb0 000000000000001c t af_cjk_get_standard_widths
00000000001b3ed0 000000000000007c t af_cjk_hints_init
00000000001b3f50 0000000000000078 t af_cjk_snap_width
00000000001b3f50 0000000000000078 t af_latin_snap_width
00000000001b3fd0 000000000000002c t af_dummy_hints_init
00000000001b4000 0000000000000300 t af_sort_and_quantize_widths
00000000001b4300 000000000000001c t af_latin_get_standard_widths
00000000001b4320 00000000000001a4 t af_latin_hints_link_segments
00000000001b44d0 0000000000000080 t af_latin_hints_init
00000000001b4550 0000000000000044 t af_autofitter_init
00000000001b45a0 0000000000000004 t af_autofitter_done
00000000001b45b0 000000000000019c t af_cjk_hints_compute_blue_edges
00000000001b4750 0000000000000780 t af_glyph_hints_reload
00000000001b4ed0 00000000000007a8 t af_latin_hints_compute_segments
00000000001b5680 00000000000001d0 t af_axis_hints_new_edge
00000000001b5850 0000000000000260 t af_glyph_hints_align_strong_points
00000000001b5ab0 00000000000001b0 t af_cjk_metrics_scale_dim
00000000001b5c60 0000000000000048 t af_cjk_metrics_scale
00000000001b5cb0 000000000000044c t af_latin_hints_compute_edges
00000000001b6100 00000000000003d8 t af_latin_metrics_scale_dim
00000000001b64e0 0000000000000044 t af_latin_metrics_scale
00000000001b6530 00000000000000f0 t af_glyph_hints_done
00000000001b6620 00000000000000a0 t af_face_globals_free
00000000001b66c0 000000000000000c t af_get_interface
00000000001b66d0 0000000000000700 t af_cjk_hints_detect_features
00000000001b6dd0 0000000000000110 t af_iup_interp.part.0
00000000001b6ee0 00000000000002a0 t af_glyph_hints_align_weak_points
00000000001b7180 00000000000003bc t af_face_globals_new
00000000001b7540 00000000000002b8 t af_property_set
00000000001b7800 0000000000000278 t af_loader_compute_darkening.isra.0
00000000001b7a80 000000000000084c t af_autofitter_load_glyph
00000000001b82d0 0000000000000240 t af_latin_compute_stem_width.isra.0
00000000001b8510 0000000000000044 t af_glyph_hints_save.isra.0
00000000001b8560 0000000000000058 t af_dummy_hints_apply
00000000001b85c0 0000000000000194 t af_cjk_compute_stem_width.isra.0
00000000001b8760 000000000000025c t af_hint_normal_stem
00000000001b89c0 000000000000001c t af_indic_get_standard_widths
00000000001b89e0 0000000000000048 t af_indic_metrics_scale
00000000001b8a30 00000000000007d8 t af_cjk_hints_apply
00000000001b9210 0000000000000004 t af_indic_hints_apply
00000000001b9220 0000000000000bd4 t af_latin_hints_apply
00000000001b9e00 000000000000007c t af_indic_hints_init
00000000001b9e80 00000000000001b8 t af_property_get
00000000001ba040 0000000000000154 t af_shaper_get_cluster
00000000001ba1a0 00000000000002dc t af_cjk_metrics_init_widths
00000000001ba480 00000000000004bc t af_cjk_metrics_init_blues
00000000001ba940 00000000000002f4 t af_latin_metrics_init_widths
00000000001bac40 0000000000000ac4 t af_latin_metrics_init_blues
00000000001bb710 000000000000014c t af_latin_metrics_init
00000000001bb860 0000000000000104 t af_cjk_metrics_check_digits.isra.0
00000000001bb970 000000000000007c t af_indic_metrics_init
00000000001bb9f0 0000000000000088 t af_cjk_metrics_init
00000000001bba80 00000000000000a8 t psh_hint_table_record
00000000001bbb30 0000000000000008 t pshinter_get_globals_funcs
00000000001bbb40 0000000000000008 t pshinter_get_t1_funcs
00000000001bbb50 0000000000000008 t pshinter_get_t2_funcs
00000000001bbb60 0000000000000028 t t1_hints_open
00000000001bbb90 0000000000000028 t t2_hints_open
00000000001bbbc0 00000000000000cc t psh_globals_scale_widths
00000000001bbc90 00000000000002b8 t psh_globals_set_scale
00000000001bbf50 00000000000000d0 t ps_hinter_init
00000000001bc020 0000000000000078 t ps_mask_table_done
00000000001bc0a0 00000000000000dc t ps_mask_table_alloc
00000000001bc180 000000000000008c t ps_mask_ensure
00000000001bc210 000000000000002c t psh_globals_destroy
00000000001bc240 0000000000000458 t psh_hint_align
00000000001bc6a0 00000000000001f0 t ps_mask_table_merge_all
00000000001bc890 0000000000000138 t psh_blues_set_zones_0.isra.0
00000000001bc9d0 00000000000001ec t psh_blues_set_zones
00000000001bcbc0 00000000000002c0 t psh_hint_table_find_strong_points.isra.0
00000000001bce80 000000000000021c t psh_hint_table_init.isra.0
00000000001bd0a0 0000000000000128 t psh_hint_table_activate_mask.isra.0
00000000001bd1d0 0000000000000084 t ps_hints_close.part.0
00000000001bd260 0000000000000014 t t1_hints_close
00000000001bd280 0000000000000088 t ps_hinter_done
00000000001bd310 0000000000000014 t t2_hints_close
00000000001bd330 0000000000000140 t ps_dimension_set_mask_bits
00000000001bd470 00000000000000ac t ps_hints_t2counter
00000000001bd520 00000000000000ac t ps_hints_t2mask
00000000001bd5d0 00000000000000b0 t ps_hints_t1reset
00000000001bd680 000000000000120c t ps_hints_apply.part.0
00000000001be890 000000000000001c t t1_hints_apply
00000000001be8b0 000000000000001c t t2_hints_apply
00000000001be8d0 0000000000000274 t psh_globals_new
00000000001beb50 00000000000001cc t ps_dimension_add_t1stem
00000000001bed20 000000000000007c t t1_hints_stem
00000000001beda0 0000000000000124 t t2_hints_stems
00000000001beed0 0000000000000284 t ps_hints_t1stem3
00000000001bf160 0000000000000004 t gray_raster_reset
00000000001bf170 0000000000000008 t gray_raster_set_mode
00000000001bf180 0000000000000018 t ft_smooth_set_mode
00000000001bf1a0 0000000000000048 t ft_smooth_init
00000000001bf1f0 0000000000000070 t ft_smooth_lcd_spans
00000000001bf260 0000000000000094 t ft_smooth_overlap_spans
00000000001bf300 000000000000000c t gray_raster_done
00000000001bf310 0000000000000084 t gray_convert_glyph_inner
00000000001bf3a0 00000000000000b8 t gray_set_cell
00000000001bf460 0000000000000304 t gray_render_line
00000000001bf770 000000000000002c t gray_line_to
00000000001bf7a0 000000000000004c t gray_move_to
00000000001bf7f0 0000000000000650 t gray_convert_glyph
00000000001bfe40 0000000000000144 t gray_raster_render
00000000001bff90 0000000000000040 t gray_raster_new
00000000001bffd0 000000000000002c t ft_smooth_get_cbox
00000000001c0000 0000000000000620 t ft_smooth_render
00000000001c0620 0000000000000064 t ft_smooth_transform
00000000001c0690 0000000000000210 t gray_render_cubic.isra.0
00000000001c08a0 000000000000002c t gray_cubic_to
00000000001c08d0 00000000000001a4 t gray_conic_to
00000000001c0a80 00000000000000b0 t New_Profile
00000000001c0b30 00000000000000a4 t End_Profile
00000000001c0be0 00000000000000bc t Insert_Y_Turn
00000000001c0ca0 0000000000000030 t Split_Conic
00000000001c0cd0 000000000000009c t Split_Cubic
00000000001c0d70 000000000000020c t Bezier_Up
00000000001c0f80 000000000000021c t Conic_To
00000000001c11a0 000000000000009c t Sort
00000000001c1240 000000000000001c t Vertical_Sweep_Init
00000000001c1260 0000000000000148 t Vertical_Sweep_Span
00000000001c13b0 0000000000000248 t Vertical_Sweep_Drop
00000000001c1600 0000000000000014 t Vertical_Sweep_Step
00000000001c1620 0000000000000004 t Horizontal_Sweep_Init
00000000001c1630 00000000000000cc t Horizontal_Sweep_Span
00000000001c1700 0000000000000268 t Horizontal_Sweep_Drop
00000000001c1970 0000000000000004 t Horizontal_Sweep_Step
00000000001c1980 0000000000000004 t ft_black_reset
00000000001c1990 0000000000000008 t ft_black_set_mode
00000000001c19a0 0000000000000030 t ft_raster1_init
00000000001c19d0 0000000000000018 t ft_raster1_set_mode
00000000001c19f0 000000000000000c t ft_black_done
00000000001c1a00 0000000000000254 t Line_Up
00000000001c1c60 0000000000000248 t Line_To
00000000001c1eb0 0000000000000040 t ft_black_new
00000000001c1ef0 000000000000002c t ft_raster1_get_cbox
00000000001c1f20 00000000000001c4 t ft_raster1_render
00000000001c20f0 0000000000000064 t ft_raster1_transform
00000000001c2160 0000000000000260 t Cubic_To
00000000001c23c0 0000000000000ae0 t Render_Single_Pass.constprop.0
00000000001c2ea0 0000000000000218 t ft_black_render
00000000001c30c0 0000000000000010 t ft_svg_init
00000000001c30d0 0000000000000038 t ft_svg_done
00000000001c3110 0000000000000080 t ft_svg_preset_slot
00000000001c3190 00000000000000e8 t ft_svg_transform
00000000001c3280 000000000000000c t ft_svg_get_interface
00000000001c3290 0000000000000050 t ft_svg_property_get
00000000001c32e0 00000000000000a4 t ft_svg_property_set
00000000001c3390 0000000000000128 t ft_svg_render
00000000001c34c0 000000000000001c t ft_sdf_init
00000000001c34e0 0000000000000004 t ft_sdf_done
00000000001c34f0 0000000000000018 t ft_sdf_set_mode
00000000001c3510 0000000000000004 t bsdf_raster_reset
00000000001c3520 0000000000000008 t bsdf_raster_set_mode
00000000001c3530 0000000000000118 t split_cubic
00000000001c3650 000000000000002c t ft_sdf_get_cbox
00000000001c3680 000000000000000c t bsdf_raster_done
00000000001c3690 000000000000000c t sdf_raster_done
00000000001c36a0 00000000000002a0 t ft_sdf_render
00000000001c3940 000000000000000c t ft_sdf_requester
00000000001c3950 00000000000000b4 t sdf_property_get
00000000001c3a10 00000000000000e0 t sdf_property_set
00000000001c3af0 00000000000001fc t ft_bsdf_render
00000000001c3cf0 0000000000000090 t compare_neighbor
00000000001c3d80 0000000000000078 t map_fixed_to_sdf
00000000001c3e00 0000000000000040 t bsdf_raster_new
00000000001c3e40 0000000000000040 t sdf_raster_new
00000000001c3e80 0000000000000068 t sdf_edge_new
00000000001c3ef0 00000000000000ac t sdf_cubic_to
00000000001c3fa0 00000000000000a4 t sdf_line_to
00000000001c4050 00000000000000fc t sdf_conic_to
00000000001c4150 0000000000000164 t split_sdf_conic
00000000001c42c0 0000000000000188 t split_sdf_cubic
00000000001c4450 0000000000000064 t ft_sdf_transform
00000000001c44c0 0000000000000068 t sdf_contour_done
00000000001c4530 00000000000001f0 t split_sdf_shape
00000000001c4720 0000000000000008 t sdf_raster_set_mode
00000000001c4730 0000000000000004 t sdf_raster_reset
00000000001c4740 0000000000000f10 t sdf_generate_bounding_box.isra.0
00000000001c5650 00000000000006f8 t sdf_raster_render
00000000001c5d50 000000000000007c t sdf_move_to
00000000001c5dd0 0000000000000bc8 t bsdf_raster_render
00000000001c69a0 0000000000000004 t ft_gzip_free
00000000001c69b0 0000000000000130 t ft_gzip_check_header
00000000001c6ae0 0000000000000020 t ft_gzip_alloc
00000000001c6b00 000000000000012c t ft_gzip_file_fill_output
00000000001c6c30 000000000000016c t ft_gzip_file_io
00000000001c6da0 0000000000000008 t ft_gzip_stream_io
00000000001c6db0 0000000000000090 t ft_gzip_stream_close
00000000001c6e40 00000000000002d0 T FT_Stream_OpenGzip
00000000001c7110 0000000000000114 T FT_Gzip_Uncompress
00000000001c7230 0000000000000064 t ft_lzw_check_header
00000000001c72a0 00000000000001c8 t ft_lzwstate_get_code
00000000001c7470 00000000000000e8 t ft_lzwstate_stack_grow
00000000001c7560 0000000000000174 T FT_Stream_OpenLZW
00000000001c76e0 0000000000000088 t ft_lzwstate_done
00000000001c7770 0000000000000050 t ft_lzw_stream_close
00000000001c77c0 00000000000003d8 t ft_lzwstate_io
00000000001c7ba0 00000000000001dc t ft_lzw_stream_io
00000000001c7d80 0000000000000020 t ft_bzip2_alloc
00000000001c7da0 0000000000000004 t ft_bzip2_free
00000000001c7db0 0000000000000068 t ft_bzip2_stream_close
00000000001c7e20 0000000000000134 t ft_bzip2_file_fill_output
00000000001c7f60 000000000000018c t ft_bzip2_stream_io
00000000001c80f0 0000000000000070 t ft_bzip2_check_header
00000000001c8160 0000000000000194 T FT_Stream_OpenBzip2
00000000001c8300 0000000000000020 t afm_compare_kern_pairs
00000000001c8320 0000000000000130 t PS_Conv_Strtol
00000000001c8450 0000000000000090 t PS_Conv_ToInt
00000000001c84e0 0000000000000084 t skip_spaces
00000000001c8570 0000000000000108 t skip_literal_string
00000000001c8680 0000000000000098 t skip_string
00000000001c8720 0000000000000008 t ps_parser_skip_spaces
00000000001c8730 0000000000000018 t ps_parser_to_int
00000000001c8750 0000000000000160 t ps_parser_to_bytes
00000000001c88b0 0000000000000040 t ps_parser_init
00000000001c88f0 0000000000000004 t ps_parser_done
00000000001c8900 0000000000000024 t t1_builder_done
00000000001c8930 000000000000012c t t1_builder_close_contour
00000000001c8a60 0000000000000024 t cff_builder_done
00000000001c8a90 0000000000000050 t cff_builder_add_point
00000000001c8ae0 000000000000012c t cff_builder_close_contour
00000000001c8c10 0000000000000024 t ps_builder_done
00000000001c8c40 0000000000000010 t cff_random
00000000001c8c50 0000000000000010 t t1_cmap_std_done
00000000001c8c60 000000000000002c t t1_cmap_standard_init
00000000001c8c90 0000000000000030 t t1_cmap_expert_init
00000000001c8cc0 0000000000000028 t t1_cmap_custom_init
00000000001c8cf0 0000000000000008 t t1_cmap_custom_done
00000000001c8d00 0000000000000034 t t1_cmap_custom_char_index
00000000001c8d40 0000000000000064 t t1_cmap_custom_char_next
00000000001c8db0 000000000000000c t psaux_get_glyph_name
00000000001c8dc0 0000000000000038 t t1_cmap_unicode_init
00000000001c8e00 0000000000000014 t t1_cmap_unicode_char_index
00000000001c8e20 0000000000000014 t t1_cmap_unicode_char_next
00000000001c8e40 000000000000006c t cf2_stack_popInt
00000000001c8eb0 0000000000000064 t cf2_stack_popFixed
00000000001c8f20 000000000000006c t cf2_stack_getReal
00000000001c8f90 0000000000000074 t ps_table_release
00000000001c9010 0000000000000028 t afm_parser_done
00000000001c9040 0000000000000034 t t1_cmap_unicode_done
00000000001c9080 00000000000000a8 t ps_table_realloc
00000000001c9130 0000000000000008 t ps_table_done
00000000001c9140 00000000000000e4 t ps_table_new
00000000001c9230 00000000000000b0 t t1_builder_add_point
00000000001c92e0 00000000000000e4 t cf2_arrstack_setNumElements
00000000001c93d0 0000000000000068 t cf2_arrstack_push
00000000001c9440 0000000000000114 t cf2_doStems
00000000001c9560 00000000000003b0 t PS_Conv_ToFixed
00000000001c9910 00000000000001b8 t ps_tofixedarray
00000000001c9ad0 0000000000000030 t ps_parser_to_fixed_array
00000000001c9b00 000000000000013c t ps_parser_to_coord_array
00000000001c9c40 0000000000000020 t ps_parser_to_fixed
00000000001c9c60 00000000000000b4 t ps_builder_init
00000000001c9d20 00000000000000e4 t cf2_getSeacComponent
00000000001c9e10 000000000000021c t t1_make_subfont
00000000001ca030 00000000000000b0 t t1_builder_add_contour
00000000001ca0e0 00000000000000a8 t cff_builder_add_contour
00000000001ca190 00000000000000b4 t t1_builder_init
00000000001ca250 00000000000000c0 t cff_builder_init
00000000001ca310 0000000000000064 t afm_parser_init
00000000001ca380 0000000000000110 t cf2_hintmap_map
00000000001ca490 00000000000000e0 t cf2_glyphpath_hintPoint
00000000001ca570 000000000000032c t cf2_hintmap_insertHint
00000000001ca8a0 00000000000001b4 t cf2_glyphpath_computeOffset
00000000001caa60 0000000000000378 t t1_decoder_parse_metrics
00000000001cade0 00000000000000a0 t t1_lookup_glyph_by_stdcharcode_ps
00000000001cae80 0000000000000098 t t1_cmap_std_char_index
00000000001caf20 0000000000000078 t t1_cmap_std_char_next
00000000001cafa0 00000000000000e0 t t1_decoder_init
00000000001cb080 00000000000000cc t afm_tokenize
00000000001cb150 00000000000000f8 t cff_decoder_prepare
00000000001cb250 0000000000000048 t cf2_free_instance
00000000001cb2a0 0000000000000110 t ps_table_add
00000000001cb3b0 00000000000004d0 t cf2_glyphpath_pushPrevElem
00000000001cb880 000000000000022c t cf2_computeDarkening.part.0.constprop.0
00000000001cbab0 00000000000000b0 t ps_builder_add_contour.constprop.0
00000000001cbb60 0000000000000034 t cff_check_points
00000000001cbba0 000000000000002c t ps_builder_check_points.part.0.isra.0
00000000001cbbd0 0000000000000034 t t1_builder_check_points
00000000001cbc10 0000000000000040 t cf2_stack_pushFixed
00000000001cbc50 000000000000006c t afm_stream_skip_spaces.part.0.isra.0
00000000001cbcc0 0000000000000038 t cf2_freeT1SeacComponent.isra.0
00000000001cbd00 0000000000000074 t cf2_getT1SeacComponent.isra.0
00000000001cbd80 0000000000000128 t ps_builder_close_contour.isra.0
00000000001cbeb0 0000000000000020 t cf2_builder_moveTo
00000000001cbed0 0000000000000064 t t1_decrypt
00000000001cbf40 00000000000000b8 t afm_stream_read_one
00000000001cc000 00000000000000d4 t cff_decoder_init
00000000001cc0e0 00000000000000e4 t afm_stream_read_string
00000000001cc1d0 0000000000000188 t afm_parser_read_vals
00000000001cc360 0000000000000064 t afm_parser_next_key.constprop.0.isra.0
00000000001cc3d0 0000000000000154 t skip_procedure
00000000001cc530 00000000000001ec t ps_parser_skip_PS_token
00000000001cc720 000000000000019c t ps_parser_to_token
00000000001cc8c0 0000000000000120 t ps_parser_to_token_array
00000000001cc9e0 00000000000004c4 t ps_parser_load_field
00000000001cceb0 0000000000000150 t ps_parser_load_field_table
00000000001cd000 0000000000000084 t t1_builder_add_point1
00000000001cd090 000000000000006c t t1_builder_start_point
00000000001cd100 0000000000000044 t cf2_stack_setReal
00000000001cd150 0000000000000044 t cf2_stack_pushInt
00000000001cd1a0 0000000000000060 t t1_decoder_done
00000000001cd200 00000000000000a4 t cf2_hintmask_read
00000000001cd2b0 00000000000000b4 t cff_builder_add_point1
00000000001cd370 0000000000000068 t cff_builder_start_point
00000000001cd3e0 0000000000000154 t cf2_hint_init
00000000001cd540 00000000000009d0 t cf2_hintmap_build
00000000001cdf10 0000000000000168 t ps_decoder_init
00000000001ce080 00000000000001d0 t cf2_builder_cubeTo
00000000001ce250 00000000000000f4 t cf2_glyphpath_moveTo
00000000001ce350 00000000000000a0 t cf2_glyphpath_pushMove
00000000001ce3f0 0000000000000180 t cf2_glyphpath_lineTo
00000000001ce570 00000000000001dc t cf2_glyphpath_curveTo
00000000001ce750 00000000000001ac t cf2_doFlex
00000000001ce900 000000000000015c t cf2_builder_lineTo
00000000001cea60 0000000000000738 t afm_parser_parse
00000000001cf1a0 0000000000002e58 t cf2_interpT2CharString
00000000001d2000 0000000000000b1c t cf2_decoder_parse_charstrings
00000000001d2b20 0000000000000244 t ps_unicode_value
00000000001d2d70 0000000000000034 t compare_uni_maps
00000000001d2db0 00000000000000ac t ps_unicodes_char_index
00000000001d2e60 00000000000000d0 t ps_unicodes_char_next
00000000001d2f30 0000000000000028 t ps_get_macintosh_name
00000000001d2f60 000000000000002c t ps_get_standard_strings
00000000001d2f90 000000000000000c t psnames_get_service
00000000001d2fa0 0000000000000294 t ps_unicodes_init
00000000001d3240 000000000000002c t ft_ansi_stream_close
00000000001d3270 00000000000000d0 t ft_ansi_stream_io
00000000001d3340 0000000000000008 t ft_alloc
00000000001d3350 0000000000000008 t ft_free
00000000001d3360 000000000000000c t ft_realloc
00000000001d3370 00000000000000c8 t FT_Stream_Open
00000000001d3440 000000000000003c t FT_New_Memory
00000000001d3480 0000000000000004 t FT_Done_Memory
00000000001d3490 0000000000000004 t FT_Trace_Disable
00000000001d34a0 0000000000000004 t FT_Trace_Enable
00000000001d34b0 0000000000000014 T FT_Bitmap_Init
00000000001d34d0 0000000000000014 T FT_Bitmap_New
00000000001d34f0 00000000000001c4 T FT_Bitmap_Copy
00000000001d36c0 0000000000000058 T FT_Bitmap_Done
00000000001d3720 00000000000004b4 T FT_Bitmap_Convert
00000000001d3be0 00000000000000b8 t ft_face_get_mm_service
00000000001d3ca0 00000000000000a0 t ft_face_get_mvar_service.constprop.0.isra.0
00000000001d3d40 00000000000000c0 T FT_Get_MM_Var
00000000001d3e00 0000000000000028 T FT_Done_MM_Var
00000000001d3e30 00000000000000c8 T FT_Get_Var_Blend_Coordinates
00000000001d3f00 0000000000000104 T FT_Set_Named_Instance
00000000001d4010 0000000000000038 T eglGetError
00000000001d4050 00000000000000e4 t _eglSetFuncName
00000000001d4140 0000000000000038 T eglQueryAPI
00000000001d4180 00000000000000f8 t _eglWaitClientCommon
00000000001d4280 000000000000003c T eglGetCurrentDisplay
00000000001d42c0 0000000000000044 T eglGetCurrentContext
00000000001d4310 0000000000000008 t _eglFunctionCompare
00000000001d4320 00000000000000e4 t _eglConvertIntsToAttribs
00000000001d4410 0000000000000084 t _eglConvertAttribsToInt.part.0
00000000001d44a0 0000000000000068 t _eglAppendExtension.isra.0
00000000001d4510 00000000000000d8 t _eglGetSyncAttribCommon
00000000001d45f0 00000000000000f4 t _eglDestroySync
00000000001d46f0 0000000000000148 t _eglDestroyImageCommon
00000000001d4840 000000000000013c t _eglClientWaitSyncCommon
00000000001d4980 0000000000000138 t _eglWaitSyncCommon
00000000001d4ac0 0000000000000198 t _eglCreateImageCommon
00000000001d4c60 00000000000000d4 T eglDestroySync
00000000001d4d40 00000000000000d4 t eglDestroyImageKHR
00000000001d4e20 00000000000000d4 T eglDestroyImage
00000000001d4f00 00000000000000d4 t eglDestroySyncKHR
00000000001d4fe0 00000000000000c8 T eglWaitSync
00000000001d50b0 00000000000000c8 t eglWaitSyncKHR
00000000001d5180 000000000000018c t _eglSwapBuffersWithDamageCommon
00000000001d5310 00000000000000fc t eglSwapBuffersWithDamageKHR
00000000001d5410 00000000000000fc t eglSwapBuffersWithDamageEXT
00000000001d5510 0000000000000100 t eglClientWaitSyncKHR
00000000001d5610 0000000000000100 T eglClientWaitSync
00000000001d5710 00000000000001c4 t _eglCreatePixmapSurfaceCommon
00000000001d58e0 000000000000012c T eglGetSyncAttrib
00000000001d5a10 00000000000001d8 t _eglCreateWindowSurfaceCommon
00000000001d5bf0 0000000000000150 t eglGetSyncAttribKHR
00000000001d5d40 0000000000000218 t _eglCreateSync
00000000001d5f60 000000000000019c T eglSurfaceAttrib
00000000001d6100 000000000000019c T eglQueryContext
00000000001d62a0 000000000000016c T eglCopyBuffers
00000000001d6410 000000000000016c t eglSignalSyncKHR
00000000001d6580 000000000000016c T eglBindTexImage
00000000001d66f0 000000000000016c T eglReleaseTexImage
00000000001d6860 000000000000018c T eglDestroyContext
00000000001d69f0 000000000000018c T eglDestroySurface
00000000001d6b80 00000000000001a4 t eglExportDMABUFImageQueryMESA
00000000001d6d30 00000000000001a4 t eglExportDRMImageMESA
00000000001d6ee0 00000000000001a4 t eglExportDMABUFImageMESA
00000000001d7090 00000000000001cc t eglPostSubBufferNV
00000000001d7260 00000000000001ac T eglQuerySurface
00000000001d7410 0000000000000194 t eglDupNativeFenceFDANDROID
00000000001d75b0 00000000000001cc t eglGetSyncValuesCHROMIUM
00000000001d7780 00000000000001cc t eglSwapBuffersRegionNOK
00000000001d7950 0000000000000208 T eglSwapBuffers
00000000001d7b60 000000000000020c T eglSwapInterval
00000000001d7d70 00000000000002b0 t eglSetDamageRegionKHR
00000000001d8020 0000000000000330 T eglMakeCurrent
00000000001d8350 00000000000000c0 t eglQueryDevicesEXT
00000000001d8410 0000000000000074 T eglGetDisplay
00000000001d8490 00000000000000b0 T eglGetPlatformDisplay
00000000001d8540 0000000000000070 T eglWaitClient
00000000001d85b0 0000000000000070 T eglWaitGL
00000000001d8620 0000000000000114 t eglQueryDeviceAttribEXT
00000000001d8740 00000000000000e0 T eglGetCurrentSurface
00000000001d8820 0000000000000108 t eglGetPlatformDisplayEXT
00000000001d8930 00000000000000e0 T eglBindAPI
00000000001d8a10 00000000000000e0 t eglQueryDeviceStringEXT
00000000001d8af0 000000000000011c t eglQueryDebugKHR
00000000001d8c10 00000000000000f8 T eglGetProcAddress
00000000001d8d10 0000000000000160 t eglQueryDisplayAttribEXT
00000000001d8e70 0000000000000164 t eglQueryDmaBufFormatsEXT
00000000001d8fe0 000000000000012c T eglCreatePixmapSurface
00000000001d9110 000000000000012c T eglCreateWindowSurface
00000000001d9240 000000000000012c t eglCreatePlatformPixmapSurfaceEXT
00000000001d9370 000000000000012c t eglCreatePlatformWindowSurfaceEXT
00000000001d94a0 0000000000000144 t eglDebugMessageControlKHR
00000000001d95f0 0000000000000184 t eglQueryDmaBufModifiersEXT
00000000001d9780 0000000000000140 t eglCreateImageKHR
00000000001d98c0 0000000000000128 T eglCreateSync
00000000001d99f0 0000000000000128 t eglCreateSync64KHR
00000000001d9b20 0000000000000158 T eglWaitNative
00000000001d9c80 000000000000018c t eglLabelObjectKHR
00000000001d9e10 0000000000000150 T eglTerminate
00000000001d9f60 00000000000001c8 T eglCreatePlatformPixmapSurface
00000000001da130 00000000000001c8 T eglCreatePlatformWindowSurface
00000000001da300 0000000000000198 t eglCreateSyncKHR
00000000001da4a0 00000000000001d4 T eglCreateImage
00000000001da680 0000000000000168 t eglGetDisplayDriverConfig
00000000001da7f0 0000000000000168 t eglGetDisplayDriverName
00000000001da960 00000000000000d4 T eglReleaseThread
00000000001daa40 0000000000000194 T eglCreatePbufferFromClientBuffer
00000000001dabe0 00000000000001e0 T eglGetConfigs
00000000001dadc0 00000000000001b4 t eglCreateDRMImageMESA
00000000001daf80 00000000000001bc t eglBindWaylandDisplayWL
00000000001db140 0000000000000200 T eglChooseConfig
00000000001db340 00000000000001bc t eglUnbindWaylandDisplayWL
00000000001db500 00000000000001f8 T eglGetConfigAttrib
00000000001db700 00000000000001e4 t eglQueryWaylandBufferWL
00000000001db8f0 0000000000000190 t eglSetBlobCacheFuncsANDROID
00000000001dba80 00000000000001f0 t eglCreateWaylandBufferFromImageWL
00000000001dbc70 0000000000000228 T eglCreatePbufferSurface
00000000001dbea0 000000000000028c T eglCreateContext
00000000001dc130 000000000000027c T eglQueryString
00000000001dc3b0 0000000000000890 T eglInitialize
00000000001dcc40 0000000000000190 t _eglOffsetOfConfig
00000000001dcdd0 0000000000000134 t _eglSortConfigs
00000000001dcf10 0000000000000010 t _eglFlattenConfig
00000000001dcf20 0000000000000048 t _eglInitConfig
00000000001dcf70 0000000000000050 t _eglLinkConfig
00000000001dcfc0 000000000000001c t _eglLookupConfig
00000000001dcfe0 00000000000002fc t _eglValidateConfig
00000000001dd2e0 0000000000000268 t _eglMatchConfig
00000000001dd550 0000000000000004 t _eglFallbackMatch
00000000001dd560 00000000000001d8 t _eglParseConfigAttribList
00000000001dd740 0000000000000174 t _eglCompareConfigs
00000000001dd8c0 0000000000000008 t _eglFallbackCompare
00000000001dd8d0 0000000000000130 t _eglFilterConfigArray
00000000001dda00 0000000000000094 t _eglChooseConfig
00000000001ddaa0 00000000000000b4 t _eglGetConfigAttrib
00000000001ddb60 0000000000000044 t _eglGetConfigs
00000000001ddbb0 0000000000000728 t _eglInitContext
00000000001de2e0 00000000000000dc t _eglQueryContext
00000000001de3c0 000000000000029c t _eglBindContext
00000000001de660 0000000000000078 t _eglGetCurrentThread
00000000001de6e0 0000000000000048 t _eglDestroyCurrentThread
00000000001de730 0000000000000034 t _eglIsCurrentThreadDummy
00000000001de770 0000000000000078 t _eglGetCurrentContext
00000000001de7f0 00000000000003cc t _eglDebugReport
00000000001debc0 00000000000000b8 t _eglError
00000000001dec80 0000000000000044 T _eglFiniDevice
00000000001decd0 0000000000000090 t _eglCheckDeviceHandle
00000000001ded60 0000000000000024 t _eglDeviceSupports
00000000001ded90 0000000000000024 t _eglQueryDeviceAttribEXT
00000000001dedc0 0000000000000038 t _eglQueryDeviceStringEXT
00000000001dee00 00000000000000e4 t _eglQueryDevicesEXT
00000000001deef0 000000000000012c t _eglGetNativePlatform
00000000001df020 000000000000009c T _eglFiniDisplay
00000000001df0c0 00000000000001e4 t _eglFindDisplay
00000000001df2b0 00000000000001d0 t _eglReleaseDisplayResources
00000000001df480 0000000000000034 t _eglCleanupDisplay
00000000001df4c0 0000000000000090 t _eglCheckDisplayHandle
00000000001df550 0000000000000040 t _eglCheckResource
00000000001df590 0000000000000038 t _eglInitResource
00000000001df5d0 0000000000000010 t _eglGetResource
00000000001df5e0 0000000000000018 t _eglPutResource
00000000001df600 000000000000002c t _eglLinkResource
00000000001df630 0000000000000074 t _eglUnlinkResource
00000000001df6b0 00000000000001a4 t _eglGetDeviceDisplay
00000000001df860 0000000000000078 t _eglGetDriver
00000000001df8e0 00000000000000c8 t _eglMatchDriver
00000000001df9b0 000000000000004c t _eglGetDriverProc
00000000001dfa00 0000000000000028 T _eglUnloadDrivers
00000000001dfa30 000000000000000c t _eglPointerIsDereferencable
00000000001dfa40 00000000000001f4 t _eglLog
00000000001dfc40 00000000000005cc t _eglInitSurface
00000000001e0210 0000000000000424 t _eglQuerySurface
00000000001e0640 0000000000000200 t _eglSurfaceAttrib
00000000001e0840 0000000000000008 t _eglSwapInterval
00000000001e0850 0000000000000100 t _eglGetSyncAttrib
00000000001e0950 0000000000000008 t switch_st_framebuffer_flush_front
00000000001e0960 0000000000000008 t switch_st_framebuffer_flush_swapbuffers
00000000001e0970 0000000000000008 t switch_create_pixmap_surface
00000000001e0980 0000000000000008 t switch_create_pbuffer_surface
00000000001e0990 0000000000000008 t switch_st_get_param
00000000001e09a0 0000000000000008 t switch_get_proc_address
00000000001e09b0 00000000000000e4 t switch_swap_buffers
00000000001e0aa0 0000000000000020 t switch_swap_interval
00000000001e0ac0 000000000000018c t switch_create_context
00000000001e0c50 000000000000005c t switch_terminate
00000000001e0cb0 000000000000004c t switch_destroy_context
00000000001e0d00 00000000000001c4 t switch_st_framebuffer_validate
00000000001e0ed0 000000000000012c t switch_egl_surface_cleanup
00000000001e1000 0000000000000244 t switch_create_window_surface
00000000001e1250 0000000000000050 t switch_destroy_surface
00000000001e12a0 0000000000000128 t switch_make_current
00000000001e13d0 0000000000000478 t switch_initialize
00000000001e1850 0000000000000084 t _eglInitDriver
00000000001e18e0 000000000000009c t st_framebuffer_update_attachments
00000000001e1980 0000000000000004 t st_framebuffer_iface_hash
00000000001e1990 000000000000000c t st_framebuffer_iface_equal
00000000001e19a0 000000000000002c t st_api_get_current
00000000001e19d0 0000000000000004 t st_api_destroy
00000000001e19e0 00000000000000b4 t st_context_validate
00000000001e1aa0 0000000000000004 t st_context_destroy
00000000001e1ab0 0000000000000024 t st_context_share
00000000001e1ae0 0000000000000010 t st_context_copy
00000000001e1af0 0000000000000048 t st_manager_destroy
00000000001e1b40 00000000000000d4 t get_version
00000000001e1c20 000000000000009c t st_api_query_versions
00000000001e1cc0 0000000000000078 t st_api_destroy_drawable
00000000001e1d40 00000000000000f0 t st_framebuffers_purge
00000000001e1e30 00000000000002b8 t st_context_teximage
00000000001e20f0 000000000000022c t st_framebuffer_add_renderbuffer
00000000001e2320 0000000000000520 t st_visual_to_context_mode
00000000001e2840 00000000000002f0 t st_framebuffer_reuse_or_create.constprop.0
00000000001e2b30 0000000000000354 t st_api_create_context
00000000001e2e90 0000000000000230 t st_set_ws_renderbuffer_surface
00000000001e30c0 00000000000002f8 t st_framebuffer_validate
00000000001e33c0 0000000000000184 t st_api_make_current
00000000001e3550 0000000000000014 t st_framebuffer_reference
00000000001e3570 00000000000000a4 t st_manager_flush_frontbuffer
00000000001e3620 0000000000000100 t st_context_flush
00000000001e3720 0000000000000108 t st_manager_validate_framebuffers
00000000001e3830 0000000000000078 t st_manager_flush_swapbuffers
00000000001e38b0 00000000000000cc t st_manager_add_color_renderbuffer
00000000001e3980 000000000000000c t st_gl_api_create
00000000001e3990 00000000000000cc t st_texture_release_all_sampler_views.part.0
00000000001e3a60 0000000000000220 t st_texture_set_sampler_view
00000000001e3c80 0000000000000058 t st_texture_get_current_sampler_view
00000000001e3ce0 00000000000000b8 t st_texture_release_context_sampler_view
00000000001e3da0 0000000000000010 t st_texture_release_all_sampler_views
00000000001e3db0 0000000000000058 t st_delete_texture_sampler_views
00000000001e3e10 0000000000000754 t st_get_texture_sampler_view_from_stobj
00000000001e4570 000000000000013c t st_get_buffer_sampler_view_from_stobj
00000000001e46b0 0000000000000018 t u_surface_default_template
00000000001e46d0 00000000000000e8 t util_copy_box
00000000001e47c0 00000000000002f8 t util_resource_copy_region
00000000001e4ac0 000000000000006c t nouveau_drm_screen_unref
00000000001e4b30 0000000000000110 T nouveau_switch_screen_create
00000000001e4c40 0000000000000008 T nouveau_switch_resource_get_syncpoint
00000000001e4c50 00000000000001fc T nouveau_switch_resource_get_buffer
00000000001e4e50 000000000000013c t nvc0_screen_get_shader_param
00000000001e4f90 00000000000000a4 t nvc0_screen_get_paramf
00000000001e5040 0000000000000054 t nvc0_screen_get_sample_pixel_grid
00000000001e50a0 0000000000000054 t nvc0_screen_fence_emit
00000000001e5100 000000000000000c t nvc0_screen_fence_update
00000000001e5110 0000000000000444 t nvc0_screen_get_param
00000000001e5560 00000000000001c8 t nvc0_screen_is_format_supported
00000000001e5730 000000000000025c t nvc0_screen_get_compute_param
00000000001e5990 0000000000000028 t PUSH_SPACE.isra.0
00000000001e59c0 0000000000000164 t nvc0_screen_destroy
00000000001e5b30 00000000000000f8 t nvc0_graph_set_macro.isra.0
00000000001e5c30 000000000000017c t nvc0_screen_resize_text_area
00000000001e5db0 000000000000022c t nvc0_screen_bind_cb_3d
00000000001e5fe0 00000000000020a8 t nvc0_screen_create
00000000001e8090 000000000000007c t nvc0_screen_tic_alloc
00000000001e8110 000000000000007c t nvc0_screen_tsc_alloc
00000000001e8190 0000000000000004 t nvc0_flush_resource
00000000001e81a0 0000000000000334 t nvc0_clear_buffer_push_nve4
00000000001e84e0 0000000000000378 t nvc0_clear_buffer_push_nvc0
00000000001e8860 0000000000000080 t nvc0_clear_buffer_push
00000000001e88e0 0000000000000084 t gm200_evaluate_depth_buffer
00000000001e8970 00000000000003b0 t nvc0_2d_texture_set
00000000001e8d20 0000000000000508 t nvc0_resource_copy_region
00000000001e9230 0000000000000698 t nvc0_clear_buffer
00000000001e98d0 00000000000004ec t nvc0_clear_depth_stencil
00000000001e9dc0 000000000000056c t nvc0_clear_render_target
00000000001ea330 00000000000026ac t nvc0_blit
00000000001ec9e0 00000000000004d8 T nvc0_clear
00000000001ecec0 0000000000000124 t nvc0_blitter_create
00000000001ecff0 0000000000000084 t nvc0_blitter_destroy
00000000001ed080 0000000000000050 t nvc0_blitctx_create
00000000001ed0d0 0000000000000008 t nvc0_blitctx_destroy
00000000001ed0e0 0000000000000074 t nvc0_init_surface_functions
00000000001ed160 0000000000000034 t nve4_delete_image_handle
00000000001ed1a0 00000000000000c0 t nve4_make_texture_handle_resident
00000000001ed260 0000000000000178 t gm107_make_image_handle_resident
00000000001ed3e0 00000000000000e0 t nvc0_get_surface_dims
00000000001ed4c0 0000000000000068 t gm107_delete_image_handle
00000000001ed530 0000000000000124 t nve4_delete_texture_handle
00000000001ed660 00000000000005fc t gf100_create_texture_view
00000000001edc60 00000000000006e0 t gm107_create_texture_view
00000000001ee340 00000000000001f0 t nve4_create_texture_handle
00000000001ee530 0000000000000030 T nvc0_create_sampler_view
00000000001ee560 00000000000000d8 t gm107_create_texture_view_from_image
00000000001ee640 0000000000000144 t gm107_create_image_handle
00000000001ee790 0000000000000014 t nvc0_create_texture_view
00000000001ee7b0 000000000000009c t nvc0_update_tic
00000000001ee850 0000000000000414 t nvc0_validate_tic
00000000001eec70 00000000000003b8 T nvc0_validate_textures
00000000001ef030 00000000000002e0 t nvc0_validate_tsc
00000000001ef310 00000000000001a0 t nve4_validate_tsc
00000000001ef4b0 00000000000000ec T nvc0_validate_samplers
00000000001ef5a0 0000000000000094 t nvc0_upload_tsc0
00000000001ef640 0000000000000190 T nve4_set_tex_handles
00000000001ef7d0 00000000000000b4 t nvc0_mark_image_range_valid
00000000001ef890 00000000000000f0 t nve4_make_image_handle_resident
00000000001ef980 00000000000002e8 t nve4_set_surface_info
00000000001efc70 000000000000019c t nve4_create_image_handle
00000000001efe10 00000000000005b4 t nvc0_validate_suf
00000000001f03d0 00000000000004dc T nvc0_validate_surfaces
00000000001f08b0 0000000000000088 t nvc0_init_bindless_functions
00000000001f0940 0000000000000224 t nvc0_m2mf_copy_linear
00000000001f0b70 0000000000000204 t nve4_p2mf_push_linear
00000000001f0d80 0000000000000254 t nvc0_m2mf_push_linear
00000000001f0fe0 0000000000000190 t nve4_m2mf_copy_linear
00000000001f1170 000000000000050c t nvc0_m2mf_transfer_rect
00000000001f1680 0000000000000364 t nve4_m2mf_transfer_rect
00000000001f19f0 00000000000005b8 T nvc0_miptree_transfer_map
00000000001f1fb0 0000000000000160 T nvc0_miptree_transfer_unmap
00000000001f2110 00000000000001a4 t nvc0_cb_bo_push
00000000001f22c0 00000000000000e8 t nvc0_cb_push
00000000001f23b0 000000000000007c t nvc0_init_transfer_functions
00000000001f2430 000000000000016c t nve4_upload_indirect_desc
00000000001f25a0 00000000000000ac t nve4_compute_validate_samplers
00000000001f2650 000000000000025c t nve4_compute_validate_buffers
00000000001f28b0 0000000000000384 t nve4_compute_validate_constbufs
00000000001f2c40 00000000000001f4 t nve4_compute_set_tex_handles
00000000001f2e40 000000000000048c t nve4_compute_validate_textures
00000000001f32d0 00000000000005ec t nve4_compute_validate_surfaces
00000000001f38c0 00000000000006c0 t nve4_screen_compute_setup
00000000001f3f80 0000000000000c58 T nve4_launch_grid
00000000001f4be0 00000000000000f8 t env_var_as_boolean
00000000001f4ce0 0000000000000398 t XXH32_finalize
00000000001f5080 00000000000000f4 t hash_table_search
00000000001f5180 0000000000000020 T _mesa_hash_pointer
00000000001f51a0 000000000000000c T _mesa_key_pointer_equal
00000000001f51b0 000000000000016c t _mesa_hash_table_rehash
00000000001f5320 00000000000001b8 t hash_table_insert
00000000001f54e0 0000000000000098 t _mesa_hash_table_create
00000000001f5580 00000000000000bc t _mesa_hash_table_destroy
00000000001f5640 0000000000000080 t _mesa_hash_table_clear
00000000001f56c0 0000000000000008 t _mesa_hash_table_set_deleted_key
00000000001f56d0 0000000000000038 t _mesa_hash_table_search
00000000001f5710 0000000000000004 t _mesa_hash_table_search_pre_hashed
00000000001f5720 0000000000000048 t _mesa_hash_table_insert
00000000001f5770 0000000000000004 t _mesa_hash_table_insert_pre_hashed
00000000001f5780 0000000000000020 t _mesa_hash_table_remove
00000000001f57a0 0000000000000054 t _mesa_hash_table_next_entry
00000000001f5800 00000000000001e8 t _mesa_hash_data
00000000001f59f0 0000000000000034 t _mesa_hash_string
00000000001f5a30 000000000000001c T _mesa_key_string_equal
00000000001f5a50 0000000000000014 t _mesa_pointer_hash_table_create
00000000001f5a70 000000000000005c t _mesa_hash_table_u64_create
00000000001f5ad0 00000000000000ac t _mesa_hash_table_u64_clear
00000000001f5b80 000000000000003c t _mesa_hash_table_u64_destroy
00000000001f5bc0 0000000000000074 t _mesa_hash_table_u64_insert
00000000001f5c40 0000000000000058 t _mesa_hash_table_u64_search
00000000001f5ca0 000000000000009c t _mesa_hash_table_u64_remove
00000000001f5d40 0000000000000084 t resize
00000000001f5dd0 0000000000000034 t printf_length
00000000001f5e10 00000000000001ec t unsafe_free
00000000001f6000 0000000000000058 t ralloc_context
00000000001f6060 0000000000000058 t ralloc_size
00000000001f60c0 0000000000000038 t rzalloc_size
00000000001f6100 0000000000000018 t reralloc_size
00000000001f6120 0000000000000080 t ralloc_array_size
00000000001f61a0 0000000000000050 t rzalloc_array_size
00000000001f61f0 000000000000002c t reralloc_array_size
00000000001f6220 0000000000000098 t ralloc_free
00000000001f62c0 00000000000000a0 t ralloc_steal
00000000001f6360 0000000000000020 t ralloc_parent
00000000001f6380 0000000000000008 t ralloc_set_destructor
00000000001f6390 0000000000000070 t ralloc_strdup
00000000001f6400 0000000000000074 t ralloc_strndup
00000000001f6480 0000000000000098 t ralloc_strcat
00000000001f6520 00000000000000d8 t ralloc_asprintf
00000000001f6600 0000000000000084 t ralloc_vasprintf
00000000001f6690 000000000000014c t ralloc_vasprintf_rewrite_tail
00000000001f67e0 0000000000000060 t ralloc_vasprintf_append
00000000001f6840 000000000000006c t ralloc_asprintf_rewrite_tail
00000000001f68b0 00000000000000b8 t ralloc_asprintf_append
00000000001f6970 00000000000000b4 t linear_alloc_child
00000000001f6a30 0000000000000084 t linear_alloc_parent
00000000001f6ac0 0000000000000038 t linear_zalloc_child
00000000001f6b00 0000000000000080 t linear_strdup
00000000001f6b80 00000000000000d8 t linear_asprintf
00000000001f6c60 000000000000017c t linear_vasprintf_rewrite_tail
00000000001f6de0 00000000000000c0 t linear_asprintf_append
00000000001f6ea0 00000000000000dc t linear_strcat
00000000001f6f80 000000000000009c t _debug_printf
00000000001f7020 0000000000000040 t _debug_vprintf
00000000001f7060 0000000000000074 t _pipe_debug_message
00000000001f70e0 000000000000010c t debug_get_bool_option
00000000001f71f0 000000000000021c t debug_get_flags_option
00000000001f7410 0000000000000064 t debug_dump_enum
00000000001f7480 00000000000001a0 t util_copy_rect
00000000001f7620 0000000000000078 t util_format_is_float
00000000001f76a0 0000000000000038 t util_format_has_alpha
00000000001f76e0 000000000000003c t util_format_is_luminance
00000000001f7720 0000000000000040 t util_format_is_alpha
00000000001f7760 0000000000000070 t util_format_is_pure_integer
00000000001f77d0 0000000000000080 t util_format_is_pure_sint
00000000001f7850 0000000000000080 t util_format_is_pure_uint
00000000001f78d0 000000000000001c t util_format_is_snorm
00000000001f78f0 000000000000003c t util_format_is_luminance_alpha
00000000001f7930 0000000000000038 t util_format_is_intensity
00000000001f7970 000000000000008c t util_format_read_4f
00000000001f7a00 000000000000008c t util_format_read_4ub
00000000001f7a90 000000000000008c t util_format_read_4ui
00000000001f7b20 000000000000008c t util_format_read_4i
00000000001f7bb0 0000000000000110 t util_format_apply_color_swizzle
00000000001f7cc0 000000000000006c t util_format_none_unpack_rgba_float
00000000001f7d30 0000000000000088 t util_format_none_pack_rgba_float
00000000001f7dc0 000000000000001c t util_format_none_fetch_rgba_float
00000000001f7de0 0000000000000074 t util_format_none_unpack_rgba_8unorm
00000000001f7e60 000000000000006c t util_format_none_pack_rgba_8unorm
00000000001f7ed0 00000000000000a4 t util_format_b8g8r8a8_unorm_unpack_rgba_float
00000000001f7f80 0000000000000054 t util_format_b8g8r8a8_unorm_fetch_rgba_float
00000000001f7fe0 0000000000000078 t util_format_b8g8r8a8_unorm_unpack_rgba_8unorm
00000000001f8060 000000000000007c t util_format_b8g8r8a8_unorm_pack_rgba_8unorm
00000000001f80e0 000000000000009c t util_format_b8g8r8x8_unorm_unpack_rgba_float
00000000001f8180 000000000000004c t util_format_b8g8r8x8_unorm_fetch_rgba_float
00000000001f81d0 0000000000000074 t util_format_b8g8r8x8_unorm_unpack_rgba_8unorm
00000000001f8250 0000000000000074 t util_format_b8g8r8x8_unorm_pack_rgba_8unorm
00000000001f82d0 00000000000000a4 t util_format_a8r8g8b8_unorm_unpack_rgba_float
00000000001f8380 0000000000000054 t util_format_a8r8g8b8_unorm_fetch_rgba_float
00000000001f83e0 0000000000000078 t util_format_a8r8g8b8_unorm_unpack_rgba_8unorm
00000000001f8460 000000000000007c t util_format_a8r8g8b8_unorm_pack_rgba_8unorm
00000000001f84e0 000000000000009c t util_format_x8r8g8b8_unorm_unpack_rgba_float
00000000001f8580 000000000000004c t util_format_x8r8g8b8_unorm_fetch_rgba_float
00000000001f85d0 0000000000000078 t util_format_x8r8g8b8_unorm_unpack_rgba_8unorm
00000000001f8650 0000000000000074 t util_format_x8r8g8b8_unorm_pack_rgba_8unorm
00000000001f86d0 00000000000000a4 t util_format_a8b8g8r8_unorm_unpack_rgba_float
00000000001f8780 0000000000000054 t util_format_a8b8g8r8_unorm_fetch_rgba_float
00000000001f87e0 0000000000000078 t util_format_a8b8g8r8_unorm_unpack_rgba_8unorm
00000000001f8860 0000000000000048 t util_format_a8b8g8r8_unorm_pack_rgba_8unorm
00000000001f88b0 000000000000009c t util_format_x8b8g8r8_unorm_unpack_rgba_float
00000000001f8950 0000000000000050 t util_format_x8b8g8r8_unorm_fetch_rgba_float
00000000001f89a0 0000000000000078 t util_format_x8b8g8r8_unorm_unpack_rgba_8unorm
00000000001f8a20 0000000000000070 t util_format_x8b8g8r8_unorm_pack_rgba_8unorm
00000000001f8a90 000000000000009c t util_format_r8g8b8x8_unorm_unpack_rgba_float
00000000001f8b30 000000000000004c t util_format_r8g8b8x8_unorm_fetch_rgba_float
00000000001f8b80 0000000000000074 t util_format_r8g8b8x8_unorm_unpack_rgba_8unorm
00000000001f8c00 0000000000000070 t util_format_r8g8b8x8_unorm_pack_rgba_8unorm
00000000001f8c70 000000000000009c t util_format_r5g5b5a1_unorm_unpack_rgba_float
00000000001f8d10 000000000000017c t util_format_r5g5b5a1_unorm_pack_rgba_float
00000000001f8e90 000000000000004c t util_format_r5g5b5a1_unorm_fetch_rgba_float
00000000001f8ee0 00000000000000d8 t util_format_r5g5b5a1_unorm_unpack_rgba_8unorm
00000000001f8fc0 0000000000000090 t util_format_r5g5b5a1_unorm_pack_rgba_8unorm
00000000001f9050 0000000000000098 t util_format_b5g5r5x1_unorm_unpack_rgba_float
00000000001f90f0 0000000000000150 t util_format_b5g5r5x1_unorm_pack_rgba_float
00000000001f9240 0000000000000048 t util_format_b5g5r5x1_unorm_fetch_rgba_float
00000000001f9290 00000000000000d4 t util_format_b5g5r5x1_unorm_unpack_rgba_8unorm
00000000001f9370 000000000000007c t util_format_b5g5r5x1_unorm_pack_rgba_8unorm
00000000001f93f0 000000000000009c t util_format_b5g5r5a1_unorm_unpack_rgba_float
00000000001f9490 000000000000017c t util_format_b5g5r5a1_unorm_pack_rgba_float
00000000001f9610 000000000000004c t util_format_b5g5r5a1_unorm_fetch_rgba_float
00000000001f9660 00000000000000d8 t util_format_b5g5r5a1_unorm_unpack_rgba_8unorm
00000000001f9740 000000000000008c t util_format_b5g5r5a1_unorm_pack_rgba_8unorm
00000000001f97d0 000000000000009c t util_format_x1b5g5r5_unorm_unpack_rgba_float
00000000001f9870 0000000000000150 t util_format_x1b5g5r5_unorm_pack_rgba_float
00000000001f99c0 0000000000000050 t util_format_x1b5g5r5_unorm_fetch_rgba_float
00000000001f9a10 00000000000000d4 t util_format_x1b5g5r5_unorm_unpack_rgba_8unorm
00000000001f9af0 0000000000000084 t util_format_x1b5g5r5_unorm_pack_rgba_8unorm
00000000001f9b80 000000000000009c t util_format_a1r5g5b5_unorm_unpack_rgba_float
00000000001f9c20 0000000000000180 t util_format_a1r5g5b5_unorm_pack_rgba_float
00000000001f9da0 000000000000004c t util_format_a1r5g5b5_unorm_fetch_rgba_float
00000000001f9df0 00000000000000d8 t util_format_a1r5g5b5_unorm_unpack_rgba_8unorm
00000000001f9ed0 0000000000000090 t util_format_a1r5g5b5_unorm_pack_rgba_8unorm
00000000001f9f60 000000000000009c t util_format_a1b5g5r5_unorm_unpack_rgba_float
00000000001fa000 0000000000000180 t util_format_a1b5g5r5_unorm_pack_rgba_float
00000000001fa180 000000000000004c t util_format_a1b5g5r5_unorm_fetch_rgba_float
00000000001fa1d0 00000000000000d8 t util_format_a1b5g5r5_unorm_unpack_rgba_8unorm
00000000001fa2b0 0000000000000090 t util_format_a1b5g5r5_unorm_pack_rgba_8unorm
00000000001fa340 00000000000000a0 t util_format_r4g4b4a4_unorm_unpack_rgba_float
00000000001fa3e0 00000000000001a0 t util_format_r4g4b4a4_unorm_pack_rgba_float
00000000001fa580 0000000000000050 t util_format_r4g4b4a4_unorm_fetch_rgba_float
00000000001fa5d0 00000000000000c4 t util_format_r4g4b4a4_unorm_unpack_rgba_8unorm
00000000001fa6a0 000000000000008c t util_format_r4g4b4a4_unorm_pack_rgba_8unorm
00000000001fa730 00000000000000a0 t util_format_b4g4r4a4_unorm_unpack_rgba_float
00000000001fa7d0 00000000000001a0 t util_format_b4g4r4a4_unorm_pack_rgba_float
00000000001fa970 0000000000000050 t util_format_b4g4r4a4_unorm_fetch_rgba_float
00000000001fa9c0 00000000000000c4 t util_format_b4g4r4a4_unorm_unpack_rgba_8unorm
00000000001faa90 0000000000000088 t util_format_b4g4r4a4_unorm_pack_rgba_8unorm
00000000001fab20 0000000000000098 t util_format_b4g4r4x4_unorm_unpack_rgba_float
00000000001fabc0 0000000000000150 t util_format_b4g4r4x4_unorm_pack_rgba_float
00000000001fad10 0000000000000048 t util_format_b4g4r4x4_unorm_fetch_rgba_float
00000000001fad60 00000000000000b0 t util_format_b4g4r4x4_unorm_unpack_rgba_8unorm
00000000001fae10 0000000000000078 t util_format_b4g4r4x4_unorm_pack_rgba_8unorm
00000000001fae90 00000000000000a0 t util_format_a4r4g4b4_unorm_unpack_rgba_float
00000000001faf30 00000000000001a0 t util_format_a4r4g4b4_unorm_pack_rgba_float
00000000001fb0d0 0000000000000050 t util_format_a4r4g4b4_unorm_fetch_rgba_float
00000000001fb120 00000000000000c4 t util_format_a4r4g4b4_unorm_unpack_rgba_8unorm
00000000001fb1f0 000000000000008c t util_format_a4r4g4b4_unorm_pack_rgba_8unorm
00000000001fb280 00000000000000a0 t util_format_a4b4g4r4_unorm_unpack_rgba_float
00000000001fb320 00000000000001a0 t util_format_a4b4g4r4_unorm_pack_rgba_float
00000000001fb4c0 0000000000000050 t util_format_a4b4g4r4_unorm_fetch_rgba_float
00000000001fb510 00000000000000c4 t util_format_a4b4g4r4_unorm_unpack_rgba_8unorm
00000000001fb5e0 000000000000008c t util_format_a4b4g4r4_unorm_pack_rgba_8unorm
00000000001fb670 00000000000000a4 t util_format_r5g6b5_unorm_unpack_rgba_float
00000000001fb720 0000000000000158 t util_format_r5g6b5_unorm_pack_rgba_float
00000000001fb880 0000000000000058 t util_format_r5g6b5_unorm_fetch_rgba_float
00000000001fb8e0 00000000000000dc t util_format_r5g6b5_unorm_unpack_rgba_8unorm
00000000001fb9c0 0000000000000080 t util_format_r5g6b5_unorm_pack_rgba_8unorm
00000000001fba40 00000000000000a4 t util_format_b5g6r5_unorm_unpack_rgba_float
00000000001fbaf0 0000000000000158 t util_format_b5g6r5_unorm_pack_rgba_float
00000000001fbc50 0000000000000054 t util_format_b5g6r5_unorm_fetch_rgba_float
00000000001fbcb0 00000000000000dc t util_format_b5g6r5_unorm_unpack_rgba_8unorm
00000000001fbd90 000000000000007c t util_format_b5g6r5_unorm_pack_rgba_8unorm
00000000001fbe10 00000000000000b0 t util_format_r10g10b10a2_unorm_unpack_rgba_float
00000000001fbec0 00000000000001a8 t util_format_r10g10b10a2_unorm_pack_rgba_float
00000000001fc070 000000000000005c t util_format_r10g10b10a2_unorm_fetch_rgba_float
00000000001fc0d0 0000000000000094 t util_format_r10g10b10a2_unorm_unpack_rgba_8unorm
00000000001fc170 00000000000000b8 t util_format_r10g10b10a2_unorm_pack_rgba_8unorm
00000000001fc230 0000000000000098 t util_format_r10g10b10x2_unorm_unpack_rgba_float
00000000001fc2d0 0000000000000158 t util_format_r10g10b10x2_unorm_pack_rgba_float
00000000001fc430 0000000000000048 t util_format_r10g10b10x2_unorm_fetch_rgba_float
00000000001fc480 0000000000000078 t util_format_r10g10b10x2_unorm_unpack_rgba_8unorm
00000000001fc500 00000000000000a8 t util_format_r10g10b10x2_unorm_pack_rgba_8unorm
00000000001fc5b0 00000000000000b0 t util_format_b10g10r10a2_unorm_unpack_rgba_float
00000000001fc660 00000000000001a8 t util_format_b10g10r10a2_unorm_pack_rgba_float
00000000001fc810 000000000000005c t util_format_b10g10r10a2_unorm_fetch_rgba_float
00000000001fc870 0000000000000094 t util_format_b10g10r10a2_unorm_unpack_rgba_8unorm
00000000001fc910 00000000000000b8 t util_format_b10g10r10a2_unorm_pack_rgba_8unorm
00000000001fc9d0 00000000000000b0 t util_format_a2r10g10b10_unorm_unpack_rgba_float
00000000001fca80 00000000000001a8 t util_format_a2r10g10b10_unorm_pack_rgba_float
00000000001fcc30 000000000000005c t util_format_a2r10g10b10_unorm_fetch_rgba_float
00000000001fcc90 0000000000000094 t util_format_a2r10g10b10_unorm_unpack_rgba_8unorm
00000000001fcd30 00000000000000b8 t util_format_a2r10g10b10_unorm_pack_rgba_8unorm
00000000001fcdf0 00000000000000b0 t util_format_a2b10g10r10_unorm_unpack_rgba_float
00000000001fcea0 00000000000001a8 t util_format_a2b10g10r10_unorm_pack_rgba_float
00000000001fd050 000000000000005c t util_format_a2b10g10r10_unorm_fetch_rgba_float
00000000001fd0b0 0000000000000094 t util_format_a2b10g10r10_unorm_unpack_rgba_8unorm
00000000001fd150 00000000000000b8 t util_format_a2b10g10r10_unorm_pack_rgba_8unorm
00000000001fd210 00000000000000a4 t util_format_r3g3b2_unorm_unpack_rgba_float
00000000001fd2c0 0000000000000158 t util_format_r3g3b2_unorm_pack_rgba_float
00000000001fd420 0000000000000058 t util_format_r3g3b2_unorm_fetch_rgba_float
00000000001fd480 00000000000000d0 t util_format_r3g3b2_unorm_unpack_rgba_8unorm
00000000001fd550 0000000000000078 t util_format_r3g3b2_unorm_pack_rgba_8unorm
00000000001fd5d0 00000000000000a4 t util_format_b2g3r3_unorm_unpack_rgba_float
00000000001fd680 0000000000000158 t util_format_b2g3r3_unorm_pack_rgba_float
00000000001fd7e0 000000000000005c t util_format_b2g3r3_unorm_fetch_rgba_float
00000000001fd840 00000000000000d0 t util_format_b2g3r3_unorm_unpack_rgba_8unorm
00000000001fd910 000000000000007c t util_format_b2g3r3_unorm_pack_rgba_8unorm
00000000001fd990 000000000000007c t util_format_l8_unorm_unpack_rgba_float
00000000001fda10 0000000000000028 t util_format_l8_unorm_fetch_rgba_float
00000000001fda40 000000000000006c t util_format_l8_unorm_unpack_rgba_8unorm
00000000001fdab0 000000000000005c t util_format_l8_unorm_pack_rgba_8unorm
00000000001fdb10 0000000000000078 t util_format_a8_unorm_unpack_rgba_float
00000000001fdb90 0000000000000028 t util_format_a8_unorm_fetch_rgba_float
00000000001fdbc0 000000000000006c t util_format_a8_unorm_unpack_rgba_8unorm
00000000001fdc30 0000000000000060 t util_format_a8_unorm_pack_rgba_8unorm
00000000001fdc90 0000000000000074 t util_format_i8_unorm_unpack_rgba_float
00000000001fdd10 0000000000000024 t util_format_i8_unorm_fetch_rgba_float
00000000001fdd40 000000000000006c t util_format_i8_unorm_unpack_rgba_8unorm
00000000001fddb0 0000000000000088 t util_format_l4a4_unorm_unpack_rgba_float
00000000001fde40 0000000000000100 t util_format_l4a4_unorm_pack_rgba_float
00000000001fdf40 0000000000000038 t util_format_l4a4_unorm_fetch_rgba_float
00000000001fdf80 000000000000009c t util_format_l4a4_unorm_unpack_rgba_8unorm
00000000001fe020 000000000000006c t util_format_l4a4_unorm_pack_rgba_8unorm
00000000001fe090 000000000000008c t util_format_l8a8_unorm_unpack_rgba_float
00000000001fe120 000000000000003c t util_format_l8a8_unorm_fetch_rgba_float
00000000001fe160 0000000000000074 t util_format_l8a8_unorm_unpack_rgba_8unorm
00000000001fe1e0 0000000000000068 t util_format_l8a8_unorm_pack_rgba_8unorm
00000000001fe250 000000000000007c t util_format_l16_unorm_unpack_rgba_float
00000000001fe2d0 00000000000000b8 t util_format_l16_unorm_pack_rgba_float
00000000001fe390 0000000000000028 t util_format_l16_unorm_fetch_rgba_float
00000000001fe3c0 0000000000000070 t util_format_l16_unorm_unpack_rgba_8unorm
00000000001fe430 0000000000000074 t util_format_l16_unorm_pack_rgba_8unorm
00000000001fe4b0 0000000000000078 t util_format_a16_unorm_unpack_rgba_float
00000000001fe530 00000000000000b8 t util_format_a16_unorm_pack_rgba_float
00000000001fe5f0 0000000000000028 t util_format_a16_unorm_fetch_rgba_float
00000000001fe620 0000000000000070 t util_format_a16_unorm_unpack_rgba_8unorm
00000000001fe690 0000000000000078 t util_format_a16_unorm_pack_rgba_8unorm
00000000001fe710 0000000000000074 t util_format_i16_unorm_unpack_rgba_float
00000000001fe790 0000000000000024 t util_format_i16_unorm_fetch_rgba_float
00000000001fe7c0 0000000000000070 t util_format_i16_unorm_unpack_rgba_8unorm
00000000001fe830 0000000000000088 t util_format_l16a16_unorm_unpack_rgba_float
00000000001fe8c0 0000000000000104 t util_format_l16a16_unorm_pack_rgba_float
00000000001fe9d0 0000000000000038 t util_format_l16a16_unorm_fetch_rgba_float
00000000001fea10 0000000000000074 t util_format_l16a16_unorm_unpack_rgba_8unorm
00000000001fea90 000000000000008c t util_format_l16a16_unorm_pack_rgba_8unorm
00000000001feb20 0000000000000078 t util_format_a8_snorm_unpack_rgba_float
00000000001feba0 00000000000000b8 t util_format_a8_snorm_pack_rgba_float
00000000001fec60 0000000000000028 t util_format_a8_snorm_fetch_rgba_float
00000000001fec90 0000000000000098 t util_format_a8_snorm_unpack_rgba_8unorm
00000000001fed30 0000000000000064 t util_format_a8_snorm_pack_rgba_8unorm
00000000001feda0 000000000000007c t util_format_l8_snorm_unpack_rgba_float
00000000001fee20 00000000000000b8 t util_format_l8_snorm_pack_rgba_float
00000000001feee0 000000000000002c t util_format_l8_snorm_fetch_rgba_float
00000000001fef10 000000000000009c t util_format_l8_snorm_unpack_rgba_8unorm
00000000001fefb0 0000000000000060 t util_format_l8_snorm_pack_rgba_8unorm
00000000001ff010 0000000000000084 t util_format_l8a8_snorm_unpack_rgba_float
00000000001ff0a0 0000000000000108 t util_format_l8a8_snorm_pack_rgba_float
00000000001ff1b0 0000000000000034 t util_format_l8a8_snorm_fetch_rgba_float
00000000001ff1f0 00000000000000c4 t util_format_l8a8_snorm_unpack_rgba_8unorm
00000000001ff2c0 0000000000000070 t util_format_l8a8_snorm_pack_rgba_8unorm
00000000001ff330 0000000000000074 t util_format_i8_snorm_unpack_rgba_float
00000000001ff3b0 0000000000000024 t util_format_i8_snorm_fetch_rgba_float
00000000001ff3e0 000000000000009c t util_format_i8_snorm_unpack_rgba_8unorm
00000000001ff480 0000000000000078 t util_format_a16_snorm_unpack_rgba_float
00000000001ff500 00000000000000c0 t util_format_a16_snorm_pack_rgba_float
00000000001ff5c0 0000000000000028 t util_format_a16_snorm_fetch_rgba_float
00000000001ff5f0 0000000000000078 t util_format_a16_snorm_unpack_rgba_8unorm
00000000001ff670 0000000000000078 t util_format_a16_snorm_pack_rgba_8unorm
00000000001ff6f0 000000000000007c t util_format_l16_snorm_unpack_rgba_float
00000000001ff770 00000000000000c0 t util_format_l16_snorm_pack_rgba_float
00000000001ff830 000000000000002c t util_format_l16_snorm_fetch_rgba_float
00000000001ff860 000000000000007c t util_format_l16_snorm_unpack_rgba_8unorm
00000000001ff8e0 0000000000000074 t util_format_l16_snorm_pack_rgba_8unorm
00000000001ff960 0000000000000088 t util_format_l16a16_snorm_unpack_rgba_float
00000000001ff9f0 0000000000000114 t util_format_l16a16_snorm_pack_rgba_float
00000000001ffb10 0000000000000038 t util_format_l16a16_snorm_fetch_rgba_float
00000000001ffb50 000000000000008c t util_format_l16a16_snorm_unpack_rgba_8unorm
00000000001ffbe0 000000000000008c t util_format_l16a16_snorm_pack_rgba_8unorm
00000000001ffc70 0000000000000074 t util_format_i16_snorm_unpack_rgba_float
00000000001ffcf0 0000000000000024 t util_format_i16_snorm_fetch_rgba_float
00000000001ffd20 000000000000007c t util_format_i16_snorm_unpack_rgba_8unorm
00000000001ffda0 00000000000000a8 t util_format_a16_float_unpack_rgba_float
00000000001ffe50 0000000000000060 t util_format_a16_float_fetch_rgba_float
00000000001ffeb0 00000000000000a8 t util_format_l16_float_unpack_rgba_float
00000000001fff60 0000000000000070 t util_format_l16_float_fetch_rgba_float
00000000001fffd0 00000000000000dc t util_format_l16a16_float_unpack_rgba_float
00000000002000b0 00000000000000a4 t util_format_l16a16_float_fetch_rgba_float
0000000000200160 00000000000000a8 t util_format_i16_float_unpack_rgba_float
0000000000200210 0000000000000068 t util_format_i16_float_fetch_rgba_float
0000000000200280 0000000000000068 t util_format_a32_float_unpack_rgba_float
00000000002002f0 0000000000000054 t util_format_a32_float_pack_rgba_float
0000000000200350 0000000000000014 t util_format_a32_float_fetch_rgba_float
0000000000200370 000000000000006c t util_format_a32_float_pack_rgba_8unorm
00000000002003e0 0000000000000068 t util_format_l32_float_unpack_rgba_float
0000000000200450 0000000000000054 t util_format_l32_float_pack_rgba_float
00000000002004b0 0000000000000014 t util_format_l32_float_fetch_rgba_float
00000000002004d0 0000000000000064 t util_format_l32_float_pack_rgba_8unorm
0000000000200540 0000000000000070 t util_format_l32a32_float_unpack_rgba_float
00000000002005b0 000000000000006c t util_format_l32a32_float_pack_rgba_float
0000000000200620 000000000000001c t util_format_l32a32_float_fetch_rgba_float
0000000000200640 000000000000008c t util_format_l32a32_float_pack_rgba_8unorm
00000000002006d0 0000000000000068 t util_format_i32_float_unpack_rgba_float
0000000000200740 0000000000000010 t util_format_i32_float_fetch_rgba_float
0000000000200750 0000000000000070 t util_format_l8_srgb_unpack_rgba_float
00000000002007c0 0000000000000024 t util_format_l8_srgb_fetch_rgba_float
00000000002007f0 0000000000000078 t util_format_l8_srgb_unpack_rgba_8unorm
0000000000200870 0000000000000068 t util_format_l8_srgb_pack_rgba_8unorm
00000000002008e0 0000000000000074 t util_format_r8_srgb_unpack_rgba_float
0000000000200960 0000000000000024 t util_format_r8_srgb_fetch_rgba_float
0000000000200990 0000000000000078 t util_format_r8_srgb_unpack_rgba_8unorm
0000000000200a10 000000000000008c t util_format_l8a8_srgb_unpack_rgba_float
0000000000200aa0 000000000000003c t util_format_l8a8_srgb_fetch_rgba_float
0000000000200ae0 0000000000000080 t util_format_l8a8_srgb_unpack_rgba_8unorm
0000000000200b60 0000000000000078 t util_format_l8a8_srgb_pack_rgba_8unorm
0000000000200be0 0000000000000080 t util_format_r8g8_srgb_unpack_rgba_float
0000000000200c60 000000000000002c t util_format_r8g8_srgb_fetch_rgba_float
0000000000200c90 0000000000000084 t util_format_r8g8_srgb_unpack_rgba_8unorm
0000000000200d20 0000000000000078 t util_format_r8g8_srgb_pack_rgba_8unorm
0000000000200da0 0000000000000080 t util_format_r8g8b8_srgb_unpack_rgba_float
0000000000200e20 0000000000000034 t util_format_r8g8b8_srgb_fetch_rgba_float
0000000000200e60 0000000000000088 t util_format_r8g8b8_srgb_unpack_rgba_8unorm
0000000000200ef0 0000000000000084 t util_format_r8g8b8_srgb_pack_rgba_8unorm
0000000000200f80 0000000000000084 t util_format_b8g8r8_srgb_unpack_rgba_float
0000000000201010 0000000000000034 t util_format_b8g8r8_srgb_fetch_rgba_float
0000000000201050 000000000000008c t util_format_b8g8r8_srgb_unpack_rgba_8unorm
00000000002010e0 0000000000000088 t util_format_b8g8r8_srgb_pack_rgba_8unorm
0000000000201170 000000000000009c t util_format_r8g8b8a8_srgb_unpack_rgba_float
0000000000201210 000000000000004c t util_format_r8g8b8a8_srgb_fetch_rgba_float
0000000000201260 0000000000000090 t util_format_r8g8b8a8_srgb_unpack_rgba_8unorm
00000000002012f0 0000000000000090 t util_format_r8g8b8a8_srgb_pack_rgba_8unorm
0000000000201380 000000000000009c t util_format_a8b8g8r8_srgb_unpack_rgba_float
0000000000201420 000000000000004c t util_format_a8b8g8r8_srgb_fetch_rgba_float
0000000000201470 000000000000008c t util_format_a8b8g8r8_srgb_unpack_rgba_8unorm
0000000000201500 0000000000000090 t util_format_a8b8g8r8_srgb_pack_rgba_8unorm
0000000000201590 0000000000000084 t util_format_x8b8g8r8_srgb_unpack_rgba_float
0000000000201620 0000000000000038 t util_format_x8b8g8r8_srgb_fetch_rgba_float
0000000000201660 000000000000008c t util_format_x8b8g8r8_srgb_unpack_rgba_8unorm
00000000002016f0 0000000000000084 t util_format_x8b8g8r8_srgb_pack_rgba_8unorm
0000000000201780 000000000000009c t util_format_b8g8r8a8_srgb_unpack_rgba_float
0000000000201820 000000000000004c t util_format_b8g8r8a8_srgb_fetch_rgba_float
0000000000201870 0000000000000090 t util_format_b8g8r8a8_srgb_unpack_rgba_8unorm
0000000000201900 0000000000000090 t util_format_b8g8r8a8_srgb_pack_rgba_8unorm
0000000000201990 0000000000000084 t util_format_b8g8r8x8_srgb_unpack_rgba_float
0000000000201a20 0000000000000038 t util_format_b8g8r8x8_srgb_fetch_rgba_float
0000000000201a60 000000000000008c t util_format_b8g8r8x8_srgb_unpack_rgba_8unorm
0000000000201af0 0000000000000088 t util_format_b8g8r8x8_srgb_pack_rgba_8unorm
0000000000201b80 000000000000009c t util_format_a8r8g8b8_srgb_unpack_rgba_float
0000000000201c20 000000000000004c t util_format_a8r8g8b8_srgb_fetch_rgba_float
0000000000201c70 000000000000008c t util_format_a8r8g8b8_srgb_unpack_rgba_8unorm
0000000000201d00 0000000000000090 t util_format_a8r8g8b8_srgb_pack_rgba_8unorm
0000000000201d90 0000000000000084 t util_format_x8r8g8b8_srgb_unpack_rgba_float
0000000000201e20 0000000000000038 t util_format_x8r8g8b8_srgb_fetch_rgba_float
0000000000201e60 000000000000008c t util_format_x8r8g8b8_srgb_unpack_rgba_8unorm
0000000000201ef0 0000000000000088 t util_format_x8r8g8b8_srgb_pack_rgba_8unorm
0000000000201f80 00000000000000a0 t util_format_r8sg8sb8ux8u_norm_unpack_rgba_float
0000000000202020 0000000000000054 t util_format_r8sg8sb8ux8u_norm_fetch_rgba_float
0000000000202080 00000000000000c8 t util_format_r8sg8sb8ux8u_norm_unpack_rgba_8unorm
0000000000202150 0000000000000078 t util_format_r8sg8sb8ux8u_norm_pack_rgba_8unorm
00000000002021d0 00000000000000b0 t util_format_r10sg10sb10sa2u_norm_unpack_rgba_float
0000000000202280 00000000000001b0 t util_format_r10sg10sb10sa2u_norm_pack_rgba_float
0000000000202430 000000000000005c t util_format_r10sg10sb10sa2u_norm_fetch_rgba_float
0000000000202490 00000000000000b8 t util_format_r10sg10sb10sa2u_norm_unpack_rgba_8unorm
0000000000202550 00000000000000b8 t util_format_r10sg10sb10sa2u_norm_pack_rgba_8unorm
0000000000202610 00000000000000a4 t util_format_r5sg5sb6u_norm_unpack_rgba_float
00000000002026c0 0000000000000160 t util_format_r5sg5sb6u_norm_pack_rgba_float
0000000000202820 0000000000000058 t util_format_r5sg5sb6u_norm_fetch_rgba_float
0000000000202880 00000000000000d4 t util_format_r5sg5sb6u_norm_unpack_rgba_8unorm
0000000000202960 000000000000007c t util_format_r5sg5sb6u_norm_pack_rgba_8unorm
00000000002029e0 00000000000000a4 t util_format_z24_unorm_s8_uint_as_r8g8b8a8_unpack_rgba_float
0000000000202a90 0000000000000054 t util_format_z24_unorm_s8_uint_as_r8g8b8a8_fetch_rgba_float
0000000000202af0 0000000000000078 t util_format_z24_unorm_s8_uint_as_r8g8b8a8_unpack_rgba_8unorm
0000000000202b70 0000000000000044 t util_format_z24_unorm_s8_uint_as_r8g8b8a8_pack_rgba_8unorm
0000000000202bc0 000000000000006c t util_format_r64_float_unpack_rgba_float
0000000000202c30 000000000000004c t util_format_r64_float_pack_rgba_float
0000000000202c80 000000000000001c t util_format_r64_float_fetch_rgba_float
0000000000202ca0 00000000000000d4 t util_format_r64_float_unpack_rgba_8unorm
0000000000202d80 0000000000000064 t util_format_r64_float_pack_rgba_8unorm
0000000000202df0 0000000000000074 t util_format_r64g64_float_unpack_rgba_float
0000000000202e70 000000000000006c t util_format_r64g64_float_pack_rgba_float
0000000000202ee0 000000000000001c t util_format_r64g64_float_fetch_rgba_float
0000000000202f00 0000000000000128 t util_format_r64g64_float_unpack_rgba_8unorm
0000000000203030 0000000000000088 t util_format_r64g64_float_pack_rgba_8unorm
00000000002030c0 0000000000000068 t util_format_r32_float_unpack_rgba_float
0000000000203130 0000000000000018 t util_format_r32_float_fetch_rgba_float
0000000000203150 0000000000000074 t util_format_r32g32_float_unpack_rgba_float
00000000002031d0 0000000000000068 t util_format_r32g32_float_pack_rgba_float
0000000000203240 000000000000001c t util_format_r32g32_float_fetch_rgba_float
0000000000203260 000000000000008c t util_format_r32g32_float_pack_rgba_8unorm
00000000002032f0 000000000000007c t util_format_r32g32b32a32_float_unpack_rgba_float
0000000000203370 000000000000007c t util_format_r32g32b32a32_float_pack_rgba_float
00000000002033f0 0000000000000024 t util_format_r32g32b32a32_float_fetch_rgba_float
0000000000203420 00000000000000b8 t util_format_r32g32b32a32_float_pack_rgba_8unorm
00000000002034e0 0000000000000084 t util_format_r32_unorm_unpack_rgba_float
0000000000203570 000000000000008c t util_format_r32_unorm_pack_rgba_float
0000000000203600 0000000000000030 t util_format_r32_unorm_fetch_rgba_float
0000000000203630 0000000000000070 t util_format_r32_unorm_unpack_rgba_8unorm
00000000002036a0 000000000000006c t util_format_r32_unorm_pack_rgba_8unorm
0000000000203710 0000000000000094 t util_format_r32g32_unorm_unpack_rgba_float
00000000002037b0 00000000000000cc t util_format_r32g32_unorm_pack_rgba_float
0000000000203880 000000000000003c t util_format_r32g32_unorm_fetch_rgba_float
00000000002038c0 0000000000000074 t util_format_r32g32_unorm_unpack_rgba_8unorm
0000000000203940 0000000000000094 t util_format_r32g32_unorm_pack_rgba_8unorm
00000000002039e0 00000000000000a8 t util_format_r32g32b32a32_unorm_unpack_rgba_float
0000000000203a90 0000000000000134 t util_format_r32g32b32a32_unorm_pack_rgba_float
0000000000203bd0 0000000000000054 t util_format_r32g32b32a32_unorm_fetch_rgba_float
0000000000203c30 0000000000000080 t util_format_r32g32b32a32_unorm_unpack_rgba_8unorm
0000000000203cb0 00000000000000c8 t util_format_r32g32b32a32_unorm_pack_rgba_8unorm
0000000000203d80 000000000000006c t util_format_r32_uscaled_unpack_rgba_float
0000000000203df0 0000000000000078 t util_format_r32_uscaled_pack_rgba_float
0000000000203e70 000000000000001c t util_format_r32_uscaled_fetch_rgba_float
0000000000203e90 0000000000000074 t util_format_r32_uscaled_unpack_rgba_8unorm
0000000000203f10 0000000000000064 t util_format_r32_uscaled_pack_rgba_8unorm
0000000000203f80 0000000000000074 t util_format_r32g32_uscaled_unpack_rgba_float
0000000000204000 00000000000000ac t util_format_r32g32_uscaled_pack_rgba_float
00000000002040b0 0000000000000020 t util_format_r32g32_uscaled_fetch_rgba_float
00000000002040d0 000000000000007c t util_format_r32g32_uscaled_unpack_rgba_8unorm
0000000000204150 0000000000000084 t util_format_r32g32_uscaled_pack_rgba_8unorm
00000000002041e0 0000000000000080 t util_format_r32g32b32a32_uscaled_unpack_rgba_float
0000000000204260 00000000000000fc t util_format_r32g32b32a32_uscaled_pack_rgba_float
0000000000204360 0000000000000028 t util_format_r32g32b32a32_uscaled_fetch_rgba_float
0000000000204390 0000000000000090 t util_format_r32g32b32a32_uscaled_unpack_rgba_8unorm
0000000000204420 00000000000000a8 t util_format_r32g32b32a32_uscaled_pack_rgba_8unorm
00000000002044d0 0000000000000084 t util_format_r32_snorm_unpack_rgba_float
0000000000204560 000000000000008c t util_format_r32_snorm_pack_rgba_float
00000000002045f0 0000000000000030 t util_format_r32_snorm_fetch_rgba_float
0000000000204620 0000000000000078 t util_format_r32_snorm_unpack_rgba_8unorm
00000000002046a0 000000000000006c t util_format_r32_snorm_pack_rgba_8unorm
0000000000204710 0000000000000094 t util_format_r32g32_snorm_unpack_rgba_float
00000000002047b0 00000000000000cc t util_format_r32g32_snorm_pack_rgba_float
0000000000204880 000000000000003c t util_format_r32g32_snorm_fetch_rgba_float
00000000002048c0 0000000000000088 t util_format_r32g32_snorm_unpack_rgba_8unorm
0000000000204950 0000000000000094 t util_format_r32g32_snorm_pack_rgba_8unorm
00000000002049f0 00000000000000a8 t util_format_r32g32b32a32_snorm_unpack_rgba_float
0000000000204aa0 0000000000000134 t util_format_r32g32b32a32_snorm_pack_rgba_float
0000000000204be0 0000000000000054 t util_format_r32g32b32a32_snorm_fetch_rgba_float
0000000000204c40 00000000000000a8 t util_format_r32g32b32a32_snorm_unpack_rgba_8unorm
0000000000204cf0 00000000000000c8 t util_format_r32g32b32a32_snorm_pack_rgba_8unorm
0000000000204dc0 000000000000006c t util_format_r32_sscaled_unpack_rgba_float
0000000000204e30 0000000000000078 t util_format_r32_sscaled_pack_rgba_float
0000000000204eb0 000000000000001c t util_format_r32_sscaled_fetch_rgba_float
0000000000204ed0 0000000000000074 t util_format_r32_sscaled_unpack_rgba_8unorm
0000000000204f50 0000000000000074 t util_format_r32g32_sscaled_unpack_rgba_float
0000000000204fd0 00000000000000ac t util_format_r32g32_sscaled_pack_rgba_float
0000000000205080 0000000000000020 t util_format_r32g32_sscaled_fetch_rgba_float
00000000002050a0 0000000000000080 t util_format_r32g32_sscaled_unpack_rgba_8unorm
0000000000205120 0000000000000084 t util_format_r32g32_sscaled_pack_rgba_8unorm
00000000002051b0 0000000000000080 t util_format_r32g32b32a32_sscaled_unpack_rgba_float
0000000000205230 00000000000000fc t util_format_r32g32b32a32_sscaled_pack_rgba_float
0000000000205330 0000000000000028 t util_format_r32g32b32a32_sscaled_fetch_rgba_float
0000000000205360 0000000000000098 t util_format_r32g32b32a32_sscaled_unpack_rgba_8unorm
0000000000205400 00000000000000a8 t util_format_r32g32b32a32_sscaled_pack_rgba_8unorm
00000000002054b0 00000000000000ac t util_format_r16_float_unpack_rgba_float
0000000000205560 0000000000000070 t util_format_r16_float_fetch_rgba_float
00000000002055d0 00000000000000e0 t util_format_r16g16_float_unpack_rgba_float
00000000002056b0 00000000000000ac t util_format_r16g16_float_fetch_rgba_float
0000000000205760 0000000000000144 t util_format_r16g16b16a16_float_unpack_rgba_float
00000000002058b0 0000000000000128 t util_format_r16g16b16a16_float_fetch_rgba_float
00000000002059e0 0000000000000080 t util_format_r16_unorm_unpack_rgba_float
0000000000205a60 000000000000002c t util_format_r16_unorm_fetch_rgba_float
0000000000205a90 0000000000000070 t util_format_r16_unorm_unpack_rgba_8unorm
0000000000205b00 0000000000000094 t util_format_r16g16_unorm_unpack_rgba_float
0000000000205ba0 0000000000000104 t util_format_r16g16_unorm_pack_rgba_float
0000000000205cb0 000000000000003c t util_format_r16g16_unorm_fetch_rgba_float
0000000000205cf0 0000000000000074 t util_format_r16g16_unorm_unpack_rgba_8unorm
0000000000205d70 000000000000008c t util_format_r16g16_unorm_pack_rgba_8unorm
0000000000205e00 00000000000000a8 t util_format_r16g16b16a16_unorm_unpack_rgba_float
0000000000205eb0 00000000000001ac t util_format_r16g16b16a16_unorm_pack_rgba_float
0000000000206060 0000000000000058 t util_format_r16g16b16a16_unorm_fetch_rgba_float
00000000002060c0 000000000000007c t util_format_r16g16b16a16_unorm_unpack_rgba_8unorm
0000000000206140 00000000000000c4 t util_format_r16g16b16a16_unorm_pack_rgba_8unorm
0000000000206210 000000000000006c t util_format_r16_uscaled_unpack_rgba_float
0000000000206280 0000000000000090 t util_format_r16_uscaled_pack_rgba_float
0000000000206310 000000000000001c t util_format_r16_uscaled_fetch_rgba_float
0000000000206330 0000000000000074 t util_format_r16_uscaled_unpack_rgba_8unorm
00000000002063b0 000000000000006c t util_format_r16_uscaled_pack_rgba_8unorm
0000000000206420 000000000000007c t util_format_r16g16_uscaled_unpack_rgba_float
00000000002064a0 00000000000000b0 t util_format_r16g16_uscaled_pack_rgba_float
0000000000206550 000000000000002c t util_format_r16g16_uscaled_fetch_rgba_float
0000000000206580 000000000000007c t util_format_r16g16_uscaled_unpack_rgba_8unorm
0000000000206600 000000000000007c t util_format_r16g16_uscaled_pack_rgba_8unorm
0000000000206680 0000000000000090 t util_format_r16g16b16a16_uscaled_unpack_rgba_float
0000000000206710 000000000000010c t util_format_r16g16b16a16_uscaled_pack_rgba_float
0000000000206820 000000000000003c t util_format_r16g16b16a16_uscaled_fetch_rgba_float
0000000000206860 000000000000008c t util_format_r16g16b16a16_uscaled_unpack_rgba_8unorm
00000000002068f0 00000000000000a4 t util_format_r16g16b16a16_uscaled_pack_rgba_8unorm
00000000002069a0 0000000000000080 t util_format_r16_snorm_unpack_rgba_float
0000000000206a20 000000000000002c t util_format_r16_snorm_fetch_rgba_float
0000000000206a50 000000000000007c t util_format_r16_snorm_unpack_rgba_8unorm
0000000000206ad0 0000000000000094 t util_format_r16g16_snorm_unpack_rgba_float
0000000000206b70 0000000000000114 t util_format_r16g16_snorm_pack_rgba_float
0000000000206c90 000000000000003c t util_format_r16g16_snorm_fetch_rgba_float
0000000000206cd0 000000000000008c t util_format_r16g16_snorm_unpack_rgba_8unorm
0000000000206d60 000000000000008c t util_format_r16g16_snorm_pack_rgba_8unorm
0000000000206df0 00000000000000a4 t util_format_r16g16b16a16_snorm_unpack_rgba_float
0000000000206ea0 00000000000001b4 t util_format_r16g16b16a16_snorm_pack_rgba_float
0000000000207060 0000000000000054 t util_format_r16g16b16a16_snorm_fetch_rgba_float
00000000002070c0 00000000000000ac t util_format_r16g16b16a16_snorm_unpack_rgba_8unorm
0000000000207170 00000000000000c4 t util_format_r16g16b16a16_snorm_pack_rgba_8unorm
0000000000207240 000000000000006c t util_format_r16_sscaled_unpack_rgba_float
00000000002072b0 0000000000000090 t util_format_r16_sscaled_pack_rgba_float
0000000000207340 000000000000001c t util_format_r16_sscaled_fetch_rgba_float
0000000000207360 0000000000000074 t util_format_r16_sscaled_unpack_rgba_8unorm
00000000002073e0 000000000000007c t util_format_r16g16_sscaled_unpack_rgba_float
0000000000207460 00000000000000c0 t util_format_r16g16_sscaled_pack_rgba_float
0000000000207520 000000000000002c t util_format_r16g16_sscaled_fetch_rgba_float
0000000000207550 0000000000000084 t util_format_r16g16_sscaled_unpack_rgba_8unorm
00000000002075e0 000000000000007c t util_format_r16g16_sscaled_pack_rgba_8unorm
0000000000207660 000000000000008c t util_format_r16g16b16a16_sscaled_unpack_rgba_float
00000000002076f0 000000000000010c t util_format_r16g16b16a16_sscaled_pack_rgba_float
0000000000207800 0000000000000038 t util_format_r16g16b16a16_sscaled_fetch_rgba_float
0000000000207840 000000000000009c t util_format_r16g16b16a16_sscaled_unpack_rgba_8unorm
00000000002078e0 00000000000000a4 t util_format_r16g16b16a16_sscaled_pack_rgba_8unorm
0000000000207990 0000000000000080 t util_format_r8_unorm_unpack_rgba_float
0000000000207a10 000000000000002c t util_format_r8_unorm_fetch_rgba_float
0000000000207a40 000000000000006c t util_format_r8_unorm_unpack_rgba_8unorm
0000000000207ab0 0000000000000098 t util_format_r8g8_unorm_unpack_rgba_float
0000000000207b50 0000000000000040 t util_format_r8g8_unorm_fetch_rgba_float
0000000000207b90 0000000000000070 t util_format_r8g8_unorm_unpack_rgba_8unorm
0000000000207c00 0000000000000054 t util_format_r8g8_unorm_pack_rgba_8unorm
0000000000207c60 0000000000000094 t util_format_r8g8b8_unorm_unpack_rgba_float
0000000000207d00 0000000000000040 t util_format_r8g8b8_unorm_fetch_rgba_float
0000000000207d40 0000000000000078 t util_format_r8g8b8_unorm_unpack_rgba_8unorm
0000000000207dc0 0000000000000074 t util_format_r8g8b8_unorm_pack_rgba_8unorm
0000000000207e40 0000000000000098 t util_format_b8g8r8_unorm_unpack_rgba_float
0000000000207ee0 0000000000000040 t util_format_b8g8r8_unorm_fetch_rgba_float
0000000000207f20 0000000000000078 t util_format_b8g8r8_unorm_unpack_rgba_8unorm
0000000000207fa0 0000000000000070 t util_format_b8g8r8_unorm_pack_rgba_8unorm
0000000000208010 0000000000000080 t util_format_r8g8_uscaled_unpack_rgba_float
0000000000208090 00000000000000b0 t util_format_r8g8_uscaled_pack_rgba_float
0000000000208140 0000000000000030 t util_format_r8g8_uscaled_fetch_rgba_float
0000000000208170 000000000000007c t util_format_r8g8_uscaled_unpack_rgba_8unorm
00000000002081f0 000000000000007c t util_format_r8g8_uscaled_pack_rgba_8unorm
0000000000208270 0000000000000078 t util_format_r8g8b8_uscaled_unpack_rgba_float
00000000002082f0 00000000000000dc t util_format_r8g8b8_uscaled_pack_rgba_float
00000000002083d0 0000000000000028 t util_format_r8g8b8_uscaled_fetch_rgba_float
0000000000208400 000000000000008c t util_format_r8g8b8_uscaled_unpack_rgba_8unorm
0000000000208490 0000000000000090 t util_format_r8g8b8_uscaled_pack_rgba_8unorm
0000000000208520 000000000000007c t util_format_b8g8r8_uscaled_unpack_rgba_float
00000000002085a0 00000000000000dc t util_format_b8g8r8_uscaled_pack_rgba_float
0000000000208680 0000000000000028 t util_format_b8g8r8_uscaled_fetch_rgba_float
00000000002086b0 0000000000000090 t util_format_b8g8r8_uscaled_unpack_rgba_8unorm
0000000000208740 0000000000000094 t util_format_b8g8r8_uscaled_pack_rgba_8unorm
00000000002087e0 0000000000000088 t util_format_r8g8b8a8_uscaled_unpack_rgba_float
0000000000208870 00000000000000fc t util_format_r8g8b8a8_uscaled_pack_rgba_float
0000000000208970 0000000000000034 t util_format_r8g8b8a8_uscaled_fetch_rgba_float
00000000002089b0 000000000000008c t util_format_r8g8b8a8_uscaled_unpack_rgba_8unorm
0000000000208a40 00000000000000a0 t util_format_r8g8b8a8_uscaled_pack_rgba_8unorm
0000000000208ae0 0000000000000088 t util_format_b8g8r8a8_uscaled_unpack_rgba_float
0000000000208b70 00000000000000fc t util_format_b8g8r8a8_uscaled_pack_rgba_float
0000000000208c70 0000000000000034 t util_format_b8g8r8a8_uscaled_fetch_rgba_float
0000000000208cb0 000000000000008c t util_format_b8g8r8a8_uscaled_unpack_rgba_8unorm
0000000000208d40 00000000000000a4 t util_format_b8g8r8a8_uscaled_pack_rgba_8unorm
0000000000208df0 0000000000000088 t util_format_a8b8g8r8_uscaled_unpack_rgba_float
0000000000208e80 00000000000000fc t util_format_a8b8g8r8_uscaled_pack_rgba_float
0000000000208f80 0000000000000034 t util_format_a8b8g8r8_uscaled_fetch_rgba_float
0000000000208fc0 000000000000008c t util_format_a8b8g8r8_uscaled_unpack_rgba_8unorm
0000000000209050 00000000000000a4 t util_format_a8b8g8r8_uscaled_pack_rgba_8unorm
0000000000209100 0000000000000080 t util_format_r8_snorm_unpack_rgba_float
0000000000209180 000000000000002c t util_format_r8_snorm_fetch_rgba_float
00000000002091b0 000000000000009c t util_format_r8_snorm_unpack_rgba_8unorm
0000000000209250 0000000000000090 t util_format_r8g8_snorm_unpack_rgba_float
00000000002092e0 0000000000000108 t util_format_r8g8_snorm_pack_rgba_float
00000000002093f0 0000000000000038 t util_format_r8g8_snorm_fetch_rgba_float
0000000000209430 00000000000000c4 t util_format_r8g8_snorm_unpack_rgba_8unorm
0000000000209500 0000000000000070 t util_format_r8g8_snorm_pack_rgba_8unorm
0000000000209570 0000000000000094 t util_format_r8g8b8_snorm_unpack_rgba_float
0000000000209610 000000000000015c t util_format_r8g8b8_snorm_pack_rgba_float
0000000000209770 0000000000000044 t util_format_r8g8b8_snorm_fetch_rgba_float
00000000002097c0 00000000000000ec t util_format_r8g8b8_snorm_unpack_rgba_8unorm
00000000002098b0 000000000000007c t util_format_r8g8b8_snorm_pack_rgba_8unorm
0000000000209930 0000000000000098 t util_format_b8g8r8_snorm_unpack_rgba_float
00000000002099d0 000000000000015c t util_format_b8g8r8_snorm_pack_rgba_float
0000000000209b30 0000000000000044 t util_format_b8g8r8_snorm_fetch_rgba_float
0000000000209b80 00000000000000f0 t util_format_b8g8r8_snorm_unpack_rgba_8unorm
0000000000209c70 0000000000000080 t util_format_b8g8r8_snorm_pack_rgba_8unorm
0000000000209cf0 00000000000000a0 t util_format_r8g8b8a8_snorm_unpack_rgba_float
0000000000209d90 00000000000001b0 t util_format_r8g8b8a8_snorm_pack_rgba_float
0000000000209f40 0000000000000050 t util_format_r8g8b8a8_snorm_fetch_rgba_float
0000000000209f90 0000000000000114 t util_format_r8g8b8a8_snorm_unpack_rgba_8unorm
000000000020a0b0 0000000000000088 t util_format_r8g8b8a8_snorm_pack_rgba_8unorm
000000000020a140 00000000000000a0 t util_format_b8g8r8a8_snorm_unpack_rgba_float
000000000020a1e0 00000000000001b0 t util_format_b8g8r8a8_snorm_pack_rgba_float
000000000020a390 0000000000000050 t util_format_b8g8r8a8_snorm_fetch_rgba_float
000000000020a3e0 0000000000000114 t util_format_b8g8r8a8_snorm_unpack_rgba_8unorm
000000000020a500 000000000000008c t util_format_b8g8r8a8_snorm_pack_rgba_8unorm
000000000020a590 000000000000006c t util_format_r8_sscaled_unpack_rgba_float
000000000020a600 0000000000000090 t util_format_r8_sscaled_pack_rgba_float
000000000020a690 000000000000001c t util_format_r8_sscaled_fetch_rgba_float
000000000020a6b0 0000000000000074 t util_format_r8_sscaled_unpack_rgba_8unorm
000000000020a730 0000000000000078 t util_format_r8g8_sscaled_unpack_rgba_float
000000000020a7b0 00000000000000b8 t util_format_r8g8_sscaled_pack_rgba_float
000000000020a870 0000000000000024 t util_format_r8g8_sscaled_fetch_rgba_float
000000000020a8a0 0000000000000084 t util_format_r8g8_sscaled_unpack_rgba_8unorm
000000000020a930 0000000000000080 t util_format_r8g8_sscaled_pack_rgba_8unorm
000000000020a9b0 0000000000000078 t util_format_r8g8b8_sscaled_unpack_rgba_float
000000000020aa30 00000000000000e4 t util_format_r8g8b8_sscaled_pack_rgba_float
000000000020ab20 000000000000002c t util_format_r8g8b8_sscaled_fetch_rgba_float
000000000020ab50 000000000000008c t util_format_r8g8b8_sscaled_unpack_rgba_8unorm
000000000020abe0 0000000000000090 t util_format_r8g8b8_sscaled_pack_rgba_8unorm
000000000020ac70 000000000000007c t util_format_b8g8r8_sscaled_unpack_rgba_float
000000000020acf0 00000000000000e4 t util_format_b8g8r8_sscaled_pack_rgba_float
000000000020ade0 000000000000002c t util_format_b8g8r8_sscaled_fetch_rgba_float
000000000020ae10 0000000000000090 t util_format_b8g8r8_sscaled_unpack_rgba_8unorm
000000000020aea0 0000000000000094 t util_format_b8g8r8_sscaled_pack_rgba_8unorm
000000000020af40 0000000000000088 t util_format_r8g8b8a8_sscaled_unpack_rgba_float
000000000020afd0 0000000000000114 t util_format_r8g8b8a8_sscaled_pack_rgba_float
000000000020b0f0 0000000000000034 t util_format_r8g8b8a8_sscaled_fetch_rgba_float
000000000020b130 000000000000009c t util_format_r8g8b8a8_sscaled_unpack_rgba_8unorm
000000000020b1d0 00000000000000a0 t util_format_r8g8b8a8_sscaled_pack_rgba_8unorm
000000000020b270 0000000000000088 t util_format_b8g8r8a8_sscaled_unpack_rgba_float
000000000020b300 0000000000000114 t util_format_b8g8r8a8_sscaled_pack_rgba_float
000000000020b420 0000000000000034 t util_format_b8g8r8a8_sscaled_fetch_rgba_float
000000000020b460 000000000000009c t util_format_b8g8r8a8_sscaled_unpack_rgba_8unorm
000000000020b500 00000000000000a4 t util_format_b8g8r8a8_sscaled_pack_rgba_8unorm
000000000020b5b0 0000000000000088 t util_format_a8b8g8r8_sscaled_unpack_rgba_float
000000000020b640 0000000000000114 t util_format_a8b8g8r8_sscaled_pack_rgba_float
000000000020b760 0000000000000034 t util_format_a8b8g8r8_sscaled_fetch_rgba_float
000000000020b7a0 000000000000009c t util_format_a8b8g8r8_sscaled_unpack_rgba_8unorm
000000000020b840 00000000000000a4 t util_format_a8b8g8r8_sscaled_pack_rgba_8unorm
000000000020b8f0 000000000000007c t util_format_r32_fixed_unpack_rgba_float
000000000020b970 0000000000000088 t util_format_r32_fixed_pack_rgba_float
000000000020ba00 0000000000000020 t util_format_r32_fixed_fetch_rgba_float
000000000020ba20 00000000000000d4 t util_format_r32_fixed_unpack_rgba_8unorm
000000000020bb00 000000000000006c t util_format_r32_fixed_pack_rgba_8unorm
000000000020bb70 000000000000008c t util_format_r32g32_fixed_unpack_rgba_float
000000000020bc00 00000000000000c4 t util_format_r32g32_fixed_pack_rgba_float
000000000020bcd0 0000000000000038 t util_format_r32g32_fixed_fetch_rgba_float
000000000020bd10 0000000000000124 t util_format_r32g32_fixed_unpack_rgba_8unorm
000000000020be40 0000000000000094 t util_format_r32g32_fixed_pack_rgba_8unorm
000000000020bee0 00000000000000a8 t util_format_r32g32b32a32_fixed_unpack_rgba_float
000000000020bf90 0000000000000124 t util_format_r32g32b32a32_fixed_pack_rgba_float
000000000020c0c0 0000000000000050 t util_format_r32g32b32a32_fixed_fetch_rgba_float
000000000020c110 00000000000001c0 t util_format_r32g32b32a32_fixed_unpack_rgba_8unorm
000000000020c2d0 00000000000000c8 t util_format_r32g32b32a32_fixed_pack_rgba_8unorm
000000000020c3a0 000000000000007c t util_format_r10g10b10x2_uscaled_unpack_rgba_float
000000000020c420 00000000000000e0 t util_format_r10g10b10x2_uscaled_pack_rgba_float
000000000020c500 0000000000000030 t util_format_r10g10b10x2_uscaled_fetch_rgba_float
000000000020c530 0000000000000084 t util_format_r10g10b10x2_uscaled_unpack_rgba_8unorm
000000000020c5c0 0000000000000090 t util_format_r10g10b10x2_uscaled_pack_rgba_8unorm
000000000020c650 0000000000000098 t util_format_r10g10b10x2_snorm_unpack_rgba_float
000000000020c6f0 0000000000000168 t util_format_r10g10b10x2_snorm_pack_rgba_float
000000000020c860 0000000000000048 t util_format_r10g10b10x2_snorm_fetch_rgba_float
000000000020c8b0 000000000000009c t util_format_r10g10b10x2_snorm_unpack_rgba_8unorm
000000000020c950 00000000000000a8 t util_format_r10g10b10x2_snorm_pack_rgba_8unorm
000000000020ca00 000000000000008c t util_format_a4r4_unorm_unpack_rgba_float
000000000020ca90 0000000000000100 t util_format_a4r4_unorm_pack_rgba_float
000000000020cb90 000000000000003c t util_format_a4r4_unorm_fetch_rgba_float
000000000020cbd0 000000000000009c t util_format_a4r4_unorm_unpack_rgba_8unorm
000000000020cc70 0000000000000070 t util_format_a4r4_unorm_pack_rgba_8unorm
000000000020cce0 000000000000008c t util_format_r4a4_unorm_unpack_rgba_float
000000000020cd70 000000000000003c t util_format_r4a4_unorm_fetch_rgba_float
000000000020cdb0 000000000000009c t util_format_r4a4_unorm_unpack_rgba_8unorm
000000000020ce50 0000000000000090 t util_format_r8a8_unorm_unpack_rgba_float
000000000020cee0 0000000000000040 t util_format_r8a8_unorm_fetch_rgba_float
000000000020cf20 0000000000000070 t util_format_r8a8_unorm_unpack_rgba_8unorm
000000000020cf90 0000000000000090 t util_format_a8r8_unorm_unpack_rgba_float
000000000020d020 0000000000000040 t util_format_a8r8_unorm_fetch_rgba_float
000000000020d060 0000000000000070 t util_format_a8r8_unorm_unpack_rgba_8unorm
000000000020d0d0 000000000000006c t util_format_a8r8_unorm_pack_rgba_8unorm
000000000020d140 0000000000000088 t util_format_r10g10b10a2_uscaled_unpack_rgba_float
000000000020d1d0 0000000000000104 t util_format_r10g10b10a2_uscaled_pack_rgba_float
000000000020d2e0 0000000000000034 t util_format_r10g10b10a2_uscaled_fetch_rgba_float
000000000020d320 000000000000008c t util_format_r10g10b10a2_uscaled_unpack_rgba_8unorm
000000000020d3b0 00000000000000a0 t util_format_r10g10b10a2_uscaled_pack_rgba_8unorm
000000000020d450 0000000000000088 t util_format_r10g10b10a2_sscaled_unpack_rgba_float
000000000020d4e0 000000000000010c t util_format_r10g10b10a2_sscaled_pack_rgba_float
000000000020d5f0 0000000000000034 t util_format_r10g10b10a2_sscaled_fetch_rgba_float
000000000020d630 00000000000000a0 t util_format_r10g10b10a2_sscaled_unpack_rgba_8unorm
000000000020d6d0 000000000000009c t util_format_r10g10b10a2_snorm_unpack_rgba_float
000000000020d770 00000000000001bc t util_format_r10g10b10a2_snorm_pack_rgba_float
000000000020d930 000000000000004c t util_format_r10g10b10a2_snorm_fetch_rgba_float
000000000020d980 00000000000000ac t util_format_r10g10b10a2_snorm_unpack_rgba_8unorm
000000000020da30 00000000000000b8 t util_format_r10g10b10a2_snorm_pack_rgba_8unorm
000000000020daf0 0000000000000088 t util_format_b10g10r10a2_uscaled_unpack_rgba_float
000000000020db80 0000000000000104 t util_format_b10g10r10a2_uscaled_pack_rgba_float
000000000020dc90 0000000000000034 t util_format_b10g10r10a2_uscaled_fetch_rgba_float
000000000020dcd0 000000000000008c t util_format_b10g10r10a2_uscaled_unpack_rgba_8unorm
000000000020dd60 00000000000000a4 t util_format_b10g10r10a2_uscaled_pack_rgba_8unorm
000000000020de10 0000000000000088 t util_format_b10g10r10a2_sscaled_unpack_rgba_float
000000000020dea0 000000000000010c t util_format_b10g10r10a2_sscaled_pack_rgba_float
000000000020dfb0 0000000000000034 t util_format_b10g10r10a2_sscaled_fetch_rgba_float
000000000020dff0 00000000000000a0 t util_format_b10g10r10a2_sscaled_unpack_rgba_8unorm
000000000020e090 000000000000009c t util_format_b10g10r10a2_snorm_unpack_rgba_float
000000000020e130 00000000000001bc t util_format_b10g10r10a2_snorm_pack_rgba_float
000000000020e2f0 000000000000004c t util_format_b10g10r10a2_snorm_fetch_rgba_float
000000000020e340 00000000000000ac t util_format_b10g10r10a2_snorm_unpack_rgba_8unorm
000000000020e3f0 00000000000000b8 t util_format_b10g10r10a2_snorm_pack_rgba_8unorm
000000000020e4b0 0000000000000064 t util_format_r8_uint_unpack_unsigned
000000000020e520 0000000000000064 t util_format_r8_uint_pack_unsigned
000000000020e590 0000000000000018 t util_format_r8_uint_fetch_unsigned
000000000020e5b0 0000000000000078 t util_format_r8_uint_pack_signed
000000000020e630 000000000000006c t util_format_r8g8_uint_unpack_unsigned
000000000020e6a0 0000000000000080 t util_format_r8g8_uint_pack_unsigned
000000000020e720 000000000000001c t util_format_r8g8_uint_fetch_unsigned
000000000020e740 0000000000000098 t util_format_r8g8_uint_pack_signed
000000000020e7e0 000000000000006c t util_format_r8g8b8_uint_unpack_unsigned
000000000020e850 0000000000000088 t util_format_r8g8b8_uint_pack_unsigned
000000000020e8e0 000000000000001c t util_format_r8g8b8_uint_fetch_unsigned
000000000020e900 00000000000000bc t util_format_r8g8b8_uint_pack_signed
000000000020e9c0 0000000000000074 t util_format_r8g8b8a8_uint_unpack_unsigned
000000000020ea40 00000000000000ac t util_format_r8g8b8a8_uint_pack_unsigned
000000000020eaf0 0000000000000020 t util_format_r8g8b8a8_uint_fetch_unsigned
000000000020eb10 00000000000000c8 t util_format_r8g8b8a8_uint_pack_signed
000000000020ebe0 0000000000000064 t util_format_r8_sint_unpack_signed
000000000020ec50 0000000000000078 t util_format_r8_sint_pack_signed
000000000020ecd0 0000000000000018 t util_format_r8_sint_fetch_signed
000000000020ecf0 0000000000000064 t util_format_r8_sint_pack_unsigned
000000000020ed60 000000000000006c t util_format_r8g8_sint_unpack_signed
000000000020edd0 00000000000000a0 t util_format_r8g8_sint_pack_signed
000000000020ee70 000000000000001c t util_format_r8g8_sint_fetch_signed
000000000020ee90 0000000000000080 t util_format_r8g8_sint_pack_unsigned
000000000020ef10 000000000000006c t util_format_r8g8b8_sint_unpack_signed
000000000020ef80 00000000000000bc t util_format_r8g8b8_sint_pack_signed
000000000020f040 000000000000001c t util_format_r8g8b8_sint_fetch_signed
000000000020f060 0000000000000088 t util_format_r8g8b8_sint_pack_unsigned
000000000020f0f0 0000000000000074 t util_format_r8g8b8a8_sint_unpack_signed
000000000020f170 00000000000000f8 t util_format_r8g8b8a8_sint_pack_signed
000000000020f270 0000000000000020 t util_format_r8g8b8a8_sint_fetch_signed
000000000020f290 00000000000000ac t util_format_r8g8b8a8_sint_pack_unsigned
000000000020f340 0000000000000064 t util_format_r16_uint_unpack_unsigned
000000000020f3b0 000000000000006c t util_format_r16_uint_pack_unsigned
000000000020f420 0000000000000018 t util_format_r16_uint_fetch_unsigned
000000000020f440 0000000000000078 t util_format_r16_uint_pack_signed
000000000020f4c0 000000000000006c t util_format_r16g16_uint_unpack_unsigned
000000000020f530 0000000000000088 t util_format_r16g16_uint_pack_unsigned
000000000020f5c0 000000000000001c t util_format_r16g16_uint_fetch_unsigned
000000000020f5e0 0000000000000094 t util_format_r16g16_uint_pack_signed
000000000020f680 0000000000000074 t util_format_r16g16b16a16_uint_unpack_unsigned
000000000020f700 00000000000000a0 t util_format_r16g16b16a16_uint_pack_unsigned
000000000020f7a0 0000000000000020 t util_format_r16g16b16a16_uint_fetch_unsigned
000000000020f7c0 00000000000000dc t util_format_r16g16b16a16_uint_pack_signed
000000000020f8a0 0000000000000064 t util_format_r16_sint_unpack_signed
000000000020f910 0000000000000080 t util_format_r16_sint_pack_signed
000000000020f990 0000000000000018 t util_format_r16_sint_fetch_signed
000000000020f9b0 000000000000006c t util_format_r16_sint_pack_unsigned
000000000020fa20 000000000000006c t util_format_r16g16_sint_unpack_signed
000000000020fa90 00000000000000a4 t util_format_r16g16_sint_pack_signed
000000000020fb40 000000000000001c t util_format_r16g16_sint_fetch_signed
000000000020fb60 0000000000000088 t util_format_r16g16_sint_pack_unsigned
000000000020fbf0 0000000000000074 t util_format_r16g16b16a16_sint_unpack_signed
000000000020fc70 00000000000000e4 t util_format_r16g16b16a16_sint_pack_signed
000000000020fd60 0000000000000020 t util_format_r16g16b16a16_sint_fetch_signed
000000000020fd80 00000000000000a0 t util_format_r16g16b16a16_sint_pack_unsigned
000000000020fe20 0000000000000064 t util_format_r32_uint_unpack_unsigned
000000000020fe90 0000000000000054 t util_format_r32_uint_pack_unsigned
000000000020fef0 0000000000000018 t util_format_r32_uint_fetch_unsigned
000000000020ff10 000000000000005c t util_format_r32_uint_pack_signed
000000000020ff70 0000000000000068 t util_format_r32g32_uint_unpack_unsigned
000000000020ffe0 0000000000000068 t util_format_r32g32_uint_pack_unsigned
0000000000210050 000000000000001c t util_format_r32g32_uint_fetch_unsigned
0000000000210070 0000000000000078 t util_format_r32g32_uint_pack_signed
00000000002100f0 0000000000000074 t util_format_r32g32b32a32_uint_unpack_unsigned
0000000000210170 000000000000007c t util_format_r32g32b32a32_uint_pack_unsigned
00000000002101f0 000000000000001c t util_format_r32g32b32a32_uint_fetch_unsigned
0000000000210210 000000000000009c t util_format_r32g32b32a32_uint_pack_signed
00000000002102b0 0000000000000064 t util_format_r32_sint_unpack_signed
0000000000210320 0000000000000054 t util_format_r32_sint_pack_signed
0000000000210380 0000000000000018 t util_format_r32_sint_fetch_signed
00000000002103a0 000000000000005c t util_format_r32_sint_pack_unsigned
0000000000210400 0000000000000068 t util_format_r32g32_sint_unpack_signed
0000000000210470 0000000000000068 t util_format_r32g32_sint_pack_signed
00000000002104e0 000000000000001c t util_format_r32g32_sint_fetch_signed
0000000000210500 0000000000000080 t util_format_r32g32_sint_pack_unsigned
0000000000210580 0000000000000074 t util_format_r32g32b32a32_sint_unpack_signed
0000000000210600 000000000000007c t util_format_r32g32b32a32_sint_pack_signed
0000000000210680 000000000000001c t util_format_r32g32b32a32_sint_fetch_signed
00000000002106a0 00000000000000a4 t util_format_r32g32b32a32_sint_pack_unsigned
0000000000210750 0000000000000064 t util_format_a8_uint_unpack_unsigned
00000000002107c0 0000000000000068 t util_format_a8_uint_pack_unsigned
0000000000210830 0000000000000010 t util_format_a8_uint_fetch_unsigned
0000000000210840 0000000000000078 t util_format_a8_uint_pack_signed
00000000002108c0 0000000000000064 t util_format_i8_uint_unpack_unsigned
0000000000210930 0000000000000010 t util_format_i8_uint_fetch_unsigned
0000000000210940 0000000000000064 t util_format_l8_uint_unpack_unsigned
00000000002109b0 0000000000000014 t util_format_l8_uint_fetch_unsigned
00000000002109d0 000000000000006c t util_format_l8a8_uint_unpack_unsigned
0000000000210a40 0000000000000084 t util_format_l8a8_uint_pack_unsigned
0000000000210ad0 0000000000000018 t util_format_l8a8_uint_fetch_unsigned
0000000000210af0 0000000000000098 t util_format_l8a8_uint_pack_signed
0000000000210b90 0000000000000064 t util_format_a8_sint_unpack_signed
0000000000210c00 0000000000000078 t util_format_a8_sint_pack_signed
0000000000210c80 0000000000000010 t util_format_a8_sint_fetch_signed
0000000000210c90 0000000000000068 t util_format_a8_sint_pack_unsigned
0000000000210d00 0000000000000064 t util_format_i8_sint_unpack_signed
0000000000210d70 0000000000000010 t util_format_i8_sint_fetch_signed
0000000000210d80 0000000000000064 t util_format_l8_sint_unpack_signed
0000000000210df0 0000000000000014 t util_format_l8_sint_fetch_signed
0000000000210e10 000000000000006c t util_format_l8a8_sint_unpack_signed
0000000000210e80 00000000000000a0 t util_format_l8a8_sint_pack_signed
0000000000210f20 0000000000000018 t util_format_l8a8_sint_fetch_signed
0000000000210f40 0000000000000084 t util_format_l8a8_sint_pack_unsigned
0000000000210fd0 0000000000000064 t util_format_a16_uint_unpack_unsigned
0000000000211040 0000000000000070 t util_format_a16_uint_pack_unsigned
00000000002110b0 0000000000000010 t util_format_a16_uint_fetch_unsigned
00000000002110c0 0000000000000078 t util_format_a16_uint_pack_signed
0000000000211140 0000000000000064 t util_format_i16_uint_unpack_unsigned
00000000002111b0 0000000000000010 t util_format_i16_uint_fetch_unsigned
00000000002111c0 0000000000000064 t util_format_l16_uint_unpack_unsigned
0000000000211230 0000000000000014 t util_format_l16_uint_fetch_unsigned
0000000000211250 000000000000006c t util_format_l16a16_uint_unpack_unsigned
00000000002112c0 0000000000000088 t util_format_l16a16_uint_pack_unsigned
0000000000211350 0000000000000018 t util_format_l16a16_uint_fetch_unsigned
0000000000211370 0000000000000094 t util_format_l16a16_uint_pack_signed
0000000000211410 0000000000000064 t util_format_a16_sint_unpack_signed
0000000000211480 0000000000000080 t util_format_a16_sint_pack_signed
0000000000211500 0000000000000010 t util_format_a16_sint_fetch_signed
0000000000211510 0000000000000070 t util_format_a16_sint_pack_unsigned
0000000000211580 0000000000000064 t util_format_i16_sint_unpack_signed
00000000002115f0 0000000000000010 t util_format_i16_sint_fetch_signed
0000000000211600 0000000000000064 t util_format_l16_sint_unpack_signed
0000000000211670 0000000000000014 t util_format_l16_sint_fetch_signed
0000000000211690 000000000000006c t util_format_l16a16_sint_unpack_signed
0000000000211700 00000000000000a4 t util_format_l16a16_sint_pack_signed
00000000002117b0 0000000000000018 t util_format_l16a16_sint_fetch_signed
00000000002117d0 0000000000000088 t util_format_l16a16_sint_pack_unsigned
0000000000211860 0000000000000064 t util_format_a32_uint_unpack_unsigned
00000000002118d0 0000000000000054 t util_format_a32_uint_pack_unsigned
0000000000211930 0000000000000010 t util_format_a32_uint_fetch_unsigned
0000000000211940 000000000000005c t util_format_a32_uint_pack_signed
00000000002119a0 0000000000000064 t util_format_i32_uint_unpack_unsigned
0000000000211a10 0000000000000010 t util_format_i32_uint_fetch_unsigned
0000000000211a20 0000000000000064 t util_format_l32_uint_unpack_unsigned
0000000000211a90 0000000000000014 t util_format_l32_uint_fetch_unsigned
0000000000211ab0 0000000000000068 t util_format_l32a32_uint_unpack_unsigned
0000000000211b20 000000000000006c t util_format_l32a32_uint_pack_unsigned
0000000000211b90 0000000000000014 t util_format_l32a32_uint_fetch_unsigned
0000000000211bb0 000000000000007c t util_format_l32a32_uint_pack_signed
0000000000211c30 0000000000000064 t util_format_a32_sint_unpack_signed
0000000000211ca0 0000000000000054 t util_format_a32_sint_pack_signed
0000000000211d00 0000000000000010 t util_format_a32_sint_fetch_signed
0000000000211d10 0000000000000064 t util_format_a32_sint_pack_unsigned
0000000000211d80 0000000000000064 t util_format_i32_sint_unpack_signed
0000000000211df0 0000000000000010 t util_format_i32_sint_fetch_signed
0000000000211e00 0000000000000064 t util_format_l32_sint_unpack_signed
0000000000211e70 0000000000000014 t util_format_l32_sint_fetch_signed
0000000000211e90 0000000000000068 t util_format_l32a32_sint_unpack_signed
0000000000211f00 000000000000006c t util_format_l32a32_sint_pack_signed
0000000000211f70 0000000000000014 t util_format_l32a32_sint_fetch_signed
0000000000211f90 0000000000000084 t util_format_l32a32_sint_pack_unsigned
0000000000212020 0000000000000070 t util_format_b8g8r8_uint_unpack_unsigned
0000000000212090 0000000000000084 t util_format_b8g8r8_uint_pack_unsigned
0000000000212120 000000000000001c t util_format_b8g8r8_uint_fetch_unsigned
0000000000212140 00000000000000bc t util_format_b8g8r8_uint_pack_signed
0000000000212200 0000000000000074 t util_format_b8g8r8a8_uint_unpack_unsigned
0000000000212280 00000000000000ac t util_format_b8g8r8a8_uint_pack_unsigned
0000000000212330 0000000000000020 t util_format_b8g8r8a8_uint_fetch_unsigned
0000000000212350 00000000000000c8 t util_format_b8g8r8a8_uint_pack_signed
0000000000212420 0000000000000070 t util_format_b8g8r8_sint_unpack_signed
0000000000212490 00000000000000bc t util_format_b8g8r8_sint_pack_signed
0000000000212550 000000000000001c t util_format_b8g8r8_sint_fetch_signed
0000000000212570 0000000000000084 t util_format_b8g8r8_sint_pack_unsigned
0000000000212600 0000000000000074 t util_format_b8g8r8a8_sint_unpack_signed
0000000000212680 00000000000000f8 t util_format_b8g8r8a8_sint_pack_signed
0000000000212780 0000000000000020 t util_format_b8g8r8a8_sint_fetch_signed
00000000002127a0 00000000000000ac t util_format_b8g8r8a8_sint_pack_unsigned
0000000000212850 0000000000000074 t util_format_a8r8g8b8_uint_unpack_unsigned
00000000002128d0 00000000000000ac t util_format_a8r8g8b8_uint_pack_unsigned
0000000000212980 0000000000000020 t util_format_a8r8g8b8_uint_fetch_unsigned
00000000002129a0 00000000000000c8 t util_format_a8r8g8b8_uint_pack_signed
0000000000212a70 0000000000000074 t util_format_a8b8g8r8_uint_unpack_unsigned
0000000000212af0 00000000000000ac t util_format_a8b8g8r8_uint_pack_unsigned
0000000000212ba0 0000000000000020 t util_format_a8b8g8r8_uint_fetch_unsigned
0000000000212bc0 00000000000000c8 t util_format_a8b8g8r8_uint_pack_signed
0000000000212c90 0000000000000074 t util_format_a2r10g10b10_uint_unpack_unsigned
0000000000212d10 000000000000009c t util_format_a2r10g10b10_uint_pack_unsigned
0000000000212db0 0000000000000020 t util_format_a2r10g10b10_uint_fetch_unsigned
0000000000212dd0 00000000000000c4 t util_format_a2r10g10b10_uint_pack_signed
0000000000212ea0 0000000000000074 t util_format_a2b10g10r10_uint_unpack_unsigned
0000000000212f20 000000000000009c t util_format_a2b10g10r10_uint_pack_unsigned
0000000000212fc0 0000000000000020 t util_format_a2b10g10r10_uint_fetch_unsigned
0000000000212fe0 00000000000000c4 t util_format_a2b10g10r10_uint_pack_signed
00000000002130b0 0000000000000074 t util_format_b10g10r10a2_uint_unpack_unsigned
0000000000213130 000000000000009c t util_format_b10g10r10a2_uint_pack_unsigned
00000000002131d0 0000000000000020 t util_format_b10g10r10a2_uint_fetch_unsigned
00000000002131f0 00000000000000c4 t util_format_b10g10r10a2_uint_pack_signed
00000000002132c0 0000000000000074 t util_format_b10g10r10a2_sint_unpack_signed
0000000000213340 00000000000000e0 t util_format_b10g10r10a2_sint_pack_signed
0000000000213420 0000000000000020 t util_format_b10g10r10a2_sint_fetch_signed
0000000000213440 0000000000000094 t util_format_b10g10r10a2_sint_pack_unsigned
00000000002134e0 0000000000000070 t util_format_r5g6b5_uint_unpack_unsigned
0000000000213550 0000000000000098 t util_format_r5g6b5_uint_pack_unsigned
00000000002135f0 0000000000000024 t util_format_r5g6b5_uint_fetch_unsigned
0000000000213620 00000000000000b8 t util_format_r5g6b5_uint_pack_signed
00000000002136e0 0000000000000070 t util_format_b5g6r5_uint_unpack_unsigned
0000000000213750 0000000000000094 t util_format_b5g6r5_uint_pack_unsigned
00000000002137f0 0000000000000024 t util_format_b5g6r5_uint_fetch_unsigned
0000000000213820 00000000000000b8 t util_format_b5g6r5_uint_pack_signed
00000000002138e0 0000000000000070 t util_format_r3g3b2_uint_unpack_unsigned
0000000000213950 0000000000000098 t util_format_r3g3b2_uint_pack_unsigned
00000000002139f0 0000000000000024 t util_format_r3g3b2_uint_fetch_unsigned
0000000000213a20 00000000000000b8 t util_format_r3g3b2_uint_pack_signed
0000000000213ae0 0000000000000070 t util_format_b2g3r3_uint_unpack_unsigned
0000000000213b50 0000000000000094 t util_format_b2g3r3_uint_pack_unsigned
0000000000213bf0 0000000000000024 t util_format_b2g3r3_uint_fetch_unsigned
0000000000213c20 00000000000000b8 t util_format_b2g3r3_uint_pack_signed
0000000000213ce0 0000000000000074 t util_format_r4g4b4a4_uint_unpack_unsigned
0000000000213d60 00000000000000b0 t util_format_r4g4b4a4_uint_pack_unsigned
0000000000213e10 0000000000000020 t util_format_r4g4b4a4_uint_fetch_unsigned
0000000000213e30 00000000000000d8 t util_format_r4g4b4a4_uint_pack_signed
0000000000213f10 0000000000000074 t util_format_b4g4r4a4_uint_unpack_unsigned
0000000000213f90 00000000000000b0 t util_format_b4g4r4a4_uint_pack_unsigned
0000000000214040 0000000000000020 t util_format_b4g4r4a4_uint_fetch_unsigned
0000000000214060 00000000000000d8 t util_format_b4g4r4a4_uint_pack_signed
0000000000214140 0000000000000074 t util_format_a4r4g4b4_uint_unpack_unsigned
00000000002141c0 00000000000000b0 t util_format_a4r4g4b4_uint_pack_unsigned
0000000000214270 0000000000000020 t util_format_a4r4g4b4_uint_fetch_unsigned
0000000000214290 00000000000000d8 t util_format_a4r4g4b4_uint_pack_signed
0000000000214370 0000000000000074 t util_format_a4b4g4r4_uint_unpack_unsigned
00000000002143f0 00000000000000b0 t util_format_a4b4g4r4_uint_pack_unsigned
00000000002144a0 0000000000000020 t util_format_a4b4g4r4_uint_fetch_unsigned
00000000002144c0 00000000000000d8 t util_format_a4b4g4r4_uint_pack_signed
00000000002145a0 0000000000000074 t util_format_a1r5g5b5_uint_unpack_unsigned
0000000000214620 00000000000000a4 t util_format_a1r5g5b5_uint_pack_unsigned
00000000002146d0 0000000000000020 t util_format_a1r5g5b5_uint_fetch_unsigned
00000000002146f0 00000000000000c4 t util_format_a1r5g5b5_uint_pack_signed
00000000002147c0 0000000000000074 t util_format_r5g5b5a1_uint_unpack_unsigned
0000000000214840 00000000000000a4 t util_format_r5g5b5a1_uint_pack_unsigned
00000000002148f0 0000000000000020 t util_format_r5g5b5a1_uint_fetch_unsigned
0000000000214910 00000000000000d0 t util_format_r5g5b5a1_uint_pack_signed
00000000002149e0 0000000000000074 t util_format_b5g5r5a1_uint_unpack_unsigned
0000000000214a60 00000000000000a4 t util_format_b5g5r5a1_uint_pack_unsigned
0000000000214b10 0000000000000020 t util_format_b5g5r5a1_uint_fetch_unsigned
0000000000214b30 00000000000000d0 t util_format_b5g5r5a1_uint_pack_signed
0000000000214c00 0000000000000098 t util_format_r8g8b8x8_snorm_unpack_rgba_float
0000000000214ca0 0000000000000158 t util_format_r8g8b8x8_snorm_pack_rgba_float
0000000000214e00 0000000000000048 t util_format_r8g8b8x8_snorm_fetch_rgba_float
0000000000214e50 00000000000000ec t util_format_r8g8b8x8_snorm_unpack_rgba_8unorm
0000000000214f40 0000000000000078 t util_format_r8g8b8x8_snorm_pack_rgba_8unorm
0000000000214fc0 0000000000000084 t util_format_r8g8b8x8_srgb_unpack_rgba_float
0000000000215050 0000000000000038 t util_format_r8g8b8x8_srgb_fetch_rgba_float
0000000000215090 000000000000008c t util_format_r8g8b8x8_srgb_unpack_rgba_8unorm
0000000000215120 0000000000000084 t util_format_r8g8b8x8_srgb_pack_rgba_8unorm
00000000002151b0 0000000000000070 t util_format_r8g8b8x8_uint_unpack_unsigned
0000000000215220 0000000000000094 t util_format_r8g8b8x8_uint_pack_unsigned
00000000002152c0 0000000000000024 t util_format_r8g8b8x8_uint_fetch_unsigned
00000000002152f0 00000000000000ac t util_format_r8g8b8x8_uint_pack_signed
00000000002153a0 0000000000000070 t util_format_r8g8b8x8_sint_unpack_signed
0000000000215410 00000000000000c0 t util_format_r8g8b8x8_sint_pack_signed
00000000002154d0 0000000000000024 t util_format_r8g8b8x8_sint_fetch_signed
0000000000215500 0000000000000094 t util_format_r8g8b8x8_sint_pack_unsigned
00000000002155a0 0000000000000098 t util_format_b10g10r10x2_unorm_unpack_rgba_float
0000000000215640 0000000000000158 t util_format_b10g10r10x2_unorm_pack_rgba_float
00000000002157a0 0000000000000048 t util_format_b10g10r10x2_unorm_fetch_rgba_float
00000000002157f0 0000000000000078 t util_format_b10g10r10x2_unorm_unpack_rgba_8unorm
0000000000215870 00000000000000ac t util_format_b10g10r10x2_unorm_pack_rgba_8unorm
0000000000215920 00000000000000a0 t util_format_r16g16b16x16_unorm_unpack_rgba_float
00000000002159c0 000000000000015c t util_format_r16g16b16x16_unorm_pack_rgba_float
0000000000215b20 0000000000000050 t util_format_r16g16b16x16_unorm_fetch_rgba_float
0000000000215b70 0000000000000078 t util_format_r16g16b16x16_unorm_unpack_rgba_8unorm
0000000000215bf0 00000000000000ac t util_format_r16g16b16x16_unorm_pack_rgba_8unorm
0000000000215ca0 000000000000009c t util_format_r16g16b16x16_snorm_unpack_rgba_float
0000000000215d40 0000000000000164 t util_format_r16g16b16x16_snorm_pack_rgba_float
0000000000215eb0 000000000000004c t util_format_r16g16b16x16_snorm_fetch_rgba_float
0000000000215f00 0000000000000098 t util_format_r16g16b16x16_snorm_unpack_rgba_8unorm
0000000000215fa0 00000000000000ac t util_format_r16g16b16x16_snorm_pack_rgba_8unorm
0000000000216050 0000000000000118 t util_format_r16g16b16x16_float_unpack_rgba_float
0000000000216170 00000000000000f4 t util_format_r16g16b16x16_float_fetch_rgba_float
0000000000216270 0000000000000070 t util_format_r16g16b16x16_uint_unpack_unsigned
00000000002162e0 0000000000000090 t util_format_r16g16b16x16_uint_pack_unsigned
0000000000216370 0000000000000024 t util_format_r16g16b16x16_uint_fetch_unsigned
00000000002163a0 00000000000000bc t util_format_r16g16b16x16_uint_pack_signed
0000000000216460 0000000000000070 t util_format_r16g16b16x16_sint_unpack_signed
00000000002164d0 00000000000000c4 t util_format_r16g16b16x16_sint_pack_signed
00000000002165a0 0000000000000024 t util_format_r16g16b16x16_sint_fetch_signed
00000000002165d0 0000000000000090 t util_format_r16g16b16x16_sint_pack_unsigned
0000000000216660 0000000000000078 t util_format_r32g32b32x32_float_unpack_rgba_float
00000000002166e0 0000000000000074 t util_format_r32g32b32x32_float_pack_rgba_float
0000000000216760 0000000000000024 t util_format_r32g32b32x32_float_fetch_rgba_float
0000000000216790 00000000000000a4 t util_format_r32g32b32x32_float_pack_rgba_8unorm
0000000000216840 000000000000006c t util_format_r32g32b32x32_uint_unpack_unsigned
00000000002168b0 0000000000000074 t util_format_r32g32b32x32_uint_pack_unsigned
0000000000216930 000000000000001c t util_format_r32g32b32x32_uint_fetch_unsigned
0000000000216950 000000000000008c t util_format_r32g32b32x32_uint_pack_signed
00000000002169e0 000000000000006c t util_format_r32g32b32x32_sint_unpack_signed
0000000000216a50 0000000000000074 t util_format_r32g32b32x32_sint_pack_signed
0000000000216ad0 000000000000001c t util_format_r32g32b32x32_sint_fetch_signed
0000000000216af0 0000000000000094 t util_format_r32g32b32x32_sint_pack_unsigned
0000000000216b90 0000000000000088 t util_format_r8a8_snorm_unpack_rgba_float
0000000000216c20 0000000000000038 t util_format_r8a8_snorm_fetch_rgba_float
0000000000216c60 00000000000000c4 t util_format_r8a8_snorm_unpack_rgba_8unorm
0000000000216d30 000000000000008c t util_format_r16a16_unorm_unpack_rgba_float
0000000000216dc0 000000000000003c t util_format_r16a16_unorm_fetch_rgba_float
0000000000216e00 0000000000000074 t util_format_r16a16_unorm_unpack_rgba_8unorm
0000000000216e80 000000000000008c t util_format_r16a16_snorm_unpack_rgba_float
0000000000216f10 000000000000003c t util_format_r16a16_snorm_fetch_rgba_float
0000000000216f50 000000000000008c t util_format_r16a16_snorm_unpack_rgba_8unorm
0000000000216fe0 00000000000000e0 t util_format_r16a16_float_unpack_rgba_float
00000000002170c0 00000000000000a0 t util_format_r16a16_float_fetch_rgba_float
0000000000217160 000000000000006c t util_format_r32a32_float_unpack_rgba_float
00000000002171d0 000000000000006c t util_format_r32a32_float_pack_rgba_float
0000000000217240 0000000000000018 t util_format_r32a32_float_fetch_rgba_float
0000000000217260 000000000000008c t util_format_r32a32_float_pack_rgba_8unorm
00000000002172f0 000000000000006c t util_format_r8a8_uint_unpack_unsigned
0000000000217360 000000000000001c t util_format_r8a8_uint_fetch_unsigned
0000000000217380 000000000000006c t util_format_r8a8_sint_unpack_signed
00000000002173f0 000000000000001c t util_format_r8a8_sint_fetch_signed
0000000000217410 000000000000006c t util_format_r16a16_uint_unpack_unsigned
0000000000217480 000000000000001c t util_format_r16a16_uint_fetch_unsigned
00000000002174a0 000000000000006c t util_format_r16a16_sint_unpack_signed
0000000000217510 000000000000001c t util_format_r16a16_sint_fetch_signed
0000000000217530 0000000000000068 t util_format_r32a32_uint_unpack_unsigned
00000000002175a0 000000000000006c t util_format_r32a32_uint_pack_unsigned
0000000000217610 0000000000000018 t util_format_r32a32_uint_fetch_unsigned
0000000000217630 000000000000007c t util_format_r32a32_uint_pack_signed
00000000002176b0 0000000000000068 t util_format_r32a32_sint_unpack_signed
0000000000217720 000000000000006c t util_format_r32a32_sint_pack_signed
0000000000217790 0000000000000018 t util_format_r32a32_sint_fetch_signed
00000000002177b0 0000000000000084 t util_format_r32a32_sint_pack_unsigned
0000000000217840 0000000000000074 t util_format_r10g10b10a2_uint_unpack_unsigned
00000000002178c0 000000000000009c t util_format_r10g10b10a2_uint_pack_unsigned
0000000000217960 0000000000000020 t util_format_r10g10b10a2_uint_fetch_unsigned
0000000000217980 00000000000000c4 t util_format_r10g10b10a2_uint_pack_signed
0000000000217a50 0000000000000074 t util_format_r10g10b10a2_sint_unpack_signed
0000000000217ad0 00000000000000e0 t util_format_r10g10b10a2_sint_pack_signed
0000000000217bb0 0000000000000020 t util_format_r10g10b10a2_sint_fetch_signed
0000000000217bd0 0000000000000094 t util_format_r10g10b10a2_sint_pack_unsigned
0000000000217c70 000000000000009c t util_format_b5g6r5_srgb_unpack_rgba_float
0000000000217d10 0000000000000050 t util_format_b5g6r5_srgb_fetch_rgba_float
0000000000217d60 00000000000000a4 t util_format_b5g6r5_srgb_unpack_rgba_8unorm
0000000000217e10 000000000000008c t util_format_b5g6r5_srgb_pack_rgba_8unorm
0000000000217ea0 0000000000000098 t util_format_g8r8_unorm_unpack_rgba_float
0000000000217f40 0000000000000040 t util_format_g8r8_unorm_fetch_rgba_float
0000000000217f80 0000000000000070 t util_format_g8r8_unorm_unpack_rgba_8unorm
0000000000217ff0 0000000000000058 t util_format_g8r8_unorm_pack_rgba_8unorm
0000000000218050 0000000000000090 t util_format_g8r8_snorm_unpack_rgba_float
00000000002180e0 0000000000000108 t util_format_g8r8_snorm_pack_rgba_float
00000000002181f0 0000000000000038 t util_format_g8r8_snorm_fetch_rgba_float
0000000000218230 00000000000000c4 t util_format_g8r8_snorm_unpack_rgba_8unorm
0000000000218300 000000000000006c t util_format_g8r8_snorm_pack_rgba_8unorm
0000000000218370 000000000000006c t util_format_g8r8_sint_unpack_signed
00000000002183e0 00000000000000a0 t util_format_g8r8_sint_pack_signed
0000000000218480 000000000000001c t util_format_g8r8_sint_fetch_signed
00000000002184a0 0000000000000080 t util_format_g8r8_sint_pack_unsigned
0000000000218520 0000000000000094 t util_format_g16r16_unorm_unpack_rgba_float
00000000002185c0 0000000000000104 t util_format_g16r16_unorm_pack_rgba_float
00000000002186d0 000000000000003c t util_format_g16r16_unorm_fetch_rgba_float
0000000000218710 0000000000000074 t util_format_g16r16_unorm_unpack_rgba_8unorm
0000000000218790 000000000000008c t util_format_g16r16_unorm_pack_rgba_8unorm
0000000000218820 0000000000000094 t util_format_g16r16_snorm_unpack_rgba_float
00000000002188c0 0000000000000114 t util_format_g16r16_snorm_pack_rgba_float
00000000002189e0 000000000000003c t util_format_g16r16_snorm_fetch_rgba_float
0000000000218a20 000000000000008c t util_format_g16r16_snorm_unpack_rgba_8unorm
0000000000218ab0 000000000000008c t util_format_g16r16_snorm_pack_rgba_8unorm
0000000000218b40 00000000000000a0 t util_format_a8b8g8r8_snorm_unpack_rgba_float
0000000000218be0 00000000000001b0 t util_format_a8b8g8r8_snorm_pack_rgba_float
0000000000218d90 0000000000000050 t util_format_a8b8g8r8_snorm_fetch_rgba_float
0000000000218de0 0000000000000114 t util_format_a8b8g8r8_snorm_unpack_rgba_8unorm
0000000000218f00 000000000000008c t util_format_a8b8g8r8_snorm_pack_rgba_8unorm
0000000000218f90 0000000000000074 t util_format_a8b8g8r8_sint_unpack_signed
0000000000219010 00000000000000f8 t util_format_a8b8g8r8_sint_pack_signed
0000000000219110 0000000000000020 t util_format_a8b8g8r8_sint_fetch_signed
0000000000219130 00000000000000ac t util_format_a8b8g8r8_sint_pack_unsigned
00000000002191e0 000000000000009c t util_format_x8b8g8r8_snorm_unpack_rgba_float
0000000000219280 0000000000000160 t util_format_x8b8g8r8_snorm_pack_rgba_float
00000000002193e0 0000000000000050 t util_format_x8b8g8r8_snorm_fetch_rgba_float
0000000000219430 00000000000000ec t util_format_x8b8g8r8_snorm_unpack_rgba_8unorm
0000000000219520 000000000000007c t util_format_x8b8g8r8_snorm_pack_rgba_8unorm
00000000002195a0 0000000000000070 t util_format_x8b8g8r8_sint_unpack_signed
0000000000219610 00000000000000c0 t util_format_x8b8g8r8_sint_pack_signed
00000000002196d0 0000000000000024 t util_format_x8b8g8r8_sint_fetch_signed
0000000000219700 0000000000000094 t util_format_x8b8g8r8_sint_pack_unsigned
00000000002197a0 0000000000000040 t util_format_r64g64b64_float_fetch_rgba_float
00000000002197e0 0000000000000090 t util_format_r64g64b64_float_pack_rgba_float
0000000000219870 000000000000009c t util_format_r64g64b64_float_unpack_rgba_float
0000000000219910 00000000000000bc t util_format_r64g64b64_float_pack_rgba_8unorm
00000000002199d0 000000000000018c t util_format_r64g64b64_float_unpack_rgba_8unorm
0000000000219b60 0000000000000034 t util_format_r64g64b64a64_float_fetch_rgba_float
0000000000219ba0 0000000000000094 t util_format_r64g64b64a64_float_pack_rgba_float
0000000000219c40 0000000000000094 t util_format_r64g64b64a64_float_unpack_rgba_float
0000000000219ce0 00000000000000c4 t util_format_r64g64b64a64_float_pack_rgba_8unorm
0000000000219db0 00000000000001d4 t util_format_r64g64b64a64_float_unpack_rgba_8unorm
0000000000219f90 000000000000002c t util_format_r32g32b32_float_fetch_rgba_float
0000000000219fc0 0000000000000084 t util_format_r32g32b32_float_pack_rgba_float
000000000021a050 0000000000000090 t util_format_r32g32b32_float_unpack_rgba_float
000000000021a0e0 00000000000000b0 t util_format_r32g32b32_float_pack_rgba_8unorm
000000000021a190 0000000000000058 t util_format_r32g32b32_unorm_fetch_rgba_float
000000000021a1f0 000000000000010c t util_format_r32g32b32_unorm_pack_rgba_float
000000000021a300 00000000000000b4 t util_format_r32g32b32_unorm_unpack_rgba_float
000000000021a3c0 00000000000000bc t util_format_r32g32b32_unorm_pack_rgba_8unorm
000000000021a480 0000000000000098 t util_format_r32g32b32_unorm_unpack_rgba_8unorm
000000000021a520 0000000000000030 t util_format_r32g32b32_uscaled_fetch_rgba_float
000000000021a550 00000000000000e8 t util_format_r32g32b32_uscaled_pack_rgba_float
000000000021a640 0000000000000098 t util_format_r32g32b32_uscaled_unpack_rgba_float
000000000021a6e0 00000000000000a4 t util_format_r32g32b32_uscaled_pack_rgba_8unorm
000000000021a790 00000000000000a4 t util_format_r32g32b32_uscaled_unpack_rgba_8unorm
000000000021a840 0000000000000058 t util_format_r32g32b32_snorm_fetch_rgba_float
000000000021a8a0 0000000000000114 t util_format_r32g32b32_snorm_pack_rgba_float
000000000021a9c0 00000000000000b4 t util_format_r32g32b32_snorm_unpack_rgba_float
000000000021aa80 00000000000000bc t util_format_r32g32b32_snorm_pack_rgba_8unorm
000000000021ab40 00000000000000b4 t util_format_r32g32b32_snorm_unpack_rgba_8unorm
000000000021ac00 0000000000000030 t util_format_r32g32b32_sscaled_fetch_rgba_float
000000000021ac30 00000000000000e8 t util_format_r32g32b32_sscaled_pack_rgba_float
000000000021ad20 0000000000000098 t util_format_r32g32b32_sscaled_unpack_rgba_float
000000000021adc0 00000000000000a4 t util_format_r32g32b32_sscaled_pack_rgba_8unorm
000000000021ae70 00000000000000a8 t util_format_r32g32b32_sscaled_unpack_rgba_8unorm
000000000021af20 0000000000000114 t util_format_r16g16b16_float_fetch_rgba_float
000000000021b040 0000000000000134 t util_format_r16g16b16_float_unpack_rgba_float
000000000021b180 0000000000000060 t util_format_r16g16b16_unorm_fetch_rgba_float
000000000021b1e0 0000000000000174 t util_format_r16g16b16_unorm_pack_rgba_float
000000000021b360 00000000000000c0 t util_format_r16g16b16_unorm_unpack_rgba_float
000000000021b420 00000000000000c0 t util_format_r16g16b16_unorm_pack_rgba_8unorm
000000000021b4e0 0000000000000098 t util_format_r16g16b16_unorm_unpack_rgba_8unorm
000000000021b580 0000000000000048 t util_format_r16g16b16_uscaled_fetch_rgba_float
000000000021b5d0 00000000000000f4 t util_format_r16g16b16_uscaled_pack_rgba_float
000000000021b6d0 00000000000000ac t util_format_r16g16b16_uscaled_unpack_rgba_float
000000000021b780 00000000000000a8 t util_format_r16g16b16_uscaled_pack_rgba_8unorm
000000000021b830 00000000000000a4 t util_format_r16g16b16_uscaled_unpack_rgba_8unorm
000000000021b8e0 0000000000000058 t util_format_r16g16b16_snorm_fetch_rgba_float
000000000021b940 0000000000000174 t util_format_r16g16b16_snorm_pack_rgba_float
000000000021bac0 00000000000000b8 t util_format_r16g16b16_snorm_unpack_rgba_float
000000000021bb80 00000000000000c0 t util_format_r16g16b16_snorm_pack_rgba_8unorm
000000000021bc40 00000000000000b4 t util_format_r16g16b16_snorm_unpack_rgba_8unorm
000000000021bd00 0000000000000040 t util_format_r16g16b16_sscaled_fetch_rgba_float
000000000021bd40 00000000000000fc t util_format_r16g16b16_sscaled_pack_rgba_float
000000000021be40 00000000000000a4 t util_format_r16g16b16_sscaled_unpack_rgba_float
000000000021bef0 00000000000000a8 t util_format_r16g16b16_sscaled_pack_rgba_8unorm
000000000021bfa0 00000000000000b0 t util_format_r16g16b16_sscaled_unpack_rgba_8unorm
000000000021c050 0000000000000054 t util_format_r32g32b32_fixed_fetch_rgba_float
000000000021c0b0 0000000000000108 t util_format_r32g32b32_fixed_pack_rgba_float
000000000021c1c0 00000000000000b4 t util_format_r32g32b32_fixed_unpack_rgba_float
000000000021c280 00000000000000c4 t util_format_r32g32b32_fixed_pack_rgba_8unorm
000000000021c350 0000000000000190 t util_format_r32g32b32_fixed_unpack_rgba_8unorm
000000000021c4e0 000000000000002c t util_format_r16g16b16_uint_fetch_unsigned
000000000021c510 00000000000000d4 t util_format_r16g16b16_uint_pack_signed
000000000021c5f0 00000000000000a0 t util_format_r16g16b16_uint_pack_unsigned
000000000021c690 0000000000000094 t util_format_r16g16b16_uint_unpack_unsigned
000000000021c730 000000000000002c t util_format_r16g16b16_sint_fetch_signed
000000000021c760 00000000000000d4 t util_format_r16g16b16_sint_pack_signed
000000000021c840 0000000000000094 t util_format_r16g16b16_sint_unpack_signed
000000000021c8e0 00000000000000a0 t util_format_r16g16b16_sint_pack_unsigned
000000000021c980 0000000000000020 t util_format_r32g32b32_uint_fetch_unsigned
000000000021c9a0 0000000000000094 t util_format_r32g32b32_uint_pack_signed
000000000021ca40 000000000000007c t util_format_r32g32b32_uint_pack_unsigned
000000000021cac0 0000000000000088 t util_format_r32g32b32_uint_unpack_unsigned
000000000021cb50 0000000000000020 t util_format_r32g32b32_sint_fetch_signed
000000000021cb70 000000000000007c t util_format_r32g32b32_sint_pack_signed
000000000021cbf0 0000000000000088 t util_format_r32g32b32_sint_unpack_signed
000000000021cc80 000000000000009c t util_format_r32g32b32_sint_pack_unsigned
000000000021cd20 000000000000001c t util_format_r8_uscaled_fetch_rgba_float
000000000021cd40 0000000000000020 t util_format_a1b5g5r5_uint_fetch_unsigned
000000000021cd60 0000000000000064 t util_format_r32_sscaled_pack_rgba_8unorm
000000000021cdd0 000000000000006c t util_format_r16_sscaled_pack_rgba_8unorm
000000000021ce40 0000000000000098 t util_format_l8_unorm_pack_rgba_float
000000000021cee0 0000000000000098 t util_format_a8_unorm_pack_rgba_float
000000000021cf80 00000000000000a8 t util_format_r32_float_unpack_rgba_8unorm
000000000021d030 00000000000000ac t util_format_a32_float_unpack_rgba_8unorm
000000000021d0e0 00000000000000a8 t util_format_l32_float_unpack_rgba_8unorm
000000000021d190 00000000000000a8 t util_format_i32_float_unpack_rgba_8unorm
000000000021d240 0000000000000068 t util_format_r8_srgb_pack_rgba_8unorm
000000000021d2b0 00000000000000e0 t util_format_r32g32_float_unpack_rgba_8unorm
000000000021d390 00000000000000e0 t util_format_l32a32_float_unpack_rgba_8unorm
000000000021d470 00000000000000e0 t util_format_r32a32_float_unpack_rgba_8unorm
000000000021d550 00000000000000c8 t util_format_r8g8_unorm_pack_rgba_float
000000000021d620 00000000000000c8 t util_format_g8r8_unorm_pack_rgba_float
000000000021d6f0 00000000000000c8 t util_format_l8a8_unorm_pack_rgba_float
000000000021d7c0 00000000000000c8 t util_format_a8r8_unorm_pack_rgba_float
000000000021d890 00000000000000e8 t util_format_a16_float_unpack_rgba_8unorm
000000000021d980 00000000000000e8 t util_format_r16_float_unpack_rgba_8unorm
000000000021da70 00000000000000e8 t util_format_i16_float_unpack_rgba_8unorm
000000000021db60 00000000000000e8 t util_format_l16_float_unpack_rgba_8unorm
000000000021dc50 0000000000000110 t util_format_r32g32b32x32_float_unpack_rgba_8unorm
000000000021dd60 000000000000005c t util_format_r8_unorm_pack_rgba_8unorm
000000000021ddc0 000000000000005c t util_format_i8_unorm_pack_rgba_8unorm
000000000021de20 00000000000000fc t util_format_r8g8b8_unorm_pack_rgba_float
000000000021df20 00000000000000fc t util_format_b8g8r8_unorm_pack_rgba_float
000000000021e020 00000000000000f8 t util_format_r8g8b8x8_unorm_pack_rgba_float
000000000021e120 00000000000000f8 t util_format_b8g8r8x8_unorm_pack_rgba_float
000000000021e220 0000000000000120 t util_format_r32g32b32_float_unpack_rgba_8unorm
000000000021e340 00000000000000f4 t util_format_x8b8g8r8_unorm_pack_rgba_float
000000000021e440 00000000000000f4 t util_format_x8r8g8b8_unorm_pack_rgba_float
000000000021e540 0000000000000140 t util_format_r32g32b32a32_float_unpack_rgba_8unorm
000000000021e680 0000000000000068 t util_format_r8a8_unorm_pack_rgba_8unorm
000000000021e6f0 0000000000000144 t util_format_l16a16_float_unpack_rgba_8unorm
000000000021e840 0000000000000144 t util_format_r16a16_float_unpack_rgba_8unorm
000000000021e990 0000000000000144 t util_format_r16g16_float_unpack_rgba_8unorm
000000000021eae0 0000000000000124 t util_format_a8r8g8b8_unorm_pack_rgba_float
000000000021ec10 0000000000000124 t util_format_a8b8g8r8_unorm_pack_rgba_float
000000000021ed40 0000000000000124 t util_format_z24_unorm_s8_uint_as_r8g8b8a8_pack_rgba_float
000000000021ee70 0000000000000124 t util_format_b8g8r8a8_unorm_pack_rgba_float
000000000021efa0 0000000000000148 t util_format_r8sg8sb8ux8u_norm_pack_rgba_float
000000000021f0f0 0000000000000054 t util_format_r8g8b8a8_unorm_fetch_rgba_float
000000000021f150 00000000000001a4 t util_format_r16g16b16x16_float_unpack_rgba_8unorm
000000000021f300 0000000000000060 t util_format_i8_snorm_pack_rgba_8unorm
000000000021f360 000000000000006c t util_format_r8_uscaled_pack_rgba_8unorm
000000000021f3d0 0000000000000060 t util_format_r8_snorm_pack_rgba_8unorm
000000000021f430 000000000000006c t util_format_r8_sscaled_pack_rgba_8unorm
000000000021f4a0 00000000000001c0 t util_format_r16g16b16_float_unpack_rgba_8unorm
000000000021f660 0000000000000200 t util_format_r16g16b16a16_float_unpack_rgba_8unorm
000000000021f860 0000000000000074 t util_format_r8_uscaled_unpack_rgba_8unorm
000000000021f8e0 000000000000006c t util_format_r4a4_unorm_pack_rgba_8unorm
000000000021f950 0000000000000070 t util_format_r8a8_snorm_pack_rgba_8unorm
000000000021f9c0 0000000000000054 t util_format_r32_float_pack_rgba_float
000000000021fa20 0000000000000064 t util_format_i32_float_pack_rgba_8unorm
000000000021fa90 0000000000000054 t util_format_i32_sint_pack_signed
000000000021faf0 0000000000000054 t util_format_l32_sint_pack_signed
000000000021fb50 0000000000000054 t util_format_i32_uint_pack_unsigned
000000000021fbb0 0000000000000054 t util_format_l32_uint_pack_unsigned
000000000021fc10 0000000000000054 t util_format_i32_float_pack_rgba_float
000000000021fc70 0000000000000074 t util_format_i16_unorm_pack_rgba_8unorm
000000000021fcf0 0000000000000074 t util_format_r16_unorm_pack_rgba_8unorm
000000000021fd70 0000000000000074 t util_format_r16_snorm_pack_rgba_8unorm
000000000021fdf0 0000000000000074 t util_format_i16_snorm_pack_rgba_8unorm
000000000021fe70 0000000000000064 t util_format_r32_float_pack_rgba_8unorm
000000000021fee0 0000000000000078 t util_format_r8g8b8a8_unorm_unpack_rgba_8unorm
000000000021ff60 000000000000006c t util_format_r8_uscaled_unpack_rgba_float
000000000021ffd0 000000000000005c t util_format_i32_uint_pack_signed
0000000000220030 000000000000005c t util_format_l32_uint_pack_signed
0000000000220090 000000000000005c t util_format_i32_sint_pack_unsigned
00000000002200f0 000000000000005c t util_format_l32_sint_pack_unsigned
0000000000220150 0000000000000088 t util_format_r8_uscaled_pack_rgba_float
00000000002201e0 000000000000008c t util_format_r16a16_unorm_pack_rgba_8unorm
0000000000220270 000000000000008c t util_format_r16a16_snorm_pack_rgba_8unorm
0000000000220300 000000000000006c t util_format_i16_sint_pack_unsigned
0000000000220370 000000000000006c t util_format_l16_sint_pack_unsigned
00000000002203e0 0000000000000064 t util_format_i8_uint_pack_unsigned
0000000000220450 0000000000000064 t util_format_l8_uint_pack_unsigned
00000000002204c0 0000000000000064 t util_format_i8_sint_pack_unsigned
0000000000220530 0000000000000064 t util_format_l8_sint_pack_unsigned
00000000002205a0 000000000000006c t util_format_i16_uint_pack_unsigned
0000000000220610 000000000000006c t util_format_l16_uint_pack_unsigned
0000000000220680 0000000000000084 t util_format_r8a8_sint_pack_unsigned
0000000000220710 0000000000000088 t util_format_r16a16_uint_pack_unsigned
00000000002207a0 0000000000000088 t util_format_r16a16_sint_pack_unsigned
0000000000220830 0000000000000044 t util_format_r8g8b8a8_unorm_pack_rgba_8unorm
0000000000220880 0000000000000084 t util_format_r8a8_uint_pack_unsigned
0000000000220910 0000000000000074 t util_format_a1b5g5r5_uint_unpack_unsigned
0000000000220990 0000000000000080 t util_format_l16_sint_pack_signed
0000000000220a10 0000000000000078 t util_format_i8_uint_pack_signed
0000000000220a90 0000000000000078 t util_format_l8_uint_pack_signed
0000000000220b10 0000000000000078 t util_format_i8_sint_pack_signed
0000000000220b90 0000000000000080 t util_format_i16_sint_pack_signed
0000000000220c10 0000000000000078 t util_format_l16_uint_pack_signed
0000000000220c90 0000000000000078 t util_format_l8_sint_pack_signed
0000000000220d10 0000000000000078 t util_format_i16_uint_pack_signed
0000000000220d90 0000000000000094 t util_format_r16a16_uint_pack_signed
0000000000220e30 0000000000000098 t util_format_r8a8_uint_pack_signed
0000000000220ed0 0000000000000098 t util_format_r8_unorm_pack_rgba_float
0000000000220f70 0000000000000098 t util_format_i8_unorm_pack_rgba_float
0000000000221010 00000000000000a0 t util_format_r8a8_sint_pack_signed
00000000002210b0 00000000000000a4 t util_format_r16a16_sint_pack_signed
0000000000221160 00000000000000a0 t util_format_r10g10b10a2_sscaled_pack_rgba_8unorm
0000000000221200 00000000000000a4 t util_format_b10g10r10a2_sscaled_pack_rgba_8unorm
00000000002212b0 00000000000000c8 t util_format_r8a8_unorm_pack_rgba_float
0000000000221380 00000000000000a4 t util_format_r8g8b8a8_unorm_unpack_rgba_float
0000000000221430 00000000000000d0 t util_format_r16_float_pack_rgba_8unorm
0000000000221500 00000000000000d0 t util_format_a16_float_pack_rgba_8unorm
00000000002215d0 00000000000000b4 t util_format_l16_float_pack_rgba_float
0000000000221690 00000000000000d0 t util_format_l16_float_pack_rgba_8unorm
0000000000221760 00000000000000b4 t util_format_r16_float_pack_rgba_float
0000000000221820 00000000000000b4 t util_format_a16_float_pack_rgba_float
00000000002218e0 00000000000000d0 t util_format_i16_float_pack_rgba_8unorm
00000000002219b0 00000000000000b4 t util_format_i16_float_pack_rgba_float
0000000000221a70 00000000000000c8 t util_format_l8_srgb_pack_rgba_float
0000000000221b40 00000000000000c8 t util_format_r8_srgb_pack_rgba_float
0000000000221c10 00000000000000a4 t util_format_a1b5g5r5_uint_pack_unsigned
0000000000221cc0 00000000000000b8 t util_format_i8_snorm_pack_rgba_float
0000000000221d80 00000000000000b8 t util_format_i16_unorm_pack_rgba_float
0000000000221e40 00000000000000b8 t util_format_r8_snorm_pack_rgba_float
0000000000221f00 00000000000000c0 t util_format_i16_snorm_pack_rgba_float
0000000000221fc0 00000000000000b8 t util_format_r16_unorm_pack_rgba_float
0000000000222080 00000000000000c0 t util_format_r16_snorm_pack_rgba_float
0000000000222140 0000000000000108 t util_format_r16a16_float_pack_rgba_float
0000000000222250 0000000000000108 t util_format_l16a16_float_pack_rgba_float
0000000000222360 0000000000000108 t util_format_r16g16_float_pack_rgba_float
0000000000222470 0000000000000108 t util_format_l8a8_srgb_pack_rgba_float
0000000000222580 0000000000000128 t util_format_l16a16_float_pack_rgba_8unorm
00000000002226b0 0000000000000128 t util_format_r16g16_float_pack_rgba_8unorm
00000000002227e0 0000000000000128 t util_format_r16a16_float_pack_rgba_8unorm
0000000000222910 0000000000000120 t util_format_r8g8_srgb_pack_rgba_float
0000000000222a30 000000000000019c t util_format_r16g16b16x16_float_pack_rgba_float
0000000000222bd0 0000000000000170 t util_format_r16g16b16_float_pack_rgba_float
0000000000222d40 00000000000001c8 t util_format_r16g16b16x16_float_pack_rgba_8unorm
0000000000222f10 00000000000001a0 t util_format_r16g16b16_float_pack_rgba_8unorm
00000000002230b0 00000000000001dc t util_format_r16g16b16a16_float_pack_rgba_8unorm
0000000000223290 00000000000001b8 t util_format_r8g8b8a8_srgb_pack_rgba_float
0000000000223450 000000000000019c t util_format_r16g16b16a16_float_pack_rgba_float
00000000002235f0 000000000000017c t util_format_r8g8b8_srgb_pack_rgba_float
0000000000223770 000000000000017c t util_format_b8g8r8_srgb_pack_rgba_float
00000000002238f0 000000000000017c t util_format_r8g8b8x8_srgb_pack_rgba_float
0000000000223a70 000000000000017c t util_format_b8g8r8x8_srgb_pack_rgba_float
0000000000223bf0 000000000000017c t util_format_x8b8g8r8_srgb_pack_rgba_float
0000000000223d70 000000000000017c t util_format_x8r8g8b8_srgb_pack_rgba_float
0000000000223ef0 0000000000000178 t util_format_b5g6r5_srgb_pack_rgba_float
0000000000224070 00000000000001bc t util_format_a8r8g8b8_srgb_pack_rgba_float
0000000000224230 00000000000001bc t util_format_a8b8g8r8_srgb_pack_rgba_float
00000000002243f0 00000000000001b8 t util_format_b8g8r8a8_srgb_pack_rgba_float
00000000002245b0 00000000000000c4 t util_format_a1b5g5r5_uint_pack_signed
0000000000224680 0000000000000114 t util_format_r16a16_snorm_pack_rgba_float
00000000002247a0 0000000000000108 t util_format_r8a8_snorm_pack_rgba_float
00000000002248b0 0000000000000104 t util_format_r16a16_unorm_pack_rgba_float
00000000002249c0 0000000000000100 t util_format_r4a4_unorm_pack_rgba_float
0000000000224ac0 0000000000000124 t util_format_r8g8b8a8_unorm_pack_rgba_float
0000000000224bf0 00000000000011d4 t util_format_description
0000000000225dd0 0000000000000078 t _eglGrowArray
0000000000225e50 0000000000000078 t _eglCreateArray
0000000000225ed0 0000000000000068 t _eglDestroyArray
0000000000225f40 0000000000000050 t _eglAppendArray
0000000000225f90 0000000000000044 t _eglFindArray
0000000000225fe0 00000000000000e0 t _eglFilterArray
00000000002260c0 00000000000000c0 t _eglFlattenArray
0000000000226180 0000000000000014 t one_time_fini
00000000002261a0 0000000000000034 t generic_nop
00000000002261e0 0000000000000128 t check_compatible
0000000000226310 00000000000000a4 t _mesa_initialize
00000000002263c0 00000000000003d8 t _mesa_init_constants
00000000002267a0 0000000000000078 t _mesa_alloc_dispatch_table
0000000000226820 0000000000000038 t _mesa_initialize_dispatch_tables
0000000000226860 00000000000006c8 t _mesa_initialize_context
0000000000226f30 0000000000000344 t _mesa_copy_context
0000000000227280 000000000000048c t _mesa_make_current
0000000000227710 00000000000003cc t _mesa_free_context_data
0000000000227ae0 000000000000002c t _mesa_destroy_context
0000000000227b10 00000000000000b8 t _mesa_share_state
0000000000227bd0 0000000000000004 t _mesa_get_current_context
0000000000227be0 0000000000000088 T _mesa_Finish
0000000000227c70 0000000000000088 T _mesa_Flush
0000000000227d00 0000000000000004 t _mesa_get_cpu_features
0000000000227d10 00000000000000a4 t _mesa_print_info
0000000000227dc0 0000000000000024 t _mesa_init_debug
0000000000227df0 0000000000000170 t validate_params
0000000000227f60 000000000000011c t _mesa_lock_debug_state
0000000000228080 00000000000000a0 t validate_length
0000000000228120 0000000000000104 t debug_message_store
0000000000228230 00000000000000bc t debug_clear_group
00000000002282f0 000000000000027c t debug_make_group_writable.isra.0
0000000000228570 0000000000000214 t log_msg_locked_and_unlock
0000000000228790 000000000000005c t _mesa_debug_get_id
00000000002287f0 0000000000000088 t _mesa_debug_is_message_enabled
0000000000228880 0000000000000090 t _mesa_set_debug_state_int
0000000000228910 00000000000000d0 t _mesa_get_debug_state_int
00000000002289e0 0000000000000070 t _mesa_get_debug_state_ptr
0000000000228a50 0000000000000088 t _mesa_log_msg
0000000000228ae0 0000000000000250 T _mesa_DebugMessageInsert
0000000000228d30 00000000000002ac T _mesa_GetDebugMessageLog
0000000000228fe0 000000000000058c T _mesa_DebugMessageControl
0000000000229570 0000000000000064 T _mesa_DebugMessageCallback
00000000002295e0 00000000000001e0 T _mesa_PushDebugGroup
00000000002297c0 0000000000000144 T _mesa_PopDebugGroup
0000000000229910 0000000000000010 t _mesa_init_debug_output
0000000000229920 000000000000010c t _mesa_free_errors_data
0000000000229a30 000000000000009c T _mesa_StringMarkerGREMEDY
0000000000229ad0 0000000000000050 t _mesa_ClearDepth
0000000000229b20 0000000000000054 t _mesa_ClearDepthf
0000000000229b80 00000000000000b8 T _mesa_DepthFunc_no_error
0000000000229c40 00000000000000e4 t _mesa_DepthFunc
0000000000229d30 00000000000000b8 t _mesa_DepthMask
0000000000229df0 000000000000010c t _mesa_DepthBoundsEXT
0000000000229f00 0000000000000024 t _mesa_init_depth
0000000000229f30 0000000000000038 t check_atlas_for_deleted_list
0000000000229f70 000000000000010c t dlist_alloc
000000000022a080 00000000000000b8 t save_SetFragmentShaderConstantATI
000000000022a140 0000000000000084 t save_BindFragmentShaderATI
000000000022a1d0 000000000000002c t save_MultiDrawElementsIndirect
000000000022a200 000000000000002c t save_MultiDrawArraysIndirect
000000000022a230 000000000000002c t save_DrawElementsIndirect
000000000022a260 000000000000002c t save_DrawArraysIndirect
000000000022a290 000000000000002c t save_DrawElementsInstancedBaseVertexBaseInstance
000000000022a2c0 000000000000002c t save_DrawElementsInstancedBaseInstance
000000000022a2f0 000000000000002c t save_DrawArraysInstancedBaseInstance
000000000022a320 000000000000002c t save_DrawElementsInstancedBaseVertexARB
000000000022a350 000000000000002c t save_DrawElementsInstancedARB
000000000022a380 000000000000002c t save_DrawArraysInstancedARB
000000000022a3b0 000000000000002c t save_DispatchComputeIndirect
000000000022a3e0 000000000000002c t save_NewList
000000000022a410 0000000000000180 t save_VertexAttrib4fvNV
000000000022a590 00000000000001bc t save_VertexAttribL1ui64vARB
000000000022a750 00000000000001b0 t save_VertexAttribL1ui64ARB
000000000022a900 0000000000000220 t save_VertexAttribL2dv
000000000022ab20 00000000000001d8 t save_VertexAttribL1dv
000000000022ad00 0000000000000220 t save_VertexAttribL2d
000000000022af20 00000000000001d8 t save_VertexAttribL1d
000000000022b100 00000000000001d4 t save_MultiTexCoordP4uiv
000000000022b2e0 00000000000001d0 t save_MultiTexCoordP4ui
000000000022b4b0 00000000000001b8 t save_MultiTexCoordP3uiv
000000000022b670 00000000000001b4 t save_MultiTexCoordP3ui
000000000022b830 000000000000017c t save_MultiTexCoordP2uiv
000000000022b9b0 0000000000000178 t save_MultiTexCoordP2ui
000000000022bb30 0000000000000158 t save_MultiTexCoordP1uiv
000000000022bc90 0000000000000154 t save_MultiTexCoordP1ui
000000000022bdf0 00000000000001b4 t save_TexCoordP4uiv
000000000022bfb0 00000000000001b0 t save_TexCoordP4ui
000000000022c160 0000000000000198 t save_TexCoordP3uiv
000000000022c300 0000000000000194 t save_TexCoordP3ui
000000000022c4a0 000000000000015c t save_TexCoordP2uiv
000000000022c600 0000000000000158 t save_TexCoordP2ui
000000000022c760 0000000000000138 t save_TexCoordP1uiv
000000000022c8a0 0000000000000134 t save_TexCoordP1ui
000000000022c9e0 00000000000001b0 t save_VertexP4uiv
000000000022cb90 00000000000001ac t save_VertexP4ui
000000000022cd40 0000000000000194 t save_VertexP3uiv
000000000022cee0 0000000000000190 t save_VertexP3ui
000000000022d070 0000000000000158 t save_VertexP2uiv
000000000022d1d0 0000000000000154 t save_VertexP2ui
000000000022d330 0000000000000230 t save_VertexAttribI4uiv
000000000022d560 000000000000020c t save_VertexAttribI3uiv
000000000022d770 00000000000001fc t save_VertexAttribI2uiv
000000000022d970 0000000000000228 t save_VertexAttribI4ui
000000000022dba0 0000000000000204 t save_VertexAttribI3ui
000000000022ddb0 00000000000001f4 t save_VertexAttribI2ui
000000000022dfb0 00000000000001c8 t save_VertexAttribI1ui
000000000022e180 0000000000000238 t save_VertexAttribI4iv
000000000022e3c0 0000000000000230 t save_VertexAttribI3iv
000000000022e5f0 00000000000001f4 t save_VertexAttribI2iv
000000000022e7f0 0000000000000228 t save_VertexAttribI4i
000000000022ea20 0000000000000204 t save_VertexAttribI3i
000000000022ec30 00000000000001f4 t save_VertexAttribI2i
000000000022ee30 00000000000001c8 t save_VertexAttribI1i
000000000022f000 000000000000023c t save_VertexAttrib4fvARB
000000000022f240 000000000000023c t save_VertexAttrib4fARB
000000000022f480 0000000000000224 t save_VertexAttrib3fvARB
000000000022f6b0 000000000000021c t save_VertexAttrib3fARB
000000000022f8d0 0000000000000214 t save_VertexAttrib2fvARB
000000000022faf0 0000000000000214 t save_VertexAttrib2fARB
000000000022fd10 00000000000001e8 t save_VertexAttrib1fvARB
000000000022ff00 00000000000001e0 t save_VertexAttrib1fARB
00000000002300e0 000000000000009c t save_EvalPoint2
0000000000230180 0000000000000088 t save_EvalPoint1
0000000000230210 000000000000009c t save_EvalCoord2f
00000000002302b0 0000000000000008 t save_EvalCoord2fv
00000000002302c0 0000000000000094 t save_EvalCoord1f
0000000000230360 0000000000000008 t save_EvalCoord1fv
0000000000230370 0000000000000080 t save_End
00000000002303f0 0000000000000278 t save_VertexAttribL4dv
0000000000230670 000000000000026c t save_VertexAttribL3dv
00000000002308e0 0000000000000278 t save_VertexAttribL4d
0000000000230b60 0000000000000268 t save_VertexAttribL3d
0000000000230dd0 0000000000000178 t unpack_image.part.0
0000000000230f50 00000000000000dc t save_TexCoord1f
0000000000231030 00000000000000dc t save_FogCoordfEXT
0000000000231110 00000000000000dc t save_Indexf
00000000002311f0 00000000000000e0 t save_TexCoord1fv
00000000002312d0 00000000000000e0 t save_Indexfv
00000000002313b0 00000000000000e0 t save_EdgeFlag
0000000000231490 00000000000000e0 t save_FogCoordfvEXT
0000000000231570 00000000000000e8 t save_Vertex2f
0000000000231660 00000000000000ec t save_TexCoord2f
0000000000231750 00000000000000ec t save_TexCoord2fv
0000000000231840 0000000000000114 t save_TexCoord3f
0000000000231960 00000000000000e8 t save_Vertex2fv
0000000000231a50 0000000000000110 t save_Vertex3f
0000000000231b60 0000000000000114 t save_SecondaryColor3fEXT
0000000000231c80 0000000000000114 t save_Color3f
0000000000231da0 0000000000000114 t save_Normal3f
0000000000231ec0 0000000000000120 t save_TexCoord4f
0000000000231fe0 0000000000000120 t save_Color4f
0000000000232100 000000000000011c t save_Vertex4f
0000000000232220 0000000000000114 t save_Color3fv
0000000000232340 0000000000000110 t save_Vertex3fv
0000000000232450 0000000000000114 t save_Normal3fv
0000000000232570 0000000000000100 t save_MultiTexCoord1f
0000000000232670 0000000000000114 t save_SecondaryColor3fvEXT
0000000000232790 0000000000000114 t save_TexCoord3fv
00000000002328b0 0000000000000100 t save_MultiTexCoord1fv
00000000002329b0 0000000000000110 t save_MultiTexCoord2f
0000000000232ac0 0000000000000118 t save_Vertex4fv
0000000000232be0 000000000000011c t save_Color4fv
0000000000232d00 000000000000011c t save_TexCoord4fv
0000000000232e20 000000000000010c t save_MultiTexCoord2fv
0000000000232f30 0000000000000138 t save_MultiTexCoord3f
0000000000233070 0000000000000144 t save_MultiTexCoord4f
00000000002331c0 0000000000000134 t save_MultiTexCoord3fv
0000000000233300 000000000000013c t save_MultiTexCoord4fv
0000000000233440 000000000000005c t execute_list
00000000002334a0 0000000000004ba8 t execute_list.part.0
0000000000238050 0000000000000144 t save_VertexAttrib1fNV
00000000002381a0 0000000000000144 t save_VertexAttrib1fvNV
00000000002382f0 0000000000000154 t save_VertexAttrib2fNV
0000000000238450 0000000000000150 t save_VertexAttrib2fvNV
00000000002385a0 000000000000017c t save_VertexAttrib3fNV
0000000000238720 0000000000000178 t save_VertexAttrib3fvNV
00000000002388a0 0000000000000188 t save_VertexAttrib4fNV
0000000000238a30 000000000000017c t r11g11b10f_to_float3.constprop.0
0000000000238bb0 00000000000003f0 t save_SecondaryColorP3ui
0000000000238fa0 00000000000003f0 t save_ColorP3ui
0000000000239390 00000000000003f0 t save_NormalP3ui
0000000000239780 00000000000003f8 t save_SecondaryColorP3uiv
0000000000239b80 00000000000003f8 t save_NormalP3uiv
0000000000239f80 00000000000003f8 t save_ColorP3uiv
000000000023a380 00000000000004c4 t save_ColorP4ui
000000000023a850 00000000000004c8 t save_ColorP4uiv
000000000023ad20 0000000000000150 t save_CallLists
000000000023ae70 0000000000000954 t save_VertexAttribP4ui
000000000023b7d0 000000000000095c t save_VertexAttribP4uiv
000000000023c130 00000000000003e8 t save_VertexAttribP1ui
000000000023c520 00000000000003fc t save_VertexAttribP1uiv
000000000023c920 000000000000070c t save_VertexAttribP2ui
000000000023d030 00000000000006f0 t save_VertexAttribP2uiv
000000000023d720 0000000000000a90 t save_VertexAttribP3uiv
000000000023e1b0 0000000000000a90 t save_VertexAttribP3ui
000000000023ec40 000000000000003c t _mesa_delete_bitmap_atlas
000000000023ec80 000000000000000c t _mesa_lookup_list
000000000023ec90 0000000000000410 t _mesa_delete_list
000000000023f0a0 00000000000000a4 t destroy_list
000000000023f150 0000000000000024 t _mesa_dlist_alloc_aligned
000000000023f180 0000000000000050 t _mesa_dlist_alloc_opcode
000000000023f1d0 0000000000000088 t _mesa_compile_error
000000000023f260 0000000000000128 t save_NamedProgramLocalParameter4fEXT
000000000023f390 000000000000000c t save_NamedProgramLocalParameter4fvEXT
000000000023f3a0 000000000000001c t save_NamedProgramLocalParameter4dvEXT
000000000023f3c0 0000000000000014 t save_NamedProgramLocalParameter4dEXT
000000000023f3e0 0000000000000170 t save_NamedProgramStringEXT
000000000023f550 0000000000000218 t save_CompressedMultiTexSubImage3DEXT
000000000023f770 00000000000001f0 t save_CompressedMultiTexSubImage2DEXT
000000000023f960 00000000000001c4 t save_CompressedMultiTexSubImage1DEXT
000000000023fb30 0000000000000284 t save_CompressedMultiTexImage3DEXT
000000000023fdc0 0000000000000264 t save_CompressedMultiTexImage2DEXT
0000000000240030 0000000000000250 t save_CompressedMultiTexImage1DEXT
0000000000240280 0000000000000218 t save_CompressedTextureSubImage3DEXT
00000000002404a0 00000000000001f0 t save_CompressedTextureSubImage2DEXT
0000000000240690 00000000000001c4 t save_CompressedTextureSubImage1DEXT
0000000000240860 0000000000000284 t save_CompressedTextureImage3DEXT
0000000000240af0 0000000000000264 t save_CompressedTextureImage2DEXT
0000000000240d60 0000000000000250 t save_CompressedTextureImage1DEXT
0000000000240fb0 0000000000000148 t save_MultiTexEnvfvEXT
0000000000241100 00000000000000c4 t save_MultiTexEnvivEXT
00000000002411d0 000000000000002c t save_MultiTexEnviEXT
0000000000241200 0000000000000024 t save_MultiTexEnvfEXT
0000000000241230 0000000000000160 t save_CopyMultiTexSubImage3DEXT
0000000000241390 000000000000014c t save_CopyMultiTexSubImage2DEXT
00000000002414e0 0000000000000128 t save_CopyMultiTexSubImage1DEXT
0000000000241610 000000000000014c t save_CopyMultiTexImage2DEXT
0000000000241760 000000000000013c t save_CopyMultiTexImage1DEXT
00000000002418a0 00000000000001f8 t save_MultiTexSubImage3DEXT
0000000000241aa0 00000000000001e4 t save_MultiTexSubImage2DEXT
0000000000241c90 00000000000001b4 t save_MultiTexSubImage1DEXT
0000000000241e50 0000000000000264 t save_MultiTexImage3DEXT
00000000002420c0 0000000000000258 t save_MultiTexImage2DEXT
0000000000242320 0000000000000240 t save_MultiTexImage1DEXT
0000000000242560 000000000000011c t save_MultiTexParameterfvEXT
0000000000242680 0000000000000024 t save_MultiTexParameterfEXT
00000000002426b0 000000000000011c t save_MultiTexParameterIuivEXT
00000000002427d0 000000000000011c t save_MultiTexParameterIivEXT
00000000002428f0 000000000000011c t save_MultiTexParameterivEXT
0000000000242a10 0000000000000024 t save_MultiTexParameteriEXT
0000000000242a40 00000000000000e8 t save_BindMultiTextureEXT
0000000000242b30 0000000000000160 t save_CopyTextureSubImage3DEXT
0000000000242c90 000000000000014c t save_CopyTextureSubImage2DEXT
0000000000242de0 0000000000000128 t save_CopyTextureSubImage1DEXT
0000000000242f10 000000000000014c t save_CopyTextureImage2DEXT
0000000000243060 000000000000013c t save_CopyTextureImage1DEXT
00000000002431a0 00000000000001f8 t save_TextureSubImage3DEXT
00000000002433a0 00000000000001e4 t save_TextureSubImage2DEXT
0000000000243590 00000000000001b4 t save_TextureSubImage1DEXT
0000000000243750 0000000000000264 t save_TextureImage3DEXT
00000000002439c0 0000000000000258 t save_TextureImage2DEXT
0000000000243c20 0000000000000240 t save_TextureImage1DEXT
0000000000243e60 000000000000011c t save_TextureParameterIuivEXT
0000000000243f80 000000000000011c t save_TextureParameterIivEXT
00000000002440a0 000000000000011c t save_TextureParameterfvEXT
00000000002441c0 0000000000000024 t save_TextureParameterfEXT
00000000002441f0 000000000000011c t save_TextureParameterivEXT
0000000000244310 0000000000000024 t save_TextureParameteriEXT
0000000000244340 00000000000000c4 t save_MatrixPopEXT
0000000000244410 00000000000000c4 t save_MatrixPushEXT
00000000002444e0 000000000000013c t save_MatrixFrustumEXT
0000000000244620 000000000000013c t save_MatrixOrthoEXT
0000000000244760 00000000000000c4 t save_MatrixLoadIdentityEXT
0000000000244830 00000000000000fc t save_MatrixTranslatefEXT
0000000000244930 0000000000000010 t save_MatrixTranslatedEXT
0000000000244940 00000000000000fc t save_MatrixScalefEXT
0000000000244a40 0000000000000010 t save_MatrixScaledEXT
0000000000244a50 0000000000000104 t save_MatrixRotatefEXT
0000000000244b60 0000000000000014 t save_MatrixRotatedEXT
0000000000244b80 00000000000000fc t save_MatrixMultfEXT
0000000000244c80 0000000000000034 t save_MatrixMultTransposedEXT
0000000000244cc0 0000000000000034 t save_MatrixMultTransposefEXT
0000000000244d00 0000000000000040 t save_MatrixMultdEXT
0000000000244d40 00000000000000fc t save_MatrixLoadfEXT
0000000000244e40 0000000000000034 t save_MatrixLoadTransposedEXT
0000000000244e80 0000000000000034 t save_MatrixLoadTransposefEXT
0000000000244ec0 0000000000000040 t save_MatrixLoaddEXT
0000000000244f00 00000000000000dc t save_ConservativeRasterParameteriNV
0000000000244fe0 00000000000000dc t save_ConservativeRasterParameterfNV
00000000002450c0 00000000000000dc t save_SubpixelPrecisionBiasNV
00000000002451a0 0000000000000154 t save_WindowRectanglesEXT
0000000000245300 00000000000000f0 t save_PolygonOffsetClampEXT
00000000002453f0 0000000000000164 t save_ProgramUniformMatrix4x3dv
0000000000245560 0000000000000164 t save_ProgramUniformMatrix3x4dv
00000000002456d0 0000000000000160 t save_ProgramUniformMatrix4x2dv
0000000000245830 0000000000000160 t save_ProgramUniformMatrix2x4dv
0000000000245990 0000000000000164 t save_ProgramUniformMatrix3x2dv
0000000000245b00 0000000000000164 t save_ProgramUniformMatrix2x3dv
0000000000245c70 0000000000000160 t save_ProgramUniformMatrix4dv
0000000000245dd0 0000000000000164 t save_ProgramUniformMatrix3dv
0000000000245f40 0000000000000160 t save_ProgramUniformMatrix2dv
00000000002460a0 0000000000000164 t save_ProgramUniformMatrix4x3fv
0000000000246210 0000000000000164 t save_ProgramUniformMatrix3x4fv
0000000000246380 0000000000000160 t save_ProgramUniformMatrix4x2fv
00000000002464e0 0000000000000160 t save_ProgramUniformMatrix2x4fv
0000000000246640 0000000000000164 t save_ProgramUniformMatrix3x2fv
00000000002467b0 0000000000000164 t save_ProgramUniformMatrix2x3fv
0000000000246920 0000000000000160 t save_ProgramUniformMatrix4fv
0000000000246a80 0000000000000164 t save_ProgramUniformMatrix3fv
0000000000246bf0 0000000000000160 t save_ProgramUniformMatrix2fv
0000000000246d50 0000000000000148 t save_ProgramUniform4uiv
0000000000246ea0 000000000000014c t save_ProgramUniform3uiv
0000000000246ff0 0000000000000148 t save_ProgramUniform2uiv
0000000000247140 0000000000000148 t save_ProgramUniform1uiv
0000000000247290 0000000000000120 t save_ProgramUniform4ui
00000000002473b0 000000000000010c t save_ProgramUniform3ui
00000000002474c0 00000000000000fc t save_ProgramUniform2ui
00000000002475c0 00000000000000e8 t save_ProgramUniform1ui
00000000002476b0 0000000000000148 t save_ProgramUniform4iv
0000000000247800 000000000000014c t save_ProgramUniform3iv
0000000000247950 0000000000000148 t save_ProgramUniform2iv
0000000000247aa0 0000000000000148 t save_ProgramUniform1iv
0000000000247bf0 0000000000000120 t save_ProgramUniform4i
0000000000247d10 000000000000010c t save_ProgramUniform3i
0000000000247e20 00000000000000fc t save_ProgramUniform2i
0000000000247f20 00000000000000e8 t save_ProgramUniform1i
0000000000248010 0000000000000148 t save_ProgramUniform4dv
0000000000248160 000000000000014c t save_ProgramUniform3dv
00000000002482b0 0000000000000148 t save_ProgramUniform2dv
0000000000248400 0000000000000148 t save_ProgramUniform1dv
0000000000248550 0000000000000148 t save_ProgramUniform4d
00000000002486a0 0000000000000130 t save_ProgramUniform3d
00000000002487d0 0000000000000110 t save_ProgramUniform2d
00000000002488e0 00000000000000fc t save_ProgramUniform1d
00000000002489e0 0000000000000148 t save_ProgramUniform4fv
0000000000248b30 000000000000014c t save_ProgramUniform3fv
0000000000248c80 0000000000000148 t save_ProgramUniform2fv
0000000000248dd0 0000000000000148 t save_ProgramUniform1fv
0000000000248f20 000000000000011c t save_ProgramUniform4f
0000000000249040 0000000000000114 t save_ProgramUniform3f
0000000000249160 00000000000000fc t save_ProgramUniform2f
0000000000249260 00000000000000f4 t save_ProgramUniform1f
0000000000249360 00000000000000e8 t save_UseProgramStages
0000000000249450 0000000000000154 t save_UniformSubroutinesuiv
00000000002495b0 00000000000000e8 t save_UniformBlockBinding
00000000002496a0 00000000000000e8 t save_WaitSync
0000000000249790 00000000000000b4 t save_EndConditionalRender
0000000000249850 00000000000000dc t save_BeginConditionalRender
0000000000249930 00000000000000e8 t save_BlendEquationSeparatei
0000000000249a20 00000000000000dc t save_BlendEquationi
0000000000249b00 000000000000010c t save_BlendFuncSeparatei
0000000000249c10 00000000000000e8 t save_BlendFunci
0000000000249d00 0000000000000128 t save_SamplerParameterIuiv
0000000000249e30 0000000000000128 t save_SamplerParameterIiv
0000000000249f60 0000000000000128 t save_SamplerParameterfv
000000000024a090 0000000000000024 t save_SamplerParameterf
000000000024a0c0 0000000000000128 t save_SamplerParameteriv
000000000024a1f0 0000000000000024 t save_SamplerParameteri
000000000024a220 00000000000000dc t save_BindSampler
000000000024a300 00000000000000b4 t save_TextureBarrierNV
000000000024a3c0 00000000000000dc t save_VertexAttribDivisor
000000000024a4a0 00000000000000dc t save_EndQueryIndexed
000000000024a580 00000000000000e8 t save_BeginQueryIndexed
000000000024a670 00000000000000fc t save_DrawTransformFeedbackStreamInstanced
000000000024a770 00000000000000e8 t save_DrawTransformFeedbackInstanced
000000000024a860 00000000000000e8 t save_DrawTransformFeedbackStream
000000000024a950 00000000000000dc t save_DrawTransformFeedback
000000000024aa30 00000000000000b4 t save_ResumeTransformFeedback
000000000024aaf0 00000000000000b4 t save_PauseTransformFeedback
000000000024abb0 00000000000000dc t save_BindTransformFeedback
000000000024ac90 00000000000000b4 t save_EndTransformFeedback
000000000024ad50 00000000000000c4 t save_BeginTransformFeedback
000000000024ae20 0000000000000148 t save_ProgramUniform4ui64vARB
000000000024af70 0000000000000148 t save_ProgramUniform3ui64vARB
000000000024b0c0 0000000000000148 t save_ProgramUniform2ui64vARB
000000000024b210 0000000000000148 t save_ProgramUniform1ui64vARB
000000000024b360 0000000000000124 t save_ProgramUniform4ui64ARB
000000000024b490 0000000000000110 t save_ProgramUniform3ui64ARB
000000000024b5a0 0000000000000100 t save_ProgramUniform2ui64ARB
000000000024b6a0 00000000000000e8 t save_ProgramUniform1ui64ARB
000000000024b790 0000000000000148 t save_ProgramUniform4i64vARB
000000000024b8e0 0000000000000148 t save_ProgramUniform3i64vARB
000000000024ba30 0000000000000148 t save_ProgramUniform2i64vARB
000000000024bb80 0000000000000148 t save_ProgramUniform1i64vARB
000000000024bcd0 0000000000000124 t save_ProgramUniform4i64ARB
000000000024be00 0000000000000110 t save_ProgramUniform3i64ARB
000000000024bf10 0000000000000100 t save_ProgramUniform2i64ARB
000000000024c010 00000000000000e8 t save_ProgramUniform1i64ARB
000000000024c100 000000000000013c t save_Uniform4ui64vARB
000000000024c240 0000000000000140 t save_Uniform3ui64vARB
000000000024c380 000000000000013c t save_Uniform2ui64vARB
000000000024c4c0 000000000000013c t save_Uniform1ui64vARB
000000000024c600 000000000000010c t save_Uniform4ui64ARB
000000000024c710 0000000000000100 t save_Uniform3ui64ARB
000000000024c810 00000000000000e8 t save_Uniform2ui64ARB
000000000024c900 00000000000000e0 t save_Uniform1ui64ARB
000000000024c9e0 000000000000013c t save_Uniform4i64vARB
000000000024cb20 0000000000000140 t save_Uniform3i64vARB
000000000024cc60 000000000000013c t save_Uniform2i64vARB
000000000024cda0 000000000000013c t save_Uniform1i64vARB
000000000024cee0 000000000000010c t save_Uniform4i64ARB
000000000024cff0 0000000000000100 t save_Uniform3i64ARB
000000000024d0f0 00000000000000e8 t save_Uniform2i64ARB
000000000024d1e0 00000000000000e0 t save_Uniform1i64ARB
000000000024d2c0 0000000000000154 t save_UniformMatrix4x3dv
000000000024d420 0000000000000154 t save_UniformMatrix3x4dv
000000000024d580 0000000000000150 t save_UniformMatrix4x2dv
000000000024d6d0 0000000000000150 t save_UniformMatrix2x4dv
000000000024d820 0000000000000154 t save_UniformMatrix3x2dv
000000000024d980 0000000000000154 t save_UniformMatrix2x3dv
000000000024dae0 0000000000000150 t save_UniformMatrix4dv
000000000024dc30 0000000000000154 t save_UniformMatrix3dv
000000000024dd90 0000000000000150 t save_UniformMatrix2dv
000000000024dee0 000000000000013c t save_Uniform4dv
000000000024e020 0000000000000140 t save_Uniform3dv
000000000024e160 000000000000013c t save_Uniform2dv
000000000024e2a0 000000000000013c t save_Uniform1dv
000000000024e3e0 000000000000012c t save_Uniform4d
000000000024e510 0000000000000118 t save_Uniform3d
000000000024e630 00000000000000f8 t save_Uniform2d
000000000024e730 00000000000000e4 t save_Uniform1d
000000000024e820 000000000000013c t save_Uniform4uiv
000000000024e960 0000000000000140 t save_Uniform3uiv
000000000024eaa0 000000000000013c t save_Uniform2uiv
000000000024ebe0 000000000000013c t save_Uniform1uiv
000000000024ed20 000000000000010c t save_Uniform4ui
000000000024ee30 00000000000000fc t save_Uniform3ui
000000000024ef30 00000000000000e8 t save_Uniform2ui
000000000024f020 00000000000000dc t save_Uniform1ui
000000000024f100 0000000000000100 t save_ClearBufferfi
000000000024f200 0000000000000128 t save_ClearBufferfv
000000000024f330 0000000000000128 t save_ClearBufferuiv
000000000024f460 0000000000000128 t save_ClearBufferiv
000000000024f590 00000000000000dc t save_ClampColorARB
000000000024f670 00000000000000dc t save_ClipControl
000000000024f750 0000000000000104 t save_TexParameterIuiv
000000000024f860 0000000000000104 t save_TexParameterIiv
000000000024f970 00000000000000fc t save_ClearColorIui
000000000024fa70 00000000000000fc t save_ClearColorIi
000000000024fb70 00000000000000a4 t save_ProvokingVertexEXT
000000000024fc20 0000000000000140 t save_ProgramLocalParameters4fvEXT
000000000024fd60 0000000000000140 t save_ProgramEnvParameters4fvEXT
000000000024fea0 00000000000000dc t save_BlendEquationSeparateEXT
000000000024ff80 0000000000000154 t save_UniformMatrix4x3fv
00000000002500e0 0000000000000154 t save_UniformMatrix3x4fv
0000000000250240 0000000000000150 t save_UniformMatrix4x2fv
0000000000250390 0000000000000150 t save_UniformMatrix2x4fv
00000000002504e0 0000000000000154 t save_UniformMatrix3x2fv
0000000000250640 0000000000000154 t save_UniformMatrix2x3fv
00000000002507a0 0000000000000150 t save_UniformMatrix4fvARB
00000000002508f0 0000000000000154 t save_UniformMatrix3fvARB
0000000000250a50 0000000000000150 t save_UniformMatrix2fvARB
0000000000250ba0 000000000000013c t save_Uniform4ivARB
0000000000250ce0 0000000000000140 t save_Uniform3ivARB
0000000000250e20 000000000000013c t save_Uniform2ivARB
0000000000250f60 000000000000013c t save_Uniform1ivARB
00000000002510a0 000000000000010c t save_Uniform4iARB
00000000002511b0 00000000000000fc t save_Uniform3iARB
00000000002512b0 00000000000000e8 t save_Uniform2iARB
00000000002513a0 00000000000000dc t save_Uniform1iARB
0000000000251480 000000000000013c t save_Uniform4fvARB
00000000002515c0 0000000000000140 t save_Uniform3fvARB
0000000000251700 000000000000013c t save_Uniform2fvARB
0000000000251840 000000000000013c t save_Uniform1fvARB
0000000000251980 0000000000000104 t save_Uniform4fARB
0000000000251a90 00000000000000fc t save_Uniform3fARB
0000000000251b90 00000000000000e4 t save_Uniform2fARB
0000000000251c80 00000000000000dc t save_Uniform1fARB
0000000000251d60 00000000000000c4 t save_UseProgram
0000000000251e30 0000000000000160 t save_BlitFramebufferEXT
0000000000251f90 0000000000000110 t save_DrawBuffersARB
00000000002520a0 00000000000000dc t save_QueryCounter
0000000000252180 00000000000000c4 t save_EndQueryARB
0000000000252250 00000000000000dc t save_BeginQueryARB
0000000000252330 0000000000000104 t save_ProgramLocalParameter4fvARB
0000000000252440 000000000000011c t save_ProgramLocalParameter4fARB
0000000000252560 0000000000000104 t save_ProgramLocalParameter4dvARB
0000000000252670 000000000000012c t save_ProgramLocalParameter4dARB
00000000002527a0 000000000000011c t save_ProgramEnvParameter4fARB
00000000002528c0 000000000000000c t save_ProgramEnvParameter4fvARB
00000000002528d0 000000000000001c t save_ProgramEnvParameter4dvARB
00000000002528f0 0000000000000014 t save_ProgramEnvParameter4dARB
0000000000252910 00000000000000dc t save_BindProgramARB
00000000002529f0 0000000000000158 t save_ProgramStringARB
0000000000252b50 00000000000001b4 t save_CompressedTexSubImage1DARB
0000000000252d10 00000000000001d8 t save_CompressedTexSubImage2DARB
0000000000252ef0 0000000000000200 t save_CompressedTexSubImage3DARB
00000000002530f0 000000000000023c t save_CompressedTexImage1DARB
0000000000253330 0000000000000250 t save_CompressedTexImage2DARB
0000000000253580 0000000000000264 t save_CompressedTexImage3DARB
00000000002537f0 00000000000000dc t save_SampleCoverageARB
00000000002538d0 00000000000000b0 t save_ActiveTextureARB
0000000000253980 00000000000000e0 t save_DepthBoundsEXT
0000000000253a60 00000000000000c4 t save_ActiveStencilFaceEXT
0000000000253b30 00000000000000f8 t save_WindowPos4fMESA
0000000000253c30 0000000000000024 t save_WindowPos4svMESA
0000000000253c60 0000000000000024 t save_WindowPos4sMESA
0000000000253c90 000000000000001c t save_WindowPos4ivMESA
0000000000253cb0 0000000000000014 t save_WindowPos4iMESA
0000000000253cd0 000000000000000c t save_WindowPos4fvMESA
0000000000253ce0 000000000000001c t save_WindowPos4dvMESA
0000000000253d00 0000000000000014 t save_WindowPos4dMESA
0000000000253d20 0000000000000020 t save_WindowPos3svMESA
0000000000253d40 0000000000000020 t save_WindowPos3sMESA
0000000000253d60 000000000000001c t save_WindowPos3ivMESA
0000000000253d80 0000000000000014 t save_WindowPos3iMESA
0000000000253da0 0000000000000010 t save_WindowPos3fvMESA
0000000000253db0 0000000000000008 t save_WindowPos3fMESA
0000000000253dc0 000000000000001c t save_WindowPos3dvMESA
0000000000253de0 0000000000000014 t save_WindowPos3dMESA
0000000000253e00 000000000000001c t save_WindowPos2svMESA
0000000000253e20 000000000000001c t save_WindowPos2sMESA
0000000000253e40 0000000000000018 t save_WindowPos2ivMESA
0000000000253e60 0000000000000014 t save_WindowPos2iMESA
0000000000253e80 0000000000000010 t save_WindowPos2fvMESA
0000000000253e90 000000000000000c t save_WindowPos2fMESA
0000000000253ea0 0000000000000018 t save_WindowPos2dvMESA
0000000000253ec0 0000000000000014 t save_WindowPos2dMESA
0000000000253ee0 00000000000000fc t save_BlendFuncSeparateEXT
0000000000253fe0 000000000000000c t save_BlendFunc
0000000000253ff0 00000000000000e8 t save_DispatchCompute
00000000002540e0 00000000000000ec t save_DepthRangeIndexed
00000000002541d0 000000000000013c t save_DepthRangeArrayv
0000000000254310 00000000000000fc t save_ScissorIndexedv
0000000000254410 000000000000010c t save_ScissorIndexed
0000000000254520 000000000000013c t save_ScissorArrayv
0000000000254660 00000000000000fc t save_ViewportIndexedfv
0000000000254760 0000000000000104 t save_ViewportIndexedf
0000000000254870 000000000000013c t save_ViewportArrayv
00000000002549b0 0000000000000140 t save_PatchParameterfv
0000000000254af0 00000000000000dc t save_PatchParameteri
0000000000254bd0 00000000000000f4 t save_PointParameterfvEXT
0000000000254cd0 000000000000002c t save_PointParameterivNV
0000000000254d00 0000000000000028 t save_PointParameteriNV
0000000000254d30 0000000000000020 t save_PointParameterfEXT
0000000000254d50 00000000000000b0 t save_BlendEquation
0000000000254e00 00000000000000e4 t save_BlendColor
0000000000254ef0 0000000000000154 t save_StencilFuncSeparateATI
0000000000255050 00000000000000fc t save_StencilOpSeparate
0000000000255150 00000000000000dc t save_StencilMaskSeparate
0000000000255230 00000000000000fc t save_StencilFuncSeparate
0000000000255330 00000000000001dc t save_TexSubImage3D
0000000000255510 0000000000000210 t save_TexImage3D
0000000000255720 0000000000000138 t save_CopyTexSubImage3D
0000000000255860 00000000000001b8 t save_TexSubImage2D
0000000000255a20 0000000000000198 t save_TexSubImage1D
0000000000255bc0 0000000000000108 t save_PrioritizeTextures
0000000000255cd0 0000000000000128 t save_CopyTexSubImage2D
0000000000255e00 000000000000010c t save_CopyTexSubImage1D
0000000000255f10 0000000000000128 t save_CopyTexImage2D
0000000000256040 0000000000000114 t save_CopyTexImage1D
0000000000256160 00000000000000c8 t save_BindTexture
0000000000256230 00000000000000e8 t save_Viewport
0000000000256320 00000000000000dc t save_Translatef
0000000000256400 0000000000000010 t save_Translated
0000000000256410 00000000000000f0 t save_TexParameterfv
0000000000256500 0000000000000030 t save_TexParameteriv
0000000000256530 000000000000002c t save_TexParameteri
0000000000256560 0000000000000024 t save_TexParameterf
0000000000256590 0000000000000204 t save_TexImage2D
00000000002567a0 00000000000001f0 t save_TexImage1D
0000000000256990 00000000000000f0 t save_TexGenfv
0000000000256a80 000000000000003c t save_TexGeniv
0000000000256ac0 0000000000000024 t save_TexGenf
0000000000256af0 000000000000003c t save_TexGendv
0000000000256b30 0000000000000028 t save_TexGend
0000000000256b60 000000000000002c t save_TexGeni
0000000000256b90 0000000000000118 t save_TexEnvfv
0000000000256cb0 00000000000000c4 t save_TexEnviv
0000000000256d80 000000000000002c t save_TexEnvi
0000000000256db0 0000000000000024 t save_TexEnvf
0000000000256de0 00000000000000d4 t save_StencilOp
0000000000256ec0 00000000000000b0 t save_StencilMask
0000000000256f70 00000000000000d4 t save_StencilFunc
0000000000257050 00000000000000e0 t save_ShadeModel
0000000000257130 00000000000000e8 t save_Scissor
0000000000257220 00000000000000dc t save_Scalef
0000000000257300 0000000000000010 t save_Scaled
0000000000257310 00000000000000e4 t save_Rotatef
0000000000257400 0000000000000014 t save_Rotated
0000000000257420 00000000000000e4 t save_Rectf
0000000000257510 00000000000000b0 t save_ReadBuffer
00000000002575c0 00000000000000e4 t save_RasterPos4f
00000000002576b0 0000000000000024 t save_RasterPos4sv
00000000002576e0 0000000000000024 t save_RasterPos4s
0000000000257710 000000000000001c t save_RasterPos4iv
0000000000257730 0000000000000014 t save_RasterPos4i
0000000000257750 000000000000000c t save_RasterPos4fv
0000000000257760 000000000000001c t save_RasterPos4dv
0000000000257780 0000000000000014 t save_RasterPos4d
00000000002577a0 0000000000000020 t save_RasterPos3sv
00000000002577c0 0000000000000020 t save_RasterPos3s
00000000002577e0 000000000000001c t save_RasterPos3iv
0000000000257800 0000000000000014 t save_RasterPos3i
0000000000257820 0000000000000010 t save_RasterPos3fv
0000000000257830 0000000000000008 t save_RasterPos3f
0000000000257840 000000000000001c t save_RasterPos3dv
0000000000257860 0000000000000014 t save_RasterPos3d
0000000000257880 000000000000001c t save_RasterPos2sv
00000000002578a0 000000000000001c t save_RasterPos2s
00000000002578c0 0000000000000018 t save_RasterPos2iv
00000000002578e0 0000000000000014 t save_RasterPos2i
0000000000257900 0000000000000010 t save_RasterPos2fv
0000000000257910 000000000000000c t save_RasterPos2f
0000000000257920 0000000000000018 t save_RasterPos2dv
0000000000257940 0000000000000014 t save_RasterPos2d
0000000000257960 00000000000000b0 t save_PushName
0000000000257a10 00000000000000a0 t save_PushMatrix
0000000000257ab0 00000000000000b0 t save_PushAttrib
0000000000257b60 00000000000000a0 t save_PopName
0000000000257c00 00000000000000a0 t save_PopMatrix
0000000000257ca0 00000000000000a0 t save_PopAttrib
0000000000257d40 000000000000012c t save_PolygonStipple
0000000000257e70 00000000000000c4 t save_PolygonOffset
0000000000257f40 00000000000000c8 t save_PolygonMode
0000000000258010 00000000000000bc t save_PointSize
00000000002580d0 00000000000000c4 t save_PixelZoom
00000000002581a0 00000000000000c8 t save_PixelTransferf
0000000000258270 0000000000000008 t save_PixelTransferi
0000000000258280 0000000000000128 t save_PixelMapfv
00000000002583b0 00000000000000c8 t save_PixelMapusv
0000000000258480 00000000000000d0 t save_PixelMapuiv
0000000000258550 00000000000000bc t save_PassThrough
0000000000258610 000000000000011c t save_Ortho
0000000000258730 00000000000000c8 t save_MultMatrixf
0000000000258800 0000000000000030 t save_MultTransposeMatrixfARB
0000000000258830 0000000000000030 t save_MultTransposeMatrixdARB
0000000000258860 0000000000000040 t save_MultMatrixd
00000000002588a0 00000000000000b0 t save_MatrixMode
0000000000258950 000000000000010c t save_MapGrid2f
0000000000258a60 0000000000000014 t save_MapGrid2d
0000000000258a80 00000000000000d0 t save_MapGrid1f
0000000000258b50 000000000000000c t save_MapGrid1d
0000000000258b60 0000000000000198 t save_Map2f
0000000000258d00 00000000000001a8 t save_Map2d
0000000000258eb0 000000000000013c t save_Map1f
0000000000258ff0 0000000000000144 t save_Map1d
0000000000259140 00000000000000b0 t save_LogicOp
00000000002591f0 00000000000000b0 t save_LoadName
00000000002592a0 00000000000000c8 t save_LoadMatrixf
0000000000259370 0000000000000030 t save_LoadTransposeMatrixfARB
00000000002593a0 0000000000000030 t save_LoadTransposeMatrixdARB
00000000002593d0 0000000000000040 t save_LoadMatrixd
0000000000259410 00000000000000a0 t save_LoadIdentity
00000000002594b0 00000000000000b0 t save_ListBase
0000000000259560 00000000000000bc t save_LineWidth
0000000000259620 00000000000000cc t save_LineStipple
00000000002596f0 0000000000000114 t save_Lightfv
0000000000259810 0000000000000148 t save_Lightiv
0000000000259960 0000000000000024 t save_Lighti
0000000000259990 0000000000000024 t save_Lightf
00000000002599c0 00000000000000e8 t save_LightModelfv
0000000000259ab0 0000000000000108 t save_LightModeliv
0000000000259bc0 0000000000000024 t save_LightModeli
0000000000259bf0 0000000000000024 t save_LightModelf
0000000000259c20 00000000000000a0 t save_InitNames
0000000000259cc0 00000000000000b0 t save_IndexMask
0000000000259d70 00000000000000c8 t save_Hint
0000000000259e40 000000000000011c t save_Frustum
0000000000259f60 00000000000000b0 t save_FrontFace
000000000025a010 00000000000000e8 t save_Fogfv
000000000025a100 0000000000000108 t save_Fogiv
000000000025a210 0000000000000024 t save_Fogi
000000000025a240 0000000000000024 t save_Fogf
000000000025a270 00000000000000f4 t save_EvalMesh2
000000000025a370 00000000000000d4 t save_EvalMesh1
000000000025a450 00000000000000dc t save_EnableIndexed
000000000025a530 00000000000000b0 t save_Enable
000000000025a5e0 0000000000000178 t save_DrawPixels
000000000025a760 00000000000000b0 t save_DrawBuffer
000000000025a810 00000000000000dc t save_DisableIndexed
000000000025a8f0 00000000000000b0 t save_Disable
000000000025a9a0 00000000000000cc t save_DepthRange
000000000025aa70 00000000000000b0 t save_DepthMask
000000000025ab20 00000000000000b0 t save_DepthFunc
000000000025abd0 00000000000000b0 t save_CullFace
000000000025ac80 00000000000000f4 t save_CopyPixels
000000000025ad80 00000000000000c8 t save_ColorMaterial
000000000025ae50 00000000000000bc t save_ColorMaskIndexed
000000000025af10 00000000000000f0 t save_ColorMask
000000000025b000 00000000000000e8 t save_ClipPlane
000000000025b0f0 00000000000000b0 t save_ClearStencil
000000000025b1a0 00000000000000bc t save_ClearIndex
000000000025b260 00000000000000c0 t save_ClearDepth
000000000025b320 00000000000000e4 t save_ClearColor
000000000025b410 00000000000000e4 t save_ClearAccum
000000000025b500 00000000000000b0 t save_Clear
000000000025b5b0 0000000000000198 t save_Bitmap
000000000025b750 00000000000000c8 t save_AlphaFunc
000000000025b820 00000000000000c8 t save_Accum
000000000025b8f0 00000000000002d0 t save_Materialfv
000000000025bbc0 00000000000000b4 t save_PrimitiveRestartNV
000000000025bc80 0000000000000098 t save_Begin
000000000025bd20 00000000000000a4 T _mesa_IsList
000000000025bdd0 0000000000000130 T _mesa_DeleteLists
000000000025bf00 0000000000000208 T _mesa_GenLists
000000000025c110 00000000000001cc T _mesa_NewList
000000000025c2e0 000000000000019c T _mesa_EndList
000000000025c480 00000000000000b8 t _mesa_CallList
000000000025c540 00000000000000c0 t save_CallList
000000000025c600 00000000000006cc T _mesa_CallLists
000000000025ccd0 0000000000000088 T _mesa_ListBase
000000000025cd60 00000000000027ac t _mesa_initialize_save_table
000000000025f510 000000000000000c t _mesa_install_dlist_vtxfmt
000000000025f520 000000000000061c t _mesa_init_display_list
000000000025fb40 0000000000000028 t _mesa_free_display_list_data
000000000025fb70 000000000000009c t need_xfb_remaining_prims_check
000000000025fc10 0000000000000150 t count_tessellated_primitives
000000000025fd60 00000000000000c0 t valid_draw_indirect_parameters
000000000025fe20 0000000000000164 t check_valid_to_render.part.0
000000000025ff90 0000000000000354 t _mesa_valid_to_render
00000000002602f0 00000000000000e4 t _mesa_is_valid_prim_mode
00000000002603e0 0000000000000374 t _mesa_valid_prim_mode
0000000000260760 0000000000000210 t valid_draw_indirect
0000000000260970 0000000000000108 t validate_draw_arrays.constprop.0
0000000000260a80 0000000000000160 t validate_DrawElements_common.constprop.0
0000000000260be0 000000000000000c t _mesa_validate_DrawElements
0000000000260bf0 0000000000000194 t _mesa_validate_MultiDrawElements
0000000000260d90 0000000000000040 t _mesa_validate_DrawRangeElements
0000000000260dd0 0000000000000014 t _mesa_validate_DrawArrays
0000000000260df0 0000000000000098 t _mesa_validate_DrawArraysInstanced
0000000000260e90 0000000000000190 t _mesa_validate_MultiDrawArrays
0000000000261020 0000000000000060 t _mesa_validate_DrawElementsInstanced
0000000000261080 0000000000000128 t _mesa_validate_DrawTransformFeedback
00000000002611b0 0000000000000064 t _mesa_valid_draw_indirect_multi
0000000000261220 0000000000000010 t _mesa_validate_DrawArraysIndirect
0000000000261230 00000000000000bc t _mesa_validate_DrawElementsIndirect
00000000002612f0 0000000000000090 t _mesa_validate_MultiDrawArraysIndirect
0000000000261380 000000000000012c t _mesa_validate_MultiDrawElementsIndirect
00000000002614b0 00000000000000c4 t _mesa_validate_MultiDrawArraysIndirectCount
0000000000261580 0000000000000154 t _mesa_validate_MultiDrawElementsIndirectCount
00000000002616e0 000000000000014c t output_if_debug
0000000000261830 0000000000000094 t flush_delayed_errors
00000000002618d0 000000000000000c t _mesa_get_log_file
00000000002618e0 00000000000000d0 t _mesa_warning
00000000002619b0 0000000000000108 t _mesa_problem
0000000000261ac0 00000000000000b0 t _mesa_gl_vdebugf
0000000000261b70 0000000000000064 t _mesa_gl_debugf
0000000000261be0 00000000000002f4 t _mesa_error
0000000000261ee0 0000000000000030 t _mesa_error_no_memory
0000000000261f10 0000000000000004 t _mesa_debug
0000000000261f20 00000000000000c4 t _mesa_log
0000000000261ff0 0000000000000068 t _mesa_shader_debug
0000000000262060 00000000000000c4 t get_1d_map
0000000000262130 00000000000000c0 t get_2d_map
00000000002621f0 0000000000000024 t _mesa_evaluator_components
0000000000262220 00000000000000d8 t _mesa_copy_map_points1f
0000000000262300 00000000000000d4 t _mesa_copy_map_points1d
00000000002623e0 00000000000001ec t map1
00000000002625d0 0000000000000190 t _mesa_copy_map_points2f
0000000000262760 0000000000000158 t _mesa_copy_map_points2d
00000000002628c0 0000000000000260 t map2
0000000000262b20 0000000000000008 T _mesa_Map1f
0000000000262b30 0000000000000010 T _mesa_Map1d
0000000000262b40 0000000000000008 T _mesa_Map2f
0000000000262b50 0000000000000018 T _mesa_Map2d
0000000000262b70 00000000000001b8 t _mesa_GetnMapdvARB
0000000000262d30 000000000000000c T _mesa_GetMapdv
0000000000262d40 00000000000001b4 t _mesa_GetnMapfvARB
0000000000262f00 000000000000000c T _mesa_GetMapfv
0000000000262f10 00000000000001b0 t _mesa_GetnMapivARB
00000000002630c0 000000000000000c T _mesa_GetMapiv
00000000002630d0 000000000000009c t _mesa_MapGrid1f
0000000000263170 000000000000000c T _mesa_MapGrid1d
0000000000263180 00000000000000f8 t _mesa_MapGrid2f
0000000000263280 0000000000000014 T _mesa_MapGrid2d
00000000002632a0 000000000000002c t _mesa_install_eval_vtxfmt
00000000002632d0 0000000000000410 t _mesa_init_eval
00000000002636e0 00000000000000a8 t _mesa_free_eval_data
0000000000263790 0000000000000040 t free_unknown_extensions_strings
00000000002637d0 0000000000000008 t extension_name_compare
00000000002637e0 0000000000000048 t extension_compare
0000000000263830 000000000000006c t _mesa_override_extensions
00000000002638a0 0000000000000294 t _mesa_one_time_init_extension_overrides
0000000000263b40 0000000000000034 t _mesa_init_extensions
0000000000263b80 000000000000022c t _mesa_make_extension_string
0000000000263db0 0000000000000098 t _mesa_get_extension_count
0000000000263e50 00000000000000b8 t _mesa_get_enabled_extension
0000000000263f10 0000000000000004 t delete_dummy_renderbuffer
0000000000263f20 0000000000000004 t delete_dummy_framebuffer
0000000000263f30 00000000000000b8 t get_framebuffer_target
0000000000263ff0 00000000000000ec t get_attachment
00000000002640e0 0000000000000078 t driver_RenderTexture_is_safe
0000000000264160 000000000000009c t validate_framebuffer_parameter_extensions
0000000000264200 0000000000000268 t framebuffer_parameteri
0000000000264470 0000000000000130 t check_layer
00000000002645a0 00000000000000b4 t remove_attachment
0000000000264660 000000000000018c t create_framebuffers
00000000002647f0 00000000000000fc t check_texture_target
00000000002648f0 0000000000000208 t sample_locations
0000000000264b00 0000000000000044 t invalidate_rb
0000000000264b50 0000000000000070 t check_end_texture_render
0000000000264bc0 0000000000000198 t discard_framebuffer.part.0
0000000000264d60 0000000000000140 t create_render_buffers
0000000000264ea0 00000000000002f0 t get_framebuffer_parameteriv
0000000000265190 00000000000001b4 t invalidate_framebuffer_storage.constprop.0
0000000000265350 0000000000000118 t check_layered_texture_target.constprop.0
0000000000265470 0000000000000194 t get_render_buffer_parameteriv
0000000000265610 00000000000000cc t lookup_named_framebuffer_ext_dsa
00000000002656e0 00000000000007bc t get_framebuffer_attachment_parameter
0000000000265ea0 00000000000001f4 t framebuffer_renderbuffer_error
00000000002660a0 0000000000000158 t bind_renderbuffer
0000000000266200 0000000000000078 t _mesa_init_fbobjects
0000000000266280 000000000000000c t _mesa_get_incomplete_framebuffer
0000000000266290 0000000000000018 t _mesa_lookup_renderbuffer
00000000002662b0 0000000000000018 t _mesa_lookup_framebuffer
00000000002662d0 000000000000012c t _mesa_lookup_framebuffer_dsa
0000000000266400 0000000000000080 t _mesa_lookup_framebuffer_err
0000000000266480 0000000000000124 t _mesa_update_texture_renderbuffer
00000000002665b0 0000000000000110 T _mesa_FramebufferRenderbuffer_sw
00000000002666c0 0000000000000064 t _mesa_has_depthstencil_combined
0000000000266730 00000000000000a8 t _mesa_is_legal_color_format
00000000002667e0 000000000000022c t test_attachment_completeness
0000000000266a10 0000000000000c54 t _mesa_test_framebuffer_completeness
0000000000267670 0000000000000080 T _mesa_IsRenderbuffer
00000000002676f0 0000000000000004 T _mesa_BindRenderbuffer
0000000000267700 0000000000000004 T _mesa_BindRenderbufferEXT
0000000000267710 00000000000000c4 t _mesa_FramebufferParameteri
00000000002677e0 0000000000000004 T _mesa_FramebufferParameteriMESA
00000000002677f0 00000000000000c4 t _mesa_GetFramebufferParameteriv
00000000002678c0 0000000000000004 T _mesa_GetFramebufferParameterivMESA
00000000002678d0 0000000000000090 t _mesa_detach_renderbuffer
0000000000267960 0000000000000234 T _mesa_DeleteRenderbuffers
0000000000267ba0 0000000000000030 T _mesa_GenRenderbuffers_no_error
0000000000267bd0 0000000000000050 T _mesa_GenRenderbuffers
0000000000267c20 0000000000000030 T _mesa_CreateRenderbuffers_no_error
0000000000267c50 0000000000000050 T _mesa_CreateRenderbuffers
0000000000267ca0 0000000000000ff8 t _mesa_base_fbo_format
0000000000268ca0 0000000000000148 t _mesa_renderbuffer_storage
0000000000268df0 00000000000001a0 t renderbuffer_storage
0000000000268f90 00000000000000e4 T _mesa_EGLImageTargetRenderbufferStorageOES
0000000000269080 0000000000000094 T _mesa_RenderbufferStorage
0000000000269120 0000000000000084 T _mesa_RenderbufferStorageMultisample
00000000002691b0 0000000000000094 T _mesa_RenderbufferStorageMultisampleAdvancedAMD
0000000000269250 00000000000000c4 T _mesa_NamedRenderbufferStorage
0000000000269320 0000000000000110 T _mesa_NamedRenderbufferStorageEXT
0000000000269430 00000000000000c8 T _mesa_NamedRenderbufferStorageMultisample
0000000000269500 0000000000000118 T _mesa_NamedRenderbufferStorageMultisampleEXT
0000000000269620 00000000000000d8 T _mesa_NamedRenderbufferStorageMultisampleAdvancedAMD
0000000000269700 0000000000000078 T _mesa_GetRenderbufferParameteriv
0000000000269780 00000000000000a0 T _mesa_GetNamedRenderbufferParameteriv
0000000000269820 0000000000000100 T _mesa_GetNamedRenderbufferParameterivEXT
0000000000269920 0000000000000084 T _mesa_IsFramebuffer
00000000002699b0 00000000000001e0 t _mesa_bind_framebuffers
0000000000269b90 0000000000000170 t bind_framebuffer
0000000000269d00 0000000000000004 t _mesa_BindFramebuffer
0000000000269d10 0000000000000004 T _mesa_BindFramebufferEXT
0000000000269d20 0000000000000170 T _mesa_DeleteFramebuffers
0000000000269e90 0000000000000008 T _mesa_GenFramebuffers
0000000000269ea0 0000000000000008 T _mesa_CreateFramebuffers
0000000000269eb0 0000000000000160 T _mesa_CheckFramebufferStatus_no_error
000000000026a010 000000000000016c T _mesa_CheckFramebufferStatus
000000000026a180 0000000000000170 t _mesa_CheckNamedFramebufferStatus
000000000026a2f0 0000000000000150 T _mesa_CheckNamedFramebufferStatusEXT
000000000026a440 000000000000015c t _mesa_get_and_validate_attachment
000000000026a5a0 00000000000002f4 t _mesa_framebuffer_texture
000000000026a8a0 00000000000000bc t framebuffer_texture_with_dims_no_error
000000000026a960 000000000000042c t framebuffer_texture_with_dims
000000000026ad90 0000000000000008 T _mesa_FramebufferTexture1D_no_error
000000000026ada0 0000000000000054 T _mesa_FramebufferTexture1D
000000000026ae00 0000000000000008 T _mesa_FramebufferTexture2D_no_error
000000000026ae10 0000000000000054 T _mesa_FramebufferTexture2D
000000000026ae70 0000000000000058 T _mesa_FramebufferTexture2DMultisampleEXT
000000000026aed0 0000000000000004 T _mesa_FramebufferTexture3D_no_error
000000000026aee0 0000000000000054 T _mesa_FramebufferTexture3D
000000000026af40 0000000000000100 T _mesa_FramebufferTextureLayer_no_error
000000000026b040 0000000000000264 T _mesa_FramebufferTextureLayer
000000000026b2b0 000000000000010c T _mesa_NamedFramebufferTextureLayer_no_error
000000000026b3c0 0000000000000280 T _mesa_NamedFramebufferTextureLayer
000000000026b640 0000000000000110 T _mesa_FramebufferTexture_no_error
000000000026b750 0000000000000290 T _mesa_FramebufferTexture
000000000026b9e0 000000000000011c T _mesa_NamedFramebufferTexture_no_error
000000000026bb00 000000000000028c T _mesa_NamedFramebufferTexture
000000000026bd90 0000000000000058 T _mesa_NamedFramebufferTexture1DEXT
000000000026bdf0 0000000000000058 T _mesa_NamedFramebufferTexture2DEXT
000000000026be50 0000000000000058 T _mesa_NamedFramebufferTexture3DEXT
000000000026beb0 00000000000000bc T _mesa_FramebufferRenderbuffer_no_error
000000000026bf70 0000000000000104 T _mesa_FramebufferRenderbuffer
000000000026c080 00000000000000c8 T _mesa_NamedFramebufferRenderbuffer_no_error
000000000026c150 00000000000000bc T _mesa_NamedFramebufferRenderbuffer
000000000026c210 0000000000000084 T _mesa_NamedFramebufferRenderbufferEXT
000000000026c2a0 0000000000000104 T _mesa_GetFramebufferAttachmentParameteriv
000000000026c3b0 00000000000000c4 T _mesa_GetNamedFramebufferAttachmentParameteriv
000000000026c480 000000000000009c T _mesa_GetNamedFramebufferAttachmentParameterivEXT
000000000026c520 00000000000000f8 T _mesa_NamedFramebufferParameteri
000000000026c620 000000000000007c T _mesa_NamedFramebufferParameteriEXT
000000000026c6a0 00000000000000e0 T _mesa_GetFramebufferParameterivEXT
000000000026c780 00000000000000ec T _mesa_GetNamedFramebufferParameteriv
000000000026c870 000000000000007c T _mesa_GetNamedFramebufferParameterivEXT
000000000026c8f0 0000000000000004 T _mesa_InvalidateSubFramebuffer_no_error
000000000026c900 000000000000008c T _mesa_InvalidateSubFramebuffer
000000000026c990 00000000000000cc T _mesa_InvalidateNamedFramebufferSubData
000000000026ca60 00000000000000d4 T _mesa_InvalidateFramebuffer_no_error
000000000026cb40 00000000000000d8 T _mesa_InvalidateFramebuffer
000000000026cc20 00000000000000bc T _mesa_InvalidateNamedFramebufferData
000000000026cce0 000000000000013c T _mesa_DiscardFramebufferEXT
000000000026ce20 0000000000000108 T _mesa_FramebufferSampleLocationsfvARB
000000000026cf30 00000000000000c8 T _mesa_NamedFramebufferSampleLocationsfvARB
000000000026d000 0000000000000120 T _mesa_FramebufferSampleLocationsfvARB_no_error
000000000026d120 0000000000000078 T _mesa_NamedFramebufferSampleLocationsfvARB_no_error
000000000026d1a0 0000000000000058 T _mesa_EvaluateDepthValuesARB
000000000026d200 0000000000000100 t write_hit_record
000000000026d300 00000000000001a4 T _mesa_FeedbackBuffer
000000000026d4b0 00000000000000b0 T _mesa_PassThrough
000000000026d560 0000000000000194 t _mesa_feedback_vertex
000000000026d700 00000000000000e4 T _mesa_SelectBuffer
000000000026d7f0 000000000000003c t _mesa_update_hitflag
000000000026d830 000000000000009c T _mesa_InitNames
000000000026d8d0 00000000000000ec T _mesa_LoadName
000000000026d9c0 00000000000000f4 T _mesa_PushName
000000000026dac0 00000000000000d4 T _mesa_PopName
000000000026dba0 00000000000001f4 T _mesa_RenderMode
000000000026dda0 0000000000000034 t _mesa_init_feedback
000000000026dde0 00000000000004e0 t _mesa_Fogfv
000000000026e2c0 0000000000000024 t _mesa_Fogf
000000000026e2f0 000000000000002c t _mesa_Fogi
000000000026e320 00000000000000f8 T _mesa_Fogiv
000000000026e420 0000000000000040 t _mesa_init_fog
000000000026e460 000000000000000c t array_formats_equal
000000000026e470 0000000000000010 t format_array_format_table_destroy
000000000026e480 00000000000000bc t format_array_format_table_init
000000000026e540 0000000000000038 t _mesa_get_format_name
000000000026e580 0000000000000050 t _mesa_get_format_bytes
000000000026e5d0 0000000000000250 t _mesa_get_format_bits
000000000026e820 0000000000000094 t _mesa_get_format_max_bits
000000000026e8c0 000000000000003c t _mesa_get_format_layout
000000000026e900 000000000000003c t _mesa_get_format_datatype
000000000026e940 0000000000000140 t _mesa_get_format_base_format
000000000026ea80 0000000000000048 t _mesa_get_format_block_size
000000000026ead0 0000000000000050 t _mesa_get_format_block_size_3d
000000000026eb20 000000000000003c t _mesa_format_to_array_format
000000000026eb60 0000000000000068 t _mesa_format_from_array_format
000000000026ebd0 0000000000000058 t _mesa_is_format_compressed
000000000026ec30 0000000000000048 t _mesa_is_format_packed_depth_stencil
000000000026ec80 0000000000000080 t _mesa_is_format_integer_color
000000000026ed00 0000000000000054 t _mesa_is_format_unsigned
000000000026ed60 0000000000000070 t _mesa_is_format_signed
000000000026edd0 000000000000004c t _mesa_is_format_integer
000000000026ee20 000000000000003c t _mesa_is_format_srgb
000000000026ee60 0000000000000010 t _mesa_is_format_etc2
000000000026ee70 0000000000000010 t _mesa_is_format_astc_2d
000000000026ee80 00000000000000d4 t _mesa_get_uncompressed_format
000000000026ef60 0000000000000098 t _mesa_format_num_components
000000000026f000 00000000000000b8 t _mesa_format_has_color_component
000000000026f0c0 0000000000000098 t _mesa_format_image_size
000000000026f160 00000000000000b4 t _mesa_format_image_size64
000000000026f220 000000000000006c t _mesa_format_row_stride
000000000026f290 00000000000004b4 t _mesa_uncompressed_format_to_type_and_comps
000000000026f750 0000000000000148 t _mesa_format_matches_format_and_type
000000000026f8a0 0000000000000140 t renderbuffer_exists.part.0
000000000026f9e0 00000000000001c0 t update_framebuffer
000000000026fba0 0000000000000070 T _mesa_new_framebuffer
000000000026fc10 0000000000000170 t _mesa_initialize_window_framebuffer
000000000026fd80 0000000000000074 t _mesa_free_framebuffer_data
000000000026fe00 0000000000000034 T _mesa_destroy_framebuffer
000000000026fe40 0000000000000084 t _mesa_reference_framebuffer_
000000000026fed0 00000000000000b0 t _mesa_intersect_scissor_bounding_box
000000000026ff80 0000000000000128 t _mesa_resize_framebuffer
00000000002700b0 0000000000000078 t _mesa_update_draw_buffer_bounds
0000000000270130 0000000000000260 t _mesa_update_framebuffer_visual
0000000000270390 000000000000005c t _mesa_update_framebuffer
00000000002703f0 0000000000000078 t _mesa_source_buffer_exists
0000000000270470 0000000000000078 t _mesa_dest_buffer_exists
00000000002704f0 000000000000019c t _mesa_get_color_read_format
0000000000270690 0000000000000098 t _mesa_get_color_read_type
0000000000270730 0000000000000084 t _mesa_get_read_renderbuffer_for_format
00000000002707c0 0000000000000044 t _mesa_is_multisample_enabled
0000000000270810 0000000000000024 t _mesa_is_alpha_test_enabled
0000000000270840 00000000000003c8 t _mesa_GetString
0000000000270c10 00000000000001b8 T _mesa_GetStringi
0000000000270dd0 00000000000001e8 t _get_vao_pointerv
0000000000270fc0 0000000000000060 T _mesa_GetPointerv
0000000000271020 0000000000000064 T _mesa_GetPointerIndexedvEXT
0000000000271090 0000000000000078 T _mesa_GetError
0000000000271110 00000000000001cc t get_map_idx
00000000002712e0 000000000000007c t _mesa_compute_component_mapping
0000000000271360 000000000000009c t _mesa_type_is_packed
0000000000271400 00000000000000b8 t _mesa_sizeof_type
00000000002714c0 0000000000000170 t _mesa_sizeof_packed_type
0000000000271630 0000000000000180 t _mesa_components_in_format
00000000002717b0 0000000000000300 t _mesa_bytes_per_pixel
0000000000271ab0 00000000000000e0 t _mesa_bytes_per_vertex_attrib
0000000000271b90 00000000000000ec t _mesa_is_enum_format_unsized
0000000000271c80 00000000000000fc t _mesa_is_enum_format_unorm
0000000000271d80 0000000000000030 t _mesa_is_enum_format_snorm
0000000000271db0 000000000000005c t _mesa_is_enum_format_unsigned_int
0000000000271e10 000000000000004c t _mesa_is_enum_format_signed_int
0000000000271e60 0000000000000064 t _mesa_is_astc_format
0000000000271ed0 0000000000000014 t _mesa_is_etc2_format
0000000000271ef0 00000000000000a8 t _mesa_is_enum_format_integer
0000000000271fa0 0000000000000070 t _mesa_is_type_unsigned
0000000000272010 000000000000027c t _mesa_is_color_format
0000000000272290 0000000000000040 t _mesa_is_depth_format
00000000002722d0 0000000000000010 t _mesa_is_stencil_format
00000000002722e0 0000000000000010 t _mesa_is_ycbcr_format
00000000002722f0 0000000000000030 t _mesa_is_depthstencil_format
0000000000272320 000000000000008c t _mesa_is_depth_or_stencil_format
00000000002723b0 000000000000042c t _mesa_is_compressed_format
00000000002727e0 0000000000000084 t _mesa_is_srgb_format
0000000000272870 00000000000000cc t _mesa_unpack_format_to_base_format
0000000000272940 00000000000000cc t _mesa_base_format_to_integer_format
0000000000272a10 0000000000000298 t _mesa_base_format_has_channel
0000000000272cb0 00000000000000e4 t _mesa_generic_compressed_format_to_uncompressed_format
0000000000272da0 00000000000001cc t _mesa_get_nongeneric_internalformat
0000000000272f70 0000000000000020 t _mesa_get_linear_internalformat
0000000000272f90 00000000000008ec t _mesa_error_check_format_and_type
0000000000273880 0000000000000214 t _mesa_es_error_check_format_and_type
0000000000273aa0 0000000000000b88 t _mesa_base_tex_format
0000000000274630 0000000000001318 t _mesa_gles_error_check_format_and_type
0000000000275950 000000000000008c t _mesa_swap_bytes_in_type_enum
00000000002759e0 0000000000001158 t _mesa_format_from_format_and_type
0000000000276b40 000000000000021c t _mesa_is_es3_color_renderable
0000000000276d60 00000000000001ac t _mesa_is_es3_texture_filterable
0000000000276f10 000000000000000c t uint_key_compare
0000000000276f20 0000000000000004 t uint_key_hash
0000000000276f30 0000000000000088 t hash_walk_unlocked
0000000000276fc0 0000000000000090 t _mesa_NewHashTable
0000000000277050 0000000000000058 t _mesa_DeleteHashTable
00000000002770b0 0000000000000084 t _mesa_HashLookup
0000000000277140 0000000000000034 t _mesa_HashLookupLocked
0000000000277180 0000000000000094 t _mesa_HashInsertLocked
0000000000277220 00000000000000ac t _mesa_HashInsert
00000000002772d0 0000000000000048 t _mesa_HashRemoveLocked
0000000000277320 0000000000000074 t _mesa_HashRemove
00000000002773a0 00000000000000ac t _mesa_HashDeleteAll
0000000000277450 000000000000004c t _mesa_HashWalk
00000000002774a0 0000000000000004 t _mesa_HashWalkLocked
00000000002774b0 00000000000000d4 t _mesa_HashFindFreeKeyBlock
0000000000277590 0000000000000380 t _mesa_Hint
0000000000277910 0000000000000040 T _mesa_MaxShaderCompilerThreadsKHR
0000000000277950 0000000000000028 t _mesa_init_hint
0000000000277980 0000000000000028 t _mesa_swap2
00000000002779b0 0000000000000024 t _mesa_swap4
00000000002779e0 0000000000000130 t _mesa_image_offset
0000000000277b10 0000000000000050 t _mesa_image_address
0000000000277b60 0000000000000044 t _mesa_image_address2d
0000000000277bb0 00000000000000b4 t _mesa_image_row_stride
0000000000277c70 00000000000000cc t _mesa_image_image_stride
0000000000277d40 00000000000001cc t _mesa_expand_bitmap
0000000000277f10 000000000000016c t _mesa_clip_drawpixels
0000000000278080 00000000000000e8 t _mesa_clip_readpixels
0000000000278170 00000000000000d4 t _mesa_clip_copytexsubimage
0000000000278250 00000000000006c4 t _mesa_clip_blit
0000000000278920 0000000000000130 t _mesa_swap_bytes_2d_image
0000000000278a50 00000000000000b0 t update_modelview_scale
0000000000278b00 00000000000003fc t _mesa_update_material.part.0
0000000000278f00 0000000000000594 t compute_light_positions.part.0
00000000002794a0 00000000000000e4 t _mesa_ShadeModel
0000000000279590 00000000000000a8 t _mesa_ProvokingVertex
0000000000279640 000000000000073c t _mesa_light
0000000000279d80 00000000000002cc t _mesa_Lightfv
000000000027a050 0000000000000024 t _mesa_Lightf
000000000027a080 0000000000000148 t _mesa_Lightiv
000000000027a1d0 0000000000000024 T _mesa_Lighti
000000000027a200 000000000000029c t _mesa_GetLightfv
000000000027a4a0 00000000000002f0 T _mesa_GetLightiv
000000000027a790 00000000000002a0 t _mesa_LightModelfv
000000000027aa30 00000000000000ec t _mesa_LightModeliv
000000000027ab20 0000000000000024 T _mesa_LightModeli
000000000027ab50 0000000000000024 t _mesa_LightModelf
000000000027ab80 00000000000000f8 t _mesa_material_bitmask
000000000027ac80 0000000000000060 t _mesa_update_color_material
000000000027ace0 000000000000015c t _mesa_ColorMaterial
000000000027ae40 00000000000001ec t _mesa_GetMaterialfv
000000000027b030 0000000000000234 T _mesa_GetMaterialiv
000000000027b270 00000000000000e8 t _mesa_update_lighting
000000000027b360 0000000000000130 t _mesa_update_tnl_spaces
000000000027b490 00000000000001f4 t _mesa_init_lighting
000000000027b690 00000000000000a0 T _mesa_LineWidth_no_error
000000000027b730 00000000000000e8 t _mesa_LineWidth
000000000027b820 00000000000000e8 t _mesa_LineStipple
000000000027b910 000000000000001c t _mesa_init_line
000000000027b930 0000000000000110 t get_named_matrix_stack
000000000027ba40 000000000000018c t push_matrix
000000000027bbd0 000000000000010c t matrix_load.constprop.0
000000000027bce0 00000000000000d8 t _mesa_Frustum
000000000027bdc0 00000000000001e0 T _mesa_MatrixFrustumEXT
000000000027bfa0 00000000000000c8 t _mesa_Ortho
000000000027c070 00000000000001d0 T _mesa_MatrixOrthoEXT
000000000027c240 000000000000017c t _mesa_MatrixMode
000000000027c3c0 0000000000000038 T _mesa_PushMatrix
000000000027c400 00000000000001a8 T _mesa_MatrixPushEXT
000000000027c5b0 00000000000000e4 T _mesa_PopMatrix
000000000027c6a0 00000000000001e4 T _mesa_MatrixPopEXT
000000000027c890 0000000000000064 T _mesa_LoadIdentity
000000000027c900 0000000000000184 T _mesa_MatrixLoadIdentityEXT
000000000027ca90 0000000000000108 t _mesa_LoadMatrixf
000000000027cba0 0000000000000130 T _mesa_MatrixLoadfEXT
000000000027ccd0 000000000000007c t _mesa_MultMatrixf
000000000027cd50 0000000000000188 t _mesa_MatrixMultfEXT
000000000027cee0 000000000000008c t _mesa_Rotatef
000000000027cf70 00000000000001b0 T _mesa_MatrixRotatefEXT
000000000027d120 0000000000000078 t _mesa_Scalef
000000000027d1a0 0000000000000184 t _mesa_MatrixScalefEXT
000000000027d330 0000000000000078 t _mesa_Translatef
000000000027d3b0 0000000000000184 t _mesa_MatrixTranslatefEXT
000000000027d540 000000000000005c T _mesa_LoadMatrixd
000000000027d5a0 000000000000007c T _mesa_MatrixLoaddEXT
000000000027d620 0000000000000044 T _mesa_MultMatrixd
000000000027d670 0000000000000044 T _mesa_MatrixMultdEXT
000000000027d6c0 00000000000000b4 T _mesa_Rotated
000000000027d780 00000000000001c0 T _mesa_MatrixRotatedEXT
000000000027d940 0000000000000084 T _mesa_Scaled
000000000027d9d0 0000000000000010 T _mesa_MatrixScaledEXT
000000000027d9e0 0000000000000084 T _mesa_Translated
000000000027da70 0000000000000010 T _mesa_MatrixTranslatedEXT
000000000027da80 0000000000000050 T _mesa_LoadTransposeMatrixf
000000000027dad0 000000000000005c T _mesa_MatrixLoadTransposefEXT
000000000027db30 0000000000000050 T _mesa_LoadTransposeMatrixd
000000000027db80 000000000000005c T _mesa_MatrixLoadTransposedEXT
000000000027dbe0 0000000000000038 T _mesa_MultTransposeMatrixf
000000000027dc20 000000000000003c T _mesa_MatrixMultTransposefEXT
000000000027dc60 0000000000000038 T _mesa_MultTransposeMatrixd
000000000027dca0 000000000000003c T _mesa_MatrixMultTransposedEXT
000000000027dce0 00000000000000cc t _mesa_update_modelview_project
000000000027ddb0 0000000000000164 t _mesa_init_matrix
000000000027df20 000000000000016c t _mesa_free_matrix_data
000000000027e090 000000000000005c t _mesa_init_transform
000000000027e0f0 00000000000000dc t _mesa_SampleCoverage
000000000027e1d0 000000000000003c t _mesa_init_multisample
000000000027e210 0000000000000138 T _mesa_GetMultisamplefv
000000000027e350 0000000000000088 T _mesa_SampleMaski_no_error
000000000027e3e0 00000000000000d4 T _mesa_SampleMaski
000000000027e4c0 00000000000000a4 T _mesa_MinSampleShading_no_error
000000000027e570 000000000000011c T _mesa_MinSampleShading
000000000027e690 00000000000001ec t _mesa_check_sample_count
000000000027e880 00000000000000ac t _mesa_AlphaToCoverageDitherControlNV
000000000027e930 0000000000000074 t flip_bytes
000000000027e9b0 000000000000048c t extract_uint_indexes
000000000027ee40 0000000000000350 t _mesa_unpack_image.part.0
000000000027f190 00000000000000e0 t convert_integer_luminance64
000000000027f270 0000000000000074 t _mesa_unpack_polygon_stipple
000000000027f2f0 00000000000001fc t _mesa_pack_bitmap
000000000027f4f0 0000000000000060 t _mesa_pack_polygon_stipple
000000000027f550 00000000000002d8 t _mesa_unpack_stencil_span
000000000027f830 00000000000003a8 t _mesa_pack_stencil_span
000000000027fbe0 00000000000008ac t _mesa_unpack_depth_span
0000000000280490 0000000000000388 t _mesa_pack_depth_span
0000000000280820 00000000000001e0 t _mesa_pack_depth_stencil_span
0000000000280a00 0000000000000020 t _mesa_unpack_image
0000000000280a20 0000000000000140 t _mesa_pack_luminance_from_rgba_float
0000000000280b60 0000000000000280 t _mesa_pack_luminance_from_rgba_integer
0000000000280de0 00000000000001a4 t _mesa_unpack_color_index_to_rgba_float
0000000000280f90 00000000000000e0 t _mesa_unpack_color_index_to_rgba_ubyte
0000000000281070 0000000000000198 t _mesa_validate_pbo_access
0000000000281210 000000000000005c t _mesa_map_pbo_source
0000000000281270 0000000000000110 t _mesa_validate_pbo_source
0000000000281380 0000000000000088 t _mesa_validate_pbo_source_compressed
0000000000281410 000000000000009c t _mesa_map_validate_pbo_source
00000000002814b0 0000000000000020 t _mesa_unmap_pbo_source
00000000002814d0 000000000000005c t _mesa_map_pbo_dest
0000000000281530 000000000000015c t _mesa_map_validate_pbo_dest
0000000000281690 0000000000000020 t _mesa_unmap_pbo_dest
00000000002816b0 00000000000000f4 t _mesa_validate_pbo_teximage
00000000002817b0 00000000000000c0 t _mesa_validate_pbo_compressed_teximage
0000000000281870 0000000000000020 t _mesa_unmap_teximage_pbo
0000000000281890 0000000000000044 t free_performance_monitor
00000000002818e0 0000000000000034 t _mesa_init_performance_monitors
0000000000281920 0000000000000034 t _mesa_free_performance_monitors
0000000000281960 00000000000000a4 T _mesa_GetPerfMonitorGroupsAMD
0000000000281a10 00000000000000fc T _mesa_GetPerfMonitorCountersAMD
0000000000281b10 00000000000000fc T _mesa_GetPerfMonitorGroupStringAMD
0000000000281c10 000000000000013c T _mesa_GetPerfMonitorCounterStringAMD
0000000000281d50 0000000000000194 T _mesa_GetPerfMonitorCounterInfoAMD
0000000000281ef0 0000000000000218 T _mesa_GenPerfMonitorsAMD
0000000000282110 0000000000000114 T _mesa_DeletePerfMonitorsAMD
0000000000282230 000000000000021c T _mesa_SelectPerfMonitorCountersAMD
0000000000282450 00000000000000c0 T _mesa_BeginPerfMonitorAMD
0000000000282510 000000000000009c T _mesa_EndPerfMonitorAMD
00000000002825b0 0000000000000294 T _mesa_GetPerfMonitorCounterDataAMD
0000000000282850 0000000000000020 t free_performance_query
0000000000282870 0000000000000028 t _mesa_init_performance_queries
00000000002828a0 0000000000000034 t _mesa_free_performance_queries
00000000002828e0 000000000000008c T _mesa_GetFirstPerfQueryIdINTEL
0000000000282970 000000000000009c T _mesa_GetNextPerfQueryIdINTEL
0000000000282a10 0000000000000114 T _mesa_GetPerfQueryIdByNameINTEL
0000000000282b30 000000000000012c T _mesa_GetPerfQueryInfoINTEL
0000000000282c60 0000000000000208 T _mesa_GetPerfCounterInfoINTEL
0000000000282e70 000000000000011c T _mesa_CreatePerfQueryINTEL
0000000000282f90 000000000000011c T _mesa_BeginPerfQueryINTEL
00000000002830b0 00000000000000a0 t _mesa_EndPerfQueryINTEL
0000000000283150 00000000000000d8 T _mesa_DeletePerfQueryINTEL
0000000000283230 00000000000001c4 T _mesa_GetPerfQueryDataINTEL
0000000000283400 0000000000000120 t create_program_pipelines
0000000000283520 0000000000000170 t use_program_stages
0000000000283690 0000000000000090 t _mesa_delete_pipeline_object
0000000000283720 0000000000000008 t delete_pipelineobj_cb
0000000000283730 00000000000000ac t _mesa_init_pipeline
00000000002837e0 0000000000000068 t _mesa_free_pipeline_data
0000000000283850 0000000000000018 t _mesa_lookup_pipeline_object
0000000000283870 000000000000005c t _mesa_reference_pipeline_object_
00000000002838d0 0000000000000088 T _mesa_UseProgramStages_no_error
0000000000283960 0000000000000268 T _mesa_UseProgramStages
0000000000283bd0 0000000000000098 T _mesa_ActiveShaderProgram_no_error
0000000000283c70 0000000000000118 T _mesa_ActiveShaderProgram
0000000000283d90 0000000000000190 t _mesa_bind_pipeline
0000000000283f20 0000000000000070 t _mesa_BindProgramPipeline_no_error
0000000000283f90 00000000000000cc t _mesa_BindProgramPipeline
0000000000284060 00000000000000fc T _mesa_DeleteProgramPipelines
0000000000284160 0000000000000030 T _mesa_GenProgramPipelines_no_error
0000000000284190 0000000000000050 T _mesa_GenProgramPipelines
00000000002841e0 0000000000000030 T _mesa_CreateProgramPipelines_no_error
0000000000284210 0000000000000050 T _mesa_CreateProgramPipelines
0000000000284260 0000000000000048 T _mesa_IsProgramPipeline
00000000002842b0 00000000000002cc T _mesa_GetProgramPipelineiv
0000000000284580 0000000000000284 t _mesa_validate_program_pipeline
0000000000284810 0000000000000064 T _mesa_ValidateProgramPipeline
0000000000284880 00000000000000ac T _mesa_GetProgramPipelineInfoLog
0000000000284930 00000000000000d0 t get_pixelmap
0000000000284a00 0000000000000104 t store_pixelmap
0000000000284b10 0000000000000120 t validate_pbo_access.constprop.0
0000000000284c30 0000000000000084 T _mesa_PixelZoom
0000000000284cc0 0000000000000150 T _mesa_PixelMapfv
0000000000284e10 00000000000001f4 T _mesa_PixelMapuiv
0000000000285010 00000000000001f4 T _mesa_PixelMapusv
0000000000285210 0000000000000160 t _mesa_GetnPixelMapfvARB
0000000000285370 000000000000000c T _mesa_GetPixelMapfv
0000000000285380 0000000000000160 t _mesa_GetnPixelMapuivARB
00000000002854e0 000000000000000c T _mesa_GetPixelMapuiv
00000000002854f0 0000000000000210 t _mesa_GetnPixelMapusvARB
0000000000285700 000000000000000c T _mesa_GetPixelMapusv
0000000000285710 00000000000004ec t _mesa_PixelTransferf
0000000000285c00 0000000000000008 T _mesa_PixelTransferi
0000000000285c10 00000000000000a0 t _mesa_update_pixel
0000000000285cb0 00000000000000b0 t _mesa_init_pixel
0000000000285d60 000000000000053c t _mesa_PixelStorei
00000000002862a0 0000000000000008 T _mesa_PixelStoref
00000000002862b0 0000000000000234 t _mesa_PixelStorei_no_error
00000000002864f0 0000000000000008 T _mesa_PixelStoref_no_error
0000000000286500 00000000000000e8 t _mesa_init_pixelstore
00000000002865f0 00000000000000fc t _mesa_compressed_pixel_storage_error_check
00000000002866f0 0000000000000150 t _mesa_scale_and_bias_rgba
0000000000286840 0000000000000150 t _mesa_map_rgba
0000000000286990 0000000000000098 t _mesa_map_ci_to_rgba
0000000000286a30 0000000000000050 t _mesa_scale_and_bias_depth
0000000000286a80 0000000000000070 t _mesa_scale_and_bias_depth_uint
0000000000286af0 0000000000000120 t _mesa_apply_rgba_transfer_ops
0000000000286c10 00000000000000b0 t _mesa_shift_and_offset_ci
0000000000286cc0 0000000000000130 t _mesa_apply_stencil_transfer_ops
0000000000286df0 00000000000000a4 T _mesa_PointSize_no_error
0000000000286ea0 00000000000000c8 t _mesa_PointSize
0000000000286f70 00000000000003b0 t _mesa_PointParameterfv
0000000000287320 0000000000000028 t _mesa_PointParameteri
0000000000287350 0000000000000040 T _mesa_PointParameteriv
0000000000287390 0000000000000020 t _mesa_PointParameterf
00000000002873b0 0000000000000064 t _mesa_init_point
0000000000287420 00000000000000b0 T _mesa_CullFace_no_error
00000000002874d0 00000000000000e4 t _mesa_CullFace
00000000002875c0 00000000000000b0 T _mesa_FrontFace_no_error
0000000000287670 00000000000000dc t _mesa_FrontFace
0000000000287750 0000000000000190 T _mesa_PolygonMode_no_error
00000000002878e0 0000000000000210 t _mesa_PolygonMode
0000000000287af0 000000000000010c T _mesa_PolygonStipple
0000000000287c00 00000000000000a4 t _mesa_GetnPolygonStippleARB
0000000000287cb0 000000000000000c T _mesa_GetPolygonStipple
0000000000287cc0 00000000000000bc t _mesa_polygon_offset_clamp
0000000000287d80 00000000000000c4 t _mesa_PolygonOffset
0000000000287e50 00000000000000f0 T _mesa_PolygonOffsetClampEXT
0000000000287f40 0000000000000060 t _mesa_init_polygon
0000000000287fa0 0000000000000014 t delete_queryobj_cb
0000000000287fc0 0000000000000028 t _mesa_delete_query
0000000000287ff0 0000000000000120 t create_queries
0000000000288110 0000000000000370 t get_query_object
0000000000288480 00000000000005c0 t get_query_binding_point
0000000000288a40 0000000000000030 T _mesa_GenQueries
0000000000288a70 00000000000000d8 T _mesa_CreateQueries
0000000000288b50 0000000000000128 T _mesa_DeleteQueries
0000000000288c80 0000000000000074 T _mesa_IsQuery
0000000000288d00 0000000000000254 t _mesa_BeginQueryIndexed
0000000000288f60 0000000000000184 t _mesa_EndQueryIndexed
00000000002890f0 000000000000000c T _mesa_BeginQuery
0000000000289100 0000000000000008 T _mesa_EndQuery
0000000000289110 000000000000016c T _mesa_QueryCounter
0000000000289280 0000000000000494 t _mesa_GetQueryIndexediv
0000000000289720 0000000000000010 T _mesa_GetQueryiv
0000000000289730 0000000000000044 T _mesa_GetQueryObjectiv
0000000000289780 0000000000000044 T _mesa_GetQueryObjectuiv
00000000002897d0 0000000000000044 T _mesa_GetQueryObjecti64v
0000000000289820 0000000000000044 T _mesa_GetQueryObjectui64v
0000000000289870 000000000000008c T _mesa_GetQueryBufferObjectiv
0000000000289900 000000000000008c T _mesa_GetQueryBufferObjectuiv
0000000000289990 000000000000008c T _mesa_GetQueryBufferObjecti64v
0000000000289a20 000000000000008c T _mesa_GetQueryBufferObjectui64v
0000000000289ab0 000000000000004c t _mesa_init_queryobj
0000000000289b00 0000000000000034 t _mesa_free_queryobj_data
0000000000289b40 0000000000000338 t window_pos3f
0000000000289e80 00000000000000ac t rasterpos
0000000000289f30 0000000000000014 T _mesa_RasterPos2d
0000000000289f50 000000000000000c T _mesa_RasterPos2f
0000000000289f60 0000000000000014 T _mesa_RasterPos2i
0000000000289f80 000000000000001c T _mesa_RasterPos2s
0000000000289fa0 0000000000000014 T _mesa_RasterPos3d
0000000000289fc0 0000000000000008 T _mesa_RasterPos3f
0000000000289fd0 0000000000000014 T _mesa_RasterPos3i
0000000000289ff0 0000000000000020 T _mesa_RasterPos3s
000000000028a010 0000000000000014 T _mesa_RasterPos4d
000000000028a030 0000000000000004 T _mesa_RasterPos4f
000000000028a040 0000000000000014 T _mesa_RasterPos4i
000000000028a060 0000000000000024 T _mesa_RasterPos4s
000000000028a090 0000000000000018 T _mesa_RasterPos2dv
000000000028a0b0 0000000000000010 T _mesa_RasterPos2fv
000000000028a0c0 0000000000000018 T _mesa_RasterPos2iv
000000000028a0e0 000000000000001c T _mesa_RasterPos2sv
000000000028a100 000000000000001c T _mesa_RasterPos3dv
000000000028a120 0000000000000010 T _mesa_RasterPos3fv
000000000028a130 000000000000001c T _mesa_RasterPos3iv
000000000028a150 0000000000000020 T _mesa_RasterPos3sv
000000000028a170 000000000000001c T _mesa_RasterPos4dv
000000000028a190 000000000000000c T _mesa_RasterPos4fv
000000000028a1a0 000000000000001c T _mesa_RasterPos4iv
000000000028a1c0 0000000000000024 T _mesa_RasterPos4sv
000000000028a1f0 0000000000000044 T _mesa_WindowPos2d
000000000028a240 000000000000003c T _mesa_WindowPos2f
000000000028a280 0000000000000048 T _mesa_WindowPos2i
000000000028a2d0 000000000000004c T _mesa_WindowPos2s
000000000028a320 0000000000000044 T _mesa_WindowPos3d
000000000028a370 0000000000000038 T _mesa_WindowPos3f
000000000028a3b0 0000000000000048 T _mesa_WindowPos3i
000000000028a400 0000000000000050 T _mesa_WindowPos3s
000000000028a450 0000000000000050 T _mesa_WindowPos4dMESA
000000000028a4a0 0000000000000040 T _mesa_WindowPos4fMESA
000000000028a4e0 0000000000000054 T _mesa_WindowPos4iMESA
000000000028a540 0000000000000054 T _mesa_WindowPos4sMESA
000000000028a5a0 000000000000004c T _mesa_WindowPos2dv
000000000028a5f0 0000000000000044 T _mesa_WindowPos2fv
000000000028a640 000000000000004c T _mesa_WindowPos2iv
000000000028a690 0000000000000050 T _mesa_WindowPos2sv
000000000028a6e0 0000000000000050 T _mesa_WindowPos3dv
000000000028a730 0000000000000044 T _mesa_WindowPos3fv
000000000028a780 0000000000000050 T _mesa_WindowPos3iv
000000000028a7d0 0000000000000054 T _mesa_WindowPos3sv
000000000028a830 000000000000005c T _mesa_WindowPos4dvMESA
000000000028a890 000000000000004c T _mesa_WindowPos4fvMESA
000000000028a8e0 000000000000005c T _mesa_WindowPos4ivMESA
000000000028a940 0000000000000060 T _mesa_WindowPos4svMESA
000000000028a9a0 0000000000000068 t _mesa_init_rastpos
000000000028aa10 0000000000000144 t _mesa_get_readpixels_transfer_ops
000000000028ab60 0000000000000170 t _mesa_readpixels_needs_slow_path
000000000028acd0 0000000000000ffc t _mesa_readpixels
000000000028bcd0 000000000000010c t _mesa_ReadnPixelsARB_no_error
000000000028bde0 0000000000000750 t _mesa_ReadnPixelsARB
000000000028c530 000000000000000c T _mesa_ReadPixels_no_error
000000000028c540 000000000000000c T _mesa_ReadPixels
000000000028c550 0000000000000158 t _mesa_init_remap_table
000000000028c6b0 0000000000000030 t _mesa_delete_renderbuffer
000000000028c6e0 0000000000000084 t _mesa_init_renderbuffer
000000000028c770 0000000000000094 t _mesa_reference_renderbuffer_
000000000028c810 000000000000006c t _mesa_attach_and_own_rb
000000000028c880 0000000000000040 t _mesa_attach_and_reference_rb
000000000028c8c0 00000000000000d0 t set_scissor_no_notify
000000000028c990 0000000000000120 t scissor_array
000000000028cab0 0000000000000130 T _mesa_Scissor_no_error
000000000028cbe0 0000000000000158 T _mesa_Scissor
000000000028cd40 0000000000000104 t _mesa_set_scissor
000000000028ce50 0000000000000034 T _mesa_ScissorArrayv_no_error
000000000028ce90 00000000000000a8 T _mesa_ScissorArrayv
000000000028cf40 0000000000000114 T _mesa_ScissorIndexed_no_error
000000000028d060 00000000000000dc T _mesa_ScissorIndexed
000000000028d140 0000000000000110 T _mesa_ScissorIndexedv_no_error
000000000028d250 00000000000000d0 T _mesa_ScissorIndexedv
000000000028d320 000000000000017c t _mesa_WindowRectanglesEXT
000000000028d4a0 00000000000000d4 t _mesa_init_scissor
000000000028d580 000000000000008c t attach_shader
000000000028d610 00000000000000bc t get_attached_shaders
000000000028d6d0 00000000000000ec t attach_shader_err
000000000028d7c0 000000000000006c t create_shader_program
000000000028d830 0000000000000164 t detach_shader_error
000000000028d9a0 0000000000000114 t detach_shader_no_error
000000000028dac0 000000000000016c t get_shaderiv
000000000028dc30 0000000000000038 t destroy_shader_include
000000000028dc70 000000000000025c t validate_and_tokenise_sh_incl
000000000028ded0 00000000000001e0 t lookup_shader_include
000000000028e0b0 0000000000000078 t copy_string
000000000028e130 00000000000001fc t _mesa_compile_shader.part.0
000000000028e330 00000000000000cc t create_shader
000000000028e400 0000000000000950 t get_programiv
000000000028ed50 0000000000000144 t _mesa_get_shader_flags
000000000028eea0 0000000000000054 t _mesa_get_shader_capture_path
000000000028ef00 00000000000000b0 t _mesa_init_shader_state
000000000028efb0 00000000000000d0 t _mesa_free_shader_state
000000000028f080 0000000000000050 t _mesa_copy_string
000000000028f0d0 0000000000000198 t _mesa_validate_shader_target
000000000028f270 0000000000000054 t _mesa_active_program
000000000028f2d0 0000000000000058 T _mesa_AttachObjectARB_no_error
000000000028f330 0000000000000034 T _mesa_AttachObjectARB
000000000028f370 0000000000000058 T _mesa_AttachShader_no_error
000000000028f3d0 0000000000000034 T _mesa_AttachShader
000000000028f410 0000000000000078 T _mesa_CompileShader
000000000028f490 0000000000000024 T _mesa_CreateShader_no_error
000000000028f4c0 0000000000000080 T _mesa_CreateShader
000000000028f540 0000000000000024 T _mesa_CreateShaderObjectARB_no_error
000000000028f570 0000000000000080 T _mesa_CreateShaderObjectARB
000000000028f5f0 0000000000000020 T _mesa_CreateProgram
000000000028f610 0000000000000020 T _mesa_CreateProgramObjectARB
000000000028f630 0000000000000104 T _mesa_DeleteObjectARB
000000000028f740 00000000000000bc T _mesa_DeleteProgram
000000000028f800 00000000000000bc T _mesa_DeleteShader
000000000028f8c0 000000000000002c T _mesa_DetachObjectARB_no_error
000000000028f8f0 000000000000002c T _mesa_DetachObjectARB
000000000028f920 000000000000002c T _mesa_DetachShader_no_error
000000000028f950 000000000000002c T _mesa_DetachShader
000000000028f980 0000000000000040 T _mesa_GetAttachedObjectsARB
000000000028f9c0 0000000000000040 T _mesa_GetAttachedShaders
000000000028fa00 00000000000001a0 T _mesa_GetInfoLogARB
000000000028fba0 00000000000000e8 T _mesa_GetObjectParameterivARB
000000000028fc90 0000000000000108 T _mesa_GetObjectParameterfvARB
000000000028fda0 0000000000000034 T _mesa_GetProgramiv
000000000028fde0 0000000000000034 T _mesa_GetShaderiv
000000000028fe20 00000000000000c0 T _mesa_GetProgramInfoLog
000000000028fee0 00000000000000c0 T _mesa_GetShaderInfoLog
000000000028ffa0 00000000000000c0 T _mesa_GetShaderSource
0000000000290060 0000000000000064 T _mesa_GetHandleARB
00000000002900d0 0000000000000030 T _mesa_IsProgram
0000000000290100 0000000000000030 T _mesa_IsShader
0000000000290130 00000000000001cc T _mesa_ShaderSource_no_error
0000000000290300 000000000000022c t _mesa_ShaderSource
0000000000290530 00000000000000d4 T _mesa_ValidateProgram
0000000000290610 0000000000000118 T _mesa_GetShaderPrecisionFormat
0000000000290730 0000000000000048 T _mesa_ReleaseShaderCompiler
0000000000290780 0000000000000174 T _mesa_ShaderBinary
0000000000290900 0000000000000124 T _mesa_GetProgramBinary
0000000000290a30 0000000000000108 T _mesa_ProgramBinary
0000000000290b40 0000000000000068 T _mesa_ProgramParameteri_no_error
0000000000290bb0 00000000000000f0 T _mesa_ProgramParameteri
0000000000290ca0 000000000000008c t _mesa_copy_linked_program_data
0000000000290d30 0000000000000060 T _mesa_PatchParameteri_no_error
0000000000290d90 00000000000000fc T _mesa_PatchParameteri
0000000000290e90 0000000000000148 T _mesa_PatchParameterfv
0000000000290fe0 000000000000011c T _mesa_GetSubroutineUniformLocation
0000000000291100 0000000000000160 T _mesa_GetSubroutineIndex
0000000000291260 0000000000000288 T _mesa_GetActiveSubroutineUniformiv
00000000002914f0 000000000000015c T _mesa_GetActiveSubroutineUniformName
0000000000291650 000000000000015c T _mesa_GetActiveSubroutineName
00000000002917b0 0000000000000294 T _mesa_UniformSubroutinesuiv
0000000000291a50 0000000000000108 T _mesa_GetUniformSubroutineuiv
0000000000291b60 00000000000002ac T _mesa_GetProgramStageiv
0000000000291e10 000000000000004c t _mesa_init_shader_includes
0000000000291e60 000000000000000c t _mesa_get_shader_include_cursor
0000000000291e70 000000000000000c t _mesa_set_shader_include_cursor
0000000000291e80 0000000000000034 t _mesa_destroy_shader_includes
0000000000291ec0 000000000000001c t _mesa_lookup_shader_include
0000000000291ee0 0000000000000220 T _mesa_NamedStringARB
0000000000292100 00000000000000d0 T _mesa_DeleteNamedStringARB
00000000002921d0 00000000000001ec T _mesa_CompileShaderIncludeARB
00000000002923c0 000000000000008c T _mesa_IsNamedStringARB
0000000000292450 0000000000000108 T _mesa_GetNamedStringARB
0000000000292560 0000000000000140 T _mesa_GetNamedStringivARB
00000000002926a0 00000000000000d0 t _mesa_shader_write_subroutine_indices
0000000000292770 00000000000000e4 t _mesa_program_init_subroutine_defaults
0000000000292860 0000000000000124 t _mesa_use_program
0000000000292990 000000000000035c t link_program_error.part.0
0000000000292cf0 0000000000000220 T _mesa_CreateShaderProgramv
0000000000292f10 0000000000000088 T _mesa_LinkProgram
0000000000292fa0 0000000000000378 T _mesa_LinkProgram_no_error
0000000000293320 000000000000007c t update_programs_in_pipeline
00000000002933a0 0000000000000088 t _mesa_use_shader_program
0000000000293430 0000000000000114 T _mesa_UseProgram_no_error
0000000000293550 0000000000000298 T _mesa_UseProgram
00000000002937f0 0000000000000248 t _mesa_get_shader_image_format
0000000000293a40 00000000000000b4 t set_image_binding
0000000000293b00 000000000000004c t _mesa_get_image_format_class
0000000000293b50 000000000000018c t _mesa_is_shader_image_format_supported
0000000000293ce0 0000000000000050 t _mesa_default_image_unit
0000000000293d30 0000000000000098 t _mesa_init_image_units
0000000000293dd0 000000000000004c t _mesa_free_image_textures
0000000000293e20 00000000000001cc t _mesa_is_image_unit_valid
0000000000293ff0 00000000000000e4 T _mesa_BindImageTexture_no_error
00000000002940e0 0000000000000240 T _mesa_BindImageTexture
0000000000294320 000000000000018c T _mesa_BindImageTextureEXT
00000000002944b0 00000000000001a8 T _mesa_BindImageTextures_no_error
0000000000294660 00000000000002ec T _mesa_BindImageTextures
0000000000294950 00000000000000c4 t _mesa_reference_shader
0000000000294a20 0000000000000050 t _mesa_new_shader
0000000000294a70 0000000000000044 t _mesa_delete_shader
0000000000294ac0 0000000000000048 t _mesa_delete_linked_shader
0000000000294b10 0000000000000048 t _mesa_lookup_shader
0000000000294b60 000000000000008c t _mesa_lookup_shader_err
0000000000294bf0 00000000000000a4 t _mesa_reference_shader_program_data
0000000000294ca0 0000000000000048 t _mesa_create_shader_program_data
0000000000294cf0 00000000000000c8 t _mesa_new_shader_program
0000000000294dc0 00000000000000d0 t _mesa_clear_shader_program_data
0000000000294e90 00000000000000e0 t _mesa_free_shader_program_data
0000000000294f70 00000000000000b0 t _mesa_reference_shader_program_
0000000000295020 0000000000000024 t _mesa_delete_shader_program
0000000000295050 0000000000000048 t _mesa_lookup_shader_program
00000000002950a0 0000000000000094 t _mesa_lookup_shader_program_err
0000000000295140 000000000000012c t program_resource_location(gl_program_resource*, unsigned int)
0000000000295270 0000000000000078 t compute_resource_key(unsigned int, char const*)
00000000002952f0 000000000000009c T _mesa_BindAttribLocation_no_error
0000000000295390 000000000000012c T _mesa_BindAttribLocation
00000000002954c0 0000000000000068 t _mesa_count_active_attribs
0000000000295530 00000000000000c0 t _mesa_longest_attribute_name_length
00000000002955f0 00000000000000f4 T _mesa_BindFragDataLocation_no_error
00000000002956f0 00000000000001b8 t _mesa_BindFragDataLocationIndexed
00000000002958b0 000000000000000c T _mesa_BindFragDataLocation
00000000002958c0 00000000000000f4 T _mesa_BindFragDataLocationIndexed_no_error
00000000002959c0 00000000000000a4 t _mesa_program_resource_name
0000000000295a70 00000000000000b8 t _mesa_program_resource_array_size
0000000000295b30 0000000000000330 t _mesa_program_resource_find_name
0000000000295e60 00000000000000a0 T _mesa_GetAttribLocation
0000000000295f00 00000000000000e0 T _mesa_GetFragDataLocation
0000000000295fe0 00000000000000fc T _mesa_GetFragDataIndex
00000000002960e0 0000000000000108 t _mesa_program_resource_find_active_variable
00000000002961f0 00000000000000a8 t _mesa_program_resource_index
00000000002962a0 000000000000011c t _mesa_program_resource_find_index
00000000002963c0 00000000000000ec t _mesa_program_resource_name_len
00000000002964b0 0000000000000170 t _mesa_get_program_resource_name
0000000000296620 0000000000000030 t _mesa_program_resource_location
0000000000296650 0000000000000050 t _mesa_program_resource_location_index
00000000002966a0 0000000000000a7c t _mesa_program_resource_prop
0000000000297120 0000000000000188 T _mesa_GetActiveAttrib
00000000002972b0 0000000000000144 t _mesa_get_program_resourceiv
0000000000297400 000000000000041c t _mesa_validate_pipeline_io
0000000000297820 00000000000000a4 t _mesa_create_program_resource_hash
00000000002978d0 0000000000000014 t delete_texture_cb
00000000002978f0 000000000000002c t delete_program_cb
0000000000297920 000000000000001c t delete_framebuffer_cb
0000000000297940 000000000000001c t delete_renderbuffer_cb
0000000000297960 0000000000000014 t delete_memory_object_cb
0000000000297980 0000000000000014 t delete_semaphore_object_cb
00000000002979a0 0000000000000008 t delete_fragshader_cb
00000000002979b0 0000000000000028 t delete_sampler_object_cb
00000000002979e0 0000000000000040 t delete_bufferobj_cb
0000000000297a20 0000000000000048 t delete_shader_cb
0000000000297a70 000000000000001c t free_shader_program_data_cb
0000000000297a90 0000000000000008 t delete_bitmap_atlas_cb
0000000000297aa0 0000000000000008 t delete_displaylist_cb
0000000000297ab0 0000000000000194 t _mesa_alloc_shared_state
0000000000297c50 0000000000000354 t _mesa_reference_shared_state
0000000000297fb0 000000000000001c t _mesa_get_spirv_extension_count
0000000000297fd0 00000000000000cc t _mesa_spirv_extensions_to_string
00000000002980a0 0000000000000044 t _mesa_get_enabled_spirv_extension
00000000002980f0 0000000000000074 t _mesa_fill_supported_spirv_extensions
0000000000298170 000000000000038c t update_program
0000000000298500 0000000000000120 t _mesa_update_allow_draw_out_of_order
0000000000298620 000000000000030c t _mesa_update_state_locked
0000000000298930 000000000000002c t _mesa_update_state
0000000000298960 000000000000002c t _mesa_set_vp_override
0000000000298990 00000000000000b0 t _mesa_update_vertex_processing_mode
0000000000298a40 0000000000000140 t _mesa_set_draw_vao
0000000000298b80 0000000000000214 t stencil_func
0000000000298da0 0000000000000208 t stencil_op
0000000000298fb0 00000000000001b4 t stencil_op_separate
0000000000299170 000000000000002c t _mesa_ClearStencil
00000000002991a0 000000000000018c T _mesa_StencilFuncSeparateATI
0000000000299330 0000000000000034 T _mesa_StencilFunc_no_error
0000000000299370 0000000000000050 T _mesa_StencilFunc
00000000002993c0 0000000000000178 T _mesa_StencilMask
0000000000299540 0000000000000034 T _mesa_StencilOp_no_error
0000000000299580 0000000000000114 T _mesa_StencilOp
00000000002996a0 0000000000000078 t _mesa_ActiveStencilFaceEXT
0000000000299720 000000000000003c T _mesa_StencilOpSeparate_no_error
0000000000299760 0000000000000140 t _mesa_StencilOpSeparate
00000000002998a0 00000000000000f8 T _mesa_StencilFuncSeparate_no_error
00000000002999a0 0000000000000144 t _mesa_StencilFuncSeparate
0000000000299af0 00000000000000c4 T _mesa_StencilMaskSeparate_no_error
0000000000299bc0 00000000000000ec t _mesa_StencilMaskSeparate
0000000000299cb0 0000000000000050 t _mesa_init_stencil
0000000000299d00 00000000000000a4 t fence_sync
0000000000299db0 0000000000000004 t _mesa_init_sync
0000000000299dc0 0000000000000004 t _mesa_free_sync_data
0000000000299dd0 0000000000000090 t _mesa_get_and_ref_sync
0000000000299e60 0000000000000090 t _mesa_unref_sync_object
0000000000299ef0 0000000000000094 t client_wait_sync
0000000000299f90 00000000000000a4 T _mesa_IsSync
000000000029a040 000000000000009c T _mesa_DeleteSync_no_error
000000000029a0e0 00000000000000c4 T _mesa_DeleteSync
000000000029a1b0 000000000000002c T _mesa_FenceSync_no_error
000000000029a1e0 00000000000000a0 T _mesa_FenceSync
000000000029a280 0000000000000090 T _mesa_ClientWaitSync_no_error
000000000029a310 0000000000000120 T _mesa_ClientWaitSync
000000000029a430 00000000000000a8 T _mesa_WaitSync_no_error
000000000029a4e0 0000000000000118 T _mesa_WaitSync
000000000029a600 00000000000001a4 T _mesa_GetSynciv
000000000029a7b0 000000000000032c t _mesa_gl_compressed_format_base_format
000000000029aae0 00000000000005b8 t _mesa_get_compressed_formats
000000000029b0a0 0000000000000460 t _mesa_glenum_to_compressed_format
000000000029b500 00000000000002e4 t _mesa_compressed_format_to_glenum
000000000029b7f0 00000000000000a4 t _mesa_get_compressed_fetch_func
000000000029b8a0 00000000000000f4 t _mesa_decompress_image
000000000029b9a0 000000000000006c t write_bits
000000000029ba10 0000000000000070 t count_anchors_before_texel
000000000029ba80 00000000000007f4 t texstore_bptc_rgb_float.constprop.0
000000000029c280 00000000000005d8 t fetch_rgb_float_from_block
000000000029c860 0000000000000070 t fetch_bptc_rgb_unsigned_float
000000000029c8d0 0000000000000070 t fetch_bptc_rgb_signed_float
000000000029c940 000000000000093c t fetch_rgba_unorm_from_block
000000000029d280 00000000000000c0 t fetch_bptc_rgba_unorm
000000000029d340 00000000000000c4 t fetch_bptc_srgb_alpha_unorm
000000000029d410 000000000000005c t _mesa_get_bptc_fetch_func
000000000029d470 00000000000008cc T _mesa_texstore_bptc_rgba_unorm
000000000029dd40 0000000000000044 T _mesa_texstore_bptc_rgb_signed_float
000000000029dd90 0000000000000040 T _mesa_texstore_bptc_rgb_unsigned_float
000000000029ddd0 000000000000013c t etc1_parse_block
000000000029df10 00000000000000c8 t etc1_fetch_texel
000000000029dfe0 00000000000005ec t etc2_rgb8_parse_block
000000000029e5d0 000000000000005c t etc2_alpha8_parse_block
000000000029e630 00000000000000bc t fetch_etc1_rgb8
000000000029e6f0 0000000000000254 t etc2_rgb8_fetch_texel
000000000029e950 00000000000000d0 t fetch_etc2_srgb8_punchthrough_alpha1
000000000029ea20 00000000000000cc t fetch_etc2_rgb8_punchthrough_alpha1
000000000029eaf0 00000000000000c4 t fetch_etc2_srgb8
000000000029ebc0 00000000000000c4 t fetch_etc2_rgb8
000000000029ec90 00000000000000c8 t etc2_signed_r11_fetch_texel.isra.0
000000000029ed60 000000000000011c t fetch_etc2_signed_rg11_eac
000000000029ee80 00000000000000cc t fetch_etc2_signed_r11_eac
000000000029ef50 00000000000000a0 t etc2_r11_fetch_texel.isra.0
000000000029eff0 0000000000000108 t fetch_etc2_rg11_eac
000000000029f100 0000000000000090 t etc2_rgba8_fetch_texel
000000000029f190 00000000000000e0 t fetch_etc2_srgb8_alpha8_eac
000000000029f270 00000000000000dc t fetch_etc2_rgba8_eac
000000000029f350 0000000000000180 t fetch_etc2_r11_eac
000000000029f4d0 0000000000000008 T _mesa_texstore_etc1_rgb8
000000000029f4e0 0000000000000128 t _mesa_etc1_unpack_rgba8888
000000000029f610 0000000000000008 T _mesa_texstore_etc2_rgb8
000000000029f620 0000000000000008 T _mesa_texstore_etc2_srgb8
000000000029f630 0000000000000008 T _mesa_texstore_etc2_rgba8_eac
000000000029f640 0000000000000008 T _mesa_texstore_etc2_srgb8_alpha8_eac
000000000029f650 0000000000000008 T _mesa_texstore_etc2_r11_eac
000000000029f660 0000000000000008 T _mesa_texstore_etc2_signed_r11_eac
000000000029f670 0000000000000008 T _mesa_texstore_etc2_rg11_eac
000000000029f680 0000000000000008 T _mesa_texstore_etc2_signed_rg11_eac
000000000029f690 0000000000000008 T _mesa_texstore_etc2_rgb8_punchthrough_alpha1
000000000029f6a0 0000000000000008 T _mesa_texstore_etc2_srgb8_punchthrough_alpha1
000000000029f6b0 0000000000000f4c t _mesa_unpack_etc2_format
00000000002a0600 00000000000000e4 t _mesa_get_etc_fetch_func
00000000002a06f0 0000000000000100 t fxt1_decode_1HI
00000000002a07f0 0000000000000074 t fxt1_decode_1CHROMA
00000000002a0870 0000000000000228 t fxt1_decode_1MIXED
00000000002a0aa0 0000000000000210 t fxt1_decode_1ALPHA
00000000002a0cb0 0000000000000078 t fxt1_decode_1
00000000002a0d30 0000000000000054 t fetch_rgb_fxt1
00000000002a0d90 000000000000005c t fetch_rgba_fxt1
00000000002a0df0 0000000000000080 t fxt1_variance.constprop.0
00000000002a0e70 0000000000001094 t fxt1_encode
00000000002a1f10 0000000000000198 T _mesa_texstore_rgb_fxt1
00000000002a20b0 0000000000000174 T _mesa_texstore_rgba_fxt1
00000000002a2230 0000000000000028 t _mesa_get_fxt_fetch_func
00000000002a2260 00000000000000c0 t fetch_signed_la_latc2
00000000002a2320 00000000000000c4 t fetch_signed_rg_rgtc2
00000000002a23f0 0000000000000060 t fetch_signed_l_latc1
00000000002a2450 0000000000000068 t fetch_signed_red_rgtc1
00000000002a24c0 0000000000000090 t fetch_la_latc2
00000000002a2550 0000000000000094 t fetch_rg_rgtc2
00000000002a25f0 0000000000000050 t fetch_l_latc1
00000000002a2640 0000000000000054 t fetch_red_rgtc1
00000000002a26a0 0000000000000240 T _mesa_texstore_red_rgtc1
00000000002a28e0 0000000000000264 T _mesa_texstore_signed_red_rgtc1
00000000002a2b50 00000000000002f0 T _mesa_texstore_rg_rgtc2
00000000002a2e40 000000000000033c T _mesa_texstore_signed_rg_rgtc2
00000000002a3180 00000000000000b0 t _mesa_get_compressed_rgtc_func
00000000002a3230 00000000000001fc t dxt135_decode_imageblock
00000000002a3430 000000000000008c t fetch_2d_texel_rgba_dxt3
00000000002a34c0 0000000000000150 t fetch_2d_texel_rgba_dxt5
00000000002a3610 0000000000000c44 t encodedxtcolorblockfaster
00000000002a4260 00000000000000cc t writedxt5encodedalphablock
00000000002a4330 00000000000000a0 t fetch_rgba_dxt1
00000000002a43d0 0000000000000060 t fetch_rgba_dxt3
00000000002a4430 0000000000000060 t fetch_rgba_dxt5
00000000002a4490 00000000000000a4 t fetch_srgb_dxt1
00000000002a4540 0000000000000064 t fetch_srgba_dxt3
00000000002a45b0 0000000000000064 t fetch_srgba_dxt5
00000000002a4620 00000000000000a4 t fetch_srgba_dxt1
00000000002a46d0 00000000000000a0 t fetch_rgb_dxt1
00000000002a4770 0000000000001234 t tx_compress_dxtn
00000000002a59b0 000000000000017c T _mesa_texstore_rgb_dxt1
00000000002a5b30 000000000000017c T _mesa_texstore_rgba_dxt1
00000000002a5cb0 000000000000017c T _mesa_texstore_rgba_dxt3
00000000002a5e30 000000000000017c T _mesa_texstore_rgba_dxt5
00000000002a5fb0 00000000000000ac t _mesa_get_dxt_fetch_func
00000000002a6060 0000000000000078 t adjust_for_oes_float_texture
00000000002a60e0 00000000000000bc t strip_texture_border
00000000002a61a0 0000000000000110 t copytexsubimage_by_slice
00000000002a62b0 00000000000001b0 t get_proxy_tex_image
00000000002a6460 00000000000000b8 t error_check_subtexture_negative_dimensions
00000000002a6520 00000000000000dc t check_texture_buffer_range
00000000002a6600 00000000000000a0 t get_tex_images_for_clear
00000000002a66a0 0000000000000144 t proxy_target
00000000002a67f0 00000000000000e0 t check_rtt_cb
00000000002a68d0 00000000000000b0 t texture_format_error_check_gles
00000000002a6980 00000000000000fc t texture_formats_agree
00000000002a6a80 0000000000000318 t error_check_subtexture_dimensions
00000000002a6da0 0000000000000170 t lookup_texture_ext_dsa
00000000002a6f10 0000000000000100 t formats_differ_in_component_sizes
00000000002a7010 0000000000000298 t check_clear_tex_image
00000000002a72b0 0000000000000150 t compressed_texture_sub_image
00000000002a7400 00000000000001b8 t texture_sub_image
00000000002a75c0 00000000000001c8 t texturesubimage_no_error.constprop.0
00000000002a7790 00000000000001f0 t copy_texture_sub_image
00000000002a7980 00000000000001c4 t legal_texsubimage_target
00000000002a7b50 000000000000021c t legal_teximage_target
00000000002a7d70 000000000000002c t _mesa_delete_texture_image
00000000002a7da0 000000000000003c t _mesa_is_proxy_texture
00000000002a7de0 000000000000003c t _mesa_is_array_texture
00000000002a7e20 0000000000000024 t _mesa_is_cube_map_texture
00000000002a7e50 0000000000000028 t _mesa_select_tex_image
00000000002a7e80 00000000000000c4 t _mesa_get_tex_image
00000000002a7f50 00000000000002a4 t egl_image_target_texture
00000000002a8200 0000000000000064 t egl_image_target_texture_storage
00000000002a8270 0000000000000290 t _mesa_max_texture_levels
00000000002a8500 00000000000007c0 t compressed_tex_sub_image
00000000002a8cc0 0000000000000150 t _mesa_get_texture_dimensions
00000000002a8e10 0000000000000088 t _mesa_tex_target_is_layered
00000000002a8ea0 0000000000000090 t _mesa_get_texture_layers
00000000002a8f30 0000000000000110 t _mesa_get_tex_max_num_levels
00000000002a9040 0000000000000298 t _mesa_init_teximage_fields_ms
00000000002a92e0 0000000000000028 t _mesa_init_teximage_fields
00000000002a9310 000000000000004c t _mesa_clear_texture_image
00000000002a9360 0000000000000458 t _mesa_legal_texture_dimensions
00000000002a97c0 00000000000006a4 t texture_image_multisample
00000000002a9e70 0000000000000128 t _mesa_test_proxy_teximage
00000000002a9fa0 000000000000008c t _mesa_format_no_online_compression
00000000002aa030 000000000000044c t texsubimage_error_check
00000000002aa480 00000000000002f8 t texturesubimage_error
00000000002aa780 00000000000001a0 t texsubimage_err
00000000002aa920 000000000000041c t copy_texture_sub_image_err
00000000002aad40 0000000000000218 t _mesa_target_can_be_compressed
00000000002aaf60 0000000000000290 t compressed_texture_error_check
00000000002ab1f0 0000000000000698 t copytexture_error_check
00000000002ab890 0000000000000174 t _mesa_legal_texture_base_format_for_target
00000000002aba10 0000000000000554 t texture_error_check
00000000002abf70 0000000000000044 t _mesa_update_fbo_texture
00000000002abfc0 0000000000000078 t _mesa_choose_texture_format
00000000002ac040 00000000000006d8 t teximage_err
00000000002ac720 0000000000000464 t teximage_no_error
00000000002acb90 00000000000005c8 t copyteximage_err
00000000002ad160 00000000000004c4 t copyteximage_no_error
00000000002ad630 0000000000000074 T _mesa_TexImage1D
00000000002ad6b0 0000000000000580 T _mesa_TextureImage1DEXT
00000000002adc30 0000000000000580 T _mesa_MultiTexImage1DEXT
00000000002ae1b0 0000000000000078 t _mesa_TexImage2D
00000000002ae230 00000000000005e0 T _mesa_TextureImage2DEXT
00000000002ae810 00000000000005e0 T _mesa_MultiTexImage2DEXT
00000000002aedf0 0000000000000078 T _mesa_TexImage3D
00000000002aee70 00000000000005e4 T _mesa_TextureImage3DEXT
00000000002af460 00000000000005e4 T _mesa_MultiTexImage3DEXT
00000000002afa50 0000000000000074 T _mesa_TexImage1D_no_error
00000000002afad0 0000000000000078 T _mesa_TexImage2D_no_error
00000000002afb50 0000000000000078 T _mesa_TexImage3D_no_error
00000000002afbd0 0000000000000090 T _mesa_EGLImageTargetTexture2DOES
00000000002afc60 0000000000000094 T _mesa_EGLImageTargetTexStorageEXT
00000000002afd00 00000000000000f8 T _mesa_EGLImageTargetTextureStorageEXT
00000000002afe00 00000000000000d0 T _mesa_TexSubImage1D_no_error
00000000002afed0 0000000000000078 T _mesa_TexSubImage1D
00000000002aff50 00000000000000e4 T _mesa_TexSubImage2D_no_error
00000000002b0040 0000000000000078 T _mesa_TexSubImage2D
00000000002b00c0 00000000000000e8 T _mesa_TexSubImage3D_no_error
00000000002b01b0 0000000000000084 T _mesa_TexSubImage3D
00000000002b0240 0000000000000070 T _mesa_TextureSubImage1D_no_error
00000000002b02b0 0000000000000084 T _mesa_TextureSubImage1DEXT
00000000002b0340 00000000000000e4 T _mesa_MultiTexSubImage1DEXT
00000000002b0430 0000000000000080 T _mesa_TextureSubImage1D
00000000002b04b0 0000000000000078 T _mesa_TextureSubImage2D_no_error
00000000002b0530 0000000000000090 T _mesa_TextureSubImage2DEXT
00000000002b05c0 00000000000000f0 T _mesa_MultiTexSubImage2DEXT
00000000002b06b0 0000000000000088 T _mesa_TextureSubImage2D
00000000002b0740 000000000000007c T _mesa_TextureSubImage3D_no_error
00000000002b07c0 0000000000000094 T _mesa_TextureSubImage3DEXT
00000000002b0860 00000000000000f4 T _mesa_MultiTexSubImage3DEXT
00000000002b0960 0000000000000088 T _mesa_TextureSubImage3D
00000000002b09f0 0000000000000064 T _mesa_CopyTexImage1D
00000000002b0a60 0000000000000588 T _mesa_CopyTextureImage1DEXT
00000000002b0ff0 0000000000000588 T _mesa_CopyMultiTexImage1DEXT
00000000002b1580 0000000000000064 T _mesa_CopyTexImage2D
00000000002b15f0 00000000000005b0 T _mesa_CopyTextureImage2DEXT
00000000002b1ba0 00000000000005ac T _mesa_CopyMultiTexImage2DEXT
00000000002b2150 0000000000000064 T _mesa_CopyTexImage1D_no_error
00000000002b21c0 0000000000000064 T _mesa_CopyTexImage2D_no_error
00000000002b2230 0000000000000100 T _mesa_CopyTexSubImage1D
00000000002b2330 0000000000000198 T _mesa_CopyTexSubImage2D
00000000002b24d0 0000000000000124 T _mesa_CopyTexSubImage3D
00000000002b2600 0000000000000104 T _mesa_CopyTextureSubImage1D
00000000002b2710 000000000000010c T _mesa_CopyTextureSubImage1DEXT
00000000002b2820 00000000000000bc T _mesa_CopyMultiTexSubImage1DEXT
00000000002b28e0 0000000000000128 T _mesa_CopyTextureSubImage2D
00000000002b2a10 0000000000000130 T _mesa_CopyTextureSubImage2DEXT
00000000002b2b40 00000000000000c4 T _mesa_CopyMultiTexSubImage2DEXT
00000000002b2c10 0000000000000194 T _mesa_CopyTextureSubImage3D
00000000002b2db0 000000000000019c T _mesa_CopyTextureSubImage3DEXT
00000000002b2f50 0000000000000130 T _mesa_CopyMultiTexSubImage3DEXT
00000000002b3080 00000000000000f0 T _mesa_CopyTexSubImage1D_no_error
00000000002b3170 0000000000000100 T _mesa_CopyTexSubImage2D_no_error
00000000002b3270 0000000000000104 T _mesa_CopyTexSubImage3D_no_error
00000000002b3380 00000000000000f4 T _mesa_CopyTextureSubImage1D_no_error
00000000002b3480 0000000000000104 T _mesa_CopyTextureSubImage2D_no_error
00000000002b3590 00000000000001c0 T _mesa_CopyTextureSubImage3D_no_error
00000000002b3750 0000000000000318 T _mesa_ClearTexSubImage
00000000002b3a70 00000000000001c4 T _mesa_ClearTexImage
00000000002b3c40 0000000000000070 T _mesa_CompressedTexImage1D
00000000002b3cb0 00000000000004f4 T _mesa_CompressedTextureImage1DEXT
00000000002b41b0 00000000000004f4 T _mesa_CompressedMultiTexImage1DEXT
00000000002b46b0 0000000000000074 T _mesa_CompressedTexImage2D
00000000002b4730 000000000000058c T _mesa_CompressedTextureImage2DEXT
00000000002b4cc0 000000000000058c T _mesa_CompressedMultiTexImage2DEXT
00000000002b5250 0000000000000074 T _mesa_CompressedTexImage3D
00000000002b52d0 0000000000000554 T _mesa_CompressedTextureImage3DEXT
00000000002b5830 0000000000000554 T _mesa_CompressedMultiTexImage3DEXT
00000000002b5d90 0000000000000070 T _mesa_CompressedTexImage1D_no_error
00000000002b5e00 0000000000000074 T _mesa_CompressedTexImage2D_no_error
00000000002b5e80 0000000000000074 T _mesa_CompressedTexImage3D_no_error
00000000002b5f00 0000000000000068 T _mesa_CompressedTexSubImage1D_no_error
00000000002b5f70 0000000000000068 T _mesa_CompressedTexSubImage1D
00000000002b5fe0 0000000000000068 T _mesa_CompressedTextureSubImage1D_no_error
00000000002b6050 0000000000000068 T _mesa_CompressedTextureSubImage1D
00000000002b60c0 000000000000006c T _mesa_CompressedTextureSubImage1DEXT
00000000002b6130 0000000000000070 T _mesa_CompressedMultiTexSubImage1DEXT
00000000002b61a0 000000000000006c T _mesa_CompressedTexSubImage2D_no_error
00000000002b6210 000000000000006c T _mesa_CompressedTexSubImage2D
00000000002b6280 0000000000000078 T _mesa_CompressedTextureSubImage2DEXT
00000000002b6300 000000000000007c T _mesa_CompressedMultiTexSubImage2DEXT
00000000002b6380 0000000000000070 T _mesa_CompressedTextureSubImage2D_no_error
00000000002b63f0 0000000000000070 T _mesa_CompressedTextureSubImage2D
00000000002b6460 0000000000000074 T _mesa_CompressedTexSubImage3D_no_error
00000000002b64e0 0000000000000078 T _mesa_CompressedTexSubImage3D
00000000002b6560 0000000000000078 T _mesa_CompressedTextureSubImage3D_no_error
00000000002b65e0 0000000000000078 T _mesa_CompressedTextureSubImage3D
00000000002b6660 0000000000000080 T _mesa_CompressedTextureSubImage3DEXT
00000000002b66e0 0000000000000084 T _mesa_CompressedMultiTexSubImage3DEXT
00000000002b6770 00000000000004e8 t _mesa_get_texbuffer_format
00000000002b6c60 000000000000009c t _mesa_validate_texbuffer_format
00000000002b6d00 0000000000000238 t texture_buffer_range
00000000002b6f40 00000000000000f8 T _mesa_TexBuffer
00000000002b7040 000000000000010c T _mesa_TexBufferRange
00000000002b7150 0000000000000144 T _mesa_TextureBufferRangeEXT
00000000002b72a0 000000000000010c T _mesa_TextureBuffer
00000000002b73b0 0000000000000114 T _mesa_TextureBufferEXT
00000000002b74d0 0000000000000114 T _mesa_MultiTexBufferEXT
00000000002b75f0 000000000000012c T _mesa_TextureBufferRange
00000000002b7720 000000000000003c t _mesa_is_renderable_texture_format
00000000002b7760 00000000000000b4 T _mesa_TexImage2DMultisample
00000000002b7820 00000000000000b4 T _mesa_TexImage3DMultisample
00000000002b78e0 0000000000000110 T _mesa_TexStorage2DMultisample
00000000002b79f0 0000000000000114 T _mesa_TexStorage3DMultisample
00000000002b7b10 0000000000000114 T _mesa_TextureStorage2DMultisample
00000000002b7c30 0000000000000118 T _mesa_TextureStorage3DMultisample
00000000002b7d50 0000000000000114 T _mesa_TextureStorage2DMultisampleEXT
00000000002b7e70 0000000000000118 T _mesa_TextureStorage3DMultisampleEXT
00000000002b7f90 000000000000004c t _mesa_texture_storage_ms_memory
00000000002b7fe0 0000000000000124 t finish_texture_init
00000000002b8110 00000000000000e0 t invalidate_tex_image_error_check
00000000002b81f0 00000000000000a4 t unbind_texobj_from_fbo
00000000002b82a0 0000000000000100 t create_textures.part.0
00000000002b83a0 000000000000000c t _mesa_lookup_texture
00000000002b83b0 000000000000005c t _mesa_lookup_texture_err
00000000002b8410 000000000000000c t _mesa_lookup_texture_locked
00000000002b8420 0000000000000484 t _mesa_get_current_tex_object
00000000002b88b0 00000000000000b0 t _mesa_delete_texture_object
00000000002b8960 000000000000010c t _mesa_copy_texture_object
00000000002b8a70 0000000000000088 t _mesa_clear_texture_object
00000000002b8b00 00000000000000c0 t _mesa_reference_texobj_
00000000002b8bc0 00000000000000dc t unbind_texobj_from_texunits
00000000002b8ca0 00000000000001a0 t delete_textures
00000000002b8e40 00000000000001a8 t bind_texture_object
00000000002b8ff0 00000000000000ec t unbind_textures_from_unit
00000000002b90e0 00000000000003a8 t _mesa_test_texobj_completeness
00000000002b9490 0000000000000090 t _mesa_cube_level_complete
00000000002b9520 000000000000009c t _mesa_cube_complete
00000000002b95c0 0000000000000018 t _mesa_dirty_texobj
00000000002b95e0 0000000000000218 t _mesa_get_fallback_texture
00000000002b9800 0000000000000020 t _mesa_texture_base_format
00000000002b9820 000000000000003c T _mesa_GenTextures_no_error
00000000002b9860 0000000000000060 T _mesa_GenTextures
00000000002b98c0 0000000000000040 T _mesa_CreateTextures_no_error
00000000002b9900 000000000000002c T _mesa_DeleteTextures_no_error
00000000002b9930 0000000000000044 T _mesa_DeleteTextures
00000000002b9980 00000000000002f4 t _mesa_tex_target_to_index
00000000002b9c80 00000000000000f4 t _mesa_get_texobj_by_target_and_texunit
00000000002b9d80 000000000000014c t _mesa_initialize_texture_object
00000000002b9ed0 0000000000000054 t _mesa_new_texture_object
00000000002b9f30 000000000000009c T _mesa_CreateTextures
00000000002b9fd0 0000000000000204 t _mesa_lookup_or_create_texture
00000000002ba1e0 0000000000000070 T _mesa_BindTexture_no_error
00000000002ba250 0000000000000070 t _mesa_BindTexture
00000000002ba2c0 00000000000000b8 T _mesa_BindMultiTextureEXT
00000000002ba380 000000000000005c T _mesa_BindTextureUnit_no_error
00000000002ba3e0 00000000000000dc T _mesa_BindTextureUnit
00000000002ba4c0 0000000000000124 T _mesa_BindTextures_no_error
00000000002ba5f0 000000000000019c T _mesa_BindTextures
00000000002ba790 000000000000010c T _mesa_PrioritizeTextures
00000000002ba8a0 0000000000000110 T _mesa_AreTexturesResident
00000000002ba9b0 0000000000000098 T _mesa_IsTexture
00000000002baa50 0000000000000050 t _mesa_lock_context_textures
00000000002baaa0 000000000000000c t _mesa_unlock_context_textures
00000000002baab0 0000000000000004 T _mesa_InvalidateTexSubImage_no_error
00000000002baac0 00000000000002d8 T _mesa_InvalidateTexSubImage
00000000002bada0 0000000000000004 T _mesa_InvalidateTexImage_no_error
00000000002badb0 0000000000000034 T _mesa_InvalidateTexImage
00000000002badf0 00000000000000e8 t tex_combine_translate_mode
00000000002baee0 0000000000000230 t update_single_program_texture
00000000002bb110 00000000000002e8 t _mesa_copy_texture_state
00000000002bb400 00000000000000a0 t _mesa_ActiveTexture_no_error
00000000002bb4a0 00000000000000f4 t _mesa_ActiveTexture
00000000002bb5a0 0000000000000080 t _mesa_ClientActiveTexture
00000000002bb620 00000000000000cc t _mesa_update_texture_matrices
00000000002bb6f0 0000000000000f84 t _mesa_update_texture_state
00000000002bc680 0000000000000278 t _mesa_init_texture
00000000002bc900 0000000000000110 t _mesa_free_texture_data
00000000002bca10 0000000000000098 t _mesa_update_default_objects_texture
00000000002bcab0 00000000000002c8 t tex_storage_error_check
00000000002bcd80 000000000000015c t initialize_texture_fields
00000000002bcee0 0000000000000088 t update_fbo_texture
00000000002bcf70 00000000000001e4 t legal_texobj_target
00000000002bd160 00000000000000d0 t clear_texture_fields
00000000002bd230 000000000000017c t texture_storage_no_error.constprop.0
00000000002bd3b0 00000000000002c8 t texture_storage_error.constprop.0
00000000002bd680 0000000000000110 t _mesa_is_legal_tex_storage_format
00000000002bd790 0000000000000134 t texstorage_error
00000000002bd8d0 0000000000000160 t texturestorage_error
00000000002bda30 0000000000000084 T _mesa_TexStorage1D_no_error
00000000002bdac0 0000000000000030 T _mesa_TexStorage1D
00000000002bdaf0 000000000000008c T _mesa_TexStorage2D_no_error
00000000002bdb80 0000000000000034 T _mesa_TexStorage2D
00000000002bdbc0 0000000000000094 T _mesa_TexStorage3D_no_error
00000000002bdc60 0000000000000038 T _mesa_TexStorage3D
00000000002bdca0 000000000000007c T _mesa_TextureStorage1D_no_error
00000000002bdd20 0000000000000030 T _mesa_TextureStorage1D
00000000002bdd50 000000000000008c T _mesa_TextureStorage2D_no_error
00000000002bdde0 0000000000000034 T _mesa_TextureStorage2D
00000000002bde20 000000000000008c T _mesa_TextureStorage3D_no_error
00000000002bdeb0 0000000000000038 T _mesa_TextureStorage3D
00000000002bdef0 000000000000009c T _mesa_TextureStorage1DEXT
00000000002bdf90 00000000000000a0 T _mesa_TextureStorage2DEXT
00000000002be030 00000000000000b0 T _mesa_TextureStorage3DEXT
00000000002be0e0 0000000000000350 t _mesa_texture_storage_memory
00000000002be430 000000000000011c t _mesa_texstore_z32
00000000002be550 000000000000013c t _mesa_texstore_z24_x8
00000000002be690 0000000000000114 t _mesa_texstore_x8_z24
00000000002be7b0 0000000000000114 t _mesa_texstore_z16
00000000002be8d0 00000000000001bc t _mesa_texstore_z32f_x24s8
00000000002bea90 0000000000000184 t _mesa_texstore_s8
00000000002bec20 0000000000000290 t _mesa_texstore_s8_z24
00000000002beeb0 0000000000000290 t _mesa_texstore_z24_s8
00000000002bf140 00000000000001ac t _mesa_memcpy_texture
00000000002bf2f0 00000000000000a4 t _mesa_texstore_needs_transfer_ops
00000000002bf3a0 0000000000000118 t _mesa_texstore_can_use_memcpy
00000000002bf4c0 000000000000086c t _mesa_texstore
00000000002bfd30 0000000000000424 t store_texsubimage
00000000002c0160 000000000000004c t _mesa_store_texsubimage
00000000002c01b0 0000000000000174 t _mesa_compute_compressed_pixelstore
00000000002c0330 000000000000022c t _mesa_store_compressed_texsubimage
00000000002c0560 0000000000000100 t make_texture_handle_resident
00000000002c0660 00000000000000d0 t is_sampler_border_color_valid
00000000002c0730 0000000000000308 t get_texture_handle
00000000002c0a40 00000000000002b8 t get_image_handle
00000000002c0d00 000000000000003c t _mesa_init_resident_handles
00000000002c0d40 0000000000000030 t _mesa_free_resident_handles
00000000002c0d70 0000000000000044 t _mesa_init_shared_handles
00000000002c0dc0 0000000000000040 t _mesa_free_shared_handles
00000000002c0e00 000000000000001c t _mesa_init_texture_handles
00000000002c0e20 000000000000013c t _mesa_make_texture_handles_non_resident
00000000002c0f60 00000000000001c8 t _mesa_delete_texture_handles
00000000002c1130 000000000000000c t _mesa_init_sampler_handles
00000000002c1140 0000000000000124 t _mesa_delete_sampler_handles
00000000002c1270 0000000000000134 T _mesa_GetTextureHandleARB_no_error
00000000002c13b0 00000000000002b4 T _mesa_GetTextureHandleARB
00000000002c1670 0000000000000148 T _mesa_GetTextureSamplerHandleARB_no_error
00000000002c17c0 00000000000002dc T _mesa_GetTextureSamplerHandleARB
00000000002c1aa0 0000000000000064 T _mesa_MakeTextureHandleResidentARB_no_error
00000000002c1b10 000000000000012c T _mesa_MakeTextureHandleResidentARB
00000000002c1c40 0000000000000064 T _mesa_MakeTextureHandleNonResidentARB_no_error
00000000002c1cb0 000000000000012c T _mesa_MakeTextureHandleNonResidentARB
00000000002c1de0 000000000000014c T _mesa_GetImageHandleARB_no_error
00000000002c1f30 00000000000003ac T _mesa_GetImageHandleARB
00000000002c22e0 00000000000000b4 T _mesa_MakeImageHandleResidentARB_no_error
00000000002c23a0 0000000000000198 T _mesa_MakeImageHandleResidentARB
00000000002c2540 00000000000000ac T _mesa_MakeImageHandleNonResidentARB_no_error
00000000002c25f0 000000000000014c T _mesa_MakeImageHandleNonResidentARB
00000000002c2740 0000000000000038 T _mesa_IsTextureHandleResidentARB_no_error
00000000002c2780 00000000000000fc T _mesa_IsTextureHandleResidentARB
00000000002c2880 0000000000000038 T _mesa_IsImageHandleResidentARB_no_error
00000000002c28c0 0000000000000104 T _mesa_IsImageHandleResidentARB
00000000002c29d0 000000000000016c t initialize_texture_fields
00000000002c2b40 000000000000018c t _mesa_texture_view_lookup_view_class
00000000002c2cd0 0000000000000054 t _mesa_texture_view_compatible_format
00000000002c2d30 0000000000000100 t _mesa_set_texture_view_state
00000000002c2e30 000000000000024c T _mesa_TextureView_no_error
00000000002c3080 0000000000000770 T _mesa_TextureView
00000000002c37f0 0000000000000080 t reference_transform_feedback_object
00000000002c3870 0000000000000014 t delete_cb
00000000002c3890 000000000000004c t compute_transform_feedback_buffer_sizes
00000000002c38e0 0000000000000060 t _mesa_delete_transform_feedback_object
00000000002c3940 0000000000000088 t end_transform_feedback
00000000002c39d0 0000000000000158 t create_transform_feedbacks
00000000002c3b30 0000000000000028 t active_xfb_object_references_program
00000000002c3b60 0000000000000078 t _mesa_transform_feedback_is_using_program
00000000002c3be0 0000000000000070 t _mesa_init_transform_feedback
00000000002c3c50 000000000000006c t _mesa_free_transform_feedback
00000000002c3cc0 0000000000000010 t _mesa_init_transform_feedback_object
00000000002c3cd0 0000000000000198 T _mesa_BeginTransformFeedback_no_error
00000000002c3e70 0000000000000288 T _mesa_BeginTransformFeedback
00000000002c4100 0000000000000028 T _mesa_EndTransformFeedback_no_error
00000000002c4130 0000000000000044 T _mesa_EndTransformFeedback
00000000002c4180 0000000000000130 t _mesa_validate_buffer_range_xfb
00000000002c42b0 000000000000013c t _mesa_bind_buffer_base_transform_feedback
00000000002c43f0 00000000000000e4 T _mesa_TransformFeedbackBufferBase
00000000002c44e0 0000000000000184 T _mesa_TransformFeedbackBufferRange
00000000002c4670 00000000000000ec T _mesa_BindBufferOffsetEXT_no_error
00000000002c4760 00000000000001b8 T _mesa_BindBufferOffsetEXT
00000000002c4920 0000000000000108 T _mesa_TransformFeedbackVaryings_no_error
00000000002c4a30 000000000000033c T _mesa_TransformFeedbackVaryings
00000000002c4d70 0000000000000140 T _mesa_GetTransformFeedbackVarying
00000000002c4eb0 0000000000000018 t _mesa_lookup_transform_feedback_object
00000000002c4ed0 0000000000000030 T _mesa_GenTransformFeedbacks
00000000002c4f00 0000000000000030 T _mesa_CreateTransformFeedbacks
00000000002c4f30 0000000000000074 T _mesa_IsTransformFeedback
00000000002c4fb0 00000000000000a4 T _mesa_BindTransformFeedback_no_error
00000000002c5060 00000000000000d4 T _mesa_BindTransformFeedback
00000000002c5140 0000000000000130 T _mesa_DeleteTransformFeedbacks
00000000002c5270 0000000000000080 T _mesa_PauseTransformFeedback_no_error
00000000002c52f0 00000000000000a0 T _mesa_PauseTransformFeedback
00000000002c5390 000000000000007c T _mesa_ResumeTransformFeedback_no_error
00000000002c5410 00000000000000e0 T _mesa_ResumeTransformFeedback
00000000002c54f0 00000000000000e4 T _mesa_GetTransformFeedbackiv
00000000002c55e0 0000000000000110 T _mesa_GetTransformFeedbacki_v
00000000002c56f0 0000000000000170 T _mesa_GetTransformFeedbacki64_v
00000000002c5860 0000000000000140 t glsl_type_name(glsl_base_type)
00000000002c59a0 000000000000012c t validate_uniform_parameters(int, int, unsigned int*, gl_context*, gl_shader_program*, char const*)
00000000002c5ad0 0000000000000134 t copy_uniform_matrix_to_storage(gl_constant_value*, int, void const*, unsigned int, unsigned int, unsigned int, unsigned int, bool, unsigned int, unsigned int, glsl_base_type) [clone .constprop.0]
00000000002c5c10 00000000000000c0 t copy_uniforms_to_storage(gl_constant_value*, gl_uniform_storage*, gl_context*, int, void const*, int, unsigned int, unsigned int, glsl_base_type) [clone .constprop.0] [clone .isra.0]
00000000002c5cd0 00000000000001b4 t log_uniform(void const*, glsl_base_type, unsigned int, unsigned int, unsigned int, bool, gl_shader_program const*, int, gl_uniform_storage const*) [clone .isra.0]
00000000002c5e90 0000000000000160 T _mesa_GetActiveUniform
00000000002c5ff0 00000000000001e8 T _mesa_GetActiveUniformsiv
00000000002c61e0 0000000000000760 t _mesa_get_uniform
00000000002c6940 0000000000000298 t _mesa_propagate_uniforms_to_driver_storage
00000000002c6be0 00000000000000e8 t _mesa_flush_vertices_for_uniforms
00000000002c6cd0 00000000000006e0 t _mesa_uniform
00000000002c73b0 000000000000032c t _mesa_uniform_matrix
00000000002c76e0 0000000000000344 t _mesa_uniform_handle
00000000002c7a30 0000000000000054 t _mesa_sampler_uniforms_are_valid
00000000002c7a90 0000000000000108 t _mesa_sampler_uniforms_pipeline_are_valid
00000000002c7ba0 00000000000002e8 t mesa_bufferiv
00000000002c7e90 00000000000002e0 t _mesa_update_shader_textures_used
00000000002c8170 0000000000000078 t _mesa_uniform_attach_driver_storage
00000000002c81f0 000000000000002c t _mesa_uniform_detach_all_driver_storage
00000000002c8220 0000000000000050 T _mesa_Uniform1f
00000000002c8270 0000000000000050 T _mesa_Uniform2f
00000000002c82c0 0000000000000054 T _mesa_Uniform3f
00000000002c8320 0000000000000050 T _mesa_Uniform4f
00000000002c8370 0000000000000050 T _mesa_Uniform1i
00000000002c83c0 0000000000000058 T _mesa_Uniform2i
00000000002c8420 0000000000000058 T _mesa_Uniform3i
00000000002c8480 0000000000000058 T _mesa_Uniform4i
00000000002c84e0 0000000000000040 T _mesa_Uniform1fv
00000000002c8520 0000000000000040 T _mesa_Uniform2fv
00000000002c8560 0000000000000040 T _mesa_Uniform3fv
00000000002c85a0 0000000000000040 T _mesa_Uniform4fv
00000000002c85e0 0000000000000040 T _mesa_Uniform1iv
00000000002c8620 0000000000000040 T _mesa_Uniform2iv
00000000002c8660 0000000000000040 T _mesa_Uniform3iv
00000000002c86a0 0000000000000040 T _mesa_Uniform4iv
00000000002c86e0 0000000000000048 T _mesa_UniformHandleui64ARB
00000000002c8730 0000000000000038 T _mesa_UniformHandleui64vARB
00000000002c8770 0000000000000068 T _mesa_ProgramUniform1f
00000000002c87e0 0000000000000068 T _mesa_ProgramUniform2f
00000000002c8850 000000000000006c T _mesa_ProgramUniform3f
00000000002c88c0 000000000000006c T _mesa_ProgramUniform4f
00000000002c8930 0000000000000068 T _mesa_ProgramUniform1i
00000000002c89a0 000000000000006c T _mesa_ProgramUniform2i
00000000002c8a10 0000000000000070 T _mesa_ProgramUniform3i
00000000002c8a80 000000000000006c T _mesa_ProgramUniform4i
00000000002c8af0 0000000000000070 T _mesa_ProgramUniform1fv
00000000002c8b60 0000000000000070 T _mesa_ProgramUniform2fv
00000000002c8bd0 0000000000000070 T _mesa_ProgramUniform3fv
00000000002c8c40 0000000000000070 T _mesa_ProgramUniform4fv
00000000002c8cb0 0000000000000070 T _mesa_ProgramUniform1iv
00000000002c8d20 0000000000000070 T _mesa_ProgramUniform2iv
00000000002c8d90 0000000000000070 T _mesa_ProgramUniform3iv
00000000002c8e00 0000000000000070 T _mesa_ProgramUniform4iv
00000000002c8e70 0000000000000060 T _mesa_ProgramUniformHandleui64ARB
00000000002c8ed0 0000000000000068 T _mesa_ProgramUniformHandleui64vARB
00000000002c8f40 0000000000000050 T _mesa_Uniform1ui
00000000002c8f90 0000000000000054 T _mesa_Uniform2ui
00000000002c8ff0 000000000000005c T _mesa_Uniform3ui
00000000002c9050 0000000000000058 T _mesa_Uniform4ui
00000000002c90b0 0000000000000040 T _mesa_Uniform1uiv
00000000002c90f0 0000000000000040 T _mesa_Uniform2uiv
00000000002c9130 0000000000000040 T _mesa_Uniform3uiv
00000000002c9170 0000000000000040 T _mesa_Uniform4uiv
00000000002c91b0 0000000000000050 T _mesa_UniformMatrix2fv
00000000002c9200 0000000000000054 T _mesa_UniformMatrix3fv
00000000002c9260 0000000000000054 T _mesa_UniformMatrix4fv
00000000002c92c0 0000000000000068 T _mesa_ProgramUniform1ui
00000000002c9330 000000000000006c T _mesa_ProgramUniform2ui
00000000002c93a0 0000000000000070 T _mesa_ProgramUniform3ui
00000000002c9410 000000000000006c T _mesa_ProgramUniform4ui
00000000002c9480 0000000000000070 T _mesa_ProgramUniform1uiv
00000000002c94f0 0000000000000070 T _mesa_ProgramUniform2uiv
00000000002c9560 0000000000000070 T _mesa_ProgramUniform3uiv
00000000002c95d0 0000000000000070 T _mesa_ProgramUniform4uiv
00000000002c9640 0000000000000090 T _mesa_ProgramUniformMatrix2fv
00000000002c96d0 0000000000000094 T _mesa_ProgramUniformMatrix3fv
00000000002c9770 0000000000000094 T _mesa_ProgramUniformMatrix4fv
00000000002c9810 0000000000000050 T _mesa_UniformMatrix2x3fv
00000000002c9860 0000000000000050 T _mesa_UniformMatrix3x2fv
00000000002c98b0 0000000000000050 T _mesa_UniformMatrix2x4fv
00000000002c9900 0000000000000050 T _mesa_UniformMatrix4x2fv
00000000002c9950 0000000000000054 T _mesa_UniformMatrix3x4fv
00000000002c99b0 0000000000000054 T _mesa_UniformMatrix4x3fv
00000000002c9a10 0000000000000090 T _mesa_ProgramUniformMatrix2x3fv
00000000002c9aa0 0000000000000090 T _mesa_ProgramUniformMatrix3x2fv
00000000002c9b30 0000000000000090 T _mesa_ProgramUniformMatrix2x4fv
00000000002c9bc0 0000000000000090 T _mesa_ProgramUniformMatrix4x2fv
00000000002c9c50 0000000000000094 T _mesa_ProgramUniformMatrix3x4fv
00000000002c9cf0 0000000000000094 T _mesa_ProgramUniformMatrix4x3fv
00000000002c9d90 0000000000000040 T _mesa_GetnUniformfvARB
00000000002c9dd0 000000000000003c T _mesa_GetUniformfv
00000000002c9e10 0000000000000040 T _mesa_GetnUniformivARB
00000000002c9e50 000000000000003c T _mesa_GetUniformiv
00000000002c9e90 0000000000000040 T _mesa_GetnUniformuivARB
00000000002c9ed0 000000000000003c T _mesa_GetUniformuiv
00000000002c9f10 0000000000000040 T _mesa_GetnUniformdvARB
00000000002c9f50 000000000000003c T _mesa_GetUniformdv
00000000002c9f90 0000000000000040 T _mesa_GetnUniformi64vARB
00000000002c9fd0 000000000000003c T _mesa_GetUniformi64vARB
00000000002ca010 0000000000000040 T _mesa_GetnUniformui64vARB
00000000002ca050 000000000000003c T _mesa_GetUniformui64vARB
00000000002ca090 0000000000000088 T _mesa_GetUniformLocation
00000000002ca120 0000000000000040 T _mesa_GetUniformLocation_no_error
00000000002ca160 0000000000000090 T _mesa_GetUniformBlockIndex
00000000002ca1f0 00000000000000f4 T _mesa_GetUniformIndices
00000000002ca2f0 00000000000000ac T _mesa_UniformBlockBinding_no_error
00000000002ca3a0 0000000000000140 T _mesa_UniformBlockBinding
00000000002ca4e0 00000000000000ac T _mesa_ShaderStorageBlockBinding_no_error
00000000002ca590 0000000000000140 T _mesa_ShaderStorageBlockBinding
00000000002ca6d0 00000000000000a0 T _mesa_GetActiveUniformBlockiv
00000000002ca770 00000000000000d4 T _mesa_GetActiveUniformBlockName
00000000002ca850 00000000000000d4 T _mesa_GetActiveUniformName
00000000002ca930 00000000000000a0 T _mesa_GetActiveAtomicCounterBufferiv
00000000002ca9d0 0000000000000050 T _mesa_Uniform1d
00000000002caa20 0000000000000050 T _mesa_Uniform2d
00000000002caa70 0000000000000054 T _mesa_Uniform3d
00000000002caad0 0000000000000054 T _mesa_Uniform4d
00000000002cab30 0000000000000040 T _mesa_Uniform1dv
00000000002cab70 0000000000000040 T _mesa_Uniform2dv
00000000002cabb0 0000000000000040 T _mesa_Uniform3dv
00000000002cabf0 0000000000000040 T _mesa_Uniform4dv
00000000002cac30 0000000000000054 T _mesa_UniformMatrix2dv
00000000002cac90 0000000000000054 T _mesa_UniformMatrix3dv
00000000002cacf0 0000000000000050 T _mesa_UniformMatrix4dv
00000000002cad40 0000000000000054 T _mesa_UniformMatrix2x3dv
00000000002cada0 0000000000000054 T _mesa_UniformMatrix3x2dv
00000000002cae00 0000000000000050 T _mesa_UniformMatrix2x4dv
00000000002cae50 0000000000000050 T _mesa_UniformMatrix4x2dv
00000000002caea0 0000000000000050 T _mesa_UniformMatrix3x4dv
00000000002caef0 0000000000000050 T _mesa_UniformMatrix4x3dv
00000000002caf40 0000000000000068 T _mesa_ProgramUniform1d
00000000002cafb0 0000000000000068 T _mesa_ProgramUniform2d
00000000002cb020 000000000000006c T _mesa_ProgramUniform3d
00000000002cb090 0000000000000078 T _mesa_ProgramUniform4d
00000000002cb110 0000000000000070 T _mesa_ProgramUniform1dv
00000000002cb180 0000000000000070 T _mesa_ProgramUniform2dv
00000000002cb1f0 0000000000000070 T _mesa_ProgramUniform3dv
00000000002cb260 0000000000000070 T _mesa_ProgramUniform4dv
00000000002cb2d0 0000000000000094 T _mesa_ProgramUniformMatrix2dv
00000000002cb370 0000000000000094 T _mesa_ProgramUniformMatrix3dv
00000000002cb410 0000000000000090 T _mesa_ProgramUniformMatrix4dv
00000000002cb4a0 0000000000000094 T _mesa_ProgramUniformMatrix2x3dv
00000000002cb540 0000000000000094 T _mesa_ProgramUniformMatrix3x2dv
00000000002cb5e0 0000000000000090 T _mesa_ProgramUniformMatrix2x4dv
00000000002cb670 0000000000000090 T _mesa_ProgramUniformMatrix4x2dv
00000000002cb700 0000000000000090 T _mesa_ProgramUniformMatrix3x4dv
00000000002cb790 0000000000000090 T _mesa_ProgramUniformMatrix4x3dv
00000000002cb820 0000000000000050 T _mesa_Uniform1i64ARB
00000000002cb870 0000000000000054 T _mesa_Uniform2i64ARB
00000000002cb8d0 000000000000005c T _mesa_Uniform3i64ARB
00000000002cb930 0000000000000060 T _mesa_Uniform4i64ARB
00000000002cb990 0000000000000040 T _mesa_Uniform1i64vARB
00000000002cb9d0 0000000000000040 T _mesa_Uniform2i64vARB
00000000002cba10 0000000000000040 T _mesa_Uniform3i64vARB
00000000002cba50 0000000000000040 T _mesa_Uniform4i64vARB
00000000002cba90 0000000000000050 T _mesa_Uniform1ui64ARB
00000000002cbae0 0000000000000054 T _mesa_Uniform2ui64ARB
00000000002cbb40 000000000000005c T _mesa_Uniform3ui64ARB
00000000002cbba0 0000000000000060 T _mesa_Uniform4ui64ARB
00000000002cbc00 0000000000000040 T _mesa_Uniform1ui64vARB
00000000002cbc40 0000000000000040 T _mesa_Uniform2ui64vARB
00000000002cbc80 0000000000000040 T _mesa_Uniform3ui64vARB
00000000002cbcc0 0000000000000040 T _mesa_Uniform4ui64vARB
00000000002cbd00 0000000000000068 T _mesa_ProgramUniform1i64ARB
00000000002cbd70 0000000000000078 T _mesa_ProgramUniform2i64ARB
00000000002cbdf0 0000000000000088 T _mesa_ProgramUniform3i64ARB
00000000002cbe80 0000000000000090 T _mesa_ProgramUniform4i64ARB
00000000002cbf10 0000000000000070 T _mesa_ProgramUniform1i64vARB
00000000002cbf80 0000000000000070 T _mesa_ProgramUniform2i64vARB
00000000002cbff0 0000000000000070 T _mesa_ProgramUniform3i64vARB
00000000002cc060 0000000000000070 T _mesa_ProgramUniform4i64vARB
00000000002cc0d0 0000000000000068 T _mesa_ProgramUniform1ui64ARB
00000000002cc140 0000000000000078 T _mesa_ProgramUniform2ui64ARB
00000000002cc1c0 0000000000000088 T _mesa_ProgramUniform3ui64ARB
00000000002cc250 0000000000000090 T _mesa_ProgramUniform4ui64ARB
00000000002cc2e0 0000000000000070 T _mesa_ProgramUniform1ui64vARB
00000000002cc350 0000000000000070 T _mesa_ProgramUniform2ui64vARB
00000000002cc3c0 0000000000000070 T _mesa_ProgramUniform3ui64vARB
00000000002cc430 0000000000000070 T _mesa_ProgramUniform4ui64vARB
00000000002cc4a0 00000000000002c0 t get_vertex_array_attrib
00000000002cc760 00000000000000a8 t get_current_attrib
00000000002cc810 0000000000000008 t delete_arrayobj_cb
00000000002cc820 00000000000000cc t _lookup_vao_and_vbo_dsa
00000000002cc8f0 00000000000003c0 t validate_array_format.constprop.0
00000000002cccb0 0000000000000154 t validate_array_and_format.isra.0
00000000002cce10 00000000000000c4 t vertex_array_binding_divisor
00000000002ccee0 00000000000000a0 t _mesa_vertex_attrib_binding
00000000002ccf80 0000000000000074 t vertex_array_attrib_binding
00000000002cd000 0000000000000184 t _mesa_bind_vertex_buffer
00000000002cd190 00000000000001e0 t vertex_array_vertex_buffer_err.part.0
00000000002cd370 0000000000000274 t vertex_array_vertex_buffers_err.part.0
00000000002cd5f0 00000000000001a4 t _mesa_set_vertex_format
00000000002cd7a0 00000000000000b8 t _mesa_update_array_format
00000000002cd860 000000000000020c t vertex_attrib_format
00000000002cda70 00000000000001ec t vertex_array_attrib_format
00000000002cdc60 0000000000000108 t update_array.constprop.0
00000000002cdd70 0000000000000140 T _mesa_VertexPointer_no_error
00000000002cdeb0 00000000000000e8 t _mesa_VertexPointer
00000000002cdfa0 0000000000000160 T _mesa_VertexArrayVertexOffsetEXT
00000000002ce100 0000000000000140 T _mesa_NormalPointer_no_error
00000000002ce240 00000000000000e8 t _mesa_NormalPointer
00000000002ce330 000000000000015c T _mesa_VertexArrayNormalOffsetEXT
00000000002ce490 000000000000008c T _mesa_ColorPointer_no_error
00000000002ce520 0000000000000140 t _mesa_ColorPointer
00000000002ce660 00000000000001a4 T _mesa_VertexArrayColorOffsetEXT
00000000002ce810 0000000000000140 T _mesa_FogCoordPointer_no_error
00000000002ce950 00000000000000cc t _mesa_FogCoordPointer
00000000002cea20 0000000000000138 T _mesa_VertexArrayFogCoordOffsetEXT
00000000002ceb60 0000000000000140 T _mesa_IndexPointer_no_error
00000000002ceca0 00000000000000cc t _mesa_IndexPointer
00000000002ced70 0000000000000138 T _mesa_VertexArrayIndexOffsetEXT
00000000002ceeb0 000000000000008c T _mesa_SecondaryColorPointer_no_error
00000000002cef40 0000000000000104 t _mesa_SecondaryColorPointer
00000000002cf050 0000000000000174 T _mesa_VertexArraySecondaryColorOffsetEXT
00000000002cf1d0 0000000000000064 T _mesa_TexCoordPointer_no_error
00000000002cf240 00000000000000f0 t _mesa_TexCoordPointer
00000000002cf330 0000000000000158 T _mesa_VertexArrayTexCoordOffsetEXT
00000000002cf490 0000000000000188 T _mesa_VertexArrayMultiTexCoordOffsetEXT
00000000002cf620 0000000000000138 T _mesa_EdgeFlagPointer_no_error
00000000002cf760 00000000000000cc t _mesa_EdgeFlagPointer
00000000002cf830 0000000000000130 T _mesa_VertexArrayEdgeFlagOffsetEXT
00000000002cf960 0000000000000140 T _mesa_PointSizePointerOES_no_error
00000000002cfaa0 0000000000000120 T _mesa_PointSizePointerOES
00000000002cfbc0 0000000000000088 T _mesa_VertexAttribPointer_no_error
00000000002cfc50 0000000000000168 t _mesa_VertexAttribPointer
00000000002cfdc0 0000000000000184 T _mesa_VertexArrayVertexAttribOffsetEXT
00000000002cff50 0000000000000178 T _mesa_VertexArrayVertexAttribLOffsetEXT
00000000002d00d0 0000000000000068 T _mesa_VertexAttribIPointer_no_error
00000000002d0140 0000000000000130 T _mesa_VertexAttribIPointer
00000000002d0270 0000000000000068 T _mesa_VertexAttribLPointer_no_error
00000000002d02e0 0000000000000178 T _mesa_VertexArrayVertexAttribIOffsetEXT
00000000002d0460 0000000000000130 T _mesa_VertexAttribLPointer
00000000002d0590 000000000000004c t _mesa_enable_vertex_array_attribs
00000000002d05e0 00000000000000ac T _mesa_EnableVertexAttribArray
00000000002d0690 0000000000000080 T _mesa_EnableVertexAttribArray_no_error
00000000002d0710 00000000000000b0 T _mesa_EnableVertexArrayAttrib
00000000002d07c0 00000000000000b0 T _mesa_EnableVertexArrayAttribEXT
00000000002d0870 0000000000000090 T _mesa_EnableVertexArrayAttrib_no_error
00000000002d0900 000000000000004c t _mesa_disable_vertex_array_attribs
00000000002d0950 00000000000000a4 t _mesa_DisableVertexAttribArray
00000000002d0a00 0000000000000080 T _mesa_DisableVertexAttribArray_no_error
00000000002d0a80 0000000000000098 T _mesa_DisableVertexArrayAttrib
00000000002d0b20 0000000000000098 T _mesa_DisableVertexArrayAttribEXT
00000000002d0bc0 0000000000000090 T _mesa_DisableVertexArrayAttrib_no_error
00000000002d0c50 00000000000000a0 T _mesa_GetVertexAttribfv
00000000002d0cf0 00000000000000a0 T _mesa_GetVertexAttribdv
00000000002d0d90 00000000000000a0 T _mesa_GetVertexAttribLdv
00000000002d0e30 000000000000009c T _mesa_GetVertexAttribiv
00000000002d0ed0 00000000000000a0 T _mesa_GetVertexAttribLui64vARB
00000000002d0f70 000000000000009c T _mesa_GetVertexAttribIiv
00000000002d1010 000000000000009c T _mesa_GetVertexAttribIuiv
00000000002d10b0 0000000000000080 T _mesa_GetVertexAttribPointerv
00000000002d1130 0000000000000160 T _mesa_GetVertexArrayIndexediv
00000000002d1290 00000000000000d0 T _mesa_GetVertexArrayIndexed64iv
00000000002d1360 0000000000000008 T _mesa_VertexPointerEXT
00000000002d1370 0000000000000008 T _mesa_NormalPointerEXT
00000000002d1380 0000000000000008 T _mesa_ColorPointerEXT
00000000002d1390 0000000000000008 T _mesa_IndexPointerEXT
00000000002d13a0 0000000000000008 T _mesa_TexCoordPointerEXT
00000000002d13b0 00000000000000e0 T _mesa_MultiTexCoordPointerEXT
00000000002d1490 0000000000000008 T _mesa_EdgeFlagPointerEXT
00000000002d14a0 00000000000001d8 T _mesa_InterleavedArrays
00000000002d1680 0000000000000080 T _mesa_LockArraysEXT
00000000002d1700 000000000000004c T _mesa_UnlockArraysEXT
00000000002d1750 000000000000002c t _mesa_PrimitiveRestartIndex_no_error
00000000002d1780 000000000000005c T _mesa_PrimitiveRestartIndex
00000000002d17e0 0000000000000098 T _mesa_VertexAttribDivisor_no_error
00000000002d1880 00000000000000dc T _mesa_VertexAttribDivisor
00000000002d1960 0000000000000128 T _mesa_VertexArrayVertexAttribDivisorEXT
00000000002d1a90 00000000000000e4 T _mesa_BindVertexBuffer_no_error
00000000002d1b80 00000000000000b0 T _mesa_BindVertexBuffer
00000000002d1c30 00000000000000f8 T _mesa_VertexArrayVertexBuffer_no_error
00000000002d1d30 00000000000000d0 T _mesa_VertexArrayVertexBuffer
00000000002d1e00 00000000000000d0 T _mesa_VertexArrayBindVertexBufferEXT
00000000002d1ed0 0000000000000190 T _mesa_BindVertexBuffers_no_error
00000000002d2060 000000000000009c T _mesa_BindVertexBuffers
00000000002d2100 00000000000001a0 T _mesa_VertexArrayVertexBuffers_no_error
00000000002d22a0 00000000000000e8 T _mesa_VertexArrayVertexBuffers
00000000002d2390 000000000000003c T _mesa_VertexAttribFormat
00000000002d23d0 0000000000000040 T _mesa_VertexAttribIFormat
00000000002d2410 0000000000000040 T _mesa_VertexAttribLFormat
00000000002d2450 0000000000000060 T _mesa_VertexArrayAttribFormat
00000000002d24b0 0000000000000060 T _mesa_VertexArrayVertexAttribFormatEXT
00000000002d2510 000000000000005c T _mesa_VertexArrayAttribIFormat
00000000002d2570 000000000000005c T _mesa_VertexArrayVertexAttribIFormatEXT
00000000002d25d0 000000000000005c T _mesa_VertexArrayAttribLFormat
00000000002d2630 000000000000005c T _mesa_VertexArrayVertexAttribLFormatEXT
00000000002d2690 0000000000000034 T _mesa_VertexAttribBinding_no_error
00000000002d26d0 00000000000000f8 T _mesa_VertexAttribBinding
00000000002d27d0 0000000000000058 T _mesa_VertexArrayAttribBinding_no_error
00000000002d2830 0000000000000080 T _mesa_VertexArrayAttribBinding
00000000002d28b0 0000000000000080 T _mesa_VertexArrayVertexAttribBindingEXT
00000000002d2930 0000000000000088 T _mesa_VertexBindingDivisor_no_error
00000000002d29c0 0000000000000144 T _mesa_VertexBindingDivisor
00000000002d2b10 0000000000000094 T _mesa_VertexArrayBindingDivisor_no_error
00000000002d2bb0 0000000000000080 T _mesa_VertexArrayBindingDivisor
00000000002d2c30 0000000000000080 T _mesa_VertexArrayVertexBindingDivisorEXT
00000000002d2cb0 000000000000003c t _mesa_copy_vertex_attrib_array
00000000002d2cf0 0000000000000040 t _mesa_copy_vertex_buffer_binding
00000000002d2d30 0000000000000370 t _mesa_init_varray
00000000002d30a0 0000000000000034 t _mesa_free_varray_data
00000000002d30e0 0000000000000464 T _mesa_GetVertexArrayIntegervEXT
00000000002d3550 00000000000000c4 T _mesa_GetVertexArrayPointervEXT
00000000002d3620 0000000000000194 T _mesa_GetVertexArrayIntegeri_vEXT
00000000002d37c0 00000000000000f4 T _mesa_GetVertexArrayPointeri_vEXT
00000000002d38c0 00000000000000b8 t create_version_string
00000000002d3980 0000000000000220 t get_gl_override
00000000002d3ba0 00000000000000c4 t _mesa_override_gl_version_contextless
00000000002d3c70 00000000000000e0 t _mesa_override_gl_version
00000000002d3d50 000000000000007c t _mesa_override_glsl_version
00000000002d3dd0 00000000000008ac t _mesa_get_version
00000000002d4680 00000000000001cc t _mesa_compute_version
00000000002d4850 0000000000000010 t _mesa_get_driver_uuid
00000000002d4860 0000000000000010 t _mesa_get_device_uuid
00000000002d4870 00000000000004f0 t _mesa_get_shading_language_version
00000000002d4d60 0000000000000108 t clamp_viewport
00000000002d4e70 00000000000000e8 t set_depth_range_no_notify
00000000002d4f60 0000000000000150 t viewport_array
00000000002d50b0 000000000000013c t viewport
00000000002d51f0 000000000000003c T _mesa_Viewport_no_error
00000000002d5230 0000000000000060 T _mesa_Viewport
00000000002d5290 000000000000010c t _mesa_set_viewport
00000000002d53a0 0000000000000034 T _mesa_ViewportArrayv_no_error
00000000002d53e0 00000000000000b4 T _mesa_ViewportArrayv
00000000002d54a0 0000000000000024 T _mesa_ViewportIndexedf_no_error
00000000002d54d0 0000000000000090 T _mesa_ViewportIndexedf
00000000002d5560 0000000000000030 T _mesa_ViewportIndexedfv_no_error
00000000002d5590 000000000000009c T _mesa_ViewportIndexedfv
00000000002d5630 0000000000000108 t _mesa_set_depth_range
00000000002d5740 0000000000000148 T _mesa_DepthRange
00000000002d5890 0000000000000120 t _mesa_DepthRangef
00000000002d59b0 0000000000000158 T _mesa_DepthRangeArrayv_no_error
00000000002d5b10 000000000000018c T _mesa_DepthRangeArrayv
00000000002d5ca0 000000000000017c T _mesa_DepthRangeArrayfvOES
00000000002d5e20 0000000000000128 T _mesa_DepthRangeIndexed_no_error
00000000002d5f50 0000000000000080 T _mesa_DepthRangeIndexed
00000000002d5fd0 0000000000000088 T _mesa_DepthRangeIndexedfOES
00000000002d6060 0000000000000074 t _mesa_init_viewport
00000000002d60e0 0000000000000128 T _mesa_ClipControl_no_error
00000000002d6210 00000000000001b4 t _mesa_ClipControl
00000000002d63d0 00000000000000a4 t _mesa_get_viewport_xform
00000000002d6480 0000000000000074 T _mesa_SubpixelPrecisionBiasNV_no_error
00000000002d6500 00000000000000ec t _mesa_SubpixelPrecisionBiasNV
00000000002d65f0 00000000000000d8 T _mesa_ViewportSwizzleNV_no_error
00000000002d66d0 00000000000001bc T _mesa_ViewportSwizzleNV
00000000002d6890 00000000000000cc t matmul4
00000000002d6960 00000000000000c4 t matmul34
00000000002d6a30 0000000000000734 t invert_matrix_general
00000000002d7170 000000000000008c t invert_matrix_2d_no_rot
00000000002d7200 00000000000000ac t invert_matrix_3d_no_rot
00000000002d72b0 0000000000000028 t invert_matrix_identity
00000000002d72e0 0000000000000464 t invert_matrix_3d
00000000002d7750 000000000000003c t _math_matrix_mul_matrix
00000000002d7790 0000000000000024 t _math_matrix_mul_floats
00000000002d77c0 000000000000023c t _math_matrix_rotate
00000000002d7a00 00000000000000a0 t _math_matrix_frustum
00000000002d7aa0 00000000000000b8 t _math_matrix_ortho
00000000002d7b60 00000000000000b0 t _math_matrix_scale
00000000002d7c10 00000000000000a4 t _math_matrix_translate
00000000002d7cc0 000000000000003c t _math_matrix_set_identity
00000000002d7d00 0000000000000590 t _math_matrix_analyse
00000000002d8290 0000000000000014 t _math_matrix_is_length_preserving
00000000002d82b0 0000000000000010 t _math_matrix_is_dirty
00000000002d82c0 000000000000003c t _math_matrix_copy
00000000002d8300 0000000000000020 t _math_matrix_loadf
00000000002d8320 000000000000007c t _math_matrix_ctr
00000000002d83a0 0000000000000034 t _math_matrix_dtr
00000000002d83e0 0000000000000084 t _math_transposef
00000000002d8470 000000000000009c t _math_transposefd
00000000002d8510 00000000000000b0 t _mesa_transform_vector
00000000002d85c0 0000000000000010 t _vbo_install_exec_vtxfmt
00000000002d85d0 0000000000000018 t vbo_exec_update_eval_maps
00000000002d85f0 0000000000000234 t _vbo_CreateContext
00000000002d8830 000000000000008c t _vbo_DestroyContext
00000000002d88c0 0000000000000030 t _vbo_current_attrib
00000000002d88f0 0000000000000140 t vbo_exec_wrap_buffers
00000000002d8a30 0000000000000070 t vbo_exec_vtx_wrap
00000000002d8aa0 0000000000000204 t vbo_exec_End
00000000002d8cb0 0000000000000278 t vbo_exec_copy_to_current
00000000002d8f30 0000000000000568 t vbo_exec_wrap_upgrade_vertex
00000000002d94a0 00000000000000b0 t vbo_exec_fixup_vertex
00000000002d9550 00000000000001b4 t vbo_exec_TexCoordP4uiv
00000000002d9710 0000000000000184 t vbo_exec_TexCoordP4ui
00000000002d98a0 000000000000016c t vbo_exec_TexCoordP3uiv
00000000002d9a10 000000000000016c t vbo_exec_TexCoordP3ui
00000000002d9b80 0000000000000148 t vbo_exec_TexCoordP2uiv
00000000002d9cd0 0000000000000150 t vbo_exec_TexCoordP2ui
00000000002d9e20 0000000000000124 t vbo_exec_TexCoordP1uiv
00000000002d9f50 0000000000000118 t vbo_exec_TexCoordP1ui
00000000002da070 0000000000000094 t vbo_exec_Indexfv
00000000002da110 000000000000008c t vbo_exec_Indexf
00000000002da1a0 0000000000000094 t vbo_exec_EdgeFlag
00000000002da240 00000000000007f0 t vbo_exec_Materialfv
00000000002daa30 000000000000009c t vbo_exec_TexCoord4fv
00000000002daad0 00000000000000a8 t vbo_exec_TexCoord4f
00000000002dab80 000000000000009c t vbo_exec_TexCoord3fv
00000000002dac20 00000000000000a0 t vbo_exec_TexCoord3f
00000000002dacc0 0000000000000094 t vbo_exec_TexCoord2fv
00000000002dad60 0000000000000094 t vbo_exec_TexCoord2f
00000000002dae00 0000000000000094 t vbo_exec_TexCoord1fv
00000000002daea0 000000000000008c t vbo_exec_TexCoord1f
00000000002daf30 000000000000009c t vbo_exec_SecondaryColor3fvEXT
00000000002dafd0 00000000000000a0 t vbo_exec_SecondaryColor3fEXT
00000000002db070 000000000000009c t vbo_exec_Normal3fv
00000000002db110 00000000000000a0 t vbo_exec_Normal3f
00000000002db1b0 0000000000000094 t vbo_exec_FogCoordfvEXT
00000000002db250 000000000000008c t vbo_exec_FogCoordfEXT
00000000002db2e0 000000000000009c t vbo_exec_Color4fv
00000000002db380 00000000000000a8 t vbo_exec_Color4f
00000000002db430 000000000000009c t vbo_exec_Color3fv
00000000002db4d0 00000000000000a0 t vbo_exec_Color3f
00000000002db570 00000000000001cc t vbo_exec_MultiTexCoordP4uiv
00000000002db740 000000000000019c t vbo_exec_MultiTexCoordP4ui
00000000002db8e0 0000000000000184 t vbo_exec_MultiTexCoordP3uiv
00000000002dba70 0000000000000184 t vbo_exec_MultiTexCoordP3ui
00000000002dbc00 0000000000000160 t vbo_exec_MultiTexCoordP2uiv
00000000002dbd60 0000000000000168 t vbo_exec_MultiTexCoordP2ui
00000000002dbed0 000000000000013c t vbo_exec_MultiTexCoordP1uiv
00000000002dc010 000000000000012c t vbo_exec_MultiTexCoordP1ui
00000000002dc140 00000000000000b4 t vbo_exec_MultiTexCoord4fv
00000000002dc200 00000000000000c4 t vbo_exec_MultiTexCoord4f
00000000002dc2d0 00000000000000b4 t vbo_exec_MultiTexCoord3fv
00000000002dc390 00000000000000bc t vbo_exec_MultiTexCoord3f
00000000002dc450 00000000000000ac t vbo_exec_MultiTexCoord2fv
00000000002dc500 00000000000000b0 t vbo_exec_MultiTexCoord2f
00000000002dc5b0 00000000000000ac t vbo_exec_MultiTexCoord1fv
00000000002dc660 00000000000000a8 t vbo_exec_MultiTexCoord1f
00000000002dc710 00000000000000f0 T _es_VertexAttrib4fv
00000000002dc800 0000000000000130 t vbo_exec_EvalCoord2f
00000000002dc930 0000000000000070 t vbo_exec_EvalPoint2
00000000002dc9a0 0000000000000008 t vbo_exec_EvalCoord2fv
00000000002dc9b0 00000000000000f0 t vbo_exec_EvalCoord1f
00000000002dcaa0 000000000000004c t vbo_exec_EvalPoint1
00000000002dcaf0 0000000000000008 t vbo_exec_EvalCoord1fv
00000000002dcb00 00000000000001d4 t vbo_exec_VertexAttribL1ui64vARB
00000000002dcce0 00000000000001d0 t vbo_exec_VertexAttribL1ui64ARB
00000000002dceb0 00000000000001ac t vbo_exec_VertexAttribL4dv
00000000002dd060 00000000000001bc t vbo_exec_VertexAttribL3dv
00000000002dd220 00000000000001cc t vbo_exec_VertexAttribL2dv
00000000002dd3f0 00000000000001d8 t vbo_exec_VertexAttribL1dv
00000000002dd5d0 00000000000001dc t vbo_exec_VertexAttribL4d
00000000002dd7b0 00000000000001d8 t vbo_exec_VertexAttribL3d
00000000002dd990 00000000000001d4 t vbo_exec_VertexAttribL2d
00000000002ddb70 00000000000001dc t vbo_exec_VertexAttribL1d
00000000002ddd50 000000000000022c t vbo_exec_VertexP4uiv
00000000002ddf80 00000000000001fc t vbo_exec_VertexP4ui
00000000002de180 0000000000000230 t vbo_exec_VertexP3uiv
00000000002de3b0 0000000000000210 t vbo_exec_VertexP3ui
00000000002de5c0 0000000000000230 t vbo_exec_VertexP2uiv
00000000002de7f0 00000000000001e4 t vbo_exec_VertexP2ui
00000000002de9e0 00000000000001c4 t vbo_exec_VertexAttribI4uiv
00000000002debb0 00000000000001cc t vbo_exec_VertexAttribI3uiv
00000000002ded80 00000000000001d0 t vbo_exec_VertexAttribI2uiv
00000000002def50 00000000000001cc t vbo_exec_VertexAttribI4ui
00000000002df120 00000000000001cc t vbo_exec_VertexAttribI3ui
00000000002df2f0 00000000000001d4 t vbo_exec_VertexAttribI2ui
00000000002df4d0 00000000000001c4 t vbo_exec_VertexAttribI1ui
00000000002df6a0 00000000000001c4 t vbo_exec_VertexAttribI4iv
00000000002df870 00000000000001cc t vbo_exec_VertexAttribI3iv
00000000002dfa40 00000000000001d0 t vbo_exec_VertexAttribI2iv
00000000002dfc10 00000000000001cc t vbo_exec_VertexAttribI4i
00000000002dfde0 00000000000001cc t vbo_exec_VertexAttribI3i
00000000002dffb0 00000000000001d4 t vbo_exec_VertexAttribI2i
00000000002e0190 00000000000001c4 t vbo_exec_VertexAttribI1i
00000000002e0360 000000000000017c t vbo_exec_VertexAttrib4fvNV
00000000002e04e0 0000000000000194 t vbo_exec_VertexAttrib4fNV
00000000002e0680 000000000000018c t vbo_exec_VertexAttrib3fvNV
00000000002e0810 00000000000001a8 t vbo_exec_VertexAttrib3fNV
00000000002e09c0 0000000000000190 t vbo_exec_VertexAttrib2fvNV
00000000002e0b50 000000000000019c t vbo_exec_VertexAttrib2fNV
00000000002e0cf0 000000000000019c t vbo_exec_VertexAttrib1fvNV
00000000002e0e90 0000000000000198 t vbo_exec_VertexAttrib1fNV
00000000002e1030 00000000000001ac t vbo_exec_VertexAttrib4fvARB
00000000002e11e0 00000000000001dc t vbo_exec_VertexAttrib4fARB
00000000002e13c0 00000000000001bc t vbo_exec_VertexAttrib3fvARB
00000000002e1580 00000000000001d8 t vbo_exec_VertexAttrib3fARB
00000000002e1760 00000000000001c4 t vbo_exec_VertexAttrib2fvARB
00000000002e1930 00000000000001d0 t vbo_exec_VertexAttrib2fARB
00000000002e1b00 00000000000001d0 t vbo_exec_VertexAttrib1fvARB
00000000002e1cd0 00000000000001cc t vbo_exec_VertexAttrib1fARB
00000000002e1ea0 00000000000000f4 t vbo_exec_Vertex4fv
00000000002e1fa0 00000000000000f4 t vbo_exec_Vertex4f
00000000002e20a0 0000000000000104 t vbo_exec_Vertex3fv
00000000002e21b0 0000000000000114 t vbo_exec_Vertex3f
00000000002e22d0 0000000000000110 t vbo_exec_Vertex2fv
00000000002e23e0 0000000000000114 t vbo_exec_Vertex2f
00000000002e2500 000000000000017c t r11g11b10f_to_float3
00000000002e2680 00000000000000c8 t vbo_exec_FlushVertices_internal
00000000002e2750 0000000000000158 t vbo_exec_Begin
00000000002e28b0 0000000000000058 t vbo_exec_PrimitiveRestartNV
00000000002e2910 00000000000000e0 T _es_VertexAttrib4f
00000000002e29f0 00000000000000d0 T _es_VertexAttrib1f
00000000002e2ac0 00000000000000d4 T _es_VertexAttrib2f
00000000002e2ba0 00000000000000e0 T _es_VertexAttrib3f
00000000002e2c80 00000000000000dc T _es_VertexAttrib1fv
00000000002e2d60 00000000000000dc T _es_VertexAttrib2fv
00000000002e2e40 00000000000000f0 T _es_VertexAttrib3fv
00000000002e2f30 0000000000000300 t vbo_exec_NormalP3ui
00000000002e3230 0000000000000300 t vbo_exec_SecondaryColorP3ui
00000000002e3530 0000000000000300 t vbo_exec_ColorP3ui
00000000002e3830 000000000000031c t vbo_exec_ColorP3uiv
00000000002e3b50 000000000000031c t vbo_exec_SecondaryColorP3uiv
00000000002e3e70 000000000000031c t vbo_exec_NormalP3uiv
00000000002e4190 000000000000038c t vbo_exec_ColorP4ui
00000000002e4520 00000000000003b4 t vbo_exec_ColorP4uiv
00000000002e48e0 00000000000009c0 t vbo_exec_VertexAttribP4ui
00000000002e52a0 0000000000000a68 t vbo_exec_VertexAttribP4uiv
00000000002e5d10 00000000000007bc t vbo_exec_VertexAttribP1ui
00000000002e64d0 0000000000000860 t vbo_exec_VertexAttribP1uiv
00000000002e6d30 000000000000093c t vbo_exec_VertexAttribP2ui
00000000002e7670 00000000000009b0 t vbo_exec_VertexAttribP2uiv
00000000002e8020 0000000000000a58 t vbo_exec_VertexAttribP3ui
00000000002e8a80 0000000000000ae8 t vbo_exec_VertexAttribP3uiv
00000000002e9570 00000000000006a8 t vbo_exec_vtx_init
00000000002e9c20 0000000000000080 t vbo_exec_vtx_destroy
00000000002e9ca0 0000000000000024 t vbo_exec_FlushVertices
00000000002e9cd0 00000000000000a8 t _es_Color4f
00000000002e9d80 00000000000000a0 t _es_Normal3f
00000000002e9e20 00000000000000c4 t _es_MultiTexCoord4f
00000000002e9ef0 0000000000000004 t _es_Materialfv
00000000002e9f00 0000000000000024 t _es_Materialf
00000000002e9f30 0000000000000050 t vbo_exec_init
00000000002e9f80 0000000000000010 t vbo_exec_destroy
00000000002e9f90 0000000000000050 t vbo_try_prim_conversion
00000000002e9fe0 0000000000000148 t vbo_merge_draws
00000000002ea130 000000000000024c t vbo_copy_vertices
00000000002ea380 00000000000000ac t vbo_exec_vtx_unmap
00000000002ea430 00000000000001a0 t vbo_exec_vtx_map
00000000002ea5d0 00000000000004b8 t vbo_exec_vtx_flush
00000000002eaa90 0000000000000300 t vbo_exec_eval_update
00000000002ead90 00000000000001b0 t vbo_exec_do_EvalCoord1f
00000000002eaf40 000000000000035c t vbo_exec_do_EvalCoord2f
00000000002eb2a0 0000000000000004 t _mesa_noop_Materialfv
00000000002eb2b0 0000000000000004 t _mesa_noop_EvalCoord1f
00000000002eb2c0 0000000000000004 t _mesa_noop_EvalCoord1fv
00000000002eb2d0 0000000000000004 t _mesa_noop_EvalCoord2f
00000000002eb2e0 0000000000000004 t _mesa_noop_EvalPoint1
00000000002eb2f0 0000000000000004 t _mesa_noop_EvalPoint2
00000000002eb300 0000000000000004 t _mesa_noop_Begin
00000000002eb310 0000000000000004 t _mesa_noop_End
00000000002eb320 0000000000000004 t _mesa_noop_Vertex3f
00000000002eb330 0000000000000004 t _mesa_noop_Vertex4f
00000000002eb340 0000000000000004 t _mesa_noop_EdgeFlag
00000000002eb350 0000000000000004 t _mesa_noop_MultiTexCoord1f
00000000002eb360 0000000000000004 t _mesa_noop_MultiTexCoord1fv
00000000002eb370 0000000000000004 t _mesa_noop_MultiTexCoord2f
00000000002eb380 0000000000000004 t _mesa_noop_MultiTexCoord3f
00000000002eb390 0000000000000004 t _mesa_noop_MultiTexCoord4f
00000000002eb3a0 0000000000000038 t _mesa_noop_VertexAttribL1ui64vARB
00000000002eb3e0 0000000000000038 t _mesa_noop_VertexAttribL1ui64ARB
00000000002eb420 0000000000000038 t _mesa_noop_VertexAttribL4dv
00000000002eb460 0000000000000038 t _mesa_noop_VertexAttribL3dv
00000000002eb4a0 0000000000000038 t _mesa_noop_VertexAttribL2dv
00000000002eb4e0 0000000000000038 t _mesa_noop_VertexAttribL1dv
00000000002eb520 0000000000000038 t _mesa_noop_VertexAttribL4d
00000000002eb560 0000000000000038 t _mesa_noop_VertexAttribL3d
00000000002eb5a0 0000000000000038 t _mesa_noop_VertexAttribL2d
00000000002eb5e0 0000000000000038 t _mesa_noop_VertexAttribL1d
00000000002eb620 0000000000000070 t _mesa_noop_VertexAttribP4uiv
00000000002eb690 0000000000000070 t _mesa_noop_VertexAttribP4ui
00000000002eb700 000000000000004c t _mesa_noop_SecondaryColorP3uiv
00000000002eb750 000000000000004c t _mesa_noop_SecondaryColorP3ui
00000000002eb7a0 000000000000004c t _mesa_noop_ColorP4uiv
00000000002eb7f0 000000000000004c t _mesa_noop_ColorP4ui
00000000002eb840 000000000000004c t _mesa_noop_ColorP3uiv
00000000002eb890 000000000000004c t _mesa_noop_ColorP3ui
00000000002eb8e0 000000000000004c t _mesa_noop_NormalP3uiv
00000000002eb930 000000000000004c t _mesa_noop_NormalP3ui
00000000002eb980 000000000000004c t _mesa_noop_MultiTexCoordP4uiv
00000000002eb9d0 000000000000004c t _mesa_noop_MultiTexCoordP4ui
00000000002eba20 000000000000004c t _mesa_noop_MultiTexCoordP3uiv
00000000002eba70 000000000000004c t _mesa_noop_MultiTexCoordP3ui
00000000002ebac0 000000000000004c t _mesa_noop_MultiTexCoordP2uiv
00000000002ebb10 000000000000004c t _mesa_noop_MultiTexCoordP2ui
00000000002ebb60 000000000000004c t _mesa_noop_MultiTexCoordP1uiv
00000000002ebbb0 000000000000004c t _mesa_noop_MultiTexCoordP1ui
00000000002ebc00 000000000000004c t _mesa_noop_TexCoordP4uiv
00000000002ebc50 000000000000004c t _mesa_noop_TexCoordP4ui
00000000002ebca0 000000000000004c t _mesa_noop_TexCoordP3uiv
00000000002ebcf0 000000000000004c t _mesa_noop_TexCoordP3ui
00000000002ebd40 000000000000004c t _mesa_noop_TexCoordP2uiv
00000000002ebd90 000000000000004c t _mesa_noop_TexCoordP2ui
00000000002ebde0 000000000000004c t _mesa_noop_TexCoordP1uiv
00000000002ebe30 000000000000004c t _mesa_noop_TexCoordP1ui
00000000002ebe80 000000000000004c t _mesa_noop_VertexP4uiv
00000000002ebed0 000000000000004c t _mesa_noop_VertexP4ui
00000000002ebf20 000000000000004c t _mesa_noop_VertexP3uiv
00000000002ebf70 000000000000004c t _mesa_noop_VertexP3ui
00000000002ebfc0 000000000000004c t _mesa_noop_VertexP2uiv
00000000002ec010 000000000000004c t _mesa_noop_VertexP2ui
00000000002ec060 0000000000000038 t _mesa_noop_VertexAttribI4uiv
00000000002ec0a0 0000000000000038 t _mesa_noop_VertexAttribI3uiv
00000000002ec0e0 0000000000000038 t _mesa_noop_VertexAttribI2uiv
00000000002ec120 0000000000000038 t _mesa_noop_VertexAttribI4ui
00000000002ec160 0000000000000038 t _mesa_noop_VertexAttribI3ui
00000000002ec1a0 0000000000000038 t _mesa_noop_VertexAttribI2ui
00000000002ec1e0 0000000000000038 t _mesa_noop_VertexAttribI1ui
00000000002ec220 0000000000000038 t _mesa_noop_VertexAttribI4iv
00000000002ec260 0000000000000038 t _mesa_noop_VertexAttribI3iv
00000000002ec2a0 0000000000000038 t _mesa_noop_VertexAttribI2iv
00000000002ec2e0 0000000000000038 t _mesa_noop_VertexAttribI4i
00000000002ec320 0000000000000038 t _mesa_noop_VertexAttribI3i
00000000002ec360 0000000000000038 t _mesa_noop_VertexAttribI2i
00000000002ec3a0 0000000000000038 t _mesa_noop_VertexAttribI1i
00000000002ec3e0 0000000000000038 t _mesa_noop_VertexAttrib4fvARB
00000000002ec420 0000000000000038 t _mesa_noop_VertexAttrib4fARB
00000000002ec460 0000000000000038 t _mesa_noop_VertexAttrib3fvARB
00000000002ec4a0 0000000000000038 t _mesa_noop_VertexAttrib3fARB
00000000002ec4e0 0000000000000038 t _mesa_noop_VertexAttrib2fvARB
00000000002ec520 0000000000000038 t _mesa_noop_VertexAttrib2fARB
00000000002ec560 0000000000000038 t _mesa_noop_VertexAttrib1fvARB
00000000002ec5a0 0000000000000038 t _mesa_noop_VertexAttrib1fARB
00000000002ec5e0 0000000000000004 t _mesa_noop_VertexAttrib4fNV
00000000002ec5f0 0000000000000004 t _mesa_noop_VertexAttrib3fNV
00000000002ec600 0000000000000004 t _mesa_noop_VertexAttrib2fNV
00000000002ec610 0000000000000004 t _mesa_noop_VertexAttrib4fvNV
00000000002ec620 0000000000000004 t _mesa_noop_Color4f
00000000002ec630 0000000000000004 t _mesa_noop_TexCoord3f
00000000002ec640 0000000000000004 t _mesa_noop_Vertex2f
00000000002ec650 0000000000000004 t _mesa_noop_Vertex4fv
00000000002ec660 0000000000000004 t _mesa_noop_TexCoord1f
00000000002ec670 0000000000000004 t _mesa_noop_TexCoord4f
00000000002ec680 0000000000000004 t _mesa_noop_Normal3f
00000000002ec690 0000000000000004 t _mesa_noop_SecondaryColor3fEXT
00000000002ec6a0 0000000000000004 t _mesa_noop_Color3f
00000000002ec6b0 0000000000000004 t _mesa_noop_MultiTexCoord3fv
00000000002ec6c0 0000000000000004 t _mesa_noop_MultiTexCoord4fv
00000000002ec6d0 0000000000000004 t _mesa_noop_VertexAttrib1fNV
00000000002ec6e0 0000000000000004 t _mesa_noop_VertexAttrib1fvNV
00000000002ec6f0 0000000000000004 t _mesa_noop_VertexAttrib2fvNV
00000000002ec700 0000000000000004 t _mesa_noop_MultiTexCoord2fv
00000000002ec710 0000000000000004 t _mesa_noop_TexCoord2f
00000000002ec720 0000000000000004 t _mesa_noop_VertexAttrib3fvNV
00000000002ec730 0000000000000004 t _mesa_noop_EvalCoord2fv
00000000002ec740 0000000000000004 t _mesa_noop_ArrayElement
00000000002ec750 0000000000000004 t _mesa_noop_Color4fv
00000000002ec760 0000000000000004 t _mesa_noop_Indexfv
00000000002ec770 0000000000000004 t _mesa_noop_SecondaryColor3fvEXT
00000000002ec780 0000000000000004 t _mesa_noop_Indexf
00000000002ec790 0000000000000004 t _mesa_noop_TexCoord1fv
00000000002ec7a0 0000000000000004 t _mesa_noop_TexCoord4fv
00000000002ec7b0 0000000000000004 t _mesa_noop_Normal3fv
00000000002ec7c0 0000000000000004 t _mesa_noop_FogCoordfEXT
00000000002ec7d0 0000000000000004 t _mesa_noop_TexCoord3fv
00000000002ec7e0 0000000000000004 t _mesa_noop_Color3fv
00000000002ec7f0 0000000000000004 t _mesa_noop_FogCoordfvEXT
00000000002ec800 0000000000000004 t _mesa_noop_TexCoord2fv
00000000002ec810 0000000000000004 t _mesa_noop_Vertex2fv
00000000002ec820 0000000000000004 t _mesa_noop_Vertex3fv
00000000002ec830 0000000000000004 t _mesa_noop_PrimitiveRestartNV
00000000002ec840 000000000000017c t r11g11b10f_to_float3
00000000002ec9c0 00000000000000bc t _mesa_noop_VertexAttribP3uiv
00000000002eca80 00000000000000bc t _mesa_noop_VertexAttribP3ui
00000000002ecb40 00000000000000bc t _mesa_noop_VertexAttribP2uiv
00000000002ecc00 00000000000000bc t _mesa_noop_VertexAttribP2ui
00000000002eccc0 00000000000000bc t _mesa_noop_VertexAttribP1uiv
00000000002ecd80 00000000000000bc t _mesa_noop_VertexAttribP1ui
00000000002ece40 0000000000000570 t _mesa_noop_vtxfmt_init
00000000002ed3b0 0000000000000018 t _mesa_using_noop_vtxfmt
00000000002ed3d0 0000000000000068 t reset_counters
00000000002ed440 0000000000000094 t _save_OBE_MultiDrawElements
00000000002ed4e0 00000000000000bc t _save_OBE_MultiDrawElementsBaseVertex
00000000002ed5a0 000000000000002c t _save_Begin
00000000002ed5d0 0000000000000084 t vbo_destroy_vertex_list
00000000002ed660 00000000000000f0 t alloc_vertex_store
00000000002ed750 00000000000000f4 t vbo_print_vertex_list
00000000002ed850 000000000000013c t copy_to_current
00000000002ed990 000000000000017c t r11g11b10f_to_float3
00000000002edb10 0000000000000074 t vbo_save_map_vertex_store
00000000002edb90 0000000000000074 t vbo_save_unmap_vertex_store
00000000002edc10 0000000000000868 t compile_vertex_list
00000000002ee480 0000000000000070 t wrap_buffers
00000000002ee4f0 000000000000049c t fixup_vertex
00000000002ee990 0000000000000314 t _save_SecondaryColorP3uiv
00000000002eecb0 00000000000002f4 t _save_SecondaryColorP3ui
00000000002eefb0 00000000000003b4 t _save_ColorP4uiv
00000000002ef370 0000000000000388 t _save_ColorP4ui
00000000002ef700 0000000000000314 t _save_ColorP3uiv
00000000002efa20 00000000000002f4 t _save_ColorP3ui
00000000002efd20 0000000000000314 t _save_NormalP3uiv
00000000002f0040 00000000000002f4 t _save_NormalP3ui
00000000002f0340 0000000000000164 t _save_TexCoordP4uiv
00000000002f04b0 0000000000000134 t _save_TexCoordP4ui
00000000002f05f0 000000000000013c t _save_TexCoordP3uiv
00000000002f0730 000000000000011c t _save_TexCoordP3ui
00000000002f0850 0000000000000118 t _save_TexCoordP2uiv
00000000002f0970 0000000000000120 t _save_TexCoordP2ui
00000000002f0a90 0000000000000110 t _save_TexCoordP1uiv
00000000002f0ba0 00000000000000f0 t _save_TexCoordP1ui
00000000002f0c90 0000000000000068 t _save_Indexfv
00000000002f0d00 0000000000000070 t _save_Indexf
00000000002f0d70 0000000000000068 t _save_EdgeFlag
00000000002f0de0 000000000000064c t _save_Materialfv
00000000002f1430 0000000000000070 t _save_TexCoord4fv
00000000002f14a0 0000000000000094 t _save_TexCoord4f
00000000002f1540 0000000000000070 t _save_TexCoord3fv
00000000002f15b0 000000000000008c t _save_TexCoord3f
00000000002f1640 0000000000000068 t _save_TexCoord2fv
00000000002f16b0 0000000000000078 t _save_TexCoord2f
00000000002f1730 0000000000000068 t _save_TexCoord1fv
00000000002f17a0 0000000000000070 t _save_TexCoord1f
00000000002f1810 0000000000000070 t _save_SecondaryColor3fvEXT
00000000002f1880 000000000000008c t _save_SecondaryColor3fEXT
00000000002f1910 0000000000000070 t _save_Normal3fv
00000000002f1980 000000000000008c t _save_Normal3f
00000000002f1a10 0000000000000068 t _save_FogCoordfvEXT
00000000002f1a80 0000000000000070 t _save_FogCoordfEXT
00000000002f1af0 0000000000000070 t _save_Color4fv
00000000002f1b60 0000000000000094 t _save_Color4f
00000000002f1c00 0000000000000070 t _save_Color3fv
00000000002f1c70 000000000000008c t _save_Color3f
00000000002f1d00 0000000000000194 t _save_MultiTexCoordP4uiv
00000000002f1ea0 0000000000000164 t _save_MultiTexCoordP4ui
00000000002f2010 000000000000016c t _save_MultiTexCoordP3uiv
00000000002f2180 000000000000014c t _save_MultiTexCoordP3ui
00000000002f22d0 0000000000000148 t _save_MultiTexCoordP2uiv
00000000002f2420 0000000000000130 t _save_MultiTexCoordP2ui
00000000002f2550 0000000000000124 t _save_MultiTexCoordP1uiv
00000000002f2680 00000000000000fc t _save_MultiTexCoordP1ui
00000000002f2780 0000000000000094 t _save_MultiTexCoord4fv
00000000002f2820 00000000000000b0 t _save_MultiTexCoord4f
00000000002f28d0 0000000000000094 t _save_MultiTexCoord3fv
00000000002f2970 00000000000000a8 t _save_MultiTexCoord3f
00000000002f2a20 000000000000008c t _save_MultiTexCoord2fv
00000000002f2ab0 0000000000000094 t _save_MultiTexCoord2f
00000000002f2b50 000000000000008c t _save_MultiTexCoord1fv
00000000002f2be0 000000000000008c t _save_MultiTexCoord1f
00000000002f2c70 0000000000000078 t wrap_filled_vertex
00000000002f2cf0 0000000000000184 t _save_VertexAttribL1ui64vARB
00000000002f2e80 0000000000000178 t _save_VertexAttribL1ui64ARB
00000000002f3000 0000000000000190 t _save_VertexAttribL4dv
00000000002f3190 0000000000000190 t _save_VertexAttribL3dv
00000000002f3320 0000000000000180 t _save_VertexAttribL2dv
00000000002f34a0 0000000000000184 t _save_VertexAttribL1dv
00000000002f3630 00000000000001cc t _save_VertexAttribL4d
00000000002f3800 00000000000001bc t _save_VertexAttribL3d
00000000002f39c0 000000000000019c t _save_VertexAttribL2d
00000000002f3b60 0000000000000184 t _save_VertexAttribL1d
00000000002f3cf0 00000000000009ec t _save_VertexAttribP4uiv
00000000002f46e0 000000000000093c t _save_VertexAttribP4ui
00000000002f5020 00000000000009e0 t _save_VertexAttribP3uiv
00000000002f5a00 0000000000000948 t _save_VertexAttribP3ui
00000000002f6350 0000000000000828 t _save_VertexAttribP2uiv
00000000002f6b80 00000000000007d0 t _save_VertexAttribP2ui
00000000002f7350 0000000000000670 t _save_VertexAttribP1uiv
00000000002f79c0 0000000000000630 t _save_VertexAttribP1ui
00000000002f7ff0 0000000000000228 t _save_VertexP4uiv
00000000002f8220 00000000000001f8 t _save_VertexP4ui
00000000002f8420 0000000000000200 t _save_VertexP3uiv
00000000002f8620 00000000000001e0 t _save_VertexP3ui
00000000002f8800 00000000000001c4 t _save_VertexP2uiv
00000000002f89d0 00000000000001a4 t _save_VertexP2ui
00000000002f8b80 00000000000001b0 t _save_VertexAttribI4uiv
00000000002f8d30 00000000000001a0 t _save_VertexAttribI3uiv
00000000002f8ed0 0000000000000190 t _save_VertexAttribI2uiv
00000000002f9060 00000000000001ac t _save_VertexAttribI4ui
00000000002f9210 0000000000000198 t _save_VertexAttribI3ui
00000000002f93b0 000000000000018c t _save_VertexAttribI2ui
00000000002f9540 0000000000000178 t _save_VertexAttribI1ui
00000000002f96c0 00000000000001b0 t _save_VertexAttribI4iv
00000000002f9870 00000000000001a0 t _save_VertexAttribI3iv
00000000002f9a10 0000000000000190 t _save_VertexAttribI2iv
00000000002f9ba0 00000000000001ac t _save_VertexAttribI4i
00000000002f9d50 0000000000000198 t _save_VertexAttribI3i
00000000002f9ef0 000000000000018c t _save_VertexAttribI2i
00000000002fa080 0000000000000178 t _save_VertexAttribI1i
00000000002fa200 0000000000000114 t _save_VertexAttrib4fvNV
00000000002fa320 000000000000012c t _save_VertexAttrib4fNV
00000000002fa450 0000000000000114 t _save_VertexAttrib3fvNV
00000000002fa570 0000000000000124 t _save_VertexAttrib3fNV
00000000002fa6a0 000000000000010c t _save_VertexAttrib2fvNV
00000000002fa7b0 0000000000000114 t _save_VertexAttrib2fNV
00000000002fa8d0 000000000000010c t _save_VertexAttrib1fvNV
00000000002fa9e0 000000000000012c t _save_VertexAttrib1fNV
00000000002fab10 0000000000000190 t _save_VertexAttrib4fvARB
00000000002faca0 00000000000001cc t _save_VertexAttrib4fARB
00000000002fae70 0000000000000190 t _save_VertexAttrib3fvARB
00000000002fb000 00000000000001bc t _save_VertexAttrib3fARB
00000000002fb1c0 0000000000000180 t _save_VertexAttrib2fvARB
00000000002fb340 000000000000019c t _save_VertexAttrib2fARB
00000000002fb4e0 0000000000000184 t _save_VertexAttrib1fvARB
00000000002fb670 0000000000000184 t _save_VertexAttrib1fARB
00000000002fb800 00000000000000e4 t _save_Vertex4fv
00000000002fb8f0 000000000000010c t _save_Vertex4f
00000000002fba00 00000000000000e4 t _save_Vertex3fv
00000000002fbaf0 0000000000000104 t _save_Vertex3f
00000000002fbc00 00000000000000dc t _save_Vertex2fv
00000000002fbce0 00000000000000ec t _save_Vertex2f
00000000002fbdd0 0000000000000128 t dlist_fallback
00000000002fbf00 0000000000000054 t _save_EvalPoint2
00000000002fbf60 0000000000000044 t _save_EvalPoint1
00000000002fbfb0 0000000000000044 t _save_EvalCoord2fv
00000000002fc000 0000000000000054 t _save_EvalCoord2f
00000000002fc060 0000000000000044 t _save_EvalCoord1fv
00000000002fc0b0 000000000000004c t _save_EvalCoord1f
00000000002fc100 000000000000005c t _save_CallLists
00000000002fc160 0000000000000044 t _save_CallList
00000000002fc1b0 00000000000000b0 t _save_End
00000000002fc260 00000000000000a4 t vbo_save_NotifyBegin
00000000002fc310 00000000000000bc t _save_OBE_Rectf
00000000002fc3d0 0000000000000318 t _save_OBE_DrawElementsBaseVertex
00000000002fc6f0 0000000000000008 t _save_OBE_DrawElements
00000000002fc700 0000000000000160 t _save_OBE_DrawRangeElements
00000000002fc860 0000000000000144 t _save_OBE_DrawArrays
00000000002fc9b0 000000000000010c t _save_OBE_MultiDrawArrays
00000000002fcac0 00000000000000a0 t _save_PrimitiveRestartNV
00000000002fcb60 0000000000000098 t vbo_initialize_save_dispatch
00000000002fcc00 00000000000000bc t vbo_save_SaveFlushVertices
00000000002fccc0 00000000000000dc t vbo_save_NewList
00000000002fcda0 0000000000000098 t vbo_save_EndList
00000000002fce40 0000000000000024 t vbo_save_BeginCallList
00000000002fce70 000000000000002c t vbo_save_EndCallList
00000000002fcea0 000000000000064c t vbo_save_api_init
00000000002fd4f0 0000000000000050 t vbo_save_init
00000000002fd540 00000000000000b8 t vbo_save_destroy
00000000002fd600 0000000000000298 t copy_vao
00000000002fd8a0 00000000000002f4 T vbo_save_playback_vertex_list
00000000002fdba0 0000000000000030 t VertexAttrib1fvNV
00000000002fdbd0 0000000000000030 t VertexAttrib2fvNV
00000000002fdc00 0000000000000030 t VertexAttrib3fvNV
00000000002fdc30 0000000000000030 t VertexAttrib4fvNV
00000000002fdc60 0000000000000318 t _vbo_loopback_vertex_list
00000000002fdf80 0000000000000038 t unpack_float_z_X8_UINT_Z24_UNORM
00000000002fdfc0 0000000000000038 t unpack_float_z_Z24_UNORM_X8_UINT
00000000002fe000 0000000000000038 t unpack_float_Z_UNORM16
00000000002fe040 0000000000000030 t unpack_float_Z_UNORM32
00000000002fe070 0000000000000024 t unpack_float_z_Z32X24S8
00000000002fe0a0 0000000000000028 t unpack_uint_z_X8_UINT_Z24_UNORM
00000000002fe0d0 0000000000000028 t unpack_uint_z_Z24_UNORM_X8_UINT
00000000002fe100 0000000000000024 t unpack_uint_Z_UNORM16
00000000002fe130 0000000000000058 t unpack_uint_Z_FLOAT32
00000000002fe190 000000000000005c t unpack_uint_Z_FLOAT32_X24S8
00000000002fe1f0 0000000000000010 t unpack_float_Z_FLOAT32
00000000002fe200 0000000000000014 t unpack_uint_Z_UNORM32
00000000002fe220 000000000000007c t _mesa_unorm_to_unorm.constprop.0
00000000002fe2a0 000000000000252c t _mesa_unpack_rgba_row
00000000003007d0 0000000000001d58 t _mesa_unpack_ubyte_rgba_row
0000000000302530 0000000000000de0 t _mesa_unpack_uint_rgba_row
0000000000303310 00000000000000a0 t _mesa_unpack_float_z_row
00000000003033b0 00000000000000a0 t _mesa_unpack_uint_z_row
0000000000303450 000000000000009c t _mesa_unpack_ubyte_stencil_row
00000000003034f0 0000000000000094 t _mesa_unpack_uint_24_8_depth_stencil_row
0000000000303590 00000000000000b4 t _mesa_unpack_float_32_uint_24_8_depth_stencil_row
0000000000303650 0000000000008cec t _mesa_initialize_exec_table
000000000030c340 0000000000000010 t compar_nr
000000000030c350 0000000000000080 t _mesa_enum_to_string
000000000030c3d0 0000000000000024 t _mesa_lookup_prim_by_nr
000000000030c400 0000000000000184 t _mesa_get_srgb_format_linear
000000000030c590 00000000000000c0 t _mesa_get_intensity_format_red
000000000030c650 0000000000000298 t setup_render_state
000000000030c8f0 0000000000000184 t draw_bitmap_quad
000000000030ca80 0000000000000168 t init_bitmap_state
000000000030cbf0 00000000000001a4 t st_flush_bitmap_cache.part.0
000000000030cda0 0000000000000584 t st_Bitmap
000000000030d330 00000000000004c4 t st_DrawAtlasBitmaps
000000000030d800 0000000000000018 t st_flush_bitmap_cache
000000000030d820 0000000000000018 t st_init_bitmap_functions
000000000030d840 0000000000000084 t st_destroy_bitmap
000000000030d8d0 00000000000000f8 t get_color_fp_variant
000000000030d9d0 0000000000000560 t draw_textured_quad.constprop.0
000000000030df30 00000000000000d8 t pipe_resource_reference
000000000030e010 00000000000003ac t make_drawpix_z_stencil_program_tgsi
000000000030e3c0 0000000000000068 t st_make_passthrough_vertex_shader
000000000030e430 0000000000000e3c t st_CopyPixels
000000000030f270 0000000000001518 t st_DrawPixels
0000000000310790 000000000000001c t st_init_drawpixels_functions
00000000003107b0 00000000000000d8 t st_destroy_drawpix
0000000000310890 0000000000000058 t st_discard_framebuffer
00000000003108f0 0000000000000040 t st_UnmapRenderbuffer
0000000000310930 0000000000000050 t st_new_renderbuffer
0000000000310980 0000000000000038 t st_EvaluateDepthValues
00000000003109c0 0000000000000178 t st_MapRenderbuffer
0000000000310b40 0000000000000070 t st_DrawBufferAllocate
0000000000310bb0 0000000000000070 t st_ReadBuffer
0000000000310c20 00000000000000e4 t st_validate_attachment
0000000000310d10 00000000000001c4 t st_validate_framebuffer
0000000000310ee0 0000000000000018 t st_finish_render_texture
0000000000310f00 00000000000001f4 t st_renderbuffer_delete
0000000000311100 00000000000001f0 t st_new_renderbuffer_fb
00000000003112f0 00000000000004e0 t st_update_renderbuffer_surface
00000000003117d0 000000000000045c t st_renderbuffer_alloc_storage
0000000000311c30 0000000000000124 t st_render_texture
0000000000311d60 0000000000000090 t st_init_fbo_functions
0000000000311df0 0000000000000010 t st_device_reset_callback
0000000000311e00 0000000000000074 t st_get_graphics_reset_status
0000000000311e80 0000000000000048 t st_glFlush
0000000000311ed0 0000000000000044 t st_flush
0000000000311f20 0000000000000080 t st_finish
0000000000311fa0 000000000000002c t st_glFinish
0000000000311fd0 0000000000000038 t st_install_device_reset_callback
0000000000312010 000000000000004c t st_init_flush_functions
0000000000312060 000000000000019c t util_format_linear
0000000000312200 00000000000000dc t guess_base_level_size
00000000003122e0 00000000000000c0 t alpha_to_red
00000000003123a0 0000000000000018 t st_DeleteTextureHandle
00000000003123c0 0000000000000018 t st_MakeTextureHandleResident
00000000003123e0 0000000000000018 t st_DeleteImageHandle
0000000000312400 0000000000000018 t st_MakeImageHandleResident
0000000000312420 0000000000000074 t st_TexParameter
00000000003124a0 0000000000000044 t st_NewImageHandle
00000000003124f0 0000000000000004 t st_DeleteTextureImage
0000000000312500 000000000000000c t st_NewTextureImage
0000000000312510 00000000000000b0 t st_NewTextureObject
00000000003125c0 0000000000000064 t compressed_tex_fallback_allocate.part.0
0000000000312630 0000000000000224 t try_pbo_upload_common
0000000000312860 00000000000000d0 t default_bindings.isra.0
0000000000312930 00000000000000d8 t pipe_resource_reference
0000000000312a10 0000000000000098 t st_DeleteTextureObject
0000000000312ab0 00000000000000a4 t st_FreeTextureImageBuffer
0000000000312b60 000000000000023c t st_TextureView
0000000000312da0 0000000000000104 t prep_teximage
0000000000312eb0 0000000000000240 t st_ClearTexSubImage
00000000003130f0 000000000000015c t gl_target_to_pipe
0000000000313250 000000000000018c t st_TestProxyTexImage
00000000003133e0 0000000000000290 t guess_and_alloc_texture
0000000000313670 0000000000000064 t st_astc_format_fallback
00000000003136e0 00000000000000a4 t st_compressed_format_fallback
0000000000313790 0000000000000324 t st_AllocTextureImageBuffer
0000000000313ac0 0000000000000118 t st_UnmapTextureImage
0000000000313be0 00000000000001a0 t st_MapTextureImage
0000000000313d80 000000000000042c t st_CompressedTexSubImage
00000000003141b0 00000000000000fc t st_CompressedTexImage
00000000003142b0 0000000000000350 t st_texture_storage
0000000000314600 000000000000001c t st_SetTextureStorageForMemoryObject
0000000000314620 000000000000000c t st_AllocTextureStorage
0000000000314630 00000000000000a0 t st_get_blit_mask
00000000003146d0 0000000000000b10 t st_GetTexSubImage
00000000003151e0 0000000000000c08 t st_CopyTexSubImage
0000000000315df0 0000000000001730 t st_TexSubImage
0000000000317520 00000000000000fc t st_TexImage
0000000000317620 000000000000067c t st_finalize_texture
0000000000317ca0 00000000000000e4 t st_NewTextureHandle
0000000000317d90 0000000000000154 t st_init_texture_functions
0000000000317ef0 0000000000000050 t st_query_memory_info
0000000000317f40 000000000000025c t st_invalidate_state
00000000003181a0 0000000000000018 t st_emit_string_marker
00000000003181c0 0000000000000018 t st_set_background_context
00000000003181e0 00000000000001c4 t free_zombie_shaders
00000000003183b0 0000000000000020 t st_get_device_uuid
00000000003183d0 0000000000000020 t st_get_driver_uuid
00000000003183f0 0000000000000058 t st_Enable
0000000000318450 000000000000004c t destroy_framebuffer_attachment_sampler_cb
00000000003184a0 0000000000000008 t destroy_tex_sampler_cb
00000000003184b0 00000000000000c8 t free_zombie_sampler_views
0000000000318580 00000000000001c4 t st_destroy_context_priv
0000000000318750 0000000000000018 t st_invalidate_buffers
0000000000318770 000000000000008c t st_save_zombie_sampler_view
0000000000318800 0000000000000094 t st_save_zombie_shader
00000000003188a0 0000000000000024 t st_context_free_zombie_objects
00000000003188d0 0000000000000b60 t st_create_context
0000000000319430 0000000000000290 t st_destroy_context
00000000003196c0 0000000000000050 t st_debug_message
0000000000319710 000000000000005c t st_debug_init
0000000000319770 000000000000009c t st_update_debug_callback
0000000000319810 0000000000000330 t st_draw_vbo
0000000000319b40 00000000000002a4 t st_indirect_draw_vbo
0000000000319df0 0000000000000018 t st_init_draw_functions
0000000000319e10 0000000000000220 t st_draw_quad
000000000031a030 00000000000000f0 t init_format_extensions
000000000031a120 0000000000000f78 t st_init_limits
000000000031b0a0 00000000000013f0 t st_init_extensions
000000000031c490 0000000000000134 t st_mesa_format_to_pipe_format
000000000031c5d0 0000000000000028 t st_pipe_format_to_mesa_format
000000000031c600 00000000000000bc t st_choose_matching_format
000000000031c6c0 0000000000000278 t st_choose_format
000000000031c940 0000000000000074 t st_choose_renderbuffer_format
000000000031c9c0 00000000000000d4 t st_QuerySamplesForFormat
000000000031caa0 000000000000032c T st_ChooseTextureFormat
000000000031cdd0 00000000000000f0 T st_QueryInternalFormat
000000000031cec0 0000000000000254 t st_translate_color
000000000031d120 00000000000004a8 T st_generate_mipmap
000000000031d5d0 0000000000000074 t get_pbo_conversion
000000000031d650 0000000000000284 t build_conversion
000000000031d8e0 00000000000010e8 t create_fs_tgsi.isra.0
000000000031e9d0 00000000000000a8 t st_pbo_addresses_setup
000000000031ea80 0000000000000120 t st_pbo_addresses_pixelstore
000000000031eba0 0000000000000024 t st_pbo_addresses_invert_y
000000000031ebd0 00000000000002b4 t st_pbo_create_vs
000000000031ee90 0000000000000344 t st_pbo_create_gs
000000000031f1e0 0000000000000344 t st_pbo_draw
000000000031f530 0000000000000064 t st_pbo_get_upload_fs
000000000031f5a0 000000000000007c t st_pbo_get_download_fs
000000000031f620 0000000000000194 t st_init_pbo_helpers
000000000031f7c0 00000000000000d0 t st_destroy_pbo_helpers
000000000031f890 000000000000017c t delete_variant
000000000031fa10 0000000000000164 t st_create_vp_variant
000000000031fb80 0000000000000420 t st_create_fp_variant
000000000031ffa0 0000000000000110 t st_unbind_program.isra.0
00000000003200b0 0000000000000094 t set_affected_state_flags.isra.0
0000000000320150 00000000000000a8 t destroy_program_variants_cb
0000000000320200 00000000000000e0 t destroy_shader_program_variants_cb
00000000003202e0 000000000000018c t st_set_prog_affected_state_flags
0000000000320470 000000000000006c t st_release_variants
00000000003204e0 00000000000000d8 t st_release_program
00000000003205c0 00000000000000cc t st_prepare_vertex_program
0000000000320690 00000000000000e4 t st_translate_stream_output_info
0000000000320780 0000000000000318 t st_translate_vertex_program
0000000000320aa0 00000000000000dc t st_get_vp_variant
0000000000320b80 0000000000000694 t st_translate_fragment_program
0000000000321220 00000000000000d0 t st_get_fp_variant
00000000003212f0 0000000000000480 t st_translate_common_program
0000000000321770 0000000000000200 t st_get_common_variant
0000000000321970 0000000000000064 t st_destroy_program_variants
00000000003219e0 000000000000015c t st_finalize_program
0000000000321b40 000000000000008c t st_window_rectangles_to_blit
0000000000321bd0 00000000000001d0 t st_deserialise_ir_program
0000000000321da0 000000000000013c t st_serialise_ir_program.part.0
0000000000321ee0 0000000000000004 T st_get_program_binary_driver_sha1
0000000000321ef0 00000000000000bc t st_store_ir_in_disk_cache
0000000000321fb0 00000000000000fc t st_load_ir_from_disk_cache
00000000003220b0 0000000000000014 T st_serialise_tgsi_program
00000000003220d0 0000000000000014 T st_serialise_tgsi_program_binary
00000000003220f0 0000000000000008 T st_deserialise_tgsi_program
0000000000322100 0000000000000094 t st_destroy_bound_texture_handles_per_stage
00000000003221a0 0000000000000098 t st_destroy_bound_image_handles_per_stage
0000000000322240 000000000000006c t st_texture_create
00000000003222b0 00000000000001b4 t st_gl_texture_dims_to_pipe_dims
0000000000322470 00000000000000e4 t st_texture_match_image
0000000000322560 0000000000000148 t st_texture_image_map
00000000003226b0 0000000000000050 t st_texture_image_unmap
0000000000322700 000000000000015c t st_texture_image_copy
0000000000322860 00000000000000a4 t st_create_color_map_texture
0000000000322910 000000000000003c t st_destroy_bound_texture_handles
0000000000322950 000000000000003c t st_destroy_bound_image_handles
0000000000322990 0000000000000170 t st_make_bound_samplers_resident
0000000000322b00 0000000000000120 t st_make_bound_images_resident
0000000000322c20 00000000000000a8 t transform_decl
0000000000322cd0 00000000000000d4 t prolog_common
0000000000322db0 00000000000000f0 t prolog_last_vertex_stage
0000000000322ea0 0000000000000320 t prolog_fs
00000000003231c0 0000000000000388 t epilog_fs
0000000000323550 00000000000004f0 t epilog_last_vertex_stage
0000000000323a40 000000000000013c t transform_instr
0000000000323b80 0000000000000144 t st_tgsi_lower_depth_clamp
0000000000323cd0 0000000000000008 t st_tgsi_lower_depth_clamp_fs
0000000000323ce0 00000000000000b8 t emit_samp
0000000000323da0 0000000000000424 t yuv_to_rgb
00000000003241d0 0000000000000a20 t transform_instr
0000000000324bf0 00000000000000b0 t st_tgsi_lower_yuv
0000000000324ca0 0000000000000008 t always_available(_mesa_glsl_parse_state const*)
0000000000324cb0 000000000000003c t compatibility_vs_only(_mesa_glsl_parse_state const*)
0000000000324cf0 0000000000000030 t derivatives_only(_mesa_glsl_parse_state const*)
0000000000324d20 0000000000000010 t gs_only(_mesa_glsl_parse_state const*)
0000000000324d30 000000000000000c t v110(_mesa_glsl_parse_state const*)
0000000000324d40 000000000000002c t v120(_mesa_glsl_parse_state const*)
0000000000324d70 000000000000002c t v130(_mesa_glsl_parse_state const*)
0000000000324da0 0000000000000030 t v130_desktop(_mesa_glsl_parse_state const*)
0000000000324dd0 0000000000000030 t v460_desktop(_mesa_glsl_parse_state const*)
0000000000324e00 000000000000002c t v140_or_es3(_mesa_glsl_parse_state const*)
0000000000324e30 0000000000000008 t texture_rectangle(_mesa_glsl_parse_state const*)
0000000000324e40 0000000000000008 t texture_external(_mesa_glsl_parse_state const*)
0000000000324e50 0000000000000008 t shader_texture_lod(_mesa_glsl_parse_state const*)
0000000000324e60 0000000000000014 t shader_texture_lod_and_rect(_mesa_glsl_parse_state const*)
0000000000324e80 000000000000005c t shader_integer_mix(_mesa_glsl_parse_state const*)
0000000000324ee0 0000000000000008 t gpu_shader4(_mesa_glsl_parse_state const*)
0000000000324ef0 0000000000000024 t gpu_shader4_integer(_mesa_glsl_parse_state const*)
0000000000324f20 0000000000000024 t gpu_shader4_array(_mesa_glsl_parse_state const*)
0000000000324f50 0000000000000030 t gpu_shader4_array_integer(_mesa_glsl_parse_state const*)
0000000000324f80 0000000000000024 t gpu_shader4_rect(_mesa_glsl_parse_state const*)
0000000000324fb0 0000000000000030 t gpu_shader4_rect_integer(_mesa_glsl_parse_state const*)
0000000000324fe0 0000000000000024 t gpu_shader4_tbo(_mesa_glsl_parse_state const*)
0000000000325010 0000000000000030 t gpu_shader4_tbo_integer(_mesa_glsl_parse_state const*)
0000000000325040 0000000000000038 t v130_or_gpu_shader4(_mesa_glsl_parse_state const*)
0000000000325080 000000000000004c t gpu_shader5(_mesa_glsl_parse_state const*)
00000000003250d0 0000000000000038 t gpu_shader5_or_es31(_mesa_glsl_parse_state const*)
0000000000325110 0000000000000038 t texture_multisample(_mesa_glsl_parse_state const*)
0000000000325150 000000000000004c t texture_query_levels(_mesa_glsl_parse_state const*)
00000000003251a0 0000000000000038 t texture_query_lod(_mesa_glsl_parse_state const*)
00000000003251e0 0000000000000008 t texture_texture4(_mesa_glsl_parse_state const*)
00000000003251f0 0000000000000068 t texture_gather_only_or_es31(_mesa_glsl_parse_state const*)
0000000000325260 000000000000003c t derivatives_tex3d(_mesa_glsl_parse_state const*)
00000000003252a0 0000000000000008 t shader_atomic_counter_ops(_mesa_glsl_parse_state const*)
00000000003252b0 0000000000000008 t shader_ballot(_mesa_glsl_parse_state const*)
00000000003252c0 0000000000000008 t supports_arb_fragment_shader_interlock(_mesa_glsl_parse_state const*)
00000000003252d0 0000000000000008 t supports_nv_fragment_shader_interlock(_mesa_glsl_parse_state const*)
00000000003252e0 0000000000000008 t shader_clock(_mesa_glsl_parse_state const*)
00000000003252f0 0000000000000020 t shader_clock_int64(_mesa_glsl_parse_state const*)
0000000000325310 0000000000000008 t shader_trinary_minmax(_mesa_glsl_parse_state const*)
0000000000325320 0000000000000008 t shader_image_load_store_ext(_mesa_glsl_parse_state const*)
0000000000325330 0000000000000008 t shader_image_atomic_add_float(_mesa_glsl_parse_state const*)
0000000000325340 0000000000000038 t shader_image_size(_mesa_glsl_parse_state const*)
0000000000325380 000000000000004c t shader_samples(_mesa_glsl_parse_state const*)
00000000003253d0 0000000000000014 t int64(_mesa_glsl_parse_state const*)
00000000003253f0 0000000000000010 t compute_shader(_mesa_glsl_parse_state const*)
0000000000325400 0000000000000014 t barrier_supported(_mesa_glsl_parse_state const*)
0000000000325420 0000000000000008 t vote(_mesa_glsl_parse_state const*)
0000000000325430 0000000000000014 t integer_functions_supported(_mesa_glsl_parse_state const*)
0000000000325450 0000000000000014 t NV_shader_atomic_float_supported(_mesa_glsl_parse_state const*)
0000000000325470 0000000000000014 t shader_atomic_float_exchange(_mesa_glsl_parse_state const*)
0000000000325490 0000000000000014 t INTEL_shader_atomic_float_minmax_supported(_mesa_glsl_parse_state const*)
00000000003254b0 0000000000000008 t shader_atomic_float_minmax(_mesa_glsl_parse_state const*)
00000000003254c0 0000000000000008 t demote_to_helper_invocation(_mesa_glsl_parse_state const*)
00000000003254d0 0000000000000008 t shader_integer_functions2(_mesa_glsl_parse_state const*)
00000000003254e0 0000000000000024 t is_nir(_mesa_glsl_parse_state const*)
0000000000325510 0000000000000024 t is_not_nir(_mesa_glsl_parse_state const*)
0000000000325540 0000000000000004 W glsl_symbol_table::_ralloc_destructor(void*)
0000000000325550 00000000000000f8 t (anonymous namespace)::builtin_builder::new_sig(glsl_type const*, bool (*)(_mesa_glsl_parse_state const*), int, ...)
0000000000325650 0000000000000044 t shader_image_load_store(_mesa_glsl_parse_state const*)
00000000003256a0 000000000000004c t shader_image_atomic_exchange_float(_mesa_glsl_parse_state const*)
00000000003256f0 0000000000000064 t lod_exists_in_stage(_mesa_glsl_parse_state const*)
0000000000325760 0000000000000044 t texture_multisample_array(_mesa_glsl_parse_state const*)
00000000003257b0 000000000000006c t derivative_control(_mesa_glsl_parse_state const*)
0000000000325820 0000000000000064 t fs_interpolate_at(_mesa_glsl_parse_state const*)
0000000000325890 0000000000000020 t shader_integer_functions2_int64(_mesa_glsl_parse_state const*)
00000000003258b0 00000000000000d4 t (anonymous namespace)::builtin_builder::add_function(char const*, ...) [clone .constprop.0]
0000000000325990 000000000000004c t fp64(_mesa_glsl_parse_state const*)
00000000003259e0 0000000000000044 t compute_shader_supported(_mesa_glsl_parse_state const*)
0000000000325a30 0000000000000044 t shader_atomic_counters(_mesa_glsl_parse_state const*)
0000000000325a80 0000000000000074 t derivatives(_mesa_glsl_parse_state const*)
0000000000325b00 0000000000000044 t shader_bit_encoding(_mesa_glsl_parse_state const*)
0000000000325b50 0000000000000050 t shader_packing_or_es3_or_gpu_shader5(_mesa_glsl_parse_state const*)
0000000000325ba0 0000000000000044 t shader_packing_or_es3(_mesa_glsl_parse_state const*)
0000000000325bf0 0000000000000050 t shader_packing_or_es31_or_gpu_shader5(_mesa_glsl_parse_state const*)
0000000000325c40 0000000000000044 t texture_buffer(_mesa_glsl_parse_state const*)
0000000000325c90 0000000000000038 t texture_external_es3(_mesa_glsl_parse_state const*)
0000000000325cd0 0000000000000044 t texture_gather_or_es31(_mesa_glsl_parse_state const*)
0000000000325d20 0000000000000058 t texture_gather_cube_map_array(_mesa_glsl_parse_state const*)
0000000000325d80 0000000000000050 t gpu_shader5_es(_mesa_glsl_parse_state const*)
0000000000325dd0 0000000000000050 t shader_image_atomic(_mesa_glsl_parse_state const*)
0000000000325e20 000000000000004c t shader_atomic_counter_ops_or_v460_desktop(_mesa_glsl_parse_state const*)
0000000000325e70 000000000000002c t texture_array(_mesa_glsl_parse_state const*)
0000000000325ea0 0000000000000008 t shader_atomic_float_add(_mesa_glsl_parse_state const*)
0000000000325eb0 000000000000005c t buffer_atomics_supported(_mesa_glsl_parse_state const*)
0000000000325f10 0000000000000050 t texture_array_derivs_only(_mesa_glsl_parse_state const*)
0000000000325f60 0000000000000028 t tex3d(_mesa_glsl_parse_state const*)
0000000000325f90 0000000000000060 t int64_fp64(_mesa_glsl_parse_state const*)
0000000000325ff0 0000000000000050 t gpu_shader5_or_OES_texture_cube_map_array(_mesa_glsl_parse_state const*)
0000000000326040 000000000000004c t vote_or_v460_desktop(_mesa_glsl_parse_state const*)
0000000000326090 000000000000004c t texture_cube_map_array(_mesa_glsl_parse_state const*)
00000000003260e0 0000000000000070 t derivatives_texture_cube_map_array(_mesa_glsl_parse_state const*)
0000000000326150 000000000000003c t texture_samples_identical(_mesa_glsl_parse_state const*)
0000000000326190 0000000000000044 t gpu_shader5_or_es31_or_integer_functions(_mesa_glsl_parse_state const*)
00000000003261e0 000000000000004c t texture_samples_identical_array(_mesa_glsl_parse_state const*)
0000000000326230 0000000000000060 t gs_streams(_mesa_glsl_parse_state const*)
0000000000326290 0000000000000030 t gpu_shader4_derivs_only(_mesa_glsl_parse_state const*)
00000000003262c0 000000000000003c t v110_derivatives_only(_mesa_glsl_parse_state const*)
0000000000326300 000000000000003c t v130_or_gpu_shader4_and_tex_shadow_lod(_mesa_glsl_parse_state const*)
0000000000326340 0000000000000048 t gpu_shader4_integer_derivs_only(_mesa_glsl_parse_state const*)
0000000000326390 0000000000000048 t gpu_shader4_array_derivs_only(_mesa_glsl_parse_state const*)
00000000003263e0 0000000000000058 t v130_derivatives_only(_mesa_glsl_parse_state const*)
0000000000326440 000000000000006c t v400_derivatives_only(_mesa_glsl_parse_state const*)
00000000003264b0 0000000000000054 t gpu_shader4_array_integer_derivs_only(_mesa_glsl_parse_state const*)
0000000000326510 0000000000000060 t es31_not_gs5(_mesa_glsl_parse_state const*)
0000000000326570 0000000000000090 t v130_or_gpu_shader4_and_tex_cube_map_array(_mesa_glsl_parse_state const*)
0000000000326600 0000000000000088 t texture_array_lod(_mesa_glsl_parse_state const*)
0000000000326690 000000000000006c t tex3d_lod(_mesa_glsl_parse_state const*)
0000000000326700 000000000000005c t v110_lod(_mesa_glsl_parse_state const*)
0000000000326760 000000000000005c t tex1d_lod(_mesa_glsl_parse_state const*)
00000000003267c0 00000000000000e4 t (anonymous namespace)::builtin_builder::_EndStreamPrimitive(bool (*)(_mesa_glsl_parse_state const*), glsl_type const*) [clone .constprop.0]
00000000003268b0 00000000000000e4 t (anonymous namespace)::builtin_builder::_EmitStreamVertex(bool (*)(_mesa_glsl_parse_state const*), glsl_type const*) [clone .constprop.0]
00000000003269a0 000000000000007c t (anonymous namespace)::builtin_builder::_image_samples_prototype(glsl_type const*, unsigned int, unsigned int)
0000000000326a20 00000000000000a4 t (anonymous namespace)::builtin_builder::_atomic_intrinsic2(bool (*)(_mesa_glsl_parse_state const*), glsl_type const*, ir_intrinsic_id) [clone .constprop.0]
0000000000326ad0 00000000000000b0 t (anonymous namespace)::builtin_builder::_read_invocation_intrinsic(glsl_type const*) [clone .constprop.0]
0000000000326b80 00000000000001dc t (anonymous namespace)::builtin_builder::call(ir_function*, ir_variable*, exec_list) [clone .constprop.0] [clone .isra.0]
0000000000326d60 0000000000000400 t (anonymous namespace)::builtin_builder::add_image_function(char const*, char const*, ir_function_signature* ((anonymous namespace)::builtin_builder::*)(glsl_type const*, unsigned int, unsigned int), unsigned int, unsigned int, ir_intrinsic_id) [clone .constprop.0]
0000000000327160 000000000000046c t (anonymous namespace)::builtin_builder::add_image_functions(bool) [clone .constprop.0]
00000000003275d0 0000000000000090 t (anonymous namespace)::builtin_builder::_memory_barrier(char const*, bool (*)(_mesa_glsl_parse_state const*)) [clone .constprop.0]
0000000000327660 00000000000000b8 t (anonymous namespace)::builtin_builder::_atomic_counter_intrinsic1(bool (*)(_mesa_glsl_parse_state const*), ir_intrinsic_id) [clone .constprop.0]
0000000000327720 00000000000000b0 t (anonymous namespace)::builtin_builder::_image_size_prototype(glsl_type const*, unsigned int, unsigned int)
00000000003277d0 00000000000000cc t (anonymous namespace)::builtin_builder::_atomic_intrinsic3(bool (*)(_mesa_glsl_parse_state const*), glsl_type const*, ir_intrinsic_id) [clone .constprop.0]
00000000003278a0 00000000000000e0 t (anonymous namespace)::builtin_builder::_noise2(glsl_type const*) [clone .constprop.0]
0000000000327980 00000000000000e0 t (anonymous namespace)::builtin_builder::_noise1(glsl_type const*) [clone .constprop.0]
0000000000327a60 00000000000000e0 t (anonymous namespace)::builtin_builder::_noise4(glsl_type const*) [clone .constprop.0]
0000000000327b40 00000000000000e0 t (anonymous namespace)::builtin_builder::_noise3(glsl_type const*) [clone .constprop.0]
0000000000327c20 00000000000000d4 t (anonymous namespace)::builtin_builder::unop(bool (*)(_mesa_glsl_parse_state const*), ir_expression_operation, glsl_type const*, glsl_type const*) [clone .constprop.0]
0000000000327d00 00000000000000cc t (anonymous namespace)::builtin_builder::_interpolateAtCentroid(glsl_type const*) [clone .constprop.0]
0000000000327dd0 00000000000000c8 t (anonymous namespace)::builtin_builder::_doubleBitsToUint64(bool (*)(_mesa_glsl_parse_state const*), glsl_type const*) [clone .constprop.0]
0000000000327ea0 00000000000000c8 t (anonymous namespace)::builtin_builder::_uint64BitsToDouble(bool (*)(_mesa_glsl_parse_state const*), glsl_type const*) [clone .constprop.0]
0000000000327f70 00000000000000c8 t (anonymous namespace)::builtin_builder::_uintBitsToFloat(glsl_type const*) [clone .constprop.0]
0000000000328040 00000000000000c8 t (anonymous namespace)::builtin_builder::_int64BitsToDouble(bool (*)(_mesa_glsl_parse_state const*), glsl_type const*) [clone .constprop.0]
0000000000328110 00000000000000c8 t (anonymous namespace)::builtin_builder::_floatBitsToUint(glsl_type const*) [clone .constprop.0]
00000000003281e0 00000000000000c8 t (anonymous namespace)::builtin_builder::_doubleBitsToInt64(bool (*)(_mesa_glsl_parse_state const*), glsl_type const*) [clone .constprop.0]
00000000003282b0 00000000000000c8 t (anonymous namespace)::builtin_builder::_intBitsToFloat(glsl_type const*) [clone .constprop.0]
0000000000328380 00000000000000c8 t (anonymous namespace)::builtin_builder::_floatBitsToInt(glsl_type const*) [clone .constprop.0]
0000000000328450 00000000000000e8 t (anonymous namespace)::builtin_builder::_degrees(glsl_type const*) [clone .constprop.0]
0000000000328540 00000000000000e8 t (anonymous namespace)::builtin_builder::_radians(glsl_type const*) [clone .constprop.0]
0000000000328630 000000000000011c t (anonymous namespace)::builtin_builder::_textureQueryLevels(bool (*)(_mesa_glsl_parse_state const*), glsl_type const*) [clone .constprop.0]
0000000000328750 00000000000000f4 t (anonymous namespace)::builtin_builder::_all(glsl_type const*) [clone .constprop.0]
0000000000328850 000000000000011c t (anonymous namespace)::builtin_builder::_textureSamples(bool (*)(_mesa_glsl_parse_state const*), glsl_type const*) [clone .constprop.0]
0000000000328970 00000000000000f4 t (anonymous namespace)::builtin_builder::_any(glsl_type const*) [clone .constprop.0]
0000000000328a70 0000000000000138 t (anonymous namespace)::builtin_builder::_shader_clock(bool (*)(_mesa_glsl_parse_state const*), glsl_type const*) [clone .constprop.0]
0000000000328bb0 00000000000000e8 t (anonymous namespace)::builtin_builder::_isnan(bool (*)(_mesa_glsl_parse_state const*), glsl_type const*) [clone .constprop.0]
0000000000328ca0 0000000000000078 t (anonymous namespace)::builtin_builder::matrix_elt(ir_variable*, int, int) [clone .constprop.0]
0000000000328d20 000000000000010c t (anonymous namespace)::builtin_builder::_read_first_invocation(glsl_type const*) [clone .constprop.0]
0000000000328e30 000000000000011c t (anonymous namespace)::builtin_builder::_vote(char const*, bool (*)(_mesa_glsl_parse_state const*)) [clone .constprop.0]
0000000000328f50 00000000000000ec t (anonymous namespace)::builtin_builder::_length(bool (*)(_mesa_glsl_parse_state const*), glsl_type const*) [clone .constprop.0]
0000000000329040 0000000000000120 t (anonymous namespace)::builtin_builder::_atomic_counter_op(char const*, bool (*)(_mesa_glsl_parse_state const*)) [clone .constprop.0]
0000000000329160 00000000000000f4 t (anonymous namespace)::builtin_builder::_tan(glsl_type const*) [clone .constprop.0]
0000000000329260 0000000000000254 t (anonymous namespace)::builtin_builder::asin_expr(ir_variable*, float, float) [clone .constprop.0]
00000000003294c0 00000000000000ec t (anonymous namespace)::builtin_builder::_acos(glsl_type const*) [clone .constprop.0]
00000000003295b0 00000000000000bc t (anonymous namespace)::builtin_builder::_asin(glsl_type const*) [clone .constprop.0]
0000000000329670 0000000000000100 t (anonymous namespace)::builtin_builder::_countTrailingZeros(bool (*)(_mesa_glsl_parse_state const*), glsl_type const*) [clone .constprop.0]
0000000000329770 0000000000000120 t (anonymous namespace)::builtin_builder::_interpolateAtSample(glsl_type const*) [clone .constprop.0]
0000000000329890 0000000000000120 t (anonymous namespace)::builtin_builder::_interpolateAtOffset(glsl_type const*) [clone .constprop.0]
00000000003299b0 0000000000000140 t (anonymous namespace)::builtin_builder::_atomic_op2(char const*, bool (*)(_mesa_glsl_parse_state const*), glsl_type const*) [clone .constprop.0]
0000000000329af0 0000000000000148 t (anonymous namespace)::builtin_builder::_read_invocation(glsl_type const*) [clone .constprop.0]
0000000000329c40 0000000000000104 t (anonymous namespace)::builtin_builder::_fwidthFine(glsl_type const*) [clone .constprop.0]
0000000000329d50 0000000000000104 t (anonymous namespace)::builtin_builder::_fwidthCoarse(glsl_type const*) [clone .constprop.0]
0000000000329e60 0000000000000104 t (anonymous namespace)::builtin_builder::_fwidth(glsl_type const*) [clone .constprop.0]
0000000000329f70 0000000000000118 t (anonymous namespace)::builtin_builder::_determinant_mat2(bool (*)(_mesa_glsl_parse_state const*), glsl_type const*) [clone .constprop.0]
000000000032a090 0000000000000160 t (anonymous namespace)::builtin_builder::_textureSamplesIdentical(bool (*)(_mesa_glsl_parse_state const*), glsl_type const*, glsl_type const*) [clone .constprop.0]
000000000032a1f0 0000000000000160 t (anonymous namespace)::builtin_builder::_textureQueryLod(bool (*)(_mesa_glsl_parse_state const*), glsl_type const*, glsl_type const*) [clone .constprop.0]
000000000032a350 0000000000000164 t (anonymous namespace)::builtin_builder::_isinf(bool (*)(_mesa_glsl_parse_state const*), glsl_type const*) [clone .constprop.0]
000000000032a4c0 0000000000000120 t (anonymous namespace)::builtin_builder::_sinh(glsl_type const*) [clone .constprop.0]
000000000032a5e0 0000000000000168 t (anonymous namespace)::builtin_builder::_atomic_op3(char const*, bool (*)(_mesa_glsl_parse_state const*), glsl_type const*) [clone .constprop.0]
000000000032a750 0000000000000120 t (anonymous namespace)::builtin_builder::_cosh(glsl_type const*) [clone .constprop.0]
000000000032a870 0000000000000178 t (anonymous namespace)::builtin_builder::_atomic_counter_op2(char const*, bool (*)(_mesa_glsl_parse_state const*)) [clone .constprop.0]
000000000032a9f0 0000000000000160 t (anonymous namespace)::builtin_builder::_mix_sel(bool (*)(_mesa_glsl_parse_state const*), glsl_type const*, glsl_type const*) [clone .constprop.0]
000000000032ab50 0000000000000158 t (anonymous namespace)::builtin_builder::_dfrexp(glsl_type const*, glsl_type const*) [clone .constprop.0]
000000000032acb0 0000000000000168 t (anonymous namespace)::builtin_builder::_clamp(bool (*)(_mesa_glsl_parse_state const*), glsl_type const*, glsl_type const*) [clone .constprop.0]
000000000032ae20 0000000000000168 t (anonymous namespace)::builtin_builder::_mix_lrp(bool (*)(_mesa_glsl_parse_state const*), glsl_type const*, glsl_type const*) [clone .constprop.0]
000000000032af90 000000000000015c t (anonymous namespace)::builtin_builder::_fma(bool (*)(_mesa_glsl_parse_state const*), glsl_type const*) [clone .constprop.0]
000000000032b0f0 0000000000000164 t (anonymous namespace)::builtin_builder::_max3(glsl_type const*) [clone .constprop.0]
000000000032b260 0000000000000164 t (anonymous namespace)::builtin_builder::_min3(glsl_type const*) [clone .constprop.0]
000000000032b3d0 0000000000000144 t (anonymous namespace)::builtin_builder::_acosh(glsl_type const*) [clone .constprop.0]
000000000032b520 000000000000015c t (anonymous namespace)::builtin_builder::_normalize(bool (*)(_mesa_glsl_parse_state const*), glsl_type const*) [clone .constprop.0]
000000000032b680 0000000000000174 t (anonymous namespace)::builtin_builder::binop(bool (*)(_mesa_glsl_parse_state const*), ir_expression_operation, glsl_type const*, glsl_type const*, glsl_type const*, bool) [clone .constprop.0]
000000000032b800 0000000000000090 t (anonymous namespace)::builtin_builder::_absoluteDifference(bool (*)(_mesa_glsl_parse_state const*), glsl_type const*) [clone .constprop.0]
000000000032b890 000000000000006c t (anonymous namespace)::builtin_builder::_dot(bool (*)(_mesa_glsl_parse_state const*), glsl_type const*) [clone .constprop.0]
000000000032b900 000000000000016c t (anonymous namespace)::builtin_builder::_atanh(glsl_type const*) [clone .constprop.0]
000000000032ba70 00000000000001ec t (anonymous namespace)::builtin_builder::_transpose(bool (*)(_mesa_glsl_parse_state const*), glsl_type const*) [clone .constprop.0]
000000000032bc60 0000000000000184 t (anonymous namespace)::builtin_builder::_asinh(glsl_type const*) [clone .constprop.0]
000000000032bdf0 00000000000001c0 t (anonymous namespace)::builtin_builder::_uaddCarry(glsl_type const*) [clone .constprop.0]
000000000032bfb0 00000000000001c0 t (anonymous namespace)::builtin_builder::_usubBorrow(glsl_type const*) [clone .constprop.0]
000000000032c170 00000000000001ac t (anonymous namespace)::builtin_builder::_cross(bool (*)(_mesa_glsl_parse_state const*), glsl_type const*) [clone .constprop.0]
000000000032c320 00000000000001b0 t (anonymous namespace)::builtin_builder::_reflect(bool (*)(_mesa_glsl_parse_state const*), glsl_type const*) [clone .constprop.0]
000000000032c4d0 0000000000000204 t (anonymous namespace)::builtin_builder::_matrixCompMult(bool (*)(_mesa_glsl_parse_state const*), glsl_type const*) [clone .constprop.0]
000000000032c6e0 00000000000001dc t (anonymous namespace)::builtin_builder::_modf(bool (*)(_mesa_glsl_parse_state const*), glsl_type const*) [clone .constprop.0]
000000000032c8c0 00000000000001e8 t (anonymous namespace)::builtin_builder::_faceforward(bool (*)(_mesa_glsl_parse_state const*), glsl_type const*) [clone .constprop.0]
000000000032cab0 00000000000001f0 t (anonymous namespace)::builtin_builder::_bitfieldExtract(glsl_type const*) [clone .constprop.0]
000000000032cca0 00000000000001e4 t (anonymous namespace)::builtin_builder::_mid3(glsl_type const*) [clone .constprop.0]
000000000032ce90 0000000000000234 t (anonymous namespace)::builtin_builder::_bitfieldInsert(glsl_type const*) [clone .constprop.0]
000000000032d0d0 0000000000000580 t (anonymous namespace)::builtin_builder::do_atan(ir_builder::ir_factory&, glsl_type const*, ir_variable*, ir_builder::operand) [clone .constprop.0]
000000000032d650 0000000000000110 t (anonymous namespace)::builtin_builder::_atan(glsl_type const*) [clone .constprop.0]
000000000032d760 0000000000000228 t (anonymous namespace)::builtin_builder::_distance(bool (*)(_mesa_glsl_parse_state const*), glsl_type const*) [clone .constprop.0]
000000000032d990 0000000000000274 t (anonymous namespace)::builtin_builder::_atomic_counter_op1(char const*, bool (*)(_mesa_glsl_parse_state const*)) [clone .constprop.0]
000000000032dc10 0000000000000234 t (anonymous namespace)::builtin_builder::_tanh(glsl_type const*) [clone .constprop.0]
000000000032de50 00000000000001d4 t (anonymous namespace)::builtin_builder::_textureSize(bool (*)(_mesa_glsl_parse_state const*), glsl_type const*, glsl_type const*) [clone .constprop.0]
000000000032e030 0000000000000274 t (anonymous namespace)::builtin_builder::_determinant_mat3(bool (*)(_mesa_glsl_parse_state const*), glsl_type const*) [clone .constprop.0]
000000000032e2b0 00000000000003a8 t (anonymous namespace)::builtin_builder::_smoothstep(bool (*)(_mesa_glsl_parse_state const*), glsl_type const*, glsl_type const*) [clone .constprop.0]
000000000032e660 0000000000000470 t (anonymous namespace)::builtin_builder::_mulExtended(glsl_type const*) [clone .constprop.0]
000000000032ead0 00000000000004c8 t (anonymous namespace)::builtin_builder::_refract(bool (*)(_mesa_glsl_parse_state const*), glsl_type const*) [clone .constprop.0]
000000000032efa0 00000000000004e8 t (anonymous namespace)::builtin_builder::_frexp(glsl_type const*, glsl_type const*) [clone .constprop.0]
000000000032f490 000000000000023c t (anonymous namespace)::builtin_builder::_outerProduct(bool (*)(_mesa_glsl_parse_state const*), glsl_type const*) [clone .constprop.0]
000000000032f6d0 00000000000002f8 t (anonymous namespace)::builtin_builder::_inverse_mat2(bool (*)(_mesa_glsl_parse_state const*), glsl_type const*) [clone .constprop.0]
000000000032f9d0 0000000000000748 t (anonymous namespace)::builtin_builder::_atan2(glsl_type const*) [clone .constprop.0]
0000000000330120 0000000000000274 t (anonymous namespace)::builtin_builder::_image_prototype(glsl_type const*, unsigned int, unsigned int)
00000000003303a0 000000000000025c t (anonymous namespace)::builtin_builder::_textureCubeArrayShadow(ir_texture_opcode, bool (*)(_mesa_glsl_parse_state const*), glsl_type const*) [clone .constprop.0]
0000000000330600 00000000000004fc t (anonymous namespace)::builtin_builder::_step(bool (*)(_mesa_glsl_parse_state const*), glsl_type const*, glsl_type const*) [clone .constprop.0]
0000000000330b00 0000000000000e28 t (anonymous namespace)::builtin_builder::create_intrinsics() [clone .constprop.0]
0000000000331930 000000000000031c t (anonymous namespace)::builtin_builder::_texelFetch(bool (*)(_mesa_glsl_parse_state const*), glsl_type const*, glsl_type const*, glsl_type const*, glsl_type const*) [clone .constprop.0]
0000000000331c50 0000000000000a50 t (anonymous namespace)::builtin_builder::_inverse_mat3(bool (*)(_mesa_glsl_parse_state const*), glsl_type const*) [clone .constprop.0]
00000000003326a0 000000000000064c t (anonymous namespace)::builtin_builder::_texture(ir_texture_opcode, bool (*)(_mesa_glsl_parse_state const*), glsl_type const*, glsl_type const*, glsl_type const*, int) [clone .constprop.0]
0000000000332cf0 0000000000001624 t (anonymous namespace)::builtin_builder::_determinant_mat4(bool (*)(_mesa_glsl_parse_state const*), glsl_type const*) [clone .constprop.0]
0000000000334320 00000000000025dc t (anonymous namespace)::builtin_builder::_inverse_mat4(bool (*)(_mesa_glsl_parse_state const*), glsl_type const*) [clone .constprop.0]
0000000000336900 0000000000016530 t _mesa_glsl_builtin_functions_init_or_ref
000000000034ce30 0000000000000078 t _mesa_glsl_builtin_functions_decref
000000000034ceb0 00000000000000a4 t _mesa_glsl_find_builtin_function(_mesa_glsl_parse_state*, char const*, exec_list*)
000000000034cf60 0000000000000094 t _mesa_glsl_has_builtin_function(_mesa_glsl_parse_state*, char const*)
000000000034d000 000000000000000c t _mesa_glsl_get_builtin_function_shader()
000000000034d010 0000000000000064 t _mesa_get_main_function_signature(glsl_symbol_table*)
000000000034d080 00000000000003cc t generate_ir::umul64(void*, bool (*)(_mesa_glsl_parse_state const*))
000000000034d450 00000000000002b8 t generate_ir::sign64(void*, bool (*)(_mesa_glsl_parse_state const*))
000000000034d710 0000000000001494 t generate_ir::udiv64(void*, bool (*)(_mesa_glsl_parse_state const*))
000000000034ebb0 000000000000184c t generate_ir::idiv64(void*, bool (*)(_mesa_glsl_parse_state const*))
0000000000350400 0000000000001570 t generate_ir::umod64(void*, bool (*)(_mesa_glsl_parse_state const*))
0000000000351970 0000000000001940 t generate_ir::imod64(void*, bool (*)(_mesa_glsl_parse_state const*))
00000000003532b0 0000000000000034 t has_AMD_conservative_depth(gl_context const*, gl_api, unsigned char)
00000000003532f0 0000000000000034 t has_AMD_gpu_shader_int64(gl_context const*, gl_api, unsigned char)
0000000000353330 0000000000000034 t has_AMD_shader_stencil_export(gl_context const*, gl_api, unsigned char)
0000000000353370 0000000000000034 t has_AMD_shader_trinary_minmax(gl_context const*, gl_api, unsigned char)
00000000003533b0 0000000000000034 t has_AMD_texture_texture4(gl_context const*, gl_api, unsigned char)
00000000003533f0 0000000000000034 t has_AMD_vertex_shader_layer(gl_context const*, gl_api, unsigned char)
0000000000353430 0000000000000034 t has_AMD_vertex_shader_viewport_index(gl_context const*, gl_api, unsigned char)
0000000000353470 0000000000000034 t has_ANDROID_extension_pack_es31a(gl_context const*, gl_api, unsigned char)
00000000003534b0 0000000000000034 t has_ARB_ES3_1_compatibility(gl_context const*, gl_api, unsigned char)
00000000003534f0 0000000000000034 t has_ARB_ES3_2_compatibility(gl_context const*, gl_api, unsigned char)
0000000000353530 0000000000000034 t has_ARB_arrays_of_arrays(gl_context const*, gl_api, unsigned char)
0000000000353570 0000000000000034 t has_ARB_bindless_texture(gl_context const*, gl_api, unsigned char)
00000000003535b0 0000000000000034 t has_ARB_compatibility(gl_context const*, gl_api, unsigned char)
00000000003535f0 0000000000000034 t has_ARB_compute_shader(gl_context const*, gl_api, unsigned char)
0000000000353630 0000000000000034 t has_ARB_compute_variable_group_size(gl_context const*, gl_api, unsigned char)
0000000000353670 0000000000000034 t has_ARB_conservative_depth(gl_context const*, gl_api, unsigned char)
00000000003536b0 0000000000000034 t has_ARB_cull_distance(gl_context const*, gl_api, unsigned char)
00000000003536f0 0000000000000034 t has_ARB_derivative_control(gl_context const*, gl_api, unsigned char)
0000000000353730 0000000000000034 t has_ARB_draw_buffers(gl_context const*, gl_api, unsigned char)
0000000000353770 0000000000000034 t has_ARB_draw_instanced(gl_context const*, gl_api, unsigned char)
00000000003537b0 0000000000000034 t has_ARB_enhanced_layouts(gl_context const*, gl_api, unsigned char)
00000000003537f0 0000000000000034 t has_ARB_explicit_attrib_location(gl_context const*, gl_api, unsigned char)
0000000000353830 0000000000000034 t has_ARB_explicit_uniform_location(gl_context const*, gl_api, unsigned char)
0000000000353870 0000000000000034 t has_ARB_fragment_coord_conventions(gl_context const*, gl_api, unsigned char)
00000000003538b0 0000000000000034 t has_ARB_fragment_layer_viewport(gl_context const*, gl_api, unsigned char)
00000000003538f0 0000000000000034 t has_ARB_fragment_shader_interlock(gl_context const*, gl_api, unsigned char)
0000000000353930 0000000000000034 t has_ARB_gpu_shader5(gl_context const*, gl_api, unsigned char)
0000000000353970 0000000000000034 t has_ARB_gpu_shader_fp64(gl_context const*, gl_api, unsigned char)
00000000003539b0 0000000000000034 t has_ARB_gpu_shader_int64(gl_context const*, gl_api, unsigned char)
00000000003539f0 0000000000000034 t has_ARB_post_depth_coverage(gl_context const*, gl_api, unsigned char)
0000000000353a30 0000000000000034 t has_ARB_sample_shading(gl_context const*, gl_api, unsigned char)
0000000000353a70 0000000000000034 t has_ARB_separate_shader_objects(gl_context const*, gl_api, unsigned char)
0000000000353ab0 0000000000000034 t has_ARB_shader_atomic_counter_ops(gl_context const*, gl_api, unsigned char)
0000000000353af0 0000000000000034 t has_ARB_shader_atomic_counters(gl_context const*, gl_api, unsigned char)
0000000000353b30 0000000000000034 t has_ARB_shader_ballot(gl_context const*, gl_api, unsigned char)
0000000000353b70 0000000000000034 t has_ARB_shader_bit_encoding(gl_context const*, gl_api, unsigned char)
0000000000353bb0 0000000000000034 t has_ARB_shader_clock(gl_context const*, gl_api, unsigned char)
0000000000353bf0 0000000000000034 t has_ARB_shader_draw_parameters(gl_context const*, gl_api, unsigned char)
0000000000353c30 0000000000000034 t has_ARB_shader_group_vote(gl_context const*, gl_api, unsigned char)
0000000000353c70 0000000000000034 t has_ARB_shader_image_load_store(gl_context const*, gl_api, unsigned char)
0000000000353cb0 0000000000000034 t has_ARB_shader_image_size(gl_context const*, gl_api, unsigned char)
0000000000353cf0 0000000000000034 t has_ARB_shader_precision(gl_context const*, gl_api, unsigned char)
0000000000353d30 0000000000000034 t has_ARB_shader_stencil_export(gl_context const*, gl_api, unsigned char)
0000000000353d70 0000000000000034 t has_ARB_shader_storage_buffer_object(gl_context const*, gl_api, unsigned char)
0000000000353db0 0000000000000034 t has_ARB_shader_subroutine(gl_context const*, gl_api, unsigned char)
0000000000353df0 0000000000000034 t has_ARB_shader_texture_image_samples(gl_context const*, gl_api, unsigned char)
0000000000353e30 0000000000000034 t has_ARB_shader_texture_lod(gl_context const*, gl_api, unsigned char)
0000000000353e70 0000000000000034 t has_ARB_shader_viewport_layer_array(gl_context const*, gl_api, unsigned char)
0000000000353eb0 0000000000000034 t has_ARB_shading_language_420pack(gl_context const*, gl_api, unsigned char)
0000000000353ef0 0000000000000034 t has_ARB_shading_language_include(gl_context const*, gl_api, unsigned char)
0000000000353f30 0000000000000034 t has_ARB_shading_language_packing(gl_context const*, gl_api, unsigned char)
0000000000353f70 0000000000000034 t has_ARB_tessellation_shader(gl_context const*, gl_api, unsigned char)
0000000000353fb0 0000000000000034 t has_ARB_texture_cube_map_array(gl_context const*, gl_api, unsigned char)
0000000000353ff0 0000000000000034 t has_ARB_texture_gather(gl_context const*, gl_api, unsigned char)
0000000000354030 0000000000000034 t has_ARB_texture_multisample(gl_context const*, gl_api, unsigned char)
0000000000354070 0000000000000034 t has_ARB_texture_query_levels(gl_context const*, gl_api, unsigned char)
00000000003540b0 0000000000000034 t has_ARB_texture_query_lod(gl_context const*, gl_api, unsigned char)
00000000003540f0 0000000000000034 t has_ARB_texture_rectangle(gl_context const*, gl_api, unsigned char)
0000000000354130 0000000000000038 t has_ARB_uniform_buffer_object(gl_context const*, gl_api, unsigned char)
0000000000354170 0000000000000038 t has_ARB_vertex_attrib_64bit(gl_context const*, gl_api, unsigned char)
00000000003541b0 0000000000000038 t has_ARB_viewport_array(gl_context const*, gl_api, unsigned char)
00000000003541f0 0000000000000038 t has_EXT_blend_func_extended(gl_context const*, gl_api, unsigned char)
0000000000354230 0000000000000038 t has_EXT_clip_cull_distance(gl_context const*, gl_api, unsigned char)
0000000000354270 0000000000000038 t has_EXT_demote_to_helper_invocation(gl_context const*, gl_api, unsigned char)
00000000003542b0 0000000000000038 t has_EXT_draw_buffers(gl_context const*, gl_api, unsigned char)
00000000003542f0 0000000000000038 t has_EXT_draw_instanced(gl_context const*, gl_api, unsigned char)
0000000000354330 0000000000000038 t has_EXT_frag_depth(gl_context const*, gl_api, unsigned char)
0000000000354370 0000000000000038 t has_EXT_geometry_point_size(gl_context const*, gl_api, unsigned char)
00000000003543b0 0000000000000038 t has_EXT_geometry_shader(gl_context const*, gl_api, unsigned char)
00000000003543f0 0000000000000038 t has_EXT_gpu_shader4(gl_context const*, gl_api, unsigned char)
0000000000354430 0000000000000038 t has_EXT_gpu_shader5(gl_context const*, gl_api, unsigned char)
0000000000354470 0000000000000038 t has_EXT_primitive_bounding_box(gl_context const*, gl_api, unsigned char)
00000000003544b0 0000000000000038 t has_EXT_separate_shader_objects(gl_context const*, gl_api, unsigned char)
00000000003544f0 0000000000000038 t has_EXT_shader_framebuffer_fetch(gl_context const*, gl_api, unsigned char)
0000000000354530 0000000000000038 t has_EXT_shader_framebuffer_fetch_non_coherent(gl_context const*, gl_api, unsigned char)
0000000000354570 0000000000000038 t has_EXT_shader_image_load_formatted(gl_context const*, gl_api, unsigned char)
00000000003545b0 0000000000000038 t has_EXT_shader_image_load_store(gl_context const*, gl_api, unsigned char)
00000000003545f0 0000000000000038 t has_EXT_shader_implicit_conversions(gl_context const*, gl_api, unsigned char)
0000000000354630 0000000000000038 t has_EXT_shader_integer_mix(gl_context const*, gl_api, unsigned char)
0000000000354670 0000000000000038 t has_EXT_shader_io_blocks(gl_context const*, gl_api, unsigned char)
00000000003546b0 0000000000000038 t has_EXT_shader_samples_identical(gl_context const*, gl_api, unsigned char)
00000000003546f0 0000000000000038 t has_EXT_tessellation_point_size(gl_context const*, gl_api, unsigned char)
0000000000354730 0000000000000038 t has_EXT_tessellation_shader(gl_context const*, gl_api, unsigned char)
0000000000354770 0000000000000038 t has_EXT_texture_array(gl_context const*, gl_api, unsigned char)
00000000003547b0 0000000000000038 t has_EXT_texture_buffer(gl_context const*, gl_api, unsigned char)
00000000003547f0 0000000000000038 t has_EXT_texture_cube_map_array(gl_context const*, gl_api, unsigned char)
0000000000354830 0000000000000038 t has_EXT_texture_query_lod(gl_context const*, gl_api, unsigned char)
0000000000354870 0000000000000038 t has_EXT_texture_shadow_lod(gl_context const*, gl_api, unsigned char)
00000000003548b0 0000000000000038 t has_INTEL_conservative_rasterization(gl_context const*, gl_api, unsigned char)
00000000003548f0 0000000000000038 t has_INTEL_shader_atomic_float_minmax(gl_context const*, gl_api, unsigned char)
0000000000354930 0000000000000038 t has_INTEL_shader_integer_functions2(gl_context const*, gl_api, unsigned char)
0000000000354970 0000000000000038 t has_KHR_blend_equation_advanced(gl_context const*, gl_api, unsigned char)
00000000003549b0 0000000000000038 t has_MESA_shader_integer_functions(gl_context const*, gl_api, unsigned char)
00000000003549f0 0000000000000038 t has_NV_compute_shader_derivatives(gl_context const*, gl_api, unsigned char)
0000000000354a30 0000000000000038 t has_NV_fragment_shader_interlock(gl_context const*, gl_api, unsigned char)
0000000000354a70 0000000000000038 t has_NV_image_formats(gl_context const*, gl_api, unsigned char)
0000000000354ab0 0000000000000038 t has_NV_shader_atomic_float(gl_context const*, gl_api, unsigned char)
0000000000354af0 0000000000000038 t has_NV_viewport_array2(gl_context const*, gl_api, unsigned char)
0000000000354b30 0000000000000038 t has_OES_EGL_image_external(gl_context const*, gl_api, unsigned char)
0000000000354b70 0000000000000038 t has_OES_EGL_image_external_essl3(gl_context const*, gl_api, unsigned char)
0000000000354bb0 0000000000000038 t has_OES_geometry_point_size(gl_context const*, gl_api, unsigned char)
0000000000354bf0 0000000000000038 t has_OES_geometry_shader(gl_context const*, gl_api, unsigned char)
0000000000354c30 0000000000000038 t has_OES_gpu_shader5(gl_context const*, gl_api, unsigned char)
0000000000354c70 0000000000000038 t has_OES_primitive_bounding_box(gl_context const*, gl_api, unsigned char)
0000000000354cb0 0000000000000038 t has_OES_sample_variables(gl_context const*, gl_api, unsigned char)
0000000000354cf0 0000000000000038 t has_OES_shader_image_atomic(gl_context const*, gl_api, unsigned char)
0000000000354d30 0000000000000038 t has_OES_shader_io_blocks(gl_context const*, gl_api, unsigned char)
0000000000354d70 0000000000000038 t has_OES_shader_multisample_interpolation(gl_context const*, gl_api, unsigned char)
0000000000354db0 0000000000000038 t has_OES_standard_derivatives(gl_context const*, gl_api, unsigned char)
0000000000354df0 0000000000000038 t has_OES_tessellation_point_size(gl_context const*, gl_api, unsigned char)
0000000000354e30 0000000000000038 t has_OES_tessellation_shader(gl_context const*, gl_api, unsigned char)
0000000000354e70 0000000000000038 t has_OES_texture_3D(gl_context const*, gl_api, unsigned char)
0000000000354eb0 0000000000000038 t has_OES_texture_buffer(gl_context const*, gl_api, unsigned char)
0000000000354ef0 0000000000000038 t has_OES_texture_cube_map_array(gl_context const*, gl_api, unsigned char)
0000000000354f30 0000000000000038 t has_OES_texture_storage_multisample_2d_array(gl_context const*, gl_api, unsigned char)
0000000000354f70 0000000000000038 t has_OES_viewport_array(gl_context const*, gl_api, unsigned char)
0000000000354fb0 000000000000003c T ast_function_definition::print() const
0000000000354ff0 0000000000000050 T ast_case_statement_list::print() const
0000000000355040 0000000000000108 t add_builtin_defines
0000000000355150 00000000000000f4 t _mesa_glsl_msg(YYLTYPE const*, _mesa_glsl_parse_state*, unsigned int, char const*, std::__va_list)
0000000000355250 000000000000000c T ast_node::print() const
0000000000355260 0000000000000038 T ast_expression_statement::print() const
00000000003552a0 000000000000000c T ast_demote_statement::print() const
00000000003552b0 0000000000000084 T ast_selection_statement::print() const
0000000000355340 0000000000000054 T ast_switch_statement::print() const
00000000003553a0 000000000000005c T ast_case_label::print() const
0000000000355400 0000000000000120 T ast_iteration_statement::print() const
0000000000355520 0000000000000068 T ast_struct_specifier::print() const
0000000000355590 0000000000000088 T ast_subroutine_list::print() const
0000000000355620 0000000000000068 T ast_compound_statement::print() const
0000000000355690 0000000000000044 T ast_switch_body::print() const
00000000003556e0 0000000000000054 T ast_case_label_list::print() const
0000000000355740 0000000000000068 T ast_case_statement::print() const
00000000003557b0 000000000000020c t _mesa_ast_type_qualifier_print(ast_type_qualifier const*)
00000000003559c0 0000000000000034 T ast_fully_specified_type::print() const
0000000000355a00 0000000000000070 T ast_declaration::print() const
0000000000355a70 00000000000000a8 T ast_jump_statement::print() const
0000000000355b20 0000000000000090 T ast_parameter_declarator::print() const
0000000000355bb0 00000000000000a8 T ast_function::print() const
0000000000355c60 00000000000000fc T ast_declarator_list::print() const
0000000000355d60 0000000000000040 t glsl_compute_version_string(void*, bool, unsigned int)
0000000000355da0 0000000000000080 t _mesa_glsl_error(YYLTYPE*, _mesa_glsl_parse_state*, char const*, ...)
0000000000355e20 0000000000000230 t _mesa_glsl_parse_state::check_version(unsigned int, unsigned int, YYLTYPE*, char const*, ...)
0000000000356050 0000000000000340 t _mesa_glsl_parse_state::process_version_directive(YYLTYPE*, int, char const*)
0000000000356390 0000000000000080 t _mesa_glsl_warning(YYLTYPE const*, _mesa_glsl_parse_state*, char const*, ...)
0000000000356410 0000000000000300 t _mesa_glsl_process_extension(char const*, YYLTYPE*, char const*, YYLTYPE*, _mesa_glsl_parse_state*)
0000000000356710 0000000000000780 t _mesa_glsl_parse_state::_mesa_glsl_parse_state(gl_context*, gl_shader_stage, void*)
0000000000356710 0000000000000780 T _mesa_glsl_parse_state::_mesa_glsl_parse_state(gl_context*, gl_shader_stage, void*)
0000000000356e90 000000000000019c t _mesa_ast_set_aggregate_type(glsl_type const*, ast_expression*)
0000000000357030 000000000000043c t _mesa_ast_process_interface_block(YYLTYPE*, _mesa_glsl_parse_state*, ast_interface_block*, ast_type_qualifier const&)
0000000000357470 000000000000001c T ast_node::ast_node()
0000000000357470 000000000000001c t ast_node::ast_node()
0000000000357490 0000000000000050 t ast_compound_statement::ast_compound_statement(int, ast_node*)
0000000000357490 0000000000000050 T ast_compound_statement::ast_compound_statement(int, ast_node*)
00000000003574e0 0000000000000498 T ast_expression::print() const
0000000000357980 0000000000000048 t ast_expression::ast_expression(int, ast_expression*, ast_expression*, ast_expression*)
0000000000357980 0000000000000048 t ast_expression::ast_expression(int, ast_expression*, ast_expression*, ast_expression*)
00000000003579d0 0000000000000020 t ast_expression_statement::ast_expression_statement(ast_expression*)
00000000003579d0 0000000000000020 T ast_expression_statement::ast_expression_statement(ast_expression*)
00000000003579f0 000000000000003c t ast_function::ast_function()
00000000003579f0 000000000000003c T ast_function::ast_function()
0000000000357a30 0000000000000024 t ast_declaration::ast_declaration(char const*, ast_array_specifier*, ast_expression*)
0000000000357a30 0000000000000024 T ast_declaration::ast_declaration(char const*, ast_array_specifier*, ast_expression*)
0000000000357a60 0000000000000038 t ast_declarator_list::ast_declarator_list(ast_fully_specified_type*)
0000000000357a60 0000000000000038 T ast_declarator_list::ast_declarator_list(ast_fully_specified_type*)
0000000000357aa0 000000000000002c t ast_jump_statement::ast_jump_statement(int, ast_expression*)
0000000000357aa0 000000000000002c T ast_jump_statement::ast_jump_statement(int, ast_expression*)
0000000000357ad0 0000000000000024 t ast_selection_statement::ast_selection_statement(ast_expression*, ast_node*, ast_node*)
0000000000357ad0 0000000000000024 T ast_selection_statement::ast_selection_statement(ast_expression*, ast_node*, ast_node*)
0000000000357b00 0000000000000020 t ast_switch_statement::ast_switch_statement(ast_expression*, ast_node*)
0000000000357b00 0000000000000020 T ast_switch_statement::ast_switch_statement(ast_expression*, ast_node*)
0000000000357b20 0000000000000020 t ast_switch_body::ast_switch_body(ast_case_statement_list*)
0000000000357b20 0000000000000020 T ast_switch_body::ast_switch_body(ast_case_statement_list*)
0000000000357b40 0000000000000020 t ast_case_label::ast_case_label(ast_expression*)
0000000000357b40 0000000000000020 T ast_case_label::ast_case_label(ast_expression*)
0000000000357b60 0000000000000030 t ast_case_label_list::ast_case_label_list()
0000000000357b60 0000000000000030 T ast_case_label_list::ast_case_label_list()
0000000000357b90 0000000000000034 t ast_case_statement::ast_case_statement(ast_case_label_list*)
0000000000357b90 0000000000000034 T ast_case_statement::ast_case_statement(ast_case_label_list*)
0000000000357bd0 0000000000000030 t ast_case_statement_list::ast_case_statement_list()
0000000000357bd0 0000000000000030 T ast_case_statement_list::ast_case_statement_list()
0000000000357c00 0000000000000028 t ast_iteration_statement::ast_iteration_statement(int, ast_node*, ast_node*, ast_expression*, ast_node*)
0000000000357c00 0000000000000028 T ast_iteration_statement::ast_iteration_statement(int, ast_node*, ast_node*, ast_expression*, ast_node*)
0000000000357c30 0000000000000058 t ast_struct_specifier::ast_struct_specifier(char const*, ast_declarator_list*)
0000000000357c30 0000000000000058 T ast_struct_specifier::ast_struct_specifier(char const*, ast_declarator_list*)
0000000000357c90 00000000000000fc t _mesa_glsl_copy_symbols_from_table
0000000000357d90 000000000000048c t do_common_optimization(exec_list*, bool, bool, gl_shader_compiler_options const*, bool)
0000000000358220 0000000000000a44 t _mesa_glsl_compile_shader
0000000000358c70 0000000000000044 t glsl_symbol_table::glsl_symbol_table()
0000000000358c70 0000000000000044 T glsl_symbol_table::glsl_symbol_table()
0000000000358cc0 0000000000000028 t glsl_symbol_table::~glsl_symbol_table()
0000000000358cc0 0000000000000028 T glsl_symbol_table::~glsl_symbol_table()
0000000000358cf0 0000000000000008 t glsl_symbol_table::push_scope()
0000000000358d00 0000000000000008 t glsl_symbol_table::pop_scope()
0000000000358d10 0000000000000020 t glsl_symbol_table::name_declared_this_scope(char const*)
0000000000358d30 0000000000000104 t glsl_symbol_table::add_variable(ir_variable*)
0000000000358e40 0000000000000060 t glsl_symbol_table::add_type(char const*, glsl_type const*)
0000000000358ea0 000000000000015c t glsl_symbol_table::add_interface(char const*, glsl_type const*, ir_variable_mode)
0000000000359000 000000000000009c t glsl_symbol_table::add_function(ir_function*)
00000000003590a0 00000000000000e4 t glsl_symbol_table::add_default_precision_qualifier(char const*, int)
0000000000359190 0000000000000020 t glsl_symbol_table::get_variable(char const*)
00000000003591b0 0000000000000020 t glsl_symbol_table::get_type(char const*)
00000000003591d0 0000000000000090 t glsl_symbol_table::get_interface(char const*, ir_variable_mode)
0000000000359260 0000000000000020 t glsl_symbol_table::get_function(char const*)
0000000000359280 000000000000005c t glsl_symbol_table::get_default_precision_qualifier(char const*)
00000000003592e0 0000000000000020 t glsl_symbol_table::disable_variable(char const*)
0000000000359300 000000000000002c t glsl_symbol_table::replace_variable(char const*, ir_variable*)
0000000000359330 000000000000002c t ir_builder::ir_factory::emit(ir_instruction*)
0000000000359360 000000000000007c t ir_builder::ir_factory::make_temp(glsl_type const*, char const*)
00000000003593e0 0000000000000058 t ir_builder::assign(ir_builder::deref, ir_builder::operand, ir_builder::operand, int)
0000000000359440 0000000000000064 t ir_builder::assign(ir_builder::deref, ir_builder::operand)
00000000003594b0 0000000000000054 t ir_builder::assign(ir_builder::deref, ir_builder::operand, int)
0000000000359510 0000000000000068 t ir_builder::assign(ir_builder::deref, ir_builder::operand, ir_builder::operand)
0000000000359580 0000000000000048 t ir_builder::ret(ir_builder::operand)
00000000003595d0 000000000000005c t ir_builder::swizzle(ir_builder::operand, int, int)
0000000000359630 00000000000000a0 t ir_builder::swizzle_for_size(ir_builder::operand, unsigned int)
00000000003596d0 000000000000004c t ir_builder::swizzle_xxxx(ir_builder::operand)
0000000000359720 000000000000004c t ir_builder::swizzle_x(ir_builder::operand)
0000000000359770 000000000000004c t ir_builder::swizzle_y(ir_builder::operand)
00000000003597c0 000000000000004c t ir_builder::swizzle_z(ir_builder::operand)
0000000000359810 000000000000004c t ir_builder::swizzle_w(ir_builder::operand)
0000000000359860 000000000000004c t ir_builder::swizzle_xy(ir_builder::operand)
00000000003598b0 000000000000004c t ir_builder::swizzle_xyz(ir_builder::operand)
0000000000359900 0000000000000044 t ir_builder::expr(ir_expression_operation, ir_builder::operand)
0000000000359950 0000000000000054 t ir_builder::expr(ir_expression_operation, ir_builder::operand, ir_builder::operand)
00000000003599b0 000000000000005c t ir_builder::expr(ir_expression_operation, ir_builder::operand, ir_builder::operand, ir_builder::operand)
0000000000359a10 0000000000000044 t ir_builder::add(ir_builder::operand, ir_builder::operand)
0000000000359a60 0000000000000044 t ir_builder::sub(ir_builder::operand, ir_builder::operand)
0000000000359ab0 0000000000000044 t ir_builder::min2(ir_builder::operand, ir_builder::operand)
0000000000359b00 0000000000000044 t ir_builder::max2(ir_builder::operand, ir_builder::operand)
0000000000359b50 0000000000000044 t ir_builder::mul(ir_builder::operand, ir_builder::operand)
0000000000359ba0 0000000000000044 t ir_builder::imul_high(ir_builder::operand, ir_builder::operand)
0000000000359bf0 0000000000000044 t ir_builder::div(ir_builder::operand, ir_builder::operand)
0000000000359c40 0000000000000044 t ir_builder::carry(ir_builder::operand, ir_builder::operand)
0000000000359c90 0000000000000044 t ir_builder::borrow(ir_builder::operand, ir_builder::operand)
0000000000359ce0 000000000000003c t ir_builder::trunc(ir_builder::operand)
0000000000359d20 000000000000003c t ir_builder::round_even(ir_builder::operand)
0000000000359d60 000000000000003c t ir_builder::fract(ir_builder::operand)
0000000000359da0 0000000000000084 t ir_builder::dot(ir_builder::operand, ir_builder::operand)
0000000000359e30 0000000000000074 t ir_builder::clamp(ir_builder::operand, ir_builder::operand, ir_builder::operand)
0000000000359eb0 000000000000003c t ir_builder::saturate(ir_builder::operand)
0000000000359ef0 000000000000003c t ir_builder::abs(ir_builder::operand)
0000000000359f30 000000000000003c t ir_builder::neg(ir_builder::operand)
0000000000359f70 000000000000003c t ir_builder::sin(ir_builder::operand)
0000000000359fb0 000000000000003c t ir_builder::cos(ir_builder::operand)
0000000000359ff0 000000000000003c t ir_builder::exp(ir_builder::operand)
000000000035a030 000000000000003c t ir_builder::rcp(ir_builder::operand)
000000000035a070 000000000000003c t ir_builder::rsq(ir_builder::operand)
000000000035a0b0 000000000000003c t ir_builder::sqrt(ir_builder::operand)
000000000035a0f0 000000000000003c t ir_builder::log(ir_builder::operand)
000000000035a130 000000000000003c t ir_builder::sign(ir_builder::operand)
000000000035a170 000000000000003c t ir_builder::subr_to_int(ir_builder::operand)
000000000035a1b0 0000000000000044 t ir_builder::equal(ir_builder::operand, ir_builder::operand)
000000000035a200 0000000000000044 t ir_builder::nequal(ir_builder::operand, ir_builder::operand)
000000000035a250 0000000000000044 t ir_builder::less(ir_builder::operand, ir_builder::operand)
000000000035a2a0 0000000000000048 t ir_builder::greater(ir_builder::operand, ir_builder::operand)
000000000035a2f0 0000000000000048 t ir_builder::lequal(ir_builder::operand, ir_builder::operand)
000000000035a340 0000000000000044 t ir_builder::gequal(ir_builder::operand, ir_builder::operand)
000000000035a390 000000000000003c t ir_builder::logic_not(ir_builder::operand)
000000000035a3d0 0000000000000044 t ir_builder::logic_and(ir_builder::operand, ir_builder::operand)
000000000035a420 0000000000000044 t ir_builder::logic_or(ir_builder::operand, ir_builder::operand)
000000000035a470 000000000000003c t ir_builder::bit_not(ir_builder::operand)
000000000035a4b0 0000000000000044 t ir_builder::bit_and(ir_builder::operand, ir_builder::operand)
000000000035a500 0000000000000044 t ir_builder::bit_or(ir_builder::operand, ir_builder::operand)
000000000035a550 0000000000000044 t ir_builder::lshift(ir_builder::operand, ir_builder::operand)
000000000035a5a0 0000000000000044 t ir_builder::rshift(ir_builder::operand, ir_builder::operand)
000000000035a5f0 000000000000003c t ir_builder::f2i(ir_builder::operand)
000000000035a630 000000000000003c t ir_builder::bitcast_f2i(ir_builder::operand)
000000000035a670 000000000000003c t ir_builder::i2f(ir_builder::operand)
000000000035a6b0 000000000000003c t ir_builder::bitcast_i2f(ir_builder::operand)
000000000035a6f0 000000000000003c t ir_builder::i2u(ir_builder::operand)
000000000035a730 000000000000003c t ir_builder::u2i(ir_builder::operand)
000000000035a770 000000000000003c t ir_builder::f2u(ir_builder::operand)
000000000035a7b0 000000000000003c t ir_builder::bitcast_f2u(ir_builder::operand)
000000000035a7f0 000000000000003c t ir_builder::u2f(ir_builder::operand)
000000000035a830 000000000000003c t ir_builder::bitcast_u2f(ir_builder::operand)
000000000035a870 000000000000003c t ir_builder::b2i(ir_builder::operand)
000000000035a8b0 000000000000003c t ir_builder::b2f(ir_builder::operand)
000000000035a8f0 000000000000003c t ir_builder::bitcast_d2i64(ir_builder::operand)
000000000035a930 000000000000003c t ir_builder::bitcast_d2u64(ir_builder::operand)
000000000035a970 000000000000003c t ir_builder::bitcast_i642d(ir_builder::operand)
000000000035a9b0 000000000000003c t ir_builder::bitcast_u642d(ir_builder::operand)
000000000035a9f0 000000000000003c t ir_builder::interpolate_at_centroid(ir_builder::operand)
000000000035aa30 0000000000000044 t ir_builder::interpolate_at_offset(ir_builder::operand, ir_builder::operand)
000000000035aa80 0000000000000044 t ir_builder::interpolate_at_sample(ir_builder::operand, ir_builder::operand)
000000000035aad0 000000000000003c t ir_builder::f2d(ir_builder::operand)
000000000035ab10 0000000000000054 t ir_builder::fma(ir_builder::operand, ir_builder::operand, ir_builder::operand)
000000000035ab70 0000000000000054 t ir_builder::lrp(ir_builder::operand, ir_builder::operand, ir_builder::operand)
000000000035abd0 0000000000000054 t ir_builder::csel(ir_builder::operand, ir_builder::operand, ir_builder::operand)
000000000035ac30 0000000000000054 t ir_builder::bitfield_extract(ir_builder::operand, ir_builder::operand, ir_builder::operand)
000000000035ac90 0000000000000060 t ir_builder::bitfield_insert(ir_builder::operand, ir_builder::operand, ir_builder::operand, ir_builder::operand)
000000000035acf0 0000000000000088 t ir_builder::if_tree(ir_builder::operand, ir_instruction*)
000000000035ad80 00000000000000ac t ir_builder::if_tree(ir_builder::operand, ir_instruction*, ir_instruction*)
000000000035ae30 0000000000000004 W ir_visitor::visit(ir_rvalue*)
000000000035ae40 0000000000000004 W ir_control_flow_visitor::visit(ir_variable*)
000000000035ae50 0000000000000004 W ir_control_flow_visitor::visit(ir_texture*)
000000000035ae60 0000000000000004 W ir_control_flow_visitor::visit(ir_swizzle*)
000000000035ae70 0000000000000004 W ir_control_flow_visitor::visit(ir_dereference_variable*)
000000000035ae80 0000000000000004 W ir_control_flow_visitor::visit(ir_dereference_array*)
000000000035ae90 0000000000000004 W ir_control_flow_visitor::visit(ir_dereference_record*)
000000000035aea0 0000000000000004 W ir_control_flow_visitor::visit(ir_assignment*)
000000000035aeb0 0000000000000004 W ir_control_flow_visitor::visit(ir_constant*)
000000000035aec0 0000000000000004 W ir_control_flow_visitor::visit(ir_call*)
000000000035aed0 0000000000000004 W ir_control_flow_visitor::visit(ir_demote*)
000000000035aee0 0000000000000008 W ir_rvalue::is_lvalue(_mesa_glsl_parse_state const*) const
000000000035aef0 0000000000000008 W ir_rvalue::variable_referenced() const
000000000035af00 0000000000000008 W ir_rvalue::whole_variable_referenced()
000000000035af10 0000000000000008 W ir_rvalue::is_uint16_constant() const
000000000035af20 000000000000001c W ir_function_signature::accept(ir_visitor*)
000000000035af40 000000000000001c W ir_function::accept(ir_visitor*)
000000000035af60 000000000000001c W ir_if::accept(ir_visitor*)
000000000035af80 000000000000001c W ir_loop::accept(ir_visitor*)
000000000035afa0 000000000000001c W ir_return::accept(ir_visitor*)
000000000035afc0 000000000000001c W ir_loop_jump::accept(ir_visitor*)
000000000035afe0 000000000000001c W ir_discard::accept(ir_visitor*)
000000000035b000 0000000000000004 W ir_rvalue::~ir_rvalue()
000000000035b000 0000000000000004 W ir_rvalue::~ir_rvalue()
000000000035b010 0000000000000040 W ir_swizzle::is_lvalue(_mesa_glsl_parse_state const*) const
000000000035b050 0000000000000008 W ir_dereference_variable::variable_referenced() const
000000000035b060 0000000000000010 W ir_dereference_variable::precision() const
000000000035b070 0000000000000008 W ir_dereference_variable::whole_variable_referenced()
000000000035b080 0000000000000014 W ir_dereference_array::variable_referenced() const
000000000035b0a0 0000000000000028 W ir_dereference_array::precision() const
000000000035b0d0 0000000000000014 W ir_dereference_record::variable_referenced() const
000000000035b0f0 0000000000000024 W ir_dereference_record::precision() const
000000000035b120 0000000000000004 W ir_constant::~ir_constant()
000000000035b120 0000000000000004 W ir_constant::~ir_constant()
000000000035b130 0000000000000004 W ir_function_signature::~ir_function_signature()
000000000035b130 0000000000000004 W ir_function_signature::~ir_function_signature()
000000000035b140 0000000000000004 W ir_function::~ir_function()
000000000035b140 0000000000000004 W ir_function::~ir_function()
000000000035b150 0000000000000004 W ir_assignment::~ir_assignment()
000000000035b150 0000000000000004 W ir_assignment::~ir_assignment()
000000000035b160 0000000000000004 W ir_texture::~ir_texture()
000000000035b160 0000000000000004 W ir_texture::~ir_texture()
000000000035b170 0000000000000004 W ir_dereference_record::~ir_dereference_record()
000000000035b170 0000000000000004 W ir_dereference_record::~ir_dereference_record()
000000000035b180 0000000000000004 W ir_dereference_array::~ir_dereference_array()
000000000035b180 0000000000000004 W ir_dereference_array::~ir_dereference_array()
000000000035b190 0000000000000004 W ir_dereference_variable::~ir_dereference_variable()
000000000035b190 0000000000000004 W ir_dereference_variable::~ir_dereference_variable()
000000000035b1a0 0000000000000004 W ir_call::~ir_call()
000000000035b1a0 0000000000000004 W ir_call::~ir_call()
000000000035b1b0 0000000000000004 W ir_loop::~ir_loop()
000000000035b1b0 0000000000000004 W ir_loop::~ir_loop()
000000000035b1c0 0000000000000004 W ir_if::~ir_if()
000000000035b1c0 0000000000000004 W ir_if::~ir_if()
000000000035b1d0 0000000000000004 W ir_loop_jump::~ir_loop_jump()
000000000035b1d0 0000000000000004 W ir_loop_jump::~ir_loop_jump()
000000000035b1e0 0000000000000004 W ir_demote::~ir_demote()
000000000035b1e0 0000000000000004 W ir_demote::~ir_demote()
000000000035b1f0 0000000000000004 W ir_discard::~ir_discard()
000000000035b1f0 0000000000000004 W ir_discard::~ir_discard()
000000000035b200 0000000000000004 W ir_return::~ir_return()
000000000035b200 0000000000000004 W ir_return::~ir_return()
000000000035b210 0000000000000004 W ir_swizzle::~ir_swizzle()
000000000035b210 0000000000000004 W ir_swizzle::~ir_swizzle()
000000000035b220 0000000000000004 W ir_variable::~ir_variable()
000000000035b220 0000000000000004 W ir_variable::~ir_variable()
000000000035b230 0000000000000008 T ir_rvalue::clone(void*, hash_table*) const
000000000035b240 0000000000000158 T ir_if::clone(void*, hash_table*) const
000000000035b3a0 0000000000000060 T ir_return::clone(void*, hash_table*) const
000000000035b400 0000000000000044 T ir_loop_jump::clone(void*, hash_table*) const
000000000035b450 0000000000000060 T ir_discard::clone(void*, hash_table*) const
000000000035b4b0 0000000000000034 T ir_demote::clone(void*, hash_table*) const
000000000035b4f0 00000000000001c8 T ir_variable::clone(void*, hash_table*) const
000000000035b6c0 0000000000000064 t ir_swizzle::clone(void*, hash_table*) const
000000000035b730 00000000000000ac T ir_loop::clone(void*, hash_table*) const
000000000035b7e0 0000000000000038 W fixup_ir_call_visitor::visit_enter(ir_call*)
000000000035b820 0000000000000068 T ir_dereference_variable::clone(void*, hash_table*) const
000000000035b890 0000000000000080 T ir_dereference_array::clone(void*, hash_table*) const
000000000035b910 0000000000000074 T ir_dereference_record::clone(void*, hash_table*) const
000000000035b990 00000000000001e4 T ir_texture::clone(void*, hash_table*) const
000000000035bb80 00000000000000c0 T ir_assignment::clone(void*, hash_table*) const
000000000035bc40 000000000000010c T ir_function::clone(void*, hash_table*) const
000000000035bd50 0000000000000004 W ir_rvalue::~ir_rvalue()
000000000035bd60 0000000000000004 W ir_constant::~ir_constant()
000000000035bd70 0000000000000004 W ir_texture::~ir_texture()
000000000035bd80 0000000000000004 W ir_swizzle::~ir_swizzle()
000000000035bd90 0000000000000004 W ir_function_signature::~ir_function_signature()
000000000035bda0 0000000000000004 W ir_function::~ir_function()
000000000035bdb0 0000000000000004 W ir_assignment::~ir_assignment()
000000000035bdc0 0000000000000004 W ir_call::~ir_call()
000000000035bdd0 0000000000000004 W ir_loop::~ir_loop()
000000000035bde0 0000000000000004 W ir_if::~ir_if()
000000000035bdf0 0000000000000004 W ir_demote::~ir_demote()
000000000035be00 0000000000000004 W ir_variable::~ir_variable()
000000000035be10 0000000000000004 W ir_loop_jump::~ir_loop_jump()
000000000035be20 0000000000000004 W ir_discard::~ir_discard()
000000000035be30 0000000000000004 W ir_return::~ir_return()
000000000035be40 0000000000000004 W ir_dereference_record::~ir_dereference_record()
000000000035be50 0000000000000004 W ir_dereference_array::~ir_dereference_array()
000000000035be60 0000000000000004 W ir_dereference_variable::~ir_dereference_variable()
000000000035be70 0000000000000118 T ir_constant::clone(void*, hash_table*) const
000000000035bf90 0000000000000030 W ir_constant::accept(ir_visitor*)
000000000035bfc0 0000000000000030 W ir_rvalue::accept(ir_visitor*)
000000000035bff0 0000000000000030 W ir_variable::accept(ir_visitor*)
000000000035c020 0000000000000030 W ir_assignment::accept(ir_visitor*)
000000000035c050 0000000000000030 W ir_call::accept(ir_visitor*)
000000000035c080 0000000000000030 W ir_demote::accept(ir_visitor*)
000000000035c0b0 0000000000000030 W ir_texture::accept(ir_visitor*)
000000000035c0e0 0000000000000030 W ir_swizzle::accept(ir_visitor*)
000000000035c110 0000000000000030 W ir_dereference_variable::accept(ir_visitor*)
000000000035c140 0000000000000030 W ir_dereference_array::accept(ir_visitor*)
000000000035c170 0000000000000030 W ir_dereference_record::accept(ir_visitor*)
000000000035c1a0 000000000000016c T ir_call::clone(void*, hash_table*) const
000000000035c310 00000000000000e0 T ir_expression::clone(void*, hash_table*) const
000000000035c3f0 00000000000000cc t ir_function_signature::clone_prototype(void*, hash_table*) const
000000000035c4c0 00000000000000b0 T ir_function_signature::clone(void*, hash_table*) const
000000000035c570 00000000000000d0 t clone_ir_list(void*, exec_list*, exec_list const*)
000000000035c640 000000000000024c t constant_referenced(ir_dereference const*, hash_table*, ir_constant*&, int&)
000000000035c890 0000000000000008 T ir_texture::constant_expression_value(void*, hash_table*)
000000000035c890 0000000000000008 T ir_assignment::constant_expression_value(void*, hash_table*)
000000000035c890 0000000000000008 T ir_rvalue::constant_expression_value(void*, hash_table*)
000000000035c8a0 00000000000043c0 t ir_expression::constant_expression_value(void*, hash_table*)
0000000000360c60 0000000000000230 T ir_swizzle::constant_expression_value(void*, hash_table*)
0000000000360e90 0000000000000080 T ir_dereference_variable::constant_expression_value(void*, hash_table*)
0000000000360f10 0000000000000250 T ir_dereference_array::constant_expression_value(void*, hash_table*)
0000000000361160 0000000000000044 T ir_dereference_record::constant_expression_value(void*, hash_table*)
00000000003611b0 0000000000000004 T ir_constant::constant_expression_value(void*, hash_table*)
00000000003611c0 00000000000002e0 t ir_function_signature::constant_expression_evaluate_expression_list(void*, exec_list const&, hash_table*, ir_constant**)
00000000003614a0 00000000000001d4 t ir_function_signature::constant_expression_value(void*, exec_list*, hash_table*) [clone .part.0]
0000000000361680 000000000000007c T ir_call::constant_expression_value(void*, hash_table*)
0000000000361700 0000000000000078 t ir_function_signature::constant_expression_value(void*, exec_list*, hash_table*)
0000000000361780 0000000000000008 T ir_rvalue::is_negative_one() const
0000000000361780 0000000000000008 T ir_rvalue::is_one() const
0000000000361780 0000000000000008 T ir_rvalue::is_zero() const
0000000000361790 00000000000000f4 t steal_memory(ir_instruction*, void*)
0000000000361890 00000000000000a0 T ir_dereference::is_lvalue(_mesa_glsl_parse_state const*) const
0000000000361930 000000000000002c T ir_rvalue::ir_rvalue(ir_node_type)
0000000000361930 000000000000002c t ir_rvalue::ir_rvalue(ir_node_type)
0000000000361960 00000000000003c0 t ir_assignment::set_lhs(ir_rvalue*)
0000000000361d20 0000000000000074 t ir_assignment::whole_variable_written()
0000000000361da0 0000000000000034 t ir_assignment::ir_assignment(ir_dereference*, ir_rvalue*, ir_rvalue*, unsigned int)
0000000000361da0 0000000000000034 T ir_assignment::ir_assignment(ir_dereference*, ir_rvalue*, ir_rvalue*, unsigned int)
0000000000361de0 000000000000009c t ir_assignment::ir_assignment(ir_rvalue*, ir_rvalue*, ir_rvalue*)
0000000000361de0 000000000000009c T ir_assignment::ir_assignment(ir_rvalue*, ir_rvalue*, ir_rvalue*)
0000000000361e80 000000000000006c t ir_expression::ir_expression(int, glsl_type const*, ir_rvalue*, ir_rvalue*, ir_rvalue*, ir_rvalue*)
0000000000361e80 000000000000006c T ir_expression::ir_expression(int, glsl_type const*, ir_rvalue*, ir_rvalue*, ir_rvalue*, ir_rvalue*)
0000000000361ef0 000000000000024c t ir_expression::ir_expression(int, ir_rvalue*)
0000000000361ef0 000000000000024c T ir_expression::ir_expression(int, ir_rvalue*)
0000000000362140 0000000000000288 t ir_expression::ir_expression(int, ir_rvalue*, ir_rvalue*)
0000000000362140 0000000000000288 T ir_expression::ir_expression(int, ir_rvalue*, ir_rvalue*)
00000000003623d0 00000000000000d8 t ir_expression::ir_expression(int, ir_rvalue*, ir_rvalue*, ir_rvalue*)
00000000003623d0 00000000000000d8 T ir_expression::ir_expression(int, ir_rvalue*, ir_rvalue*, ir_rvalue*)
00000000003624b0 000000000000002c t ir_expression::get_num_operands(ir_expression_operation)
00000000003624e0 0000000000000068 t depth_layout_string(ir_depth_layout)
0000000000362550 000000000000002c T ir_expression::variable_referenced() const
0000000000362580 0000000000000034 t ir_constant::ir_constant()
0000000000362580 0000000000000034 T ir_constant::ir_constant()
00000000003625c0 000000000000004c t ir_constant::ir_constant(glsl_type const*, ir_constant_data const*)
00000000003625c0 000000000000004c T ir_constant::ir_constant(glsl_type const*, ir_constant_data const*)
0000000000362610 00000000000000b4 t ir_constant::ir_constant(float16_t, unsigned int)
0000000000362610 00000000000000b4 T ir_constant::ir_constant(float16_t, unsigned int)
00000000003626d0 00000000000000b4 t ir_constant::ir_constant(float, unsigned int)
00000000003626d0 00000000000000b4 T ir_constant::ir_constant(float, unsigned int)
0000000000362790 00000000000000b4 t ir_constant::ir_constant(double, unsigned int)
0000000000362790 00000000000000b4 T ir_constant::ir_constant(double, unsigned int)
0000000000362850 00000000000000b4 t ir_constant::ir_constant(unsigned int, unsigned int)
0000000000362850 00000000000000b4 T ir_constant::ir_constant(unsigned int, unsigned int)
0000000000362910 00000000000000b4 t ir_constant::ir_constant(int, unsigned int)
0000000000362910 00000000000000b4 T ir_constant::ir_constant(int, unsigned int)
00000000003629d0 00000000000000b4 t ir_constant::ir_constant(unsigned long, unsigned int)
00000000003629d0 00000000000000b4 T ir_constant::ir_constant(unsigned long, unsigned int)
0000000000362a90 00000000000000b4 t ir_constant::ir_constant(long, unsigned int)
0000000000362a90 00000000000000b4 T ir_constant::ir_constant(long, unsigned int)
0000000000362b50 00000000000000b0 t ir_constant::ir_constant(bool, unsigned int)
0000000000362b50 00000000000000b0 T ir_constant::ir_constant(bool, unsigned int)
0000000000362c00 0000000000000118 t ir_constant::ir_constant(ir_constant const*, unsigned int)
0000000000362c00 0000000000000118 T ir_constant::ir_constant(ir_constant const*, unsigned int)
0000000000362d20 0000000000000164 t ir_constant::zero(void*, glsl_type const*)
0000000000362e90 00000000000000f8 t ir_constant::get_bool_component(unsigned int) const
0000000000362f90 00000000000000ec t ir_constant::get_float_component(unsigned int) const
0000000000363080 0000000000000104 t ir_constant::get_double_component(unsigned int) const
0000000000363190 00000000000000d4 t ir_constant::get_int_component(unsigned int) const
0000000000363270 00000000000000d4 t ir_constant::get_uint_component(unsigned int) const
0000000000363350 00000000000000e0 t ir_constant::get_int64_component(unsigned int) const
0000000000363430 00000000000000e0 t ir_constant::get_uint64_component(unsigned int) const
0000000000363510 0000000000000594 t ir_constant::ir_constant(glsl_type const*, exec_list*)
0000000000363510 0000000000000594 T ir_constant::ir_constant(glsl_type const*, exec_list*)
0000000000363ab0 000000000000003c t ir_constant::get_array_element(unsigned int) const
0000000000363af0 000000000000000c t ir_constant::get_record_field(int)
0000000000363b00 0000000000000230 t ir_constant::copy_offset(ir_constant*, int)
0000000000363d30 000000000000028c t ir_constant::copy_masked_offset(ir_constant*, int, unsigned int)
0000000000363fc0 0000000000000250 t ir_constant::has_value(ir_constant const*) const
0000000000364210 00000000000001e0 T ir_constant::is_value(float, int) const
00000000003643f0 0000000000000018 T ir_constant::is_zero() const
0000000000364410 0000000000000018 T ir_constant::is_one() const
0000000000364430 0000000000000018 T ir_constant::is_negative_one() const
0000000000364450 000000000000002c T ir_constant::is_uint16_constant() const
0000000000364480 0000000000000034 t ir_loop::ir_loop()
0000000000364480 0000000000000034 T ir_loop::ir_loop()
00000000003644c0 0000000000000038 t ir_dereference_variable::ir_dereference_variable(ir_variable*)
00000000003644c0 0000000000000038 T ir_dereference_variable::ir_dereference_variable(ir_variable*)
0000000000364500 00000000000000c4 t ir_dereference_array::set_array(ir_rvalue*)
00000000003645d0 0000000000000030 t ir_dereference_array::ir_dereference_array(ir_rvalue*, ir_rvalue*)
00000000003645d0 0000000000000030 T ir_dereference_array::ir_dereference_array(ir_rvalue*, ir_rvalue*)
0000000000364600 0000000000000094 t ir_dereference_array::ir_dereference_array(ir_variable*, ir_rvalue*)
0000000000364600 0000000000000094 T ir_dereference_array::ir_dereference_array(ir_variable*, ir_rvalue*)
00000000003646a0 0000000000000074 t ir_dereference_record::ir_dereference_record(ir_rvalue*, char const*)
00000000003646a0 0000000000000074 T ir_dereference_record::ir_dereference_record(ir_rvalue*, char const*)
0000000000364720 0000000000000014 t ir_texture::opcode_string()
0000000000364740 000000000000000c t ir_texture::set_sampler(ir_dereference*, glsl_type const*)
0000000000364750 000000000000014c t ir_swizzle::init_mask(unsigned int const*, unsigned int)
00000000003648a0 0000000000000058 t ir_swizzle::ir_swizzle(ir_rvalue*, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int)
00000000003648a0 0000000000000058 T ir_swizzle::ir_swizzle(ir_rvalue*, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int)
0000000000364900 000000000000003c t ir_swizzle::ir_swizzle(ir_rvalue*, unsigned int const*, unsigned int)
0000000000364900 000000000000003c T ir_swizzle::ir_swizzle(ir_rvalue*, unsigned int const*, unsigned int)
0000000000364940 0000000000000074 t ir_swizzle::ir_swizzle(ir_rvalue*, ir_swizzle_mask)
0000000000364940 0000000000000074 T ir_swizzle::ir_swizzle(ir_rvalue*, ir_swizzle_mask)
00000000003649c0 0000000000000130 t ir_swizzle::create(ir_rvalue*, char const*, unsigned int)
0000000000364af0 0000000000000014 T ir_swizzle::variable_referenced() const
0000000000364b10 0000000000000238 t ir_variable::ir_variable(glsl_type const*, char const*, ir_variable_mode)
0000000000364b10 0000000000000238 T ir_variable::ir_variable(glsl_type const*, char const*, ir_variable_mode)
0000000000364d50 0000000000000050 t interpolation_string(unsigned int)
0000000000364da0 0000000000000084 t ir_variable::enable_extension_warning(char const*)
0000000000364e30 0000000000000060 t ir_function_signature::ir_function_signature(glsl_type const*, bool (*)(_mesa_glsl_parse_state const*))
0000000000364e30 0000000000000060 T ir_function_signature::ir_function_signature(glsl_type const*, bool (*)(_mesa_glsl_parse_state const*))
0000000000364e90 0000000000000010 t ir_function_signature::is_builtin() const
0000000000364ea0 0000000000000020 t ir_function_signature::is_builtin_available(_mesa_glsl_parse_state const*) const
0000000000364ec0 00000000000000bc t ir_function_signature::qualifiers_match(exec_list*)
0000000000364f80 0000000000000050 t ir_function_signature::replace_parameters(exec_list*)
0000000000364fd0 000000000000005c t ir_function::ir_function(char const*)
0000000000364fd0 000000000000005c T ir_function::ir_function(char const*)
0000000000365030 000000000000003c t ir_function::has_user_signature()
0000000000365070 0000000000000044 t ir_rvalue::error_value(void*)
00000000003650c0 000000000000008c t visit_exec_list(exec_list*, ir_visitor*)
0000000000365150 0000000000000068 t reparent_ir(exec_list*, void*)
00000000003651c0 0000000000000020 t vertices_per_prim(unsigned int)
00000000003651e0 00000000000000f4 t mode_string(ir_variable const*)
00000000003652e0 0000000000000004 W ir_control_flow_visitor::visit(ir_expression*)
00000000003652f0 0000000000000008 T ir_instruction::equals(ir_instruction const*, ir_node_type) const
0000000000365300 0000000000000004 W ir_expression::~ir_expression()
0000000000365300 0000000000000004 W ir_expression::~ir_expression()
0000000000365310 0000000000000004 W ir_expression::~ir_expression()
0000000000365320 00000000000000c0 T ir_expression::equals(ir_instruction const*, ir_node_type) const
00000000003653e0 0000000000000030 W ir_expression::accept(ir_visitor*)
0000000000365410 0000000000000090 T ir_constant::equals(ir_instruction const*, ir_node_type) const
00000000003654a0 0000000000000028 T ir_dereference_variable::equals(ir_instruction const*, ir_node_type) const
00000000003654d0 000000000000009c T ir_dereference_array::equals(ir_instruction const*, ir_node_type) const
0000000000365570 0000000000000068 T ir_swizzle::equals(ir_instruction const*, ir_node_type) const
00000000003655e0 0000000000000208 T ir_texture::equals(ir_instruction const*, ir_node_type) const
00000000003657f0 0000000000000414 t ir_function::matching_signature(_mesa_glsl_parse_state*, exec_list const*, bool, bool*)
0000000000365c10 0000000000000018 t ir_function::matching_signature(_mesa_glsl_parse_state*, exec_list const*, bool)
0000000000365c30 00000000000000c4 t ir_function::exact_matching_signature(_mesa_glsl_parse_state*, exec_list const*)
0000000000365d00 0000000000000034 T ir_hierarchical_visitor::visit_enter(ir_discard*)
0000000000365d00 0000000000000034 T ir_hierarchical_visitor::visit_enter(ir_swizzle*)
0000000000365d00 0000000000000034 t ir_hierarchical_visitor::visit_enter(ir_texture*)
0000000000365d00 0000000000000034 T ir_hierarchical_visitor::visit_enter(ir_function*)
0000000000365d00 0000000000000034 T ir_hierarchical_visitor::visit_enter(ir_assignment*)
0000000000365d00 0000000000000034 t ir_hierarchical_visitor::visit_enter(ir_expression*)
0000000000365d00 0000000000000034 T ir_hierarchical_visitor::visit_enter(ir_emit_vertex*)
0000000000365d00 0000000000000034 T ir_hierarchical_visitor::visit_enter(ir_end_primitive*)
0000000000365d00 0000000000000034 t ir_hierarchical_visitor::visit_enter(ir_dereference_array*)
0000000000365d00 0000000000000034 t ir_hierarchical_visitor::visit_enter(ir_dereference_record*)
0000000000365d00 0000000000000034 T ir_hierarchical_visitor::visit_enter(ir_function_signature*)
0000000000365d00 0000000000000034 T ir_hierarchical_visitor::visit_enter(ir_if*)
0000000000365d00 0000000000000034 T ir_hierarchical_visitor::visit_enter(ir_call*)
0000000000365d00 0000000000000034 T ir_hierarchical_visitor::visit_enter(ir_loop*)
0000000000365d00 0000000000000034 T ir_hierarchical_visitor::visit_enter(ir_demote*)
0000000000365d00 0000000000000034 T ir_hierarchical_visitor::visit_enter(ir_return*)
0000000000365d40 0000000000000034 T ir_hierarchical_visitor::visit_leave(ir_discard*)
0000000000365d40 0000000000000034 T ir_hierarchical_visitor::visit_leave(ir_swizzle*)
0000000000365d40 0000000000000034 T ir_hierarchical_visitor::visit_leave(ir_texture*)
0000000000365d40 0000000000000034 T ir_hierarchical_visitor::visit_leave(ir_function*)
0000000000365d40 0000000000000034 t ir_hierarchical_visitor::visit_leave(ir_assignment*)
0000000000365d40 0000000000000034 T ir_hierarchical_visitor::visit_leave(ir_expression*)
0000000000365d40 0000000000000034 T ir_hierarchical_visitor::visit_leave(ir_emit_vertex*)
0000000000365d40 0000000000000034 T ir_hierarchical_visitor::visit_leave(ir_end_primitive*)
0000000000365d40 0000000000000034 T ir_hierarchical_visitor::visit_leave(ir_dereference_array*)
0000000000365d40 0000000000000034 T ir_hierarchical_visitor::visit_leave(ir_dereference_record*)
0000000000365d40 0000000000000034 T ir_hierarchical_visitor::visit_leave(ir_function_signature*)
0000000000365d40 0000000000000034 T ir_hierarchical_visitor::visit_leave(ir_if*)
0000000000365d40 0000000000000034 t ir_hierarchical_visitor::visit_leave(ir_call*)
0000000000365d40 0000000000000034 T ir_hierarchical_visitor::visit_leave(ir_loop*)
0000000000365d40 0000000000000034 T ir_hierarchical_visitor::visit_leave(ir_demote*)
0000000000365d40 0000000000000034 T ir_hierarchical_visitor::visit_leave(ir_return*)
0000000000365d80 000000000000004c T ir_hierarchical_visitor::visit(ir_barrier*)
0000000000365d80 000000000000004c T ir_hierarchical_visitor::visit(ir_constant*)
0000000000365d80 000000000000004c T ir_hierarchical_visitor::visit(ir_variable*)
0000000000365d80 000000000000004c T ir_hierarchical_visitor::visit(ir_loop_jump*)
0000000000365d80 000000000000004c T ir_hierarchical_visitor::visit(ir_dereference_variable*)
0000000000365d80 000000000000004c T ir_hierarchical_visitor::visit(ir_rvalue*)
0000000000365dd0 000000000000001c T ir_hierarchical_visitor::ir_hierarchical_visitor()
0000000000365dd0 000000000000001c t ir_hierarchical_visitor::ir_hierarchical_visitor()
0000000000365df0 0000000000000008 t ir_hierarchical_visitor::run(exec_list*)
0000000000365e00 000000000000003c t visit_tree(ir_instruction*, void (*)(ir_instruction*, void*), void*, void (*)(ir_instruction*, void*), void*)
0000000000365e40 0000000000000004 W ir_control_flow_visitor::visit(ir_emit_vertex*)
0000000000365e50 0000000000000004 W ir_control_flow_visitor::visit(ir_end_primitive*)
0000000000365e60 0000000000000004 W ir_control_flow_visitor::visit(ir_barrier*)
0000000000365e70 000000000000001c T ir_dereference_variable::accept(ir_hierarchical_visitor*)
0000000000365e90 000000000000001c T ir_barrier::accept(ir_hierarchical_visitor*)
0000000000365eb0 0000000000000004 W ir_barrier::~ir_barrier()
0000000000365eb0 0000000000000004 W ir_barrier::~ir_barrier()
0000000000365ec0 0000000000000004 W ir_end_primitive::~ir_end_primitive()
0000000000365ec0 0000000000000004 W ir_end_primitive::~ir_end_primitive()
0000000000365ed0 0000000000000004 W ir_emit_vertex::~ir_emit_vertex()
0000000000365ed0 0000000000000004 W ir_emit_vertex::~ir_emit_vertex()
0000000000365ee0 0000000000000058 W ir_emit_vertex::clone(void*, hash_table*) const
0000000000365f40 0000000000000058 W ir_end_primitive::clone(void*, hash_table*) const
0000000000365fa0 0000000000000034 W ir_barrier::clone(void*, hash_table*) const
0000000000365fe0 0000000000000004 W ir_barrier::~ir_barrier()
0000000000365ff0 0000000000000004 W ir_end_primitive::~ir_end_primitive()
0000000000366000 0000000000000004 W ir_emit_vertex::~ir_emit_vertex()
0000000000366010 0000000000000088 T ir_emit_vertex::accept(ir_hierarchical_visitor*)
00000000003660a0 0000000000000088 T ir_end_primitive::accept(ir_hierarchical_visitor*)
0000000000366130 0000000000000030 W ir_barrier::accept(ir_visitor*)
0000000000366160 0000000000000030 W ir_emit_vertex::accept(ir_visitor*)
0000000000366190 0000000000000030 W ir_end_primitive::accept(ir_visitor*)
00000000003661c0 00000000000000c0 t visit_list_elements(ir_hierarchical_visitor*, exec_list*, bool)
0000000000366280 000000000000001c T ir_rvalue::accept(ir_hierarchical_visitor*)
00000000003662a0 000000000000001c T ir_variable::accept(ir_hierarchical_visitor*)
00000000003662c0 0000000000000078 T ir_loop::accept(ir_hierarchical_visitor*)
0000000000366340 000000000000001c T ir_loop_jump::accept(ir_hierarchical_visitor*)
0000000000366360 00000000000000a0 T ir_function_signature::accept(ir_hierarchical_visitor*)
0000000000366400 0000000000000078 T ir_function::accept(ir_hierarchical_visitor*)
0000000000366480 00000000000000bc T ir_expression::accept(ir_hierarchical_visitor*)
0000000000366540 0000000000000168 T ir_texture::accept(ir_hierarchical_visitor*)
00000000003666b0 000000000000007c T ir_swizzle::accept(ir_hierarchical_visitor*)
0000000000366730 00000000000000c4 T ir_dereference_array::accept(ir_hierarchical_visitor*)
0000000000366800 000000000000007c T ir_dereference_record::accept(ir_hierarchical_visitor*)
0000000000366880 00000000000000cc t ir_assignment::accept(ir_hierarchical_visitor*)
0000000000366950 000000000000001c T ir_constant::accept(ir_hierarchical_visitor*)
0000000000366970 00000000000000d8 T ir_call::accept(ir_hierarchical_visitor*)
0000000000366a50 0000000000000080 T ir_return::accept(ir_hierarchical_visitor*)
0000000000366ad0 0000000000000080 T ir_discard::accept(ir_hierarchical_visitor*)
0000000000366b50 0000000000000060 T ir_demote::accept(ir_hierarchical_visitor*)
0000000000366bb0 00000000000000c8 T ir_if::accept(ir_hierarchical_visitor*)
0000000000366c80 000000000000001c T ir_print_visitor::visit(ir_rvalue*)
0000000000366ca0 0000000000000074 T ir_print_visitor::visit(ir_dereference_array*)
0000000000366d20 0000000000000074 T ir_print_visitor::visit(ir_dereference_record*)
0000000000366da0 000000000000001c T ir_print_visitor::visit(ir_demote*)
0000000000366dc0 0000000000000060 T ir_print_visitor::visit(ir_emit_vertex*)
0000000000366e20 0000000000000060 T ir_print_visitor::visit(ir_end_primitive*)
0000000000366e80 000000000000001c T ir_print_visitor::visit(ir_barrier*)
0000000000366ea0 00000000000000d4 T ir_print_visitor::visit(ir_swizzle*)
0000000000366f80 00000000000000ec T ir_print_visitor::visit(ir_assignment*)
0000000000367070 0000000000000068 T ir_print_visitor::visit(ir_discard*)
00000000003670e0 0000000000000068 T ir_print_visitor::visit(ir_return*)
0000000000367150 00000000000000c4 t print_type(__sFILE*, glsl_type const*)
0000000000367220 00000000000000b4 T ir_print_visitor::visit(ir_expression*)
00000000003672e0 0000000000000024 T ir_print_visitor::visit(ir_loop_jump*)
0000000000367310 0000000000000040 T ir_print_visitor::~ir_print_visitor()
0000000000367310 0000000000000040 T ir_print_visitor::~ir_print_visitor()
0000000000367350 0000000000000294 T ir_print_visitor::visit(ir_texture*)
00000000003675f0 0000000000000060 t print_float_constant(__sFILE*, float)
0000000000367650 00000000000000dc T ir_print_visitor::visit(ir_call*)
0000000000367730 00000000000003f8 T ir_print_visitor::visit(ir_constant*)
0000000000367b30 000000000000004c T ir_print_visitor::~ir_print_visitor()
0000000000367b80 0000000000000130 T ir_print_visitor::visit(ir_loop*)
0000000000367cb0 0000000000000188 T ir_print_visitor::visit(ir_function*)
0000000000367e40 0000000000000348 T ir_print_visitor::visit(ir_function_signature*)
0000000000368190 00000000000002e0 T ir_print_visitor::visit(ir_if*)
0000000000368470 000000000000008c t ir_instruction::fprint(__sFILE*) const
0000000000368500 000000000000002c t ir_instruction::print() const
0000000000368530 000000000000018c t _mesa_print_ir
00000000003686c0 00000000000000e0 t ir_print_visitor::unique_name(ir_variable*)
00000000003687a0 000000000000033c T ir_print_visitor::visit(ir_variable*)
0000000000368ae0 0000000000000064 T ir_print_visitor::visit(ir_dereference_variable*)
0000000000368b50 0000000000000004 t validate_ir_tree(exec_list*)
0000000000368b60 0000000000000014 t (anonymous namespace)::deref_type_updater::visit(ir_dereference_variable*)
0000000000368b80 0000000000000024 t (anonymous namespace)::deref_type_updater::visit_leave(ir_dereference_array*)
0000000000368bb0 0000000000000028 t (anonymous namespace)::deref_type_updater::visit_leave(ir_dereference_record*)
0000000000368be0 0000000000000004 t (anonymous namespace)::array_resize_visitor::~array_resize_visitor()
0000000000368be0 0000000000000004 t (anonymous namespace)::array_resize_visitor::~array_resize_visitor()
0000000000368bf0 000000000000005c t (anonymous namespace)::find_emit_vertex_visitor::visit_leave(ir_emit_vertex*)
0000000000368c50 000000000000005c t (anonymous namespace)::find_emit_vertex_visitor::visit_leave(ir_end_primitive*)
0000000000368cb0 0000000000000010 t assign_attribute_or_color_locations(void*, gl_shader_program*, gl_constants*, unsigned int, bool)::temp_attr::compare(void const*, void const*)
0000000000368cc0 0000000000000170 t match_explicit_outputs_to_inputs(gl_linked_shader*, gl_linked_shader*)
0000000000368e30 000000000000004c t (anonymous namespace)::find_deref_visitor::visit(ir_dereference_variable*)
0000000000368e80 00000000000001dc t move_non_declarations(exec_list*, exec_node*, bool, gl_linked_shader*)
0000000000369060 0000000000000008 t (anonymous namespace)::array_resize_visitor::~array_resize_visitor()
0000000000369070 0000000000000098 t linker_optimisation_loop(gl_context*, exec_list*, unsigned int)
0000000000369110 00000000000000ec t remap_variables(ir_instruction*, gl_linked_shader*, hash_table*)::remap_visitor::visit(ir_dereference_variable*)
0000000000369200 0000000000000058 t set_always_active_io(exec_list*, ir_variable_mode) [clone .isra.0]
0000000000369260 0000000000000474 t add_shader_variable(gl_context const*, gl_shader_program*, set*, unsigned int, unsigned int, ir_variable*, char const*, glsl_type const*, bool, int, bool, glsl_type const*) [clone .isra.0]
00000000003696e0 00000000000001fc t add_interface_variables(gl_context const*, gl_shader_program*, set*, unsigned int, unsigned int) [clone .isra.0]
00000000003698e0 00000000000000dc t (anonymous namespace)::dynamic_sampler_array_indexing_visitor::visit_enter(ir_dereference_array*)
00000000003699c0 00000000000002ac t add_packed_varyings(gl_context const*, gl_shader_program*, set*, int, unsigned int) [clone .isra.0]
0000000000369c70 00000000000001bc t (anonymous namespace)::find_assignment_visitor::visit_enter(ir_call*)
0000000000369e30 00000000000000a8 t (anonymous namespace)::find_assignment_visitor::visit_enter(ir_assignment*)
0000000000369ee0 00000000000000a8 t linker_error
0000000000369f90 0000000000000104 t (anonymous namespace)::array_resize_visitor::visit(ir_variable*)
000000000036a0a0 0000000000000240 t analyze_clip_cull_usage(gl_shader_program*, gl_linked_shader*, gl_context*, shader_info*)
000000000036a2e0 00000000000002e0 t interstage_cross_validate_uniform_blocks(gl_shader_program*, bool)
000000000036a5c0 00000000000000a0 t linker_warning
000000000036a660 000000000000095c t assign_attribute_or_color_locations(void*, gl_shader_program*, gl_constants*, unsigned int, bool)
000000000036afc0 00000000000000c8 t parse_program_resource_name(char const*, char const**)
000000000036b090 000000000000006c t link_invalidate_variable_locations(exec_list*)
000000000036b100 0000000000000128 t validate_intrastage_arrays(gl_shader_program*, ir_variable*, ir_variable*, bool)
000000000036b230 0000000000000624 t cross_validate_globals(gl_context*, gl_shader_program*, exec_list*, glsl_symbol_table*, bool) [clone .isra.0]
000000000036b860 00000000000000a8 t array_sizing_visitor::update_interface_members_array(glsl_type const*, glsl_type const*)
000000000036b910 00000000000005d8 W array_sizing_visitor::visit(ir_variable*)
000000000036bef0 0000000000001340 t link_intrastage_shaders(void*, gl_context*, gl_shader_program*, gl_shader**, unsigned int, bool)
000000000036d230 00000000000005d0 t build_program_resource_list(gl_context*, gl_shader_program*, bool)
000000000036d800 0000000000001a60 t link_shaders(gl_context*, gl_shader_program*)
000000000036f260 0000000000000050 t link_util_should_add_buffer_variable
000000000036f2b0 00000000000000e0 t link_util_add_program_resource
000000000036f390 000000000000008c t link_util_find_empty_block
000000000036f420 00000000000000ac t link_util_update_empty_uniform_locations
000000000036f4d0 0000000000000098 t link_util_check_subroutine_resources
000000000036f570 0000000000000264 t link_util_check_uniform_resources
000000000036f7e0 0000000000000134 t link_util_calculate_subroutine_compat
000000000036f920 00000000000000f4 t _mark_array_elements_referenced(array_deref_range const*, unsigned int, unsigned int, unsigned int, unsigned int*)
000000000036fa20 000000000000001c t link_util_mark_array_elements_referenced
000000000036fa40 0000000000000018 t (anonymous namespace)::cmp_actives(void const*, void const*)
000000000036fa60 00000000000002a4 t (anonymous namespace)::process_atomic_variable(glsl_type const*, gl_shader_program*, unsigned int*, ir_variable*, (anonymous namespace)::active_atomic_buffer*, unsigned int*, int*, unsigned int)
000000000036fd10 00000000000002f8 t (anonymous namespace)::find_active_atomic_counters(gl_context*, gl_shader_program*, unsigned int*)
0000000000370010 000000000000036c t link_assign_atomic_counter_resources(gl_context*, gl_shader_program*)
0000000000370380 000000000000025c t link_check_atomic_counter_resources(gl_context*, gl_shader_program*)
00000000003705e0 00000000000000c0 t (anonymous namespace)::call_link_visitor::visit_leave(ir_call*)
00000000003706a0 0000000000000064 t find_matching_signature(char const*, exec_list const*, glsl_symbol_table*)
0000000000370710 0000000000000320 t (anonymous namespace)::call_link_visitor::visit_enter(ir_call*)
0000000000370a30 000000000000001c t (anonymous namespace)::call_link_visitor::visit(ir_variable*)
0000000000370a50 0000000000000180 t (anonymous namespace)::call_link_visitor::visit(ir_dereference_variable*)
0000000000370bd0 000000000000009c t link_function_calls(gl_shader_program*, gl_linked_shader*, gl_shader**, unsigned int)
0000000000370c70 000000000000011c t (anonymous namespace)::interstage_member_mismatch(gl_shader_program*, glsl_type const*, glsl_type const*)
0000000000370d90 0000000000000260 t (anonymous namespace)::intrastage_match(ir_variable*, ir_variable*, gl_shader_program*, bool)
0000000000370ff0 0000000000000310 t validate_intrastage_interface_blocks(gl_shader_program*, gl_shader const**, unsigned int)
0000000000371300 00000000000004e0 t validate_interstage_inout_blocks(gl_shader_program*, gl_linked_shader const*, gl_linked_shader const*)
00000000003717e0 00000000000001f0 t validate_interstage_uniform_blocks(gl_shader_program*, gl_linked_shader**)
00000000003719d0 0000000000000004 T program_resource_visitor::enter_record(glsl_type const*, char const*, bool, glsl_interface_packing)
00000000003719d0 0000000000000004 T program_resource_visitor::leave_record(glsl_type const*, char const*, bool, glsl_interface_packing)
00000000003719e0 0000000000000004 T program_resource_visitor::set_buffer_offset(unsigned int)
00000000003719e0 0000000000000004 T program_resource_visitor::set_record_array_count(unsigned int)
00000000003719f0 0000000000000008 W parcel_out_uniform_storage::set_buffer_offset(unsigned int)
0000000000371a00 0000000000000008 W parcel_out_uniform_storage::set_record_array_count(unsigned int)
0000000000371a10 0000000000000028 W parcel_out_uniform_storage::~parcel_out_uniform_storage()
0000000000371a10 0000000000000028 W parcel_out_uniform_storage::~parcel_out_uniform_storage()
0000000000371a40 000000000000007c t get_top_level_name(char const*)
0000000000371ac0 00000000000000dc t is_top_level_shader_storage_block_member(char const*, char const*, char const*)
0000000000371ba0 0000000000000078 W parcel_out_uniform_storage::leave_record(glsl_type const*, char const*, bool, glsl_interface_packing)
0000000000371c20 0000000000000078 W parcel_out_uniform_storage::enter_record(glsl_type const*, char const*, bool, glsl_interface_packing)
0000000000371ca0 0000000000000034 W parcel_out_uniform_storage::~parcel_out_uniform_storage()
0000000000371ce0 0000000000000070 t assign_hidden_uniform_slot_id(char const*, unsigned int, void*)
0000000000371d50 00000000000001dc t parcel_out_uniform_storage::set_opaque_indices(glsl_type const*, gl_uniform_storage*, char const*, unsigned int&, string_to_uint_map*) [clone .isra.0]
0000000000371f30 0000000000000214 t (anonymous namespace)::count_uniform_size::visit_field(glsl_type const*, char const*, bool, glsl_type const*, glsl_interface_packing, bool)
0000000000372150 0000000000000ad4 W parcel_out_uniform_storage::visit_field(glsl_type const*, char const*, bool, glsl_type const*, glsl_interface_packing, bool)
0000000000372c30 00000000000003d4 t program_resource_visitor::recursion(glsl_type const*, char**, unsigned long, bool, glsl_type const*, glsl_interface_packing, bool, unsigned int, glsl_struct_field const*)
0000000000373010 00000000000000b4 t program_resource_visitor::process(glsl_type const*, char const*, bool)
00000000003730d0 0000000000000228 t program_resource_visitor::process(ir_variable*, glsl_type const*, bool)
0000000000373300 000000000000001c t program_resource_visitor::process(ir_variable*, bool)
0000000000373320 000000000000005c t link_calculate_matrix_stride(glsl_type const*, bool, glsl_interface_packing)
0000000000373380 00000000000004b8 t parcel_out_uniform_storage::set_and_process(ir_variable*)
0000000000373840 0000000000000ea0 t link_assign_uniform_locations(gl_shader_program*, gl_context*)
00000000003746e0 0000000000000288 t linker::set_opaque_binding(void*, gl_shader_program*, ir_variable const*, glsl_type const*, char const*, int*)
0000000000374970 00000000000000a8 t linker::copy_constant_to_storage(gl_constant_value*, ir_constant const*, glsl_base_type, unsigned int, unsigned int)
0000000000374a20 00000000000002c8 t linker::set_uniform_initializer(void*, gl_shader_program*, char const*, glsl_type const*, ir_constant*, unsigned int)
0000000000374cf0 00000000000001b4 t link_set_uniform_initializers(gl_shader_program*, unsigned int)
0000000000374eb0 0000000000000008 t (anonymous namespace)::ubo_visitor::set_buffer_offset(unsigned int)
0000000000374ec0 0000000000000010 t (anonymous namespace)::count_block_size::visit_field(glsl_type const*, char const*, bool, glsl_type const*, glsl_interface_packing, bool)
0000000000374ed0 0000000000000068 t resize_block_array(glsl_type const*, uniform_block_array_elements*)
0000000000374f40 0000000000000188 t process_block_array_leaf(char const*, gl_uniform_block*, (anonymous namespace)::ubo_visitor*, gl_uniform_buffer_variable*, link_uniform_block_active const*, unsigned int*, unsigned int, unsigned int, gl_context*, gl_shader_program*)
00000000003750d0 0000000000000204 t (anonymous namespace)::ubo_visitor::visit_field(glsl_type const*, char const*, bool, glsl_type const*, glsl_interface_packing, bool)
00000000003752e0 0000000000000134 t process_block_array(uniform_block_array_elements*, char**, unsigned long, gl_uniform_block*, (anonymous namespace)::ubo_visitor*, gl_uniform_buffer_variable*, link_uniform_block_active const*, unsigned int*, unsigned int, gl_context*, gl_shader_program*, unsigned int)
0000000000375420 0000000000000068 t (anonymous namespace)::ubo_visitor::enter_record(glsl_type const*, char const*, bool, glsl_interface_packing)
0000000000375420 0000000000000068 t (anonymous namespace)::ubo_visitor::leave_record(glsl_type const*, char const*, bool, glsl_interface_packing)
0000000000375490 00000000000001ac t create_buffer_blocks(void*, gl_context*, gl_shader_program*, gl_uniform_block**, unsigned int, hash_table*, unsigned int, bool) [clone .part.0]
0000000000375640 0000000000000318 t link_uniform_blocks(void*, gl_context*, gl_shader_program*, gl_linked_shader*, gl_uniform_block**, unsigned int*, gl_uniform_block**, unsigned int*)
0000000000375960 000000000000023c t link_cross_validate_uniform_block(void*, gl_uniform_block**, unsigned int*, gl_uniform_block*)
0000000000375ba0 0000000000000090 t compute_variable_location_slot(ir_variable*, gl_shader_stage)
0000000000375c30 0000000000000028 t cmp_xfb_offset(void const*, void const*)
0000000000375c60 0000000000000028 t (anonymous namespace)::varying_matches::match_comparator(void const*, void const*)
0000000000375c90 0000000000000430 t check_location_aliasing(explicit_location_info (*) [4], ir_variable*, unsigned int, unsigned int, unsigned int, glsl_type const*, unsigned int, bool, bool, bool, gl_shader_program*, gl_shader_stage)
00000000003760c0 0000000000000060 t io_variable_cmp(void const*, void const*)
0000000000376120 0000000000000438 t cross_validate_types_and_qualifiers(gl_context*, gl_shader_program*, ir_variable const*, ir_variable const*, gl_shader_stage, gl_shader_stage)
0000000000376560 0000000000000094 t cross_validate_front_and_back_color(gl_context*, gl_shader_program*, ir_variable const*, ir_variable const*, ir_variable const*, gl_shader_stage, gl_shader_stage)
0000000000376600 000000000000023c t create_xfb_varying_names(void*, glsl_type const*, char**, unsigned long, unsigned int*, char const*, glsl_type const*, char***)
0000000000376840 00000000000000ec t canonicalize_shader_io(exec_list*, ir_variable_mode)
0000000000376930 000000000000007c W tfeedback_candidate_generator::visit_field(glsl_type const*, char const*, bool, glsl_type const*, glsl_interface_packing, bool)
00000000003769b0 0000000000000048 t (anonymous namespace)::varying_matches::xfb_comparator(void const*, void const*)
0000000000376a00 00000000000000d8 t remove_unused_shader_inputs_and_outputs(bool, gl_linked_shader*, ir_variable_mode) [clone .part.0]
0000000000376ae0 0000000000000048 t (anonymous namespace)::varying_matches::not_xfb_comparator(void const*, void const*)
0000000000376b30 000000000000029c t validate_explicit_variable_location(gl_context*, explicit_location_info (*) [4], ir_variable*, gl_shader_program*, gl_linked_shader*)
0000000000376dd0 0000000000000170 t reserved_varying_slot(gl_linked_shader*, ir_variable_mode)
0000000000376f40 00000000000004a4 t (anonymous namespace)::varying_matches::record(ir_variable*, ir_variable*) [clone .part.0]
00000000003773f0 0000000000000148 t validate_first_and_last_interface_explicit_locations(gl_context*, gl_shader_program*, gl_shader_stage, gl_shader_stage)
0000000000377540 00000000000003ec t cross_validate_outputs_to_inputs(gl_context*, gl_shader_program*, gl_linked_shader*, gl_linked_shader*)
0000000000377930 0000000000000214 t tfeedback_decl::init(gl_context*, void const*, char const*)
0000000000377b50 0000000000000304 t tfeedback_decl::assign_location(gl_context*, gl_shader_program*)
0000000000377e60 00000000000000c0 t tfeedback_decl::get_num_outputs() const
0000000000377f20 00000000000004b8 t tfeedback_decl::store(gl_context*, gl_shader_program*, gl_transform_feedback_info*, unsigned int, unsigned int, unsigned int, unsigned int**, bool*, bool, void const*) const
00000000003783e0 00000000000000c0 t tfeedback_decl::find_candidate(gl_shader_program*, hash_table*)
00000000003784a0 0000000000000110 t linker::populate_consumer_input_sets(void*, exec_list*, hash_table*, hash_table*, ir_variable**)
00000000003785b0 00000000000000cc t linker::get_matching_input(void*, ir_variable const*, hash_table*, hash_table*, ir_variable**)
0000000000378680 0000000000001058 t assign_varying_locations(gl_context*, void*, gl_shader_program*, gl_linked_shader*, gl_linked_shader*, unsigned int, tfeedback_decl*, unsigned long)
00000000003796e0 0000000000000c2c t link_varyings(gl_shader_program*, unsigned int, unsigned int, gl_context*, void*)
000000000037a310 0000000000000030 t (anonymous namespace)::loop_analysis::visit(ir_loop_jump*)
000000000037a340 0000000000000028 t (anonymous namespace)::loop_analysis::visit_enter(ir_call*)
000000000037a370 0000000000000024 t (anonymous namespace)::loop_analysis::visit_enter(ir_if*)
000000000037a3a0 0000000000000024 t (anonymous namespace)::loop_analysis::visit_leave(ir_if*)
000000000037a3d0 0000000000000028 t (anonymous namespace)::loop_analysis::visit_enter(ir_assignment*)
000000000037a400 0000000000000010 t (anonymous namespace)::loop_analysis::visit_leave(ir_assignment*)
000000000037a410 000000000000000c W loop_variable_state::_ralloc_destructor(void*)
000000000037a420 0000000000000088 W examine_rhs::visit(ir_dereference_variable*)
000000000037a4b0 0000000000000198 t (anonymous namespace)::loop_analysis::visit(ir_dereference_variable*)
000000000037a650 000000000000002c t loop_state::~loop_state()
000000000037a650 000000000000002c T loop_state::~loop_state()
000000000037a680 00000000000000cc t loop_state::insert(ir_loop*)
000000000037a750 0000000000000040 t (anonymous namespace)::loop_analysis::visit_enter(ir_loop*)
000000000037a790 0000000000000020 t loop_state::get(ir_loop const*)
000000000037a7b0 0000000000000038 t loop_variable_state::get(ir_variable const*)
000000000037a7f0 000000000000009c t analyze_loop_variables(exec_list*)
000000000037a890 0000000000000b9c t (anonymous namespace)::loop_analysis::visit_leave(ir_loop*)
000000000037b430 0000000000000018 W loop_unroll_count::visit_enter(ir_assignment*)
000000000037b450 0000000000000018 W loop_unroll_count::visit_enter(ir_expression*)
000000000037b470 0000000000000014 W loop_unroll_count::visit_enter(ir_loop*)
000000000037b490 00000000000001e8 W loop_unroll_count::visit_enter(ir_dereference_array*)
000000000037b680 00000000000001c0 t (anonymous namespace)::loop_unroll_visitor::complex_unroll(ir_loop*, int, bool, bool, bool)
000000000037b840 000000000000025c t (anonymous namespace)::loop_unroll_visitor::simple_unroll(ir_loop*, int)
000000000037baa0 000000000000055c t (anonymous namespace)::loop_unroll_visitor::visit_leave(ir_loop*)
000000000037c000 0000000000000064 t unroll_loops(exec_list*, loop_state*, gl_shader_compiler_options const*)
000000000037c070 0000000000000058 t (anonymous namespace)::lower_builtins_visitor::visit_leave(ir_call*)
000000000037c0d0 0000000000000050 t lower_builtins(exec_list*)
000000000037c120 0000000000000008 t (anonymous namespace)::lower_const_array_visitor::visit_enter(ir_texture*)
000000000037c130 000000000000013c t (anonymous namespace)::lower_const_array_visitor::handle_rvalue(ir_rvalue**)
000000000037c270 00000000000000c8 t lower_const_arrays_to_uniforms(exec_list*, unsigned int, unsigned int)
000000000037c340 000000000000009c t (anonymous namespace)::lower_cs_derived_visitor::add_system_value(int, glsl_type const*, char const*)
000000000037c3e0 00000000000001cc t (anonymous namespace)::lower_cs_derived_visitor::find_sysvals() [clone .part.0]
000000000037c5b0 00000000000003b8 t (anonymous namespace)::lower_cs_derived_visitor::visit(ir_dereference_variable*)
000000000037c970 0000000000000098 t lower_cs_derived(gl_linked_shader*)
000000000037ca10 00000000000000cc t (anonymous namespace)::lower_discard_flow_visitor::generate_discard_break()
000000000037cae0 000000000000004c t (anonymous namespace)::lower_discard_flow_visitor::visit_enter(ir_loop*)
000000000037cb30 00000000000000d8 t (anonymous namespace)::lower_discard_flow_visitor::visit_enter(ir_discard*)
000000000037cc10 00000000000000d0 t (anonymous namespace)::lower_discard_flow_visitor::visit_enter(ir_function_signature*)
000000000037cce0 0000000000000068 t (anonymous namespace)::lower_discard_flow_visitor::visit(ir_loop_jump*)
000000000037cd50 00000000000000b0 t lower_discard_flow(exec_list*)
000000000037ce00 0000000000000004 t (anonymous namespace)::lower_distance_visitor_counter::handle_rvalue(ir_rvalue**)
000000000037ce10 0000000000000138 t (anonymous namespace)::lower_distance_visitor_counter::visit(ir_variable*)
000000000037cf50 00000000000000a8 t (anonymous namespace)::lower_distance_visitor::is_distance_vec8(ir_rvalue*)
000000000037d000 00000000000000a4 t (anonymous namespace)::lower_distance_visitor::fix_lhs(ir_assignment*) [clone .part.0]
000000000037d0b0 00000000000001b4 t (anonymous namespace)::lower_distance_visitor::visit(ir_variable*)
000000000037d270 0000000000000478 t (anonymous namespace)::lower_distance_visitor::handle_rvalue(ir_rvalue**)
000000000037d6f0 0000000000000224 t (anonymous namespace)::lower_distance_visitor::visit_leave(ir_assignment*)
000000000037d920 000000000000016c t lower_clip_cull_distance(gl_shader_program*, gl_linked_shader*)
000000000037da90 00000000000002a8 t (anonymous namespace)::lower_distance_visitor::visit_leave(ir_call*)
000000000037dd40 00000000000000e4 t (anonymous namespace)::lower_instructions_visitor::_imm_fp(void*, glsl_type const*, double, unsigned int) [clone .constprop.0] [clone .isra.0]
000000000037de30 0000000000000078 t (anonymous namespace)::lower_instructions_visitor::_carry(ir_builder::operand, ir_builder::operand) [clone .isra.0]
000000000037deb0 0000000000000070 t (anonymous namespace)::lower_instructions_visitor::div_to_mul_rcp(ir_expression*)
000000000037df20 000000000000005c t (anonymous namespace)::lower_instructions_visitor::dfloor_to_dfrac(ir_expression*)
000000000037df80 00000000000002fc t (anonymous namespace)::lower_instructions_visitor::mod_to_floor(ir_expression*)
000000000037e280 000000000000023c t (anonymous namespace)::lower_instructions_visitor::int_div_to_mul_rcp(ir_expression*)
000000000037e4c0 0000000000000290 t (anonymous namespace)::lower_instructions_visitor::double_dot_to_fma(ir_expression*)
000000000037e750 00000000000001e8 t (anonymous namespace)::lower_instructions_visitor::dceil_to_dfrac(ir_expression*)
000000000037e940 0000000000000318 t (anonymous namespace)::lower_instructions_visitor::dfrexp_exp_to_arith(ir_expression*)
000000000037ec60 0000000000000308 t (anonymous namespace)::lower_instructions_visitor::dtrunc_to_dfrac(ir_expression*)
000000000037ef70 0000000000000428 t (anonymous namespace)::lower_instructions_visitor::dround_even_to_dfrac(ir_expression*)
000000000037f3a0 000000000000058c t (anonymous namespace)::lower_instructions_visitor::dfrexp_sig_to_arith(ir_expression*)
000000000037f930 0000000000000404 t (anonymous namespace)::lower_instructions_visitor::extract_to_shifts(ir_expression*)
000000000037fd40 0000000000000474 t (anonymous namespace)::lower_instructions_visitor::bit_count_to_math(ir_expression*)
00000000003801c0 0000000000000ba0 t (anonymous namespace)::lower_instructions_visitor::dldexp_to_arith(ir_expression*)
0000000000380d60 0000000000000af4 t (anonymous namespace)::lower_instructions_visitor::ldexp_to_arith(ir_expression*)
0000000000381860 0000000000001380 t (anonymous namespace)::lower_instructions_visitor::imul_high_to_mul(ir_expression*)
0000000000382be0 00000000000021e8 t (anonymous namespace)::lower_instructions_visitor::visit_leave(ir_expression*)
0000000000384dd0 0000000000000060 t lower_instructions(exec_list*, unsigned int)
0000000000384e30 0000000000000004 t (anonymous namespace)::ir_lower_jumps_visitor::visit(ir_discard*)
0000000000384e40 0000000000000004 t (anonymous namespace)::ir_lower_jumps_visitor::~ir_lower_jumps_visitor()
0000000000384e40 0000000000000004 t (anonymous namespace)::ir_lower_jumps_visitor::~ir_lower_jumps_visitor()
0000000000384e50 0000000000000178 t (anonymous namespace)::ir_lower_jumps_visitor::create_lowered_break()
0000000000384fd0 0000000000000284 t (anonymous namespace)::ir_lower_jumps_visitor::insert_lowered_return(ir_return*)
0000000000385260 0000000000000008 t (anonymous namespace)::ir_lower_jumps_visitor::~ir_lower_jumps_visitor()
0000000000385270 0000000000000040 t (anonymous namespace)::ir_lower_jumps_visitor::visit(ir_return*)
00000000003852b0 000000000000004c t (anonymous namespace)::ir_lower_jumps_visitor::visit(ir_loop_jump*)
0000000000385300 0000000000000070 t (anonymous namespace)::ir_lower_jumps_visitor::visit(ir_function*)
0000000000385370 00000000000001ec t (anonymous namespace)::ir_lower_jumps_visitor::visit(ir_function_signature*)
0000000000385560 0000000000000544 t (anonymous namespace)::ir_lower_jumps_visitor::visit(ir_loop*)
0000000000385ab0 0000000000000ab8 t (anonymous namespace)::ir_lower_jumps_visitor::visit(ir_if*)
0000000000386570 000000000000008c t do_lower_jumps(exec_list*, bool, bool, bool, bool, bool)
0000000000386600 0000000000000094 T lower_packed_varyings_gs_splicer::visit_leave(ir_emit_vertex*)
00000000003866a0 0000000000000094 T lower_packed_varyings_return_splicer::visit_leave(ir_return*)
0000000000386740 00000000000011b0 t (anonymous namespace)::lower_packed_varyings_visitor::lower_rvalue(ir_rvalue*, unsigned int, ir_variable*, char const*, bool, unsigned int)
00000000003878f0 0000000000000530 t lower_packed_varyings(void*, unsigned int, unsigned char const*, ir_variable_mode, unsigned int, gl_linked_shader*, bool, bool, bool)
0000000000387e20 0000000000000144 t (anonymous namespace)::lower_packed_varyings_visitor::lower_arraylike(ir_rvalue*, unsigned int, unsigned int, ir_variable*, char const*, bool, unsigned int)
0000000000387f70 000000000000008c t process_array_ir(void*, ir_dereference_array*, ir_rvalue*)
0000000000388000 0000000000000060 t process_array_type(glsl_type const*, unsigned int)
0000000000388060 0000000000000058 t (anonymous namespace)::flatten_named_interface_blocks_declarations::visit_leave(ir_expression*)
00000000003880c0 0000000000000170 t (anonymous namespace)::flatten_named_interface_blocks_declarations::handle_rvalue(ir_rvalue**)
0000000000388230 00000000000000c4 t (anonymous namespace)::flatten_named_interface_blocks_declarations::visit_leave(ir_assignment*)
0000000000388300 00000000000003f0 t lower_named_interface_blocks(void*, gl_linked_shader*)
00000000003886f0 0000000000000008 t (anonymous namespace)::lower_precision_visitor::visit_enter(ir_texture*)
00000000003886f0 0000000000000008 t (anonymous namespace)::lower_precision_visitor::visit_enter(ir_dereference_array*)
00000000003886f0 0000000000000008 t (anonymous namespace)::lower_precision_visitor::visit_enter(ir_dereference_record*)
00000000003886f0 0000000000000008 t (anonymous namespace)::lower_precision_visitor::visit_enter(ir_call*)
0000000000388700 00000000000000a4 t (anonymous namespace)::find_lowerable_rvalues_visitor::visit_leave(ir_assignment*)
00000000003887b0 0000000000000070 t (anonymous namespace)::find_lowerable_rvalues_visitor::visit_enter(ir_expression*)
0000000000388820 0000000000000058 t (anonymous namespace)::lower_precision_visitor::visit_leave(ir_expression*)
0000000000388880 0000000000000080 t (anonymous namespace)::convert_precision(int, ir_rvalue*)
0000000000388900 00000000000000e8 t (anonymous namespace)::lower_precision_visitor::handle_rvalue(ir_rvalue**)
00000000003889f0 00000000000000c8 t (anonymous namespace)::find_precision_visitor::handle_rvalue(ir_rvalue**)
0000000000388ac0 0000000000000104 t (anonymous namespace)::find_lowerable_rvalues_visitor::visit_enter(ir_dereference_array*)
0000000000388bd0 00000000000001b4 t (anonymous namespace)::find_lowerable_rvalues_visitor::stack_enter(ir_instruction*, void*)
0000000000388d90 000000000000008c t (anonymous namespace)::find_lowerable_rvalues_visitor::visit_enter(ir_texture*)
0000000000388e20 00000000000000f0 t (anonymous namespace)::find_lowerable_rvalues_visitor::visit_enter(ir_dereference_record*)
0000000000388f10 000000000000014c t (anonymous namespace)::find_lowerable_rvalues_visitor::visit_leave(ir_call*)
0000000000389060 0000000000000150 t lower_precision(exec_list*)
00000000003891b0 000000000000016c t (anonymous namespace)::find_precision_visitor::visit_enter(ir_call*)
0000000000389320 0000000000000128 t void std::vector<ir_instruction*, std::allocator<ir_instruction*> >::_M_realloc_insert<ir_instruction* const&>(__gnu_cxx::__normal_iterator<ir_instruction**, std::vector<ir_instruction*, std::allocator<ir_instruction*> > >, ir_instruction* const&)
0000000000389450 00000000000001e4 t (anonymous namespace)::find_lowerable_rvalues_visitor::pop_stack_entry()
0000000000389640 0000000000000008 t (anonymous namespace)::find_lowerable_rvalues_visitor::stack_leave(ir_instruction*, void*)
0000000000389650 00000000000000ec t (anonymous namespace)::find_lowerable_rvalues_visitor::visit(ir_dereference_variable*)
0000000000389740 0000000000000064 t (anonymous namespace)::find_lowerable_rvalues_visitor::visit(ir_constant*)
00000000003897b0 0000000000000324 t (anonymous namespace)::lower_subroutine_visitor::visit_leave(ir_call*)
0000000000389ae0 0000000000000060 t lower_subroutine(exec_list*, _mesa_glsl_parse_state*)
0000000000389b40 0000000000000154 t (anonymous namespace)::lower_tess_level_visitor::handle_rvalue(ir_rvalue**)
0000000000389ca0 0000000000000150 t (anonymous namespace)::lower_tess_level_visitor::visit(ir_variable*)
0000000000389df0 00000000000000a8 t (anonymous namespace)::lower_tess_level_visitor::is_tess_level_array(ir_rvalue*)
0000000000389ea0 0000000000000120 t (anonymous namespace)::lower_tess_level_visitor::fix_lhs(ir_assignment*) [clone .part.0]
0000000000389fc0 0000000000000238 t (anonymous namespace)::lower_tess_level_visitor::visit_leave(ir_assignment*)
000000000038a200 00000000000000a4 t lower_tess_level(gl_linked_shader*)
000000000038a2b0 0000000000000288 t (anonymous namespace)::lower_tess_level_visitor::visit_leave(ir_call*)
000000000038a540 00000000000000e8 t (anonymous namespace)::ir_vec_index_to_swizzle_visitor::handle_rvalue(ir_rvalue**)
000000000038a630 000000000000004c t do_vec_index_to_swizzle(exec_list*)
000000000038a680 0000000000000004 t (anonymous namespace)::vector_deref_visitor::~vector_deref_visitor()
000000000038a680 0000000000000004 t (anonymous namespace)::vector_deref_visitor::~vector_deref_visitor()
000000000038a690 0000000000000008 t (anonymous namespace)::vector_deref_visitor::~vector_deref_visitor()
000000000038a6a0 00000000000000e4 t (anonymous namespace)::vector_deref_visitor::handle_rvalue(ir_rvalue**)
000000000038a790 00000000000004e8 t (anonymous namespace)::vector_deref_visitor::visit_enter(ir_assignment*)
000000000038ac80 000000000000007c t lower_vector_derefs(gl_linked_shader*)
000000000038ad00 0000000000000004 t (anonymous namespace)::vector_insert_visitor::~vector_insert_visitor()
000000000038ad00 0000000000000004 t (anonymous namespace)::vector_insert_visitor::~vector_insert_visitor()
000000000038ad10 0000000000000008 t (anonymous namespace)::vector_insert_visitor::~vector_insert_visitor()
000000000038ad20 0000000000000394 t (anonymous namespace)::vector_insert_visitor::handle_rvalue(ir_rvalue**)
000000000038b0c0 0000000000000078 t lower_vector_insert(exec_list*, bool)
000000000038b140 000000000000024c t (anonymous namespace)::lower_vertex_id_visitor::visit(ir_dereference_variable*)
000000000038b390 00000000000000dc t lower_vertex_id(gl_linked_shader*)
000000000038b470 0000000000000010 t (anonymous namespace)::compute_shader_enabled(_mesa_glsl_parse_state const*)
000000000038b480 00000000000000cc t (anonymous namespace)::lower_shared_reference_visitor::get_shared_offset(ir_variable const*)
000000000038b550 000000000000051c t (anonymous namespace)::lower_shared_reference_visitor::visit_enter(ir_call*)
000000000038ba70 0000000000000254 t (anonymous namespace)::lower_shared_reference_visitor::visit_enter(ir_assignment*)
000000000038bcd0 00000000000005a4 t (anonymous namespace)::lower_shared_reference_visitor::insert_buffer_access(void*, ir_dereference*, glsl_type const*, ir_rvalue*, unsigned int, int)
000000000038c280 000000000000023c t (anonymous namespace)::lower_shared_reference_visitor::handle_rvalue(ir_rvalue**)
000000000038c4c0 00000000000000e0 t lower_shared_reference(gl_context*, gl_shader_program*, gl_linked_shader*)
000000000038c5a0 0000000000000044 t (anonymous namespace)::shader_storage_buffer_object(_mesa_glsl_parse_state const*)
000000000038c5f0 0000000000000080 t (anonymous namespace)::lower_ubo_reference_visitor::ssbo_access_params()
000000000038c670 000000000000052c t (anonymous namespace)::lower_ubo_reference_visitor::setup_for_load_or_store(void*, ir_variable*, ir_rvalue*, ir_rvalue**, unsigned int*, bool*, glsl_type const**, glsl_interface_packing)
000000000038cba0 00000000000005bc t (anonymous namespace)::lower_ubo_reference_visitor::visit_enter(ir_call*)
000000000038d160 000000000000028c t (anonymous namespace)::lower_ubo_reference_visitor::handle_rvalue(ir_rvalue**)
000000000038d3f0 0000000000000040 t (anonymous namespace)::lower_ubo_reference_visitor::visit_enter(ir_texture*)
000000000038d430 0000000000000348 t (anonymous namespace)::lower_ubo_reference_visitor::calculate_ssbo_unsized_array_length(ir_expression*)
000000000038d780 00000000000000a0 t (anonymous namespace)::lower_ubo_reference_visitor::visit_enter(ir_expression*)
000000000038d820 00000000000003c8 t (anonymous namespace)::lower_ubo_reference_visitor::ssbo_store(void*, ir_rvalue*, ir_rvalue*, unsigned int)
000000000038dbf0 0000000000000540 t (anonymous namespace)::lower_ubo_reference_visitor::insert_buffer_access(void*, ir_dereference*, glsl_type const*, ir_rvalue*, unsigned int, int)
000000000038e130 0000000000000684 t (anonymous namespace)::lower_ubo_reference_visitor::visit_enter(ir_assignment*)
000000000038e7c0 0000000000000074 t lower_ubo_reference(gl_linked_shader*, bool, bool)
000000000038e840 0000000000000094 t (anonymous namespace)::lower_xfb_var_splicer::visit_leave(ir_return*)
000000000038e8e0 000000000000007c t get_field_name(char const*)
000000000038e960 0000000000000200 t get_deref(void*, char const*, gl_linked_shader*, ir_dereference**, glsl_type const**)
000000000038eb60 00000000000000d0 t (anonymous namespace)::lower_xfb_var_splicer::visit_leave(ir_function_signature*)
000000000038ec30 0000000000000214 t lower_xfb_varying(void*, gl_linked_shader*, char const*)
000000000038ee50 0000000000000004 t (anonymous namespace)::ir_algebraic_visitor::~ir_algebraic_visitor()
000000000038ee50 0000000000000004 t (anonymous namespace)::ir_algebraic_visitor::~ir_algebraic_visitor()
000000000038ee60 000000000000002c t (anonymous namespace)::ir_algebraic_visitor::visit_enter(ir_assignment*)
000000000038ee90 000000000000001c t is_vec_negative_one(ir_constant*)
000000000038eeb0 0000000000000008 t (anonymous namespace)::ir_algebraic_visitor::~ir_algebraic_visitor()
000000000038eec0 00000000000000d0 t is_greater_than_zero(ir_constant*)
000000000038ef90 00000000000000dc t is_less_than_one(ir_constant*)
000000000038f070 000000000000026c t (anonymous namespace)::ir_algebraic_visitor::reassociate_constant(ir_expression*, int, ir_constant*, ir_expression*) [clone .part.0] [clone .isra.0]
000000000038f2e0 0000000000000020 t (anonymous namespace)::ir_algebraic_visitor::reassociate_constant(ir_expression*, int, ir_constant*, ir_expression*) [clone .isra.0]
000000000038f300 0000000000000040 t ir_builder::operand::operand(ir_variable*)
000000000038f300 0000000000000040 W ir_builder::operand::operand(ir_variable*)
000000000038f340 0000000000000040 t ir_builder::deref::deref(ir_variable*)
000000000038f340 0000000000000040 W ir_builder::deref::deref(ir_variable*)
000000000038f380 0000000000001d1c t (anonymous namespace)::ir_algebraic_visitor::handle_rvalue(ir_rvalue**)
00000000003910a0 0000000000000068 t do_algebraic(exec_list*, bool, gl_shader_compiler_options const*)
0000000000391110 0000000000000010 t (anonymous namespace)::ir_array_reference_visitor::visit_leave(ir_assignment*)
0000000000391120 0000000000000004 W ir_array_splitting_visitor::~ir_array_splitting_visitor()
0000000000391120 0000000000000004 W ir_array_splitting_visitor::~ir_array_splitting_visitor()
0000000000391130 0000000000000060 t (anonymous namespace)::ir_array_reference_visitor::visit_enter(ir_assignment*)
0000000000391190 0000000000000020 t (anonymous namespace)::ir_array_reference_visitor::visit_enter(ir_function_signature*)
00000000003911b0 0000000000000008 W ir_array_splitting_visitor::~ir_array_splitting_visitor()
00000000003911c0 0000000000000120 t (anonymous namespace)::ir_array_reference_visitor::get_variable_entry(ir_variable*)
00000000003912e0 0000000000000040 t (anonymous namespace)::ir_array_reference_visitor::visit(ir_dereference_variable*)
0000000000391320 0000000000000024 t (anonymous namespace)::ir_array_reference_visitor::visit(ir_variable*)
0000000000391350 0000000000000074 t (anonymous namespace)::ir_array_reference_visitor::visit_enter(ir_dereference_array*)
00000000003913d0 0000000000000138 t ir_array_splitting_visitor::split_deref(ir_dereference**)
0000000000391510 0000000000000048 T ir_array_splitting_visitor::handle_rvalue(ir_rvalue**)
0000000000391560 000000000000039c t optimize_split_arrays(exec_list*, bool)
0000000000391900 000000000000037c T ir_array_splitting_visitor::visit_leave(ir_assignment*)
0000000000391c80 00000000000000c8 t (anonymous namespace)::opt_conditional_discard_visitor::visit_leave(ir_if*)
0000000000391d50 000000000000004c t opt_conditional_discard(exec_list*)
0000000000391da0 0000000000000004 t (anonymous namespace)::ir_constant_folding_visitor::~ir_constant_folding_visitor()
0000000000391da0 0000000000000004 t (anonymous namespace)::ir_constant_folding_visitor::~ir_constant_folding_visitor()
0000000000391db0 0000000000000008 t (anonymous namespace)::ir_constant_folding_visitor::~ir_constant_folding_visitor()
0000000000391dc0 0000000000000110 t ir_constant_fold(ir_rvalue**)
0000000000391ed0 0000000000000034 t (anonymous namespace)::ir_constant_folding_visitor::handle_rvalue(ir_rvalue**)
0000000000391f10 000000000000008c t (anonymous namespace)::ir_constant_folding_visitor::visit_enter(ir_discard*)
0000000000391fa0 000000000000018c t (anonymous namespace)::ir_constant_folding_visitor::visit_enter(ir_call*)
0000000000392130 00000000000000c4 t (anonymous namespace)::ir_constant_folding_visitor::visit_enter(ir_assignment*)
0000000000392200 0000000000000050 t do_constant_folding(exec_list*)
0000000000392250 0000000000000008 t (anonymous namespace)::ir_constant_propagation_visitor::visit_enter(ir_function*)
0000000000392260 00000000000002c0 t (anonymous namespace)::ir_constant_propagation_visitor::constant_propagation(ir_rvalue**)
0000000000392520 000000000000008c t (anonymous namespace)::ir_constant_propagation_visitor::visit_enter(ir_function_signature*)
00000000003925b0 0000000000000134 t (anonymous namespace)::ir_constant_propagation_visitor::kill(ir_variable*, unsigned int)
00000000003926f0 000000000000013c t (anonymous namespace)::ir_constant_propagation_visitor::handle_loop(ir_loop*, bool)
0000000000392830 000000000000003c t (anonymous namespace)::ir_constant_propagation_visitor::visit_enter(ir_loop*)
0000000000392870 00000000000000a8 t (anonymous namespace)::ir_constant_propagation_visitor::constant_folding(ir_rvalue**)
0000000000392920 000000000000002c t (anonymous namespace)::ir_constant_propagation_visitor::handle_rvalue(ir_rvalue**)
0000000000392950 0000000000000138 t (anonymous namespace)::ir_constant_propagation_visitor::visit_leave(ir_assignment*)
0000000000392a90 00000000000000f4 t (anonymous namespace)::ir_constant_propagation_visitor::handle_if_block(exec_list*, hash_table*, bool*) [clone .constprop.0]
0000000000392b90 0000000000000124 t (anonymous namespace)::ir_constant_propagation_visitor::visit_enter(ir_call*)
0000000000392cc0 0000000000000124 t (anonymous namespace)::ir_constant_propagation_visitor::visit_enter(ir_if*)
0000000000392df0 00000000000000b4 t do_constant_propagation(exec_list*)
0000000000392eb0 0000000000000008 t (anonymous namespace)::ir_constant_variable_visitor::visit_enter(ir_dereference_variable*)
0000000000392ec0 0000000000000084 t (anonymous namespace)::ir_constant_variable_visitor::visit(ir_variable*)
0000000000392f50 0000000000000180 t (anonymous namespace)::ir_constant_variable_visitor::visit_enter(ir_call*)
00000000003930d0 00000000000000f4 t (anonymous namespace)::ir_constant_variable_visitor::visit_enter(ir_assignment*)
00000000003931d0 0000000000000108 t do_constant_variable(exec_list*)
00000000003932e0 0000000000000090 t do_constant_variable_unlinked(exec_list*)
0000000000393370 0000000000000008 t (anonymous namespace)::ir_copy_propagation_elements_visitor::visit_leave(ir_swizzle*)
0000000000393380 000000000000021c t (anonymous namespace)::ir_copy_propagation_elements_visitor::handle_rvalue(ir_rvalue**)
00000000003935a0 000000000000009c t (anonymous namespace)::ir_copy_propagation_elements_visitor::visit(ir_dereference_variable*)
0000000000393640 00000000000000bc t (anonymous namespace)::ir_copy_propagation_elements_visitor::handle_if_block(exec_list*, exec_list*, bool*) [clone .constprop.0]
0000000000393700 00000000000000cc t (anonymous namespace)::ir_copy_propagation_elements_visitor::visit_enter(ir_function_signature*)
00000000003937d0 0000000000000328 t (anonymous namespace)::ir_copy_propagation_elements_visitor::kill((anonymous namespace)::kill_entry*)
0000000000393b00 000000000000012c t (anonymous namespace)::ir_copy_propagation_elements_visitor::visit_enter(ir_if*)
0000000000393c30 0000000000000174 t (anonymous namespace)::ir_copy_propagation_elements_visitor::handle_loop(ir_loop*, bool)
0000000000393db0 000000000000003c t (anonymous namespace)::ir_copy_propagation_elements_visitor::visit_enter(ir_loop*)
0000000000393df0 00000000000001a8 t (anonymous namespace)::ir_copy_propagation_elements_visitor::visit_enter(ir_call*)
0000000000393fa0 000000000000085c t (anonymous namespace)::ir_copy_propagation_elements_visitor::visit_leave(ir_assignment*)
0000000000394800 00000000000000dc t do_copy_propagation_elements(exec_list*)
00000000003948e0 0000000000000148 t optimize_dead_builtin_variables(exec_list*, ir_variable_mode)
0000000000394a30 00000000000001b0 t (anonymous namespace)::replace_varyings_visitor::visit(ir_variable*)
0000000000394be0 00000000000000b0 t (anonymous namespace)::varying_info_visitor::visit(ir_variable*)
0000000000394c90 00000000000000d4 t (anonymous namespace)::varying_info_visitor::visit(ir_dereference_variable*)
0000000000394d70 00000000000001f0 t (anonymous namespace)::varying_info_visitor::visit_enter(ir_dereference_array*)
0000000000394f60 00000000000002a4 t (anonymous namespace)::replace_varyings_visitor::handle_rvalue(ir_rvalue**)
0000000000395210 0000000000000064 t (anonymous namespace)::replace_varyings_visitor::visit_leave(ir_assignment*)
0000000000395280 0000000000000464 t (anonymous namespace)::replace_varyings_visitor::replace_varyings_visitor(gl_linked_shader*, (anonymous namespace)::varying_info_visitor const*, unsigned int, unsigned int, bool)
0000000000395280 0000000000000464 t (anonymous namespace)::replace_varyings_visitor::replace_varyings_visitor(gl_linked_shader*, (anonymous namespace)::varying_info_visitor const*, unsigned int, unsigned int, bool)
00000000003956f0 0000000000000434 t do_dead_builtin_varyings(gl_context*, gl_linked_shader*, gl_linked_shader*, unsigned int, tfeedback_decl*)
0000000000395b30 00000000000001cc t do_dead_code(exec_list*, bool)
0000000000395d00 0000000000000094 t do_dead_code_unlinked(exec_list*)
0000000000395da0 000000000000002c t (anonymous namespace)::array_index_visit::visit_enter(ir_dereference_array*)
0000000000395dd0 0000000000000128 t (anonymous namespace)::kill_for_derefs_visitor::visit(ir_swizzle*)
0000000000395f00 0000000000000078 t (anonymous namespace)::kill_for_derefs_visitor::visit_leave(ir_emit_vertex*)
0000000000395f80 0000000000000464 t dead_code_local_basic_block(ir_instruction*, ir_instruction*, void*)
00000000003963f0 00000000000000c4 t (anonymous namespace)::kill_for_derefs_visitor::visit(ir_dereference_variable*)
00000000003964c0 0000000000000028 t do_dead_code_local(exec_list*)
00000000003964f0 0000000000000080 t (anonymous namespace)::ir_dead_functions_visitor::get_signature_entry(ir_function_signature*)
0000000000396570 0000000000000028 t (anonymous namespace)::ir_dead_functions_visitor::visit_enter(ir_call*)
00000000003965a0 0000000000000048 t (anonymous namespace)::ir_dead_functions_visitor::visit_enter(ir_function_signature*)
00000000003965f0 0000000000000188 t do_dead_functions(exec_list*)
0000000000396780 0000000000000008 t (anonymous namespace)::nested_if_flattener::visit_enter(ir_assignment*)
0000000000396790 00000000000000fc t (anonymous namespace)::nested_if_flattener::visit_leave(ir_if*)
0000000000396890 000000000000004c t opt_flatten_nested_if_blocks(exec_list*)
00000000003968e0 0000000000000178 t (anonymous namespace)::matrix_flipper::visit_enter(ir_expression*)
0000000000396a60 00000000000000d4 t opt_flip_matrices(exec_list*)
0000000000396b40 0000000000000004 t (anonymous namespace)::ir_function_inlining_visitor::~ir_function_inlining_visitor()
0000000000396b40 0000000000000004 t (anonymous namespace)::ir_function_inlining_visitor::~ir_function_inlining_visitor()
0000000000396b50 0000000000000008 t (anonymous namespace)::ir_function_inlining_visitor::visit_enter(ir_swizzle*)
0000000000396b50 0000000000000008 t (anonymous namespace)::ir_function_inlining_visitor::visit_enter(ir_texture*)
0000000000396b50 0000000000000008 t (anonymous namespace)::ir_function_inlining_visitor::visit_enter(ir_expression*)
0000000000396b50 0000000000000008 t (anonymous namespace)::ir_function_inlining_visitor::visit_enter(ir_return*)
0000000000396b60 0000000000000004 W ir_variable_replacement_visitor::~ir_variable_replacement_visitor()
0000000000396b60 0000000000000004 W ir_variable_replacement_visitor::~ir_variable_replacement_visitor()
0000000000396b70 0000000000000008 t (anonymous namespace)::ir_function_inlining_visitor::~ir_function_inlining_visitor()
0000000000396b80 0000000000000008 W ir_variable_replacement_visitor::~ir_variable_replacement_visitor()
0000000000396b90 0000000000000138 t (anonymous namespace)::ir_save_lvalue_visitor::visit_enter(ir_dereference_array*)
0000000000396cd0 00000000000000cc t replace_return_with_assignment(ir_instruction*, void*)
0000000000396da0 00000000000000b0 T ir_variable_replacement_visitor::visit_leave(ir_expression*)
0000000000396e50 0000000000000074 T ir_variable_replacement_visitor::visit_leave(ir_texture*)
0000000000396ed0 0000000000000088 T ir_variable_replacement_visitor::visit_leave(ir_dereference_array*)
0000000000396ed0 0000000000000088 T ir_variable_replacement_visitor::visit_leave(ir_dereference_record*)
0000000000396f60 0000000000000088 T ir_variable_replacement_visitor::visit_leave(ir_return*)
0000000000396ff0 000000000000004c t do_function_inlining(exec_list*)
0000000000397040 000000000000055c t ir_call::generate_inline(ir_instruction*)
00000000003975a0 0000000000000068 t (anonymous namespace)::ir_function_inlining_visitor::visit_enter(ir_call*)
0000000000397610 0000000000000070 t ir_variable_replacement_visitor::replace_deref(ir_dereference**)
0000000000397680 00000000000000b8 T ir_variable_replacement_visitor::visit_leave(ir_call*)
0000000000397740 00000000000000a0 T ir_variable_replacement_visitor::visit_leave(ir_assignment*)
00000000003977e0 0000000000000008 t (anonymous namespace)::ir_if_simplification_visitor::visit_enter(ir_assignment*)
00000000003977f0 00000000000001e0 t (anonymous namespace)::ir_if_simplification_visitor::visit_leave(ir_if*)
00000000003979d0 000000000000004c t do_if_simplification(exec_list*)
0000000000397a20 0000000000000250 t (anonymous namespace)::compare_components(ir_constant*, ir_constant*)
0000000000397c70 000000000000028c t (anonymous namespace)::combine_constant(bool, ir_constant*, ir_constant*)
0000000000397f00 00000000000001b4 t (anonymous namespace)::get_range(ir_rvalue*)
00000000003980c0 0000000000000324 t (anonymous namespace)::ir_minmax_visitor::prune_expression(ir_expression*, (anonymous namespace)::minmax_range)
00000000003983f0 00000000000000e0 t (anonymous namespace)::ir_minmax_visitor::handle_rvalue(ir_rvalue**)
00000000003984d0 0000000000000050 t do_minmax_prune(exec_list*)
0000000000398520 000000000000002c t (anonymous namespace)::ir_rebalance_visitor::visit_enter(ir_assignment*)
0000000000398550 0000000000000180 t handle_expression(ir_expression*)
00000000003986d0 0000000000000064 t update_types(ir_instruction*, void*)
0000000000398740 00000000000000a8 t (anonymous namespace)::ir_rebalance_visitor::handle_rvalue(ir_rvalue**)
00000000003987f0 0000000000000124 t is_reduction(ir_instruction*, void*)
0000000000398920 000000000000004c t do_rebalance_tree(exec_list*)
0000000000398970 0000000000000008 t (anonymous namespace)::redundant_jumps_visitor::visit_enter(ir_assignment*)
0000000000398980 00000000000000d0 t (anonymous namespace)::redundant_jumps_visitor::visit_leave(ir_if*)
0000000000398a50 0000000000000054 t (anonymous namespace)::redundant_jumps_visitor::visit_leave(ir_loop*)
0000000000398ab0 000000000000004c t optimize_redundant_jumps(exec_list*)
0000000000398b00 0000000000000008 t (anonymous namespace)::ir_structure_reference_visitor::visit_enter(ir_dereference_record*)
0000000000398b10 0000000000000004 t (anonymous namespace)::ir_structure_splitting_visitor::~ir_structure_splitting_visitor()
0000000000398b10 0000000000000004 t (anonymous namespace)::ir_structure_splitting_visitor::~ir_structure_splitting_visitor()
0000000000398b20 0000000000000020 t (anonymous namespace)::ir_structure_reference_visitor::visit_enter(ir_function_signature*)
0000000000398b40 0000000000000008 t (anonymous namespace)::ir_structure_splitting_visitor::~ir_structure_splitting_visitor()
0000000000398b50 00000000000000d0 t (anonymous namespace)::ir_structure_reference_visitor::get_variable_entry(ir_variable*)
0000000000398c20 0000000000000024 t (anonymous namespace)::ir_structure_reference_visitor::visit(ir_variable*)
0000000000398c50 000000000000004c t (anonymous namespace)::ir_structure_reference_visitor::visit_enter(ir_assignment*)
0000000000398ca0 0000000000000064 t (anonymous namespace)::ir_structure_reference_visitor::visit(ir_dereference_variable*)
0000000000398d10 00000000000000c0 t (anonymous namespace)::ir_structure_splitting_visitor::handle_rvalue(ir_rvalue**)
0000000000398dd0 0000000000000350 t (anonymous namespace)::ir_structure_splitting_visitor::visit_leave(ir_assignment*)
0000000000399120 0000000000000328 t do_structure_splitting(exec_list*)
0000000000399450 00000000000001fc t (anonymous namespace)::ir_opt_swizzle_visitor::handle_rvalue(ir_rvalue**)
0000000000399650 0000000000000050 t optimize_swizzles(exec_list*)
00000000003996a0 0000000000000008 t (anonymous namespace)::ir_tree_grafting_visitor::visit_enter(ir_loop*)
00000000003996b0 0000000000000008 t (anonymous namespace)::ir_tree_grafting_visitor::visit_enter(ir_function*)
00000000003996b0 0000000000000008 t (anonymous namespace)::ir_tree_grafting_visitor::visit_enter(ir_function_signature*)
00000000003996c0 00000000000001ec t (anonymous namespace)::tree_grafting_basic_block(ir_instruction*, ir_instruction*, void*)
00000000003998b0 0000000000000040 t (anonymous namespace)::ir_tree_grafting_visitor::check_graft(ir_instruction*, ir_variable*)
00000000003998f0 0000000000000064 t (anonymous namespace)::ir_tree_grafting_visitor::do_graft(ir_rvalue**)
0000000000399960 0000000000000020 t (anonymous namespace)::ir_tree_grafting_visitor::visit_enter(ir_if*)
0000000000399980 000000000000012c t (anonymous namespace)::ir_tree_grafting_visitor::visit_enter(ir_call*)
0000000000399ab0 000000000000001c t (anonymous namespace)::ir_tree_grafting_visitor::visit_enter(ir_swizzle*)
0000000000399ad0 00000000000000d4 t (anonymous namespace)::ir_tree_grafting_visitor::visit_enter(ir_texture*)
0000000000399bb0 0000000000000068 t (anonymous namespace)::ir_tree_grafting_visitor::visit_enter(ir_expression*)
0000000000399c20 0000000000000070 t (anonymous namespace)::ir_tree_grafting_visitor::visit_leave(ir_assignment*)
0000000000399c90 000000000000002c t (anonymous namespace)::dereferences_variable_callback(ir_instruction*, void*)
0000000000399cc0 0000000000000064 t do_tree_grafting(exec_list*)
0000000000399d30 0000000000000098 t (anonymous namespace)::ir_vectorize_visitor::visit_enter(ir_swizzle*)
0000000000399dd0 0000000000000010 t (anonymous namespace)::ir_vectorize_visitor::visit_enter(ir_texture*)
0000000000399dd0 0000000000000010 t (anonymous namespace)::ir_vectorize_visitor::visit_enter(ir_dereference_array*)
0000000000399de0 0000000000000048 t (anonymous namespace)::ir_vectorize_visitor::visit_enter(ir_expression*)
0000000000399e30 0000000000000134 t (anonymous namespace)::ir_vectorize_visitor::try_vectorize()
0000000000399f70 0000000000000058 t (anonymous namespace)::ir_vectorize_visitor::visit_enter(ir_if*)
0000000000399fd0 00000000000000e8 t (anonymous namespace)::ir_vectorize_visitor::visit_enter(ir_assignment*)
000000000039a0c0 0000000000000040 t (anonymous namespace)::ir_vectorize_visitor::visit_enter(ir_loop*)
000000000039a100 0000000000000154 t rewrite_swizzle(ir_instruction*, void*)
000000000039a260 0000000000000064 t (anonymous namespace)::ir_vectorize_visitor::visit_leave(ir_assignment*)
000000000039a2d0 0000000000000064 t do_vectorize(exec_list*)
000000000039a340 0000000000000004 t (anonymous namespace)::ir_invariance_propagation_visitor::~ir_invariance_propagation_visitor()
000000000039a340 0000000000000004 t (anonymous namespace)::ir_invariance_propagation_visitor::~ir_invariance_propagation_visitor()
000000000039a350 0000000000000058 t (anonymous namespace)::ir_invariance_propagation_visitor::visit_enter(ir_assignment*)
000000000039a3b0 0000000000000010 t (anonymous namespace)::ir_invariance_propagation_visitor::visit_leave(ir_assignment*)
000000000039a3c0 0000000000000008 t (anonymous namespace)::ir_invariance_propagation_visitor::~ir_invariance_propagation_visitor()
000000000039a3d0 0000000000000060 t (anonymous namespace)::ir_invariance_propagation_visitor::visit(ir_dereference_variable*)
000000000039a430 0000000000000058 t propagate_invariance(exec_list*)
000000000039a490 0000000000000048 t string_to_uint_map_ctor
000000000039a4e0 0000000000000074 t string_to_uint_map_dtor
000000000039a560 00000000000000c0 t yytnamerr(char*, char const*)
000000000039a620 0000000000000280 t yysyntax_error(unsigned long*, char**, short*, int)
000000000039a8a0 0000000000000024 t _mesa_glsl_parse_state::has_shader_storage_buffer_objects() const [clone .part.0] [clone .isra.0]
000000000039a8d0 0000000000000038 t match_layout_qualifier(char const*, char const*, _mesa_glsl_parse_state*) [clone .isra.0]
000000000039a910 000000000000004c t _mesa_glsl_parse_state::has_tessellation_shader() const
000000000039a960 0000000000007ec4 t _mesa_glsl_parse(_mesa_glsl_parse_state*)
00000000003a2830 00000000000000f8 t yy_get_previous_state(void*)
00000000003a2930 000000000000022c t literal_integer(char*, int, _mesa_glsl_parse_state*, YYSTYPE*, YYLTYPE*, int)
00000000003a2b60 00000000000000b0 t classify_identifier(_mesa_glsl_parse_state*, char const*, unsigned int, YYSTYPE*)
00000000003a2c10 0000000000000030 t yy_fatal_error(char const*, void*) [clone .constprop.0]
00000000003a2c40 00000000000000a0 t _mesa_glsl_lexer_ensure_buffer_stack(void*)
00000000003a2ce0 00000000000000b4 t _mesa_glsl_lexer__switch_to_buffer(yy_buffer_state*, void*)
00000000003a2da0 000000000000006c t _mesa_glsl_lexer__delete_buffer(yy_buffer_state*, void*)
00000000003a2e10 000000000000006c t _mesa_glsl_lexer__flush_buffer(yy_buffer_state*, void*)
00000000003a2e80 000000000000007c t _mesa_glsl_lexer__init_buffer(yy_buffer_state*, __sFILE*, void*)
00000000003a2f00 000000000000007c t _mesa_glsl_lexer__create_buffer(__sFILE*, int, void*)
00000000003a2f80 00000000000000bc t _mesa_glsl_lexer_restart(__sFILE*, void*)
00000000003a3040 000000000000d6a0 t _mesa_glsl_lexer_lex(YYSTYPE*, YYLTYPE*, void*)
00000000003b06e0 000000000000008c t _mesa_glsl_lexer_pop_buffer_state(void*)
00000000003b0770 00000000000000bc t _mesa_glsl_lexer__scan_buffer(char*, unsigned long, void*)
00000000003b0830 00000000000000a4 t _mesa_glsl_lexer__scan_bytes(char const*, int, void*)
00000000003b08e0 0000000000000098 t _mesa_glsl_lexer_lex_init_extra(_mesa_glsl_parse_state*, void**)
00000000003b0980 000000000000007c t _mesa_glsl_lexer_lex_destroy(void*)
00000000003b0a00 000000000000003c t _mesa_glsl_lexer_ctor(_mesa_glsl_parse_state*, char const*)
00000000003b0a40 0000000000000008 t _mesa_glsl_lexer_dtor(_mesa_glsl_parse_state*)
00000000003b0a50 00000000000000d0 t glcpp_error
00000000003b0b20 00000000000000bc t glcpp_warning
00000000003b0be0 0000000000000330 t glcpp_preprocess
00000000003b0f10 00000000000000e0 t yy_get_previous_state
00000000003b0ff0 0000000000000030 t yy_fatal_error.constprop.0
00000000003b1020 00000000000000a0 t glcpp_ensure_buffer_stack
00000000003b10c0 00000000000000b4 t glcpp__switch_to_buffer
00000000003b1180 000000000000006c t glcpp__delete_buffer
00000000003b11f0 000000000000006c t glcpp__flush_buffer
00000000003b1260 000000000000007c t glcpp__init_buffer
00000000003b12e0 000000000000007c t glcpp__create_buffer
00000000003b1360 00000000000000bc t glcpp_restart
00000000003b1420 0000000000002710 t glcpp_lex
00000000003b3b30 000000000000008c t glcpp_pop_buffer_state
00000000003b3bc0 00000000000000bc t glcpp__scan_buffer
00000000003b3c80 00000000000000a4 t glcpp__scan_bytes
00000000003b3d30 0000000000000098 t glcpp_lex_init_extra
00000000003b3dd0 000000000000007c t glcpp_lex_destroy
00000000003b3e50 0000000000000034 t glcpp_lex_set_source_string
00000000003b3e90 00000000000000c0 t yytnamerr
00000000003b3f50 0000000000000280 t yysyntax_error
00000000003b41d0 0000000000000088 t yy_stack_print
00000000003b4260 00000000000000d4 t _check_for_reserved_macro_name
00000000003b4340 00000000000000b0 t _glcpp_parser_skip_stack_push_if
00000000003b43f0 000000000000019c t _glcpp_parser_evaluate_defined_in_list
00000000003b4590 0000000000000124 t yy_symbol_print.constprop.0
00000000003b46c0 0000000000000078 t yydestruct.isra.0
00000000003b4740 0000000000000288 t _macro_equal
00000000003b49d0 000000000000009c t glcpp_parser_copy_defines
00000000003b4a70 00000000000000c8 t _define_object_macro
00000000003b4b40 0000000000000130 t _define_function_macro
00000000003b4c70 00000000000000d0 t _token_list_copy
00000000003b4d40 00000000000000a0 t _token_list_create_with_one_ival
00000000003b4de0 00000000000000b0 t add_builtin_define
00000000003b4e90 0000000000000264 t _glcpp_parser_handle_version_declaration.part.0
00000000003b5100 00000000000001a4 t _token_print
00000000003b52b0 00000000000004b8 t _glcpp_parser_apply_pastes
00000000003b5770 0000000000000900 t _glcpp_parser_expand_token_list
00000000003b6070 000000000000019c t _glcpp_parser_expand_and_lex_from
00000000003b6210 0000000000000108 t glcpp_parser_create
00000000003b6320 000000000000203c t glcpp_parser_parse
00000000003b8360 0000000000000034 t glcpp_parser_destroy
00000000003b83a0 000000000000002c t glcpp_parser_resolve_implicit_version
00000000003b83d0 0000000000000060 T glsl_type::record_key_hash(void const*)
00000000003b8430 000000000000005c t hash_free_type_function(hash_entry*)
00000000003b8490 0000000000000084 t glsl_type::glsl_type(unsigned int, glsl_base_type, unsigned int, unsigned int, char const*, unsigned int, bool)
00000000003b8490 0000000000000084 T glsl_type::glsl_type(unsigned int, glsl_base_type, unsigned int, unsigned int, char const*, unsigned int, bool)
00000000003b8520 0000000000000074 t glsl_type::glsl_type(unsigned int, glsl_base_type, glsl_sampler_dim, bool, bool, glsl_base_type, char const*)
00000000003b8520 0000000000000074 T glsl_type::glsl_type(unsigned int, glsl_base_type, glsl_sampler_dim, bool, bool, glsl_base_type, char const*)
00000000003b85a0 00000000000000d8 t glsl_type::glsl_type(glsl_struct_field const*, unsigned int, char const*, bool)
00000000003b85a0 00000000000000d8 T glsl_type::glsl_type(glsl_struct_field const*, unsigned int, char const*, bool)
00000000003b8680 00000000000000e0 t glsl_type::glsl_type(glsl_struct_field const*, unsigned int, glsl_interface_packing, bool, char const*)
00000000003b8680 00000000000000e0 T glsl_type::glsl_type(glsl_struct_field const*, unsigned int, glsl_interface_packing, bool, char const*)
00000000003b8760 0000000000000008 t glsl_type::~glsl_type()
00000000003b8760 0000000000000008 T glsl_type::~glsl_type()
00000000003b8770 0000000000000088 t glsl_type::contains_sampler() const
00000000003b8800 0000000000000078 t glsl_type::contains_array() const
00000000003b8880 000000000000009c t glsl_type::contains_integer() const
00000000003b8920 0000000000000088 t glsl_type::contains_double() const
00000000003b89b0 0000000000000098 t glsl_type::contains_opaque() const
00000000003b8a50 0000000000000088 t glsl_type::contains_subroutine() const
00000000003b8ae0 00000000000000c4 t glsl_type::sampler_index() const
00000000003b8bb0 0000000000000088 t glsl_type::contains_image() const
00000000003b8c40 00000000000000fc t glsl_type::get_base_type() const
00000000003b8d40 0000000000000048 t glsl_type::get_scalar_type() const
00000000003b8d90 000000000000003c t glsl_type_singleton_init_or_ref
00000000003b8dd0 00000000000000e4 t glsl_type_singleton_decref
00000000003b8ec0 0000000000000158 t glsl_type::glsl_type(glsl_type const*, unsigned int, unsigned int)
00000000003b8ec0 0000000000000158 T glsl_type::glsl_type(glsl_type const*, unsigned int, unsigned int)
00000000003b9020 00000000000000dc t glsl_type::vec(unsigned int)
00000000003b9100 00000000000000dc t glsl_type::f16vec(unsigned int)
00000000003b91e0 00000000000000dc t glsl_type::dvec(unsigned int)
00000000003b92c0 00000000000000dc t glsl_type::ivec(unsigned int)
00000000003b93a0 00000000000000dc t glsl_type::uvec(unsigned int)
00000000003b9480 00000000000000dc t glsl_type::bvec(unsigned int)
00000000003b9560 00000000000000dc t glsl_type::i64vec(unsigned int)
00000000003b9640 00000000000000dc t glsl_type::u64vec(unsigned int)
00000000003b9720 00000000000000dc t glsl_type::i16vec(unsigned int)
00000000003b9800 00000000000000dc t glsl_type::u16vec(unsigned int)
00000000003b98e0 00000000000000dc t glsl_type::i8vec(unsigned int)
00000000003b99c0 00000000000000dc t glsl_type::u8vec(unsigned int)
00000000003b9aa0 00000000000005a8 t glsl_type::get_instance(unsigned int, unsigned int, unsigned int, unsigned int, bool)
00000000003ba050 00000000000003c0 t glsl_type::get_sampler_instance(glsl_sampler_dim, bool, bool, glsl_base_type)
00000000003ba410 0000000000000390 t glsl_type::get_image_instance(glsl_sampler_dim, bool, glsl_base_type)
00000000003ba7a0 00000000000000f8 t glsl_type::get_array_instance(glsl_type const*, unsigned int, unsigned int)
00000000003ba8a0 00000000000000c0 t glsl_type::compare_no_precision(glsl_type const*) const
00000000003ba960 0000000000000170 t glsl_type::record_compare(glsl_type const*, bool, bool, bool) const [clone .part.0]
00000000003baad0 000000000000007c T glsl_type::record_key_compare(void const*, void const*)
00000000003bab50 000000000000004c t glsl_type::record_compare(glsl_type const*, bool, bool, bool) const
00000000003baba0 0000000000000100 t glsl_type::get_struct_instance(glsl_struct_field const*, unsigned int, char const*, bool)
00000000003baca0 000000000000010c t glsl_type::get_interface_instance(glsl_struct_field const*, unsigned int, glsl_interface_packing, bool, char const*)
00000000003badb0 000000000000011c t glsl_type::get_subroutine_instance(char const*)
00000000003baed0 000000000000036c t glsl_type::get_mul_type(glsl_type const*, glsl_type const*)
00000000003bb240 00000000000000a4 t glsl_type::field_type(char const*) const
00000000003bb2f0 0000000000000090 t glsl_type::field_index(char const*) const
00000000003bb380 0000000000000138 t glsl_type::component_slots() const
00000000003bb4c0 0000000000000154 t glsl_type::struct_location_offset(unsigned int) const
00000000003bb620 00000000000000f0 t glsl_type::uniform_locations() const
00000000003bb710 0000000000000138 t glsl_type::varying_count() const
00000000003bb850 00000000000001ac t glsl_type::can_implicitly_convert_to(glsl_type const*, _mesa_glsl_parse_state*) const
00000000003bba00 0000000000000264 t glsl_type::std140_base_alignment(bool) const
00000000003bbc70 0000000000000390 t glsl_type::std140_size(bool) const
00000000003bc000 00000000000001f0 t glsl_type::std430_base_alignment(bool) const
00000000003bc1f0 0000000000000310 t glsl_type::std430_size(bool) const
00000000003bc500 000000000000005c t glsl_type::std430_array_stride(bool) const
00000000003bc560 0000000000000160 t glsl_type::count_vec4_slots(bool, bool) const
00000000003bc6c0 0000000000000064 t glsl_type::coordinate_components() const
00000000003bc730 0000000000000378 t encode_type_to_blob
00000000003bcab0 00000000000002a4 t decode_type_from_blob
00000000003bcd60 0000000000000080 t _mesa_shader_stage_to_string
00000000003bcde0 000000000000013c t cso_set_vertex_elements_direct
00000000003bcf20 0000000000000114 t cso_single_sampler.part.0
00000000003bd040 0000000000000078 t cso_init_vbuf.constprop.0
00000000003bd0c0 000000000000026c t sanitize_hash
00000000003bd330 000000000000016c t cso_set_vertex_buffers_direct
00000000003bd4a0 00000000000005a4 t cso_destroy_context
00000000003bda50 0000000000000138 t cso_create_context
00000000003bdb90 0000000000000138 t cso_set_blend
00000000003bdcd0 0000000000000110 t cso_set_depth_stencil_alpha
00000000003bdde0 0000000000000110 t cso_set_rasterizer
00000000003bdef0 0000000000000028 t cso_set_fragment_shader_handle
00000000003bdf20 0000000000000028 t cso_set_vertex_shader_handle
00000000003bdf50 000000000000006c t cso_set_framebuffer
00000000003bdfc0 000000000000007c t cso_set_viewport
00000000003be040 0000000000000054 t cso_set_viewport_dims
00000000003be0a0 0000000000000044 t cso_set_blend_color
00000000003be0f0 0000000000000028 t cso_set_sample_mask
00000000003be120 000000000000002c t cso_set_min_samples
00000000003be150 000000000000002c t cso_set_stencil_ref
00000000003be180 000000000000008c t cso_set_render_condition
00000000003be210 0000000000000030 t cso_set_geometry_shader_handle
00000000003be240 0000000000000030 t cso_set_tessctrl_shader_handle
00000000003be270 0000000000000030 t cso_set_tesseval_shader_handle
00000000003be2a0 0000000000000030 t cso_set_compute_shader_handle
00000000003be2d0 0000000000000034 t cso_set_vertex_elements
00000000003be310 000000000000001c t cso_set_vertex_buffers
00000000003be330 000000000000025c t cso_set_vertex_buffers_and_elements
00000000003be590 00000000000000a0 t cso_set_samplers
00000000003be630 00000000000001b4 t cso_set_sampler_views
00000000003be7f0 0000000000000194 t cso_set_shader_images
00000000003be990 0000000000000188 t cso_set_stream_outputs
00000000003beb20 0000000000000184 t cso_set_constant_buffer
00000000003becb0 00000000000000dc t cso_save_constant_buffer_slot0
00000000003bed90 000000000000019c t cso_restore_constant_buffer_slot0
00000000003bef30 00000000000004fc t cso_save_state
00000000003bf430 000000000000084c t cso_restore_state
00000000003bfc80 0000000000000020 t cso_draw_vbo
00000000003bfca0 0000000000000068 t cso_draw_arrays
00000000003bfd10 0000000000000064 t cso_draw_arrays_instanced
00000000003bfd80 0000000000000278 t cso_data_rehash
00000000003c0000 00000000000000c8 t cso_hash_insert
00000000003c00d0 0000000000000014 t cso_hash_init
00000000003c00f0 0000000000000070 t cso_hash_deinit
00000000003c0160 0000000000000020 t cso_hash_iter_key
00000000003c0180 0000000000000064 t cso_hash_data_next
00000000003c01f0 00000000000000cc t cso_hash_take
00000000003c02c0 0000000000000038 t cso_hash_first_node
00000000003c0300 0000000000000008 t cso_hash_size
00000000003c0310 00000000000000a4 t cso_hash_erase
00000000003c03c0 0000000000000064 t cso_hash_contains
00000000003c0430 0000000000000008 t tgsi_build_header
00000000003c0440 0000000000000014 t tgsi_build_processor
00000000003c0460 0000000000000024 t tgsi_default_full_declaration
00000000003c0490 000000000000020c t tgsi_build_full_declaration
00000000003c06a0 0000000000000010 t tgsi_default_full_immediate
00000000003c06b0 00000000000000b8 t tgsi_build_full_immediate
00000000003c0770 000000000000000c t tgsi_default_instruction
00000000003c0780 0000000000000098 t tgsi_default_full_instruction
00000000003c0820 0000000000000554 t tgsi_build_full_instruction
00000000003c0d80 0000000000000034 t tgsi_default_full_property
00000000003c0dc0 00000000000000e0 t tgsi_build_full_property
00000000003c0ea0 000000000000004c t tgsi_full_src_register_from_dst
00000000003c0ef0 0000000000000090 t dump_ctx_printf
00000000003c0f80 00000000000000b0 t _dump_writemask.part.0
00000000003c1030 0000000000000070 t prolog
00000000003c10a0 000000000000029c t iter_immediate
00000000003c1340 0000000000000228 t iter_property
00000000003c1570 0000000000000e3c t iter_instruction
00000000003c23b0 0000000000000a20 t iter_declaration
00000000003c2dd0 0000000000000070 t tgsi_dump_to_file
00000000003c2e40 0000000000000008 t tgsi_dump
00000000003c2e50 0000000000000040 t transform_decl
00000000003c2e90 0000000000000208 t transform_instr
00000000003c30a0 00000000000000c0 t tgsi_emulate
00000000003c3160 0000000000000040 t tgsi_get_generic_gl_varying_index
00000000003c31a0 00000000000001d4 t tgsi_get_gl_varying_semantic
00000000003c3380 00000000000000f0 t tgsi_get_sysval_semantic
00000000003c3470 0000000000000028 t tgsi_get_opcode_info
00000000003c34a0 0000000000000024 t tgsi_get_opcode_name
00000000003c34d0 0000000000000134 t tgsi_iterate_shader
00000000003c3610 0000000000000038 t tgsi_parse_init
00000000003c3650 0000000000000004 t tgsi_parse_free
00000000003c3660 0000000000000020 t tgsi_parse_end_of_tokens
00000000003c3680 000000000000042c t tgsi_parse_token
00000000003c3ab0 0000000000000054 t tgsi_dup_tokens
00000000003c3b10 0000000000000008 t tgsi_alloc_tokens
00000000003c3b20 0000000000000004 t tgsi_free_tokens
00000000003c3b30 0000000000000598 t scan_src_operand
00000000003c40d0 0000000000001048 t tgsi_scan_shader
00000000003c5120 0000000000000024 t tgsi_file_name
00000000003c5150 0000000000000044 t emit_property
00000000003c51a0 0000000000000044 t emit_immediate
00000000003c51f0 0000000000000044 t emit_declaration
00000000003c5240 0000000000000044 t emit_instruction
00000000003c5290 00000000000002b0 t tgsi_transform_shader
00000000003c5540 0000000000000178 t match_or_expand_immediate
00000000003c56c0 000000000000004c t tokens_error
00000000003c5710 0000000000000104 t get_tokens
00000000003c5820 00000000000000c0 t emit_decl_semantic
00000000003c58e0 00000000000000ec t alloc_temporary
00000000003c59d0 0000000000000230 t decl_immediate
00000000003c5c00 0000000000000018 t ureg_property
00000000003c5c20 0000000000000140 t ureg_DECL_fs_input_cyl_centroid_layout
00000000003c5d60 0000000000000034 t ureg_DECL_fs_input_cyl_centroid
00000000003c5da0 000000000000003c t ureg_DECL_vs_input
00000000003c5de0 000000000000003c t ureg_DECL_input
00000000003c5e20 0000000000000114 t ureg_DECL_system_value
00000000003c5f40 0000000000000160 t ureg_DECL_output_layout
00000000003c60a0 0000000000000038 t ureg_DECL_output
00000000003c60e0 0000000000000040 t ureg_DECL_constant2D
00000000003c6120 0000000000000160 t ureg_DECL_constant
00000000003c6280 00000000000000a0 t ureg_DECL_hw_atomic
00000000003c6320 0000000000000008 t ureg_DECL_temporary
00000000003c6330 0000000000000008 t ureg_DECL_local_temporary
00000000003c6340 00000000000000b4 t ureg_DECL_array_temporary
00000000003c6400 0000000000000024 t ureg_release_temporary
00000000003c6430 0000000000000048 t ureg_DECL_address
00000000003c6480 00000000000000d0 t ureg_DECL_sampler
00000000003c6550 00000000000000b8 t ureg_DECL_sampler_view
00000000003c6610 00000000000000bc t ureg_DECL_image
00000000003c66d0 00000000000000a8 t ureg_DECL_buffer
00000000003c6780 000000000000002c t ureg_DECL_memory
00000000003c67b0 000000000000004c t ureg_DECL_immediate
00000000003c6800 000000000000003c t ureg_DECL_immediate_f64
00000000003c6840 0000000000000008 t ureg_DECL_immediate_uint
00000000003c6850 0000000000000008 t ureg_DECL_immediate_int
00000000003c6860 000000000000003c t ureg_DECL_immediate_uint64
00000000003c68a0 000000000000003c t ureg_DECL_immediate_int64
00000000003c68e0 000000000000019c t ureg_emit_src
00000000003c6a80 0000000000000158 t ureg_emit_dst
00000000003c6be0 00000000000000a4 t ureg_emit_insn
00000000003c6c90 000000000000011c t ureg_emit_texture
00000000003c6db0 0000000000000038 t ureg_fixup_insn_size
00000000003c6df0 0000000000000170 t ureg_insn
00000000003c6f60 00000000000001fc t ureg_tex_insn
00000000003c7160 0000000000000184 t ureg_memory_insn
00000000003c72f0 0000000000000afc t ureg_finalize
00000000003c7df0 0000000000000144 t ureg_create_shader
00000000003c7f40 0000000000000044 t ureg_get_tokens
00000000003c7f90 0000000000000004 t ureg_free_tokens
00000000003c7fa0 00000000000000ec t ureg_create_with_screen
00000000003c8090 0000000000000008 t ureg_create
00000000003c80a0 0000000000000008 t ureg_set_next_shader_processor
00000000003c80b0 000000000000007c t ureg_destroy
00000000003c8130 0000000000000050 t tgsi_util_get_src_register_swizzle
00000000003c8180 000000000000046c t tgsi_util_get_inst_usage_mask
00000000003c85f0 0000000000000028 t tgsi_util_get_src_from_ind
00000000003c8620 0000000000000058 t util_bitmask_create
00000000003c8680 0000000000000100 t util_bitmask_set
00000000003c8780 000000000000003c t util_bitmask_clear
00000000003c87c0 000000000000005c t util_bitmask_get
00000000003c8820 000000000000009c t util_bitmask_get_next_index
00000000003c88c0 0000000000000008 t util_bitmask_get_first_index
00000000003c88d0 0000000000000030 t util_bitmask_destroy
00000000003c8900 0000000000000250 t util_copy_framebuffer_state
00000000003c8b50 00000000000000b8 t util_unreference_framebuffer_state
00000000003c8c10 000000000000007c t util_framebuffer_get_num_layers
00000000003c8c90 000000000000009c t util_framebuffer_get_num_samples
00000000003c8d30 00000000000000d0 t util_sample_locations_flip_y
00000000003c8e00 00000000000002e8 t util_gen_mipmap
00000000003c90f0 0000000000000240 t util_set_vertex_buffers_mask
00000000003c9330 000000000000008c t util_set_vertex_buffers_count
00000000003c93c0 0000000000000008 t util_throttle_init
00000000003c93d0 0000000000000050 t util_throttle_deinit
00000000003c9420 000000000000024c t util_throttle_memory_usage
00000000003c9670 0000000000000010 t u_prim_name
00000000003c9680 00000000000000d8 t u_sampler_view_default_template
00000000003c9760 0000000000000198 t u_pipe_screen_get_param_defaults
00000000003c9900 000000000000022c t util_make_vertex_passthrough_shader_with_so
00000000003c9b30 000000000000000c t util_make_vertex_passthrough_shader
00000000003c9b40 0000000000000034 t util_make_layered_clear_vertex_shader
00000000003c9b80 000000000000009c t util_make_layered_clear_helper_vertex_shader
00000000003c9c20 000000000000009c t util_make_layered_clear_geometry_shader
00000000003c9cc0 00000000000000e0 t util_make_fragment_passthrough_shader
00000000003c9da0 0000000000000124 t pipe_get_tile_raw
00000000003c9ed0 0000000000000770 t pipe_get_tile_rgba
00000000003ca640 00000000000000a4 t upload_unmap_internal
00000000003ca6f0 0000000000000088 t u_upload_create
00000000003ca780 0000000000000014 t u_upload_create_default
00000000003ca7a0 0000000000000008 t u_upload_unmap
00000000003ca7b0 0000000000000070 t u_upload_destroy
00000000003ca820 000000000000039c t u_upload_alloc
00000000003cabc0 0000000000000050 t u_upload_data
00000000003cac10 0000000000000034 t u_vbuf_delete_vertex_elements
00000000003cac50 00000000000001e8 t u_vbuf_get_minmax_index_mapped
00000000003cae40 0000000000000068 t u_vbuf_set_driver_vertex_buffers
00000000003caeb0 0000000000000398 t u_vbuf_set_vertex_elements_internal
00000000003cb250 00000000000009cc t u_vbuf_translate_begin
00000000003cbc20 0000000000000254 t u_vbuf_get_caps
00000000003cbe80 00000000000000ac t u_vbuf_create
00000000003cbf30 0000000000000024 t u_vbuf_set_vertex_elements
00000000003cbf60 0000000000000008 t u_vbuf_unset_vertex_elements
00000000003cbf70 00000000000001a8 t u_vbuf_destroy
00000000003cc120 0000000000000594 t u_vbuf_set_vertex_buffers
00000000003cc6c0 00000000000000c4 t u_vbuf_get_minmax_index
00000000003cc790 00000000000008c0 t u_vbuf_draw_vbo
00000000003cd050 00000000000000c4 t u_vbuf_split_indexed_multidraw
00000000003cd120 000000000000000c t u_vbuf_save_vertex_elements
00000000003cd130 0000000000000048 t u_vbuf_restore_vertex_elements
00000000003cd180 00000000000000bc t u_vbuf_save_vertex_buffer0
00000000003cd240 000000000000009c t u_vbuf_restore_vertex_buffer0
00000000003cd2e0 000000000000009c t nouveau_transfer_read
00000000003cd380 000000000000005c t nouveau_scratch_unref_bos
00000000003cd3e0 00000000000000e4 t nouveau_transfer_staging.isra.0
00000000003cd4d0 00000000000001ec t nouveau_scratch_more
00000000003cd6c0 00000000000000f8 t nouveau_buffer_destroy
00000000003cd7c0 000000000000013c t nouveau_buffer_cache.isra.0
00000000003cd900 0000000000000190 t nouveau_transfer_write
00000000003cda90 00000000000000dc t nouveau_buffer_transfer_flush_region
00000000003cdb70 0000000000000160 t nouveau_buffer_transfer_unmap
00000000003cdcd0 0000000000000590 t nouveau_buffer_transfer_map
00000000003ce260 0000000000000214 t nouveau_copy_buffer
00000000003ce480 0000000000000174 t nouveau_resource_map_offset
00000000003ce600 0000000000000248 t nouveau_buffer_create
00000000003ce850 0000000000000258 t nouveau_buffer_invalidate
00000000003ceab0 000000000000004c t nouveau_scratch_runout_release
00000000003ceb00 00000000000000b8 t nouveau_scratch_data
00000000003cebc0 0000000000000094 t nouveau_scratch_get
00000000003cec60 0000000000000064 t nouveau_fence_trigger_work
00000000003cecd0 0000000000000058 t nouveau_fence_new
00000000003ced30 0000000000000060 t nouveau_fence_emit
00000000003ced90 00000000000000a8 t nouveau_fence_del
00000000003cee40 00000000000000ec t nouveau_fence_update
00000000003cef30 000000000000005c t nouveau_fence_signalled
00000000003cef90 00000000000000c0 t nouveau_fence_next
00000000003cf050 0000000000000104 t nouveau_fence_kick
00000000003cf160 0000000000000114 t nouveau_fence_wait
00000000003cf280 0000000000000024 T nouveau_fence_unref_bo
00000000003cf2b0 00000000000000d4 t nouveau_fence_work
00000000003cf390 0000000000000054 t nouveau_heap_init
00000000003cf3f0 000000000000002c t nouveau_heap_destroy
00000000003cf420 00000000000000e8 t nouveau_heap_alloc
00000000003cf510 00000000000000b8 t nouveau_heap_free
00000000003cf5d0 00000000000002d8 t nouveau_mm_allocate
00000000003cf8b0 00000000000000dc t nouveau_mm_free
00000000003cf990 0000000000000004 T nouveau_mm_free_work
00000000003cf9a0 0000000000000078 t nouveau_mm_create
00000000003cfa20 000000000000013c t nouveau_mm_destroy
00000000003cfb60 000000000000000c t nouveau_screen_get_vendor
00000000003cfb70 000000000000000c t nouveau_screen_get_device_vendor
00000000003cfb80 0000000000000008 t nouveau_screen_get_disk_shader_cache
00000000003cfb90 0000000000000060 t nouveau_screen_fence_ref
00000000003cfbf0 0000000000000040 t nouveau_screen_get_name
00000000003cfc30 0000000000000050 t nouveau_screen_get_timestamp
00000000003cfc80 000000000000002c t nouveau_set_debug_callback
00000000003cfcb0 0000000000000014 t nouveau_screen_fence_finish
00000000003cfcd0 0000000000000088 t nouveau_screen_bo_from_handle
00000000003cfd60 0000000000000080 t nouveau_screen_bo_get_handle
00000000003cfde0 000000000000027c t nouveau_screen_init
00000000003d0060 0000000000000060 t nouveau_screen_fini
00000000003d00c0 0000000000000010 t nouveau_context_init
00000000003d00d0 0000000000000008 t nouveau_vp3_video_buffer_sampler_view_planes
00000000003d00e0 0000000000000008 t nouveau_vp3_video_buffer_sampler_view_components
00000000003d00f0 0000000000000008 t nouveau_vp3_video_buffer_surfaces
00000000003d0100 0000000000000004 t nouveau_vp3_decoder_flush
00000000003d0110 0000000000000004 t nouveau_vp3_decoder_begin_frame
00000000003d0120 00000000000000e4 t nouveau_vp3_decoder_destroy
00000000003d0210 00000000000000a4 t vp4_getpath
00000000003d02c0 0000000000000088 t vp3_getpath
00000000003d0350 00000000000001f8 t firmware_present
00000000003d0550 0000000000000004 t nouveau_vp3_decoder_end_frame
00000000003d0560 000000000000014c t nouveau_vp3_video_buffer_destroy
00000000003d06b0 0000000000000320 t nouveau_vp3_video_buffer_create
00000000003d09d0 0000000000000030 t nouveau_vp3_decoder_init_common
00000000003d0a00 0000000000000200 t nouveau_vp3_load_firmware
00000000003d0c00 0000000000000108 T nouveau_vp3_screen_get_video_param
00000000003d0d10 0000000000000014 T nouveau_vp3_screen_video_supported
00000000003d0d30 000000000000029c T nv50_clear_texture
00000000003d0fd0 0000000000001108 t nv50_blitter_make_fp
00000000003d20e0 0000000000000124 t nv50_blit_select_mode
00000000003d2210 000000000000021c t nv50_m2mf_rect_setup
00000000003d2430 0000000000000570 t nv50_m2mf_transfer_rect
00000000003d29a0 00000000000003a4 T nv50_miptree_transfer_map
00000000003d2d50 000000000000012c T nv50_miptree_transfer_unmap
00000000003d2e80 0000000000000078 T nvc0_compute_validate_globals
00000000003d2f00 0000000000000168 t nvc0_compute_validate_surfaces
00000000003d3070 00000000000000e8 t nvc0_compute_validate_driverconst
00000000003d3160 00000000000000ac t nvc0_compute_validate_samplers
00000000003d3210 0000000000000210 t nvc0_compute_validate_buffers
00000000003d3420 00000000000000fc t nvc0_compute_validate_textures
00000000003d3520 0000000000000330 t nvc0_compute_validate_constbufs
00000000003d3850 0000000000000684 t nvc0_screen_compute_setup
00000000003d3ee0 0000000000000120 t nvc0_update_compute_invocations_counter
00000000003d4000 00000000000008cc T nvc0_launch_grid
00000000003d48d0 0000000000000008 t nvc0_get_device_reset_status
00000000003d48e0 0000000000000044 T nvc0_default_kick_notify
00000000003d4930 000000000000045c t nvc0_invalidate_resource_storage
00000000003d4d90 0000000000000084 t nvc0_context_get_sample_position
00000000003d4e20 00000000000000bc t nvc0_flush
00000000003d4ee0 00000000000000bc t nvc0_texture_barrier
00000000003d4fa0 000000000000013c t nvc0_emit_string_marker
00000000003d50e0 00000000000001d4 t nvc0_memory_barrier
00000000003d52c0 00000000000005a0 t nvc0_destroy
00000000003d5860 0000000000000448 T nvc0_create
00000000003d5cb0 0000000000000110 t nvc0_bufctx_fence
00000000003d5dc0 0000000000000054 t nvc0_get_sample_locations
00000000003d5e20 000000000000007c t nvc0_miptree_get_handle
00000000003d5ea0 00000000000006c0 t nvc0_miptree_create
00000000003d6560 00000000000000cc t nvc0_mt_zslice_offset
00000000003d6630 0000000000000034 t nvc0_miptree_surface_new
00000000003d6670 00000000000000dc t nvc0_shader_input_address
00000000003d6750 00000000000003d8 t nvc0_program_assign_varying_slots
00000000003d6b30 0000000000000298 t nvc0_vtgp_gen_header
00000000003d6dd0 0000000000000198 t nvc0_program_upload_code
00000000003d6f70 00000000000000a8 t nvc0_tp_get_tess_mode.isra.0
00000000003d7020 0000000000000904 t nvc0_program_translate
00000000003d7930 0000000000000088 t nvc0_program_library_upload
00000000003d79c0 00000000000005c8 t nvc0_program_upload
00000000003d7f90 00000000000000c4 t nvc0_program_destroy
00000000003d8060 0000000000000060 t nvc0_program_symbol_offset
00000000003d80c0 0000000000000084 t nvc0_program_init_tcp_empty
00000000003d8150 0000000000000010 t nvc0_destroy_query
00000000003d8160 0000000000000010 t nvc0_begin_query
00000000003d8170 0000000000000020 t nvc0_end_query
00000000003d8190 0000000000000010 t nvc0_get_query_result
00000000003d81a0 000000000000001c t nvc0_get_query_result_resource
00000000003d81c0 0000000000000004 t nvc0_set_active_query_state
00000000003d81d0 0000000000000050 t nvc0_create_query
00000000003d8220 00000000000002e0 t nvc0_render_condition
00000000003d8500 0000000000000098 T nvc0_screen_get_driver_query_info
00000000003d85a0 00000000000000fc T nvc0_screen_get_driver_query_group_info
00000000003d86a0 0000000000000064 t nvc0_init_query_functions
00000000003d8710 00000000000000b0 t nvc0_hw_query_write_compute_invocations
00000000003d87c0 00000000000002a4 t nvc0_hw_get_query_result
00000000003d8a70 00000000000000b8 t nvc0_hw_query_get
00000000003d8b30 00000000000000bc t nvc0_hw_destroy_query
00000000003d8bf0 000000000000010c t nvc0_hw_query_allocate
00000000003d8d00 00000000000003dc t nvc0_hw_end_query
00000000003d90e0 0000000000000364 t nvc0_hw_begin_query
00000000003d9450 00000000000001a4 t nvc0_hw_create_query
00000000003d9600 0000000000000090 t nvc0_hw_get_driver_query_info
00000000003d9690 0000000000000060 t nvc0_hw_query_pushbuf_submit
00000000003d96f0 000000000000010c t nvc0_hw_query_fifo_wait
00000000003d9800 0000000000000658 t nvc0_hw_get_query_result_resource
00000000003d9e60 000000000000007c t nvc0_hw_metric_begin_query
00000000003d9ee0 000000000000005c t nvc0_hw_metric_end_query
00000000003d9f40 0000000000000128 t sm20_hw_metric_calc_result
00000000003da070 00000000000001b0 t sm30_hw_metric_calc_result
00000000003da220 00000000000002e0 t nvc0_hw_metric_get_query_result
00000000003da500 0000000000000064 t nvc0_hw_metric_destroy_query
00000000003da570 0000000000000068 t nvc0_hw_metric_get_num_queries
00000000003da5e0 0000000000000240 t nvc0_hw_metric_create_query
00000000003da820 00000000000001a4 t nvc0_hw_metric_get_driver_query_info
00000000003da9d0 0000000000000054 t nvc0_hw_sm_destroy_query
00000000003daa30 000000000000012c t nvc0_hw_sm_query_get_cfg.isra.0
00000000003dab60 0000000000000534 t nvc0_hw_sm_begin_query
00000000003db0a0 00000000000004f8 t nvc0_hw_sm_end_query
00000000003db5a0 0000000000000350 t nvc0_hw_sm_get_query_result
00000000003db8f0 0000000000000064 t nvc0_hw_sm_get_num_queries
00000000003db960 00000000000000d0 t nvc0_hw_sm_create_query
00000000003dba30 00000000000001a0 t nvc0_hw_sm_get_driver_query_info
00000000003dbbd0 0000000000000008 t nvc0_sw_create_query
00000000003dbbe0 0000000000000008 t nvc0_sw_get_driver_query_info
00000000003dbbf0 0000000000000064 t nvc0_query_dmabuf_modifiers
00000000003dbc60 0000000000000010 t nvc0_surface_create
00000000003dbc70 0000000000000010 t nvc0_resource_create_with_modifiers
00000000003dbc80 0000000000000038 t nvc0_resource_create
00000000003dbcc0 0000000000000034 t nvc0_resource_from_handle
00000000003dbd00 0000000000000060 t nvc0_init_resource_functions
00000000003dbd60 0000000000000048 t nvc0_screen_init_resource_functions
00000000003dbdb0 0000000000000190 t nvc0_vertprog_validate
00000000003dbf40 000000000000042c T nvc0_fragprog_validate
00000000003dc370 00000000000002b0 T nvc0_tctlprog_validate
00000000003dc620 0000000000000324 t nvc0_tevlprog_validate
00000000003dc950 00000000000002d0 t nvc0_gmtyprog_validate
00000000003dcc20 00000000000000e0 T nvc0_compprog_validate
00000000003dcd00 0000000000000130 T nvc0_layer_validate
00000000003dce30 00000000000004e8 T nvc0_tfb_validate
00000000003dd320 0000000000000014 t nvc0_blend_state_bind
00000000003dd340 0000000000000014 t nvc0_rasterizer_state_bind
00000000003dd360 0000000000000014 t nvc0_zsa_state_bind
00000000003dd380 0000000000000014 t nvc0_vp_state_bind
00000000003dd3a0 0000000000000014 t nvc0_fp_state_bind
00000000003dd3c0 0000000000000014 t nvc0_gp_state_bind
00000000003dd3e0 0000000000000014 t nvc0_tcp_state_bind
00000000003dd400 0000000000000014 t nvc0_tep_state_bind
00000000003dd420 0000000000000014 t nvc0_cp_state_bind
00000000003dd440 0000000000000020 t nvc0_set_blend_color
00000000003dd460 000000000000001c t nvc0_set_stencil_ref
00000000003dd480 0000000000000014 t nvc0_set_sample_mask
00000000003dd4a0 0000000000000020 t nvc0_set_min_samples
00000000003dd4c0 0000000000000038 t nvc0_set_polygon_stipple
00000000003dd500 0000000000000028 t nvc0_set_tess_state
00000000003dd530 0000000000000014 t nvc0_vertex_state_bind
00000000003dd550 0000000000000008 t nvc0_blend_state_delete
00000000003dd560 0000000000000168 t nvc0_set_vertex_buffers
00000000003dd6d0 0000000000000054 t nvc0_set_window_rectangles
00000000003dd730 000000000000005c t nvc0_set_sample_locations
00000000003dd790 0000000000000038 t nvc0_set_clip_state
00000000003dd7d0 00000000000000c0 t nvc0_set_viewport_states
00000000003dd890 0000000000000060 t nvc0_set_scissor_states
00000000003dd8f0 0000000000000054 t nvc0_set_framebuffer_state
00000000003dd950 000000000000022c t nvc0_zsa_state_create
00000000003ddb80 00000000000003e8 t nvc0_rasterizer_state_create
00000000003ddf70 00000000000000b0 t nvc0_cp_state_create
00000000003de020 00000000000000b4 t nvc0_sp_state_create
00000000003de0e0 0000000000000008 t nvc0_tep_state_create
00000000003de0f0 0000000000000008 t nvc0_tcp_state_create
00000000003de100 0000000000000008 t nvc0_gp_state_create
00000000003de110 0000000000000008 t nvc0_fp_state_create
00000000003de120 0000000000000008 t nvc0_vp_state_create
00000000003de130 0000000000000044 t nvc0_sp_state_delete
00000000003de180 00000000000000b0 t nvc0_sampler_state_delete
00000000003de230 00000000000000fc t nvc0_bind_sampler_states
00000000003de330 0000000000000008 t nvc0_zsa_state_delete
00000000003de340 0000000000000008 t nvc0_rasterizer_state_delete
00000000003de350 0000000000000308 t nvc0_set_constant_buffer
00000000003de660 00000000000000c4 t nvc0_so_target_save_offset
00000000003de730 0000000000000560 t nvc0_blend_state_create
00000000003dec90 00000000000001cc t nvc0_set_compute_resources
00000000003dee60 000000000000021c t nvc0_set_transform_feedback_targets
00000000003df080 0000000000000350 t nvc0_set_sampler_views
00000000003df3d0 0000000000000074 t nvc0_so_target_destroy
00000000003df450 00000000000000a8 t nvc0_sampler_view_destroy
00000000003df500 000000000000029c t nvc0_set_global_bindings
00000000003df7a0 0000000000000330 t nvc0_set_shader_buffers
00000000003dfad0 000000000000014c t nvc0_so_target_create
00000000003dfc20 00000000000004b0 t nvc0_set_shader_images
00000000003e00d0 0000000000000270 t nvc0_init_state_functions
00000000003e0340 000000000000006c t nvc0_validate_driverconst
00000000003e03b0 000000000000023c t nvc0_constbufs_validate
00000000003e05f0 0000000000000150 t nvc0_validate_scissor
00000000003e0740 0000000000000248 t nvc0_validate_buffers
00000000003e0990 0000000000000094 t nvc0_validate_tess_state
00000000003e0a30 0000000000000070 t nvc0_validate_sample_mask
00000000003e0aa0 000000000000008c t nvc0_validate_stipple
00000000003e0b30 0000000000000080 t nvc0_validate_blend_colour
00000000003e0bb0 0000000000000084 t nvc0_validate_zsa
00000000003e0c40 0000000000000084 t nvc0_validate_blend
00000000003e0cd0 0000000000000084 t nvc0_validate_rasterizer
00000000003e0d60 00000000000000fc t nvc0_validate_min_samples
00000000003e0e60 00000000000000bc t nvc0_validate_stencil_ref
00000000003e0f20 00000000000003b0 t nvc0_validate_viewport
00000000003e12d0 00000000000000d0 t nvc0_validate_fp_zsa_rast
00000000003e13a0 00000000000000b8 t nvc0_validate_rast_fb
00000000003e1460 00000000000001c0 t nvc0_validate_window_rects
00000000003e1620 00000000000003c4 t gm200_validate_sample_locations
00000000003e19f0 000000000000016c t validate_sample_locations
00000000003e1b60 00000000000000e4 t nvc0_validate_zsa_fb
00000000003e1c50 00000000000002f8 t nvc0_validate_fbread
00000000003e1f50 00000000000002f4 t nvc0_validate_clip
00000000003e2250 000000000000075c t nvc0_validate_fb
00000000003e29b0 0000000000000200 t nvc0_state_validate
00000000003e2bb0 0000000000000068 t nvc0_state_validate_3d
00000000003e2c20 000000000000000c t nvc0_draw_vbo_kick_notify
00000000003e2c30 0000000000000170 t nvc0_set_constant_vertex_attrib
00000000003e2da0 00000000000001a4 t nvc0_update_user_vbufs_shared
00000000003e2f50 0000000000000248 t nvc0_update_user_vbufs
00000000003e31a0 0000000000000030 T nvc0_vertex_state_delete
00000000003e31d0 00000000000003c0 T nvc0_vertex_state_create
00000000003e3590 00000000000008b8 T nvc0_vertex_arrays_validate
00000000003e3e50 000000000000146c T nvc0_draw_vbo
00000000003e52c0 0000000000001c18 t nvc0_push_vbo
00000000003e6ee0 0000000000000200 t nvc0_push_vbo_indirect
00000000003e70e0 000000000000009c t nvc0_decoder_end_frame
00000000003e7180 0000000000000014 t nvc0_decoder_decode_bitstream
00000000003e71a0 0000000000000010 t nvc0_decoder_begin_frame
00000000003e71b0 0000000000000838 T nvc0_create_decoder
00000000003e79f0 0000000000000008 T nvc0_video_buffer_create
00000000003e7a00 0000000000000214 t nvc0_decoder_setup_ppp
00000000003e7c20 0000000000000228 t nvc0_decoder_ppp
00000000003e7e50 0000000000000574 t nvc0_decoder_vp
00000000003e83d0 0000000000000098 t grow_to_fit.part.0
00000000003e8470 0000000000000010 t blob_init
00000000003e8480 0000000000000014 t blob_init_fixed
00000000003e84a0 0000000000000100 t blob_write_bytes
00000000003e85a0 000000000000007c t blob_write_uint32
00000000003e8620 000000000000007c t blob_write_uint64
00000000003e86a0 0000000000000038 t blob_overwrite_uint32
00000000003e86e0 0000000000000038 t blob_write_string
00000000003e8720 0000000000000014 t blob_reader_init
00000000003e8740 0000000000000048 t blob_read_bytes
00000000003e8790 000000000000004c t blob_copy_bytes
00000000003e87e0 0000000000000068 t blob_read_uint32
00000000003e8850 0000000000000068 t blob_read_uint64
00000000003e88c0 000000000000006c t blob_read_string
00000000003e8930 00000000000000e8 t _mesa_float_to_half
00000000003e8a20 0000000000000058 t _mesa_half_to_float
00000000003e8a80 000000000000002c t _mesa_half_to_unorm8
00000000003e8ab0 0000000000000038 t _mesa_uint16_div_64k_to_half
00000000003e8af0 0000000000000048 t _mesa_sha1_format
00000000003e8b40 000000000000003c t os_time_get_nano
00000000003e8b80 0000000000000038 t os_file_create_unique
00000000003e8bc0 0000000000000068 t os_log_message
00000000003e8c30 0000000000000004 t os_get_option
00000000003e8c40 0000000000000ff0 t SHA1Transform
00000000003e9c30 0000000000000038 t SHA1Init
00000000003e9c70 00000000000000ec t SHA1Update
00000000003e9d60 00000000000000b0 t SHA1Pad
00000000003e9e10 0000000000000060 t SHA1Final
00000000003e9e70 00000000000000cc t util_format_unsigned_write_rgtc_encoded_channel
00000000003e9f40 00000000000000c4 t util_format_signed_write_rgtc_encoded_channel
00000000003ea010 000000000000011c t util_format_unsigned_fetch_texel_rgtc
00000000003ea130 0000000000000b7c t util_format_unsigned_encode_rgtc_ubyte
00000000003eacb0 0000000000000124 t util_format_signed_fetch_texel_rgtc
00000000003eade0 0000000000000b90 t util_format_signed_encode_rgtc_ubyte
00000000003eb970 00000000000000f4 t set_search
00000000003eba70 0000000000000168 t set_rehash
00000000003ebbe0 00000000000001c0 t set_search_or_add
00000000003ebda0 000000000000008c t _mesa_set_create
00000000003ebe30 0000000000000084 t _mesa_set_clone
00000000003ebec0 00000000000000c0 t _mesa_set_destroy
00000000003ebf80 0000000000000038 t _mesa_set_search
00000000003ebfc0 0000000000000048 t _mesa_set_add
00000000003ec010 0000000000000024 t _mesa_set_remove
00000000003ec040 000000000000005c t _mesa_set_remove_key
00000000003ec0a0 000000000000004c t _mesa_set_next_entry
00000000003ec0f0 0000000000000014 t _mesa_pointer_set_create
00000000003ec110 000000000000006c t _mesa_string_buffer_create
00000000003ec180 00000000000000c0 t _mesa_string_buffer_append_len
00000000003ec240 00000000000000ec t _mesa_string_buffer_vprintf
00000000003ec330 000000000000006c t _mesa_string_buffer_printf
00000000003ec3a0 000000000000002c t _mesa_locale_init
00000000003ec3d0 000000000000000c t _mesa_locale_fini
00000000003ec3e0 000000000000000c t _mesa_strtod
00000000003ec3f0 000000000000000c t _mesa_strtof
00000000003ec400 000000000000002c t util_cpu_detect_once
00000000003ec430 0000000000000014 t util_cpu_detect
00000000003ec450 000000000000006c t write_bits
00000000003ec4c0 00000000000006f8 t compress_rgba_unorm
00000000003ecbc0 00000000000006c4 t compress_rgb_float
00000000003ed290 0000000000000070 t count_anchors_before_texel
00000000003ed300 0000000000000308 t extract_float_endpoints
00000000003ed610 0000000000000430 t extract_unorm_endpoints
00000000003eda40 0000000000000358 t fetch_rgb_float_from_block
00000000003edda0 0000000000000598 t decompress_rgb_float
00000000003ee340 00000000000004ec t fetch_rgba_unorm_from_block
00000000003ee830 00000000000006e0 t decompress_rgba_unorm
00000000003eef10 000000000000001c T util_format_bptc_rgba_unorm_unpack_rgba_8unorm
00000000003eef30 000000000000001c T util_format_bptc_rgba_unorm_pack_rgba_8unorm
00000000003eef50 00000000000000ac T util_format_bptc_rgba_unorm_unpack_rgba_float
00000000003ef000 00000000000000ac T util_format_bptc_rgba_unorm_pack_rgba_float
00000000003ef0b0 0000000000000078 T util_format_bptc_rgba_unorm_fetch_rgba_float
00000000003ef130 000000000000001c T util_format_bptc_srgba_unpack_rgba_8unorm
00000000003ef150 000000000000001c T util_format_bptc_srgba_pack_rgba_8unorm
00000000003ef170 00000000000000ac T util_format_bptc_srgba_unpack_rgba_float
00000000003ef220 0000000000000020 T util_format_bptc_srgba_pack_rgba_float
00000000003ef240 0000000000000084 T util_format_bptc_srgba_fetch_rgba_float
00000000003ef2d0 00000000000000b0 T util_format_bptc_rgb_float_unpack_rgba_8unorm
00000000003ef380 000000000000001c T util_format_bptc_rgb_float_pack_rgba_8unorm
00000000003ef3a0 0000000000000020 T util_format_bptc_rgb_float_unpack_rgba_float
00000000003ef3c0 0000000000000020 T util_format_bptc_rgb_float_pack_rgba_float
00000000003ef3e0 000000000000002c T util_format_bptc_rgb_float_fetch_rgba_float
00000000003ef410 00000000000000b0 T util_format_bptc_rgb_ufloat_unpack_rgba_8unorm
00000000003ef4c0 000000000000001c T util_format_bptc_rgb_ufloat_pack_rgba_8unorm
00000000003ef4e0 0000000000000020 T util_format_bptc_rgb_ufloat_unpack_rgba_float
00000000003ef500 0000000000000020 T util_format_bptc_rgb_ufloat_pack_rgba_float
00000000003ef520 000000000000002c T util_format_bptc_rgb_ufloat_fetch_rgba_float
00000000003ef550 000000000000013c t etc1_parse_block
00000000003ef690 00000000000000c8 t etc1_fetch_texel
00000000003ef760 0000000000000128 T util_format_etc1_rgb8_unpack_rgba_8unorm
00000000003ef890 0000000000000004 T util_format_etc1_rgb8_pack_rgba_8unorm
00000000003ef8a0 0000000000000134 T util_format_etc1_rgb8_unpack_rgba_float
00000000003ef9e0 0000000000000004 T util_format_etc1_rgb8_pack_rgba_float
00000000003ef9f0 0000000000000070 T util_format_etc1_rgb8_fetch_rgba_float
00000000003efa60 0000000000000040 T util_format_latc1_unorm_fetch_rgba_8unorm
00000000003efaa0 0000000000000004 T util_format_latc1_unorm_unpack_rgba_8unorm
00000000003efab0 0000000000000004 T util_format_latc1_unorm_pack_rgba_8unorm
00000000003efac0 0000000000000168 T util_format_latc1_unorm_unpack_rgba_float
00000000003efc30 0000000000000004 T util_format_latc1_unorm_pack_rgba_float
00000000003efc40 0000000000000050 T util_format_latc1_unorm_fetch_rgba_float
00000000003efc90 0000000000000028 T util_format_latc1_snorm_fetch_rgba_8unorm
00000000003efcc0 0000000000000028 T util_format_latc1_snorm_unpack_rgba_8unorm
00000000003efcf0 0000000000000028 T util_format_latc1_snorm_pack_rgba_8unorm
00000000003efd20 0000000000000004 T util_format_latc1_snorm_pack_rgba_float
00000000003efd30 000000000000016c T util_format_latc1_snorm_unpack_rgba_float
00000000003efea0 0000000000000058 T util_format_latc1_snorm_fetch_rgba_float
00000000003eff00 0000000000000064 T util_format_latc2_unorm_fetch_rgba_8unorm
00000000003eff70 0000000000000004 T util_format_latc2_unorm_unpack_rgba_8unorm
00000000003eff80 0000000000000004 T util_format_latc2_unorm_pack_rgba_8unorm
00000000003eff90 0000000000000008 T util_format_latc2_unorm_pack_rgba_float
00000000003effa0 00000000000001e4 T util_format_latc2_unorm_unpack_rgba_float
00000000003f0190 0000000000000088 T util_format_latc2_unorm_fetch_rgba_float
00000000003f0220 0000000000000028 T util_format_latc2_snorm_fetch_rgba_8unorm
00000000003f0250 0000000000000028 T util_format_latc2_snorm_unpack_rgba_8unorm
00000000003f0280 0000000000000028 T util_format_latc2_snorm_pack_rgba_8unorm
00000000003f02b0 00000000000001e4 T util_format_latc2_snorm_unpack_rgba_float
00000000003f04a0 0000000000000008 T util_format_latc2_snorm_pack_rgba_float
00000000003f04b0 00000000000000a8 T util_format_latc2_snorm_fetch_rgba_float
00000000003f0560 0000000000000098 T util_format_r9g9b9e5_float_unpack_rgba_float
00000000003f0600 0000000000000268 T util_format_r9g9b9e5_float_pack_rgba_float
00000000003f0870 000000000000004c T util_format_r9g9b9e5_float_fetch_rgba_float
00000000003f08c0 000000000000012c T util_format_r9g9b9e5_float_unpack_rgba_8unorm
00000000003f09f0 0000000000000274 T util_format_r9g9b9e5_float_pack_rgba_8unorm
00000000003f0c70 00000000000001e4 T util_format_r11g11b10_float_unpack_rgba_float
00000000003f0e60 0000000000000218 T util_format_r11g11b10_float_pack_rgba_float
00000000003f1080 000000000000018c T util_format_r11g11b10_float_fetch_rgba_float
00000000003f1210 000000000000025c T util_format_r11g11b10_float_unpack_rgba_8unorm
00000000003f1470 0000000000000288 T util_format_r11g11b10_float_pack_rgba_8unorm
00000000003f1700 0000000000000004 T util_format_r1_unorm_unpack_rgba_float
00000000003f1710 0000000000000004 T util_format_r1_unorm_pack_rgba_float
00000000003f1720 0000000000000004 T util_format_r1_unorm_fetch_rgba_float
00000000003f1730 0000000000000004 T util_format_r1_unorm_unpack_rgba_8unorm
00000000003f1740 0000000000000004 T util_format_r1_unorm_pack_rgba_8unorm
00000000003f1750 00000000000000e0 T util_format_r8g8bx_snorm_unpack_rgba_float
00000000003f1830 0000000000000150 T util_format_r8g8bx_snorm_unpack_rgba_8unorm
00000000003f1980 00000000000000c8 T util_format_r8g8bx_snorm_pack_rgba_float
00000000003f1a50 000000000000006c T util_format_r8g8bx_snorm_pack_rgba_8unorm
00000000003f1ac0 0000000000000090 T util_format_r8g8bx_snorm_fetch_rgba_float
00000000003f1b50 0000000000000038 T util_format_rgtc1_unorm_fetch_rgba_8unorm
00000000003f1b90 0000000000000138 t util_format_rgtc1_unorm_unpack_rgba_8unorm
00000000003f1cd0 0000000000000110 t util_format_rgtc1_unorm_pack_rgba_8unorm
00000000003f1de0 0000000000000168 T util_format_rgtc1_unorm_unpack_rgba_float
00000000003f1f50 0000000000000154 t util_format_rgtc1_unorm_pack_rgba_float
00000000003f20b0 0000000000000054 T util_format_rgtc1_unorm_fetch_rgba_float
00000000003f2110 0000000000000028 T util_format_rgtc1_snorm_fetch_rgba_8unorm
00000000003f2140 0000000000000028 T util_format_rgtc1_snorm_unpack_rgba_8unorm
00000000003f2170 0000000000000028 T util_format_rgtc1_snorm_pack_rgba_8unorm
00000000003f21a0 0000000000000128 t util_format_rgtc1_snorm_pack_rgba_float
00000000003f22d0 000000000000016c T util_format_rgtc1_snorm_unpack_rgba_float
00000000003f2440 000000000000005c T util_format_rgtc1_snorm_fetch_rgba_float
00000000003f24a0 0000000000000064 T util_format_rgtc2_unorm_fetch_rgba_8unorm
00000000003f2510 0000000000000158 t util_format_rgtc2_unorm_unpack_rgba_8unorm
00000000003f2670 0000000000000130 t util_format_rgtc2_unorm_pack_rgba_8unorm
00000000003f27a0 00000000000001bc t util_format_rxtc2_unorm_pack_rgba_float
00000000003f2960 0000000000000008 T util_format_rgtc2_unorm_pack_rgba_float
00000000003f2970 00000000000001e8 T util_format_rgtc2_unorm_unpack_rgba_float
00000000003f2b60 000000000000008c T util_format_rgtc2_unorm_fetch_rgba_float
00000000003f2bf0 0000000000000028 T util_format_rgtc2_snorm_fetch_rgba_8unorm
00000000003f2c20 0000000000000028 T util_format_rgtc2_snorm_unpack_rgba_8unorm
00000000003f2c50 0000000000000028 T util_format_rgtc2_snorm_pack_rgba_8unorm
00000000003f2c80 00000000000001e8 T util_format_rgtc2_snorm_unpack_rgba_float
00000000003f2e70 000000000000016c t util_format_rxtc2_snorm_pack_rgba_float
00000000003f2fe0 0000000000000008 T util_format_rgtc2_snorm_pack_rgba_float
00000000003f2ff0 00000000000000ac T util_format_rgtc2_snorm_fetch_rgba_float
00000000003f30a0 00000000000001fc t dxt135_decode_imageblock
00000000003f32a0 0000000000000054 t fetch_2d_texel_rgb_dxt1
00000000003f3300 0000000000000054 t fetch_2d_texel_rgba_dxt1
00000000003f3360 000000000000008c t fetch_2d_texel_rgba_dxt3
00000000003f33f0 0000000000000150 t fetch_2d_texel_rgba_dxt5
00000000003f3540 0000000000000c44 t encodedxtcolorblockfaster
00000000003f4190 00000000000000cc t writedxt5encodedalphablock
00000000003f4260 0000000000001268 t tx_compress_dxtn
00000000003f54d0 0000000000000018 T util_format_dxt1_rgb_fetch_rgba_8unorm
00000000003f54f0 0000000000000018 T util_format_dxt1_rgba_fetch_rgba_8unorm
00000000003f5510 0000000000000018 T util_format_dxt3_rgba_fetch_rgba_8unorm
00000000003f5530 0000000000000018 T util_format_dxt5_rgba_fetch_rgba_8unorm
00000000003f5550 000000000000006c T util_format_dxt1_rgb_fetch_rgba_float
00000000003f55c0 0000000000000074 T util_format_dxt1_rgba_fetch_rgba_float
00000000003f5640 0000000000000074 T util_format_dxt3_rgba_fetch_rgba_float
00000000003f56c0 0000000000000074 T util_format_dxt5_rgba_fetch_rgba_float
00000000003f5740 0000000000000120 T util_format_dxt1_rgb_unpack_rgba_8unorm
00000000003f5860 0000000000000120 T util_format_dxt1_rgba_unpack_rgba_8unorm
00000000003f5980 0000000000000120 T util_format_dxt3_rgba_unpack_rgba_8unorm
00000000003f5aa0 0000000000000120 T util_format_dxt5_rgba_unpack_rgba_8unorm
00000000003f5bc0 0000000000000188 T util_format_dxt1_rgb_unpack_rgba_float
00000000003f5d50 0000000000000188 T util_format_dxt1_rgba_unpack_rgba_float
00000000003f5ee0 0000000000000188 T util_format_dxt3_rgba_unpack_rgba_float
00000000003f6070 0000000000000188 T util_format_dxt5_rgba_unpack_rgba_float
00000000003f6200 0000000000000134 T util_format_dxt1_rgb_pack_rgba_8unorm
00000000003f6340 0000000000000134 T util_format_dxt1_rgba_pack_rgba_8unorm
00000000003f6480 0000000000000134 T util_format_dxt3_rgba_pack_rgba_8unorm
00000000003f65c0 0000000000000134 T util_format_dxt5_rgba_pack_rgba_8unorm
00000000003f6700 00000000000001a4 T util_format_dxt1_rgb_pack_rgba_float
00000000003f68b0 00000000000001a4 T util_format_dxt1_rgba_pack_rgba_float
00000000003f6a60 00000000000001a4 T util_format_dxt3_rgba_pack_rgba_float
00000000003f6c10 00000000000001a4 T util_format_dxt5_rgba_pack_rgba_float
00000000003f6dc0 0000000000000064 T util_format_dxt1_srgb_fetch_rgba_8unorm
00000000003f6e30 0000000000000064 T util_format_dxt1_srgba_fetch_rgba_8unorm
00000000003f6ea0 0000000000000064 T util_format_dxt3_srgba_fetch_rgba_8unorm
00000000003f6f10 0000000000000064 T util_format_dxt5_srgba_fetch_rgba_8unorm
00000000003f6f80 0000000000000060 T util_format_dxt1_srgb_fetch_rgba_float
00000000003f6fe0 0000000000000070 T util_format_dxt1_srgba_fetch_rgba_float
00000000003f7050 0000000000000070 T util_format_dxt3_srgba_fetch_rgba_float
00000000003f70c0 0000000000000070 T util_format_dxt5_srgba_fetch_rgba_float
00000000003f7130 0000000000000164 T util_format_dxt1_srgb_unpack_rgba_8unorm
00000000003f72a0 0000000000000164 T util_format_dxt1_srgba_unpack_rgba_8unorm
00000000003f7410 0000000000000164 T util_format_dxt3_srgba_unpack_rgba_8unorm
00000000003f7580 0000000000000164 T util_format_dxt5_srgba_unpack_rgba_8unorm
00000000003f76f0 000000000000018c T util_format_dxt1_srgb_unpack_rgba_float
00000000003f7880 000000000000018c T util_format_dxt1_srgba_unpack_rgba_float
00000000003f7a10 000000000000018c T util_format_dxt3_srgba_unpack_rgba_float
00000000003f7ba0 000000000000018c T util_format_dxt5_srgba_unpack_rgba_float
00000000003f7d30 000000000000014c T util_format_dxt1_srgb_pack_rgba_8unorm
00000000003f7e80 000000000000014c T util_format_dxt1_srgba_pack_rgba_8unorm
00000000003f7fd0 000000000000014c T util_format_dxt3_srgba_pack_rgba_8unorm
00000000003f8120 000000000000014c T util_format_dxt5_srgba_pack_rgba_8unorm
00000000003f8270 00000000000001e8 T util_format_dxt1_srgb_pack_rgba_float
00000000003f8460 00000000000001e8 T util_format_dxt1_srgba_pack_rgba_float
00000000003f8650 00000000000001e8 T util_format_dxt3_srgba_pack_rgba_float
00000000003f8840 00000000000001e8 T util_format_dxt5_srgba_pack_rgba_float
00000000003f8a30 000000000000011c T util_format_r8g8_b8g8_unorm_unpack_rgba_float
00000000003f8b50 00000000000000cc T util_format_r8g8_b8g8_unorm_unpack_rgba_8unorm
00000000003f8c20 00000000000001f8 T util_format_r8g8_b8g8_unorm_pack_rgba_float
00000000003f8e20 00000000000000ec T util_format_r8g8_b8g8_unorm_pack_rgba_8unorm
00000000003f8f10 000000000000004c T util_format_r8g8_b8g8_unorm_fetch_rgba_float
00000000003f8f60 0000000000000120 T util_format_g8r8_g8b8_unorm_unpack_rgba_float
00000000003f9080 00000000000000cc T util_format_g8r8_g8b8_unorm_unpack_rgba_8unorm
00000000003f9150 00000000000001f4 T util_format_g8r8_g8b8_unorm_pack_rgba_float
00000000003f9350 00000000000000ec T util_format_g8r8_g8b8_unorm_pack_rgba_8unorm
00000000003f9440 0000000000000048 T util_format_g8r8_g8b8_unorm_fetch_rgba_float
00000000003f9490 00000000000001cc T util_format_uyvy_unpack_rgba_float
00000000003f9660 0000000000000274 T util_format_uyvy_unpack_rgba_8unorm
00000000003f98e0 000000000000043c T util_format_uyvy_pack_rgba_float
00000000003f9d20 0000000000000274 T util_format_uyvy_pack_rgba_8unorm
00000000003f9fa0 00000000000000b8 T util_format_uyvy_fetch_rgba_float
00000000003fa060 00000000000001cc T util_format_yuyv_unpack_rgba_float
00000000003fa230 0000000000000274 T util_format_yuyv_unpack_rgba_8unorm
00000000003fa4b0 000000000000043c T util_format_yuyv_pack_rgba_float
00000000003fa8f0 0000000000000278 T util_format_yuyv_pack_rgba_8unorm
00000000003fab70 00000000000000b4 T util_format_yuyv_fetch_rgba_float
00000000003fac30 0000000000000004 T util_format_yv12_unpack_rgba_8unorm
00000000003fac40 0000000000000004 T util_format_yv12_pack_rgba_8unorm
00000000003fac50 0000000000000004 T util_format_yv12_unpack_rgba_float
00000000003fac60 0000000000000004 T util_format_yv12_pack_rgba_float
00000000003fac70 0000000000000004 T util_format_yv12_fetch_rgba_float
00000000003fac80 0000000000000004 T util_format_yv16_unpack_rgba_8unorm
00000000003fac90 0000000000000004 T util_format_yv16_pack_rgba_8unorm
00000000003faca0 0000000000000004 T util_format_yv16_unpack_rgba_float
00000000003facb0 0000000000000004 T util_format_yv16_pack_rgba_float
00000000003facc0 0000000000000004 T util_format_yv16_fetch_rgba_float
00000000003facd0 0000000000000004 T util_format_iyuv_unpack_rgba_8unorm
00000000003face0 0000000000000004 T util_format_iyuv_pack_rgba_8unorm
00000000003facf0 0000000000000004 T util_format_iyuv_unpack_rgba_float
00000000003fad00 0000000000000004 T util_format_iyuv_pack_rgba_float
00000000003fad10 0000000000000004 T util_format_iyuv_fetch_rgba_float
00000000003fad20 0000000000000004 T util_format_nv12_unpack_rgba_8unorm
00000000003fad30 0000000000000004 T util_format_nv12_pack_rgba_8unorm
00000000003fad40 0000000000000004 T util_format_nv12_unpack_rgba_float
00000000003fad50 0000000000000004 T util_format_nv12_pack_rgba_float
00000000003fad60 0000000000000004 T util_format_nv12_fetch_rgba_float
00000000003fad70 0000000000000004 T util_format_nv21_unpack_rgba_8unorm
00000000003fad80 0000000000000004 T util_format_nv21_pack_rgba_8unorm
00000000003fad90 0000000000000004 T util_format_nv21_unpack_rgba_float
00000000003fada0 0000000000000004 T util_format_nv21_pack_rgba_float
00000000003fadb0 0000000000000004 T util_format_nv21_fetch_rgba_float
00000000003fadc0 0000000000000004 T util_format_p010_unpack_rgba_8unorm
00000000003fadd0 0000000000000004 T util_format_p010_pack_rgba_8unorm
00000000003fade0 0000000000000004 T util_format_p010_unpack_rgba_float
00000000003fadf0 0000000000000004 T util_format_p010_pack_rgba_float
00000000003fae00 0000000000000004 T util_format_p010_fetch_rgba_float
00000000003fae10 0000000000000004 T util_format_p016_unpack_rgba_8unorm
00000000003fae20 0000000000000004 T util_format_p016_pack_rgba_8unorm
00000000003fae30 0000000000000004 T util_format_p016_unpack_rgba_float
00000000003fae40 0000000000000004 T util_format_p016_pack_rgba_float
00000000003fae50 0000000000000004 T util_format_p016_fetch_rgba_float
00000000003fae60 0000000000000004 T util_format_xyuv_unpack_rgba_float
00000000003fae70 0000000000000004 T util_format_xyuv_unpack_rgba_8unorm
00000000003fae80 0000000000000004 T util_format_xyuv_pack_rgba_float
00000000003fae90 0000000000000004 T util_format_xyuv_pack_rgba_8unorm
00000000003faea0 0000000000000004 T util_format_xyuv_fetch_rgba_float
00000000003faeb0 0000000000000004 T util_format_ayuv_unpack_rgba_float
00000000003faec0 0000000000000004 T util_format_ayuv_unpack_rgba_8unorm
00000000003faed0 0000000000000004 T util_format_ayuv_pack_rgba_float
00000000003faee0 0000000000000004 T util_format_ayuv_pack_rgba_8unorm
00000000003faef0 0000000000000004 T util_format_ayuv_fetch_rgba_float
00000000003faf00 0000000000000004 T util_format_r8g8_r8b8_unorm_unpack_rgba_float
00000000003faf10 0000000000000004 T util_format_r8g8_r8b8_unorm_unpack_rgba_8unorm
00000000003faf20 0000000000000004 T util_format_r8g8_r8b8_unorm_pack_rgba_float
00000000003faf30 0000000000000004 T util_format_r8g8_r8b8_unorm_pack_rgba_8unorm
00000000003faf40 0000000000000004 T util_format_r8g8_r8b8_unorm_fetch_rgba_float
00000000003faf50 0000000000000004 T util_format_g8r8_b8r8_unorm_unpack_rgba_float
00000000003faf60 0000000000000004 T util_format_g8r8_b8r8_unorm_unpack_rgba_8unorm
00000000003faf70 0000000000000004 T util_format_g8r8_b8r8_unorm_pack_rgba_float
00000000003faf80 0000000000000004 T util_format_g8r8_b8r8_unorm_pack_rgba_8unorm
00000000003faf90 0000000000000004 T util_format_g8r8_b8r8_unorm_fetch_rgba_float
00000000003fafa0 0000000000000074 T util_format_s8_uint_unpack_s_8uint
00000000003fb020 0000000000000074 T util_format_s8_uint_pack_s_8uint
00000000003fb0a0 000000000000005c T util_format_z16_unorm_unpack_z_float
00000000003fb100 0000000000000060 T util_format_z16_unorm_pack_z_float
00000000003fb160 0000000000000048 T util_format_z16_unorm_unpack_z_32unorm
00000000003fb1b0 0000000000000048 T util_format_z16_unorm_pack_z_32unorm
00000000003fb200 0000000000000060 T util_format_z32_unorm_unpack_z_float
00000000003fb260 0000000000000060 T util_format_z32_unorm_pack_z_float
00000000003fb2c0 0000000000000074 T util_format_z32_unorm_unpack_z_32unorm
00000000003fb340 0000000000000074 T util_format_z32_unorm_pack_z_32unorm
00000000003fb3c0 0000000000000074 T util_format_z32_float_unpack_z_float
00000000003fb440 0000000000000074 T util_format_z32_float_pack_z_float
00000000003fb4c0 0000000000000060 T util_format_z32_float_unpack_z_32unorm
00000000003fb520 0000000000000060 T util_format_z32_float_pack_z_32unorm
00000000003fb580 000000000000005c T util_format_z24_unorm_s8_uint_unpack_z_float
00000000003fb5e0 0000000000000068 T util_format_z24_unorm_s8_uint_pack_z_float
00000000003fb650 000000000000004c T util_format_z24_unorm_s8_uint_unpack_z_32unorm
00000000003fb6a0 0000000000000050 T util_format_z24_unorm_s8_uint_pack_z_32unorm
00000000003fb6f0 0000000000000048 T util_format_z24_unorm_s8_uint_unpack_s_8uint
00000000003fb740 0000000000000048 T util_format_z24_unorm_s8_uint_pack_s_8uint
00000000003fb790 000000000000005c T util_format_s8_uint_z24_unorm_unpack_z_float
00000000003fb7f0 0000000000000068 T util_format_s8_uint_z24_unorm_pack_z_float
00000000003fb860 000000000000004c T util_format_s8_uint_z24_unorm_unpack_z_32unorm
00000000003fb8b0 000000000000004c T util_format_s8_uint_z24_unorm_pack_z_32unorm
00000000003fb900 0000000000000044 T util_format_s8_uint_z24_unorm_unpack_s_8uint
00000000003fb950 0000000000000048 T util_format_s8_uint_z24_unorm_pack_s_8uint
00000000003fb9a0 000000000000005c T util_format_z24x8_unorm_unpack_z_float
00000000003fba00 0000000000000064 T util_format_z24x8_unorm_pack_z_float
00000000003fba70 000000000000004c T util_format_z24x8_unorm_unpack_z_32unorm
00000000003fbac0 0000000000000048 T util_format_z24x8_unorm_pack_z_32unorm
00000000003fbb10 000000000000005c T util_format_x8z24_unorm_unpack_z_float
00000000003fbb70 0000000000000064 T util_format_x8z24_unorm_pack_z_float
00000000003fbbe0 000000000000004c T util_format_x8z24_unorm_unpack_z_32unorm
00000000003fbc30 0000000000000048 T util_format_x8z24_unorm_pack_z_32unorm
00000000003fbc80 0000000000000048 T util_format_z32_float_s8x24_uint_unpack_z_float
00000000003fbcd0 0000000000000048 T util_format_z32_float_s8x24_uint_pack_z_float
00000000003fbd20 0000000000000064 T util_format_z32_float_s8x24_uint_unpack_z_32unorm
00000000003fbd90 0000000000000060 T util_format_z32_float_s8x24_uint_pack_z_32unorm
00000000003fbdf0 000000000000005c T util_format_z32_float_s8x24_uint_unpack_s_8uint
00000000003fbe50 000000000000005c T util_format_z32_float_s8x24_uint_pack_s_8uint
00000000003fbeb0 0000000000000048 T util_format_x24s8_uint_unpack_s_8uint
00000000003fbf00 0000000000000048 T util_format_x24s8_uint_pack_s_8uint
00000000003fbf50 0000000000000044 T util_format_s8x24_uint_unpack_s_8uint
00000000003fbfa0 0000000000000048 T util_format_s8x24_uint_pack_s_8uint
00000000003fbff0 000000000000005c T util_format_x32_s8x24_uint_unpack_s_8uint
00000000003fc050 000000000000005c T util_format_x32_s8x24_uint_pack_s_8uint
00000000003fc0b0 00000000000002dc t (anonymous namespace)::add_uniform_to_shader::visit_field(glsl_type const*, char const*, bool, glsl_type const*, glsl_interface_packing, bool)
00000000003fc390 00000000000000f4 t _mesa_generate_parameters_list_for_uniforms
00000000003fc490 0000000000000408 t _mesa_associate_uniform_storage
00000000003fc8a0 000000000000024c t _mesa_glsl_link_shader
00000000003fcaf0 00000000000000f0 t get_src_arg_mask
00000000003fcbe0 0000000000000018 t compare_start
00000000003fcc00 0000000000000078 t update_interval
00000000003fcc80 000000000000019c t find_next_use
00000000003fce20 00000000000000ec t remove_instructions
00000000003fcf10 000000000000022c t _mesa_remove_dead_code_global
00000000003fd140 0000000000000198 t _mesa_simplify_cmp
00000000003fd2e0 0000000000000180 t _mesa_find_temp_intervals
00000000003fd460 000000000000039c t _mesa_reallocate_registers
00000000003fd800 0000000000000790 t _mesa_optimize_program
00000000003fdf90 000000000000000c t _mesa_new_parameter_list
00000000003fdfa0 00000000000000d8 t _mesa_new_parameter_list_sized
00000000003fe080 0000000000000068 t _mesa_free_parameter_list
00000000003fe0f0 00000000000000c4 t _mesa_reserve_parameter_storage
00000000003fe1c0 0000000000000274 t _mesa_add_parameter
00000000003fe440 00000000000002b8 t _mesa_add_typed_unnamed_constant
00000000003fe700 00000000000000f4 t _mesa_add_sized_state_reference
00000000003fe800 000000000000000c t _mesa_add_state_reference
00000000003fe810 000000000000007c t binary
00000000003fe890 0000000000000188 t _mesa_register_file_name
00000000003fea20 0000000000000214 t reg_string
00000000003fec40 00000000000000e0 t _mesa_fprint_parameter_list.part.0
00000000003fed20 0000000000000268 t _mesa_swizzle_string
00000000003fef90 0000000000000068 t fprint_src_reg
00000000003ff000 0000000000000084 t _mesa_writemask_string
00000000003ff090 0000000000000170 t _mesa_fprint_alu_instruction
00000000003ff200 0000000000000684 t _mesa_fprint_instruction_opt
00000000003ff890 0000000000000154 t _mesa_fprint_program_opt
00000000003ff9f0 0000000000000030 t _mesa_print_program
00000000003ffa20 00000000000001b8 t _mesa_print_program_parameters
00000000003ffbe0 0000000000000038 t _mesa_print_parameter_list
00000000003ffc20 0000000000000190 t _mesa_write_shader_to_file
00000000003ffdb0 0000000000000048 t _mesa_set_program_error
00000000003ffe00 00000000000000c8 t _mesa_init_gl_program
00000000003ffed0 0000000000000070 t _mesa_delete_program
00000000003fff40 0000000000000018 t _mesa_lookup_program
00000000003fff60 0000000000000094 t _mesa_reference_program_
0000000000400000 00000000000000e4 t _mesa_init_program
00000000004000f0 00000000000000a0 t _mesa_free_program_data
0000000000400190 00000000000000a0 t _mesa_update_default_objects_program
0000000000400230 00000000000000f8 t _mesa_insert_instructions
0000000000400330 00000000000000e0 t _mesa_delete_instructions
0000000000400410 00000000000000f0 t _mesa_find_used_registers
0000000000400500 0000000000000038 t _mesa_find_free_register
0000000000400540 00000000000000a0 t _mesa_get_min_invocations_per_fragment
00000000004005e0 0000000000000360 t _mesa_insert_mvp_code
0000000000400940 00000000000003fc t _mesa_append_fog_code
0000000000400d40 0000000000000250 t _mesa_remove_output_reads
0000000000400f90 00000000000000d4 t _mesa_program_fragment_position_to_sysval
0000000000401070 0000000000000ee8 t append_token
0000000000401f60 0000000000000104 t _mesa_program_state_flags
0000000000402070 0000000000000778 t _mesa_program_state_string
00000000004027f0 0000000000001314 t _mesa_load_state_parameters
0000000000403b10 0000000000000098 t _mesa_symbol_table_pop_scope
0000000000403bb0 0000000000000058 t _mesa_symbol_table_push_scope
0000000000403c10 000000000000004c t _mesa_symbol_table_symbol_scope
0000000000403c60 0000000000000028 t _mesa_symbol_table_find_symbol
0000000000403c90 00000000000000e4 t _mesa_symbol_table_add_symbol
0000000000403d80 0000000000000048 t _mesa_symbol_table_replace_symbol
0000000000403dd0 0000000000000088 t _mesa_symbol_table_ctor
0000000000403e60 0000000000000044 t _mesa_symbol_table_dtor
0000000000403eb0 00000000000001cc t accum_scale_or_bias
0000000000404080 000000000000030c t accum_or_load
0000000000404390 0000000000000124 t _mesa_ClearAccum
00000000004044c0 00000000000001e8 t _mesa_clear_accum_buffer
00000000004046b0 0000000000000010 t _mesa_init_accum
00000000004046c0 0000000000000764 T _mesa_Accum
0000000000404e30 000000000000006c t VertexAttrib1NbvNV
0000000000404ea0 000000000000004c t VertexAttrib1bvNV
0000000000404ef0 000000000000007c t VertexAttrib2NbvNV
0000000000404f70 0000000000000054 t VertexAttrib2bvNV
0000000000404fd0 0000000000000094 t VertexAttrib3NbvNV
0000000000405070 000000000000005c t VertexAttrib3bvNV
00000000004050d0 00000000000000a8 t VertexAttrib4NbvNV
0000000000405180 0000000000000064 t VertexAttrib4bvNV
00000000004051f0 0000000000000058 t VertexAttrib1NubvNV
0000000000405250 000000000000004c t VertexAttrib1ubvNV
00000000004052a0 0000000000000060 t VertexAttrib2NubvNV
0000000000405300 0000000000000054 t VertexAttrib2ubvNV
0000000000405360 0000000000000068 t VertexAttrib3NubvNV
00000000004053d0 000000000000005c t VertexAttrib3ubvNV
0000000000405430 0000000000000070 t VertexAttrib4NubvNV
00000000004054a0 0000000000000064 t VertexAttrib4ubvNV
0000000000405510 000000000000006c t VertexAttrib1NsvNV
0000000000405580 000000000000004c t VertexAttrib1svNV
00000000004055d0 000000000000007c t VertexAttrib2NsvNV
0000000000405650 0000000000000054 t VertexAttrib2svNV
00000000004056b0 0000000000000094 t VertexAttrib3NsvNV
0000000000405750 000000000000005c t VertexAttrib3svNV
00000000004057b0 00000000000000a8 t VertexAttrib4NsvNV
0000000000405860 0000000000000064 t VertexAttrib4svNV
00000000004058d0 0000000000000060 t VertexAttrib1NusvNV
0000000000405930 000000000000004c t VertexAttrib1usvNV
0000000000405980 000000000000006c t VertexAttrib2NusvNV
00000000004059f0 0000000000000054 t VertexAttrib2usvNV
0000000000405a50 0000000000000078 t VertexAttrib3NusvNV
0000000000405ad0 000000000000005c t VertexAttrib3usvNV
0000000000405b30 0000000000000084 t VertexAttrib4NusvNV
0000000000405bc0 0000000000000064 t VertexAttrib4usvNV
0000000000405c30 0000000000000074 t VertexAttrib1NivNV
0000000000405cb0 000000000000004c t VertexAttrib1ivNV
0000000000405d00 000000000000008c t VertexAttrib2NivNV
0000000000405d90 0000000000000050 t VertexAttrib2ivNV
0000000000405de0 00000000000000a8 t VertexAttrib3NivNV
0000000000405e90 0000000000000058 t VertexAttrib3ivNV
0000000000405ef0 00000000000000c0 t VertexAttrib4NivNV
0000000000405fb0 000000000000005c t VertexAttrib4ivNV
0000000000406010 0000000000000064 t VertexAttrib1NuivNV
0000000000406080 000000000000004c t VertexAttrib1uivNV
00000000004060d0 0000000000000070 t VertexAttrib2NuivNV
0000000000406140 0000000000000050 t VertexAttrib2uivNV
0000000000406190 0000000000000080 t VertexAttrib3NuivNV
0000000000406210 0000000000000058 t VertexAttrib3uivNV
0000000000406270 000000000000008c t VertexAttrib4NuivNV
0000000000406300 000000000000005c t VertexAttrib4uivNV
0000000000406360 0000000000000044 t VertexAttrib1fvNV
00000000004063b0 0000000000000044 t VertexAttrib2fvNV
0000000000406400 0000000000000044 t VertexAttrib3fvNV
0000000000406450 0000000000000044 t VertexAttrib4fvNV
00000000004064a0 0000000000000044 t VertexAttrib1dvNV
00000000004064f0 0000000000000044 t VertexAttrib2dvNV
0000000000406540 0000000000000044 t VertexAttrib3dvNV
0000000000406590 0000000000000044 t VertexAttrib4dvNV
00000000004065e0 000000000000006c t VertexAttrib1NbvARB
0000000000406650 000000000000004c t VertexAttrib1bvARB
00000000004066a0 000000000000007c t VertexAttrib2NbvARB
0000000000406720 0000000000000054 t VertexAttrib2bvARB
0000000000406780 0000000000000094 t VertexAttrib3NbvARB
0000000000406820 000000000000005c t VertexAttrib3bvARB
0000000000406880 00000000000000a8 t VertexAttrib4NbvARB
0000000000406930 0000000000000064 t VertexAttrib4bvARB
00000000004069a0 0000000000000058 t VertexAttrib1NubvARB
0000000000406a00 000000000000004c t VertexAttrib1ubvARB
0000000000406a50 0000000000000060 t VertexAttrib2NubvARB
0000000000406ab0 0000000000000054 t VertexAttrib2ubvARB
0000000000406b10 0000000000000068 t VertexAttrib3NubvARB
0000000000406b80 000000000000005c t VertexAttrib3ubvARB
0000000000406be0 0000000000000070 t VertexAttrib4NubvARB
0000000000406c50 0000000000000064 t VertexAttrib4ubvARB
0000000000406cc0 000000000000006c t VertexAttrib1NsvARB
0000000000406d30 000000000000004c t VertexAttrib1svARB
0000000000406d80 000000000000007c t VertexAttrib2NsvARB
0000000000406e00 0000000000000054 t VertexAttrib2svARB
0000000000406e60 0000000000000094 t VertexAttrib3NsvARB
0000000000406f00 000000000000005c t VertexAttrib3svARB
0000000000406f60 00000000000000a8 t VertexAttrib4NsvARB
0000000000407010 0000000000000064 t VertexAttrib4svARB
0000000000407080 0000000000000060 t VertexAttrib1NusvARB
00000000004070e0 000000000000004c t VertexAttrib1usvARB
0000000000407130 000000000000006c t VertexAttrib2NusvARB
00000000004071a0 0000000000000054 t VertexAttrib2usvARB
0000000000407200 0000000000000078 t VertexAttrib3NusvARB
0000000000407280 000000000000005c t VertexAttrib3usvARB
00000000004072e0 0000000000000084 t VertexAttrib4NusvARB
0000000000407370 0000000000000064 t VertexAttrib4usvARB
00000000004073e0 0000000000000074 t VertexAttrib1NivARB
0000000000407460 000000000000004c t VertexAttrib1ivARB
00000000004074b0 000000000000008c t VertexAttrib2NivARB
0000000000407540 0000000000000050 t VertexAttrib2ivARB
0000000000407590 00000000000000a8 t VertexAttrib3NivARB
0000000000407640 0000000000000058 t VertexAttrib3ivARB
00000000004076a0 00000000000000c0 t VertexAttrib4NivARB
0000000000407760 000000000000005c t VertexAttrib4ivARB
00000000004077c0 0000000000000064 t VertexAttrib1NuivARB
0000000000407830 000000000000004c t VertexAttrib1uivARB
0000000000407880 0000000000000070 t VertexAttrib2NuivARB
00000000004078f0 0000000000000050 t VertexAttrib2uivARB
0000000000407940 0000000000000080 t VertexAttrib3NuivARB
00000000004079c0 0000000000000058 t VertexAttrib3uivARB
0000000000407a20 000000000000008c t VertexAttrib4NuivARB
0000000000407ab0 000000000000005c t VertexAttrib4uivARB
0000000000407b10 0000000000000044 t VertexAttrib1fvARB
0000000000407b60 0000000000000044 t VertexAttrib2fvARB
0000000000407bb0 0000000000000044 t VertexAttrib3fvARB
0000000000407c00 0000000000000044 t VertexAttrib4fvARB
0000000000407c50 0000000000000044 t VertexAttrib1dvARB
0000000000407ca0 0000000000000044 t VertexAttrib2dvARB
0000000000407cf0 0000000000000044 t VertexAttrib3dvARB
0000000000407d40 0000000000000044 t VertexAttrib4dvARB
0000000000407d90 0000000000000048 t VertexAttribI1bv
0000000000407de0 000000000000004c t VertexAttribI2bv
0000000000407e30 0000000000000050 t VertexAttribI3bv
0000000000407e80 0000000000000044 t VertexAttribI4bv
0000000000407ed0 0000000000000048 t VertexAttribI1ubv
0000000000407f20 000000000000004c t VertexAttribI2ubv
0000000000407f70 0000000000000050 t VertexAttribI3ubv
0000000000407fc0 0000000000000044 t VertexAttribI4ubv
0000000000408010 0000000000000048 t VertexAttribI1sv
0000000000408060 000000000000004c t VertexAttribI2sv
00000000004080b0 0000000000000050 t VertexAttribI3sv
0000000000408100 0000000000000044 t VertexAttribI4sv
0000000000408150 0000000000000048 t VertexAttribI1usv
00000000004081a0 000000000000004c t VertexAttribI2usv
00000000004081f0 0000000000000050 t VertexAttribI3usv
0000000000408240 0000000000000044 t VertexAttribI4usv
0000000000408290 0000000000000048 t VertexAttribI1iv
00000000004082e0 0000000000000050 t VertexAttribI2iv
0000000000408330 0000000000000050 t VertexAttribI3iv
0000000000408380 0000000000000044 t VertexAttribI4iv
00000000004083d0 0000000000000048 t VertexAttribI1uiv
0000000000408420 0000000000000050 t VertexAttribI2uiv
0000000000408470 0000000000000050 t VertexAttribI3uiv
00000000004084c0 0000000000000044 t VertexAttribI4uiv
0000000000408510 0000000000000044 t VertexAttribL1dv
0000000000408560 0000000000000044 t VertexAttribL2dv
00000000004085b0 0000000000000044 t VertexAttribL3dv
0000000000408600 0000000000000044 t VertexAttribL4dv
0000000000408650 0000000000000374 t _mesa_array_element
00000000004089d0 00000000000000b8 T _ae_ArrayElement
0000000000408a90 000000000000000c t _mesa_install_arrayelt_vtxfmt
0000000000408aa0 0000000000000074 T _mesa_Color3b
0000000000408b20 0000000000000038 T _mesa_Color3d
0000000000408b60 0000000000000080 T _mesa_Color3i
0000000000408be0 0000000000000074 T _mesa_Color3s
0000000000408c60 0000000000000060 T _mesa_Color3ui
0000000000408cc0 000000000000005c T _mesa_Color3us
0000000000408d20 000000000000004c T _mesa_Color3ub
0000000000408d70 0000000000000078 T _mesa_Color3bv
0000000000408df0 0000000000000044 T _mesa_Color3dv
0000000000408e40 000000000000008c T _mesa_Color3iv
0000000000408ed0 0000000000000078 T _mesa_Color3sv
0000000000408f50 0000000000000068 T _mesa_Color3uiv
0000000000408fc0 0000000000000060 T _mesa_Color3usv
0000000000409020 0000000000000050 T _mesa_Color3ubv
0000000000409070 0000000000000088 T _mesa_Color4b
0000000000409100 0000000000000038 T _mesa_Color4d
0000000000409140 0000000000000098 T _mesa_Color4i
00000000004091e0 0000000000000088 T _mesa_Color4s
0000000000409270 0000000000000068 T _mesa_Color4ui
00000000004092e0 0000000000000064 T _mesa_Color4us
0000000000409350 0000000000000050 T _mesa_Color4ub
00000000004093a0 00000000000000a4 T _mesa_Color4iv
0000000000409450 000000000000008c T _mesa_Color4bv
00000000004094e0 0000000000000044 T _mesa_Color4dv
0000000000409530 000000000000008c T _mesa_Color4sv
00000000004095c0 0000000000000070 T _mesa_Color4uiv
0000000000409630 0000000000000068 T _mesa_Color4usv
00000000004096a0 0000000000000054 T _mesa_Color4ubv
0000000000409700 0000000000000040 T _mesa_FogCoordd
0000000000409740 0000000000000048 T _mesa_FogCoorddv
0000000000409790 000000000000002c T _mesa_Indexd
00000000004097c0 0000000000000030 T _mesa_Indexi
00000000004097f0 0000000000000030 T _mesa_Indexs
0000000000409820 0000000000000030 T _mesa_Indexub
0000000000409850 0000000000000034 T _mesa_Indexdv
0000000000409890 0000000000000034 T _mesa_Indexiv
00000000004098d0 0000000000000034 T _mesa_Indexsv
0000000000409910 0000000000000034 T _mesa_Indexubv
0000000000409950 0000000000000034 T _mesa_EdgeFlagv
0000000000409990 0000000000000074 T _mesa_Normal3b
0000000000409a10 0000000000000034 T _mesa_Normal3d
0000000000409a50 0000000000000080 T _mesa_Normal3i
0000000000409ad0 0000000000000074 T _mesa_Normal3s
0000000000409b50 0000000000000078 T _mesa_Normal3bv
0000000000409bd0 0000000000000040 T _mesa_Normal3dv
0000000000409c10 000000000000008c T _mesa_Normal3iv
0000000000409ca0 0000000000000078 T _mesa_Normal3sv
0000000000409d20 000000000000002c T _mesa_TexCoord1d
0000000000409d50 0000000000000030 T _mesa_TexCoord1i
0000000000409d80 0000000000000030 T _mesa_TexCoord1s
0000000000409db0 0000000000000030 T _mesa_TexCoord2d
0000000000409de0 0000000000000038 T _mesa_TexCoord2s
0000000000409e20 0000000000000034 T _mesa_TexCoord2i
0000000000409e60 0000000000000034 T _mesa_TexCoord3d
0000000000409ea0 0000000000000038 T _mesa_TexCoord3i
0000000000409ee0 0000000000000040 T _mesa_TexCoord3s
0000000000409f20 0000000000000038 T _mesa_TexCoord4d
0000000000409f60 000000000000003c T _mesa_TexCoord4i
0000000000409fa0 0000000000000048 T _mesa_TexCoord4s
0000000000409ff0 0000000000000034 T _mesa_TexCoord1dv
000000000040a030 0000000000000034 T _mesa_TexCoord1iv
000000000040a070 0000000000000034 T _mesa_TexCoord1sv
000000000040a0b0 0000000000000038 T _mesa_TexCoord2dv
000000000040a0f0 0000000000000038 T _mesa_TexCoord2iv
000000000040a130 000000000000003c T _mesa_TexCoord2sv
000000000040a170 0000000000000040 T _mesa_TexCoord3dv
000000000040a1b0 0000000000000040 T _mesa_TexCoord3iv
000000000040a1f0 0000000000000044 T _mesa_TexCoord3sv
000000000040a240 0000000000000044 T _mesa_TexCoord4dv
000000000040a290 0000000000000044 T _mesa_TexCoord4iv
000000000040a2e0 000000000000004c T _mesa_TexCoord4sv
000000000040a330 0000000000000030 T _mesa_Vertex2d
000000000040a360 0000000000000034 T _mesa_Vertex2i
000000000040a3a0 0000000000000038 T _mesa_Vertex2s
000000000040a3e0 0000000000000034 T _mesa_Vertex3d
000000000040a420 0000000000000038 T _mesa_Vertex3i
000000000040a460 0000000000000040 T _mesa_Vertex3s
000000000040a4a0 0000000000000038 T _mesa_Vertex4d
000000000040a4e0 000000000000003c T _mesa_Vertex4i
000000000040a520 0000000000000048 T _mesa_Vertex4s
000000000040a570 0000000000000038 T _mesa_Vertex2dv
000000000040a5b0 0000000000000038 T _mesa_Vertex2iv
000000000040a5f0 000000000000003c T _mesa_Vertex2sv
000000000040a630 0000000000000040 T _mesa_Vertex3dv
000000000040a670 0000000000000040 T _mesa_Vertex3iv
000000000040a6b0 0000000000000044 T _mesa_Vertex3sv
000000000040a700 0000000000000044 T _mesa_Vertex4dv
000000000040a750 0000000000000044 T _mesa_Vertex4iv
000000000040a7a0 000000000000004c T _mesa_Vertex4sv
000000000040a7f0 0000000000000038 T _mesa_MultiTexCoord1d
000000000040a830 000000000000003c T _mesa_MultiTexCoord1dv
000000000040a870 0000000000000038 T _mesa_MultiTexCoord1i
000000000040a8b0 000000000000003c T _mesa_MultiTexCoord1iv
000000000040a8f0 000000000000003c T _mesa_MultiTexCoord1s
000000000040a930 000000000000003c T _mesa_MultiTexCoord1sv
000000000040a970 000000000000003c T _mesa_MultiTexCoord2d
000000000040a9b0 0000000000000040 T _mesa_MultiTexCoord2dv
000000000040a9f0 000000000000003c T _mesa_MultiTexCoord2i
000000000040aa30 0000000000000040 T _mesa_MultiTexCoord2iv
000000000040aa70 0000000000000044 T _mesa_MultiTexCoord2s
000000000040aac0 0000000000000044 T _mesa_MultiTexCoord2sv
000000000040ab10 0000000000000040 T _mesa_MultiTexCoord3d
000000000040ab50 0000000000000048 T _mesa_MultiTexCoord3dv
000000000040aba0 0000000000000040 T _mesa_MultiTexCoord3i
000000000040abe0 0000000000000048 T _mesa_MultiTexCoord3iv
000000000040ac30 000000000000004c T _mesa_MultiTexCoord3s
000000000040ac80 000000000000004c T _mesa_MultiTexCoord3sv
000000000040acd0 0000000000000040 T _mesa_MultiTexCoord4d
000000000040ad10 000000000000004c T _mesa_MultiTexCoord4dv
000000000040ad60 0000000000000044 T _mesa_MultiTexCoord4i
000000000040adb0 000000000000004c T _mesa_MultiTexCoord4iv
000000000040ae00 0000000000000054 T _mesa_MultiTexCoord4s
000000000040ae60 0000000000000054 T _mesa_MultiTexCoord4sv
000000000040aec0 0000000000000038 T _mesa_EvalCoord2dv
000000000040af00 0000000000000030 T _mesa_EvalCoord2d
000000000040af30 0000000000000034 T _mesa_EvalCoord1dv
000000000040af70 000000000000002c T _mesa_EvalCoord1d
000000000040afa0 000000000000003c T _mesa_Materialf
000000000040afe0 0000000000000044 T _mesa_Materiali
000000000040b030 0000000000000138 T _mesa_Materialiv
000000000040b170 0000000000000038 T _mesa_Rectd
000000000040b1b0 0000000000000044 T _mesa_Rectdv
000000000040b200 0000000000000034 T _mesa_Rectfv
000000000040b240 000000000000003c T _mesa_Recti
000000000040b280 0000000000000044 T _mesa_Rectiv
000000000040b2d0 0000000000000048 T _mesa_Rects
000000000040b320 000000000000004c T _mesa_Rectsv
000000000040b370 0000000000000088 T _mesa_SecondaryColor3b
000000000040b400 0000000000000048 T _mesa_SecondaryColor3d
000000000040b450 00000000000000a4 T _mesa_SecondaryColor3i
000000000040b500 0000000000000088 T _mesa_SecondaryColor3s
000000000040b590 0000000000000074 T _mesa_SecondaryColor3ui
000000000040b610 000000000000006c T _mesa_SecondaryColor3us
000000000040b680 000000000000005c T _mesa_SecondaryColor3ub
000000000040b6e0 000000000000008c T _mesa_SecondaryColor3bv
000000000040b770 0000000000000054 T _mesa_SecondaryColor3dv
000000000040b7d0 00000000000000a0 T _mesa_SecondaryColor3iv
000000000040b870 000000000000008c T _mesa_SecondaryColor3sv
000000000040b900 0000000000000078 T _mesa_SecondaryColor3uiv
000000000040b980 0000000000000070 T _mesa_SecondaryColor3usv
000000000040b9f0 0000000000000060 T _mesa_SecondaryColor3ubv
000000000040ba50 000000000000004c T _mesa_VertexAttrib1sNV
000000000040baa0 0000000000000048 T _mesa_VertexAttrib1dNV
000000000040baf0 0000000000000054 T _mesa_VertexAttrib2sNV
000000000040bb50 000000000000004c T _mesa_VertexAttrib2dNV
000000000040bba0 000000000000005c T _mesa_VertexAttrib3sNV
000000000040bc00 0000000000000054 T _mesa_VertexAttrib3dNV
000000000040bc60 0000000000000064 T _mesa_VertexAttrib4sNV
000000000040bcd0 0000000000000054 T _mesa_VertexAttrib4dNV
000000000040bd30 0000000000000070 T _mesa_VertexAttrib4ubNV
000000000040bda0 000000000000004c T _mesa_VertexAttrib1svNV
000000000040bdf0 000000000000004c T _mesa_VertexAttrib1dvNV
000000000040be40 0000000000000054 T _mesa_VertexAttrib2svNV
000000000040bea0 0000000000000050 T _mesa_VertexAttrib2dvNV
000000000040bef0 000000000000005c t _mesa_VertexAttrib3svNV
000000000040bf50 0000000000000058 T _mesa_VertexAttrib3dvNV
000000000040bfb0 0000000000000064 t _mesa_VertexAttrib4svNV
000000000040c020 000000000000005c T _mesa_VertexAttrib4dvNV
000000000040c080 0000000000000070 t _mesa_VertexAttrib4ubvNV
000000000040c0f0 0000000000000080 T _mesa_VertexAttribs1fvNV
000000000040c170 000000000000008c T _mesa_VertexAttribs2fvNV
000000000040c200 000000000000005c T _mesa_VertexAttribs3svNV
000000000040c260 000000000000008c T _mesa_VertexAttribs3fvNV
000000000040c2f0 000000000000005c T _mesa_VertexAttribs4svNV
000000000040c350 0000000000000090 T _mesa_VertexAttribs4fvNV
000000000040c3e0 000000000000005c T _mesa_VertexAttribs4ubvNV
000000000040c440 000000000000004c T _mesa_VertexAttrib1s
000000000040c490 0000000000000048 T _mesa_VertexAttrib1d
000000000040c4e0 0000000000000054 T _mesa_VertexAttrib2s
000000000040c540 000000000000004c T _mesa_VertexAttrib2d
000000000040c590 000000000000005c T _mesa_VertexAttrib3s
000000000040c5f0 0000000000000054 T _mesa_VertexAttrib3d
000000000040c650 0000000000000064 T _mesa_VertexAttrib4s
000000000040c6c0 0000000000000054 T _mesa_VertexAttrib4d
000000000040c720 000000000000004c T _mesa_VertexAttrib1sv
000000000040c770 000000000000004c T _mesa_VertexAttrib1dv
000000000040c7c0 0000000000000054 T _mesa_VertexAttrib2sv
000000000040c820 0000000000000050 T _mesa_VertexAttrib2dv
000000000040c870 000000000000005c T _mesa_VertexAttrib3sv
000000000040c8d0 0000000000000058 T _mesa_VertexAttrib3dv
000000000040c930 0000000000000064 T _mesa_VertexAttrib4sv
000000000040c9a0 000000000000005c T _mesa_VertexAttrib4dv
000000000040ca00 0000000000000064 T _mesa_VertexAttrib4bv
000000000040ca70 000000000000005c T _mesa_VertexAttrib4iv
000000000040cad0 0000000000000064 T _mesa_VertexAttrib4ubv
000000000040cb40 0000000000000064 T _mesa_VertexAttrib4usv
000000000040cbb0 000000000000005c T _mesa_VertexAttrib4uiv
000000000040cc10 00000000000000a8 T _mesa_VertexAttrib4Nbv
000000000040ccc0 00000000000000a8 T _mesa_VertexAttrib4Nsv
000000000040cd70 00000000000000c0 T _mesa_VertexAttrib4Niv
000000000040ce30 0000000000000070 T _mesa_VertexAttrib4Nub
000000000040cea0 0000000000000070 T _mesa_VertexAttrib4Nubv
000000000040cf10 0000000000000084 T _mesa_VertexAttrib4Nusv
000000000040cfa0 000000000000008c T _mesa_VertexAttrib4Nuiv
000000000040d030 0000000000000048 T _mesa_VertexAttribI1iv
000000000040d080 0000000000000048 T _mesa_VertexAttribI1uiv
000000000040d0d0 0000000000000054 T _mesa_VertexAttribI4bv
000000000040d130 0000000000000054 T _mesa_VertexAttribI4sv
000000000040d190 0000000000000054 T _mesa_VertexAttribI4ubv
000000000040d1f0 0000000000000054 T _mesa_VertexAttribI4usv
000000000040d250 0000000000000084 T _mesa_VertexAttribs1dvNV
000000000040d2e0 0000000000000084 T _mesa_VertexAttribs1svNV
000000000040d370 0000000000000098 T _mesa_VertexAttribs2dvNV
000000000040d410 0000000000000098 T _mesa_VertexAttribs3dvNV
000000000040d4b0 000000000000009c T _mesa_VertexAttribs2svNV
000000000040d550 00000000000000ac T _mesa_VertexAttribs4dvNV
000000000040d600 00000000000010cc t _mesa_loopback_init_api_table
000000000040e6d0 00000000000001c4 t lookup_or_create_program
000000000040e8a0 000000000000032c t set_program_string
000000000040ebd0 00000000000000b4 t get_local_param_pointer
000000000040ec90 00000000000003ec t get_program_iv
000000000040f080 0000000000000194 t program_local_parameters4fv
000000000040f220 00000000000001fc t _mesa_BindProgramARB
000000000040f420 00000000000001bc T _mesa_DeleteProgramsARB
000000000040f5e0 0000000000000114 T _mesa_GenProgramsARB
000000000040f700 0000000000000084 T _mesa_IsProgramARB
000000000040f790 00000000000000a0 T _mesa_ProgramStringARB
000000000040f830 0000000000000060 T _mesa_NamedProgramStringEXT
000000000040f890 00000000000001d0 T _mesa_ProgramEnvParameter4dARB
000000000040fa60 00000000000001c8 T _mesa_ProgramEnvParameter4dvARB
000000000040fc30 00000000000001c0 T _mesa_ProgramEnvParameter4fARB
000000000040fdf0 00000000000001d8 T _mesa_ProgramEnvParameter4fvARB
000000000040ffd0 00000000000001a0 T _mesa_ProgramEnvParameters4fvEXT
0000000000410170 00000000000000f0 T _mesa_GetProgramEnvParameterdvARB
0000000000410260 00000000000000f0 T _mesa_GetProgramEnvParameterfvARB
0000000000410350 0000000000000178 t _mesa_ProgramLocalParameter4fARB
00000000004104d0 0000000000000164 t _mesa_NamedProgramLocalParameter4fEXT
0000000000410640 000000000000000c T _mesa_ProgramLocalParameter4fvARB
0000000000410650 000000000000000c T _mesa_NamedProgramLocalParameter4fvEXT
0000000000410660 0000000000000098 T _mesa_ProgramLocalParameters4fvEXT
0000000000410700 0000000000000060 T _mesa_NamedProgramLocalParameters4fvEXT
0000000000410760 0000000000000188 T _mesa_ProgramLocalParameter4dARB
00000000004108f0 0000000000000174 T _mesa_NamedProgramLocalParameter4dEXT
0000000000410a70 000000000000001c T _mesa_ProgramLocalParameter4dvARB
0000000000410a90 000000000000001c T _mesa_NamedProgramLocalParameter4dvEXT
0000000000410ab0 0000000000000134 T _mesa_GetProgramLocalParameterfvARB
0000000000410bf0 00000000000000fc T _mesa_GetNamedProgramLocalParameterfvEXT
0000000000410cf0 0000000000000138 T _mesa_GetProgramLocalParameterdvARB
0000000000410e30 0000000000000100 T _mesa_GetNamedProgramLocalParameterdvEXT
0000000000410f30 000000000000009c T _mesa_GetProgramivARB
0000000000410fd0 00000000000000fc T _mesa_GetNamedProgramivEXT
00000000004110d0 00000000000000cc T _mesa_GetProgramStringARB
00000000004111a0 00000000000000b0 T _mesa_GetNamedProgramStringEXT
0000000000411250 00000000000000e8 t gen_vertex_arrays.part.0
0000000000411340 0000000000000050 t _mesa_new_vao
0000000000411390 0000000000000078 t _mesa_delete_vao
0000000000411410 00000000000000a0 t _mesa_reference_vao_
00000000004114b0 00000000000000a8 t _mesa_lookup_vao
0000000000411560 0000000000000140 t _mesa_lookup_vao_err
00000000004116a0 0000000000000038 t _mesa_initialize_vao
00000000004116e0 00000000000004e0 t _mesa_update_vao_derived_arrays
0000000000411bc0 0000000000000028 t _mesa_set_vao_immutable
0000000000411bf0 0000000000000054 t _mesa_all_varyings_in_vbos
0000000000411c50 0000000000000060 t _mesa_all_buffers_are_unmapped
0000000000411cb0 00000000000000a8 t _mesa_vao_map_arrays
0000000000411d60 000000000000007c t _mesa_vao_map
0000000000411de0 0000000000000084 t _mesa_vao_unmap_arrays
0000000000411e70 0000000000000048 t _mesa_vao_unmap
0000000000411ec0 00000000000000a4 t _mesa_BindVertexArray_no_error
0000000000411f70 0000000000000158 t delete_vertex_arrays
00000000004120d0 00000000000000c8 t _mesa_BindVertexArray
00000000004121a0 000000000000002c T _mesa_DeleteVertexArrays_no_error
00000000004121d0 0000000000000044 T _mesa_DeleteVertexArrays
0000000000412220 000000000000003c T _mesa_GenVertexArrays_no_error
0000000000412260 0000000000000064 T _mesa_GenVertexArrays
00000000004122d0 000000000000003c T _mesa_CreateVertexArrays_no_error
0000000000412310 0000000000000064 T _mesa_CreateVertexArrays
0000000000412380 0000000000000070 t _mesa_IsVertexArray
00000000004123f0 000000000000011c T _mesa_VertexArrayElementBuffer_no_error
0000000000412510 00000000000000e4 T _mesa_VertexArrayElementBuffer
0000000000412600 00000000000000c4 T _mesa_GetVertexArrayiv
00000000004126d0 00000000000000e8 t check_arith_arg
00000000004127c0 000000000000005c t _mesa_delete_ati_fragment_shader.part.0
0000000000412820 00000000000005f8 t _mesa_FragmentOpXATI
0000000000412e20 0000000000000034 t _mesa_new_ati_fragment_shader
0000000000412e60 0000000000000018 t _mesa_delete_ati_fragment_shader
0000000000412e80 0000000000000118 T _mesa_GenFragmentShadersATI
0000000000412fa0 0000000000000174 t _mesa_BindFragmentShaderATI
0000000000413120 0000000000000168 T _mesa_DeleteFragmentShaderATI
0000000000413290 0000000000000140 T _mesa_BeginFragmentShaderATI
00000000004133d0 0000000000000180 T _mesa_EndFragmentShaderATI
0000000000413550 0000000000000208 T _mesa_PassTexCoordATI
0000000000413760 0000000000000208 T _mesa_SampleMapATI
0000000000413970 0000000000000060 T _mesa_ColorFragmentOp1ATI
00000000004139d0 0000000000000068 T _mesa_ColorFragmentOp2ATI
0000000000413a40 0000000000000074 T _mesa_ColorFragmentOp3ATI
0000000000413ac0 000000000000005c T _mesa_AlphaFragmentOp1ATI
0000000000413b20 000000000000005c T _mesa_AlphaFragmentOp2ATI
0000000000413b80 0000000000000070 T _mesa_AlphaFragmentOp3ATI
0000000000413bf0 0000000000000128 T _mesa_SetFragmentShaderConstantATI
0000000000413d20 0000000000000138 t copy_array_attrib
0000000000413e60 00000000000000b4 t push_attrib
0000000000413f20 00000000000009b8 T _mesa_PushAttrib
00000000004148e0 0000000000001ebc T _mesa_PopAttrib
00000000004167a0 00000000000003e4 t _mesa_PushClientAttrib
0000000000416b90 0000000000000380 T _mesa_PopClientAttrib
0000000000416f10 0000000000000324 t _mesa_ClientAttribDefaultEXT
0000000000417240 0000000000000024 T _mesa_PushClientAttribDefaultEXT
0000000000417270 0000000000000128 t _mesa_free_attrib_data
00000000004173a0 0000000000000014 t _mesa_init_attrib
00000000004173c0 000000000000004c T _mesa_TextureBarrierNV
0000000000417410 000000000000003c T _mesa_MemoryBarrier
0000000000417450 0000000000000054 T _mesa_MemoryBarrierByRegion_no_error
00000000004174b0 0000000000000084 T _mesa_MemoryBarrierByRegion
0000000000417540 000000000000004c T _mesa_BlendBarrier
0000000000417590 000000000000004c T _mesa_FramebufferFetchBarrierEXT
00000000004175e0 0000000000000044 T _mesa_PrimitiveBoundingBox
0000000000417630 000000000000002c t _mesa_init_bbox
0000000000417660 00000000000000e0 t legal_dst_factor
0000000000417740 00000000000000b0 t update_uses_dual_src
00000000004177f0 0000000000000188 t blend_func_separate
0000000000417980 0000000000000090 t legal_src_factor
0000000000417a10 0000000000000154 t validate_blend_factors
0000000000417b70 00000000000000bc t skip_blend_state_update
0000000000417c30 0000000000000268 t blend_equation_separate
0000000000417ea0 00000000000000a4 T _mesa_BlendFunc
0000000000417f50 0000000000000054 T _mesa_BlendFunc_no_error
0000000000417fb0 00000000000000b8 t _mesa_BlendFuncSeparate
0000000000418070 0000000000000058 T _mesa_BlendFuncSeparate_no_error
00000000004180d0 0000000000000118 t _mesa_BlendFuncSeparateiARB_no_error
00000000004181f0 000000000000000c T _mesa_BlendFunciARB_no_error
0000000000418200 00000000000001a4 t _mesa_BlendFuncSeparateiARB
00000000004183b0 000000000000000c T _mesa_BlendFunciARB
00000000004183c0 00000000000002b8 t _mesa_BlendEquation
0000000000418680 00000000000001fc T _mesa_BlendEquationiARB_no_error
0000000000418880 00000000000002a8 T _mesa_BlendEquationiARB
0000000000418b30 0000000000000030 T _mesa_BlendEquationSeparate_no_error
0000000000418b60 0000000000000030 t _mesa_BlendEquationSeparate
0000000000418b90 00000000000000f8 T _mesa_BlendEquationSeparateiARB_no_error
0000000000418c90 000000000000020c t _mesa_BlendEquationSeparateiARB
0000000000418ea0 00000000000001b4 t _mesa_BlendColor
0000000000419060 0000000000000128 t _mesa_AlphaFunc
0000000000419190 00000000000000fc t _mesa_LogicOp
0000000000419290 00000000000000cc T _mesa_LogicOp_no_error
0000000000419360 0000000000000088 t _mesa_IndexMask
00000000004193f0 0000000000000138 t _mesa_ColorMask
0000000000419530 0000000000000128 t _mesa_ColorMaski
0000000000419660 00000000000001f8 t _mesa_ClampColor
0000000000419860 000000000000002c t _mesa_get_clamp_fragment_color
0000000000419890 000000000000002c t _mesa_get_clamp_read_color
00000000004198c0 0000000000000054 t _mesa_update_clamp_fragment_color
0000000000419920 0000000000000044 t _mesa_update_clamp_vertex_color
0000000000419970 00000000000000fc t _mesa_init_color
0000000000419a70 0000000000000124 t validate_depth_buffer.isra.0
0000000000419ba0 0000000000000148 t validate_stencil_buffer.isra.0
0000000000419cf0 00000000000001f8 t validate_color_buffer
0000000000419ef0 0000000000000074 t _mesa_regions_overlap
0000000000419f70 0000000000000194 T _mesa_BlitFramebuffer_no_error
000000000041a110 0000000000000458 T _mesa_BlitFramebuffer
000000000041a570 00000000000001e4 T _mesa_BlitNamedFramebuffer_no_error
000000000041a760 00000000000004c0 T _mesa_BlitNamedFramebuffer
000000000041ac20 00000000000003c8 t get_buffer_target
000000000041aff0 0000000000000048 t _mesa_delete_buffer_object
000000000041b040 0000000000000128 t validate_buffer_storage
000000000041b170 0000000000000110 t buffer_object_subdata_range_good
000000000041b280 0000000000000130 t copy_buffer_sub_data
000000000041b3b0 00000000000000d0 t map_buffer_range
000000000041b480 00000000000000bc t buffer_page_commitment
000000000041b540 00000000000000e4 t _mesa_ClearBufferSubData_sw
000000000041b630 00000000000001e4 t get_buffer_parameter
000000000041b820 0000000000000080 t buffer_usage_warning
000000000041b8a0 00000000000000e0 t convert_clear_buffer_data
000000000041b980 0000000000000254 t clear_buffer_sub_data_error
000000000041bbe0 0000000000000084 t validate_and_unmap_buffer
000000000041bc70 00000000000000d4 t flush_mapped_buffer_range
000000000041bd50 0000000000000124 t create_buffers.part.0
000000000041be80 00000000000000dc t validate_buffer_sub_data
000000000041bf60 00000000000002f0 t validate_map_buffer_range.part.0
000000000041c250 0000000000000068 t validate_map_buffer_range
000000000041c2c0 0000000000000130 t clear_buffer_sub_data_no_error.constprop.0
000000000041c3f0 000000000000010c t buffer_data_no_error
000000000041c500 000000000000016c t buffer_storage
000000000041c670 000000000000020c t buffer_data_error
000000000041c880 0000000000000064 t _mesa_reference_buffer_object_
000000000041c8f0 0000000000000114 t bind_buffer
000000000041ca10 00000000000000cc t bind_buffer_base_uniform_buffer
000000000041cae0 00000000000000d0 t bind_buffer_base_shader_storage_buffer
000000000041cbb0 00000000000000cc t bind_buffer_base_atomic_buffer
000000000041cc80 00000000000000a8 t _mesa_initialize_buffer_object
000000000041cd30 0000000000000158 t _mesa_init_buffer_objects
000000000041ce90 0000000000000314 t _mesa_free_buffer_objects
000000000041d1b0 00000000000000e4 t _mesa_handle_bind_buffer_gen
000000000041d2a0 00000000000000f4 t bind_buffer_object
000000000041d3a0 000000000000057c t delete_buffers
000000000041d920 0000000000000068 t _mesa_update_default_objects_buffer_objects
000000000041d990 0000000000000018 t _mesa_lookup_bufferobj
000000000041d9b0 0000000000000080 t _mesa_lookup_bufferobj_err
000000000041da30 00000000000000bc t _mesa_multi_bind_lookup_bufferobj
000000000041daf0 000000000000036c t bind_xfb_buffers
000000000041de60 0000000000000100 t set_buffer_multi_binding
000000000041df60 00000000000002e0 t bind_uniform_buffers
000000000041e240 00000000000002e4 t bind_shader_storage_buffers
000000000041e530 00000000000002c4 t bind_atomic_buffers
000000000041e800 0000000000000060 t _mesa_buffer_unmap_all_mappings
000000000041e860 00000000000003e8 T _mesa_BindBuffer_no_error
000000000041ec50 0000000000000074 t _mesa_BindBuffer
000000000041ecd0 000000000000002c T _mesa_DeleteBuffers_no_error
000000000041ed00 0000000000000044 T _mesa_DeleteBuffers
000000000041ed50 0000000000000034 T _mesa_GenBuffers_no_error
000000000041ed90 000000000000005c T _mesa_GenBuffers
000000000041edf0 0000000000000034 T _mesa_CreateBuffers_no_error
000000000041ee30 000000000000005c T _mesa_CreateBuffers
000000000041ee90 000000000000007c t _mesa_IsBuffer
000000000041ef10 0000000000000070 T _mesa_BufferStorage_no_error
000000000041ef80 0000000000000110 T _mesa_BufferStorage
000000000041f090 000000000000019c T _mesa_NamedBufferStorageEXT
000000000041f230 00000000000001dc T _mesa_BufferStorageMemEXT
000000000041f410 000000000000009c T _mesa_BufferStorageMemEXT_no_error
000000000041f4b0 0000000000000090 T _mesa_NamedBufferStorage_no_error
000000000041f540 0000000000000100 T _mesa_NamedBufferStorage
000000000041f640 00000000000001b0 T _mesa_NamedBufferStorageMemEXT
000000000041f7f0 00000000000000b8 T _mesa_NamedBufferStorageMemEXT_no_error
000000000041f8b0 000000000000005c T _mesa_BufferData_no_error
000000000041f910 00000000000000a4 T _mesa_BufferData
000000000041f9c0 0000000000000078 T _mesa_NamedBufferData_no_error
000000000041fa40 00000000000000c0 T _mesa_NamedBufferData
000000000041fb00 00000000000000d4 T _mesa_NamedBufferDataEXT
000000000041fbe0 0000000000000080 T _mesa_BufferSubData_no_error
000000000041fc60 0000000000000128 T _mesa_BufferSubData
000000000041fd90 00000000000000a4 T _mesa_NamedBufferSubData_no_error
000000000041fe40 0000000000000124 T _mesa_NamedBufferSubData
000000000041ff70 0000000000000120 T _mesa_NamedBufferSubDataEXT
0000000000420090 0000000000000104 T _mesa_GetBufferSubData
00000000004201a0 0000000000000100 T _mesa_GetNamedBufferSubData
00000000004202a0 0000000000000100 T _mesa_GetNamedBufferSubDataEXT
00000000004203a0 0000000000000070 T _mesa_ClearBufferData_no_error
0000000000420410 00000000000000c4 T _mesa_ClearBufferData
00000000004204e0 00000000000000a4 T _mesa_ClearNamedBufferData_no_error
0000000000420590 00000000000000e4 T _mesa_ClearNamedBufferData
0000000000420680 000000000000014c T _mesa_ClearNamedBufferDataEXT
00000000004207d0 0000000000000078 T _mesa_ClearBufferSubData_no_error
0000000000420850 00000000000000d4 T _mesa_ClearBufferSubData
0000000000420930 00000000000000ac T _mesa_ClearNamedBufferSubData_no_error
00000000004209e0 00000000000000fc T _mesa_ClearNamedBufferSubData
0000000000420ae0 0000000000000164 T _mesa_ClearNamedBufferSubDataEXT
0000000000420c50 0000000000000054 T _mesa_UnmapBuffer_no_error
0000000000420cb0 0000000000000090 T _mesa_UnmapBuffer
0000000000420d40 0000000000000080 T _mesa_UnmapNamedBufferEXT_no_error
0000000000420dc0 00000000000000b8 T _mesa_UnmapNamedBufferEXT
0000000000420e80 00000000000000bc T _mesa_GetBufferParameteriv
0000000000420f40 00000000000000bc T _mesa_GetBufferParameteri64v
0000000000421000 00000000000000bc T _mesa_GetNamedBufferParameteriv
00000000004210c0 00000000000000dc T _mesa_GetNamedBufferParameterivEXT
00000000004211a0 00000000000000bc T _mesa_GetNamedBufferParameteri64v
0000000000421260 00000000000000ac T _mesa_GetBufferPointerv
0000000000421310 00000000000000c0 T _mesa_GetNamedBufferPointerv
00000000004213d0 00000000000000cc T _mesa_GetNamedBufferPointervEXT
00000000004214a0 0000000000000080 T _mesa_CopyBufferSubData_no_error
0000000000421520 00000000000000c0 T _mesa_CopyBufferSubData
00000000004215e0 00000000000000f4 T _mesa_NamedCopyBufferSubDataEXT
00000000004216e0 00000000000000b4 T _mesa_CopyNamedBufferSubData_no_error
00000000004217a0 0000000000000128 T _mesa_CopyNamedBufferSubData
00000000004218d0 0000000000000058 T _mesa_MapBufferRange_no_error
0000000000421930 000000000000013c T _mesa_MapBufferRange
0000000000421a70 00000000000000fc T _mesa_MapNamedBufferRange_no_error
0000000000421b70 0000000000000130 T _mesa_MapNamedBufferRangeEXT
0000000000421ca0 0000000000000138 T _mesa_MapNamedBufferRange
0000000000421de0 000000000000007c T _mesa_MapBuffer_no_error
0000000000421e60 00000000000001a4 T _mesa_MapBuffer
0000000000422010 0000000000000098 T _mesa_MapNamedBuffer_no_error
00000000004220b0 00000000000001ac T _mesa_MapNamedBuffer
0000000000422260 00000000000001b8 T _mesa_MapNamedBufferEXT
0000000000422420 0000000000000064 T _mesa_FlushMappedBufferRange_no_error
0000000000422490 0000000000000098 T _mesa_FlushMappedBufferRange
0000000000422530 0000000000000088 T _mesa_FlushMappedNamedBufferRange_no_error
00000000004225c0 00000000000000a8 T _mesa_FlushMappedNamedBufferRange
0000000000422670 00000000000000c8 T _mesa_FlushMappedNamedBufferRangeEXT
0000000000422740 00000000000002f0 T _mesa_BindBufferRange_no_error
0000000000422a30 00000000000003e8 T _mesa_BindBufferRange
0000000000422e20 0000000000000178 T _mesa_BindBufferBase
0000000000422fa0 0000000000000100 T _mesa_BindBuffersRange
00000000004230a0 000000000000010c T _mesa_BindBuffersBase
00000000004231b0 0000000000000084 T _mesa_InvalidateBufferSubData_no_error
0000000000423240 0000000000000134 T _mesa_InvalidateBufferSubData
0000000000423380 0000000000000074 T _mesa_InvalidateBufferData_no_error
0000000000423400 00000000000000cc T _mesa_InvalidateBufferData
00000000004234d0 00000000000000a4 T _mesa_BufferPageCommitmentARB
0000000000423580 00000000000000b4 T _mesa_NamedBufferPageCommitmentARB
0000000000423640 00000000000000d0 T _mesa_NamedBufferPageCommitmentEXT
0000000000423710 0000000000000194 t draw_buffer_enum_to_bitmask
00000000004238b0 0000000000000078 t supported_buffer_bitmask
0000000000423930 0000000000000178 t read_buffer_enum_to_index
0000000000423ab0 0000000000000198 t read_buffer_err
0000000000423c50 000000000000003c t _mesa_back_to_front_if_single_buffered
0000000000423c90 0000000000000404 t _mesa_drawbuffers
00000000004240a0 000000000000013c t draw_buffer_error
00000000004241e0 0000000000000034 t _mesa_DrawBuffer
0000000000424220 0000000000000080 T _mesa_FramebufferDrawBufferEXT
00000000004242a0 0000000000000080 T _mesa_NamedFramebufferDrawBuffer
0000000000424320 00000000000003c8 t draw_buffers_error
00000000004246f0 0000000000000038 t _mesa_DrawBuffers
0000000000424730 0000000000000088 T _mesa_FramebufferDrawBuffersEXT
00000000004247c0 0000000000000088 T _mesa_NamedFramebufferDrawBuffers
0000000000424850 0000000000000134 t draw_buffers_no_error.constprop.0
0000000000424990 0000000000000080 T _mesa_NamedFramebufferDrawBuffers_no_error
0000000000424a10 0000000000000030 T _mesa_DrawBuffers_no_error
0000000000424a40 00000000000000d0 t draw_buffer_no_error.constprop.0
0000000000424b10 0000000000000068 T _mesa_NamedFramebufferDrawBuffer_no_error
0000000000424b80 000000000000002c T _mesa_DrawBuffer_no_error
0000000000424bb0 000000000000001c t _mesa_update_draw_buffers
0000000000424bd0 000000000000005c t _mesa_readbuffer
0000000000424c30 00000000000000f8 T _mesa_ReadBuffer_no_error
0000000000424d30 0000000000000034 t _mesa_ReadBuffer
0000000000424d70 00000000000000f8 T _mesa_NamedFramebufferReadBuffer_no_error
0000000000424e70 0000000000000080 T _mesa_FramebufferReadBufferEXT
0000000000424ef0 0000000000000080 T _mesa_NamedFramebufferReadBuffer
0000000000424f70 000000000000018c t make_color_buffer_mask
0000000000425100 000000000000007c t color_buffer_writes_enabled
0000000000425180 000000000000002c t _mesa_ClearIndex
00000000004251b0 0000000000000034 t _mesa_ClearColor
00000000004251f0 0000000000000038 T _mesa_ClearColorIiEXT
0000000000425230 0000000000000038 T _mesa_ClearColorIuiEXT
0000000000425270 000000000000019c T _mesa_Clear_no_error
0000000000425410 0000000000000258 T _mesa_Clear
0000000000425670 0000000000000130 T _mesa_ClearBufferiv_no_error
00000000004257a0 00000000000001c8 t _mesa_ClearBufferiv
0000000000425970 0000000000000064 T _mesa_ClearNamedFramebufferiv
00000000004259e0 00000000000000ec T _mesa_ClearBufferuiv_no_error
0000000000425ad0 0000000000000148 t _mesa_ClearBufferuiv
0000000000425c20 0000000000000064 T _mesa_ClearNamedFramebufferuiv
0000000000425c90 000000000000013c T _mesa_ClearBufferfv_no_error
0000000000425dd0 00000000000001a0 t _mesa_ClearBufferfv
0000000000425f70 0000000000000064 T _mesa_ClearNamedFramebufferfv
0000000000425fe0 00000000000000e4 T _mesa_ClearBufferfi_no_error
00000000004260d0 000000000000018c t _mesa_ClearBufferfi
0000000000426260 0000000000000074 T _mesa_ClearNamedFramebufferfi
00000000004262e0 000000000000006c t _mesa_update_clip_plane
0000000000426350 00000000000001fc t _mesa_ClipPlane
0000000000426550 0000000000000090 t _mesa_GetClipPlane
00000000004265e0 000000000000002c T _mesa_ColorTable
0000000000426610 000000000000002c T _mesa_ColorSubTable
0000000000426640 000000000000002c T _mesa_CopyColorTable
0000000000426670 000000000000002c T _mesa_CopyColorSubTable
00000000004266a0 000000000000002c T _mesa_GetnColorTableARB
00000000004266d0 000000000000002c T _mesa_GetColorTable
0000000000426700 000000000000002c T _mesa_ColorTableParameterfv
0000000000426730 000000000000002c T _mesa_ColorTableParameteriv
0000000000426760 000000000000002c T _mesa_GetColorTableParameterfv
0000000000426790 000000000000002c T _mesa_GetColorTableParameteriv
00000000004267c0 00000000000000a8 t check_valid_to_compute
0000000000426870 0000000000000088 T _mesa_DispatchCompute_no_error
0000000000426900 000000000000014c T _mesa_DispatchCompute
0000000000426a50 000000000000007c T _mesa_DispatchComputeIndirect_no_error
0000000000426ad0 000000000000019c T _mesa_DispatchComputeIndirect
0000000000426c70 0000000000000094 T _mesa_DispatchComputeGroupSizeARB_no_error
0000000000426d10 0000000000000204 T _mesa_DispatchComputeGroupSizeARB
0000000000426f20 00000000000000a0 T _mesa_BeginConditionalRender_no_error
0000000000426fc0 00000000000001a4 T _mesa_BeginConditionalRender
0000000000427170 0000000000000068 T _mesa_EndConditionalRender_no_error
00000000004271e0 00000000000000a8 T _mesa_EndConditionalRender
0000000000427290 0000000000000174 t _mesa_check_conditional_render
0000000000427410 0000000000000124 T _mesa_ConservativeRasterParameteriNV_no_error
0000000000427540 00000000000001ec T _mesa_ConservativeRasterParameteriNV
0000000000427730 0000000000000120 T _mesa_ConservativeRasterParameterfNV_no_error
0000000000427850 00000000000001e0 T _mesa_ConservativeRasterParameterfNV
0000000000427a30 0000000000000018 t _mesa_init_conservative_raster
0000000000427a50 000000000000002c T _mesa_ConvolutionFilter1D
0000000000427a80 000000000000002c T _mesa_ConvolutionFilter2D
0000000000427ab0 000000000000002c T _mesa_ConvolutionParameterf
0000000000427ae0 000000000000002c T _mesa_ConvolutionParameterfv
0000000000427b10 000000000000002c T _mesa_ConvolutionParameteri
0000000000427b40 000000000000002c T _mesa_ConvolutionParameteriv
0000000000427b70 000000000000002c T _mesa_CopyConvolutionFilter1D
0000000000427ba0 000000000000002c T _mesa_CopyConvolutionFilter2D
0000000000427bd0 000000000000002c T _mesa_GetnConvolutionFilterARB
0000000000427c00 000000000000002c T _mesa_GetConvolutionFilter
0000000000427c30 000000000000002c T _mesa_GetConvolutionParameterfv
0000000000427c60 000000000000002c T _mesa_GetConvolutionParameteriv
0000000000427c90 000000000000002c T _mesa_GetnSeparableFilterARB
0000000000427cc0 000000000000002c T _mesa_GetSeparableFilter
0000000000427cf0 000000000000002c T _mesa_SeparableFilter2D
0000000000427d20 0000000000000160 t copy_image_subdata
0000000000427e80 00000000000001bc t check_region_bounds
0000000000428040 0000000000000398 t prepare_target_err
00000000004283e0 00000000000000a4 t prepare_target
0000000000428490 0000000000000224 t compressed_format_compatible.part.0
00000000004286c0 0000000000000110 T _mesa_CopyImageSubData_no_error
00000000004287d0 0000000000000490 T _mesa_CopyImageSubData
0000000000428c60 00000000000003a0 T _mesa_CopyImageSubDataNV
0000000000429000 0000000000000378 t _mesa_validated_multidrawelements
0000000000429380 00000000000000e8 t _mesa_exec_Rectf
0000000000429470 0000000000000060 t skip_validated_draw
00000000004294d0 0000000000000124 T _mesa_MultiDrawElements
0000000000429600 0000000000000178 T _mesa_MultiDrawElementsBaseVertex
0000000000429780 0000000000000298 t _mesa_exec_MultiDrawArrays
0000000000429a20 00000000000000c0 t _mesa_validated_drawrangeelements
0000000000429ae0 0000000000000284 t _mesa_DrawRangeElementsBaseVertex
0000000000429d70 0000000000000008 T _mesa_DrawRangeElements
0000000000429d80 0000000000000150 T _mesa_DrawElements
0000000000429ed0 0000000000000160 T _mesa_DrawElementsBaseVertex
000000000042a030 00000000000000c8 t _mesa_draw_arrays.constprop.0
000000000042a100 00000000000001dc t _mesa_draw_transform_feedback
000000000042a2e0 000000000000011c T _mesa_DrawArrays
000000000042a400 0000000000000114 T _mesa_EvalMesh1
000000000042a520 0000000000000330 T _mesa_EvalMesh2
000000000042a850 0000000000000128 T _mesa_DrawArraysInstancedARB
000000000042a980 0000000000000138 t _mesa_DrawArraysInstancedBaseInstance
000000000042aac0 0000000000000160 T _mesa_DrawElementsInstancedARB
000000000042ac20 0000000000000164 T _mesa_DrawElementsInstancedBaseVertex
000000000042ad90 0000000000000164 T _mesa_DrawElementsInstancedBaseInstance
000000000042af00 0000000000000174 t _mesa_DrawElementsInstancedBaseVertexBaseInstance
000000000042b080 0000000000000048 T _mesa_DrawTransformFeedback
000000000042b0d0 0000000000000054 T _mesa_DrawTransformFeedbackStream
000000000042b130 0000000000000054 T _mesa_DrawTransformFeedbackInstanced
000000000042b190 0000000000000058 T _mesa_DrawTransformFeedbackStreamInstanced
000000000042b1f0 00000000000001ac T _mesa_DrawArraysIndirect
000000000042b3a0 0000000000000224 t _mesa_DrawElementsIndirect
000000000042b5d0 00000000000001e0 T _mesa_MultiDrawArraysIndirect
000000000042b7b0 000000000000024c T _mesa_MultiDrawElementsIndirect
000000000042ba00 0000000000000178 T _mesa_MultiDrawArraysIndirectCountARB
000000000042bb80 00000000000001b0 T _mesa_MultiDrawElementsIndirectCountARB
000000000042bd30 0000000000000124 t _mesa_initialize_exec_dispatch
000000000042be60 00000000000000b8 T _mesa_MultiModeDrawArraysIBM
000000000042bf20 00000000000000c0 T _mesa_MultiModeDrawElementsIBM
000000000042bfe0 0000000000000360 T _mesa_DrawPixels
000000000042c340 00000000000002c4 T _mesa_CopyPixels
000000000042c610 00000000000002f4 T _mesa_Bitmap
000000000042c910 00000000000000e0 t draw_texture
000000000042c9f0 0000000000000104 t _mesa_DrawTexfOES
000000000042cb00 0000000000000030 t _mesa_DrawTexfvOES
000000000042cb30 0000000000000038 T _mesa_DrawTexiOES
000000000042cb70 0000000000000044 T _mesa_DrawTexivOES
000000000042cbc0 0000000000000048 T _mesa_DrawTexsOES
000000000042cc10 000000000000004c T _mesa_DrawTexsvOES
000000000042cc60 00000000000000b0 t enable_texture
000000000042cd10 00000000000002dc t client_state
000000000042cff0 00000000000000a4 t client_state_i.part.0
000000000042d0a0 0000000000000060 t _mesa_update_derived_primitive_restart_state
000000000042d100 0000000000000030 t _mesa_EnableClientState
000000000042d130 00000000000000d0 T _mesa_EnableVertexArrayEXT
000000000042d200 000000000000007c T _mesa_EnableClientStateiEXT
000000000042d280 0000000000000030 t _mesa_DisableClientState
000000000042d2b0 00000000000000d0 T _mesa_DisableVertexArrayEXT
000000000042d380 000000000000007c T _mesa_DisableClientStateiEXT
000000000042d400 00000000000000d8 t _mesa_set_multisample
000000000042d4e0 00000000000000a4 t _mesa_set_framebuffer_srgb
000000000042d590 00000000000026e8 t _mesa_set_enable
000000000042fc80 0000000000000028 T _mesa_Enable
000000000042fcb0 0000000000000028 t _mesa_Disable
000000000042fce0 00000000000003a8 t _mesa_set_enablei
0000000000430090 0000000000000030 T _mesa_Disablei
00000000004300c0 0000000000000030 T _mesa_Enablei
00000000004300f0 0000000000001340 t _mesa_IsEnabled
0000000000431430 00000000000001ec T _mesa_IsEnabledi
0000000000431620 0000000000000008 t _mesa_delete_memory_object
0000000000431630 0000000000000080 t lookup_memory_object_err
00000000004316b0 0000000000000008 t _mesa_initialize_memory_object
00000000004316c0 0000000000000134 T _mesa_DeleteMemoryObjectsEXT
0000000000431800 0000000000000078 T _mesa_IsMemoryObjectEXT
0000000000431880 0000000000000164 T _mesa_CreateMemoryObjectsEXT
00000000004319f0 00000000000000fc T _mesa_MemoryObjectParameterivEXT
0000000000431af0 00000000000000cc T _mesa_GetMemoryObjectParameterivEXT
0000000000431bc0 0000000000000104 T _mesa_TexStorageMem2DEXT
0000000000431cd0 0000000000000114 T _mesa_TexStorageMem2DMultisampleEXT
0000000000431df0 0000000000000104 T _mesa_TexStorageMem3DEXT
0000000000431f00 0000000000000118 T _mesa_TexStorageMem3DMultisampleEXT
0000000000432020 0000000000000100 T _mesa_TextureStorageMem2DEXT
0000000000432120 000000000000010c T _mesa_TextureStorageMem2DMultisampleEXT
0000000000432230 0000000000000108 T _mesa_TextureStorageMem3DEXT
0000000000432340 0000000000000118 T _mesa_TextureStorageMem3DMultisampleEXT
0000000000432460 00000000000000fc T _mesa_TexStorageMem1DEXT
0000000000432560 00000000000000f8 T _mesa_TextureStorageMem1DEXT
0000000000432660 000000000000001c t _mesa_delete_semaphore_object
0000000000432680 0000000000000008 t _mesa_initialize_semaphore_object
0000000000432690 0000000000000114 T _mesa_GenSemaphoresEXT
00000000004327b0 0000000000000144 T _mesa_DeleteSemaphoresEXT
0000000000432900 0000000000000078 T _mesa_IsSemaphoreEXT
0000000000432980 000000000000005c T _mesa_SemaphoreParameterui64vEXT
00000000004329e0 000000000000005c T _mesa_GetSemaphoreParameterui64vEXT
0000000000432a40 00000000000001fc T _mesa_WaitSemaphoreEXT
0000000000432c40 00000000000001fc T _mesa_SignalSemaphoreEXT
0000000000432e40 00000000000000e8 T _mesa_ImportMemoryFdEXT
0000000000432f30 0000000000000158 T _mesa_ImportSemaphoreFdEXT
0000000000433090 00000000000000a4 t get_current_attrib(texenv_fragment_program*, unsigned int)
0000000000433140 0000000000000068 t get_gl_Color(texenv_fragment_program*)
00000000004331b0 0000000000000524 t load_texture(texenv_fragment_program*, unsigned int) [clone .part.0]
00000000004336e0 0000000000000040 t load_texenv_source(texenv_fragment_program*, unsigned int, unsigned int)
0000000000433720 0000000000000654 t emit_combine(texenv_fragment_program*, unsigned int, unsigned int, unsigned int, gl_tex_env_argument const*)
0000000000433d80 0000000000001270 t _mesa_get_fixed_func_fragment_program
0000000000434ff0 0000000000000084 t get_temp
0000000000435080 0000000000000210 t emit_op3fn.constprop.0
0000000000435290 0000000000000090 t make_temp
0000000000435320 00000000000000b8 t emit_matrix_transform_vec4
00000000004353e0 0000000000000074 t get_identity_param
0000000000435460 000000000000007c t register_input
00000000004354e0 0000000000000080 t get_material
0000000000435560 0000000000000064 t emit_passthrough
00000000004355d0 0000000000000128 t get_lightprod
0000000000435700 0000000000000150 t get_scenecolor
0000000000435850 00000000000000a8 t emit_degenerate_lit
0000000000435900 00000000000000ec t emit_normalize_vec3
00000000004359f0 0000000000000264 t get_transformed_normal
0000000000435c60 0000000000000194 t emit_transpose_matrix_transform_vec4
0000000000435e00 0000000000000194 t get_eye_position
0000000000435fa0 0000000000000078 t get_eye_position_normalized
0000000000436020 0000000000000148 t get_eye_position_z
0000000000436170 00000000000003ec t calculate_light_attenuation
0000000000436560 0000000000002c1c t _mesa_get_fixed_func_vertex_program
0000000000439180 0000000000000068 t _set_default_response
00000000004391f0 000000000000024c t _mesa_query_internal_format_default
0000000000439440 0000000000001870 t _mesa_GetInternalformativ
000000000043acb0 0000000000000190 T _mesa_GetInternalformati64v
000000000043ae40 0000000000000100 t convert_ubyte_rgba_to_bgra
000000000043af40 0000000000006194 t convert_float
00000000004410e0 0000000000007698 t convert_half_float
0000000000448780 0000000000007d64 t convert_int
00000000004504f0 0000000000008ac8 t convert_byte
0000000000458fc0 0000000000008928 t convert_ushort
00000000004618f0 0000000000008a2c t convert_ubyte
000000000046a320 0000000000007590 t convert_uint
00000000004718b0 0000000000000090 t _mesa_compute_rgba2base2rgba_component_mapping
0000000000471940 0000000000008c84 t _mesa_swizzle_and_convert
000000000047a5d0 0000000000000e98 t _mesa_format_convert
000000000047b470 000000000000007c t get_value_size
000000000047b4f0 0000000000001330 t find_value_indexed
000000000047c820 0000000000001f44 t find_value
000000000047e770 00000000000002f4 T _mesa_GetBooleanv
000000000047ea70 00000000000002dc t _mesa_GetFloatv
000000000047ed50 0000000000000344 t _mesa_GetIntegerv
000000000047f0a0 0000000000000368 T _mesa_GetInteger64v
000000000047f410 00000000000002c8 T _mesa_GetDoublev
000000000047f6e0 0000000000000198 T _mesa_GetUnsignedBytevEXT
000000000047f880 00000000000000e4 T _mesa_GetBooleani_v
000000000047f970 0000000000000188 T _mesa_GetIntegeri_v
000000000047fb00 00000000000000dc T _mesa_GetInteger64i_v
000000000047fbe0 00000000000001f0 T _mesa_GetFloati_v
000000000047fdd0 0000000000000200 T _mesa_GetDoublei_v
000000000047ffd0 0000000000000148 T _mesa_GetUnsignedBytei_vEXT
0000000000480120 00000000000004c0 T _mesa_GetFixedv
00000000004805e0 0000000000000148 t _mesa_is_valid_generate_texture_mipmap_target
0000000000480730 00000000000000f0 t _mesa_is_valid_generate_texture_mipmap_internalformat
0000000000480820 0000000000000220 t validate_params_and_generate_mipmap
0000000000480a40 000000000000012c T _mesa_GenerateMipmap_no_error
0000000000480b70 0000000000000234 T _mesa_GenerateMipmap
0000000000480db0 000000000000012c T _mesa_GenerateTextureMipmap_no_error
0000000000480ee0 0000000000000040 T _mesa_GenerateTextureMipmap
0000000000480f20 0000000000000048 T _mesa_GenerateTextureMipmapEXT
0000000000480f70 000000000000004c T _mesa_GenerateMultiTexMipmapEXT
0000000000480fc0 000000000000005c t _mesa_spirv_module_reference
0000000000481020 0000000000000094 t _mesa_shader_spirv_data_reference
00000000004810c0 0000000000000100 t _mesa_spirv_shader_binary
00000000004811c0 000000000000022c t _mesa_spirv_link_shaders
00000000004813f0 0000000000000040 T _mesa_SpecializeShaderARB
0000000000481430 000000000000002c T _mesa_GetnMinmaxARB
0000000000481460 000000000000002c T _mesa_GetMinmax
0000000000481490 000000000000002c T _mesa_GetnHistogramARB
00000000004814c0 000000000000002c T _mesa_GetHistogram
00000000004814f0 000000000000002c T _mesa_GetHistogramParameterfv
0000000000481520 000000000000002c T _mesa_GetHistogramParameteriv
0000000000481550 000000000000002c T _mesa_GetMinmaxParameterfv
0000000000481580 000000000000002c T _mesa_GetMinmaxParameteriv
00000000004815b0 000000000000002c T _mesa_Histogram
00000000004815e0 000000000000002c T _mesa_Minmax
0000000000481610 000000000000002c T _mesa_ResetHistogram
0000000000481640 000000000000002c T _mesa_ResetMinmax
0000000000481670 00000000000001e8 t float3_to_rgb9e5
0000000000481860 0000000000000040 t rgb9e5_to_float3
00000000004818a0 0000000000000184 t float3_to_r11g11b10f
0000000000481a30 000000000000017c t r11g11b10f_to_float3
0000000000481bb0 0000000000001978 t do_row
0000000000483530 00000000000000f4 t make_1d_mipmap
0000000000483630 0000000000000450 t make_2d_mipmap
0000000000483a80 0000000000000050 t _mesa_compute_num_levels
0000000000483ad0 0000000000003424 t _mesa_generate_mipmap_level
0000000000486f00 00000000000000a0 t _mesa_next_mipmap_level_size
0000000000486fa0 0000000000000208 t _mesa_prepare_mipmap_levels
00000000004871b0 0000000000000924 t _mesa_generate_mipmap
0000000000487ae0 0000000000000254 t get_label_pointer
0000000000487d40 000000000000008c t copy_label
0000000000487dd0 00000000000000f8 t set_label
0000000000487ed0 000000000000009c T _mesa_ObjectLabel
0000000000487f70 00000000000000b4 T _mesa_GetObjectLabel
0000000000488030 00000000000000b8 T _mesa_ObjectPtrLabel
00000000004880f0 00000000000000f4 T _mesa_GetObjectPtrLabel
00000000004881f0 0000000000000228 T _mesa_ObjectPurgeableAPPLE
0000000000488420 0000000000000210 T _mesa_ObjectUnpurgeableAPPLE
0000000000488630 0000000000000178 T _mesa_GetObjectParameterivAPPLE
00000000004887b0 00000000000000bc t write_program_payload
0000000000488870 000000000000007c t _mesa_get_program_binary_length
00000000004888f0 0000000000000148 t _mesa_get_program_binary
0000000000488a40 00000000000001f8 t _mesa_program_binary
0000000000488c40 000000000000025c t supported_interface_enum
0000000000488ea0 00000000000004c8 T _mesa_GetProgramInterfaceiv
0000000000489370 000000000000015c T _mesa_GetProgramResourceIndex
00000000004894d0 0000000000000110 T _mesa_GetProgramResourceName
00000000004895e0 00000000000000e4 T _mesa_GetProgramResourceiv
00000000004896d0 00000000000002a4 T _mesa_GetProgramResourceLocation
0000000000489980 00000000000000cc T _mesa_GetProgramResourceLocationIndex
0000000000489a50 0000000000000174 T _mesa_QueryMatrixxOES
0000000000489bd0 0000000000000058 t _context_lost_GetQueryObjectuiv
0000000000489c30 0000000000000068 t _context_lost_GetSynciv
0000000000489ca0 0000000000000038 t context_lost_nop_handler
0000000000489ce0 00000000000000fc t _mesa_set_context_lost_dispatch
0000000000489de0 00000000000000dc T _mesa_GetGraphicsResetStatusARB
0000000000489ec0 0000000000000088 T _mesa_new_sampler_object
0000000000489f50 00000000000000e4 t create_samplers.part.0
000000000048a040 000000000000009c t sampler_parameter_error_check
000000000048a0e0 00000000000000b4 t set_sampler_cube_map_seamless
000000000048a1a0 000000000000016c t set_sampler_wrap_r
000000000048a310 000000000000016c t set_sampler_wrap_t
000000000048a480 000000000000016c t set_sampler_wrap_s
000000000048a5f0 0000000000000018 t _mesa_lookup_samplerobj
000000000048a610 00000000000000c0 t _mesa_reference_sampler_object_
000000000048a6d0 0000000000000190 t delete_samplers
000000000048a860 0000000000000038 T _mesa_GenSamplers_no_error
000000000048a8a0 0000000000000060 T _mesa_GenSamplers
000000000048a900 0000000000000038 T _mesa_CreateSamplers_no_error
000000000048a940 0000000000000060 T _mesa_CreateSamplers
000000000048a9a0 000000000000002c T _mesa_DeleteSamplers_no_error
000000000048a9d0 0000000000000044 T _mesa_DeleteSamplers
000000000048aa20 0000000000000070 T _mesa_IsSampler
000000000048aa90 00000000000000b0 t _mesa_bind_sampler
000000000048ab40 00000000000000d4 T _mesa_BindSampler_no_error
000000000048ac20 00000000000000b0 T _mesa_BindSampler
000000000048acd0 00000000000001c0 T _mesa_BindSamplers_no_error
000000000048ae90 000000000000024c T _mesa_BindSamplers
000000000048b0e0 0000000000000520 T _mesa_SamplerParameteri
000000000048b600 00000000000004fc T _mesa_SamplerParameterf
000000000048bb00 000000000000062c T _mesa_SamplerParameteriv
000000000048c130 00000000000005b0 T _mesa_SamplerParameterfv
000000000048c6e0 00000000000005bc T _mesa_SamplerParameterIiv
000000000048cca0 00000000000005bc T _mesa_SamplerParameterIuiv
000000000048d260 000000000000027c T _mesa_GetSamplerParameteriv
000000000048d4e0 0000000000000254 T _mesa_GetSamplerParameterfv
000000000048d740 0000000000000240 T _mesa_GetSamplerParameterIiv
000000000048d980 0000000000000240 T _mesa_GetSamplerParameterIuiv
000000000048dbc0 0000000000000010 t _mesa_init_sampler_object_functions
000000000048dbd0 0000000000000150 t unpack_quint_block(int, unsigned int, unsigned char*)
000000000048dd20 0000000000000074 t Block::decode_void_extent(InputBitVector)
000000000048dda0 0000000000000178 t Block::decode_block_mode(InputBitVector)
000000000048df20 0000000000000798 t Block::decode_cem(InputBitVector)
000000000048e6c0 00000000000005a4 t Block::unpack_colour_endpoints(InputBitVector)
000000000048ec70 000000000000059c t Block::decode_colour_endpoints()
000000000048f210 0000000000000690 t Block::unpack_weights(InputBitVector)
000000000048f8a0 00000000000001f0 t Block::unquantise_weights()
000000000048fa90 0000000000000294 t Block::compute_infill_weights(int, int, int)
000000000048fd30 00000000000002c8 t Block::unquantise_colour_endpoints()
0000000000490000 00000000000006c0 t Block::write_decoded(Decoder const&, unsigned short*)
00000000004906c0 0000000000000270 t Block::calculate_from_weights()
0000000000490930 0000000000000104 t Block::calculate_colour_endpoints_size()
0000000000490a40 00000000000002c0 t Block::decode(Decoder const&, InputBitVector)
0000000000490d00 00000000000000d4 t Decoder::decode(unsigned char const*, unsigned short*) const
0000000000490de0 00000000000001d0 t _mesa_unpack_astc_2d_ldr
0000000000490fb0 0000000000000088 t _mesa_cpal_compressed_size
0000000000491040 0000000000000390 t _mesa_cpal_compressed_teximage2d
00000000004913d0 00000000000001c8 t get_texenvi
00000000004915a0 00000000000001cc t _mesa_gettexenviv_indexed
0000000000491770 0000000000000c1c t _mesa_texenvfv_indexed
0000000000492390 0000000000000230 t _mesa_gettexenvfv_indexed
00000000004925c0 0000000000000038 t _mesa_TexEnvfv
0000000000492600 0000000000000044 t _mesa_TexEnvf
0000000000492650 000000000000004c t _mesa_TexEnvi
00000000004926a0 00000000000000dc T _mesa_TexEnviv
0000000000492780 000000000000004c T _mesa_MultiTexEnvfEXT
00000000004927d0 0000000000000040 T _mesa_MultiTexEnvfvEXT
0000000000492810 0000000000000050 T _mesa_MultiTexEnviEXT
0000000000492860 00000000000000f4 T _mesa_MultiTexEnvivEXT
0000000000492960 000000000000003c t _mesa_GetTexEnvfv
00000000004929a0 000000000000000c T _mesa_GetMultiTexEnvfvEXT
00000000004929b0 000000000000003c T _mesa_GetTexEnviv
00000000004929f0 000000000000000c T _mesa_GetMultiTexEnvivEXT
0000000000492a00 0000000000000418 t texgenfv
0000000000492e20 0000000000000198 t gettexgendv
0000000000492fc0 00000000000001bc t gettexgenfv
0000000000493180 000000000000019c t gettexgeniv
0000000000493320 0000000000000044 t _mesa_TexGenfv
0000000000493370 0000000000000014 T _mesa_MultiTexGenfvEXT
0000000000493390 00000000000000a4 T _mesa_TexGeniv
0000000000493440 0000000000000084 T _mesa_MultiTexGenivEXT
00000000004934d0 0000000000000054 T _mesa_TexGend
0000000000493530 0000000000000038 T _mesa_MultiTexGendEXT
0000000000493570 0000000000000104 t _es_TexGenf
0000000000493680 00000000000000a4 T _mesa_TexGendv
0000000000493730 0000000000000084 T _mesa_MultiTexGendvEXT
00000000004937c0 0000000000000050 T _mesa_TexGenf
0000000000493810 0000000000000034 T _mesa_MultiTexGenfEXT
0000000000493850 0000000000000058 t _mesa_TexGeni
00000000004938b0 0000000000000038 T _mesa_MultiTexGeniEXT
00000000004938f0 0000000000000044 T _mesa_GetTexGendv
0000000000493940 0000000000000014 T _mesa_GetMultiTexGendvEXT
0000000000493960 0000000000000044 T _mesa_GetTexGenfv
00000000004939b0 0000000000000014 T _mesa_GetMultiTexGenfvEXT
00000000004939d0 0000000000000044 t _mesa_GetTexGeniv
0000000000493a20 0000000000000014 T _mesa_GetMultiTexGenivEXT
0000000000493a40 00000000000000c8 t legal_getteximage_target
0000000000493b10 0000000000000120 t pbo_error_check
0000000000493c30 00000000000001b8 t teximage_error_check
0000000000493df0 0000000000000478 t dimensions_error_check
0000000000494270 0000000000000128 t common_error_check.part.0
00000000004943a0 000000000000025c t getcompressedteximage_error_check.part.0
0000000000494600 00000000000003e0 t get_compressed_texture_image.constprop.0
00000000004949e0 0000000000000258 t get_texture_image.constprop.0
0000000000494c40 0000000000000154 t getteximage_error_check
0000000000494da0 000000000000013c t _get_texture_image
0000000000494ee0 0000000000000104 t _mesa_base_pack_format
0000000000494ff0 00000000000010b8 t _mesa_GetTexSubImage_sw
00000000004960b0 0000000000000110 T _mesa_GetnTexImageARB
00000000004961c0 000000000000010c T _mesa_GetTexImage
00000000004962d0 00000000000000f0 T _mesa_GetTextureImage
00000000004963c0 00000000000000f8 T _mesa_GetTextureImageEXT
00000000004964c0 00000000000001d4 T _mesa_GetMultiTexImageEXT
00000000004966a0 0000000000000238 T _mesa_GetTextureSubImage
00000000004968e0 000000000000019c T _mesa_GetnCompressedTexImageARB
0000000000496a80 000000000000019c T _mesa_GetCompressedTexImage
0000000000496c20 0000000000000178 T _mesa_GetCompressedTextureImageEXT
0000000000496da0 0000000000000178 T _mesa_GetCompressedMultiTexImageEXT
0000000000496f20 000000000000018c T _mesa_GetCompressedTextureImage
00000000004970b0 0000000000000144 T _mesa_GetCompressedTextureSubImage
0000000000497200 00000000000000a0 t is_texparameteri_target_valid
00000000004972a0 0000000000000198 t validate_texture_wrap_mode
0000000000497440 0000000000000834 t get_tex_level_parameteriv
0000000000497c80 0000000000000858 t get_tex_parameteriv
00000000004984e0 00000000000009e8 t get_tex_parameterfv
0000000000498ed0 000000000000053c t set_tex_parameterf
0000000000499410 0000000000000d4c t set_tex_parameteri
000000000049a160 0000000000000014 t _mesa_target_allows_setting_sampler_parameters
000000000049a180 0000000000000228 t _mesa_texture_parameterf
000000000049a3b0 00000000000001f8 t _mesa_texture_parameterfv
000000000049a5b0 0000000000000154 t _mesa_texture_parameteri
000000000049a710 0000000000000198 t _mesa_texture_parameteriv
000000000049a8b0 00000000000000d8 t _mesa_texture_parameterIiv
000000000049a990 00000000000000d8 t _mesa_texture_parameterIuiv
000000000049aa70 0000000000000084 t _mesa_TexParameterf
000000000049ab00 0000000000000084 t _mesa_TexParameterfv
000000000049ab90 0000000000000084 t _mesa_TexParameteri
000000000049ac20 0000000000000084 T _mesa_TexParameteriv
000000000049acb0 0000000000000084 T _mesa_TexParameterIiv
000000000049ad40 0000000000000084 T _mesa_TexParameterIuiv
000000000049add0 00000000000000b4 T _mesa_TextureParameterfvEXT
000000000049ae90 00000000000000b4 T _mesa_TextureParameterfv
000000000049af50 00000000000000b4 T _mesa_MultiTexParameterfvEXT
000000000049b010 00000000000000c4 T _mesa_TextureParameterfEXT
000000000049b0e0 00000000000000c4 T _mesa_MultiTexParameterfEXT
000000000049b1b0 00000000000000c4 T _mesa_TextureParameterf
000000000049b280 00000000000000b4 T _mesa_TextureParameteriEXT
000000000049b340 00000000000000b4 T _mesa_MultiTexParameteriEXT
000000000049b400 00000000000000b4 T _mesa_TextureParameteri
000000000049b4c0 00000000000000b4 T _mesa_TextureParameterivEXT
000000000049b580 00000000000000b4 T _mesa_MultiTexParameterivEXT
000000000049b640 00000000000000b4 T _mesa_TextureParameteriv
000000000049b700 00000000000000b4 T _mesa_TextureParameterIiv
000000000049b7c0 0000000000000080 T _mesa_TextureParameterIivEXT
000000000049b840 0000000000000080 T _mesa_MultiTexParameterIivEXT
000000000049b8c0 00000000000000b4 T _mesa_TextureParameterIuiv
000000000049b980 0000000000000080 T _mesa_TextureParameterIuivEXT
000000000049ba00 0000000000000080 T _mesa_MultiTexParameterIuivEXT
000000000049ba80 000000000000025c t _mesa_legal_get_tex_level_parameter_target
000000000049bce0 00000000000000d4 T _mesa_GetTexLevelParameterfv
000000000049bdc0 00000000000000d8 T _mesa_GetTexLevelParameteriv
000000000049bea0 00000000000000d8 T _mesa_GetTextureLevelParameterfv
000000000049bf80 00000000000000e0 T _mesa_GetTextureLevelParameterfvEXT
000000000049c060 00000000000000e0 T _mesa_GetMultiTexLevelParameterfvEXT
000000000049c140 00000000000000d8 T _mesa_GetTextureLevelParameteriv
000000000049c220 00000000000000e0 T _mesa_GetTextureLevelParameterivEXT
000000000049c300 00000000000000e0 T _mesa_GetMultiTexLevelParameterivEXT
000000000049c3e0 0000000000000084 t _mesa_GetTexParameterfv
000000000049c470 0000000000000084 T _mesa_GetTexParameteriv
000000000049c500 00000000000000b0 T _mesa_GetTexParameterIiv
000000000049c5b0 00000000000000b0 T _mesa_GetTexParameterIuiv
000000000049c660 00000000000000b4 T _mesa_GetTextureParameterfvEXT
000000000049c720 00000000000000b4 T _mesa_GetMultiTexParameterfvEXT
000000000049c7e0 00000000000000b4 T _mesa_GetTextureParameterfv
000000000049c8a0 00000000000000b4 T _mesa_GetTextureParameterivEXT
000000000049c960 00000000000000b4 T _mesa_GetMultiTexParameterivEXT
000000000049ca20 00000000000000b4 T _mesa_GetTextureParameteriv
000000000049cae0 00000000000000e0 T _mesa_GetTextureParameterIiv
000000000049cbc0 00000000000000ac T _mesa_GetTextureParameterIivEXT
000000000049cc70 00000000000000ac T _mesa_GetMultiTexParameterIivEXT
000000000049cd20 00000000000000e0 T _mesa_GetTextureParameterIuiv
000000000049ce00 00000000000000ac T _mesa_GetTextureParameterIuivEXT
000000000049ceb0 00000000000000ac T _mesa_GetMultiTexParameterIuivEXT
000000000049cf60 0000000000000228 t register_surface.part.0
000000000049d190 00000000000000b4 T _mesa_VDPAUInitNV
000000000049d250 0000000000000078 T _mesa_VDPAUFiniNV
000000000049d2d0 0000000000000094 T _mesa_VDPAURegisterVideoSurfaceNV
000000000049d370 0000000000000094 T _mesa_VDPAURegisterOutputSurfaceNV
000000000049d410 000000000000006c T _mesa_VDPAUIsSurfaceNV
000000000049d480 00000000000000fc T _mesa_VDPAUUnregisterSurfaceNV
000000000049d580 0000000000000104 T _mesa_VDPAUGetSurfaceivNV
000000000049d690 00000000000000c4 T _mesa_VDPAUSurfaceAccessNV
000000000049d760 000000000000022c T _mesa_VDPAUMapSurfacesNV
000000000049d990 00000000000001e8 t _mesa_VDPAUUnmapSurfacesNV
000000000049db80 0000000000000070 t unregister_surface
000000000049dbf0 000000000000087c t install_vtxfmt
000000000049e470 0000000000000048 t _mesa_install_exec_vtxfmt
000000000049e4c0 0000000000000020 t _mesa_install_save_vtxfmt
000000000049e4e0 0000000000000044 t _mesa_initialize_vbo_vtxfmt
000000000049e530 0000000000000008 T _mesa_AlphaFuncx
000000000049e540 000000000000002c T _mesa_ClearColorx
000000000049e570 0000000000000008 T _mesa_ClearDepthx
000000000049e580 0000000000000040 T _mesa_ClipPlanef
000000000049e5c0 0000000000000048 T _mesa_ClipPlanex
000000000049e610 000000000000002c T _mesa_Color4x
000000000049e640 000000000000001c T _mesa_DepthRangex
000000000049e660 0000000000000034 T _mesa_DrawTexxOES
000000000049e6a0 0000000000000048 T _mesa_DrawTexxvOES
000000000049e6f0 0000000000000020 T _mesa_Fogx
000000000049e710 00000000000000c4 T _mesa_Fogxv
000000000049e7e0 000000000000001c T _mesa_Frustumf
000000000049e800 000000000000003c T _mesa_Frustumx
000000000049e840 0000000000000048 T _mesa_GetClipPlanef
000000000049e890 000000000000004c T _mesa_GetClipPlanex
000000000049e8e0 00000000000000d4 T _mesa_GetLightxv
000000000049e9c0 00000000000000fc T _mesa_GetMaterialxv
000000000049eac0 0000000000000220 T _mesa_GetTexEnvxv
000000000049ece0 0000000000000004 T _mesa_GetTexGenxvOES
000000000049ecf0 0000000000000114 T _mesa_GetTexParameterxv
000000000049ee10 0000000000000008 T _mesa_LightModelx
000000000049ee20 00000000000000ac T _mesa_LightModelxv
000000000049eed0 0000000000000008 T _mesa_Lightx
000000000049eee0 00000000000000e8 T _mesa_Lightxv
000000000049efd0 0000000000000008 T _mesa_LineWidthx
000000000049efe0 000000000000004c T _mesa_LoadMatrixx
000000000049f030 000000000000007c T _mesa_Materialx
000000000049f0b0 0000000000000110 T _mesa_Materialxv
000000000049f1c0 000000000000004c T _mesa_MultMatrixx
000000000049f210 000000000000002c T _mesa_MultiTexCoord4x
000000000049f240 0000000000000024 T _mesa_Normal3x
000000000049f270 000000000000001c T _mesa_Orthof
000000000049f290 000000000000003c T _mesa_Orthox
000000000049f2d0 0000000000000008 T _mesa_PointParameterx
000000000049f2e0 00000000000000a8 T _mesa_PointParameterxv
000000000049f390 0000000000000008 T _mesa_PointSizex
000000000049f3a0 000000000000001c T _mesa_PolygonOffsetx
000000000049f3c0 000000000000002c T _mesa_Rotatex
000000000049f3f0 0000000000000010 T _mesa_SampleCoveragex
000000000049f400 0000000000000024 T _mesa_Scalex
000000000049f430 0000000000000140 T _mesa_TexEnvx
000000000049f570 00000000000001a0 T _mesa_TexEnvxv
000000000049f710 0000000000000008 T _mesa_TexGenxOES
000000000049f720 000000000000000c T _mesa_TexGenxvOES
000000000049f730 0000000000000024 T _mesa_TexParameterx
000000000049f760 0000000000000130 T _mesa_TexParameterxv
000000000049f890 0000000000000024 T _mesa_Translatex
000000000049f8c0 00000000000000f8 t _math_horner_bezier_curve
000000000049f9c0 00000000000001cc t _math_horner_bezier_surf
000000000049fb90 0000000000000d44 t _math_de_casteljau_surf
00000000004a08e0 000000000000002c t _math_init_eval
00000000004a0910 000000000000002c t vbo_minmax_cache_key_equal
00000000004a0940 0000000000000008 t vbo_minmax_cache_delete_entry
00000000004a0950 0000000000000008 t vbo_minmax_cache_hash
00000000004a0960 0000000000000030 t vbo_delete_minmax_cache
00000000004a0990 00000000000001c0 t vbo_get_minmax_index_mapped
00000000004a0b50 00000000000004b0 t vbo_get_minmax_indices
00000000004a1000 000000000000006c t util_format_linear_float_to_srgb_8unorm
00000000004a1070 0000000000000080 t pack_ubyte_rgb_float16
00000000004a10f0 000000000000003c t _mesa_float_to_unorm
00000000004a1130 0000000000000044 t _mesa_float_to_snorm
00000000004a1180 0000000000000070 t _mesa_unorm_to_unorm.constprop.0
00000000004a11f0 0000000000000184 t float3_to_r11g11b10f
00000000004a1380 00000000000000d0 t pack_float_rgb_snorm16
00000000004a1450 0000000000000034 t pack_ubyte_rgb_snorm16
00000000004a1490 00000000000000e0 t pack_float_a1r5g5b5_unorm
00000000004a1570 00000000000000e8 t pack_float_r4g4b4a4_unorm
00000000004a1660 00000000000000e8 t pack_float_a4b4g4r4_unorm
00000000004a1750 00000000000000e8 t pack_float_b4g4r4a4_unorm
00000000004a1840 00000000000000f4 t pack_float_r8g8b8a8_unorm
00000000004a1940 00000000000000f4 t pack_float_a8r8g8b8_unorm
00000000004a1a40 00000000000000f4 t pack_float_b8g8r8a8_unorm
00000000004a1b40 00000000000000f4 t pack_float_a8b8g8r8_unorm
00000000004a1c40 0000000000000060 t pack_ubyte_b2g3r3_unorm
00000000004a1ca0 0000000000000064 t pack_ubyte_r8g8b8x8_snorm
00000000004a1d10 0000000000000064 t pack_ubyte_x8b8g8r8_snorm
00000000004a1d80 0000000000000064 t pack_ubyte_b5g5r5x1_unorm
00000000004a1df0 0000000000000068 t pack_ubyte_x1b5g5r5_unorm
00000000004a1e60 0000000000000020 t pack_ubyte_r8g8b8x8_unorm
00000000004a1e80 0000000000000020 t pack_ubyte_b8g8r8x8_unorm
00000000004a1ea0 0000000000000064 t pack_ubyte_b4g4r4x4_unorm
00000000004a1f10 0000000000000020 t pack_ubyte_x8b8g8r8_unorm
00000000004a1f30 0000000000000020 t pack_ubyte_x8r8g8b8_unorm
00000000004a1f50 0000000000000038 t pack_ubyte_b10g10r10x2_unorm
00000000004a1f90 0000000000000038 t pack_ubyte_r10g10b10x2_unorm
00000000004a1fd0 0000000000000034 t pack_ubyte_rgba_unorm16
00000000004a2010 0000000000000044 t pack_ubyte_rgba_snorm16
00000000004a2060 0000000000000080 t pack_ubyte_r4g4b4a4_unorm
00000000004a20e0 0000000000000080 t pack_ubyte_a4b4g4r4_unorm
00000000004a2160 0000000000000078 t pack_ubyte_b5g5r5a1_unorm
00000000004a21e0 0000000000000078 t pack_ubyte_a1b5g5r5_unorm
00000000004a2260 0000000000000078 t pack_ubyte_a1r5g5b5_unorm
00000000004a22e0 0000000000000080 t pack_ubyte_b4g4r4a4_unorm
00000000004a2360 0000000000000080 t pack_ubyte_a4r4g4b4_unorm
00000000004a23e0 0000000000000080 t pack_ubyte_a8b8g8r8_snorm
00000000004a2460 0000000000000078 t pack_ubyte_r5g5b5a1_unorm
00000000004a24e0 0000000000000080 t pack_ubyte_r8g8b8a8_snorm
00000000004a2560 000000000000000c t pack_ubyte_r8g8b8a8_unorm
00000000004a2570 0000000000000028 t pack_ubyte_a8r8g8b8_unorm
00000000004a25a0 0000000000000010 t pack_ubyte_a8b8g8r8_unorm
00000000004a25b0 0000000000000028 t pack_ubyte_b8g8r8a8_unorm
00000000004a25e0 0000000000000058 t pack_ubyte_a2r10g10b10_unorm
00000000004a2640 0000000000000058 t pack_ubyte_b10g10r10a2_unorm
00000000004a26a0 0000000000000058 t pack_ubyte_a2b10g10r10_unorm
00000000004a2700 0000000000000058 t pack_ubyte_r10g10b10a2_unorm
00000000004a2760 00000000000000fc t pack_float_a2b10g10r10_unorm
00000000004a2860 00000000000000fc t pack_float_a2r10g10b10_unorm
00000000004a2960 00000000000000fc t pack_float_r10g10b10a2_unorm
00000000004a2a60 00000000000000fc t pack_float_b10g10r10a2_unorm
00000000004a2b60 0000000000002b8c t _mesa_pack_ubyte_rgba_row
00000000004a56f0 00000000000014cc t _mesa_pack_uint_rgba_row
00000000004a6bc0 0000000000003048 t _mesa_pack_float_rgba_row
00000000004a9c10 000000000000009c t _mesa_pack_ubyte_stencil_row
00000000004a9cb0 0000000000000040 t transform_decl
00000000004a9cf0 00000000000007dc t transform_instr
00000000004aa4d0 0000000000001994 t st_translate_atifs_program
00000000004abe70 0000000000000210 t st_init_atifs_prog
00000000004ac080 00000000000000a0 t st_fixup_atifs
00000000004ac120 0000000000000200 t check_program_state
00000000004ac320 0000000000000004 t st_init_atoms
00000000004ac330 0000000000000004 t st_destroy_atoms
00000000004ac340 0000000000000278 t st_validate_state
00000000004ac5c0 00000000000000cc T st_update_clip
00000000004ac690 00000000000000e4 t st_bind_ubos
00000000004ac780 0000000000000214 t st_upload_constants
00000000004ac9a0 0000000000000008 T st_update_vs_constants
00000000004ac9b0 0000000000000008 T st_update_fs_constants
00000000004ac9c0 0000000000000010 T st_update_gs_constants
00000000004ac9d0 0000000000000010 T st_update_tcs_constants
00000000004ac9e0 0000000000000010 T st_update_tes_constants
00000000004ac9f0 0000000000000010 T st_update_cs_constants
00000000004aca00 0000000000000018 T st_bind_vs_ubos
00000000004aca20 0000000000000018 T st_bind_fs_ubos
00000000004aca40 0000000000000018 T st_bind_gs_ubos
00000000004aca60 0000000000000018 T st_bind_tcs_ubos
00000000004aca80 0000000000000018 T st_bind_tes_ubos
00000000004acaa0 0000000000000018 T st_bind_cs_ubos
00000000004acac0 0000000000000008 t st_compare_func_to_pipe
00000000004acad0 0000000000000578 T st_update_depth_stencil_alpha
00000000004ad050 0000000000000410 T st_update_framebuffer_state
00000000004ad460 00000000000001bc t st_convert_image
00000000004ad620 0000000000000164 t st_bind_images.part.0
00000000004ad790 0000000000000078 t st_convert_image_from_unit
00000000004ad810 000000000000002c T st_bind_vs_images
00000000004ad840 000000000000002c T st_bind_fs_images
00000000004ad870 000000000000002c T st_bind_gs_images
00000000004ad8a0 000000000000002c T st_bind_tcs_images
00000000004ad8d0 000000000000002c T st_bind_tes_images
00000000004ad900 000000000000002c T st_bind_cs_images
00000000004ad930 000000000000023c t update_sample_locations
00000000004adb70 00000000000000ac T st_update_sample_state
00000000004adc20 0000000000000048 T st_update_sample_shading
00000000004adc70 00000000000005e8 T st_update_pixel_transfer
00000000004ae260 0000000000000778 T st_update_rasterizer
00000000004ae9e0 000000000000031c t st_convert_sampler
00000000004aed00 0000000000000084 t st_convert_sampler_from_unit
00000000004aed90 0000000000000288 t update_shader_samplers
00000000004af020 000000000000001c T st_update_vertex_samplers
00000000004af040 0000000000000024 T st_update_tessctrl_samplers
00000000004af070 0000000000000024 T st_update_tesseval_samplers
00000000004af0a0 0000000000000024 T st_update_geometry_samplers
00000000004af0d0 000000000000001c T st_update_fragment_samplers
00000000004af0f0 0000000000000024 T st_update_compute_samplers
00000000004af120 00000000000001b4 T st_update_scissor
00000000004af2e0 00000000000001a8 T st_update_window_rectangles
00000000004af490 0000000000000134 t st_update_common_program
00000000004af5d0 0000000000000470 T st_update_fp
00000000004afa40 00000000000001e0 T st_update_vp
00000000004afc20 0000000000000040 T st_update_gp
00000000004afc60 0000000000000040 T st_update_tcp
00000000004afca0 0000000000000040 T st_update_tep
00000000004afce0 0000000000000040 T st_update_cp
00000000004afd20 00000000000000f8 T st_update_polygon_stipple
00000000004afe20 0000000000000160 t st_bind_ssbos
00000000004aff80 0000000000000018 T st_bind_vs_ssbos
00000000004affa0 0000000000000018 T st_bind_fs_ssbos
00000000004affc0 0000000000000018 T st_bind_gs_ssbos
00000000004affe0 0000000000000018 T st_bind_tcs_ssbos
00000000004b0000 0000000000000018 T st_bind_tes_ssbos
00000000004b0020 0000000000000018 T st_bind_cs_ssbos
00000000004b0040 0000000000000030 T st_update_tess
00000000004b0070 0000000000000100 t st_update_single_texture
00000000004b0170 000000000000047c t update_textures
00000000004b05f0 00000000000000a4 t update_textures_local
00000000004b06a0 0000000000000028 T st_update_vertex_textures
00000000004b06d0 0000000000000018 T st_update_fragment_textures
00000000004b06f0 000000000000001c T st_update_geometry_textures
00000000004b0710 000000000000001c T st_update_tessctrl_textures
00000000004b0730 000000000000001c T st_update_tesseval_textures
00000000004b0750 000000000000001c T st_update_compute_textures
00000000004b0770 0000000000000130 T st_update_viewport
00000000004b08a0 00000000000003ac t transform_instr
00000000004b0c50 00000000000000b8 t st_get_bitmap_shader
00000000004b0d10 00000000000008a8 t st_BlitFramebuffer
00000000004b15c0 0000000000000010 t st_init_blit_functions
00000000004b15d0 00000000000000ec t buffer_target_to_bind_flags
00000000004b16c0 0000000000000088 t buffer_usage
00000000004b1750 0000000000000040 t st_bufferobj_invalidate
00000000004b1790 0000000000000064 t st_bufferobj_flush_mapped_range
00000000004b1800 000000000000006c t st_bufferobj_unmap
00000000004b1870 000000000000006c t st_copy_buffer_subdata
00000000004b18e0 000000000000007c t st_bufferobj_page_commitment
00000000004b1960 000000000000004c t st_clear_buffer_subdata
00000000004b19b0 0000000000000050 t st_bufferobj_alloc
00000000004b1a00 000000000000004c t st_bufferobj_subdata
00000000004b1a50 000000000000009c t st_bufferobj_get_subdata
00000000004b1af0 0000000000000080 t st_bufferobj_free
00000000004b1b70 0000000000000370 t st_bufferobj_data
00000000004b1ee0 0000000000000354 t st_bufferobj_data_mem
00000000004b2240 0000000000000074 t st_access_flags_to_transfer_flags
00000000004b22c0 00000000000000cc t st_bufferobj_map_range
00000000004b2390 00000000000000c8 t st_init_bufferobject_functions
00000000004b2460 000000000000097c t st_Clear
00000000004b2de0 0000000000000030 t st_init_clear
00000000004b2e10 000000000000007c t st_destroy_clear
00000000004b2e90 0000000000000010 t st_init_clear_functions
00000000004b2ea0 00000000000001d0 t st_dispatch_compute_common
00000000004b3070 000000000000000c t st_dispatch_compute_group_size
00000000004b3080 000000000000001c t st_dispatch_compute_indirect
00000000004b30a0 0000000000000010 t st_dispatch_compute
00000000004b30b0 0000000000000028 t st_init_compute_functions
00000000004b30e0 0000000000000038 t st_EndConditionalRender
00000000004b3120 0000000000000088 t st_BeginConditionalRender
00000000004b31b0 000000000000001c t st_init_cond_render_functions
00000000004b31d0 0000000000000304 t get_canonical_format
00000000004b34e0 00000000000000c4 t canonical_format_from_bits
00000000004b35b0 00000000000000a0 t same_size_and_swizzle
00000000004b3650 000000000000018c t swizzled_copy
00000000004b37e0 00000000000004c8 t handle_complex_copy
00000000004b3cb0 0000000000000750 t st_CopyImageSubData
00000000004b4400 0000000000000010 t st_init_copy_image_functions
00000000004b4410 00000000000007f4 t transform_instr
00000000004b4c10 00000000000000ec t st_get_drawpix_shader
00000000004b4d00 0000000000000858 t st_DrawTex
00000000004b5560 0000000000000010 t st_init_drawtex_functions
00000000004b5570 0000000000000074 t st_destroy_drawtex
00000000004b55f0 00000000000003a0 t st_get_egl_image
00000000004b5990 0000000000000368 t st_bind_egl_image
00000000004b5d00 00000000000000d4 t st_egl_image_target_tex_storage
00000000004b5de0 00000000000000d4 t st_egl_image_target_texture_2d
00000000004b5ec0 00000000000001d0 t st_egl_image_target_renderbuffer_storage
00000000004b6090 0000000000000028 t st_init_eglimage_functions
00000000004b60c0 0000000000000060 t st_import_memoryobj_fd
00000000004b6120 0000000000000004 t st_memoryobj_free
00000000004b6130 0000000000000050 t st_memoryobj_alloc
00000000004b6180 0000000000000028 t st_init_memoryobject_functions
00000000004b61b0 00000000000000b4 t st_GetProgrammableSampleCaps
00000000004b6270 000000000000009c t st_GetSamplePosition
00000000004b6310 000000000000001c t st_init_msaa_functions
00000000004b6330 0000000000000090 t st_EndPerfMonitor
00000000004b63c0 00000000000000dc t st_IsPerfMonitorResultAvailable
00000000004b64a0 00000000000001dc t st_GetPerfMonitorResult
00000000004b6680 00000000000000a0 t reset_perf_monitor
00000000004b6720 0000000000000034 t st_DeletePerfMonitor
00000000004b6760 000000000000000c t st_NewPerfMonitor
00000000004b6770 000000000000033c t st_BeginPerfMonitor
00000000004b6ab0 0000000000000080 t st_ResetPerfMonitor
00000000004b6b30 0000000000000324 t st_InitPerfMonitorGroups
00000000004b6e60 0000000000000044 t st_have_perfmon
00000000004b6eb0 000000000000007c t st_destroy_perfmon
00000000004b6f30 0000000000000064 t st_init_perfmon_functions
00000000004b6fa0 0000000000000018 t st_InitPerfQueryInfo
00000000004b6fc0 0000000000000018 t st_GetPerfQueryInfo
00000000004b6fe0 0000000000000018 t st_DeletePerfQuery
00000000004b7000 0000000000000028 t st_BeginPerfQuery
00000000004b7030 0000000000000018 t st_EndPerfQuery
00000000004b7050 0000000000000018 t st_WaitPerfQuery
00000000004b7070 0000000000000028 t st_IsPerfQueryReady
00000000004b70a0 000000000000001c t st_GetPerfQueryData
00000000004b70c0 0000000000000018 t st_NewPerfQueryObject
00000000004b70e0 000000000000006c t st_GetPerfCounterInfo
00000000004b7150 0000000000000068 t st_have_perfquery
00000000004b71c0 000000000000007c t st_init_perfquery_functions
00000000004b7240 0000000000000038 t st_new_ati_fs
00000000004b7280 0000000000000024 t st_max_shader_compiler_threads
00000000004b72b0 00000000000000a0 t st_get_shader_program_completion_status
00000000004b7350 00000000000000d8 t st_program_string_notify
00000000004b7430 0000000000000048 t st_delete_program
00000000004b7480 0000000000000070 t st_new_program
00000000004b74f0 0000000000000050 t st_init_program_functions
00000000004b7540 0000000000000030 t st_GetTimestamp
00000000004b7570 00000000000001c0 t st_StoreQueryResult
00000000004b7730 00000000000001d8 t get_query_result
00000000004b7910 0000000000000034 t st_CheckQuery
00000000004b7950 0000000000000054 t st_WaitQuery
00000000004b79b0 00000000000000d0 t st_EndQuery
00000000004b7a80 0000000000000044 t st_NewQueryObject
00000000004b7ad0 000000000000006c t st_DeleteQuery
00000000004b7b40 00000000000003b8 t st_BeginQuery
00000000004b7f00 0000000000000064 t st_init_query_functions
00000000004b7f70 0000000000000214 t blit_to_staging
00000000004b8190 0000000000000ef0 t st_ReadPixels
00000000004b9080 0000000000000010 t st_init_readpixels_functions
00000000004b9090 0000000000000048 t st_get_string
00000000004b90e0 0000000000000010 t st_init_string_functions
00000000004b90f0 0000000000000020 t st_import_semaphoreobj_fd
00000000004b9110 00000000000000d0 t st_server_signal_semaphore
00000000004b91e0 00000000000000c8 t st_server_wait_semaphore
00000000004b92b0 0000000000000004 t st_semaphoreobj_free
00000000004b92c0 0000000000000050 t st_semaphoreobj_alloc
00000000004b9310 0000000000000040 t st_init_semaphoreobject_functions
00000000004b9350 0000000000000030 t st_fence_sync
00000000004b9380 00000000000000ac t st_server_wait_sync
00000000004b9430 00000000000000f4 t st_client_wait_sync
00000000004b9530 000000000000000c t st_check_sync
00000000004b9540 0000000000000050 t st_delete_sync_object
00000000004b9590 0000000000000038 t st_new_sync_object
00000000004b95d0 000000000000004c t st_init_syncobj_functions
00000000004b9620 000000000000001c t st_TextureBarrier
00000000004b9640 000000000000001c t st_FramebufferFetchBarrier
00000000004b9660 00000000000000b4 t st_MemoryBarrier
00000000004b9720 0000000000000028 t st_init_texture_barrier_functions
00000000004b9750 00000000000000e0 t st_viewport
00000000004b9830 0000000000000010 t st_init_viewport_functions
00000000004b9840 0000000000000034 t st_resume_transform_feedback
00000000004b9880 000000000000001c t st_pause_transform_feedback
00000000004b98a0 000000000000003c t st_new_transform_feedback
00000000004b98e0 00000000000000d0 t st_end_transform_feedback
00000000004b99b0 00000000000000c0 t st_delete_transform_feedback
00000000004b9a70 0000000000000158 t st_begin_transform_feedback
00000000004b9bd0 0000000000000018 t st_transform_feedback_draw_init
00000000004b9bf0 000000000000004c t st_init_xformfb_functions
00000000004b9c40 000000000000032c T st_link_shader
00000000004b9f70 0000000000000004 T glsl_to_tgsi_visitor::visit(ir_function_signature*)
00000000004b9f80 0000000000000158 t shrink_array_declarations(inout_decl*, unsigned int, unsigned long*, unsigned long, unsigned int*)
00000000004ba0e0 0000000000000028 W ir_control_flow_info_visitor::visit_enter(ir_call*)
00000000004ba110 0000000000000028 W ir_control_flow_info_visitor::visit_enter(ir_return*)
00000000004ba140 00000000000000c0 t add_buffer_to_load_and_stores(glsl_to_tgsi_instruction*, st_src_reg*, exec_list*, ir_constant*)
00000000004ba200 0000000000000164 T glsl_to_tgsi_visitor::visit(ir_swizzle*)
00000000004ba370 000000000000002c W ir_control_flow_info_visitor::visit_enter(ir_function*)
00000000004ba3a0 0000000000000044 T glsl_to_tgsi_visitor::~glsl_to_tgsi_visitor()
00000000004ba3a0 0000000000000044 T glsl_to_tgsi_visitor::~glsl_to_tgsi_visitor()
00000000004ba3f0 0000000000000010 t var_destroy(hash_entry*)
00000000004ba400 0000000000000098 T glsl_to_tgsi_visitor::visit(ir_function*)
00000000004ba4a0 000000000000008c t mark_array_io(inout_decl*, unsigned int, unsigned long*, unsigned long, unsigned int*) [clone .constprop.0]
00000000004ba530 000000000000009c t fail_link(gl_shader_program*, char const*, ...) [clone .constprop.0]
00000000004ba5d0 0000000000000050 T glsl_to_tgsi_visitor::~glsl_to_tgsi_visitor()
00000000004ba620 0000000000000098 t type_has_array_or_matrix(glsl_type const*)
00000000004ba6c0 00000000000000dc t is_inout_array(unsigned int, ir_variable*, bool*)
00000000004ba7a0 0000000000000094 t emit_immediate(st_translate*, gl_constant_value*, unsigned int, int) [clone .isra.0]
00000000004ba840 0000000000000240 t dst_register(st_translate*, gl_register_file, unsigned int, unsigned int)
00000000004baa80 0000000000000c4c t emit_wpos(st_context*, st_translate*, gl_program const*, ureg_program*, int)
00000000004bb6d0 0000000000000c2c t translate_src(st_translate*, st_src_reg const*)
00000000004bc300 00000000000000c0 t translate_addr(st_translate*, st_src_reg const*, unsigned int)
00000000004bc3c0 0000000000000014 t swizzle_for_size(int)
00000000004bc3e0 0000000000000928 t glsl_to_tgsi_visitor::get_opcode(tgsi_opcode, st_dst_reg, st_src_reg, st_src_reg)
00000000004bcd10 0000000000000218 t glsl_to_tgsi_visitor::add_constant(gl_register_file, gl_constant_value*, int, unsigned int, unsigned short*)
00000000004bcf30 0000000000000070 t glsl_to_tgsi_visitor::st_src_reg_for_float(float)
00000000004bcfa0 00000000000000e4 t glsl_to_tgsi_visitor::st_src_reg_for_type(glsl_base_type, int)
00000000004bd090 0000000000000164 t glsl_to_tgsi_visitor::get_temp(glsl_type const*)
00000000004bd200 00000000000001c0 t glsl_to_tgsi_visitor::reladdr_to_temp(ir_instruction*, st_src_reg*, int*)
00000000004bd3c0 0000000000000a84 t glsl_to_tgsi_visitor::emit_asm(ir_instruction*, tgsi_opcode, st_dst_reg, st_dst_reg, st_src_reg, st_src_reg, st_src_reg, st_src_reg)
00000000004bde50 00000000000000ec t glsl_to_tgsi_visitor::emit_asm(ir_instruction*, tgsi_opcode, st_dst_reg, st_src_reg, st_src_reg, st_src_reg, st_src_reg)
00000000004bdf40 00000000000000d4 t glsl_to_tgsi_visitor::emit_dp(ir_instruction*, st_dst_reg, st_src_reg, st_src_reg, unsigned int)
00000000004be020 00000000000001cc t glsl_to_tgsi_visitor::emit_scalar(ir_instruction*, tgsi_opcode, st_dst_reg, st_src_reg, st_src_reg)
00000000004be1f0 0000000000000128 t glsl_to_tgsi_visitor::emit_arl(ir_instruction*, st_dst_reg, st_src_reg)
00000000004be320 00000000000002f8 t glsl_to_tgsi_visitor::visit(ir_variable*) [clone .part.0]
00000000004be620 0000000000000040 T glsl_to_tgsi_visitor::visit(ir_variable*)
00000000004be660 0000000000000130 T glsl_to_tgsi_visitor::visit(ir_loop*)
00000000004be790 000000000000014c T glsl_to_tgsi_visitor::visit(ir_loop_jump*)
00000000004be8e0 0000000000000234 t glsl_to_tgsi_visitor::try_emit_mad(ir_expression*, int)
00000000004beb20 00000000000001e0 t glsl_to_tgsi_visitor::try_emit_mad_for_and_not(ir_expression*, int)
00000000004bed00 0000000000000b1c T glsl_to_tgsi_visitor::visit(ir_constant*)
00000000004bf820 00000000000000b8 T glsl_to_tgsi_visitor::visit(ir_return*)
00000000004bf8e0 00000000000002b0 T glsl_to_tgsi_visitor::visit(ir_discard*)
00000000004bfb90 00000000000000b8 T glsl_to_tgsi_visitor::visit(ir_demote*)
00000000004bfc50 0000000000000214 T glsl_to_tgsi_visitor::visit(ir_if*)
00000000004bfe70 00000000000000d0 T glsl_to_tgsi_visitor::visit(ir_emit_vertex*)
00000000004bff40 00000000000000d0 T glsl_to_tgsi_visitor::visit(ir_end_primitive*)
00000000004c0010 00000000000000b8 T glsl_to_tgsi_visitor::visit(ir_barrier*)
00000000004c00d0 00000000000058cc t glsl_to_tgsi_visitor::visit_expression(ir_expression*, st_src_reg*)
00000000004c59a0 00000000000001a4 T glsl_to_tgsi_visitor::visit(ir_expression*)
00000000004c5b50 00000000000001d8 t glsl_to_tgsi_visitor::process_move_condition(ir_rvalue*)
00000000004c5d30 000000000000040c t glsl_to_tgsi_visitor::emit_block_mov(ir_assignment*, glsl_type const*, st_dst_reg*, st_src_reg*, st_src_reg*, bool)
00000000004c6140 0000000000000430 T glsl_to_tgsi_visitor::visit(ir_assignment*)
00000000004c6570 0000000000000640 t glsl_to_tgsi_visitor::visit_ssbo_intrinsic(ir_call*)
00000000004c6bb0 00000000000002a8 t glsl_to_tgsi_visitor::visit_membar_intrinsic(ir_call*)
00000000004c6e60 0000000000000504 t glsl_to_tgsi_visitor::visit_shared_intrinsic(ir_call*)
00000000004c7370 0000000000000200 t glsl_to_tgsi_visitor::visit_generic_intrinsic(ir_call*, tgsi_opcode)
00000000004c7570 00000000000003fc t glsl_to_tgsi_visitor::calc_deref_offsets(ir_dereference*, unsigned int*, unsigned short*, st_src_reg*, unsigned int*)
00000000004c7970 0000000000000180 t glsl_to_tgsi_visitor::get_deref_offsets(ir_dereference*, unsigned int*, unsigned int*, unsigned short*, st_src_reg*, bool)
00000000004c7af0 0000000000000a6c t glsl_to_tgsi_visitor::visit_atomic_counter_intrinsic(ir_call*)
00000000004c8560 0000000000000c98 t glsl_to_tgsi_visitor::visit_image_intrinsic(ir_call*)
00000000004c9200 00000000000000fc T glsl_to_tgsi_visitor::visit(ir_call*)
00000000004c9300 0000000000000154 t glsl_to_tgsi_visitor::canonicalize_gather_offset(st_src_reg)
00000000004c9460 0000000000001784 T glsl_to_tgsi_visitor::visit(ir_texture*)
00000000004cabf0 00000000000002a4 t glsl_to_tgsi_visitor::handle_bound_deref(ir_dereference*)
00000000004caea0 000000000000070c T glsl_to_tgsi_visitor::visit(ir_dereference_variable*)
00000000004cb5b0 0000000000000508 T glsl_to_tgsi_visitor::visit(ir_dereference_array*)
00000000004cbac0 0000000000000154 T glsl_to_tgsi_visitor::visit(ir_dereference_record*)
00000000004cbc20 00000000000000e8 t glsl_to_tgsi_visitor::glsl_to_tgsi_visitor()
00000000004cbc20 00000000000000e8 T glsl_to_tgsi_visitor::glsl_to_tgsi_visitor()
00000000004cbd10 0000000000000080 t free_glsl_to_tgsi_visitor
00000000004cbd90 000000000000024c t glsl_to_tgsi_visitor::simplify_cmp()
00000000004cbfe0 0000000000000354 t glsl_to_tgsi_visitor::rename_temp_registers(rename_reg_pair*)
00000000004cc340 00000000000000d8 t glsl_to_tgsi_visitor::get_first_temp_write(int*)
00000000004cc420 000000000000052c t glsl_to_tgsi_visitor::copy_propagate()
00000000004cc950 0000000000000690 t glsl_to_tgsi_visitor::eliminate_dead_code()
00000000004ccfe0 00000000000001b8 t glsl_to_tgsi_visitor::merge_two_dsts()
00000000004cd1a0 000000000000016c t glsl_to_tgsi_visitor::merge_registers()
00000000004cd310 00000000000000e0 t glsl_to_tgsi_visitor::renumber_registers()
00000000004cd3f0 0000000000000084 t void test_indirect_access<st_src_reg>(st_src_reg const&, bool*)
00000000004cd480 00000000000000a0 t void remap_array<st_src_reg>(st_src_reg&, int const*, bool const*)
00000000004cd520 00000000000004e8 t glsl_to_tgsi_visitor::split_arrays()
00000000004cda10 000000000000095c t st_link_tgsi
00000000004ce370 000000000000006c t void std::__unguarded_linear_insert<inout_decl*, __gnu_cxx::__ops::_Val_comp_iter<sort_inout_decls> >(inout_decl*, __gnu_cxx::__ops::_Val_comp_iter<sort_inout_decls>)
00000000004ce3e0 00000000000000bc t void std::__insertion_sort<inout_decl*, __gnu_cxx::__ops::_Iter_comp_iter<sort_inout_decls> >(inout_decl*, inout_decl*, __gnu_cxx::__ops::_Iter_comp_iter<sort_inout_decls>)
00000000004ce4a0 0000000000000158 t void std::__adjust_heap<inout_decl*, long, inout_decl, __gnu_cxx::__ops::_Iter_comp_iter<sort_inout_decls> >(inout_decl*, long, long, inout_decl, __gnu_cxx::__ops::_Iter_comp_iter<sort_inout_decls>)
00000000004ce600 0000000000000114 t void std::__heap_select<inout_decl*, __gnu_cxx::__ops::_Iter_comp_iter<sort_inout_decls> >(inout_decl*, inout_decl*, inout_decl*, __gnu_cxx::__ops::_Iter_comp_iter<sort_inout_decls>)
00000000004ce720 00000000000001e8 t void std::__introsort_loop<inout_decl*, long, __gnu_cxx::__ops::_Iter_comp_iter<sort_inout_decls> >(inout_decl*, inout_decl*, long, __gnu_cxx::__ops::_Iter_comp_iter<sort_inout_decls>)
00000000004ce910 00000000000023fc t st_translate_program
00000000004d0d10 0000000000000014 t tgsi_array_merge::sort_by_begin(array_live_range const&, array_live_range const&)
00000000004d0d30 000000000000001c t array_live_range::array_live_range()
00000000004d0d30 000000000000001c T array_live_range::array_live_range()
00000000004d0d50 0000000000000020 t array_live_range::array_live_range(unsigned int, unsigned int)
00000000004d0d50 0000000000000020 T array_live_range::array_live_range(unsigned int, unsigned int)
00000000004d0d70 0000000000000008 t array_live_range::set_live_range(int, int)
00000000004d0d80 0000000000000018 t array_live_range::set_access_mask(int)
00000000004d0da0 0000000000000060 t array_live_range::merge(array_live_range*, array_live_range*)
00000000004d0e00 00000000000000b8 t array_live_range::interleave_into(array_live_range*)
00000000004d0ec0 0000000000000064 t tgsi_array_merge::array_remapping::init_from(array_live_range const&)
00000000004d0f30 0000000000000570 t tgsi_array_merge::remap_arrays(int, unsigned int*, exec_list*, tgsi_array_merge::array_remapping*)
00000000004d14a0 000000000000013c t void std::__move_median_to_first<array_live_range*, __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(array_live_range const&, array_live_range const&)> >(array_live_range*, array_live_range*, array_live_range*, array_live_range*, __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(array_live_range const&, array_live_range const&)>)
00000000004d15e0 0000000000000080 t void std::__unguarded_linear_insert<array_live_range*, __gnu_cxx::__ops::_Val_comp_iter<bool (*)(array_live_range const&, array_live_range const&)> >(array_live_range*, __gnu_cxx::__ops::_Val_comp_iter<bool (*)(array_live_range const&, array_live_range const&)>)
00000000004d1660 00000000000000cc t void std::__insertion_sort<array_live_range*, __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(array_live_range const&, array_live_range const&)> >(array_live_range*, array_live_range*, __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(array_live_range const&, array_live_range const&)>)
00000000004d1730 00000000000001cc t void std::__adjust_heap<array_live_range*, long, array_live_range, __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(array_live_range const&, array_live_range const&)> >(array_live_range*, long, long, array_live_range, __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(array_live_range const&, array_live_range const&)>)
00000000004d1900 0000000000000150 t void std::__heap_select<array_live_range*, __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(array_live_range const&, array_live_range const&)> >(array_live_range*, array_live_range*, array_live_range*, __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(array_live_range const&, array_live_range const&)>)
00000000004d1a50 00000000000001d0 t void std::__introsort_loop<array_live_range*, long, __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(array_live_range const&, array_live_range const&)> >(array_live_range*, array_live_range*, long, __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(array_live_range const&, array_live_range const&)>)
00000000004d1c20 0000000000000398 t tgsi_array_merge::get_array_remapping(int, array_live_range*, tgsi_array_merge::array_remapping*)
00000000004d1fc0 00000000000000f4 t merge_arrays(int, unsigned int*, exec_list*, array_live_range*)
00000000004d20c0 00000000000000b0 t dup_reladdr(st_src_reg const*)
00000000004d2170 0000000000000128 t st_src_reg::st_src_reg(gl_register_file, int, glsl_type const*, int, unsigned int)
00000000004d2170 0000000000000128 T st_src_reg::st_src_reg(gl_register_file, int, glsl_type const*, int, unsigned int)
00000000004d22a0 0000000000000030 t st_src_reg::st_src_reg(gl_register_file, int, glsl_base_type)
00000000004d22a0 0000000000000030 T st_src_reg::st_src_reg(gl_register_file, int, glsl_base_type)
00000000004d22d0 0000000000000034 t st_src_reg::st_src_reg(gl_register_file, int, glsl_base_type, int)
00000000004d22d0 0000000000000034 T st_src_reg::st_src_reg(gl_register_file, int, glsl_base_type, int)
00000000004d2310 0000000000000020 t st_src_reg::reset()
00000000004d2330 0000000000000020 t st_src_reg::st_src_reg()
00000000004d2330 0000000000000020 T st_src_reg::st_src_reg()
00000000004d2350 00000000000000f8 t st_src_reg::operator=(st_src_reg const&)
00000000004d2450 00000000000000e0 t st_src_reg::st_src_reg(st_src_reg const&)
00000000004d2450 00000000000000e0 T st_src_reg::st_src_reg(st_src_reg const&)
00000000004d2530 0000000000000100 t st_src_reg::st_src_reg(st_dst_reg)
00000000004d2530 0000000000000100 T st_src_reg::st_src_reg(st_dst_reg)
00000000004d2630 0000000000000128 t st_src_reg::get_abs()
00000000004d2760 00000000000000f8 t st_dst_reg::st_dst_reg(st_src_reg)
00000000004d2760 00000000000000f8 T st_dst_reg::st_dst_reg(st_src_reg)
00000000004d2860 000000000000002c t st_dst_reg::st_dst_reg(gl_register_file, int, glsl_base_type, int)
00000000004d2860 000000000000002c T st_dst_reg::st_dst_reg(gl_register_file, int, glsl_base_type, int)
00000000004d2890 000000000000002c t st_dst_reg::st_dst_reg(gl_register_file, int, glsl_base_type)
00000000004d2890 000000000000002c T st_dst_reg::st_dst_reg(gl_register_file, int, glsl_base_type)
00000000004d28c0 000000000000001c t st_dst_reg::st_dst_reg()
00000000004d28c0 000000000000001c T st_dst_reg::st_dst_reg()
00000000004d28e0 00000000000000e0 t st_dst_reg::st_dst_reg(st_dst_reg const&)
00000000004d28e0 00000000000000e0 T st_dst_reg::st_dst_reg(st_dst_reg const&)
00000000004d29c0 0000000000000108 t st_dst_reg::operator=(st_dst_reg const&)
00000000004d2ad0 00000000000000d0 t (anonymous namespace)::temp_comp_access::record_read(int, (anonymous namespace)::prog_scope*)
00000000004d2ba0 000000000000007c t (anonymous namespace)::array_access::record_access(int, (anonymous namespace)::prog_scope*, int)
00000000004d2c20 0000000000000170 t (anonymous namespace)::access_recorder::record_read(st_src_reg const&, int, (anonymous namespace)::prog_scope*)
00000000004d2d90 0000000000000124 t void std::__adjust_heap<(anonymous namespace)::register_merge_record*, long, (anonymous namespace)::register_merge_record, __gnu_cxx::__ops::_Iter_less_iter>((anonymous namespace)::register_merge_record*, long, long, (anonymous namespace)::register_merge_record, __gnu_cxx::__ops::_Iter_less_iter) [clone .constprop.0]
00000000004d2ec0 00000000000000e4 t void std::__insertion_sort<(anonymous namespace)::register_merge_record*, __gnu_cxx::__ops::_Iter_less_iter>((anonymous namespace)::register_merge_record*, (anonymous namespace)::register_merge_record*, __gnu_cxx::__ops::_Iter_less_iter) [clone .constprop.0]
00000000004d2fb0 0000000000000218 t void std::__introsort_loop<(anonymous namespace)::register_merge_record*, long, __gnu_cxx::__ops::_Iter_less_iter>((anonymous namespace)::register_merge_record*, (anonymous namespace)::register_merge_record*, long, __gnu_cxx::__ops::_Iter_less_iter) [clone .constprop.0]
00000000004d31d0 00000000000001e0 t (anonymous namespace)::temp_comp_access::record_ifelse_write((anonymous namespace)::prog_scope const&)
00000000004d33b0 00000000000000f0 t (anonymous namespace)::temp_comp_access::record_write(int, (anonymous namespace)::prog_scope*)
00000000004d34a0 0000000000000d40 t get_temp_registers_required_live_ranges(void*, exec_list*, int, register_live_range*, int, array_live_range*)
00000000004d41e0 0000000000000254 t get_temp_registers_remapping(void*, int, register_live_range const*, rename_reg_pair*)
00000000004d4440 000000000000007c t swizzle_4v
00000000004d44c0 00000000000002cc t src_register
00000000004d4790 00000000000001bc t translate_src
00000000004d4950 0000000000000bf0 t emit_wpos
00000000004d5540 000000000000008c t st_translate_texture_target
00000000004d55d0 0000000000000020 t st_translate_texture_type
00000000004d55f0 000000000000191c t st_translate_mesa_program
00000000004d6f10 0000000000000088 T ast_array_specifier::print() const
00000000004d6fa0 00000000000008a8 t _mesa_ast_array_index_to_hir(void*, _mesa_glsl_parse_state*, ir_rvalue*, ir_rvalue*, YYLTYPE&, YYLTYPE&)
00000000004d7850 0000000000000058 T ast_expression_bin::print() const
00000000004d78b0 0000000000000010 t ast_expression::operator_string(ast_operators)
00000000004d78c0 0000000000000030 t ast_expression_bin::ast_expression_bin(int, ast_expression*, ast_expression*)
00000000004d78c0 0000000000000030 T ast_expression_bin::ast_expression_bin(int, ast_expression*, ast_expression*)
00000000004d78f0 000000000000005c T ast_function_expression::has_sequence_subexpression() const
00000000004d7950 0000000000000894 t convert_component(ir_rvalue*, glsl_type const*)
00000000004d81f0 00000000000000d8 t implicitly_convert_component(ir_rvalue*&, glsl_base_type, _mesa_glsl_parse_state*)
00000000004d82d0 0000000000000190 t match_subroutine_by_name(char const*, exec_list*, _mesa_glsl_parse_state*, ir_variable**)
00000000004d8460 000000000000015c t generate_array_index(void*, exec_list*, _mesa_glsl_parse_state*, YYLTYPE, ast_expression const*, ast_expression*, char const**, exec_list*)
00000000004d85c0 000000000000008c t function_exists(_mesa_glsl_parse_state*, glsl_symbol_table*, char const*)
00000000004d8650 000000000000015c t copy_index_derefs_to_temps(ir_instruction*, void*)
00000000004d87b0 00000000000000fc t process_parameters(exec_list*, exec_list*, exec_list*, _mesa_glsl_parse_state*) [clone .constprop.0]
00000000004d88b0 00000000000002d0 t process_record_constructor(exec_list*, glsl_type const*, YYLTYPE*, exec_list*, _mesa_glsl_parse_state*)
00000000004d8b80 00000000000003c8 t process_array_constructor(exec_list*, glsl_type const*, YYLTYPE*, exec_list*, _mesa_glsl_parse_state*)
00000000004d8f50 0000000000000580 T ast_aggregate_initializer::hir(exec_list*, _mesa_glsl_parse_state*)
00000000004d94d0 00000000000000cc t prototype_string(glsl_type const*, char const*, exec_list*)
00000000004d95a0 00000000000000c0 t print_function_prototypes(_mesa_glsl_parse_state*, YYLTYPE*, ir_function*)
00000000004d9660 00000000000002e0 t ast_function_expression::handle_method(exec_list*, _mesa_glsl_parse_state*)
00000000004d9940 00000000000029bc T ast_function_expression::hir(exec_list*, _mesa_glsl_parse_state*)
00000000004dc300 0000000000000010 W read_from_write_only_variable_visitor::visit_enter(ir_expression*)
00000000004dc310 0000000000000008 T ast_node::has_sequence_subexpression() const
00000000004dc320 0000000000000004 T ast_node::set_is_lhs(bool)
00000000004dc330 0000000000000100 T ast_expression::has_sequence_subexpression() const
00000000004dc430 0000000000000014 t compare_case_value(void const*, void const*)
00000000004dc450 0000000000000008 t key_contents(void const*)
00000000004dc460 0000000000000048 W interface_block_usage_visitor::visit(ir_dereference_variable*)
00000000004dc4b0 0000000000000010 T ast_warnings_toggle::hir(exec_list*, _mesa_glsl_parse_state*)
00000000004dc4c0 0000000000000128 t remove_per_vertex_blocks(exec_list*, _mesa_glsl_parse_state*, ir_variable_mode)
00000000004dc5f0 00000000000000b8 t validate_layout_qualifier_vertex_count(_mesa_glsl_parse_state*, YYLTYPE, ir_variable*, unsigned int, unsigned int*, char const*)
00000000004dc6b0 00000000000000ac t handle_tess_shader_input_decl(_mesa_glsl_parse_state*, YYLTYPE, ir_variable*)
00000000004dc760 00000000000000f8 t get_scalar_boolean_operand(exec_list*, _mesa_glsl_parse_state*, ast_expression*, int, char const*, bool*)
00000000004dc860 00000000000001a4 t validate_xfb_offset_qualifier(YYLTYPE*, _mesa_glsl_parse_state*, int, glsl_type const*, unsigned int)
00000000004dca10 0000000000000154 T ast_gs_input_layout::hir(exec_list*, _mesa_glsl_parse_state*)
00000000004dcb70 0000000000000104 t handle_tess_ctrl_shader_output_decl(_mesa_glsl_parse_state*, YYLTYPE, ir_variable*)
00000000004dcc80 0000000000000160 T ast_tcs_output_layout::hir(exec_list*, _mesa_glsl_parse_state*)
00000000004dcde0 00000000000002e8 T ast_cs_input_layout::hir(exec_list*, _mesa_glsl_parse_state*)
00000000004dd0d0 000000000000005c t is_varying_var(ir_variable*, gl_shader_stage)
00000000004dd130 00000000000000a8 t validate_storage_for_sampler_image_types(ir_variable*, _mesa_glsl_parse_state*, YYLTYPE*)
00000000004dd1e0 0000000000000288 t process_array_type(YYLTYPE*, glsl_type const*, ast_array_specifier*, _mesa_glsl_parse_state*)
00000000004dd470 0000000000000100 t constant_one_for_inc_dec(void*, glsl_type const*) [clone .isra.0]
00000000004dd570 000000000000007c W read_from_write_only_variable_visitor::visit(ir_dereference_variable*)
00000000004dd5f0 00000000000001c8 t shift_result_type(glsl_type const*, glsl_type const*, ast_operators, _mesa_glsl_parse_state*, YYLTYPE*)
00000000004dd7c0 00000000000000a8 t validate_identifier(char const*, YYLTYPE, _mesa_glsl_parse_state*)
00000000004dd870 00000000000002a8 t validate_interpolation_qualifier(_mesa_glsl_parse_state*, YYLTYPE*, glsl_interp_mode, ast_type_qualifier const*, glsl_type const*, ir_variable_mode)
00000000004ddb20 00000000000003c8 t select_gles_precision(unsigned int, glsl_type const*, _mesa_glsl_parse_state*, YYLTYPE*)
00000000004ddef0 000000000000090c t apply_type_qualifier_to_variable(ast_type_qualifier const*, ir_variable*, _mesa_glsl_parse_state*, YYLTYPE*, bool)
00000000004de800 00000000000000e0 t is_allowed_invariant(ir_variable*, _mesa_glsl_parse_state*)
00000000004de8e0 000000000000023c t apply_implicit_conversion(glsl_type const*, ir_rvalue*&, _mesa_glsl_parse_state*)
00000000004deb20 00000000000001e0 t modulus_result_type(ir_rvalue*&, ir_rvalue*&, _mesa_glsl_parse_state*, YYLTYPE*)
00000000004ded00 00000000000002ac t bit_logic_result_type(ir_rvalue*&, ir_rvalue*&, ast_operators, _mesa_glsl_parse_state*, YYLTYPE*)
00000000004defb0 0000000000000234 t arithmetic_result_type(ir_rvalue*&, ir_rvalue*&, bool, _mesa_glsl_parse_state*, YYLTYPE*)
00000000004df1f0 00000000000002b4 t validate_assignment(_mesa_glsl_parse_state*, YYLTYPE, ir_rvalue*, ir_rvalue*, bool)
00000000004df4b0 0000000000000230 t apply_explicit_binding(_mesa_glsl_parse_state*, YYLTYPE*, ir_variable*, glsl_type const*, ast_type_qualifier const*) [clone .part.0]
00000000004df6e0 0000000000000404 t do_comparison(void*, int, ir_rvalue*, ir_rvalue*)
00000000004dfaf0 0000000000000478 t do_assignment(exec_list*, _mesa_glsl_parse_state*, char const*, ir_rvalue*, ir_rvalue*, ir_rvalue**, bool, bool, YYLTYPE)
00000000004dff70 000000000000008c T ast_expression::set_is_lhs(bool)
00000000004e0000 0000000000000514 t _mesa_ast_to_hir(exec_list*, _mesa_glsl_parse_state*)
00000000004e0520 0000000000000008 T ast_node::hir(exec_list*, _mesa_glsl_parse_state*)
00000000004e0530 0000000000000010 T ast_function_expression::hir_no_rvalue(exec_list*, _mesa_glsl_parse_state*)
00000000004e0540 0000000000000010 T ast_aggregate_initializer::hir_no_rvalue(exec_list*, _mesa_glsl_parse_state*)
00000000004e0550 0000000000000108 t check_builtin_array_max_size(char const*, unsigned int, YYLTYPE, _mesa_glsl_parse_state*)
00000000004e0660 0000000000000464 t get_variable_being_redeclared(ir_variable**, YYLTYPE, _mesa_glsl_parse_state*, bool, bool*)
00000000004e0ad0 000000000000214c t ast_expression::do_hir(exec_list*, _mesa_glsl_parse_state*, bool)
00000000004e2c20 0000000000000008 T ast_expression::hir(exec_list*, _mesa_glsl_parse_state*)
00000000004e2c30 0000000000000008 T ast_expression::hir_no_rvalue(exec_list*, _mesa_glsl_parse_state*)
00000000004e2c40 0000000000000030 T ast_expression_statement::hir(exec_list*, _mesa_glsl_parse_state*)
00000000004e2c70 00000000000000a8 T ast_compound_statement::hir(exec_list*, _mesa_glsl_parse_state*)
00000000004e2d20 000000000000008c t ast_type_specifier::glsl_type(char const**, _mesa_glsl_parse_state*) const
00000000004e2db0 000000000000105c t ast_process_struct_or_iface_block_members(exec_list*, _mesa_glsl_parse_state*, exec_list*, glsl_struct_field**, bool, glsl_matrix_layout, bool, ir_variable_mode, ast_type_qualifier*, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int)
00000000004e3e10 00000000000013fc T ast_interface_block::hir(exec_list*, _mesa_glsl_parse_state*)
00000000004e5210 0000000000002b4c T ast_declarator_list::hir(exec_list*, _mesa_glsl_parse_state*)
00000000004e7d60 00000000000002cc T ast_parameter_declarator::hir(exec_list*, _mesa_glsl_parse_state*)
00000000004e8030 00000000000000e8 t ast_parameter_declarator::parameters_to_hir(exec_list*, bool, exec_list*, _mesa_glsl_parse_state*)
00000000004e8120 0000000000000b4c T ast_function::hir(exec_list*, _mesa_glsl_parse_state*)
00000000004e8c70 0000000000000198 T ast_function_definition::hir(exec_list*, _mesa_glsl_parse_state*)
00000000004e8e10 00000000000000a4 T ast_demote_statement::hir(exec_list*, _mesa_glsl_parse_state*)
00000000004e8ec0 0000000000000170 T ast_selection_statement::hir(exec_list*, _mesa_glsl_parse_state*)
00000000004e9030 00000000000001c4 t ast_switch_statement::test_to_hir(exec_list*, _mesa_glsl_parse_state*)
00000000004e9200 0000000000000030 T ast_switch_body::hir(exec_list*, _mesa_glsl_parse_state*)
00000000004e9230 0000000000000344 T ast_case_statement_list::hir(exec_list*, _mesa_glsl_parse_state*)
00000000004e9580 000000000000010c T ast_case_statement::hir(exec_list*, _mesa_glsl_parse_state*)
00000000004e9690 0000000000000068 T ast_case_label_list::hir(exec_list*, _mesa_glsl_parse_state*)
00000000004e9700 0000000000000444 T ast_case_label::hir(exec_list*, _mesa_glsl_parse_state*)
00000000004e9b50 000000000000016c t ast_iteration_statement::condition_to_hir(exec_list*, _mesa_glsl_parse_state*)
00000000004e9cc0 0000000000000538 T ast_jump_statement::hir(exec_list*, _mesa_glsl_parse_state*)
00000000004ea200 0000000000000460 T ast_switch_statement::hir(exec_list*, _mesa_glsl_parse_state*)
00000000004ea660 000000000000015c T ast_iteration_statement::hir(exec_list*, _mesa_glsl_parse_state*)
00000000004ea7c0 0000000000000188 T ast_type_specifier::hir(exec_list*, _mesa_glsl_parse_state*)
00000000004ea950 0000000000000234 T ast_struct_specifier::hir(exec_list*, _mesa_glsl_parse_state*)
00000000004eab90 0000000000000064 T ast_type_specifier::print() const
00000000004eac00 000000000000009c t ast_fully_specified_type::has_qualifiers(_mesa_glsl_parse_state*) const
00000000004eaca0 0000000000000010 t ast_type_qualifier::has_interpolation() const
00000000004eacb0 0000000000000040 t ast_type_qualifier::has_layout() const
00000000004eacf0 0000000000000014 t ast_type_qualifier::has_storage() const
00000000004ead10 0000000000000010 t ast_type_qualifier::has_auxiliary_storage() const
00000000004ead20 0000000000000010 t ast_type_qualifier::has_memory() const
00000000004ead30 0000000000000020 t ast_type_qualifier::is_subroutine_decl() const
00000000004ead50 000000000000099c t ast_type_qualifier::merge_qualifier(YYLTYPE*, _mesa_glsl_parse_state*, ast_type_qualifier const&, bool, bool)
00000000004eb6f0 0000000000000160 t ast_type_qualifier::validate_out_qualifier(YYLTYPE*, _mesa_glsl_parse_state*)
00000000004eb850 00000000000000d0 t ast_type_qualifier::merge_into_out_qualifier(YYLTYPE*, _mesa_glsl_parse_state*, ast_node*&)
00000000004eb920 000000000000028c t ast_type_qualifier::validate_in_qualifier(YYLTYPE*, _mesa_glsl_parse_state*)
00000000004ebbb0 0000000000000358 t ast_type_qualifier::merge_into_in_qualifier(YYLTYPE*, _mesa_glsl_parse_state*, ast_node*&)
00000000004ebf10 0000000000000668 t ast_type_qualifier::validate_flags(YYLTYPE*, _mesa_glsl_parse_state*, ast_type_qualifier const&, char const*, char const*)
00000000004ec580 00000000000001b4 t ast_layout_expression::process_qualifier_constant(_mesa_glsl_parse_state*, char const*, unsigned int*, bool)
00000000004ec740 0000000000000114 t process_qualifier_constant(_mesa_glsl_parse_state*, YYLTYPE*, char const*, ast_expression*, unsigned int*)
00000000004ec860 0000000000000194 t ast_type_qualifier::push_to_global(YYLTYPE*, _mesa_glsl_parse_state*)
00000000004eca00 0000000000000c44 t _mesa_glsl_initialize_types
00000000004ed650 0000000000000100 t (anonymous namespace)::builtin_variable_generator::add_variable(char const*, glsl_type const*, int, ir_variable_mode, int)
00000000004ed750 00000000000000e0 t (anonymous namespace)::builtin_variable_generator::add_index_variable(char const*, glsl_type const*, int, ir_variable_mode, int, int) [clone .constprop.0] [clone .isra.0]
00000000004ed830 00000000000000c8 t (anonymous namespace)::builtin_variable_generator::add_const_ivec3(char const*, int, int, int) [clone .isra.0]
00000000004ed900 000000000000008c t (anonymous namespace)::builtin_variable_generator::add_const(char const*, int, int) [clone .isra.0]
00000000004ed990 0000000000000204 t (anonymous namespace)::builtin_variable_generator::add_uniform(glsl_type const*, int, char const*) [clone .isra.0]
00000000004edba0 0000000000000114 t (anonymous namespace)::builtin_variable_generator::add_varying(int, glsl_type const*, int, char const*)
00000000004edcc0 0000000000000e60 t (anonymous namespace)::builtin_variable_generator::generate_constants()
00000000004eeb20 00000000000020c0 t _mesa_glsl_initialize_variables(exec_list*, _mesa_glsl_parse_state*)
00000000004f0be0 0000000000000170 t _mesa_ast_field_selection_to_hir(ast_expression const*, exec_list*, _mesa_glsl_parse_state*)
00000000004f0d50 0000000000000040 t free_entry(hash_entry*)
00000000004f0d90 0000000000000020 T ir_array_refcount_visitor::visit_enter(ir_function_signature*)
00000000004f0db0 0000000000000050 t ir_array_refcount_visitor::ir_array_refcount_visitor()
00000000004f0db0 0000000000000050 T ir_array_refcount_visitor::ir_array_refcount_visitor()
00000000004f0e00 000000000000003c t ir_array_refcount_visitor::~ir_array_refcount_visitor()
00000000004f0e00 000000000000003c T ir_array_refcount_visitor::~ir_array_refcount_visitor()
00000000004f0e40 00000000000000d8 t ir_array_refcount_entry::ir_array_refcount_entry(ir_variable*)
00000000004f0e40 00000000000000d8 T ir_array_refcount_entry::ir_array_refcount_entry(ir_variable*)
00000000004f0f20 00000000000000b0 T ir_array_refcount_visitor::visit(ir_dereference_variable*)
00000000004f0fd0 00000000000001b8 T ir_array_refcount_visitor::visit_enter(ir_dereference_array*)
00000000004f1190 0000000000000074 t ir_array_refcount_visitor::get_variable_entry(ir_variable*)
00000000004f1210 000000000000017c t call_for_basic_blocks(exec_list*, void (*)(ir_instruction*, ir_instruction*, void*), void*)
00000000004f1390 0000000000000018 T ir_function_can_inline_visitor::visit_enter(ir_return*)
00000000004f13b0 00000000000000a8 t can_inline(ir_call*)
00000000004f1460 0000000000000010 t (anonymous namespace)::has_recursion_visitor::visit_leave(ir_function_signature*)
00000000004f1470 0000000000000100 t (anonymous namespace)::has_recursion_visitor::visit_enter(ir_call*)
00000000004f1570 000000000000005c t destroy_links(exec_list*, (anonymous namespace)::function*) [clone .isra.0]
00000000004f15d0 00000000000000dc t remove_unlinked_functions(void const*, void*, void*)
00000000004f16b0 00000000000000a4 t (anonymous namespace)::has_recursion_visitor::visit_enter(ir_function_signature*)
00000000004f1760 0000000000000170 t detect_recursion_unlinked(_mesa_glsl_parse_state*, exec_list*)
00000000004f18d0 0000000000000158 t detect_recursion_linked(gl_shader_program*, exec_list*)
00000000004f1a30 0000000000000064 t ir_rvalue_visitor::visit_leave(ir_expression*)
00000000004f1aa0 0000000000000024 T ir_rvalue_visitor::visit_leave(ir_swizzle*)
00000000004f1aa0 0000000000000024 T ir_rvalue_visitor::visit_leave(ir_dereference_record*)
00000000004f1ad0 0000000000000024 T ir_rvalue_visitor::visit_leave(ir_discard*)
00000000004f1ad0 0000000000000024 T ir_rvalue_visitor::visit_leave(ir_emit_vertex*)
00000000004f1ad0 0000000000000024 T ir_rvalue_visitor::visit_leave(ir_end_primitive*)
00000000004f1ad0 0000000000000024 T ir_rvalue_visitor::visit_leave(ir_if*)
00000000004f1ad0 0000000000000024 T ir_rvalue_visitor::visit_leave(ir_return*)
00000000004f1b00 0000000000000064 T ir_rvalue_enter_visitor::visit_enter(ir_expression*)
00000000004f1b70 0000000000000024 T ir_rvalue_enter_visitor::visit_enter(ir_swizzle*)
00000000004f1b70 0000000000000024 T ir_rvalue_enter_visitor::visit_enter(ir_dereference_record*)
00000000004f1ba0 0000000000000024 T ir_rvalue_enter_visitor::visit_enter(ir_discard*)
00000000004f1ba0 0000000000000024 T ir_rvalue_enter_visitor::visit_enter(ir_emit_vertex*)
00000000004f1ba0 0000000000000024 T ir_rvalue_enter_visitor::visit_enter(ir_end_primitive*)
00000000004f1ba0 0000000000000024 T ir_rvalue_enter_visitor::visit_enter(ir_if*)
00000000004f1ba0 0000000000000024 T ir_rvalue_enter_visitor::visit_enter(ir_return*)
00000000004f1bd0 0000000000000048 t ir_rvalue_visitor::visit_leave(ir_assignment*)
00000000004f1c20 0000000000000048 t ir_rvalue_enter_visitor::visit_enter(ir_assignment*)
00000000004f1c70 000000000000005c T ir_rvalue_visitor::visit_leave(ir_dereference_array*)
00000000004f1cd0 000000000000005c T ir_rvalue_enter_visitor::visit_enter(ir_dereference_array*)
00000000004f1d30 0000000000000064 t ir_rvalue_base_visitor::rvalue_visit(ir_expression*)
00000000004f1da0 000000000000010c t ir_rvalue_base_visitor::rvalue_visit(ir_texture*)
00000000004f1eb0 0000000000000004 T ir_rvalue_visitor::visit_leave(ir_texture*)
00000000004f1ec0 0000000000000004 T ir_rvalue_enter_visitor::visit_enter(ir_texture*)
00000000004f1ed0 0000000000000048 t ir_rvalue_base_visitor::rvalue_visit(ir_assignment*)
00000000004f1f20 00000000000000b4 t ir_rvalue_base_visitor::rvalue_visit(ir_call*)
00000000004f1fe0 0000000000000004 T ir_rvalue_visitor::visit_leave(ir_call*)
00000000004f1ff0 0000000000000004 t ir_rvalue_enter_visitor::visit_enter(ir_call*)
00000000004f2000 0000000000000180 t mark(gl_program*, ir_variable*, int, int, gl_shader_stage)
00000000004f2180 000000000000001c t (anonymous namespace)::ir_set_program_inouts_visitor::visit_enter(ir_discard*)
00000000004f21a0 0000000000000024 t (anonymous namespace)::ir_set_program_inouts_visitor::visit_enter(ir_texture*)
00000000004f21d0 0000000000000020 t (anonymous namespace)::ir_set_program_inouts_visitor::visit_enter(ir_function_signature*)
00000000004f21f0 00000000000000f4 t (anonymous namespace)::ir_set_program_inouts_visitor::mark_whole_variable(ir_variable*)
00000000004f22f0 0000000000000040 t (anonymous namespace)::ir_set_program_inouts_visitor::visit(ir_dereference_variable*)
00000000004f2330 0000000000000058 t is_multiple_vertices(gl_shader_stage, ir_variable*)
00000000004f2390 00000000000001b0 t (anonymous namespace)::ir_set_program_inouts_visitor::try_mark_partial_variable(ir_variable*, ir_rvalue*)
00000000004f2540 00000000000000f4 t (anonymous namespace)::ir_set_program_inouts_visitor::visit_enter(ir_dereference_array*)
00000000004f2640 0000000000000088 t do_set_program_inouts(exec_list*, gl_program*, gl_shader_stage)
00000000004f26d0 0000000000000068 t free_entry(hash_entry*)
00000000004f2740 0000000000000020 T ir_variable_refcount_visitor::visit_enter(ir_function_signature*)
00000000004f2760 0000000000000088 T ir_variable_refcount_visitor::visit(ir_variable*)
00000000004f27f0 0000000000000048 t ir_variable_refcount_visitor::ir_variable_refcount_visitor()
00000000004f27f0 0000000000000048 T ir_variable_refcount_visitor::ir_variable_refcount_visitor()
00000000004f2840 000000000000003c t ir_variable_refcount_visitor::~ir_variable_refcount_visitor()
00000000004f2840 000000000000003c T ir_variable_refcount_visitor::~ir_variable_refcount_visitor()
00000000004f2880 000000000000008c t ir_variable_refcount_visitor::get_variable_entry(ir_variable*)
00000000004f2910 0000000000000064 T ir_variable_refcount_visitor::visit(ir_dereference_variable*)
00000000004f2980 0000000000000090 T ir_variable_refcount_visitor::visit_leave(ir_assignment*)
00000000004f2a10 0000000000000158 t process_block(void*, hash_table*, ir_variable*)
00000000004f2b70 0000000000000074 T link_uniform_block_active_visitor::visit(ir_dereference_variable*)
00000000004f2bf0 00000000000001ac t process_arrays(void*, ir_dereference_array*, link_uniform_block_active*)
00000000004f2da0 0000000000000120 T link_uniform_block_active_visitor::visit_enter(ir_dereference_array*)
00000000004f2ec0 0000000000000180 T link_uniform_block_active_visitor::visit(ir_variable*)
00000000004f3040 00000000000000a0 t deref_output(ir_variable*)
00000000004f30e0 0000000000000068 t is_mode(ir_variable*, gl_advanced_blend_mode)
00000000004f3150 0000000000000090 t lumv3(ir_variable*)
00000000004f31e0 00000000000000a8 t maxv3(ir_variable*)
00000000004f3290 00000000000000a8 t minv3(ir_variable*)
00000000004f3340 00000000000004f0 t set_lum(ir_builder::ir_factory*, ir_variable*, ir_variable*, ir_variable*)
00000000004f3830 0000000000000234 t set_lum_sat(ir_builder::ir_factory*, ir_variable*, ir_variable*, ir_variable*, ir_variable*)
00000000004f3a70 0000000000001a38 t calc_blend_result(ir_builder::ir_factory, ir_variable*, ir_variable*, ir_rvalue*, unsigned int)
00000000004f54b0 000000000000048c t lower_blend_equation_advanced(gl_linked_shader*, bool)
00000000004f5940 0000000000000594 t lower_buffer_access::lower_buffer_access::emit_access(void*, bool, ir_dereference*, ir_variable*, unsigned int, bool, glsl_type const*, glsl_interface_packing, unsigned int)
00000000004f5ee0 0000000000000154 t lower_buffer_access::lower_buffer_access::is_dereferenced_thing_row_major(ir_rvalue const*)
00000000004f6040 0000000000000438 t lower_buffer_access::lower_buffer_access::setup_buffer_access(void*, ir_rvalue*, ir_rvalue**, unsigned int*, bool*, glsl_type const**, glsl_struct_field const**, glsl_interface_packing)
00000000004f6480 00000000000000b0 t replace_discard(void*, ir_variable*, ir_discard*)
00000000004f6530 0000000000000208 t (anonymous namespace)::lower_discard_visitor::visit_leave(ir_if*)
00000000004f6740 0000000000000050 t lower_discard(exec_list*)
00000000004f6790 0000000000000018 t (anonymous namespace)::ir_if_to_cond_assign_visitor::visit_enter(ir_if*)
00000000004f67b0 00000000000001c0 t move_block_to_cond_assign(void*, ir_if*, ir_rvalue*, exec_list*, set*)
00000000004f6970 000000000000031c t (anonymous namespace)::ir_if_to_cond_assign_visitor::visit_leave(ir_if*)
00000000004f6c90 0000000000000134 t check_ir_node(ir_instruction*, void*)
00000000004f6dd0 00000000000000a8 t lower_if_to_cond_assign(gl_shader_stage, exec_list*, unsigned int, unsigned int)
00000000004f6e80 000000000000017c t lower_64bit_integer_instructions(exec_list*, unsigned int)
00000000004f7000 0000000000000190 t lower_64bit::expand_source(ir_builder::ir_factory&, ir_rvalue*, ir_variable**)
00000000004f7190 0000000000000108 t lower_64bit::compact_destination(ir_builder::ir_factory&, glsl_type const*, ir_variable**)
00000000004f72a0 00000000000002d8 t lower_64bit::lower_op_to_function_call(ir_instruction*, ir_expression*, ir_function_signature*)
00000000004f7580 0000000000000120 t (anonymous namespace)::lower_64bit_visitor::handle_op(ir_expression*, char const*, ir_function_signature* (*)(void*, bool (*)(_mesa_glsl_parse_state const*)))
00000000004f76a0 0000000000000140 t (anonymous namespace)::lower_64bit_visitor::handle_rvalue(ir_rvalue**)
00000000004f77e0 0000000000000064 t mat_op_to_vec_predicate(ir_instruction*)
00000000004f7850 00000000000000a4 t (anonymous namespace)::ir_mat_op_to_vec_visitor::get_column(ir_dereference*, int)
00000000004f7900 0000000000000114 t (anonymous namespace)::ir_mat_op_to_vec_visitor::do_mul_mat_scalar(ir_dereference*, ir_dereference*, ir_dereference*)
00000000004f7a20 0000000000000b38 t (anonymous namespace)::ir_mat_op_to_vec_visitor::visit_leave(ir_assignment*)
00000000004f8560 0000000000000064 t do_mat_op_to_vec(exec_list*)
00000000004f85d0 00000000000001c8 T lower_offset_array_visitor::handle_rvalue(ir_rvalue**)
00000000004f87a0 000000000000004c t lower_offset_arrays(exec_list*)
00000000004f87f0 0000000000000004 t (anonymous namespace)::lower_packing_builtins_visitor::~lower_packing_builtins_visitor()
00000000004f87f0 0000000000000004 t (anonymous namespace)::lower_packing_builtins_visitor::~lower_packing_builtins_visitor()
00000000004f8800 0000000000000008 t (anonymous namespace)::lower_packing_builtins_visitor::~lower_packing_builtins_visitor()
00000000004f8810 00000000000001c0 t (anonymous namespace)::lower_packing_builtins_visitor::unpack_uint_to_uvec2(ir_rvalue*)
00000000004f89d0 0000000000000210 t (anonymous namespace)::lower_packing_builtins_visitor::pack_uvec2_to_uint(ir_rvalue*)
00000000004f8be0 0000000000000410 t (anonymous namespace)::lower_packing_builtins_visitor::unpack_half_1x16_nosign(ir_rvalue*, ir_rvalue*)
00000000004f8ff0 0000000000000510 t (anonymous namespace)::lower_packing_builtins_visitor::pack_half_1x16_nosign(ir_rvalue*, ir_rvalue*, ir_rvalue*)
00000000004f9500 00000000000003f0 t (anonymous namespace)::lower_packing_builtins_visitor::pack_uvec4_to_uint(ir_rvalue*)
00000000004f98f0 0000000000000438 t (anonymous namespace)::lower_packing_builtins_visitor::unpack_uint_to_uvec4(ir_rvalue*)
00000000004f9d30 000000000000143c t (anonymous namespace)::lower_packing_builtins_visitor::handle_rvalue(ir_rvalue**)
00000000004fb170 0000000000000078 t lower_packing_builtins(exec_list*, int)
00000000004fb1f0 0000000000000078 t (anonymous namespace)::deref_replacer::handle_rvalue(ir_rvalue**)
00000000004fb270 000000000000005c t (anonymous namespace)::find_variable_index::visit_enter(ir_dereference_array*)
00000000004fb2d0 0000000000000150 t (anonymous namespace)::assignment_generator::generate(unsigned int, ir_rvalue*, ir_builder::ir_factory&) const
00000000004fb420 0000000000000130 t compare_index_block(ir_builder::ir_factory&, ir_variable*, unsigned int, unsigned int)
00000000004fb550 0000000000000284 t (anonymous namespace)::switch_generator::generate(unsigned int, unsigned int, ir_builder::ir_factory&)
00000000004fb7e0 00000000000002ac t (anonymous namespace)::variable_index_to_cond_assign_visitor::convert_dereference_array(ir_dereference_array*, ir_assignment*, ir_dereference*)
00000000004fba90 00000000000001a8 t (anonymous namespace)::variable_index_to_cond_assign_visitor::handle_rvalue(ir_rvalue**)
00000000004fbc40 00000000000001a0 t (anonymous namespace)::variable_index_to_cond_assign_visitor::visit_leave(ir_assignment*)
00000000004fbde0 00000000000000a0 t lower_variable_index_to_cond_assign(gl_shader_stage, exec_list*, bool, bool, bool, bool)
00000000004fbe80 0000000000000254 t (anonymous namespace)::ir_vec_index_to_cond_assign_visitor::convert_vec_index_to_cond_assign(void*, ir_rvalue*, ir_rvalue*, glsl_type const*) [clone .constprop.0]
00000000004fc0e0 00000000000000e8 t (anonymous namespace)::ir_vec_index_to_cond_assign_visitor::convert_vector_extract_to_cond_assign(ir_rvalue*)
00000000004fc1d0 0000000000000030 t (anonymous namespace)::ir_vec_index_to_cond_assign_visitor::visit_enter(ir_if*)
00000000004fc200 0000000000000030 t (anonymous namespace)::ir_vec_index_to_cond_assign_visitor::visit_enter(ir_return*)
00000000004fc230 000000000000009c t (anonymous namespace)::ir_vec_index_to_cond_assign_visitor::visit_enter(ir_call*)
00000000004fc2d0 0000000000000044 t (anonymous namespace)::ir_vec_index_to_cond_assign_visitor::visit_leave(ir_assignment*)
00000000004fc320 0000000000000030 t (anonymous namespace)::ir_vec_index_to_cond_assign_visitor::visit_enter(ir_swizzle*)
00000000004fc350 000000000000005c t (anonymous namespace)::ir_vec_index_to_cond_assign_visitor::visit_enter(ir_expression*)
00000000004fc3b0 0000000000000050 t do_vec_index_to_cond_assign(exec_list*)
00000000004fc400 00000000000003bc t (anonymous namespace)::lower_vector_visitor::handle_rvalue(ir_rvalue**)
00000000004fc7c0 0000000000000060 t lower_quadop_vector(exec_list*, bool)
00000000004fc820 0000000000000008 t hash_table_var_hash(void const*)
00000000004fc830 000000000000007c t copy(void*, ir_variable*, ir_variable*)
00000000004fc8b0 0000000000000104 t (anonymous namespace)::output_read_remover::visit(ir_dereference_variable*)
00000000004fc9c0 000000000000008c t (anonymous namespace)::output_read_remover::visit_leave(ir_emit_vertex*)
00000000004fc9c0 000000000000008c t (anonymous namespace)::output_read_remover::visit_leave(ir_return*)
00000000004fca50 00000000000000b8 t (anonymous namespace)::output_read_remover::visit_leave(ir_function_signature*)
00000000004fcb10 0000000000000094 t lower_output_reads(unsigned int, exec_list*)
00000000004fcbb0 0000000000000170 t write_uniform_remap_table(blob*, unsigned int, gl_uniform_storage*, gl_uniform_storage**)
00000000004fcd20 0000000000000044 t write_hash_table_entry(char const*, unsigned int, void*)
00000000004fcd70 00000000000000d0 t write_buffer_block(blob*, gl_uniform_block*)
00000000004fce40 0000000000000104 t read_uniform_remap_table(blob_reader*, gl_shader_program*, unsigned int*, gl_uniform_storage*)
00000000004fcf50 000000000000015c t read_buffer_block(blob_reader*, gl_uniform_block*, gl_shader_program*)
00000000004fd0b0 00000000000000c8 t write_hash_table(blob*, string_to_uint_map*)
00000000004fd180 00000000000000b4 t read_hash_table(blob_reader*, string_to_uint_map*)
00000000004fd240 0000000000000f40 t serialize_glsl_program
00000000004fe180 0000000000001218 t deserialize_glsl_program
00000000004ff3a0 0000000000000100 t sanitize_cb
00000000004ff4a0 0000000000000038 t cso_construct_key
00000000004ff4e0 0000000000000060 t cso_insert_state
00000000004ff540 00000000000000cc t cso_hash_find_data_from_template
00000000004ff610 0000000000000100 t cso_find_state_template
00000000004ff710 0000000000000064 t cso_cache_create
00000000004ff780 00000000000001f4 t cso_cache_delete
00000000004ff980 0000000000000008 t cso_cache_set_sanitize_callback
00000000004ff990 0000000000000040 t eat_opt_white
00000000004ff9d0 0000000000000088 t str_match_nocase_whole
00000000004ffa60 00000000000000b4 t parse_int
00000000004ffb20 00000000000000cc t parse_register_file_bracket
00000000004ffbf0 000000000000012c t parse_optional_swizzle
00000000004ffd20 0000000000000170 t parse_opt_writemask
00000000004ffe90 00000000000004a8 t parse_register_bracket
0000000000500340 0000000000000214 t parse_register_dcl_bracket
0000000000500560 0000000000000f28 t parse_instruction
0000000000501490 0000000000001c48 t tgsi_text_translate
00000000005030e0 0000000000000004 t translate_create
00000000005030f0 0000000000000030 t translate_cache_create
0000000000503120 0000000000000074 t translate_cache_destroy
00000000005031a0 0000000000000094 t translate_cache_find
0000000000503240 0000000000000024 t emit_R64G64B64A64_FLOAT
0000000000503270 0000000000000020 t emit_R64G64B64_FLOAT
0000000000503290 0000000000000014 t emit_R64G64_FLOAT
00000000005032b0 0000000000000010 t emit_R64_FLOAT
00000000005032c0 000000000000001c t emit_R32G32B32A32_FLOAT
00000000005032e0 000000000000001c t emit_R32G32B32_FLOAT
0000000000503300 0000000000000014 t emit_R32G32_FLOAT
0000000000503320 000000000000000c t emit_R32_FLOAT
0000000000503330 0000000000000020 t emit_R32G32B32A32_USCALED
0000000000503350 0000000000000020 t emit_R32G32B32_USCALED
0000000000503370 0000000000000014 t emit_R32G32_USCALED
0000000000503390 0000000000000010 t emit_R32_USCALED
00000000005033a0 0000000000000020 t emit_R32G32B32A32_SSCALED
00000000005033c0 0000000000000020 t emit_R32G32B32_SSCALED
00000000005033e0 0000000000000014 t emit_R32G32_SSCALED
0000000000503400 0000000000000010 t emit_R32_SSCALED
0000000000503410 0000000000000020 t emit_R32G32B32A32_UNORM
0000000000503430 0000000000000020 t emit_R32G32B32_UNORM
0000000000503450 0000000000000014 t emit_R32G32_UNORM
0000000000503470 0000000000000010 t emit_R32_UNORM
0000000000503480 0000000000000020 t emit_R32G32B32A32_SNORM
00000000005034a0 0000000000000020 t emit_R32G32B32_SNORM
00000000005034c0 0000000000000014 t emit_R32G32_SNORM
00000000005034e0 0000000000000010 t emit_R32_SNORM
00000000005034f0 0000000000000020 t emit_R16G16B16A16_USCALED
0000000000503510 0000000000000024 t emit_R16G16B16_USCALED
0000000000503540 0000000000000018 t emit_R16G16_USCALED
0000000000503560 0000000000000010 t emit_R16_USCALED
0000000000503570 0000000000000020 t emit_R16G16B16A16_SSCALED
0000000000503590 0000000000000024 t emit_R16G16B16_SSCALED
00000000005035c0 0000000000000018 t emit_R16G16_SSCALED
00000000005035e0 0000000000000010 t emit_R16_SSCALED
00000000005035f0 0000000000000030 t emit_R16G16B16A16_UNORM
0000000000503620 000000000000003c t emit_R16G16B16_UNORM
0000000000503660 000000000000002c t emit_R16G16_UNORM
0000000000503690 0000000000000020 t emit_R16_UNORM
00000000005036b0 0000000000000030 t emit_R16G16B16A16_SNORM
00000000005036e0 000000000000003c t emit_R16G16B16_SNORM
0000000000503720 000000000000002c t emit_R16G16_SNORM
0000000000503750 0000000000000020 t emit_R16_SNORM
0000000000503770 0000000000000020 t emit_R8G8B8A8_USCALED
0000000000503790 0000000000000028 t emit_R8G8B8_USCALED
00000000005037c0 000000000000001c t emit_R8G8_USCALED
00000000005037e0 0000000000000010 t emit_R8_USCALED
00000000005037f0 000000000000002c t emit_R8G8B8A8_UNORM
0000000000503820 000000000000002c t emit_R8G8B8_UNORM
0000000000503850 000000000000002c t emit_R8G8_UNORM
0000000000503880 000000000000001c t emit_R8_UNORM
00000000005038a0 000000000000002c t emit_R8G8B8A8_SNORM
00000000005038d0 000000000000002c t emit_R8G8B8_SNORM
0000000000503900 000000000000002c t emit_R8G8_SNORM
0000000000503930 000000000000001c t emit_R8_SNORM
0000000000503950 000000000000001c t emit_R32G32B32A32_UINT
0000000000503970 000000000000001c t emit_R32G32B32_UINT
0000000000503990 0000000000000014 t emit_R32G32_UINT
00000000005039b0 000000000000000c t emit_R32_UINT
00000000005039c0 000000000000001c t emit_R16G16B16A16_UINT
00000000005039e0 0000000000000018 t emit_R16G16B16_UINT
0000000000503a00 0000000000000010 t emit_R16G16_UINT
0000000000503a10 000000000000000c t emit_R16_UINT
0000000000503a20 000000000000001c t emit_R8G8B8A8_UINT
0000000000503a40 000000000000001c t emit_R8G8B8_UINT
0000000000503a60 0000000000000014 t emit_R8G8_UINT
0000000000503a80 000000000000000c t emit_R8_UINT
0000000000503a90 000000000000001c t emit_R32G32B32A32_SINT
0000000000503ab0 000000000000001c t emit_R32G32B32_SINT
0000000000503ad0 0000000000000014 t emit_R32G32_SINT
0000000000503af0 000000000000000c t emit_R32_SINT
0000000000503b00 000000000000001c t emit_R16G16B16A16_SINT
0000000000503b20 0000000000000018 t emit_R16G16B16_SINT
0000000000503b40 0000000000000010 t emit_R16G16_SINT
0000000000503b50 000000000000000c t emit_R16_SINT
0000000000503b60 000000000000001c t emit_R8G8B8A8_SINT
0000000000503b80 000000000000001c t emit_R8G8B8_SINT
0000000000503ba0 0000000000000014 t emit_R8G8_SINT
0000000000503bc0 000000000000000c t emit_R8_SINT
0000000000503bd0 000000000000004c t emit_A8R8G8B8_UNORM
0000000000503c20 000000000000004c t emit_B8G8R8A8_UNORM
0000000000503c70 0000000000000104 t emit_B10G10R10A2_UNORM
0000000000503d80 00000000000000d0 t emit_B10G10R10A2_USCALED
0000000000503e50 0000000000000104 t emit_B10G10R10A2_SNORM
0000000000503f60 00000000000000e0 t emit_B10G10R10A2_SSCALED
0000000000504040 0000000000000104 t emit_R10G10B10A2_UNORM
0000000000504150 00000000000000d0 t emit_R10G10B10A2_USCALED
0000000000504220 0000000000000104 t emit_R10G10B10A2_SNORM
0000000000504330 00000000000000e0 t emit_R10G10B10A2_SSCALED
0000000000504410 0000000000000004 t emit_NULL
0000000000504420 000000000000004c t generic_set_buffer
0000000000504470 0000000000000004 t generic_release
0000000000504480 0000000000000168 t generic_run_elts
00000000005045f0 0000000000000168 t generic_run_elts16
0000000000504760 0000000000000168 t generic_run_elts8
00000000005048d0 0000000000000160 t generic_run
0000000000504a30 0000000000000044 t emit_R16G16B16A16_FLOAT
0000000000504a80 0000000000000044 t emit_R16G16B16_FLOAT
0000000000504ad0 0000000000000038 t emit_R16G16_FLOAT
0000000000504b10 0000000000000028 t emit_R16_FLOAT
0000000000504b40 0000000000000010 t emit_R8_SSCALED
0000000000504b50 0000000000000020 t emit_R8G8B8A8_SSCALED
0000000000504b70 0000000000000028 t emit_R8G8B8_SSCALED
0000000000504ba0 000000000000001c t emit_R8G8_SSCALED
0000000000504bc0 0000000000000700 t translate_generic_create
00000000005052c0 00000000000000c0 t util_draw_vertex_buffer
0000000000505380 00000000000000a4 T u_default_buffer_subdata
0000000000505430 00000000000000bc T u_default_texture_subdata
00000000005054f0 0000000000000008 T u_default_resource_get_handle
0000000000505500 0000000000000004 T u_default_transfer_flush_region
0000000000505510 0000000000000018 T u_resource_get_handle_vtbl
0000000000505530 0000000000000010 T u_resource_destroy_vtbl
0000000000505540 0000000000000010 T u_transfer_map_vtbl
0000000000505550 0000000000000014 T u_transfer_flush_region_vtbl
0000000000505570 0000000000000014 T u_transfer_unmap_vtbl
0000000000505590 0000000000000008 t vl_create_decoder
00000000005055a0 0000000000000008 t vl_video_buffer_is_format_supported
00000000005055b0 0000000000000008 t vl_video_buffer_create
00000000005055c0 0000000000000024 t nv50_miptree_get_handle
00000000005055f0 00000000000000a4 T nv50_miptree_destroy
00000000005056a0 00000000000000a0 t nv50_tex_choose_tile_dims_helper
0000000000505740 0000000000000100 t nv50_miptree_init_layout_linear
0000000000505840 000000000000010c t nv50_miptree_from_handle
0000000000505950 000000000000014c t nv50_surface_from_miptree
0000000000505aa0 0000000000000010 T nv50_invalidate_resource
0000000000505ab0 0000000000000068 T nv50_surface_destroy
0000000000505b20 0000000000000158 t nv50_surface_from_buffer
0000000000505c80 0000000000000384 T nv50_sampler_state_create
0000000000506010 0000000000000004 W nv50_ir::Iterator::reset()
0000000000506020 0000000000000008 W nv50_ir::Value::isUniform() const
0000000000506030 0000000000000050 W nv50_ir::Target::parseDriverInfo(nv50_ir_prog_info const*)
0000000000506080 0000000000000018 T nv50_ir::Symbol::isUniform() const
00000000005060a0 0000000000000028 T nv50_ir::ImmediateValue::equals(nv50_ir::Value const*, bool) const
00000000005060d0 0000000000000070 t _debug_printf
0000000000506140 0000000000000058 T nv50_ir::Value::equals(nv50_ir::Value const*, bool) const
00000000005061a0 0000000000000080 T nv50_ir::Symbol::equals(nv50_ir::Value const*, bool) const
0000000000506220 0000000000000094 t nv50_ir::Value::interfers(nv50_ir::Value const*) const [clone .part.0]
00000000005062c0 00000000000000a8 T nv50_ir::Value::interfers(nv50_ir::Value const*) const
0000000000506370 00000000000000c4 W nv50_ir::LValue::~LValue()
0000000000506370 00000000000000c4 W nv50_ir::LValue::~LValue()
0000000000506440 00000000000000c4 W nv50_ir::Symbol::~Symbol()
0000000000506440 00000000000000c4 W nv50_ir::Symbol::~Symbol()
0000000000506510 00000000000000c4 W nv50_ir::ImmediateValue::~ImmediateValue()
0000000000506510 00000000000000c4 W nv50_ir::ImmediateValue::~ImmediateValue()
00000000005065e0 00000000000000c0 W nv50_ir::LValue::~LValue()
00000000005066a0 00000000000000c0 W nv50_ir::ImmediateValue::~ImmediateValue()
0000000000506760 00000000000000c0 W nv50_ir::Symbol::~Symbol()
0000000000506820 0000000000000198 T nv50_ir::LValue::isUniform() const
00000000005069c0 0000000000000048 t nv50_ir::Modifier::Modifier(nv50_ir::operation)
00000000005069c0 0000000000000048 T nv50_ir::Modifier::Modifier(nv50_ir::operation)
0000000000506a10 0000000000000034 t nv50_ir::Modifier::operator*(nv50_ir::Modifier) const
0000000000506a50 00000000000001e8 t nv50_ir::ValueRef::getImmediate(nv50_ir::ImmediateValue&) const
0000000000506c40 0000000000000060 t nv50_ir::ValueDef::ValueDef(nv50_ir::Value*)
0000000000506c40 0000000000000060 T nv50_ir::ValueDef::ValueDef(nv50_ir::Value*)
0000000000506ca0 000000000000005c t nv50_ir::ValueDef::ValueDef(nv50_ir::ValueDef const&)
0000000000506ca0 000000000000005c T nv50_ir::ValueDef::ValueDef(nv50_ir::ValueDef const&)
0000000000506d00 00000000000000fc t nv50_ir::ValueDef::set(nv50_ir::Value*)
0000000000506e00 0000000000000008 t nv50_ir::ValueDef::~ValueDef()
0000000000506e00 0000000000000008 T nv50_ir::ValueDef::~ValueDef()
0000000000506e10 000000000000010c t std::deque<nv50_ir::ValueDef, std::allocator<nv50_ir::ValueDef> >::_M_destroy_data_aux(std::_Deque_iterator<nv50_ir::ValueDef, nv50_ir::ValueDef&, nv50_ir::ValueDef*>, std::_Deque_iterator<nv50_ir::ValueDef, nv50_ir::ValueDef&, nv50_ir::ValueDef*>) [clone .isra.0]
0000000000506f20 0000000000000214 t nv50_ir::ValueDef::mayReplace(nv50_ir::ValueRef const&)
0000000000507140 000000000000005c T nv50_ir::Value::Value()
0000000000507140 000000000000005c t nv50_ir::Value::Value()
00000000005071a0 0000000000000144 t nv50_ir::LValue::LValue(nv50_ir::Function*, nv50_ir::DataFile)
00000000005071a0 0000000000000144 T nv50_ir::LValue::LValue(nv50_ir::Function*, nv50_ir::DataFile)
00000000005072f0 000000000000014c t nv50_ir::LValue::LValue(nv50_ir::Function*, nv50_ir::LValue*)
00000000005072f0 000000000000014c T nv50_ir::LValue::LValue(nv50_ir::Function*, nv50_ir::LValue*)
0000000000507440 000000000000012c t nv50_ir::Symbol::Symbol(nv50_ir::Program*, nv50_ir::DataFile, unsigned char)
0000000000507440 000000000000012c T nv50_ir::Symbol::Symbol(nv50_ir::Program*, nv50_ir::DataFile, unsigned char)
0000000000507570 000000000000013c t nv50_ir::ImmediateValue::ImmediateValue(nv50_ir::Program*, unsigned int)
0000000000507570 000000000000013c T nv50_ir::ImmediateValue::ImmediateValue(nv50_ir::Program*, unsigned int)
00000000005076b0 000000000000013c t nv50_ir::ImmediateValue::ImmediateValue(nv50_ir::Program*, float)
00000000005076b0 000000000000013c T nv50_ir::ImmediateValue::ImmediateValue(nv50_ir::Program*, float)
00000000005077f0 0000000000000134 t nv50_ir::ImmediateValue::ImmediateValue(nv50_ir::Program*, double)
00000000005077f0 0000000000000134 T nv50_ir::ImmediateValue::ImmediateValue(nv50_ir::Program*, double)
0000000000507930 00000000000000e4 t nv50_ir::ImmediateValue::isInteger(int) const
0000000000507a20 0000000000000070 t nv50_ir::ImmediateValue::isNegative() const
0000000000507a90 0000000000000038 t nv50_ir::ImmediateValue::isPow2() const
0000000000507ad0 00000000000000b4 t nv50_ir::ImmediateValue::applyLog2()
0000000000507b90 0000000000000134 t nv50_ir::ImmediateValue::compare(nv50_ir::CondCode, float) const
0000000000507cd0 0000000000000340 t nv50_ir::Instruction::defCount(unsigned int, bool) const
0000000000508010 0000000000000340 t nv50_ir::Instruction::srcCount(unsigned int, bool) const
0000000000508350 0000000000000408 t nv50_ir::Instruction::canCommuteDefSrc(nv50_ir::Instruction const*) const
0000000000508760 0000000000000408 t nv50_ir::Instruction::canCommuteDefDef(nv50_ir::Instruction const*) const
0000000000508b70 0000000000000058 t nv50_ir::Instruction::isCommutationLegal(nv50_ir::Instruction const*) const
0000000000508bd0 00000000000002b0 t nv50_ir::TexInstruction::translateImgFormat(pipe_format)
0000000000508e80 0000000000000134 t nv50_ir::Program::Program(nv50_ir::Program::Type, nv50_ir::Target*)
0000000000508e80 0000000000000134 T nv50_ir::Program::Program(nv50_ir::Program::Type, nv50_ir::Target*)
0000000000508fc0 00000000000000ac t nv50_ir::Program::releaseInstruction(nv50_ir::Instruction*)
0000000000509070 0000000000000088 t nv50_ir::Program::releaseValue(nv50_ir::Value*)
0000000000509100 0000000000000114 t std::_Deque_base<nv50_ir::ValueDef, std::allocator<nv50_ir::ValueDef> >::_M_initialize_map(unsigned long)
0000000000509220 0000000000000114 t std::_Deque_base<nv50_ir::ValueRef, std::allocator<nv50_ir::ValueRef> >::_M_initialize_map(unsigned long)
0000000000509340 0000000000000164 t nv50_ir::Instruction::Instruction(nv50_ir::Function*, nv50_ir::operation, nv50_ir::DataType)
0000000000509340 0000000000000164 t nv50_ir::Instruction::Instruction(nv50_ir::Function*, nv50_ir::operation, nv50_ir::DataType)
00000000005094b0 0000000000000038 t nv50_ir::CmpInstruction::CmpInstruction(nv50_ir::Function*, nv50_ir::operation)
00000000005094b0 0000000000000038 T nv50_ir::CmpInstruction::CmpInstruction(nv50_ir::Function*, nv50_ir::operation)
00000000005094f0 00000000000000c8 t nv50_ir::FlowInstruction::FlowInstruction(nv50_ir::Function*, nv50_ir::operation, void*)
00000000005094f0 00000000000000c8 T nv50_ir::FlowInstruction::FlowInstruction(nv50_ir::Function*, nv50_ir::operation, void*)
00000000005095c0 00000000000000ec t nv50_ir::TexInstruction::TexInstruction(nv50_ir::Function*, nv50_ir::operation)
00000000005095c0 00000000000000ec T nv50_ir::TexInstruction::TexInstruction(nv50_ir::Function*, nv50_ir::operation)
00000000005096b0 0000000000000340 t std::deque<nv50_ir::ValueDef, std::allocator<nv50_ir::ValueDef> >::_M_default_append(unsigned long)
00000000005099f0 0000000000000350 t nv50_ir::Instruction::setDef(int, nv50_ir::Value*)
0000000000509d40 0000000000000348 t std::deque<nv50_ir::ValueRef, std::allocator<nv50_ir::ValueRef> >::_M_default_append(unsigned long)
000000000050a090 00000000000001b0 t std::_Hashtable<nv50_ir::ValueRef*, nv50_ir::ValueRef*, std::allocator<nv50_ir::ValueRef*>, std::__detail::_Identity, std::equal_to<nv50_ir::ValueRef*>, std::hash<nv50_ir::ValueRef*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_insert_unique_node(unsigned long, unsigned long, std::__detail::_Hash_node<nv50_ir::ValueRef*, false>*, unsigned long)
000000000050a240 00000000000001c8 t nv50_ir::ValueRef::set(nv50_ir::Value*)
000000000050a410 0000000000000010 t nv50_ir::ValueRef::ValueRef(nv50_ir::Value*)
000000000050a410 0000000000000010 T nv50_ir::ValueRef::ValueRef(nv50_ir::Value*)
000000000050a420 0000000000000008 t nv50_ir::ValueRef::~ValueRef()
000000000050a420 0000000000000008 T nv50_ir::ValueRef::~ValueRef()
000000000050a430 0000000000000040 t nv50_ir::ValueRef::set(nv50_ir::ValueRef const&)
000000000050a470 00000000000000cc t nv50_ir::ValueDef::replace(nv50_ir::ValueRef const&, bool)
000000000050a540 000000000000010c t std::deque<nv50_ir::ValueRef, std::allocator<nv50_ir::ValueRef> >::_M_destroy_data_aux(std::_Deque_iterator<nv50_ir::ValueRef, nv50_ir::ValueRef&, nv50_ir::ValueRef*>, std::_Deque_iterator<nv50_ir::ValueRef, nv50_ir::ValueRef&, nv50_ir::ValueRef*>) [clone .isra.0]
000000000050a650 0000000000000350 t nv50_ir::Instruction::setSrc(int, nv50_ir::Value*)
000000000050a9a0 00000000000000e8 t nv50_ir::Instruction::setSrc(int, nv50_ir::ValueRef const&)
000000000050aa90 0000000000000370 t nv50_ir::Instruction::setIndirect(int, int, nv50_ir::Value*)
000000000050ae00 000000000000020c t nv50_ir::Instruction::setPredicate(nv50_ir::CondCode, nv50_ir::Value*)
000000000050b010 0000000000000074 t nv50_ir::Instruction::putExtraSources(int, nv50_ir::Value**)
000000000050b090 0000000000000154 t nv50_ir::TexInstruction::setIndirectR(nv50_ir::Value*)
000000000050b1f0 0000000000000154 t nv50_ir::TexInstruction::setIndirectS(nv50_ir::Value*)
000000000050b350 000000000000037c t nv50_ir::Instruction::swapSources(int, int)
000000000050b6d0 0000000000000714 t nv50_ir::Instruction::moveSources(int, int)
000000000050bdf0 000000000000052c t nv50_ir::Instruction::~Instruction()
000000000050bdf0 000000000000052c t nv50_ir::Instruction::~Instruction()
000000000050c320 0000000000000028 T nv50_ir::Instruction::~Instruction()
000000000050c350 00000000000000fc t nv50_ir::TexInstruction::~TexInstruction()
000000000050c350 00000000000000fc T nv50_ir::TexInstruction::~TexInstruction()
000000000050c450 0000000000000028 T nv50_ir::TexInstruction::~TexInstruction()
000000000050c480 0000000000000010 W nv50_ir::FlowInstruction::~FlowInstruction()
000000000050c480 0000000000000010 W nv50_ir::FlowInstruction::~FlowInstruction()
000000000050c490 0000000000000034 W nv50_ir::FlowInstruction::~FlowInstruction()
000000000050c4d0 0000000000000010 W nv50_ir::CmpInstruction::~CmpInstruction()
000000000050c4d0 0000000000000010 W nv50_ir::CmpInstruction::~CmpInstruction()
000000000050c4e0 0000000000000034 W nv50_ir::CmpInstruction::~CmpInstruction()
000000000050c520 0000000000000048 t nv50_ir::ValueRef::ValueRef(nv50_ir::ValueRef const&)
000000000050c520 0000000000000048 T nv50_ir::ValueRef::ValueRef(nv50_ir::ValueRef const&)
000000000050c570 00000000000003f0 t nv50_ir::Instruction::takeExtraSources(int, nv50_ir::Value**)
000000000050c960 00000000000000a8 W std::_Rb_tree<void const*, std::pair<void const* const, void*>, std::_Select1st<std::pair<void const* const, void*> >, std::less<void const*>, std::allocator<std::pair<void const* const, void*> > >::_M_get_insert_unique_pos(void const* const&)
000000000050ca10 0000000000000114 W std::_Rb_tree<void const*, std::pair<void const* const, void*>, std::_Select1st<std::pair<void const* const, void*> >, std::less<void const*>, std::allocator<std::pair<void const* const, void*> > >::_M_get_insert_hint_unique_pos(std::_Rb_tree_const_iterator<std::pair<void const* const, void*> >, void const* const&)
000000000050cb30 00000000000000c0 t std::_Rb_tree_iterator<std::pair<void const* const, void*> > std::_Rb_tree<void const*, std::pair<void const* const, void*>, std::_Select1st<std::pair<void const* const, void*> >, std::less<void const*>, std::allocator<std::pair<void const* const, void*> > >::_M_emplace_hint_unique<std::piecewise_construct_t const&, std::tuple<void const* const&>, std::tuple<> >(std::_Rb_tree_const_iterator<std::pair<void const* const, void*> >, std::piecewise_construct_t const&, std::tuple<void const* const&>&&, std::tuple<>&&) [clone .isra.0]
000000000050cbf0 00000000000000ac W nv50_ir::DeepClonePolicy<nv50_ir::Function>::insert(void const*, void*)
000000000050cca0 00000000000000a0 W nv50_ir::DeepClonePolicy<nv50_ir::Function>::lookup(void*)
000000000050cd40 00000000000002d8 T nv50_ir::ImmediateValue::clone(nv50_ir::ClonePolicy<nv50_ir::Function>&) const
000000000050d020 00000000000002e0 T nv50_ir::Symbol::clone(nv50_ir::ClonePolicy<nv50_ir::Function>&) const
000000000050d300 00000000000002f8 T nv50_ir::LValue::clone(nv50_ir::ClonePolicy<nv50_ir::Function>&) const
000000000050d600 0000000000000848 t nv50_ir::Instruction::clone(nv50_ir::ClonePolicy<nv50_ir::Function>&, nv50_ir::Instruction*) const
000000000050de50 0000000000000274 T nv50_ir::TexInstruction::clone(nv50_ir::ClonePolicy<nv50_ir::Function>&, nv50_ir::Instruction*) const
000000000050e0d0 000000000000017c T nv50_ir::CmpInstruction::clone(nv50_ir::ClonePolicy<nv50_ir::Function>&, nv50_ir::Instruction*) const
000000000050e250 00000000000002a8 T nv50_ir::FlowInstruction::clone(nv50_ir::ClonePolicy<nv50_ir::Function>&, nv50_ir::Instruction*) const
000000000050e500 0000000000000440 t nv50_ir::Program::~Program()
000000000050e500 0000000000000440 T nv50_ir::Program::~Program()
000000000050e940 00000000000002a4 t nv50_ir_generate_code
000000000050ebf0 0000000000000008 W nv50_ir::Pass::visit(nv50_ir::Function*)
000000000050ec00 0000000000000008 W nv50_ir::Pass::visit(nv50_ir::BasicBlock*)
000000000050ec10 0000000000000008 W nv50_ir::Pass::visit(nv50_ir::Instruction*)
000000000050ec20 00000000000000f8 t std::deque<nv50_ir::ValueRef, std::allocator<nv50_ir::ValueRef> >::_M_destroy_data_aux(std::_Deque_iterator<nv50_ir::ValueRef, nv50_ir::ValueRef&, nv50_ir::ValueRef*>, std::_Deque_iterator<nv50_ir::ValueRef, nv50_ir::ValueRef&, nv50_ir::ValueRef*>) [clone .isra.0]
000000000050ed20 00000000000000f8 t std::deque<nv50_ir::ValueDef, std::allocator<nv50_ir::ValueDef> >::_M_destroy_data_aux(std::_Deque_iterator<nv50_ir::ValueDef, nv50_ir::ValueDef&, nv50_ir::ValueDef*>, std::_Deque_iterator<nv50_ir::ValueDef, nv50_ir::ValueDef&, nv50_ir::ValueDef*>) [clone .isra.0]
000000000050ee20 000000000000027c t nv50_ir::Function::Function(nv50_ir::Program*, char const*, unsigned int)
000000000050ee20 000000000000027c T nv50_ir::Function::Function(nv50_ir::Program*, char const*, unsigned int)
000000000050f0a0 000000000000012c t nv50_ir::BasicBlock::BasicBlock(nv50_ir::Function*)
000000000050f0a0 000000000000012c T nv50_ir::BasicBlock::BasicBlock(nv50_ir::Function*)
000000000050f1d0 000000000000002c t nv50_ir::BasicBlock::idom() const
000000000050f200 0000000000000068 t nv50_ir::BasicBlock::insertBefore(nv50_ir::Instruction*, nv50_ir::Instruction*)
000000000050f270 00000000000000a8 t nv50_ir::BasicBlock::insertHead(nv50_ir::Instruction*)
000000000050f320 00000000000000c0 t nv50_ir::BasicBlock::insertTail(nv50_ir::Instruction*)
000000000050f3e0 000000000000005c t nv50_ir::BasicBlock::insertAfter(nv50_ir::Instruction*, nv50_ir::Instruction*)
000000000050f440 00000000000000c8 t nv50_ir::BasicBlock::remove(nv50_ir::Instruction*)
000000000050f510 0000000000000088 t nv50_ir::BasicBlock::permuteAdjacent(nv50_ir::Instruction*, nv50_ir::Instruction*)
000000000050f5a0 00000000000000e8 t nv50_ir::BasicBlock::splitCommon(nv50_ir::Instruction*, nv50_ir::BasicBlock*, bool)
000000000050f690 0000000000000064 t nv50_ir::BasicBlock::splitBefore(nv50_ir::Instruction*, bool)
000000000050f700 000000000000006c t nv50_ir::BasicBlock::splitAfter(nv50_ir::Instruction*, bool)
000000000050f770 0000000000000050 t nv50_ir::BasicBlock::dominatedBy(nv50_ir::BasicBlock*)
000000000050f7c0 0000000000000090 t nv50_ir::BasicBlock::initiatesSimpleConditional() const
000000000050f850 000000000000002c t nv50_ir::Function::setEntry(nv50_ir::BasicBlock*)
000000000050f880 0000000000000020 t nv50_ir::Function::setExit(nv50_ir::BasicBlock*)
000000000050f8a0 0000000000000198 t nv50_ir::Function::orderInstructions(nv50_ir::ArrayList&)
000000000050fa40 00000000000000d0 t nv50_ir::Function::buildLiveSets()
000000000050fb10 00000000000000d0 t nv50_ir::Function::buildDefSets()
000000000050fbe0 0000000000000198 t nv50_ir::Pass::doRun(nv50_ir::Function*, bool, bool)
000000000050fd80 0000000000000010 t nv50_ir::Pass::run(nv50_ir::Function*, bool, bool)
000000000050fd90 00000000000000d8 t nv50_ir::Pass::doRun(nv50_ir::Program*, bool, bool)
000000000050fe70 000000000000000c t nv50_ir::Pass::run(nv50_ir::Program*, bool, bool)
000000000050fe80 00000000000000c0 t std::_Rb_tree_iterator<std::pair<void const* const, void*> > std::_Rb_tree<void const*, std::pair<void const* const, void*>, std::_Select1st<std::pair<void const* const, void*> >, std::less<void const*>, std::allocator<std::pair<void const* const, void*> > >::_M_emplace_hint_unique<std::piecewise_construct_t const&, std::tuple<void const* const&>, std::tuple<> >(std::_Rb_tree_const_iterator<std::pair<void const* const, void*> >, std::piecewise_construct_t const&, std::tuple<void const* const&>&&, std::tuple<>&&) [clone .isra.0]
000000000050ff40 0000000000000230 t nv50_ir::BasicBlock::clone(nv50_ir::ClonePolicy<nv50_ir::Function>&) const
0000000000510170 0000000000000584 t nv50_ir::Function::~Function()
0000000000510170 0000000000000584 T nv50_ir::Function::~Function()
0000000000510700 0000000000000008 t (anonymous namespace)::Converter::BindArgumentsPass::visit(nv50_ir::BasicBlock*)
0000000000510710 0000000000000070 t _debug_printf
0000000000510780 000000000000006c t (anonymous namespace)::Converter::adjustTempIndex(int, int&, int&) const [clone .isra.0]
00000000005107f0 0000000000000140 t std::_Rb_tree<int, std::pair<int const, std::pair<int, int> >, std::_Select1st<std::pair<int const, std::pair<int, int> > >, std::less<int>, std::allocator<std::pair<int const, std::pair<int, int> > > >::_M_erase(std::_Rb_tree_node<std::pair<int const, std::pair<int, int> > >*) [clone .isra.0]
0000000000510930 0000000000000140 t std::_Rb_tree<void const*, std::pair<void const* const, void*>, std::_Select1st<std::pair<void const* const, void*> >, std::less<void const*>, std::allocator<std::pair<void const* const, void*> > >::_M_erase(std::_Rb_tree_node<std::pair<void const* const, void*> >*) [clone .isra.0]
0000000000510a70 0000000000000140 t std::_Rb_tree<int, int, std::_Identity<int>, std::less<int>, std::allocator<int> >::_M_erase(std::_Rb_tree_node<int>*) [clone .isra.0]
0000000000510bb0 0000000000000140 t std::_Rb_tree<nv50_ir::BuildUtil::Location, nv50_ir::BuildUtil::Location, std::_Identity<nv50_ir::BuildUtil::Location>, std::less<nv50_ir::BuildUtil::Location>, std::allocator<nv50_ir::BuildUtil::Location> >::_M_erase(std::_Rb_tree_node<nv50_ir::BuildUtil::Location>*) [clone .isra.0]
0000000000510cf0 0000000000000140 t std::_Rb_tree<nv50_ir::Value*, std::pair<nv50_ir::Value* const, nv50_ir::BuildUtil::Location>, std::_Select1st<std::pair<nv50_ir::Value* const, nv50_ir::BuildUtil::Location> >, std::less<nv50_ir::Value*>, std::allocator<std::pair<nv50_ir::Value* const, nv50_ir::BuildUtil::Location> > >::_M_erase(std::_Rb_tree_node<std::pair<nv50_ir::Value* const, nv50_ir::BuildUtil::Location> >*) [clone .isra.0]
0000000000510e30 0000000000000140 t std::_Rb_tree<nv50_ir::BuildUtil::Location, std::pair<nv50_ir::BuildUtil::Location const, nv50_ir::Value*>, std::_Select1st<std::pair<nv50_ir::BuildUtil::Location const, nv50_ir::Value*> >, std::less<nv50_ir::BuildUtil::Location>, std::allocator<std::pair<nv50_ir::BuildUtil::Location const, nv50_ir::Value*> > >::_M_erase(std::_Rb_tree_node<std::pair<nv50_ir::BuildUtil::Location const, nv50_ir::Value*> >*) [clone .isra.0]
0000000000510f70 0000000000000094 t std::_Rb_tree<unsigned int, std::pair<unsigned int const, nv50_ir::ConverterCommon::Subroutine>, std::_Select1st<std::pair<unsigned int const, nv50_ir::ConverterCommon::Subroutine> >, std::less<unsigned int>, std::allocator<std::pair<unsigned int const, nv50_ir::ConverterCommon::Subroutine> > >::_M_erase(std::_Rb_tree_node<std::pair<unsigned int const, nv50_ir::ConverterCommon::Subroutine> >*) [clone .isra.0]
0000000000511010 0000000000000140 t std::_Rb_tree<int, std::pair<int const, int>, std::_Select1st<std::pair<int const, int> >, std::less<int>, std::allocator<std::pair<int const, int> > >::_M_erase(std::_Rb_tree_node<std::pair<int const, int> >*) [clone .isra.0]
0000000000511150 0000000000000188 t (anonymous namespace)::Converter::shiftAddress(nv50_ir::Value*)
00000000005112e0 00000000000002d4 t (anonymous namespace)::Converter::makeSym(unsigned int, int, int, int, unsigned int)
00000000005115c0 000000000000008c t (anonymous namespace)::Converter::srcToSym(tgsi::Instruction::SrcRegister, int)
0000000000511650 0000000000000258 t (anonymous namespace)::Converter::storeDst(tgsi::Instruction::DstRegister, int, nv50_ir::Value*, nv50_ir::Value*)
00000000005118b0 00000000000006a4 t (anonymous namespace)::Converter::handleFBFETCH(nv50_ir::Value**)
0000000000511f60 0000000000000114 t nv50_ir::MemoryPool::allocate()
0000000000512080 0000000000000140 t nv50_ir::BuildUtil::getScratch(int, nv50_ir::DataFile)
00000000005121c0 0000000000000154 t nv50_ir::BuildUtil::getSSA(int, nv50_ir::DataFile)
0000000000512320 0000000000000d60 t (anonymous namespace)::Converter::fetchSrc(tgsi::Instruction::SrcRegister, int, nv50_ir::Value*)
0000000000513080 00000000000009a8 t (anonymous namespace)::Converter::fetchSrc(int, int)
0000000000513a30 0000000000000204 t (anonymous namespace)::Converter::buildDot(int)
0000000000513c40 00000000000001dc t nv50_ir::BuildUtil::mkOp(nv50_ir::operation, nv50_ir::DataType, nv50_ir::Value*)
0000000000513e20 0000000000000058 t tgsi::Instruction::texOffsetMask() const
0000000000513e80 00000000000001e0 t tgsi::Instruction::srcMask(unsigned int) const
0000000000514060 0000000000000198 t tgsi::Instruction::inferDstType() const
0000000000514200 0000000000000098 t tgsi::Instruction::getSetCond() const
00000000005142a0 000000000000005c t tgsi::Instruction::checkDstSrcAliasing() const
0000000000514300 00000000000000a0 t tgsi::Source::Source(nv50_ir_prog_info*)
0000000000514300 00000000000000a0 T tgsi::Source::Source(nv50_ir_prog_info*)
00000000005143a0 0000000000000148 t tgsi::Source::~Source()
00000000005143a0 0000000000000148 T tgsi::Source::~Source()
00000000005144f0 0000000000000184 t tgsi::Source::scanProperty(tgsi_full_property const*)
0000000000514680 0000000000000050 t tgsi::Source::scanImmediate(tgsi_full_immediate const*)
00000000005146d0 0000000000000084 t tgsi::Instruction::getTexture(tgsi::Source const*, int) const
0000000000514760 0000000000000204 t (anonymous namespace)::Converter::setTexRS(nv50_ir::TexInstruction*, unsigned int&, int, int)
0000000000514970 00000000000001f8 t (anonymous namespace)::Converter::handleTXQ(nv50_ir::Value**, nv50_ir::TexQuery, int)
0000000000514b70 00000000000003f4 t (anonymous namespace)::Converter::handleTXF(nv50_ir::Value**, int, int) [clone .constprop.0]
0000000000514f70 00000000000000e4 t std::_Rb_tree<nv50_ir::BuildUtil::Location, std::pair<nv50_ir::BuildUtil::Location const, nv50_ir::Value*>, std::_Select1st<std::pair<nv50_ir::BuildUtil::Location const, nv50_ir::Value*> >, std::less<nv50_ir::BuildUtil::Location>, std::allocator<std::pair<nv50_ir::BuildUtil::Location const, nv50_ir::Value*> > >::find(nv50_ir::BuildUtil::Location const&) const
0000000000515060 0000000000000190 t std::vector<tgsi::Source::TextureView, std::allocator<tgsi::Source::TextureView> >::_M_default_append(unsigned long)
00000000005151f0 0000000000000188 W std::vector<int, std::allocator<int> >::_M_default_append(unsigned long)
0000000000515380 0000000000000190 t std::vector<tgsi::Source::MemoryFile, std::allocator<tgsi::Source::MemoryFile> >::_M_default_append(unsigned long)
0000000000515510 0000000000000134 W std::pair<std::_Rb_tree_iterator<std::pair<int const, int> >, bool> std::_Rb_tree<int, std::pair<int const, int>, std::_Select1st<std::pair<int const, int> >, std::less<int>, std::allocator<std::pair<int const, int> > >::_M_emplace_unique<std::pair<int, int> >(std::pair<int, int>&&)
0000000000515650 0000000000000188 t std::vector<nv50_ir::Value*, std::allocator<nv50_ir::Value*> >::_M_default_append(unsigned long)
00000000005157e0 00000000000005f0 W std::vector<bool, std::allocator<bool> >::_M_fill_insert(std::_Bit_iterator, unsigned long, bool)
0000000000515dd0 00000000000000a8 W std::_Rb_tree<int, std::pair<int const, std::pair<int, int> >, std::_Select1st<std::pair<int const, std::pair<int, int> > >, std::less<int>, std::allocator<std::pair<int const, std::pair<int, int> > > >::_M_get_insert_unique_pos(int const&)
0000000000515e80 0000000000000114 W std::_Rb_tree<int, std::pair<int const, std::pair<int, int> >, std::_Select1st<std::pair<int const, std::pair<int, int> > >, std::less<int>, std::allocator<std::pair<int const, std::pair<int, int> > > >::_M_get_insert_hint_unique_pos(std::_Rb_tree_const_iterator<std::pair<int const, std::pair<int, int> > >, int const&)
0000000000515fa0 00000000000000cc W std::pair<std::_Rb_tree_iterator<std::pair<int const, std::pair<int, int> > >, bool> std::_Rb_tree<int, std::pair<int const, std::pair<int, int> >, std::_Select1st<std::pair<int const, std::pair<int, int> > >, std::less<int>, std::allocator<std::pair<int const, std::pair<int, int> > > >::_M_emplace_unique<std::pair<int, std::pair<unsigned int, unsigned int> > >(std::pair<int, std::pair<unsigned int, unsigned int> >&&)
0000000000516070 0000000000000aa4 t tgsi::Source::scanDeclaration(tgsi_full_declaration const*)
0000000000516b20 00000000000000a8 W std::_Rb_tree<int, int, std::_Identity<int>, std::less<int>, std::allocator<int> >::_M_get_insert_unique_pos(int const&)
0000000000516bd0 00000000000000bc W std::pair<std::_Rb_tree_iterator<int>, bool> std::_Rb_tree<int, int, std::_Identity<int>, std::less<int>, std::allocator<int> >::_M_insert_unique<int>(int&&)
0000000000516c90 0000000000000278 t tgsi::Source::scanInstructionSrc(tgsi::Instruction const&, tgsi::Instruction::SrcRegister const&, unsigned int)
0000000000516f10 00000000000004b4 t tgsi::Source::scanInstruction(tgsi_full_instruction const*)
00000000005173d0 00000000000005a8 t tgsi::Source::scanSource()
0000000000517980 0000000000000128 t void std::vector<nv50_ir::Value*, std::allocator<nv50_ir::Value*> >::_M_realloc_insert<nv50_ir::Value*>(__gnu_cxx::__normal_iterator<nv50_ir::Value**, std::vector<nv50_ir::Value*, std::allocator<nv50_ir::Value*> > >, nv50_ir::Value*&&)
0000000000517ab0 000000000000015c t (anonymous namespace)::Converter::getImageCoords(std::vector<nv50_ir::Value*, std::allocator<nv50_ir::Value*> >&, int)
0000000000517c10 0000000000000680 t (anonymous namespace)::Converter::handleLOAD(nv50_ir::Value**)
0000000000518290 0000000000000654 t (anonymous namespace)::Converter::handleSTORE()
00000000005188f0 00000000000000e4 t std::_Rb_tree<nv50_ir::BuildUtil::Location, nv50_ir::BuildUtil::Location, std::_Identity<nv50_ir::BuildUtil::Location>, std::less<nv50_ir::BuildUtil::Location>, std::allocator<nv50_ir::BuildUtil::Location> >::find(nv50_ir::BuildUtil::Location const&) const
00000000005189e0 0000000000000c04 t (anonymous namespace)::Converter::BindArgumentsPass::visit(nv50_ir::Function*)
00000000005195f0 00000000000000c0 t std::_Rb_tree_iterator<std::pair<void const* const, void*> > std::_Rb_tree<void const*, std::pair<void const* const, void*>, std::_Select1st<std::pair<void const* const, void*> >, std::less<void const*>, std::allocator<std::pair<void const* const, void*> > >::_M_emplace_hint_unique<std::piecewise_construct_t const&, std::tuple<void const* const&>, std::tuple<> >(std::_Rb_tree_const_iterator<std::pair<void const* const, void*> >, std::piecewise_construct_t const&, std::tuple<void const* const&>&&, std::tuple<>&&) [clone .isra.0]
00000000005196b0 00000000000002a8 t nv50_ir::cloneForward(nv50_ir::Function*, nv50_ir::Instruction*)
0000000000519960 0000000000000e44 t (anonymous namespace)::Converter::handleTEX(nv50_ir::Value**, int, int, int, int, int, int)
000000000051a7b0 0000000000008704 t nv50_ir::Program::makeFromTGSI(nv50_ir_prog_info*)
0000000000522ec0 0000000000000010 W nv50_ir::DFSIterator::end() const
0000000000522ed0 0000000000000018 W nv50_ir::DFSIterator::next()
0000000000522ef0 0000000000000010 W nv50_ir::DFSIterator::get() const
0000000000522f00 0000000000000008 W nv50_ir::DFSIterator::reset()
0000000000522f10 0000000000000010 W nv50_ir::CFGIterator::get() const
0000000000522f20 0000000000000010 W nv50_ir::CFGIterator::end() const
0000000000522f30 0000000000000018 W nv50_ir::CFGIterator::next()
0000000000522f50 0000000000000008 W nv50_ir::CFGIterator::reset()
0000000000522f60 0000000000000010 W nv50_ir::CFGIterator::~CFGIterator()
0000000000522f60 0000000000000010 W nv50_ir::CFGIterator::~CFGIterator()
0000000000522f70 0000000000000030 W nv50_ir::CFGIterator::~CFGIterator()
0000000000522fa0 0000000000000010 W nv50_ir::DFSIterator::~DFSIterator()
0000000000522fa0 0000000000000010 W nv50_ir::DFSIterator::~DFSIterator()
0000000000522fb0 0000000000000030 W nv50_ir::DFSIterator::~DFSIterator()
0000000000522fe0 0000000000000078 t _debug_printf.constprop.0
0000000000523060 0000000000000014 t nv50_ir::Graph::Graph()
0000000000523060 0000000000000014 t nv50_ir::Graph::Graph()
0000000000523080 0000000000000034 t nv50_ir::Graph::insert(nv50_ir::Graph::Node*)
00000000005230c0 0000000000000094 t nv50_ir::Graph::Edge::unlink()
0000000000523160 0000000000000010 t nv50_ir::Graph::Node::Node(void*)
0000000000523160 0000000000000010 t nv50_ir::Graph::Node::Node(void*)
0000000000523170 000000000000006c t nv50_ir::Graph::Node::detach(nv50_ir::Graph::Node*)
00000000005231e0 0000000000000088 t nv50_ir::Graph::Node::cut()
0000000000523270 00000000000004b8 t nv50_ir::DFSIterator::search(nv50_ir::Graph::Node*, bool, int)
0000000000523730 0000000000000114 t nv50_ir::Graph::iteratorDFS(bool)
0000000000523850 0000000000000078 t nv50_ir::Graph::~Graph()
0000000000523850 0000000000000078 t nv50_ir::Graph::~Graph()
00000000005238d0 0000000000000028 T nv50_ir::Graph::~Graph()
0000000000523900 000000000000024c t nv50_ir::CFGIterator::search(nv50_ir::Graph::Node*, int)
0000000000523b50 00000000000000e4 t nv50_ir::Graph::iteratorCFG()
0000000000523c40 0000000000000118 t nv50_ir::Graph::classifyDFS(nv50_ir::Graph::Node*, int&)
0000000000523d60 00000000000000a8 t nv50_ir::Graph::classifyEdges()
0000000000523e10 0000000000000114 t nv50_ir::Graph::Node::attach(nv50_ir::Graph::Node*, nv50_ir::Graph::Edge::Type)
0000000000523f30 00000000000002b0 t nv50_ir::Graph::findLightestPathWeight(nv50_ir::Graph::Node*, nv50_ir::Graph::Node*, std::vector<int, std::allocator<int> > const&)
00000000005241e0 0000000000000008 W nv50_ir::Target::isPostMultiplySupported(nv50_ir::operation, float, int&) const
00000000005241f0 0000000000000040 T nv50_ir::FlatteningPass::visit(nv50_ir::Function*)
0000000000524230 0000000000000008 W nv50_ir::ShallowClonePolicy<nv50_ir::Function>::lookup(void*)
0000000000524240 0000000000000004 W nv50_ir::ShallowClonePolicy<nv50_ir::Function>::insert(void const*, void*)
0000000000524250 00000000000001b8 t nv50_ir::Instruction::isActionEqual(nv50_ir::Instruction const*) const [clone .part.0]
0000000000524410 0000000000000078 t _debug_printf.constprop.0
0000000000524490 0000000000000140 t std::_Rb_tree<void const*, std::pair<void const* const, void*>, std::_Select1st<std::pair<void const* const, void*> >, std::less<void const*>, std::allocator<std::pair<void const* const, void*> > >::_M_erase(std::_Rb_tree_node<std::pair<void const* const, void*> >*) [clone .isra.0]
00000000005245d0 000000000000012c t nv50_ir::post_ra_dead(nv50_ir::Instruction*)
0000000000524700 00000000000000c4 W nv50_ir::Value::~Value()
0000000000524700 00000000000000c4 t nv50_ir::Value::~Value()
00000000005247d0 00000000000000c0 W nv50_ir::Value::~Value()
0000000000524890 0000000000000058 t nv50_ir::Value::getUniqueInsn() const
00000000005248f0 00000000000000b8 t nv50_ir::Instruction::getPredicate() const
00000000005249b0 0000000000000190 t nv50_ir::Instruction::isDead() const
0000000000524b40 000000000000010c t nv50_ir::Modifier::applyTo(nv50_ir::ImmediateValue&) const
0000000000524c50 00000000000001b4 W nv50_ir::Value::Value(nv50_ir::Value const&)
0000000000524c50 00000000000001b4 t nv50_ir::Value::Value(nv50_ir::Value const&)
0000000000524e10 0000000000000098 t nv50_ir::ConstantFolding::opnd3(nv50_ir::Instruction*, nv50_ir::ImmediateValue&)
0000000000524eb0 0000000000000078 t nv50_ir::MemoryOpt::reset()
0000000000524f30 000000000000014c t nv50_ir::MemoryOpt::getList(nv50_ir::Instruction const*)
0000000000525080 0000000000000148 t nv50_ir::FlatteningPass::tryPropagateBranch(nv50_ir::BasicBlock*)
00000000005251d0 00000000000005c0 t nv50_ir::Program::optimizeSSA(int)
0000000000525790 000000000000007c t nv50_ir::Program::optimizePostRA(int)
0000000000525810 0000000000000098 t std::_Deque_iterator<nv50_ir::ValueRef, nv50_ir::ValueRef&, nv50_ir::ValueRef*>::operator[](long) const
00000000005258b0 00000000000001a8 t nv50_ir::AlgebraicOpt::handleSLCT(nv50_ir::Instruction*)
0000000000525a60 0000000000000150 t nv50_ir::updateLdStOffset(nv50_ir::Instruction*, int, nv50_ir::Function*)
0000000000525bb0 0000000000000088 t nv50_ir::Instruction::srcExists(unsigned int) const
0000000000525c40 0000000000000068 t nv50_ir::LoadPropagation::isAttribOrSharedLoad(nv50_ir::Instruction*)
0000000000525cb0 0000000000000294 t nv50_ir::ConstantFolding::expr(nv50_ir::Instruction*, nv50_ir::ImmediateValue&, nv50_ir::ImmediateValue&, nv50_ir::ImmediateValue&)
0000000000525f50 00000000000001a0 t nv50_ir::ConstantFolding::unary(nv50_ir::Instruction*, nv50_ir::ImmediateValue const&)
00000000005260f0 0000000000000398 t nv50_ir::ConstantFolding::createMul(nv50_ir::DataType, nv50_ir::Value*, nv50_ir::Value*, long, nv50_ir::Value*)
0000000000526490 000000000000029c t nv50_ir::AlgebraicOpt::handleABS(nv50_ir::Instruction*)
0000000000526730 000000000000020c t nv50_ir::AlgebraicOpt::handleRCP(nv50_ir::Instruction*)
0000000000526940 00000000000001c4 t nv50_ir::AlgebraicOpt::handleCVT_CVT(nv50_ir::Instruction*)
0000000000526b10 00000000000000e0 t nv50_ir::LoadPropagation::isImmdLoad(nv50_ir::Instruction*)
0000000000526bf0 000000000000083c T nv50_ir::IndirectPropagation::visit(nv50_ir::BasicBlock*)
0000000000527430 00000000000001d0 t nv50_ir::ConstantFolding::findOriginForTestWithZero(nv50_ir::Value*)
0000000000527600 00000000000004f8 t nv50_ir::AlgebraicOpt::tryADDToMADOrSAD(nv50_ir::Instruction*, nv50_ir::operation)
0000000000527b00 00000000000001d8 t nv50_ir::AlgebraicOpt::handleADD(nv50_ir::Instruction*)
0000000000527ce0 000000000000044c t nv50_ir::AlgebraicOpt::handleCVT_EXTBF(nv50_ir::Instruction*)
0000000000528130 0000000000000304 t nv50_ir::AlgebraicOpt::handleSUCLAMP(nv50_ir::Instruction*)
0000000000528440 00000000000002d0 t nv50_ir::LateAlgebraicOpt::tryADDToSHLADD(nv50_ir::Instruction*)
0000000000528710 0000000000000188 t nv50_ir::LateAlgebraicOpt::handleADD(nv50_ir::Instruction*)
00000000005288a0 00000000000001cc t nv50_ir::MemoryOpt::addRecord(nv50_ir::Instruction*)
0000000000528a70 0000000000000258 t nv50_ir::MemoryOpt::Record::overlaps(nv50_ir::Instruction const*) const
0000000000528cd0 0000000000000104 t nv50_ir::MemoryOpt::lockStores(nv50_ir::Instruction*)
0000000000528de0 0000000000000178 t nv50_ir::MemoryOpt::purgeRecords(nv50_ir::Instruction*, nv50_ir::DataFile)
0000000000528f60 00000000000004cc t nv50_ir::MemoryOpt::combineSt(nv50_ir::MemoryOpt::Record*, nv50_ir::Instruction*)
0000000000529430 00000000000002cc t nv50_ir::MemoryOpt::findRecord(nv50_ir::Instruction const*, bool, bool&) const
0000000000529700 0000000000000134 t nv50_ir::FlatteningPass::removeFlow(nv50_ir::Instruction*)
0000000000529840 0000000000000714 t nv50_ir::MemoryOpt::replaceStFromSt(nv50_ir::Instruction*, nv50_ir::MemoryOpt::Record*)
0000000000529f60 0000000000000348 t nv50_ir::LoadPropagation::checkSwapSrc01(nv50_ir::Instruction*)
000000000052a2b0 00000000000004e0 T nv50_ir::LoadPropagation::visit(nv50_ir::BasicBlock*)
000000000052a790 0000000000000260 t nv50_ir::LateAlgebraicOpt::handleMULMAD(nv50_ir::Instruction*) [clone .part.0]
000000000052a9f0 000000000000008c T nv50_ir::LateAlgebraicOpt::visit(nv50_ir::Instruction*)
000000000052aa80 0000000000000248 t nv50_ir::FlatteningPass::isConstantCondition(nv50_ir::Value*)
000000000052acd0 0000000000000098 t std::_Deque_iterator<nv50_ir::ValueDef, nv50_ir::ValueDef&, nv50_ir::ValueDef*>::operator[](long) const
000000000052ad70 0000000000000088 t nv50_ir::Instruction::defExists(unsigned int) const
000000000052ae00 0000000000000444 T nv50_ir::ModifierFolding::visit(nv50_ir::BasicBlock*)
000000000052b250 00000000000002a4 t nv50_ir::AlgebraicOpt::handleCVT_NEG(nv50_ir::Instruction*)
000000000052b500 0000000000000398 t nv50_ir::Split64BitOpPreRA::split64MulMad(nv50_ir::Function*, nv50_ir::Instruction*, nv50_ir::DataType)
000000000052b8a0 0000000000000078 T nv50_ir::Split64BitOpPreRA::visit(nv50_ir::BasicBlock*)
000000000052b920 0000000000000520 t nv50_ir::MemoryOpt::combineLd(nv50_ir::MemoryOpt::Record*, nv50_ir::Instruction*)
000000000052be40 00000000000001b4 t nv50_ir::Instruction::isNop() const
000000000052c000 0000000000000184 t nv50_ir::FlatteningPass::predicateInstructions(nv50_ir::BasicBlock*, nv50_ir::Value*, nv50_ir::CondCode)
000000000052c190 00000000000001ec T nv50_ir::CopyPropagation::visit(nv50_ir::BasicBlock*)
000000000052c380 00000000000001d4 T nv50_ir::MergeSplits::visit(nv50_ir::BasicBlock*)
000000000052c560 000000000000023c t nv50_ir::AlgebraicOpt::handleMINMAX(nv50_ir::Instruction*)
000000000052c7a0 00000000000003f8 t nv50_ir::ConstantFolding::tryCollapseChainedMULs(nv50_ir::Instruction*, int, nv50_ir::ImmediateValue&)
000000000052cba0 00000000000028b8 t nv50_ir::ConstantFolding::opnd(nv50_ir::Instruction*, nv50_ir::ImmediateValue&, int)
000000000052f460 00000000000002e0 t nv50_ir::AlgebraicOpt::handleNEG(nv50_ir::Instruction*)
000000000052f740 0000000000000278 t nv50_ir::AlgebraicOpt::handleEXTBF_RDSV(nv50_ir::Instruction*)
000000000052f9c0 0000000000000328 t nv50_ir::PostRaLoadPropagation::handleMADforNV50(nv50_ir::Instruction*)
000000000052fcf0 0000000000000294 t nv50_ir::PostRaLoadPropagation::handleMADforNVC0(nv50_ir::Instruction*)
000000000052ff90 0000000000000054 T nv50_ir::PostRaLoadPropagation::visit(nv50_ir::Instruction*)
000000000052fff0 0000000000000930 t nv50_ir::ConstantFolding::expr(nv50_ir::Instruction*, nv50_ir::ImmediateValue&, nv50_ir::ImmediateValue&)
0000000000530920 00000000000005e8 T nv50_ir::ConstantFolding::visit(nv50_ir::BasicBlock*)
0000000000530f10 0000000000000578 t nv50_ir::MemoryOpt::replaceLdFromSt(nv50_ir::Instruction*, nv50_ir::MemoryOpt::Record*)
0000000000531490 00000000000005a0 t nv50_ir::MemoryOpt::replaceLdFromLd(nv50_ir::Instruction*, nv50_ir::MemoryOpt::Record*)
0000000000531a30 000000000000044c t nv50_ir::MemoryOpt::runOpt(nv50_ir::BasicBlock*)
0000000000531e80 0000000000000044 T nv50_ir::MemoryOpt::visit(nv50_ir::BasicBlock*)
0000000000531ed0 000000000000060c t nv50_ir::FlatteningPass::tryPredicateConditional(nv50_ir::BasicBlock*)
00000000005324e0 000000000000015c T nv50_ir::FlatteningPass::visit(nv50_ir::BasicBlock*)
0000000000532640 0000000000000910 t nv50_ir::DeadCodeElim::checkSplitLoad(nv50_ir::Instruction*)
0000000000532f50 00000000000002bc T nv50_ir::DeadCodeElim::visit(nv50_ir::BasicBlock*)
0000000000533210 0000000000000654 t nv50_ir::Instruction::isResultEqual(nv50_ir::Instruction const*) const
0000000000533870 000000000000040c T nv50_ir::GlobalCSE::visit(nv50_ir::BasicBlock*)
0000000000533c80 00000000000008f8 T nv50_ir::LocalCSE::visit(nv50_ir::BasicBlock*)
0000000000534580 00000000000000c0 t std::_Rb_tree_iterator<std::pair<void const* const, void*> > std::_Rb_tree<void const*, std::pair<void const* const, void*>, std::_Select1st<std::pair<void const* const, void*> >, std::less<void const*>, std::allocator<std::pair<void const* const, void*> > >::_M_emplace_hint_unique<std::piecewise_construct_t const&, std::tuple<void const* const&>, std::tuple<> >(std::_Rb_tree_const_iterator<std::pair<void const* const, void*> >, std::piecewise_construct_t const&, std::tuple<void const* const&>&&, std::tuple<>&&) [clone .isra.0]
0000000000534640 000000000000049c t nv50_ir::AlgebraicOpt::handleLOGOP(nv50_ir::Instruction*)
0000000000534ae0 00000000000001b0 T nv50_ir::AlgebraicOpt::visit(nv50_ir::BasicBlock*)
0000000000534c90 0000000000000070 t _debug_printf
0000000000534d00 0000000000000174 t nv50_ir::Modifier::print(char*, unsigned long) const
0000000000534e80 00000000000001e4 T nv50_ir::LValue::print(char*, unsigned long, nv50_ir::DataType) const
0000000000535070 0000000000000230 T nv50_ir::ImmediateValue::print(char*, unsigned long, nv50_ir::DataType) const
00000000005352a0 0000000000000270 t nv50_ir::Symbol::print(char*, unsigned long, nv50_ir::Value*, nv50_ir::Value*, nv50_ir::DataType) const
0000000000535510 0000000000000010 T nv50_ir::Symbol::print(char*, unsigned long, nv50_ir::DataType) const
0000000000535520 0000000000001420 t nv50_ir::Instruction::print() const
0000000000536940 0000000000000040 t nv50_ir::value_cmp(nv50_ir::ValueRef*, nv50_ir::ValueRef*)
0000000000536980 0000000000000070 t _debug_printf
00000000005369f0 0000000000000168 t nv50_ir::RegAlloc::InsertConstraintsPass::isScalarTexGM107(nv50_ir::TexInstruction*) [clone .part.0]
0000000000536b60 00000000000001d8 t nv50_ir::GCRA::checkInterference(nv50_ir::GCRA::RIG_Node const*, nv50_ir::Graph::EdgeIterator&) [clone .isra.0]
0000000000536d40 0000000000000134 t nv50_ir::isShortRegOp(nv50_ir::Instruction*) [clone .part.0]
0000000000536e80 00000000000000a0 t nv50_ir::RegisterSet::init(nv50_ir::Target const*)
0000000000536f20 0000000000000068 t nv50_ir::RegisterSet::RegisterSet(nv50_ir::Target const*)
0000000000536f20 0000000000000068 T nv50_ir::RegisterSet::RegisterSet(nv50_ir::Target const*)
0000000000536f90 0000000000000074 t nv50_ir::RegisterSet::testOccupy(nv50_ir::DataFile, int, unsigned int)
0000000000537010 0000000000001304 T nv50_ir::RegAlloc::ArgumentMovesPass::visit(nv50_ir::BasicBlock*)
0000000000538320 00000000000000a0 t nv50_ir::RegAlloc::BuildIntervalsPass::addLiveRange(nv50_ir::Value*, nv50_ir::BasicBlock const*, int)
00000000005383c0 00000000000005c4 t nv50_ir::RegAlloc::buildLiveSets(nv50_ir::BasicBlock*)
0000000000538990 00000000000000d4 t nv50_ir::RegAlloc::BuildIntervalsPass::collectLiveValues(nv50_ir::BasicBlock*)
0000000000538a70 000000000000097c T nv50_ir::RegAlloc::BuildIntervalsPass::visit(nv50_ir::BasicBlock*)
00000000005393f0 0000000000000310 t nv50_ir::GCRA::RIG_Node::init(nv50_ir::RegisterSet const&, nv50_ir::LValue*)
0000000000539700 000000000000034c t nv50_ir::GCRA::coalesceValues(nv50_ir::Value*, nv50_ir::Value*, bool)
0000000000539a50 0000000000000428 t nv50_ir::GCRA::makeCompound(nv50_ir::Instruction*, bool)
0000000000539e80 0000000000000178 t nv50_ir::GCRA::GCRA(nv50_ir::Function*, nv50_ir::SpillCodeInserter&)
0000000000539e80 0000000000000178 T nv50_ir::GCRA::GCRA(nv50_ir::Function*, nv50_ir::SpillCodeInserter&)
000000000053a000 0000000000000570 t nv50_ir::GCRA::buildRIG(nv50_ir::ArrayList&)
000000000053a570 000000000000018c t nv50_ir::GCRA::calculateSpillWeights()
000000000053a700 0000000000000098 t nv50_ir::GCRA::simplifyEdge(nv50_ir::GCRA::RIG_Node*, nv50_ir::GCRA::RIG_Node*)
000000000053a7a0 0000000000000270 t nv50_ir::GCRA::simplifyNode(nv50_ir::GCRA::RIG_Node*)
000000000053aa10 0000000000000144 t nv50_ir::GCRA::simplify()
000000000053ab60 0000000000000370 t nv50_ir::SpillCodeInserter::assignSlot(nv50_ir::Interval const&, unsigned int)
000000000053aed0 0000000000000348 t nv50_ir::GCRA::selectRegisters()
000000000053b220 0000000000000080 t nv50_ir::SpillCodeInserter::offsetSlot(nv50_ir::Value*, nv50_ir::LValue const*)
000000000053b2a0 0000000000000770 t nv50_ir::SpillCodeInserter::spill(nv50_ir::Instruction*, nv50_ir::Value*, nv50_ir::LValue*)
000000000053ba10 000000000000075c t nv50_ir::SpillCodeInserter::unspill(nv50_ir::Instruction*, nv50_ir::LValue*, nv50_ir::Value*)
000000000053c170 000000000000056c t nv50_ir::GCRA::resolveSplitsAndMerges()
000000000053c6e0 0000000000000328 t nv50_ir::GCRA::cleanup(bool)
000000000053ca10 00000000000001a0 t nv50_ir::RegAlloc::InsertConstraintsPass::textureMask(nv50_ir::TexInstruction*)
000000000053cbb0 0000000000000154 t nv50_ir::RegAlloc::InsertConstraintsPass::addHazard(nv50_ir::Instruction*, nv50_ir::ValueRef const*)
000000000053cd10 00000000000007dc t nv50_ir::RegAlloc::InsertConstraintsPass::condenseDefs(nv50_ir::Instruction*, int, int)
000000000053d4f0 0000000000000138 t nv50_ir::RegAlloc::InsertConstraintsPass::condenseDefs(nv50_ir::Instruction*)
000000000053d630 0000000000000584 t nv50_ir::RegAlloc::InsertConstraintsPass::condenseSrcs(nv50_ir::Instruction*, int, int)
000000000053dbc0 0000000000000114 t nv50_ir::RegAlloc::InsertConstraintsPass::handleScalarTexGM107(nv50_ir::TexInstruction*)
000000000053dce0 00000000000004e8 t nv50_ir::RegAlloc::InsertConstraintsPass::texConstraintGM107(nv50_ir::TexInstruction*)
000000000053e1d0 0000000000000398 t nv50_ir::RegAlloc::InsertConstraintsPass::texConstraintNVE0(nv50_ir::TexInstruction*)
000000000053e570 00000000000001c0 t nv50_ir::RegAlloc::InsertConstraintsPass::texConstraintNVC0(nv50_ir::TexInstruction*)
000000000053e730 0000000000000d04 t nv50_ir::GCRA::doCoalesce(nv50_ir::ArrayList&, unsigned int)
000000000053f440 0000000000000110 t nv50_ir::GCRA::coalesce(nv50_ir::ArrayList&)
000000000053f550 0000000000000c04 t nv50_ir::RegAlloc::InsertConstraintsPass::insertConstraintMove(nv50_ir::Instruction*, int)
0000000000540160 00000000000004cc t nv50_ir::RegAlloc::InsertConstraintsPass::insertConstraintMoves()
0000000000540630 0000000000000090 t nv50_ir::RegAlloc::InsertConstraintsPass::exec(nv50_ir::Function*)
00000000005406c0 00000000000008dc t nv50_ir::RegAlloc::InsertConstraintsPass::texConstraintNV50(nv50_ir::TexInstruction*)
0000000000540fa0 0000000000000450 T nv50_ir::RegAlloc::InsertConstraintsPass::visit(nv50_ir::BasicBlock*)
00000000005413f0 000000000000006c W std::_Deque_base<nv50_ir::BasicBlock*, std::allocator<nv50_ir::BasicBlock*> >::~_Deque_base()
00000000005413f0 000000000000006c t std::_Deque_base<nv50_ir::BasicBlock*, std::allocator<nv50_ir::BasicBlock*> >::~_Deque_base()
0000000000541460 000000000000007c t std::_Hashtable<std::pair<nv50_ir::Instruction*, nv50_ir::BasicBlock*>, std::pair<std::pair<nv50_ir::Instruction*, nv50_ir::BasicBlock*> const, nv50_ir::Value*>, std::allocator<std::pair<std::pair<nv50_ir::Instruction*, nv50_ir::BasicBlock*> const, nv50_ir::Value*> >, std::__detail::_Select1st, std::equal_to<std::pair<nv50_ir::Instruction*, nv50_ir::BasicBlock*> >, nv50_ir::PhiMapHash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::_M_find_before_node(unsigned long, std::pair<nv50_ir::Instruction*, nv50_ir::BasicBlock*> const&, unsigned long) const
00000000005414e0 0000000000000244 t std::pair<std::__detail::_Node_iterator<std::pair<std::pair<nv50_ir::Instruction*, nv50_ir::BasicBlock*> const, nv50_ir::Value*>, false, true>, bool> std::_Hashtable<std::pair<nv50_ir::Instruction*, nv50_ir::BasicBlock*>, std::pair<std::pair<nv50_ir::Instruction*, nv50_ir::BasicBlock*> const, nv50_ir::Value*>, std::allocator<std::pair<std::pair<nv50_ir::Instruction*, nv50_ir::BasicBlock*> const, nv50_ir::Value*> >, std::__detail::_Select1st, std::equal_to<std::pair<nv50_ir::Instruction*, nv50_ir::BasicBlock*> >, nv50_ir::PhiMapHash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::_M_emplace<std::pair<std::pair<nv50_ir::Instruction*, nv50_ir::BasicBlock*>, nv50_ir::Value*> >(std::integral_constant<bool, true>, std::pair<std::pair<nv50_ir::Instruction*, nv50_ir::BasicBlock*>, nv50_ir::Value*>&&) [clone .isra.0]
0000000000541730 0000000000000710 t nv50_ir::RegAlloc::PhiMovesPass::splitEdges(nv50_ir::BasicBlock*)
0000000000541e40 000000000000065c T nv50_ir::RegAlloc::PhiMovesPass::visit(nv50_ir::BasicBlock*)
00000000005424a0 00000000000000d0 t void std::__insertion_sort<__gnu_cxx::__normal_iterator<nv50_ir::ValueRef**, std::vector<nv50_ir::ValueRef*, std::allocator<nv50_ir::ValueRef*> > >, __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(nv50_ir::ValueRef*, nv50_ir::ValueRef*)> >(__gnu_cxx::__normal_iterator<nv50_ir::ValueRef**, std::vector<nv50_ir::ValueRef*, std::allocator<nv50_ir::ValueRef*> > >, __gnu_cxx::__normal_iterator<nv50_ir::ValueRef**, std::vector<nv50_ir::ValueRef*, std::allocator<nv50_ir::ValueRef*> > >, __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(nv50_ir::ValueRef*, nv50_ir::ValueRef*)>)
0000000000542570 0000000000000180 t void std::__adjust_heap<__gnu_cxx::__normal_iterator<nv50_ir::ValueRef**, std::vector<nv50_ir::ValueRef*, std::allocator<nv50_ir::ValueRef*> > >, long, nv50_ir::ValueRef*, __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(nv50_ir::ValueRef*, nv50_ir::ValueRef*)> >(__gnu_cxx::__normal_iterator<nv50_ir::ValueRef**, std::vector<nv50_ir::ValueRef*, std::allocator<nv50_ir::ValueRef*> > >, long, long, nv50_ir::ValueRef*, __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(nv50_ir::ValueRef*, nv50_ir::ValueRef*)>)
00000000005426f0 0000000000000208 t void std::__introsort_loop<__gnu_cxx::__normal_iterator<nv50_ir::ValueRef**, std::vector<nv50_ir::ValueRef*, std::allocator<nv50_ir::ValueRef*> > >, long, __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(nv50_ir::ValueRef*, nv50_ir::ValueRef*)> >(__gnu_cxx::__normal_iterator<nv50_ir::ValueRef**, std::vector<nv50_ir::ValueRef*, std::allocator<nv50_ir::ValueRef*> > >, __gnu_cxx::__normal_iterator<nv50_ir::ValueRef**, std::vector<nv50_ir::ValueRef*, std::allocator<nv50_ir::ValueRef*> > >, long, __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(nv50_ir::ValueRef*, nv50_ir::ValueRef*)>)
0000000000542900 00000000000006f4 t nv50_ir::SpillCodeInserter::run(std::__cxx11::list<std::pair<nv50_ir::Value*, nv50_ir::Value*>, std::allocator<std::pair<nv50_ir::Value*, nv50_ir::Value*> > > const&)
0000000000543000 00000000000004e4 t nv50_ir::GCRA::allocateRegisters(nv50_ir::ArrayList&)
00000000005434f0 0000000000000230 t nv50_ir::GCRA::~GCRA()
00000000005434f0 0000000000000230 T nv50_ir::GCRA::~GCRA()
0000000000543720 00000000000003d4 t nv50_ir::RegAlloc::execFunc()
0000000000543b00 00000000000000d4 t nv50_ir::RegAlloc::exec()
0000000000543be0 000000000000005c t nv50_ir::Program::registerAllocation()
0000000000543c40 0000000000000010 W nv50_ir::DominatorTree::~DominatorTree()
0000000000543c40 0000000000000010 W nv50_ir::DominatorTree::~DominatorTree()
0000000000543c50 0000000000000034 W nv50_ir::DominatorTree::~DominatorTree()
0000000000543c90 0000000000000090 t nv50_ir::DominatorTree::buildDFS(nv50_ir::Graph::Node*)
0000000000543d20 00000000000000ac t nv50_ir::DominatorTree::squash(int)
0000000000543dd0 000000000000036c t nv50_ir::DominatorTree::build()
0000000000544140 0000000000000154 t nv50_ir::DominatorTree::DominatorTree(nv50_ir::Graph*)
0000000000544140 0000000000000154 T nv50_ir::DominatorTree::DominatorTree(nv50_ir::Graph*)
00000000005442a0 000000000000017c t nv50_ir::DominatorTree::findDominanceFrontiers()
0000000000544420 00000000000004e8 t nv50_ir::Function::buildLiveSetsPreSSA(nv50_ir::BasicBlock*, int)
0000000000544910 00000000000001e0 t nv50_ir::Function::buildDefSetsPreSSA(nv50_ir::BasicBlock*, int)
0000000000544af0 0000000000000078 t nv50_ir::RenamePass::RenamePass(nv50_ir::Function*)
0000000000544af0 0000000000000078 T nv50_ir::RenamePass::RenamePass(nv50_ir::Function*)
0000000000544b70 0000000000000074 t nv50_ir::RenamePass::~RenamePass()
0000000000544b70 0000000000000074 T nv50_ir::RenamePass::~RenamePass()
0000000000544bf0 00000000000002f8 t nv50_ir::RenamePass::mkUndefined(nv50_ir::Value*)
0000000000544ef0 0000000000000dac t nv50_ir::RenamePass::search(nv50_ir::BasicBlock*)
0000000000545ca0 0000000000000544 t nv50_ir::Function::convertToSSA()
00000000005461f0 00000000000000a4 t nv50_ir::Program::convertToSSA()
00000000005462a0 0000000000000070 t _debug_printf
0000000000546310 00000000000000c0 t nv50_ir::CodeEmitter::prepareEmission(nv50_ir::Function*)
00000000005463d0 0000000000000390 T nv50_ir::CodeEmitter::prepareEmission(nv50_ir::BasicBlock*)
0000000000546760 0000000000000164 T nv50_ir::CodeEmitter::prepareEmission(nv50_ir::Program*)
00000000005468d0 0000000000000048 t nv50_ir::Target::create(unsigned int)
0000000000546920 0000000000000018 t nv50_ir::Target::destroy(nv50_ir::Target*)
0000000000546940 0000000000000014 T nv50_ir::CodeEmitter::CodeEmitter(nv50_ir::Target const*)
0000000000546940 0000000000000014 t nv50_ir::CodeEmitter::CodeEmitter(nv50_ir::Target const*)
0000000000546960 00000000000000ec t nv50_ir::Program::emitSymbolTable(nv50_ir_prog_info*)
0000000000546a50 000000000000023c t nv50_ir::Program::emitBinary(nv50_ir_prog_info*)
0000000000546c90 00000000000000fc t nv50_ir::CodeEmitter::addReloc(nv50_ir::RelocEntry::Type, int, unsigned int, unsigned int, int)
0000000000546d90 00000000000000ec t nv50_ir::CodeEmitter::addInterp(int, int, void (*)(nv50_ir::FixupEntry const*, unsigned int*, nv50_ir::FixupData const&))
0000000000546e80 00000000000000c0 t nv50_ir_relocate_code
0000000000546f40 0000000000000084 t nv50_ir_apply_fixups
0000000000546fd0 000000000000008c t nv50_ir_get_target_library
0000000000547060 000000000000000c W nv50_ir::DLList::Iterator::get() const
0000000000547070 0000000000000010 W nv50_ir::DLList::Iterator::end() const
0000000000547080 0000000000000004 W nv50_ir::DLList::Iterator::~Iterator()
0000000000547080 0000000000000004 W nv50_ir::DLList::Iterator::~Iterator()
0000000000547090 0000000000000030 t nv50_ir::DLList::Iterator::erase()
00000000005470c0 0000000000000008 W nv50_ir::DLList::Iterator::~Iterator()
00000000005470d0 0000000000000068 t nv50_ir::DLList::Iterator::insert(void*)
0000000000547140 0000000000000070 t _debug_printf
00000000005471b0 000000000000007c W nv50_ir::DLList::Iterator::next()
0000000000547230 0000000000000048 t nv50_ir::DLList::clear()
0000000000547280 0000000000000090 t nv50_ir::Stack::moveTo(nv50_ir::Stack&)
0000000000547310 0000000000000038 t nv50_ir::Interval::~Interval()
0000000000547310 0000000000000038 T nv50_ir::Interval::~Interval()
0000000000547350 000000000000003c t nv50_ir::Interval::clear()
0000000000547390 0000000000000184 t nv50_ir::Interval::extend(int, int)
0000000000547520 0000000000000040 t nv50_ir::Interval::Interval(nv50_ir::Interval const&)
0000000000547520 0000000000000040 T nv50_ir::Interval::Interval(nv50_ir::Interval const&)
0000000000547560 0000000000000090 t nv50_ir::Interval::overlaps(nv50_ir::Interval const&) const
00000000005475f0 0000000000000038 t nv50_ir::Interval::insert(nv50_ir::Interval const&)
0000000000547630 0000000000000058 t nv50_ir::Interval::unify(nv50_ir::Interval&)
0000000000547690 000000000000006c t nv50_ir::Interval::print() const
0000000000547700 0000000000000048 t nv50_ir::BitSet::andNot(nv50_ir::BitSet const&)
0000000000547750 0000000000000048 t nv50_ir::BitSet::operator|=(nv50_ir::BitSet const&)
00000000005477a0 00000000000000c8 t nv50_ir::BitSet::allocate(unsigned int, bool)
0000000000547870 0000000000000058 t nv50_ir::BitSet::popCount() const
00000000005478d0 0000000000000050 t nv50_ir::BitSet::fill(unsigned int)
0000000000547920 0000000000000068 t nv50_ir::BitSet::setOr(nv50_ir::BitSet*, nv50_ir::BitSet*)
0000000000547990 0000000000000210 t nv50_ir::BitSet::findFreeRange(unsigned int, unsigned int) const
0000000000547ba0 0000000000000018 T nv50_ir::TargetGM107::getBuiltinCode(unsigned int const**, unsigned int*) const
0000000000547bc0 0000000000000010 T nv50_ir::TargetGM107::getBuiltinOffset(int) const
0000000000547bd0 000000000000006c T nv50_ir::TargetGM107::isOpSupported(nv50_ir::operation, nv50_ir::DataType) const
0000000000547c40 0000000000000058 T nv50_ir::TargetGM107::isReuseSupported(nv50_ir::Instruction const*) const
0000000000547ca0 0000000000000008 T nv50_ir::TargetGM107::canDualIssue(nv50_ir::Instruction const*, nv50_ir::Instruction const*) const
0000000000547cb0 000000000000000c T nv50_ir::TargetGM107::isCS2RSV(nv50_ir::SVSemantic) const
0000000000547cc0 0000000000000004 W nv50_ir::TargetGM107::~TargetGM107()
0000000000547cc0 0000000000000004 W nv50_ir::TargetGM107::~TargetGM107()
0000000000547cd0 0000000000000004 T nv50_ir::TargetGM107::getCodeEmitter(nv50_ir::Program::Type)
0000000000547ce0 0000000000000008 W nv50_ir::TargetGM107::~TargetGM107()
0000000000547cf0 0000000000000118 T nv50_ir::TargetGM107::runLegalizePass(nv50_ir::Program*, nv50_ir::CGStage) const
0000000000547e10 00000000000002a4 T nv50_ir::TargetGM107::getReadLatency(nv50_ir::Instruction const*) const
00000000005480c0 0000000000000330 T nv50_ir::TargetGM107::isBarrierRequired(nv50_ir::Instruction const*) const
00000000005483f0 0000000000000338 T nv50_ir::TargetGM107::getLatency(nv50_ir::Instruction const*) const
0000000000548730 0000000000000040 t nv50_ir::getTargetGM107(unsigned int)
0000000000548770 000000000000006c T nv50_ir::TargetNVC0::getBuiltinCode(unsigned int const**, unsigned int*) const
00000000005487e0 0000000000000054 T nv50_ir::TargetNVC0::getBuiltinOffset(int) const
0000000000548840 0000000000000150 t nv50_ir::TargetNVC0::initProps(nv50_ir::opProperties const*, int)
0000000000548990 00000000000002f4 t nv50_ir::TargetNVC0::initOpInfo()
0000000000548c90 0000000000000034 T nv50_ir::TargetNVC0::TargetNVC0(unsigned int)
0000000000548c90 0000000000000034 t nv50_ir::TargetNVC0::TargetNVC0(unsigned int)
0000000000548cd0 00000000000000c8 T nv50_ir::TargetNVC0::getFileSize(nv50_ir::DataFile) const
0000000000548da0 0000000000000018 T nv50_ir::TargetNVC0::getFileUnit(nv50_ir::DataFile) const
0000000000548dc0 00000000000000f0 T nv50_ir::TargetNVC0::getSVAddress(nv50_ir::DataFile, nv50_ir::Symbol const*) const
0000000000548eb0 00000000000007bc T nv50_ir::TargetNVC0::insnCanLoad(nv50_ir::Instruction const*, int, nv50_ir::Instruction const*) const
0000000000549670 00000000000000ec T nv50_ir::TargetNVC0::insnCanLoadOffset(nv50_ir::Instruction const*, int, int) const
0000000000549760 0000000000000084 T nv50_ir::TargetNVC0::isAccessSupported(nv50_ir::DataFile, nv50_ir::DataType) const
00000000005497f0 0000000000000034 T nv50_ir::TargetNVC0::isOpSupported(nv50_ir::operation, nv50_ir::DataType) const
0000000000549830 0000000000000324 T nv50_ir::TargetNVC0::isModSupported(nv50_ir::Instruction const*, int, nv50_ir::Modifier) const
0000000000549b60 00000000000000c8 T nv50_ir::TargetNVC0::mayPredicate(nv50_ir::Instruction const*, nv50_ir::Value const*) const
0000000000549c30 0000000000000134 T nv50_ir::TargetNVC0::isSatSupported(nv50_ir::Instruction const*) const
0000000000549d70 0000000000000078 T nv50_ir::TargetNVC0::isPostMultiplySupported(nv50_ir::operation, float, int&) const
0000000000549df0 0000000000000170 T nv50_ir::TargetNVC0::getLatency(nv50_ir::Instruction const*) const
0000000000549f60 0000000000000090 T nv50_ir::TargetNVC0::getThroughput(nv50_ir::Instruction const*) const
0000000000549ff0 00000000000002ec T nv50_ir::TargetNVC0::canDualIssue(nv50_ir::Instruction const*, nv50_ir::Instruction const*) const
000000000054a2e0 000000000000005c t nvc0_decoder_bsp_begin
000000000054a340 00000000000001d8 t nvc0_decoder_bsp_next
000000000054a520 00000000000003a0 t nvc0_decoder_bsp_end
000000000054a8c0 0000000000000040 t util_hash_crc32
000000000054a900 00000000000001ec t _mesa_parse_arb_fragment_program
000000000054aaf0 0000000000000140 t _mesa_parse_arb_vertex_program
000000000054ac30 00000000000000d0 t clear_cache
000000000054ad00 0000000000000094 t rehash
000000000054ada0 000000000000005c t _mesa_new_program_cache
000000000054ae00 0000000000000030 t _mesa_delete_program_cache
000000000054ae30 0000000000000030 t _mesa_delete_shader_cache
000000000054ae60 00000000000000f0 t _mesa_search_program_cache
000000000054af50 0000000000000120 t _mesa_program_cache_insert
000000000054b070 0000000000000120 t _mesa_shader_cache_insert
000000000054b190 00000000000000c0 t _mesa_init_instructions
000000000054b250 000000000000002c t _mesa_copy_instructions
000000000054b280 000000000000001c t _mesa_num_inst_src_regs
000000000054b2a0 000000000000001c t _mesa_num_inst_dst_regs
000000000054b2c0 0000000000000060 t _mesa_opcode_string
000000000054b320 0000000000000080 t get_value.isra.0
000000000054b3a0 0000000000000708 t _mesa_constant_fold
000000000054bab0 00000000000000c0 t yytnamerr
000000000054bb70 0000000000000280 t yysyntax_error
000000000054bdf0 00000000000000a0 t asm_instruction_set_operands
000000000054be90 0000000000000084 t add_state_reference
000000000054bf20 0000000000000108 t initialize_symbol_from_state
000000000054c030 0000000000000100 t initialize_symbol_from_param
000000000054c130 00000000000000ec t make_error_string
000000000054c220 00000000000000a4 t yyerror
000000000054c2d0 0000000000000088 t validate_inputs
000000000054c360 0000000000000150 t declare_variable
000000000054c4b0 00000000000000ac t asm_instruction_ctor.constprop.0
000000000054c560 0000000000003184 t yyparse.isra.0
000000000054f6f0 0000000000000340 t _mesa_parse_arb_program
000000000054fa30 00000000000000a4 t init_velement_64bit
000000000054fae0 00000000000004e4 T st_update_array
000000000054ffd0 0000000000000140 t st_bind_atomics
0000000000550110 00000000000000c8 t st_bind_hw_atomic_buffers.part.0
00000000005501e0 0000000000000018 T st_bind_vs_atomics
0000000000550200 0000000000000018 T st_bind_fs_atomics
0000000000550220 0000000000000018 T st_bind_gs_atomics
0000000000550240 0000000000000018 T st_bind_tcs_atomics
0000000000550260 0000000000000018 T st_bind_tes_atomics
0000000000550280 0000000000000024 T st_bind_cs_atomics
00000000005502b0 0000000000000010 T st_bind_hw_atomic_buffers
00000000005502c0 0000000000000198 t translate_blend
0000000000550460 00000000000004c8 T st_update_blend
0000000000550930 0000000000000034 T st_update_blend_color
0000000000550970 0000000000000004 W ir_expression_flattening_visitor::~ir_expression_flattening_visitor()
0000000000550970 0000000000000004 W ir_expression_flattening_visitor::~ir_expression_flattening_visitor()
0000000000550980 0000000000000008 W ir_expression_flattening_visitor::~ir_expression_flattening_visitor()
0000000000550990 0000000000000134 T ir_expression_flattening_visitor::handle_rvalue(ir_rvalue**)
0000000000550ad0 000000000000007c t do_expression_flattening(exec_list*, bool (*)(ir_instruction*))
0000000000550b50 0000000000000024 t prolog
0000000000550b80 000000000000008c t report_error
0000000000550c10 00000000000000b4 t iter_immediate
0000000000550cd0 0000000000000070 t regs_hash_destroy
0000000000550d40 0000000000000074 t iter_property
0000000000550dc0 0000000000000090 t report_warning.constprop.0
0000000000550e50 00000000000001ec t check_register_usage.isra.0
0000000000551040 00000000000002e8 t iter_instruction
0000000000551330 000000000000010c t epilog
0000000000551440 00000000000000a0 t check_and_declare
00000000005514e0 00000000000001c8 t iter_declaration
00000000005516b0 000000000000010c t tgsi_sanity_check
00000000005517c0 0000000000000070 t nouveau_vp3_bsp_begin
0000000000551830 0000000000000090 t nouveau_vp3_bsp_next
00000000005518c0 000000000000034c t nouveau_vp3_bsp_end
0000000000551c10 00000000000000fc t nouveau_vp3_handle_references
0000000000551d10 00000000000001a4 t nouveau_vp3_fill_picparm_mpeg4_vp
0000000000551ec0 0000000000000478 t nouveau_vp3_fill_picparm_h264_vp
0000000000552340 00000000000005fc t nouveau_vp3_vp_caps
0000000000552940 0000000000000140 t std::_Rb_tree<void const*, std::pair<void const* const, void*>, std::_Select1st<std::pair<void const* const, void*> >, std::less<void const*>, std::allocator<std::pair<void const* const, void*> > >::_M_erase(std::_Rb_tree_node<std::pair<void const* const, void*> >*) [clone .isra.0]
0000000000552a80 0000000000000038 t nv50_ir::BuildUtil::BuildUtil()
0000000000552a80 0000000000000038 T nv50_ir::BuildUtil::BuildUtil()
0000000000552ac0 000000000000003c T nv50_ir::BuildUtil::BuildUtil(nv50_ir::Program*)
0000000000552ac0 000000000000003c t nv50_ir::BuildUtil::BuildUtil(nv50_ir::Program*)
0000000000552b00 0000000000000228 t nv50_ir::BuildUtil::mkOp1(nv50_ir::operation, nv50_ir::DataType, nv50_ir::Value*, nv50_ir::Value*)
0000000000552d30 0000000000000240 t nv50_ir::BuildUtil::mkOp2(nv50_ir::operation, nv50_ir::DataType, nv50_ir::Value*, nv50_ir::Value*, nv50_ir::Value*)
0000000000552f70 0000000000000284 t nv50_ir::BuildUtil::mkOp3(nv50_ir::operation, nv50_ir::DataType, nv50_ir::Value*, nv50_ir::Value*, nv50_ir::Value*, nv50_ir::Value*)
0000000000553200 0000000000000230 t nv50_ir::BuildUtil::mkLoad(nv50_ir::DataType, nv50_ir::Value*, nv50_ir::Symbol*, nv50_ir::Value*)
0000000000553430 0000000000000238 t nv50_ir::BuildUtil::mkStore(nv50_ir::operation, nv50_ir::DataType, nv50_ir::Symbol*, nv50_ir::Value*, nv50_ir::Value*)
0000000000553670 00000000000001dc t nv50_ir::BuildUtil::mkFetch(nv50_ir::Value*, nv50_ir::DataType, nv50_ir::DataFile, int, nv50_ir::Value*, nv50_ir::Value*)
0000000000553850 00000000000001dc t nv50_ir::BuildUtil::mkInterp(unsigned int, nv50_ir::Value*, int, nv50_ir::Value*)
0000000000553a30 0000000000000210 t nv50_ir::BuildUtil::mkMov(nv50_ir::Value*, nv50_ir::Value*, nv50_ir::DataType)
0000000000553c40 0000000000000418 t nv50_ir::BuildUtil::mkMovToReg(int, nv50_ir::Value*)
0000000000554060 0000000000000420 t nv50_ir::BuildUtil::mkMovFromReg(nv50_ir::Value*, int)
0000000000554480 0000000000000234 t nv50_ir::BuildUtil::mkCvt(nv50_ir::operation, nv50_ir::DataType, nv50_ir::Value*, nv50_ir::DataType, nv50_ir::Value*)
00000000005546c0 0000000000000288 t nv50_ir::BuildUtil::mkCmp(nv50_ir::operation, nv50_ir::CondCode, nv50_ir::DataType, nv50_ir::Value*, nv50_ir::DataType, nv50_ir::Value*, nv50_ir::Value*, nv50_ir::Value*)
0000000000554950 00000000000002a0 t nv50_ir::BuildUtil::mkTex(nv50_ir::operation, nv50_ir::TexTarget, unsigned short, unsigned short, std::vector<nv50_ir::Value*, std::allocator<nv50_ir::Value*> > const&, std::vector<nv50_ir::Value*, std::allocator<nv50_ir::Value*> > const&)
0000000000554bf0 0000000000000044 t nv50_ir::BuildUtil::mkQuadop(unsigned char, nv50_ir::Value*, unsigned char, nv50_ir::Value*, nv50_ir::Value*)
0000000000554c40 0000000000000568 t nv50_ir::BuildUtil::mkSplit(nv50_ir::Value**, unsigned char, nv50_ir::Value*)
00000000005551b0 0000000000000218 t nv50_ir::BuildUtil::mkFlow(nv50_ir::operation, void*, nv50_ir::CondCode, nv50_ir::Value*)
00000000005553d0 00000000000004c4 t nv50_ir::BuildUtil::mkClobber(nv50_ir::DataFile, unsigned int, int)
00000000005558a0 000000000000021c t nv50_ir::BuildUtil::mkImm(unsigned int)
0000000000555ac0 0000000000000008 t nv50_ir::BuildUtil::mkImm(float)
0000000000555ad0 000000000000015c t nv50_ir::BuildUtil::mkImm(double)
0000000000555c30 0000000000000170 t nv50_ir::BuildUtil::loadImm(nv50_ir::Value*, float)
0000000000555da0 0000000000000298 t nv50_ir::BuildUtil::loadImm(nv50_ir::Value*, double)
0000000000556040 0000000000000170 t nv50_ir::BuildUtil::loadImm(nv50_ir::Value*, unsigned int)
00000000005561b0 0000000000000180 t nv50_ir::BuildUtil::mkSymbol(nv50_ir::DataFile, signed char, nv50_ir::DataType, unsigned int)
0000000000556330 0000000000000198 t nv50_ir::BuildUtil::mkSysVal(nv50_ir::SVSemantic, unsigned int)
00000000005564d0 000000000000019c t nv50_ir::BuildUtil::DataArray::setup(unsigned int, unsigned int, unsigned int, int, int, int, nv50_ir::DataFile, signed char)
0000000000556670 00000000000001a0 t nv50_ir::BuildUtil::DataArray::mkSymbol(int, int)
0000000000556810 0000000000000138 t std::pair<std::_Rb_tree_iterator<std::pair<nv50_ir::Value* const, nv50_ir::BuildUtil::Location> >, bool> std::_Rb_tree<nv50_ir::Value*, std::pair<nv50_ir::Value* const, nv50_ir::BuildUtil::Location>, std::_Select1st<std::pair<nv50_ir::Value* const, nv50_ir::BuildUtil::Location> >, std::less<nv50_ir::Value*>, std::allocator<std::pair<nv50_ir::Value* const, nv50_ir::BuildUtil::Location> > >::_M_emplace_unique<std::pair<nv50_ir::Value*, nv50_ir::BuildUtil::Location> >(std::pair<nv50_ir::Value*, nv50_ir::BuildUtil::Location>&&)
0000000000556950 0000000000000158 t std::_Rb_tree<nv50_ir::BuildUtil::Location, std::pair<nv50_ir::BuildUtil::Location const, nv50_ir::Value*>, std::_Select1st<std::pair<nv50_ir::BuildUtil::Location const, nv50_ir::Value*> >, std::less<nv50_ir::BuildUtil::Location>, std::allocator<std::pair<nv50_ir::BuildUtil::Location const, nv50_ir::Value*> > >::_M_get_insert_unique_pos(nv50_ir::BuildUtil::Location const&)
0000000000556ab0 000000000000011c t std::pair<std::_Rb_tree_iterator<std::pair<nv50_ir::BuildUtil::Location const, nv50_ir::Value*> >, bool> std::_Rb_tree<nv50_ir::BuildUtil::Location, std::pair<nv50_ir::BuildUtil::Location const, nv50_ir::Value*>, std::_Select1st<std::pair<nv50_ir::BuildUtil::Location const, nv50_ir::Value*> >, std::less<nv50_ir::BuildUtil::Location>, std::allocator<std::pair<nv50_ir::BuildUtil::Location const, nv50_ir::Value*> > >::_M_emplace_unique<std::pair<nv50_ir::BuildUtil::Location, nv50_ir::Value*> >(std::pair<nv50_ir::BuildUtil::Location, nv50_ir::Value*>&&)
0000000000556bd0 0000000000000358 t nv50_ir::BuildUtil::DataArray::acquire(nv50_ir::bimap<nv50_ir::BuildUtil::Location, nv50_ir::Value*>&, int, int)
0000000000556f30 000000000000054c t nv50_ir::BuildUtil::DataArray::load(nv50_ir::bimap<nv50_ir::BuildUtil::Location, nv50_ir::Value*>&, int, int, nv50_ir::Value*)
0000000000557480 0000000000000328 t nv50_ir::BuildUtil::DataArray::store(nv50_ir::bimap<nv50_ir::BuildUtil::Location, nv50_ir::Value*>&, int, int, nv50_ir::Value*, nv50_ir::Value*)
00000000005577b0 00000000000000c0 t std::_Rb_tree_iterator<std::pair<void const* const, void*> > std::_Rb_tree<void const*, std::pair<void const* const, void*>, std::_Select1st<std::pair<void const* const, void*> >, std::less<void const*>, std::allocator<std::pair<void const* const, void*> > >::_M_emplace_hint_unique<std::piecewise_construct_t const&, std::tuple<void const* const&>, std::tuple<> >(std::_Rb_tree_const_iterator<std::pair<void const* const, void*> >, std::piecewise_construct_t const&, std::tuple<void const* const&>&&, std::tuple<>&&) [clone .isra.0]
0000000000557870 0000000000000b2c t nv50_ir::BuildUtil::split64BitOpPostRA(nv50_ir::Function*, nv50_ir::Instruction*, nv50_ir::Value*, nv50_ir::Value*)
00000000005583a0 00000000000000c8 t std::_Rb_tree_node<std::pair<nv50_ir::BuildUtil::Location const, nv50_ir::Value*> >* std::_Rb_tree<nv50_ir::BuildUtil::Location, std::pair<nv50_ir::BuildUtil::Location const, nv50_ir::Value*>, std::_Select1st<std::pair<nv50_ir::BuildUtil::Location const, nv50_ir::Value*> >, std::less<nv50_ir::BuildUtil::Location>, std::allocator<std::pair<nv50_ir::BuildUtil::Location const, nv50_ir::Value*> > >::_M_copy<false, std::_Rb_tree<nv50_ir::BuildUtil::Location, std::pair<nv50_ir::BuildUtil::Location const, nv50_ir::Value*>, std::_Select1st<std::pair<nv50_ir::BuildUtil::Location const, nv50_ir::Value*> >, std::less<nv50_ir::BuildUtil::Location>, std::allocator<std::pair<nv50_ir::BuildUtil::Location const, nv50_ir::Value*> > >::_Alloc_node>(std::_Rb_tree_node<std::pair<nv50_ir::BuildUtil::Location const, nv50_ir::Value*> >*, std::_Rb_tree_node_base*, std::_Rb_tree<nv50_ir::BuildUtil::Location, std::pair<nv50_ir::BuildUtil::Location const, nv50_ir::Value*>, std::_Select1st<std::pair<nv50_ir::BuildUtil::Location const, nv50_ir::Value*> >, std::less<nv50_ir::BuildUtil::Location>, std::allocator<std::pair<nv50_ir::BuildUtil::Location const, nv50_ir::Value*> > >::_Alloc_node&) [clone .isra.0]
0000000000558470 00000000000000c8 t std::_Rb_tree_node<std::pair<nv50_ir::Value* const, nv50_ir::BuildUtil::Location> >* std::_Rb_tree<nv50_ir::Value*, std::pair<nv50_ir::Value* const, nv50_ir::BuildUtil::Location>, std::_Select1st<std::pair<nv50_ir::Value* const, nv50_ir::BuildUtil::Location> >, std::less<nv50_ir::Value*>, std::allocator<std::pair<nv50_ir::Value* const, nv50_ir::BuildUtil::Location> > >::_M_copy<false, std::_Rb_tree<nv50_ir::Value*, std::pair<nv50_ir::Value* const, nv50_ir::BuildUtil::Location>, std::_Select1st<std::pair<nv50_ir::Value* const, nv50_ir::BuildUtil::Location> >, std::less<nv50_ir::Value*>, std::allocator<std::pair<nv50_ir::Value* const, nv50_ir::BuildUtil::Location> > >::_Alloc_node>(std::_Rb_tree_node<std::pair<nv50_ir::Value* const, nv50_ir::BuildUtil::Location> >*, std::_Rb_tree_node_base*, std::_Rb_tree<nv50_ir::Value*, std::pair<nv50_ir::Value* const, nv50_ir::BuildUtil::Location>, std::_Select1st<std::pair<nv50_ir::Value* const, nv50_ir::BuildUtil::Location> >, std::less<nv50_ir::Value*>, std::allocator<std::pair<nv50_ir::Value* const, nv50_ir::BuildUtil::Location> > >::_Alloc_node&) [clone .isra.0]
0000000000558540 0000000000000140 t std::_Rb_tree<nv50_ir::Value*, std::pair<nv50_ir::Value* const, nv50_ir::BuildUtil::Location>, std::_Select1st<std::pair<nv50_ir::Value* const, nv50_ir::BuildUtil::Location> >, std::less<nv50_ir::Value*>, std::allocator<std::pair<nv50_ir::Value* const, nv50_ir::BuildUtil::Location> > >::_M_erase(std::_Rb_tree_node<std::pair<nv50_ir::Value* const, nv50_ir::BuildUtil::Location> >*) [clone .isra.0]
0000000000558680 0000000000000140 t std::_Rb_tree<nv50_ir::BuildUtil::Location, std::pair<nv50_ir::BuildUtil::Location const, nv50_ir::Value*>, std::_Select1st<std::pair<nv50_ir::BuildUtil::Location const, nv50_ir::Value*> >, std::less<nv50_ir::BuildUtil::Location>, std::allocator<std::pair<nv50_ir::BuildUtil::Location const, nv50_ir::Value*> > >::_M_erase(std::_Rb_tree_node<std::pair<nv50_ir::BuildUtil::Location const, nv50_ir::Value*> >*) [clone .isra.0]
00000000005587c0 000000000000003c T nv50_ir::ConverterCommon::ConverterCommon(nv50_ir::Program*, nv50_ir_prog_info*)
00000000005587c0 000000000000003c t nv50_ir::ConverterCommon::ConverterCommon(nv50_ir::Program*, nv50_ir_prog_info*)
0000000000558800 0000000000000080 t nv50_ir::ConverterCommon::translateInterpMode(nv50_ir_varying const*, nv50_ir::operation&)
0000000000558880 0000000000000414 t nv50_ir::ConverterCommon::handleUserClipPlanes()
0000000000558ca0 000000000000025c t std::pair<std::_Rb_tree_iterator<std::pair<unsigned int const, nv50_ir::ConverterCommon::Subroutine> >, bool> std::_Rb_tree<unsigned int, std::pair<unsigned int const, nv50_ir::ConverterCommon::Subroutine>, std::_Select1st<std::pair<unsigned int const, nv50_ir::ConverterCommon::Subroutine> >, std::less<unsigned int>, std::allocator<std::pair<unsigned int const, nv50_ir::ConverterCommon::Subroutine> > >::_M_emplace_unique<std::pair<unsigned int, nv50_ir::ConverterCommon::Subroutine> >(std::pair<unsigned int, nv50_ir::ConverterCommon::Subroutine>&&)
0000000000558f00 0000000000000160 t nv50_ir::ConverterCommon::getSubroutine(unsigned int)
0000000000559060 0000000000000130 t nv50_ir::ConverterCommon::getSubroutine(nv50_ir::Function*)
0000000000559190 000000000000002c t nv50_ir::selpFlip(nv50_ir::FixupEntry const*, unsigned int*, nv50_ir::FixupData const&)
00000000005591c0 00000000000000a0 t nv50_ir::interpApply(nv50_ir::FixupEntry const*, unsigned int*, nv50_ir::FixupData const&)
0000000000559260 0000000000000008 T nv50_ir::CodeEmitterGM107::getMinEncodingSize(nv50_ir::Instruction const*) const
0000000000559270 0000000000000004 W nv50_ir::CodeEmitterGM107::~CodeEmitterGM107()
0000000000559270 0000000000000004 W nv50_ir::CodeEmitterGM107::~CodeEmitterGM107()
0000000000559280 0000000000000070 t _debug_printf
00000000005592f0 0000000000000008 W nv50_ir::CodeEmitterGM107::~CodeEmitterGM107()
0000000000559300 0000000000000064 T nv50_ir::CodeEmitterGM107::prepareEmission(nv50_ir::Function*)
0000000000559370 0000000000000160 T nv50_ir::CodeEmitterGM107::prepareEmission(nv50_ir::Program*)
00000000005594d0 0000000000000048 t nv50_ir::CodeEmitterGM107::emitGPR(int, nv50_ir::ValueRef const&) [clone .isra.0]
0000000000559520 0000000000000048 t nv50_ir::CodeEmitterGM107::emitGPR(int, nv50_ir::ValueDef const&) [clone .isra.0]
0000000000559570 00000000000000b8 t nv50_ir::CodeEmitterGM107::emitIMMD(int, int, nv50_ir::ValueRef const&) [clone .isra.0]
0000000000559630 00000000000000ac t nv50_ir::CodeEmitterGM107::emitLDSTs(int, nv50_ir::DataType)
00000000005596e0 0000000000000078 t nv50_ir::CodeEmitterGM107::emitSUTarget()
0000000000559760 0000000000000074 t nv50_ir::SchedDataCalculatorGM107::recordWr(nv50_ir::Value const*, int, int)
00000000005597e0 00000000000000a4 t nv50_ir::SchedDataCalculatorGM107::checkRd(nv50_ir::Value const*, int, int&) const
0000000000559890 0000000000000150 t nv50_ir::SchedDataCalculatorGM107::commitInsn(nv50_ir::Instruction const*, int)
00000000005599e0 000000000000013c t nv50_ir::SchedDataCalculatorGM107::calcDelay(nv50_ir::Instruction const*, int) const
0000000000559b20 0000000000000174 t nv50_ir::SchedDataCalculatorGM107::setDelay(nv50_ir::Instruction*, int, nv50_ir::Instruction const*)
0000000000559ca0 0000000000000294 t nv50_ir::SchedDataCalculatorGM107::needWrDepBar(nv50_ir::Instruction const*) const
0000000000559f40 0000000000000064 t nv50_ir::TargetGM107::createCodeEmitterGM107(nv50_ir::Program::Type)
0000000000559fb0 0000000000000080 t nv50_ir::CodeEmitterGM107::emitPred()
000000000055a030 0000000000000054 t nv50_ir::CodeEmitterGM107::emitDEPBAR()
000000000055a090 000000000000015c t nv50_ir::CodeEmitterGM107::emitSUHandle(int)
000000000055a1f0 0000000000000128 t nv50_ir::CodeEmitterGM107::emitSUSTx()
000000000055a320 0000000000000128 t nv50_ir::CodeEmitterGM107::emitISBERD()
000000000055a450 00000000000000ec t nv50_ir::CodeEmitterGM107::emitCBUF(int, int, int, int, int, nv50_ir::ValueRef const&) [clone .constprop.0]
000000000055a540 00000000000000f4 t nv50_ir::CodeEmitterGM107::emitSTS()
000000000055a640 0000000000000104 t nv50_ir::CodeEmitterGM107::emitTEXs(int)
000000000055a750 0000000000000118 t nv50_ir::CodeEmitterGM107::emitSTL()
000000000055a870 0000000000000124 t nv50_ir::CodeEmitterGM107::emitPRET()
000000000055a9a0 0000000000000124 t nv50_ir::CodeEmitterGM107::emitSSY()
000000000055aad0 0000000000000124 t nv50_ir::CodeEmitterGM107::emitPBK()
000000000055ac00 0000000000000124 t nv50_ir::CodeEmitterGM107::emitPCNT()
000000000055ad30 000000000000016c t nv50_ir::CodeEmitterGM107::emitRED()
000000000055aea0 0000000000000170 t nv50_ir::CodeEmitterGM107::emitST()
000000000055b010 0000000000000180 t nv50_ir::CodeEmitterGM107::emitAST()
000000000055b190 000000000000016c t nv50_ir::CodeEmitterGM107::emitCCTL()
000000000055b300 00000000000001b4 t nv50_ir::CodeEmitterGM107::emitCAL()
000000000055b4c0 00000000000001e0 t nv50_ir::CodeEmitterGM107::emitBRA()
000000000055b6a0 0000000000000200 t nv50_ir::CodeEmitterGM107::emitBAR()
000000000055b8a0 000000000000007c t nv50_ir::CodeEmitterGM107::emitCONT()
000000000055b920 000000000000007c t nv50_ir::CodeEmitterGM107::emitEXIT()
000000000055b9a0 000000000000007c t nv50_ir::CodeEmitterGM107::emitRET()
000000000055ba20 000000000000007c t nv50_ir::CodeEmitterGM107::emitBRK()
000000000055baa0 000000000000007c t nv50_ir::CodeEmitterGM107::emitSYNC()
000000000055bb20 000000000000007c t nv50_ir::CodeEmitterGM107::emitKIL()
000000000055bba0 0000000000000070 t nv50_ir::CodeEmitterGM107::emitMEMBAR()
000000000055bc10 000000000000014c t nv50_ir::CodeEmitterGM107::emitPSETP()
000000000055bd60 0000000000000344 t nv50_ir::CodeEmitterGM107::emitMOV()
000000000055c0b0 0000000000000178 t nv50_ir::CodeEmitterGM107::emitS2R()
000000000055c230 0000000000000178 t nv50_ir::CodeEmitterGM107::emitCS2R()
000000000055c3b0 00000000000002f8 t nv50_ir::CodeEmitterGM107::emitF2F()
000000000055c6b0 00000000000002c0 t nv50_ir::CodeEmitterGM107::emitF2I()
000000000055c970 00000000000002a8 t nv50_ir::CodeEmitterGM107::emitI2F()
000000000055cc20 00000000000002a4 t nv50_ir::CodeEmitterGM107::emitI2I()
000000000055ced0 0000000000000218 t nv50_ir::CodeEmitterGM107::emitSEL()
000000000055d0f0 000000000000024c t nv50_ir::CodeEmitterGM107::emitDADD()
000000000055d340 0000000000000214 t nv50_ir::CodeEmitterGM107::emitDMUL()
000000000055d560 00000000000002d4 t nv50_ir::CodeEmitterGM107::emitDFMA()
000000000055d840 0000000000000254 t nv50_ir::CodeEmitterGM107::emitDMNMX()
000000000055daa0 00000000000002bc t nv50_ir::CodeEmitterGM107::emitDSET()
000000000055dd60 000000000000031c t nv50_ir::CodeEmitterGM107::emitFADD()
000000000055e080 00000000000002dc t nv50_ir::CodeEmitterGM107::emitFMUL()
000000000055e360 0000000000000440 t nv50_ir::CodeEmitterGM107::emitFFMA()
000000000055e7a0 000000000000017c t nv50_ir::CodeEmitterGM107::emitMUFU()
000000000055e920 0000000000000234 t nv50_ir::CodeEmitterGM107::emitFMNMX()
000000000055eb60 00000000000001bc t nv50_ir::CodeEmitterGM107::emitRRO()
000000000055ed20 00000000000002c8 t nv50_ir::CodeEmitterGM107::emitFCMP()
000000000055eff0 00000000000002cc t nv50_ir::CodeEmitterGM107::emitFSET()
000000000055f2c0 000000000000016c t nv50_ir::CodeEmitterGM107::emitFSWZADD()
000000000055f430 00000000000002a0 t nv50_ir::CodeEmitterGM107::emitLOP()
000000000055f6d0 00000000000001e0 t nv50_ir::CodeEmitterGM107::emitNOT()
000000000055f8b0 00000000000002b8 t nv50_ir::CodeEmitterGM107::emitIADD()
000000000055fb70 00000000000002cc t nv50_ir::CodeEmitterGM107::emitIMUL()
000000000055fe40 00000000000002ec t nv50_ir::CodeEmitterGM107::emitIMAD()
0000000000560130 0000000000000220 t nv50_ir::CodeEmitterGM107::emitISCADD()
0000000000560350 0000000000000310 t nv50_ir::CodeEmitterGM107::emitXMAD()
0000000000560660 00000000000001e0 t nv50_ir::CodeEmitterGM107::emitIMNMX()
0000000000560840 00000000000002d8 t nv50_ir::CodeEmitterGM107::emitICMP()
0000000000560b20 0000000000000298 t nv50_ir::CodeEmitterGM107::emitISET()
0000000000560dc0 00000000000001b8 t nv50_ir::CodeEmitterGM107::emitSHL()
0000000000560f80 00000000000001e0 t nv50_ir::CodeEmitterGM107::emitSHR()
0000000000561160 00000000000001f8 t nv50_ir::CodeEmitterGM107::emitSHF()
0000000000561360 000000000000018c t nv50_ir::CodeEmitterGM107::emitPOPC()
00000000005614f0 000000000000025c t nv50_ir::CodeEmitterGM107::emitBFI()
0000000000561750 00000000000001d0 t nv50_ir::CodeEmitterGM107::emitBFE()
0000000000561920 00000000000001b0 t nv50_ir::CodeEmitterGM107::emitFLO()
0000000000561ad0 0000000000000124 t nv50_ir::CodeEmitterGM107::emitLDC()
0000000000561c00 0000000000000114 t nv50_ir::CodeEmitterGM107::emitLDL()
0000000000561d20 00000000000000f0 t nv50_ir::CodeEmitterGM107::emitLDS()
0000000000561e10 0000000000000170 t nv50_ir::CodeEmitterGM107::emitLD()
0000000000561f80 0000000000000288 t nv50_ir::CodeEmitterGM107::emitIPA()
0000000000562210 00000000000001e8 t nv50_ir::CodeEmitterGM107::emitATOM()
0000000000562400 0000000000000190 t nv50_ir::CodeEmitterGM107::emitATOMS()
0000000000562590 00000000000000c8 t nv50_ir::CodeEmitterGM107::emitPIXLD()
0000000000562660 00000000000001e4 t nv50_ir::CodeEmitterGM107::emitTEX()
0000000000562850 00000000000001a4 t nv50_ir::CodeEmitterGM107::emitTLD()
0000000000562a00 00000000000001d4 t nv50_ir::CodeEmitterGM107::emitTLD4()
0000000000562be0 0000000000000180 t nv50_ir::CodeEmitterGM107::emitTXD()
0000000000562d60 000000000000017c t nv50_ir::CodeEmitterGM107::emitTMML()
0000000000562ee0 0000000000000144 t nv50_ir::CodeEmitterGM107::emitTXQ()
0000000000563030 00000000000001bc t nv50_ir::CodeEmitterGM107::emitOUT()
00000000005631f0 0000000000000148 t nv50_ir::CodeEmitterGM107::emitSULDx()
0000000000563340 00000000000001c4 t nv50_ir::CodeEmitterGM107::emitSUREDx()
0000000000563510 00000000000001a8 t nv50_ir::CodeEmitterGM107::emitALD()
00000000005636c0 000000000000014c t nv50_ir::CodeEmitterGM107::emitAL2P()
0000000000563810 00000000000001c8 t nv50_ir::SchedDataCalculatorGM107::doesInsnWriteTo(nv50_ir::Instruction const*, nv50_ir::Value const*) const
00000000005639e0 0000000000000190 t nv50_ir::SchedDataCalculatorGM107::findFirstDef(nv50_ir::Instruction const*) const
0000000000563b70 0000000000000478 t nv50_ir::SchedDataCalculatorGM107::setReuseFlag(nv50_ir::Instruction*)
0000000000563ff0 00000000000003b4 t nv50_ir::CodeEmitterGM107::emitVOTE()
00000000005643b0 00000000000003c8 t nv50_ir::SchedDataCalculatorGM107::needRdDepBar(nv50_ir::Instruction const*) const
0000000000564780 0000000000000330 t nv50_ir::SchedDataCalculatorGM107::findFirstUse(nv50_ir::Instruction const*) const
0000000000564ab0 000000000000047c t nv50_ir::SchedDataCalculatorGM107::insertBarriers(nv50_ir::BasicBlock*)
0000000000564f30 000000000000051c T nv50_ir::SchedDataCalculatorGM107::visit(nv50_ir::BasicBlock*)
0000000000565450 000000000000020c t nv50_ir::CodeEmitterGM107::emitSHFL()
0000000000565660 000000000000030c t nv50_ir::CodeEmitterGM107::emitISETP()
0000000000565970 00000000000003bc t nv50_ir::CodeEmitterGM107::emitTEXS()
0000000000565d30 000000000000033c t nv50_ir::CodeEmitterGM107::emitDSETP()
0000000000566070 0000000000000350 t nv50_ir::CodeEmitterGM107::emitFSETP()
00000000005663c0 0000000000000b08 T nv50_ir::CodeEmitterGM107::emitInstruction(nv50_ir::Instruction*)
0000000000566ed0 0000000000000250 t std::vector<nv50_ir::SchedDataCalculatorGM107::RegScores, std::allocator<nv50_ir::SchedDataCalculatorGM107::RegScores> >::_M_default_append(unsigned long)
0000000000567120 0000000000000134 T nv50_ir::SchedDataCalculatorGM107::visit(nv50_ir::Function*)
0000000000567260 0000000000000140 t std::_Rb_tree<void const*, std::pair<void const* const, void*>, std::_Select1st<std::pair<void const* const, void*> >, std::less<void const*>, std::allocator<std::pair<void const* const, void*> > >::_M_erase(std::_Rb_tree_node<std::pair<void const* const, void*> >*) [clone .isra.0]
00000000005673a0 0000000000000574 t nv50_ir::GM107LegalizeSSA::handlePFETCH(nv50_ir::Instruction*)
0000000000567920 000000000000014c t nv50_ir::GM107LegalizeSSA::handleLOAD(nv50_ir::Instruction*)
0000000000567a70 000000000000003c T nv50_ir::GM107LegalizeSSA::visit(nv50_ir::Instruction*)
0000000000567ab0 00000000000003a0 t nv50_ir::GM107LoweringPass::handleDFDX(nv50_ir::Instruction*)
0000000000567e50 00000000000005fc t nv50_ir::GM107LoweringPass::handlePFETCH(nv50_ir::Instruction*)
0000000000568450 0000000000000294 t nv50_ir::GM107LoweringPass::handlePOPCNT(nv50_ir::Instruction*)
00000000005686f0 00000000000005f8 t nv50_ir::GM107LoweringPass::handleSUQ(nv50_ir::TexInstruction*)
0000000000568cf0 00000000000000c0 t std::_Rb_tree_iterator<std::pair<void const* const, void*> > std::_Rb_tree<void const*, std::pair<void const* const, void*>, std::_Select1st<std::pair<void const* const, void*> >, std::less<void const*>, std::allocator<std::pair<void const* const, void*> > >::_M_emplace_hint_unique<std::piecewise_construct_t const&, std::tuple<void const* const&>, std::tuple<> >(std::_Rb_tree_const_iterator<std::pair<void const* const, void*> >, std::piecewise_construct_t const&, std::tuple<void const* const&>&&, std::tuple<>&&) [clone .isra.0]
0000000000568db0 0000000000001c5c T nv50_ir::GM107LoweringPass::handleManualTXD(nv50_ir::TexInstruction*)
000000000056aa10 00000000000000d4 T nv50_ir::GM107LoweringPass::visit(nv50_ir::Instruction*)
000000000056aaf0 0000000000000014 T nv50_ir::NVC0LegalizeSSA::visit(nv50_ir::Function*)
000000000056ab10 0000000000000008 T nv50_ir::NVC0LoweringPass::visit(nv50_ir::BasicBlock*)
000000000056ab20 00000000000000c8 t nv50_ir::getSrcType(nv50_ir::TexInstruction::ImgFormatDesc const*, int)
000000000056abf0 0000000000000070 t _debug_printf
000000000056ac60 00000000000000d8 T nv50_ir::NVC0LoweringPass::visit(nv50_ir::Function*)
000000000056ad40 000000000000011c T nv50_ir::TargetNVC0::runLegalizePass(nv50_ir::Program*, nv50_ir::CGStage) const
000000000056ae60 0000000000000140 t std::_Rb_tree<void const*, std::pair<void const* const, void*>, std::_Select1st<std::pair<void const* const, void*> >, std::less<void const*>, std::allocator<std::pair<void const* const, void*> > >::_M_erase(std::_Rb_tree_node<std::pair<void const* const, void*> >*) [clone .isra.0]
000000000056afa0 0000000000000140 t nv50_ir::Instruction::getIndirect(int, int) const
000000000056b0e0 00000000000000b8 t nv50_ir::TexInstruction::getIndirectR() const
000000000056b1a0 0000000000000220 t nv50_ir::NVC0LegalizeSSA::handleRCPRSQLib(nv50_ir::Instruction*, nv50_ir::Value**)
000000000056b3c0 0000000000000270 t nv50_ir::NVC0LegalizeSSA::handleRCPRSQ(nv50_ir::Instruction*)
000000000056b630 0000000000000278 t nv50_ir::NVC0LegalizeSSA::handleTEXLOD(nv50_ir::TexInstruction*)
000000000056b8b0 00000000000002a8 t nv50_ir::NVC0LegalizeSSA::handleSET(nv50_ir::CmpInstruction*)
000000000056bb60 0000000000000030 t nv50_ir::NVC0LegalizePostRA::NVC0LegalizePostRA(nv50_ir::Program const*)
000000000056bb60 0000000000000030 T nv50_ir::NVC0LegalizePostRA::NVC0LegalizePostRA(nv50_ir::Program const*)
000000000056bb90 000000000000014c t nv50_ir::NVC0LegalizePostRA::addTexUse(std::__cxx11::list<nv50_ir::NVC0LegalizePostRA::TexUse, std::allocator<nv50_ir::NVC0LegalizePostRA::TexUse> >&, nv50_ir::Instruction*, nv50_ir::Instruction const*)
000000000056bce0 00000000000000f8 t nv50_ir::NVC0LegalizePostRA::propagateJoin(nv50_ir::BasicBlock*)
000000000056bde0 000000000000003c T nv50_ir::NVC0LoweringPass::NVC0LoweringPass(nv50_ir::Program*)
000000000056bde0 000000000000003c t nv50_ir::NVC0LoweringPass::NVC0LoweringPass(nv50_ir::Program*)
000000000056be20 00000000000001fc t nv50_ir::NVC0LoweringPass::loadTexHandle(nv50_ir::Value*, unsigned int)
000000000056c020 00000000000001ec t nv50_ir::NVC0LoweringPass::loadResInfo64(nv50_ir::Value*, unsigned int, unsigned short)
000000000056c210 00000000000001f0 t nv50_ir::NVC0LoweringPass::loadResLength32(nv50_ir::Value*, unsigned int, unsigned short)
000000000056c400 00000000000002dc t nv50_ir::NVC0LoweringPass::loadSuInfo32(nv50_ir::Value*, int, unsigned int, bool)
000000000056c6e0 00000000000002d0 t nv50_ir::NVC0LoweringPass::readTessCoord(nv50_ir::LValue*, int)
000000000056c9b0 00000000000001fc t nv50_ir::NVC0LoweringPass::handleDIV(nv50_ir::Instruction*)
000000000056cbb0 00000000000002cc t nv50_ir::NVC0LoweringPass::handleMOD(nv50_ir::Instruction*)
000000000056ce80 00000000000002e4 t nv50_ir::NVC0LoweringPass::handlePOW(nv50_ir::Instruction*)
000000000056d170 0000000000000320 t nv50_ir::NVC0LoweringPass::calculateSampleOffset(nv50_ir::Value*)
000000000056d490 0000000000000168 t nv50_ir::NVC0LoweringPass::checkPredicate(nv50_ir::Instruction*)
000000000056d600 0000000000000250 t std::unordered_set<nv50_ir::BasicBlock const*, std::hash<nv50_ir::BasicBlock const*>, std::equal_to<nv50_ir::BasicBlock const*>, std::allocator<nv50_ir::BasicBlock const*> >::insert(nv50_ir::BasicBlock const* const&)
000000000056d850 000000000000017c t nv50_ir::NVC0LegalizePostRA::replaceCvt(nv50_ir::Instruction*)
000000000056d9d0 00000000000000ec t nv50_ir::NVC0LegalizePostRA::tryReplaceContWithBra(nv50_ir::BasicBlock*)
000000000056dac0 0000000000000288 t nv50_ir::NVC0LegalizePostRA::replaceZero(nv50_ir::Instruction*)
000000000056dd50 0000000000000390 T nv50_ir::NVC0LegalizePostRA::visit(nv50_ir::BasicBlock*)
000000000056e0e0 0000000000000234 t nv50_ir::NVC0LoweringPass::handleSQRT(nv50_ir::Instruction*) [clone .part.0]
000000000056e320 0000000000000148 t nv50_ir::NVC0LoweringPass::handlePIXLD(nv50_ir::Instruction*)
000000000056e470 00000000000002c0 t nv50_ir::NVC0LoweringPass::handleOUT(nv50_ir::Instruction*)
000000000056e730 0000000000000704 t nv50_ir::NVC0LoweringPass::insertOOBSurfaceOpResult(nv50_ir::TexInstruction*)
000000000056ee40 0000000000000320 t nv50_ir::NVC0LoweringPass::handleTXQ(nv50_ir::TexInstruction*)
000000000056f160 00000000000002cc t nv50_ir::NVC0LoweringPass::handleCasExch(nv50_ir::Instruction*, bool)
000000000056f430 000000000000040c t nv50_ir::NVC0LegalizePostRA::findFirstUsesBB(int, int, nv50_ir::Instruction*, nv50_ir::Instruction const*, std::__cxx11::list<nv50_ir::NVC0LegalizePostRA::TexUse, std::allocator<nv50_ir::NVC0LegalizePostRA::TexUse> >&, std::unordered_set<nv50_ir::BasicBlock const*, std::hash<nv50_ir::BasicBlock const*>, std::equal_to<nv50_ir::BasicBlock const*>, std::allocator<nv50_ir::BasicBlock const*> >&)
000000000056f840 0000000000000138 t nv50_ir::NVC0LegalizePostRA::findFirstUses(nv50_ir::Instruction*, std::__cxx11::list<nv50_ir::NVC0LegalizePostRA::TexUse, std::allocator<nv50_ir::NVC0LegalizePostRA::TexUse> >&)
000000000056f980 0000000000000330 t nv50_ir::NVC0LoweringPass::handleBUFQ(nv50_ir::Instruction*)
000000000056fcb0 00000000000002a4 t nv50_ir::NVC0LoweringPass::handleWRSV(nv50_ir::Instruction*)
000000000056ff60 0000000000000c7c t nv50_ir::NVC0LoweringPass::handleTEX(nv50_ir::TexInstruction*)
0000000000570be0 00000000000003a8 t nv50_ir::NVC0LoweringPass::handleTXD(nv50_ir::TexInstruction*)
0000000000570f90 000000000000040c t nv50_ir::NVC0LegalizeSSA::handleDIV(nv50_ir::Instruction*)
00000000005713a0 000000000000052c t nv50_ir::NVC0LegalizeSSA::handleShift(nv50_ir::Instruction*)
00000000005718d0 0000000000000170 T nv50_ir::NVC0LegalizeSSA::visit(nv50_ir::BasicBlock*)
0000000000571a40 000000000000060c t nv50_ir::NVC0LoweringPass::handleSharedATOMNVE4(nv50_ir::Instruction*)
0000000000572050 0000000000000504 t nv50_ir::NVC0LoweringPass::handleSharedATOM(nv50_ir::Instruction*)
0000000000572560 00000000000002d8 t nv50_ir::NVC0LoweringPass::loadMsAdjInfo32(nv50_ir::TexInstruction::Target, unsigned int, int, nv50_ir::Value*, bool)
0000000000572840 00000000000003a0 t nv50_ir::NVC0LoweringPass::adjustCoordinatesMS(nv50_ir::TexInstruction*)
0000000000572be0 0000000000000360 t nv50_ir::NVC0LoweringPass::handleSUQ(nv50_ir::TexInstruction*)
0000000000572f40 0000000000000d90 t nv50_ir::NVC0LoweringPass::processSurfaceCoordsNVE4(nv50_ir::TexInstruction*)
0000000000573cd0 0000000000000730 t nv50_ir::NVC0LoweringPass::convertSurfaceFormat(nv50_ir::TexInstruction*, nv50_ir::Instruction**)
0000000000574400 0000000000000594 t nv50_ir::NVC0LoweringPass::processSurfaceCoordsNVC0(nv50_ir::TexInstruction*)
00000000005749a0 00000000000009b4 t nv50_ir::NVC0LoweringPass::handleRDSV(nv50_ir::Instruction*)
0000000000575360 000000000000016c t nv50_ir::NVC0LoweringPass::handleEXPORT(nv50_ir::Instruction*)
00000000005754d0 00000000000008bc t nv50_ir::NVC0LoweringPass::handleLDST(nv50_ir::Instruction*)
0000000000575d90 0000000000000328 t nv50_ir::NVC0LoweringPass::handleSurfaceOpNVE4(nv50_ir::TexInstruction*)
00000000005760c0 00000000000003a8 t nv50_ir::NVC0LoweringPass::handleSurfaceOpNVC0(nv50_ir::TexInstruction*)
0000000000576470 0000000000000344 t nv50_ir::NVC0LoweringPass::handleTXLQ(nv50_ir::TexInstruction*)
00000000005767c0 0000000000000640 t nv50_ir::NVC0LoweringPass::handleATOM(nv50_ir::Instruction*)
0000000000576e00 0000000000000284 W std::vector<int, std::allocator<int> >::_M_fill_insert(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, unsigned long, int const&)
0000000000577090 0000000000000128 t void std::vector<nv50_ir::Instruction*, std::allocator<nv50_ir::Instruction*> >::_M_realloc_insert<nv50_ir::Instruction* const&>(__gnu_cxx::__normal_iterator<nv50_ir::Instruction**, std::vector<nv50_ir::Instruction*, std::allocator<nv50_ir::Instruction*> > >, nv50_ir::Instruction* const&)
00000000005771c0 00000000000001a4 t void std::vector<nv50_ir::NVC0LegalizePostRA::TexUse, std::allocator<nv50_ir::NVC0LegalizePostRA::TexUse> >::_M_realloc_insert<nv50_ir::NVC0LegalizePostRA::TexUse const&>(__gnu_cxx::__normal_iterator<nv50_ir::NVC0LegalizePostRA::TexUse*, std::vector<nv50_ir::NVC0LegalizePostRA::TexUse, std::allocator<nv50_ir::NVC0LegalizePostRA::TexUse> > >, nv50_ir::NVC0LegalizePostRA::TexUse const&)
0000000000577370 0000000000000284 t std::vector<nv50_ir::NVC0LegalizePostRA::Limits, std::allocator<nv50_ir::NVC0LegalizePostRA::Limits> >::_M_fill_insert(__gnu_cxx::__normal_iterator<nv50_ir::NVC0LegalizePostRA::Limits*, std::vector<nv50_ir::NVC0LegalizePostRA::Limits, std::allocator<nv50_ir::NVC0LegalizePostRA::Limits> > >, unsigned long, nv50_ir::NVC0LegalizePostRA::Limits const&)
0000000000577600 0000000000000118 t std::vector<nv50_ir::NVC0LegalizePostRA::Limits, std::allocator<nv50_ir::NVC0LegalizePostRA::Limits> >::_M_default_append(unsigned long)
0000000000577720 0000000000000e1c t nv50_ir::NVC0LegalizePostRA::insertTextureBarriers(nv50_ir::Function*)
0000000000578540 000000000000030c T nv50_ir::NVC0LegalizePostRA::visit(nv50_ir::Function*)
0000000000578850 00000000000000c0 t std::_Rb_tree_iterator<std::pair<void const* const, void*> > std::_Rb_tree<void const*, std::pair<void const* const, void*>, std::_Select1st<std::pair<void const* const, void*> >, std::less<void const*>, std::allocator<std::pair<void const* const, void*> > >::_M_emplace_hint_unique<std::piecewise_construct_t const&, std::tuple<void const* const&>, std::tuple<> >(std::_Rb_tree_const_iterator<std::pair<void const* const, void*> >, std::piecewise_construct_t const&, std::tuple<void const* const&>&&, std::tuple<>&&) [clone .isra.0]
0000000000578910 00000000000002a8 t nv50_ir::cloneForward(nv50_ir::Function*, nv50_ir::Instruction*)
0000000000578bc0 0000000000001258 T nv50_ir::NVC0LoweringPass::handleManualTXD(nv50_ir::TexInstruction*)
0000000000579e20 0000000000000f24 t nv50_ir::NVC0LoweringPass::processSurfaceCoordsGM107(nv50_ir::TexInstruction*, nv50_ir::Instruction**)
000000000057ad50 0000000000000094 t nv50_ir::NVC0LoweringPass::handleSurfaceOpGM107(nv50_ir::TexInstruction*)
000000000057adf0 0000000000000480 t nv50_ir::NVC0LoweringPass::visit(nv50_ir::Instruction*)
000000000057b270 0000000000000044 t _mesa_combine_swizzles
000000000057b2c0 0000000000000470 t _mesa_layout_parameters
000000000057b730 0000000000000088 t _mesa_parse_instruction_suffix
000000000057b7c0 0000000000000054 t _mesa_ARBvp_parse_option
000000000057b820 00000000000002d8 t _mesa_ARBfp_parse_option
000000000057bb00 00000000000000e0 t yy_get_previous_state
000000000057bbe0 0000000000000030 t yy_fatal_error.constprop.0
000000000057bc10 00000000000000a0 t _mesa_program_lexer_ensure_buffer_stack
000000000057bcb0 00000000000000b4 t _mesa_program_lexer__switch_to_buffer
000000000057bd70 000000000000006c t _mesa_program_lexer__delete_buffer
000000000057bde0 000000000000006c t _mesa_program_lexer__flush_buffer
000000000057be50 0000000000000098 t _mesa_program_lexer__init_buffer
000000000057bef0 000000000000007c t _mesa_program_lexer__create_buffer
000000000057bf70 00000000000000bc t _mesa_program_lexer_restart
000000000057c030 00000000000046e4 t _mesa_program_lexer_lex
0000000000580720 000000000000008c t _mesa_program_lexer_pop_buffer_state
00000000005807b0 00000000000000bc t _mesa_program_lexer__scan_buffer
0000000000580870 00000000000000a4 t _mesa_program_lexer__scan_bytes
0000000000580920 0000000000000098 t _mesa_program_lexer_lex_init_extra
00000000005809c0 000000000000007c t _mesa_program_lexer_lex_destroy
0000000000580a40 0000000000000044 t _mesa_program_lexer_ctor
0000000000580a90 0000000000000004 t _mesa_program_lexer_dtor
0000000000580aa0 0000000000000004 T _glapi_check_multithread
0000000000580ab0 0000000000000004 T _glapi_set_context
0000000000580ac0 0000000000000004 T _glapi_set_dispatch
0000000000580ad0 0000000000000008 T _glapi_get_dispatch_table_size
0000000000580ae0 00000000000001a4 T _glapi_add_dispatch
0000000000580c90 000000000000006c T _glapi_get_proc_address
0000000000580d00 0000000000000014 t stub_compare
0000000000580d20 0000000000000014 t stub_init_once
0000000000580d40 000000000000001c t stub_find_public
0000000000580d60 0000000000000100 t stub_find_dynamic
0000000000580e60 0000000000000050 t stub_fix_dynamic
0000000000580eb0 0000000000000008 t stub_get_slot
0000000000580ec0 0000000000000018 t stub_get_addr
0000000000580ee0 00000000000000a8 t noop_generic
0000000000580f90 0000000000000004 t u_current_init
0000000000580fa0 0000000000000024 t u_current_set_context
0000000000580fd0 0000000000000020 T _glapi_get_context
0000000000580ff0 0000000000000040 t u_current_set_table
0000000000581030 0000000000000034 T shared_dispatch_stub_0
0000000000581070 0000000000000028 T shared_dispatch_stub_1
00000000005810a0 0000000000000034 T shared_dispatch_stub_2
00000000005810e0 0000000000000034 T shared_dispatch_stub_3
0000000000581120 0000000000000034 T shared_dispatch_stub_4
0000000000581160 0000000000000034 T shared_dispatch_stub_5
00000000005811a0 0000000000000034 T shared_dispatch_stub_6
00000000005811e0 0000000000000034 T shared_dispatch_stub_7
0000000000581220 0000000000000034 T shared_dispatch_stub_8
0000000000581260 0000000000000034 T shared_dispatch_stub_9
00000000005812a0 0000000000000034 T shared_dispatch_stub_10
00000000005812e0 0000000000000028 T shared_dispatch_stub_11
0000000000581310 0000000000000034 T shared_dispatch_stub_12
0000000000581350 0000000000000028 T shared_dispatch_stub_13
0000000000581380 0000000000000034 T shared_dispatch_stub_14
00000000005813c0 0000000000000034 T shared_dispatch_stub_15
0000000000581400 0000000000000034 T shared_dispatch_stub_16
0000000000581440 0000000000000034 T shared_dispatch_stub_17
0000000000581480 0000000000000034 T shared_dispatch_stub_18
00000000005814c0 0000000000000034 T shared_dispatch_stub_19
0000000000581500 0000000000000034 T shared_dispatch_stub_20
0000000000581540 0000000000000034 T shared_dispatch_stub_21
0000000000581580 0000000000000034 T shared_dispatch_stub_22
00000000005815c0 0000000000000034 T shared_dispatch_stub_23
0000000000581600 0000000000000034 T shared_dispatch_stub_24
0000000000581640 0000000000000034 T shared_dispatch_stub_25
0000000000581680 0000000000000034 T shared_dispatch_stub_26
00000000005816c0 0000000000000028 T shared_dispatch_stub_27
00000000005816f0 0000000000000034 T shared_dispatch_stub_28
0000000000581730 0000000000000028 T shared_dispatch_stub_29
0000000000581760 0000000000000034 T shared_dispatch_stub_30
00000000005817a0 0000000000000034 T shared_dispatch_stub_31
00000000005817e0 0000000000000034 T shared_dispatch_stub_32
0000000000581820 0000000000000034 T shared_dispatch_stub_33
0000000000581860 0000000000000034 T shared_dispatch_stub_34
00000000005818a0 0000000000000034 T shared_dispatch_stub_35
00000000005818e0 0000000000000034 T shared_dispatch_stub_36
0000000000581920 0000000000000034 T shared_dispatch_stub_37
0000000000581960 0000000000000034 T shared_dispatch_stub_38
00000000005819a0 0000000000000034 T shared_dispatch_stub_39
00000000005819e0 0000000000000034 T shared_dispatch_stub_40
0000000000581a20 0000000000000034 T shared_dispatch_stub_41
0000000000581a60 0000000000000034 T shared_dispatch_stub_42
0000000000581aa0 0000000000000028 T shared_dispatch_stub_43
0000000000581ad0 0000000000000028 T shared_dispatch_stub_44
0000000000581b00 0000000000000034 T shared_dispatch_stub_45
0000000000581b40 0000000000000028 T shared_dispatch_stub_46
0000000000581b70 0000000000000034 T shared_dispatch_stub_47
0000000000581bb0 0000000000000034 T shared_dispatch_stub_48
0000000000581bf0 0000000000000034 T shared_dispatch_stub_49
0000000000581c30 0000000000000034 T shared_dispatch_stub_50
0000000000581c70 0000000000000034 T shared_dispatch_stub_51
0000000000581cb0 0000000000000034 T shared_dispatch_stub_52
0000000000581cf0 0000000000000034 T shared_dispatch_stub_53
0000000000581d30 0000000000000028 T shared_dispatch_stub_54
0000000000581d60 0000000000000034 T shared_dispatch_stub_55
0000000000581da0 0000000000000028 T shared_dispatch_stub_56
0000000000581dd0 0000000000000034 T shared_dispatch_stub_57
0000000000581e10 0000000000000034 T shared_dispatch_stub_58
0000000000581e50 0000000000000034 T shared_dispatch_stub_59
0000000000581e90 0000000000000034 T shared_dispatch_stub_60
0000000000581ed0 0000000000000034 T shared_dispatch_stub_61
0000000000581f10 0000000000000028 T shared_dispatch_stub_62
0000000000581f40 0000000000000034 T shared_dispatch_stub_63
0000000000581f80 0000000000000028 T shared_dispatch_stub_64
0000000000581fb0 0000000000000034 T shared_dispatch_stub_65
0000000000581ff0 0000000000000034 T shared_dispatch_stub_66
0000000000582030 0000000000000034 T shared_dispatch_stub_67
0000000000582070 0000000000000034 T shared_dispatch_stub_68
00000000005820b0 0000000000000034 T shared_dispatch_stub_69
00000000005820f0 0000000000000028 T shared_dispatch_stub_70
0000000000582120 0000000000000034 T shared_dispatch_stub_71
0000000000582160 0000000000000028 T shared_dispatch_stub_72
0000000000582190 0000000000000034 T shared_dispatch_stub_73
00000000005821d0 0000000000000034 T shared_dispatch_stub_74
0000000000582210 0000000000000034 T shared_dispatch_stub_75
0000000000582250 0000000000000034 T shared_dispatch_stub_76
0000000000582290 0000000000000034 T shared_dispatch_stub_77
00000000005822d0 0000000000000028 T shared_dispatch_stub_78
0000000000582300 0000000000000034 T shared_dispatch_stub_79
0000000000582340 0000000000000028 T shared_dispatch_stub_80
0000000000582370 0000000000000034 T shared_dispatch_stub_81
00000000005823b0 0000000000000034 T shared_dispatch_stub_82
00000000005823f0 0000000000000034 T shared_dispatch_stub_83
0000000000582430 0000000000000034 T shared_dispatch_stub_84
0000000000582470 0000000000000034 T shared_dispatch_stub_85
00000000005824b0 0000000000000028 T shared_dispatch_stub_86
00000000005824e0 0000000000000034 T shared_dispatch_stub_87
0000000000582520 0000000000000028 T shared_dispatch_stub_88
0000000000582550 0000000000000034 T shared_dispatch_stub_89
0000000000582590 0000000000000034 T shared_dispatch_stub_90
00000000005825d0 0000000000000034 T shared_dispatch_stub_91
0000000000582610 0000000000000034 T shared_dispatch_stub_92
0000000000582650 0000000000000034 T shared_dispatch_stub_93
0000000000582690 0000000000000028 T shared_dispatch_stub_94
00000000005826c0 0000000000000034 T shared_dispatch_stub_95
0000000000582700 0000000000000028 T shared_dispatch_stub_96
0000000000582730 0000000000000034 T shared_dispatch_stub_97
0000000000582770 0000000000000034 T shared_dispatch_stub_98
00000000005827b0 0000000000000034 T shared_dispatch_stub_99
00000000005827f0 0000000000000034 T shared_dispatch_stub_100
0000000000582830 0000000000000034 T shared_dispatch_stub_101
0000000000582870 0000000000000028 T shared_dispatch_stub_102
00000000005828a0 0000000000000034 T shared_dispatch_stub_103
00000000005828e0 0000000000000028 T shared_dispatch_stub_104
0000000000582910 0000000000000034 T shared_dispatch_stub_105
0000000000582950 0000000000000034 T shared_dispatch_stub_106
0000000000582990 0000000000000034 T shared_dispatch_stub_107
00000000005829d0 0000000000000034 T shared_dispatch_stub_108
0000000000582a10 0000000000000034 T shared_dispatch_stub_109
0000000000582a50 0000000000000028 T shared_dispatch_stub_110
0000000000582a80 0000000000000034 T shared_dispatch_stub_111
0000000000582ac0 0000000000000028 T shared_dispatch_stub_112
0000000000582af0 0000000000000034 T shared_dispatch_stub_113
0000000000582b30 0000000000000034 T shared_dispatch_stub_114
0000000000582b70 0000000000000034 T shared_dispatch_stub_115
0000000000582bb0 0000000000000034 T shared_dispatch_stub_116
0000000000582bf0 0000000000000034 T shared_dispatch_stub_117
0000000000582c30 0000000000000028 T shared_dispatch_stub_118
0000000000582c60 0000000000000034 T shared_dispatch_stub_119
0000000000582ca0 0000000000000028 T shared_dispatch_stub_120
0000000000582cd0 0000000000000034 T shared_dispatch_stub_121
0000000000582d10 0000000000000034 T shared_dispatch_stub_122
0000000000582d50 0000000000000034 T shared_dispatch_stub_123
0000000000582d90 0000000000000034 T shared_dispatch_stub_124
0000000000582dd0 0000000000000034 T shared_dispatch_stub_125
0000000000582e10 0000000000000028 T shared_dispatch_stub_126
0000000000582e40 0000000000000034 T shared_dispatch_stub_127
0000000000582e80 0000000000000028 T shared_dispatch_stub_128
0000000000582eb0 0000000000000034 T shared_dispatch_stub_129
0000000000582ef0 0000000000000034 T shared_dispatch_stub_130
0000000000582f30 0000000000000034 T shared_dispatch_stub_131
0000000000582f70 0000000000000034 T shared_dispatch_stub_132
0000000000582fb0 0000000000000034 T shared_dispatch_stub_133
0000000000582ff0 0000000000000028 T shared_dispatch_stub_134
0000000000583020 0000000000000034 T shared_dispatch_stub_135
0000000000583060 0000000000000028 T shared_dispatch_stub_136
0000000000583090 0000000000000034 T shared_dispatch_stub_137
00000000005830d0 0000000000000034 T shared_dispatch_stub_138
0000000000583110 0000000000000034 T shared_dispatch_stub_139
0000000000583150 0000000000000034 T shared_dispatch_stub_140
0000000000583190 0000000000000034 T shared_dispatch_stub_141
00000000005831d0 0000000000000028 T shared_dispatch_stub_142
0000000000583200 0000000000000034 T shared_dispatch_stub_143
0000000000583240 0000000000000028 T shared_dispatch_stub_144
0000000000583270 0000000000000034 T shared_dispatch_stub_145
00000000005832b0 0000000000000034 T shared_dispatch_stub_146
00000000005832f0 0000000000000034 T shared_dispatch_stub_147
0000000000583330 0000000000000034 T shared_dispatch_stub_148
0000000000583370 0000000000000034 T shared_dispatch_stub_149
00000000005833b0 0000000000000034 T shared_dispatch_stub_150
00000000005833f0 0000000000000034 T shared_dispatch_stub_151
0000000000583430 0000000000000034 T shared_dispatch_stub_152
0000000000583470 0000000000000034 T shared_dispatch_stub_153
00000000005834b0 0000000000000034 T shared_dispatch_stub_154
00000000005834f0 0000000000000034 T shared_dispatch_stub_155
0000000000583530 0000000000000034 T shared_dispatch_stub_156
0000000000583570 0000000000000034 T shared_dispatch_stub_157
00000000005835b0 0000000000000034 T shared_dispatch_stub_158
00000000005835f0 0000000000000034 T shared_dispatch_stub_159
0000000000583630 0000000000000034 T shared_dispatch_stub_160
0000000000583670 0000000000000034 T shared_dispatch_stub_161
00000000005836b0 0000000000000034 T shared_dispatch_stub_162
00000000005836f0 0000000000000034 T shared_dispatch_stub_163
0000000000583730 0000000000000034 T shared_dispatch_stub_164
0000000000583770 0000000000000034 T shared_dispatch_stub_165
00000000005837b0 0000000000000034 T shared_dispatch_stub_166
00000000005837f0 0000000000000034 T shared_dispatch_stub_167
0000000000583830 0000000000000028 T shared_dispatch_stub_168
0000000000583860 0000000000000034 T shared_dispatch_stub_169
00000000005838a0 0000000000000034 T shared_dispatch_stub_170
00000000005838e0 0000000000000034 T shared_dispatch_stub_171
0000000000583920 0000000000000034 T shared_dispatch_stub_172
0000000000583960 0000000000000028 T shared_dispatch_stub_173
0000000000583990 0000000000000034 T shared_dispatch_stub_174
00000000005839d0 0000000000000034 T shared_dispatch_stub_175
0000000000583a10 0000000000000034 T shared_dispatch_stub_176
0000000000583a50 0000000000000034 T shared_dispatch_stub_177
0000000000583a90 0000000000000034 T shared_dispatch_stub_178
0000000000583ad0 0000000000000034 T shared_dispatch_stub_179
0000000000583b10 0000000000000034 T shared_dispatch_stub_180
0000000000583b50 0000000000000034 T shared_dispatch_stub_181
0000000000583b90 0000000000000034 T shared_dispatch_stub_182
0000000000583bd0 0000000000000034 T shared_dispatch_stub_183
0000000000583c10 0000000000000034 T shared_dispatch_stub_184
0000000000583c50 0000000000000034 T shared_dispatch_stub_185
0000000000583c90 0000000000000034 T shared_dispatch_stub_186
0000000000583cd0 0000000000000034 T shared_dispatch_stub_187
0000000000583d10 0000000000000034 T shared_dispatch_stub_188
0000000000583d50 0000000000000034 T shared_dispatch_stub_189
0000000000583d90 0000000000000034 T shared_dispatch_stub_190
0000000000583dd0 0000000000000034 T shared_dispatch_stub_191
0000000000583e10 0000000000000034 T shared_dispatch_stub_192
0000000000583e50 0000000000000034 T shared_dispatch_stub_193
0000000000583e90 0000000000000034 T shared_dispatch_stub_194
0000000000583ed0 0000000000000034 T shared_dispatch_stub_195
0000000000583f10 0000000000000034 T shared_dispatch_stub_196
0000000000583f50 0000000000000028 T shared_dispatch_stub_197
0000000000583f80 0000000000000034 T shared_dispatch_stub_198
0000000000583fc0 0000000000000028 T shared_dispatch_stub_199
0000000000583ff0 0000000000000028 T shared_dispatch_stub_200
0000000000584020 0000000000000034 T shared_dispatch_stub_201
0000000000584060 0000000000000034 T shared_dispatch_stub_202
00000000005840a0 0000000000000034 T shared_dispatch_stub_203
00000000005840e0 0000000000000028 T shared_dispatch_stub_204
0000000000584110 0000000000000028 T shared_dispatch_stub_205
0000000000584140 0000000000000028 T shared_dispatch_stub_206
0000000000584170 0000000000000034 T shared_dispatch_stub_207
00000000005841b0 0000000000000028 T shared_dispatch_stub_208
00000000005841e0 0000000000000034 T shared_dispatch_stub_209
0000000000584220 0000000000000034 T shared_dispatch_stub_210
0000000000584260 0000000000000034 T shared_dispatch_stub_211
00000000005842a0 0000000000000034 T shared_dispatch_stub_212
00000000005842e0 0000000000000034 T shared_dispatch_stub_213
0000000000584320 0000000000000034 T shared_dispatch_stub_214
0000000000584360 0000000000000034 T shared_dispatch_stub_215
00000000005843a0 0000000000000028 T shared_dispatch_stub_216
00000000005843d0 0000000000000028 T shared_dispatch_stub_217
0000000000584400 0000000000000028 T shared_dispatch_stub_218
0000000000584430 0000000000000034 T shared_dispatch_stub_219
0000000000584470 0000000000000034 T shared_dispatch_stub_220
00000000005844b0 0000000000000034 T shared_dispatch_stub_221
00000000005844f0 0000000000000034 T shared_dispatch_stub_222
0000000000584530 0000000000000034 T shared_dispatch_stub_223
0000000000584570 0000000000000034 T shared_dispatch_stub_224
00000000005845b0 0000000000000034 T shared_dispatch_stub_225
00000000005845f0 0000000000000034 T shared_dispatch_stub_226
0000000000584630 0000000000000034 T shared_dispatch_stub_227
0000000000584670 0000000000000028 T shared_dispatch_stub_228
00000000005846a0 0000000000000034 T shared_dispatch_stub_229
00000000005846e0 0000000000000028 T shared_dispatch_stub_230
0000000000584710 0000000000000034 T shared_dispatch_stub_231
0000000000584750 0000000000000028 T shared_dispatch_stub_232
0000000000584780 0000000000000034 T shared_dispatch_stub_233
00000000005847c0 0000000000000028 T shared_dispatch_stub_234
00000000005847f0 0000000000000034 T shared_dispatch_stub_235
0000000000584830 0000000000000034 T shared_dispatch_stub_236
0000000000584870 0000000000000034 T shared_dispatch_stub_237
00000000005848b0 0000000000000034 T shared_dispatch_stub_238
00000000005848f0 0000000000000034 T shared_dispatch_stub_239
0000000000584930 0000000000000034 T shared_dispatch_stub_240
0000000000584970 0000000000000034 T shared_dispatch_stub_241
00000000005849b0 0000000000000034 T shared_dispatch_stub_242
00000000005849f0 0000000000000034 T shared_dispatch_stub_243
0000000000584a30 0000000000000034 T shared_dispatch_stub_244
0000000000584a70 0000000000000034 T shared_dispatch_stub_245
0000000000584ab0 0000000000000028 T shared_dispatch_stub_246
0000000000584ae0 0000000000000034 T shared_dispatch_stub_247
0000000000584b20 0000000000000034 T shared_dispatch_stub_248
0000000000584b60 0000000000000034 T shared_dispatch_stub_249
0000000000584ba0 0000000000000034 T shared_dispatch_stub_250
0000000000584be0 0000000000000034 T shared_dispatch_stub_251
0000000000584c20 0000000000000034 T shared_dispatch_stub_252
0000000000584c60 0000000000000034 T shared_dispatch_stub_253
0000000000584ca0 0000000000000034 T shared_dispatch_stub_254
0000000000584ce0 0000000000000034 T shared_dispatch_stub_255
0000000000584d20 0000000000000034 T shared_dispatch_stub_256
0000000000584d60 0000000000000034 T shared_dispatch_stub_257
0000000000584da0 0000000000000034 T shared_dispatch_stub_258
0000000000584de0 0000000000000034 T shared_dispatch_stub_259
0000000000584e20 0000000000000034 T shared_dispatch_stub_260
0000000000584e60 0000000000000028 T shared_dispatch_stub_261
0000000000584e90 0000000000000034 T shared_dispatch_stub_262
0000000000584ed0 0000000000000034 T shared_dispatch_stub_263
0000000000584f10 0000000000000034 T shared_dispatch_stub_264
0000000000584f50 0000000000000034 T shared_dispatch_stub_265
0000000000584f90 0000000000000034 T shared_dispatch_stub_266
0000000000584fd0 0000000000000034 T shared_dispatch_stub_267
0000000000585010 0000000000000034 T shared_dispatch_stub_268
0000000000585050 0000000000000034 T shared_dispatch_stub_269
0000000000585090 0000000000000034 T shared_dispatch_stub_270
00000000005850d0 0000000000000034 T shared_dispatch_stub_271
0000000000585110 0000000000000034 T shared_dispatch_stub_272
0000000000585150 0000000000000034 T shared_dispatch_stub_273
0000000000585190 0000000000000034 T shared_dispatch_stub_274
00000000005851d0 0000000000000034 T shared_dispatch_stub_275
0000000000585210 0000000000000034 T shared_dispatch_stub_276
0000000000585250 0000000000000034 T shared_dispatch_stub_277
0000000000585290 0000000000000034 T shared_dispatch_stub_278
00000000005852d0 0000000000000034 T shared_dispatch_stub_279
0000000000585310 0000000000000034 T shared_dispatch_stub_280
0000000000585350 0000000000000034 T shared_dispatch_stub_281
0000000000585390 0000000000000034 T shared_dispatch_stub_282
00000000005853d0 0000000000000034 T shared_dispatch_stub_283
0000000000585410 0000000000000034 T shared_dispatch_stub_284
0000000000585450 0000000000000034 T shared_dispatch_stub_285
0000000000585490 0000000000000034 T shared_dispatch_stub_286
00000000005854d0 0000000000000034 T shared_dispatch_stub_287
0000000000585510 0000000000000028 T shared_dispatch_stub_288
0000000000585540 0000000000000028 T shared_dispatch_stub_289
0000000000585570 0000000000000028 T shared_dispatch_stub_290
00000000005855a0 0000000000000034 T shared_dispatch_stub_291
00000000005855e0 0000000000000034 T shared_dispatch_stub_292
0000000000585620 0000000000000034 T shared_dispatch_stub_293
0000000000585660 0000000000000034 T shared_dispatch_stub_294
00000000005856a0 0000000000000034 T shared_dispatch_stub_295
00000000005856e0 0000000000000028 T shared_dispatch_stub_296
0000000000585710 0000000000000028 T shared_dispatch_stub_297
0000000000585740 0000000000000028 T shared_dispatch_stub_298
0000000000585770 0000000000000028 T shared_dispatch_stub_299
00000000005857a0 0000000000000028 T shared_dispatch_stub_300
00000000005857d0 0000000000000028 T shared_dispatch_stub_301
0000000000585800 0000000000000028 T shared_dispatch_stub_302
0000000000585830 0000000000000028 T shared_dispatch_stub_303
0000000000585860 0000000000000028 T shared_dispatch_stub_304
0000000000585890 0000000000000034 T shared_dispatch_stub_305
00000000005858d0 0000000000000034 T shared_dispatch_stub_306
0000000000585910 0000000000000034 T shared_dispatch_stub_307
0000000000585950 0000000000000034 T shared_dispatch_stub_308
0000000000585990 0000000000000034 T shared_dispatch_stub_309
00000000005859d0 0000000000000034 T shared_dispatch_stub_310
0000000000585a10 0000000000000034 T shared_dispatch_stub_311
0000000000585a50 0000000000000034 T shared_dispatch_stub_312
0000000000585a90 0000000000000034 T shared_dispatch_stub_313
0000000000585ad0 0000000000000034 T shared_dispatch_stub_314
0000000000585b10 0000000000000034 T shared_dispatch_stub_315
0000000000585b50 0000000000000034 T shared_dispatch_stub_316
0000000000585b90 0000000000000034 T shared_dispatch_stub_317
0000000000585bd0 0000000000000034 T shared_dispatch_stub_318
0000000000585c10 0000000000000028 T shared_dispatch_stub_319
0000000000585c40 0000000000000034 T shared_dispatch_stub_320
0000000000585c80 0000000000000034 T shared_dispatch_stub_321
0000000000585cc0 0000000000000034 T shared_dispatch_stub_322
0000000000585d00 0000000000000034 T shared_dispatch_stub_323
0000000000585d40 0000000000000034 T shared_dispatch_stub_324
0000000000585d80 0000000000000034 T shared_dispatch_stub_325
0000000000585dc0 0000000000000034 T shared_dispatch_stub_326
0000000000585e00 0000000000000034 T shared_dispatch_stub_327
0000000000585e40 0000000000000034 T shared_dispatch_stub_328
0000000000585e80 0000000000000034 T shared_dispatch_stub_329
0000000000585ec0 0000000000000034 T shared_dispatch_stub_330
0000000000585f00 0000000000000034 T shared_dispatch_stub_331
0000000000585f40 0000000000000034 T shared_dispatch_stub_332
0000000000585f80 0000000000000034 T shared_dispatch_stub_333
0000000000585fc0 0000000000000028 T shared_dispatch_stub_334
0000000000585ff0 0000000000000034 T shared_dispatch_stub_335
0000000000586030 0000000000000028 T shared_dispatch_stub_336
0000000000586060 0000000000000034 T shared_dispatch_stub_337
00000000005860a0 0000000000000034 T shared_dispatch_stub_338
00000000005860e0 0000000000000034 T shared_dispatch_stub_339
0000000000586120 0000000000000034 T shared_dispatch_stub_340
0000000000586160 0000000000000034 T shared_dispatch_stub_341
00000000005861a0 0000000000000034 T shared_dispatch_stub_342
00000000005861e0 0000000000000034 T shared_dispatch_stub_343
0000000000586220 0000000000000034 T shared_dispatch_stub_344
0000000000586260 0000000000000034 T shared_dispatch_stub_345
00000000005862a0 0000000000000034 T shared_dispatch_stub_346
00000000005862e0 0000000000000034 T shared_dispatch_stub_347
0000000000586320 0000000000000034 T shared_dispatch_stub_348
0000000000586360 0000000000000034 T shared_dispatch_stub_349
00000000005863a0 0000000000000034 T shared_dispatch_stub_350
00000000005863e0 0000000000000034 T shared_dispatch_stub_351
0000000000586420 0000000000000034 T shared_dispatch_stub_352
0000000000586460 0000000000000034 T shared_dispatch_stub_353
00000000005864a0 0000000000000034 T shared_dispatch_stub_354
00000000005864e0 0000000000000034 T shared_dispatch_stub_355
0000000000586520 0000000000000034 T shared_dispatch_stub_356
0000000000586560 0000000000000034 T shared_dispatch_stub_357
00000000005865a0 0000000000000034 T shared_dispatch_stub_358
00000000005865e0 0000000000000034 T shared_dispatch_stub_359
0000000000586620 0000000000000034 T shared_dispatch_stub_360
0000000000586660 0000000000000034 T shared_dispatch_stub_361
00000000005866a0 0000000000000034 T shared_dispatch_stub_362
00000000005866e0 0000000000000034 T shared_dispatch_stub_363
0000000000586720 0000000000000034 T shared_dispatch_stub_364
0000000000586760 0000000000000034 T shared_dispatch_stub_365
00000000005867a0 0000000000000034 T shared_dispatch_stub_366
00000000005867e0 0000000000000034 T shared_dispatch_stub_367
0000000000586820 0000000000000034 T shared_dispatch_stub_368
0000000000586860 0000000000000034 T shared_dispatch_stub_369
00000000005868a0 0000000000000034 T shared_dispatch_stub_370
00000000005868e0 0000000000000034 T shared_dispatch_stub_371
0000000000586920 0000000000000034 T shared_dispatch_stub_372
0000000000586960 0000000000000034 T shared_dispatch_stub_373
00000000005869a0 0000000000000034 T shared_dispatch_stub_374
00000000005869e0 0000000000000034 T shared_dispatch_stub_375
0000000000586a20 0000000000000034 T shared_dispatch_stub_376
0000000000586a60 0000000000000034 T shared_dispatch_stub_377
0000000000586aa0 0000000000000034 T shared_dispatch_stub_378
0000000000586ae0 0000000000000034 T shared_dispatch_stub_379
0000000000586b20 0000000000000034 T shared_dispatch_stub_380
0000000000586b60 0000000000000034 T shared_dispatch_stub_381
0000000000586ba0 0000000000000034 T shared_dispatch_stub_382
0000000000586be0 0000000000000034 T shared_dispatch_stub_383
0000000000586c20 0000000000000034 T shared_dispatch_stub_384
0000000000586c60 0000000000000034 T shared_dispatch_stub_385
0000000000586ca0 0000000000000034 T shared_dispatch_stub_386
0000000000586ce0 0000000000000034 T shared_dispatch_stub_387
0000000000586d20 0000000000000034 T shared_dispatch_stub_388
0000000000586d60 0000000000000034 T shared_dispatch_stub_389
0000000000586da0 0000000000000034 T shared_dispatch_stub_390
0000000000586de0 0000000000000034 T shared_dispatch_stub_391
0000000000586e20 0000000000000034 T shared_dispatch_stub_392
0000000000586e60 0000000000000034 T shared_dispatch_stub_393
0000000000586ea0 0000000000000034 T shared_dispatch_stub_394
0000000000586ee0 0000000000000034 T shared_dispatch_stub_395
0000000000586f20 0000000000000034 T shared_dispatch_stub_396
0000000000586f60 0000000000000034 T shared_dispatch_stub_397
0000000000586fa0 0000000000000034 T shared_dispatch_stub_398
0000000000586fe0 0000000000000034 T shared_dispatch_stub_399
0000000000587020 0000000000000034 T shared_dispatch_stub_400
0000000000587060 0000000000000034 T shared_dispatch_stub_401
00000000005870a0 0000000000000034 T shared_dispatch_stub_402
00000000005870e0 0000000000000034 T shared_dispatch_stub_403
0000000000587120 0000000000000034 T shared_dispatch_stub_404
0000000000587160 0000000000000034 T shared_dispatch_stub_405
00000000005871a0 0000000000000034 T shared_dispatch_stub_406
00000000005871e0 0000000000000034 T shared_dispatch_stub_407
0000000000587220 0000000000000034 T shared_dispatch_stub_408
0000000000587260 0000000000000034 T shared_dispatch_stub_409
00000000005872a0 0000000000000034 T shared_dispatch_stub_410
00000000005872e0 0000000000000034 T shared_dispatch_stub_411
0000000000587320 0000000000000034 T shared_dispatch_stub_412
0000000000587360 0000000000000034 T shared_dispatch_stub_413
00000000005873a0 0000000000000034 T shared_dispatch_stub_414
00000000005873e0 0000000000000034 T shared_dispatch_stub_415
0000000000587420 0000000000000034 T shared_dispatch_stub_416
0000000000587460 0000000000000034 T shared_dispatch_stub_417
00000000005874a0 0000000000000034 T shared_dispatch_stub_418
00000000005874e0 0000000000000034 T shared_dispatch_stub_419
0000000000587520 0000000000000034 T shared_dispatch_stub_420
0000000000587560 0000000000000034 T shared_dispatch_stub_421
00000000005875a0 0000000000000028 T shared_dispatch_stub_422
00000000005875d0 0000000000000034 T shared_dispatch_stub_423
0000000000587610 0000000000000034 T shared_dispatch_stub_424
0000000000587650 0000000000000034 T shared_dispatch_stub_425
0000000000587690 0000000000000034 T shared_dispatch_stub_426
00000000005876d0 0000000000000034 T shared_dispatch_stub_427
0000000000587710 0000000000000034 T shared_dispatch_stub_428
0000000000587750 0000000000000034 T shared_dispatch_stub_429
0000000000587790 0000000000000034 T shared_dispatch_stub_430
00000000005877d0 0000000000000028 T shared_dispatch_stub_431
0000000000587800 0000000000000034 T shared_dispatch_stub_432
0000000000587840 0000000000000034 T shared_dispatch_stub_433
0000000000587880 0000000000000034 T shared_dispatch_stub_434
00000000005878c0 0000000000000034 T shared_dispatch_stub_435
0000000000587900 0000000000000034 T shared_dispatch_stub_436
0000000000587940 0000000000000034 T shared_dispatch_stub_437
0000000000587980 0000000000000034 T shared_dispatch_stub_438
00000000005879c0 0000000000000034 T shared_dispatch_stub_439
0000000000587a00 0000000000000034 T shared_dispatch_stub_440
0000000000587a40 0000000000000034 T shared_dispatch_stub_441
0000000000587a80 0000000000000034 T shared_dispatch_stub_442
0000000000587ac0 0000000000000034 T shared_dispatch_stub_443
0000000000587b00 0000000000000028 T shared_dispatch_stub_444
0000000000587b30 0000000000000034 T shared_dispatch_stub_445
0000000000587b70 0000000000000028 T shared_dispatch_stub_446
0000000000587ba0 0000000000000034 T shared_dispatch_stub_447
0000000000587be0 0000000000000034 T shared_dispatch_stub_448
0000000000587c20 0000000000000034 T shared_dispatch_stub_449
0000000000587c60 0000000000000034 T shared_dispatch_stub_450
0000000000587ca0 0000000000000034 T shared_dispatch_stub_451
0000000000587ce0 0000000000000028 T shared_dispatch_stub_452
0000000000587d10 0000000000000034 T shared_dispatch_stub_453
0000000000587d50 0000000000000028 T shared_dispatch_stub_454
0000000000587d80 0000000000000034 T shared_dispatch_stub_455
0000000000587dc0 0000000000000034 T shared_dispatch_stub_456
0000000000587e00 0000000000000034 T shared_dispatch_stub_457
0000000000587e40 0000000000000034 T shared_dispatch_stub_458
0000000000587e80 0000000000000034 T shared_dispatch_stub_459
0000000000587ec0 0000000000000034 T shared_dispatch_stub_460
0000000000587f00 0000000000000034 T shared_dispatch_stub_461
0000000000587f40 0000000000000034 T shared_dispatch_stub_462
0000000000587f80 0000000000000034 T shared_dispatch_stub_463
0000000000587fc0 0000000000000034 T shared_dispatch_stub_464
0000000000588000 0000000000000034 T shared_dispatch_stub_465
0000000000588040 0000000000000034 T shared_dispatch_stub_466
0000000000588080 0000000000000034 T shared_dispatch_stub_467
00000000005880c0 0000000000000034 T shared_dispatch_stub_468
0000000000588100 0000000000000034 T shared_dispatch_stub_469
0000000000588140 0000000000000034 T shared_dispatch_stub_470
0000000000588180 0000000000000034 T shared_dispatch_stub_471
00000000005881c0 0000000000000034 T shared_dispatch_stub_472
0000000000588200 0000000000000034 T shared_dispatch_stub_473
0000000000588240 0000000000000034 T shared_dispatch_stub_474
0000000000588280 0000000000000034 T shared_dispatch_stub_475
00000000005882c0 0000000000000034 T shared_dispatch_stub_476
0000000000588300 0000000000000034 T shared_dispatch_stub_477
0000000000588340 0000000000000034 T shared_dispatch_stub_478
0000000000588380 0000000000000034 T shared_dispatch_stub_479
00000000005883c0 0000000000000034 T shared_dispatch_stub_480
0000000000588400 0000000000000034 T shared_dispatch_stub_481
0000000000588440 0000000000000034 T shared_dispatch_stub_482
0000000000588480 0000000000000028 T shared_dispatch_stub_483
00000000005884b0 0000000000000034 T shared_dispatch_stub_484
00000000005884f0 0000000000000034 T shared_dispatch_stub_485
0000000000588530 0000000000000034 T shared_dispatch_stub_486
0000000000588570 0000000000000034 T shared_dispatch_stub_487
00000000005885b0 0000000000000034 T shared_dispatch_stub_488
00000000005885f0 0000000000000034 T shared_dispatch_stub_489
0000000000588630 0000000000000034 T shared_dispatch_stub_490
0000000000588670 0000000000000034 T shared_dispatch_stub_491
00000000005886b0 0000000000000034 T shared_dispatch_stub_492
00000000005886f0 0000000000000034 T shared_dispatch_stub_493
0000000000588730 0000000000000034 T shared_dispatch_stub_494
0000000000588770 0000000000000034 T shared_dispatch_stub_495
00000000005887b0 0000000000000034 T shared_dispatch_stub_496
00000000005887f0 0000000000000034 T shared_dispatch_stub_497
0000000000588830 0000000000000034 T shared_dispatch_stub_498
0000000000588870 0000000000000034 T shared_dispatch_stub_499
00000000005888b0 0000000000000034 T shared_dispatch_stub_500
00000000005888f0 0000000000000034 T shared_dispatch_stub_501
0000000000588930 0000000000000034 T shared_dispatch_stub_502
0000000000588970 0000000000000034 T shared_dispatch_stub_503
00000000005889b0 0000000000000034 T shared_dispatch_stub_504
00000000005889f0 0000000000000034 T shared_dispatch_stub_505
0000000000588a30 0000000000000034 T shared_dispatch_stub_506
0000000000588a70 0000000000000034 T shared_dispatch_stub_507
0000000000588ab0 0000000000000034 T shared_dispatch_stub_508
0000000000588af0 0000000000000034 T shared_dispatch_stub_509
0000000000588b30 0000000000000034 T shared_dispatch_stub_510
0000000000588b70 0000000000000034 T shared_dispatch_stub_511
0000000000588bb0 0000000000000034 T shared_dispatch_stub_512
0000000000588bf0 0000000000000034 T shared_dispatch_stub_513
0000000000588c30 0000000000000034 T shared_dispatch_stub_514
0000000000588c70 0000000000000034 T shared_dispatch_stub_515
0000000000588cb0 0000000000000034 T shared_dispatch_stub_516
0000000000588cf0 0000000000000034 T shared_dispatch_stub_517
0000000000588d30 0000000000000034 T shared_dispatch_stub_518
0000000000588d70 0000000000000034 T shared_dispatch_stub_519
0000000000588db0 0000000000000034 T shared_dispatch_stub_520
0000000000588df0 0000000000000034 T shared_dispatch_stub_521
0000000000588e30 0000000000000034 T shared_dispatch_stub_522
0000000000588e70 0000000000000034 T shared_dispatch_stub_523
0000000000588eb0 0000000000000034 T shared_dispatch_stub_524
0000000000588ef0 0000000000000034 T shared_dispatch_stub_525
0000000000588f30 0000000000000034 T shared_dispatch_stub_526
0000000000588f70 0000000000000034 T shared_dispatch_stub_527
0000000000588fb0 0000000000000034 T shared_dispatch_stub_528
0000000000588ff0 0000000000000034 T shared_dispatch_stub_529
0000000000589030 0000000000000034 T shared_dispatch_stub_530
0000000000589070 0000000000000034 T shared_dispatch_stub_531
00000000005890b0 0000000000000034 T shared_dispatch_stub_532
00000000005890f0 0000000000000034 T shared_dispatch_stub_533
0000000000589130 0000000000000034 T shared_dispatch_stub_534
0000000000589170 0000000000000034 T shared_dispatch_stub_535
00000000005891b0 0000000000000034 T shared_dispatch_stub_536
00000000005891f0 0000000000000034 T shared_dispatch_stub_537
0000000000589230 0000000000000034 T shared_dispatch_stub_538
0000000000589270 0000000000000034 T shared_dispatch_stub_539
00000000005892b0 0000000000000034 T shared_dispatch_stub_540
00000000005892f0 0000000000000034 T shared_dispatch_stub_541
0000000000589330 0000000000000034 T shared_dispatch_stub_542
0000000000589370 0000000000000034 T shared_dispatch_stub_543
00000000005893b0 0000000000000034 T shared_dispatch_stub_544
00000000005893f0 0000000000000034 T shared_dispatch_stub_545
0000000000589430 0000000000000034 T shared_dispatch_stub_546
0000000000589470 0000000000000034 T shared_dispatch_stub_547
00000000005894b0 0000000000000034 T shared_dispatch_stub_548
00000000005894f0 0000000000000034 T shared_dispatch_stub_549
0000000000589530 0000000000000034 T shared_dispatch_stub_550
0000000000589570 0000000000000034 T shared_dispatch_stub_551
00000000005895b0 0000000000000034 T shared_dispatch_stub_552
00000000005895f0 0000000000000034 T shared_dispatch_stub_553
0000000000589630 0000000000000034 T shared_dispatch_stub_554
0000000000589670 0000000000000034 T shared_dispatch_stub_555
00000000005896b0 0000000000000034 T shared_dispatch_stub_556
00000000005896f0 0000000000000034 T shared_dispatch_stub_557
0000000000589730 0000000000000034 T shared_dispatch_stub_558
0000000000589770 0000000000000034 T shared_dispatch_stub_559
00000000005897b0 0000000000000034 T shared_dispatch_stub_560
00000000005897f0 0000000000000034 T shared_dispatch_stub_561
0000000000589830 0000000000000034 T shared_dispatch_stub_562
0000000000589870 0000000000000034 T shared_dispatch_stub_563
00000000005898b0 0000000000000034 T shared_dispatch_stub_564
00000000005898f0 0000000000000034 T shared_dispatch_stub_565
0000000000589930 0000000000000034 T shared_dispatch_stub_566
0000000000589970 0000000000000034 T shared_dispatch_stub_567
00000000005899b0 0000000000000034 T shared_dispatch_stub_568
00000000005899f0 0000000000000034 T shared_dispatch_stub_569
0000000000589a30 0000000000000034 T shared_dispatch_stub_570
0000000000589a70 0000000000000034 T shared_dispatch_stub_571
0000000000589ab0 0000000000000034 T shared_dispatch_stub_572
0000000000589af0 0000000000000034 T shared_dispatch_stub_573
0000000000589b30 0000000000000034 T shared_dispatch_stub_574
0000000000589b70 0000000000000034 T shared_dispatch_stub_575
0000000000589bb0 0000000000000034 T shared_dispatch_stub_576
0000000000589bf0 0000000000000034 T shared_dispatch_stub_577
0000000000589c30 0000000000000034 T shared_dispatch_stub_578
0000000000589c70 0000000000000034 T shared_dispatch_stub_579
0000000000589cb0 0000000000000034 T shared_dispatch_stub_580
0000000000589cf0 0000000000000034 T shared_dispatch_stub_581
0000000000589d30 0000000000000034 T shared_dispatch_stub_582
0000000000589d70 0000000000000028 T shared_dispatch_stub_583
0000000000589da0 0000000000000028 T shared_dispatch_stub_584
0000000000589dd0 0000000000000034 T shared_dispatch_stub_585
0000000000589e10 0000000000000034 T shared_dispatch_stub_586
0000000000589e50 0000000000000034 T shared_dispatch_stub_587
0000000000589e90 0000000000000034 T shared_dispatch_stub_588
0000000000589ed0 0000000000000034 T shared_dispatch_stub_589
0000000000589f10 0000000000000034 T shared_dispatch_stub_590
0000000000589f50 0000000000000034 T shared_dispatch_stub_591
0000000000589f90 0000000000000034 T shared_dispatch_stub_592
0000000000589fd0 0000000000000034 T shared_dispatch_stub_593
000000000058a010 0000000000000034 T shared_dispatch_stub_594
000000000058a050 0000000000000034 T shared_dispatch_stub_595
000000000058a090 0000000000000034 T shared_dispatch_stub_596
000000000058a0d0 0000000000000034 T shared_dispatch_stub_597
000000000058a110 0000000000000034 T shared_dispatch_stub_598
000000000058a150 0000000000000034 T shared_dispatch_stub_599
000000000058a190 0000000000000034 T shared_dispatch_stub_600
000000000058a1d0 0000000000000034 T shared_dispatch_stub_601
000000000058a210 0000000000000034 T shared_dispatch_stub_602
000000000058a250 0000000000000034 T shared_dispatch_stub_603
000000000058a290 0000000000000034 T shared_dispatch_stub_604
000000000058a2d0 0000000000000034 T shared_dispatch_stub_605
000000000058a310 0000000000000034 T shared_dispatch_stub_606
000000000058a350 0000000000000034 T shared_dispatch_stub_607
000000000058a390 0000000000000034 T shared_dispatch_stub_608
000000000058a3d0 0000000000000034 T shared_dispatch_stub_609
000000000058a410 0000000000000034 T shared_dispatch_stub_610
000000000058a450 0000000000000034 T shared_dispatch_stub_611
000000000058a490 0000000000000034 T shared_dispatch_stub_612
000000000058a4d0 0000000000000034 T shared_dispatch_stub_613
000000000058a510 0000000000000034 T shared_dispatch_stub_614
000000000058a550 0000000000000034 T shared_dispatch_stub_615
000000000058a590 0000000000000034 T shared_dispatch_stub_616
000000000058a5d0 0000000000000034 T shared_dispatch_stub_617
000000000058a610 0000000000000034 T shared_dispatch_stub_618
000000000058a650 0000000000000034 T shared_dispatch_stub_619
000000000058a690 0000000000000028 T shared_dispatch_stub_620
000000000058a6c0 0000000000000034 T shared_dispatch_stub_621
000000000058a700 0000000000000034 T shared_dispatch_stub_622
000000000058a740 0000000000000034 T shared_dispatch_stub_623
000000000058a780 0000000000000034 T shared_dispatch_stub_624
000000000058a7c0 0000000000000034 T shared_dispatch_stub_625
000000000058a800 0000000000000034 T shared_dispatch_stub_626
000000000058a840 0000000000000034 T shared_dispatch_stub_627
000000000058a880 0000000000000034 T shared_dispatch_stub_628
000000000058a8c0 0000000000000034 T shared_dispatch_stub_629
000000000058a900 0000000000000034 T shared_dispatch_stub_630
000000000058a940 0000000000000034 T shared_dispatch_stub_631
000000000058a980 0000000000000034 T shared_dispatch_stub_632
000000000058a9c0 0000000000000034 T shared_dispatch_stub_633
000000000058aa00 0000000000000034 T shared_dispatch_stub_634
000000000058aa40 0000000000000034 T shared_dispatch_stub_635
000000000058aa80 0000000000000034 T shared_dispatch_stub_636
000000000058aac0 0000000000000034 T shared_dispatch_stub_637
000000000058ab00 0000000000000034 T shared_dispatch_stub_638
000000000058ab40 0000000000000034 T shared_dispatch_stub_639
000000000058ab80 0000000000000034 T shared_dispatch_stub_640
000000000058abc0 0000000000000034 T shared_dispatch_stub_641
000000000058ac00 0000000000000034 T shared_dispatch_stub_642
000000000058ac40 0000000000000034 T shared_dispatch_stub_643
000000000058ac80 0000000000000034 T shared_dispatch_stub_644
000000000058acc0 0000000000000034 T shared_dispatch_stub_645
000000000058ad00 0000000000000034 T shared_dispatch_stub_646
000000000058ad40 0000000000000034 T shared_dispatch_stub_647
000000000058ad80 0000000000000034 T shared_dispatch_stub_648
000000000058adc0 0000000000000034 T shared_dispatch_stub_649
000000000058ae00 0000000000000028 T shared_dispatch_stub_650
000000000058ae30 0000000000000034 T shared_dispatch_stub_651
000000000058ae70 0000000000000034 T shared_dispatch_stub_652
000000000058aeb0 0000000000000034 T shared_dispatch_stub_653
000000000058aef0 0000000000000034 T shared_dispatch_stub_654
000000000058af30 0000000000000034 T shared_dispatch_stub_655
000000000058af70 0000000000000034 T shared_dispatch_stub_656
000000000058afb0 0000000000000034 T shared_dispatch_stub_657
000000000058aff0 0000000000000034 T shared_dispatch_stub_658
000000000058b030 0000000000000034 T shared_dispatch_stub_659
000000000058b070 0000000000000034 T shared_dispatch_stub_660
000000000058b0b0 0000000000000034 T shared_dispatch_stub_661
000000000058b0f0 0000000000000034 T shared_dispatch_stub_662
000000000058b130 0000000000000034 T shared_dispatch_stub_663
000000000058b170 0000000000000034 T shared_dispatch_stub_664
000000000058b1b0 0000000000000034 T shared_dispatch_stub_665
000000000058b1f0 0000000000000034 T shared_dispatch_stub_666
000000000058b230 0000000000000034 T shared_dispatch_stub_667
000000000058b270 0000000000000034 T shared_dispatch_stub_668
000000000058b2b0 0000000000000034 T shared_dispatch_stub_669
000000000058b2f0 0000000000000034 T shared_dispatch_stub_670
000000000058b330 0000000000000034 T shared_dispatch_stub_671
000000000058b370 0000000000000034 T shared_dispatch_stub_672
000000000058b3b0 0000000000000034 T shared_dispatch_stub_673
000000000058b3f0 0000000000000034 T shared_dispatch_stub_674
000000000058b430 0000000000000034 T shared_dispatch_stub_675
000000000058b470 0000000000000034 T shared_dispatch_stub_676
000000000058b4b0 0000000000000034 T shared_dispatch_stub_677
000000000058b4f0 0000000000000034 T shared_dispatch_stub_678
000000000058b530 0000000000000034 T shared_dispatch_stub_679
000000000058b570 0000000000000034 T shared_dispatch_stub_680
000000000058b5b0 0000000000000034 T shared_dispatch_stub_681
000000000058b5f0 0000000000000034 T shared_dispatch_stub_682
000000000058b630 0000000000000034 T shared_dispatch_stub_683
000000000058b670 0000000000000034 T shared_dispatch_stub_684
000000000058b6b0 0000000000000034 T shared_dispatch_stub_685
000000000058b6f0 0000000000000034 T shared_dispatch_stub_686
000000000058b730 0000000000000034 T shared_dispatch_stub_687
000000000058b770 0000000000000034 T shared_dispatch_stub_688
000000000058b7b0 0000000000000034 T shared_dispatch_stub_689
000000000058b7f0 0000000000000034 T shared_dispatch_stub_690
000000000058b830 0000000000000034 T shared_dispatch_stub_691
000000000058b870 0000000000000034 T shared_dispatch_stub_692
000000000058b8b0 0000000000000034 T shared_dispatch_stub_693
000000000058b8f0 0000000000000034 T shared_dispatch_stub_694
000000000058b930 0000000000000034 T shared_dispatch_stub_695
000000000058b970 0000000000000034 T shared_dispatch_stub_696
000000000058b9b0 0000000000000034 T shared_dispatch_stub_697
000000000058b9f0 0000000000000034 T shared_dispatch_stub_698
000000000058ba30 0000000000000034 T shared_dispatch_stub_699
000000000058ba70 0000000000000034 T shared_dispatch_stub_700
000000000058bab0 0000000000000034 T shared_dispatch_stub_701
000000000058baf0 0000000000000034 T shared_dispatch_stub_702
000000000058bb30 0000000000000034 T shared_dispatch_stub_703
000000000058bb70 0000000000000034 T shared_dispatch_stub_704
000000000058bbb0 0000000000000034 T shared_dispatch_stub_705
000000000058bbf0 0000000000000034 T shared_dispatch_stub_706
000000000058bc30 0000000000000034 T shared_dispatch_stub_707
000000000058bc70 0000000000000034 T shared_dispatch_stub_708
000000000058bcb0 0000000000000034 T shared_dispatch_stub_709
000000000058bcf0 0000000000000034 T shared_dispatch_stub_710
000000000058bd30 0000000000000034 T shared_dispatch_stub_711
000000000058bd70 0000000000000034 T shared_dispatch_stub_712
000000000058bdb0 0000000000000034 T shared_dispatch_stub_713
000000000058bdf0 0000000000000034 T shared_dispatch_stub_714
000000000058be30 0000000000000034 T shared_dispatch_stub_715
000000000058be70 0000000000000034 T shared_dispatch_stub_716
000000000058beb0 0000000000000034 T shared_dispatch_stub_717
000000000058bef0 0000000000000034 T shared_dispatch_stub_718
000000000058bf30 0000000000000034 T shared_dispatch_stub_719
000000000058bf70 0000000000000034 T shared_dispatch_stub_720
000000000058bfb0 0000000000000034 T shared_dispatch_stub_721
000000000058bff0 0000000000000034 T shared_dispatch_stub_722
000000000058c030 0000000000000034 T shared_dispatch_stub_723
000000000058c070 0000000000000034 T shared_dispatch_stub_724
000000000058c0b0 0000000000000034 T shared_dispatch_stub_725
000000000058c0f0 0000000000000034 T shared_dispatch_stub_726
000000000058c130 0000000000000034 T shared_dispatch_stub_727
000000000058c170 0000000000000034 T shared_dispatch_stub_728
000000000058c1b0 0000000000000034 T shared_dispatch_stub_729
000000000058c1f0 0000000000000034 T shared_dispatch_stub_730
000000000058c230 0000000000000034 T shared_dispatch_stub_731
000000000058c270 0000000000000034 T shared_dispatch_stub_732
000000000058c2b0 0000000000000034 T shared_dispatch_stub_733
000000000058c2f0 0000000000000034 T shared_dispatch_stub_734
000000000058c330 0000000000000034 T shared_dispatch_stub_735
000000000058c370 0000000000000034 T shared_dispatch_stub_736
000000000058c3b0 0000000000000034 T shared_dispatch_stub_737
000000000058c3f0 0000000000000034 T shared_dispatch_stub_738
000000000058c430 0000000000000034 T shared_dispatch_stub_739
000000000058c470 0000000000000034 T shared_dispatch_stub_740
000000000058c4b0 0000000000000034 T shared_dispatch_stub_741
000000000058c4f0 0000000000000034 T shared_dispatch_stub_742
000000000058c530 0000000000000034 T shared_dispatch_stub_743
000000000058c570 0000000000000034 T shared_dispatch_stub_744
000000000058c5b0 0000000000000034 T shared_dispatch_stub_745
000000000058c5f0 0000000000000034 T shared_dispatch_stub_746
000000000058c630 0000000000000034 T shared_dispatch_stub_747
000000000058c670 0000000000000034 T shared_dispatch_stub_748
000000000058c6b0 0000000000000034 T shared_dispatch_stub_749
000000000058c6f0 0000000000000034 T shared_dispatch_stub_750
000000000058c730 0000000000000034 T shared_dispatch_stub_751
000000000058c770 0000000000000034 T shared_dispatch_stub_752
000000000058c7b0 0000000000000034 T shared_dispatch_stub_753
000000000058c7f0 0000000000000034 T shared_dispatch_stub_754
000000000058c830 0000000000000034 T shared_dispatch_stub_755
000000000058c870 0000000000000034 T shared_dispatch_stub_756
000000000058c8b0 0000000000000034 T shared_dispatch_stub_757
000000000058c8f0 0000000000000034 T shared_dispatch_stub_758
000000000058c930 0000000000000034 T shared_dispatch_stub_759
000000000058c970 0000000000000034 T shared_dispatch_stub_760
000000000058c9b0 0000000000000034 T shared_dispatch_stub_761
000000000058c9f0 0000000000000034 T shared_dispatch_stub_762
000000000058ca30 0000000000000034 T shared_dispatch_stub_763
000000000058ca70 0000000000000034 T shared_dispatch_stub_764
000000000058cab0 0000000000000034 T shared_dispatch_stub_765
000000000058caf0 0000000000000034 T shared_dispatch_stub_766
000000000058cb30 0000000000000034 T shared_dispatch_stub_767
000000000058cb70 0000000000000034 T shared_dispatch_stub_768
000000000058cbb0 0000000000000034 T shared_dispatch_stub_769
000000000058cbf0 0000000000000034 T shared_dispatch_stub_770
000000000058cc30 0000000000000034 T shared_dispatch_stub_771
000000000058cc70 0000000000000034 T shared_dispatch_stub_772
000000000058ccb0 0000000000000034 T shared_dispatch_stub_773
000000000058ccf0 0000000000000034 T shared_dispatch_stub_774
000000000058cd30 0000000000000034 T shared_dispatch_stub_775
000000000058cd70 0000000000000034 T shared_dispatch_stub_776
000000000058cdb0 0000000000000034 T shared_dispatch_stub_777
000000000058cdf0 0000000000000034 T shared_dispatch_stub_778
000000000058ce30 0000000000000034 T shared_dispatch_stub_779
000000000058ce70 0000000000000034 T shared_dispatch_stub_780
000000000058ceb0 0000000000000034 T shared_dispatch_stub_781
000000000058cef0 0000000000000034 T shared_dispatch_stub_782
000000000058cf30 0000000000000034 T shared_dispatch_stub_783
000000000058cf70 0000000000000034 T shared_dispatch_stub_784
000000000058cfb0 0000000000000034 T shared_dispatch_stub_785
000000000058cff0 0000000000000034 T shared_dispatch_stub_786
000000000058d030 0000000000000034 T shared_dispatch_stub_787
000000000058d070 0000000000000034 T shared_dispatch_stub_788
000000000058d0b0 0000000000000034 T shared_dispatch_stub_789
000000000058d0f0 0000000000000034 T shared_dispatch_stub_790
000000000058d130 0000000000000034 T shared_dispatch_stub_791
000000000058d170 0000000000000034 T shared_dispatch_stub_792
000000000058d1b0 0000000000000034 T shared_dispatch_stub_793
000000000058d1f0 0000000000000034 T shared_dispatch_stub_794
000000000058d230 0000000000000034 T shared_dispatch_stub_795
000000000058d270 0000000000000034 T shared_dispatch_stub_796
000000000058d2b0 0000000000000034 T shared_dispatch_stub_797
000000000058d2f0 0000000000000034 T shared_dispatch_stub_798
000000000058d330 0000000000000034 T shared_dispatch_stub_799
000000000058d370 0000000000000034 T shared_dispatch_stub_800
000000000058d3b0 0000000000000034 T shared_dispatch_stub_801
000000000058d3f0 0000000000000034 T shared_dispatch_stub_802
000000000058d430 0000000000000034 T shared_dispatch_stub_803
000000000058d470 0000000000000034 T shared_dispatch_stub_804
000000000058d4b0 0000000000000034 T shared_dispatch_stub_805
000000000058d4f0 0000000000000034 T shared_dispatch_stub_806
000000000058d530 0000000000000028 T shared_dispatch_stub_807
000000000058d560 0000000000000028 T shared_dispatch_stub_808
000000000058d590 0000000000000034 T shared_dispatch_stub_809
000000000058d5d0 0000000000000034 T shared_dispatch_stub_810
000000000058d610 0000000000000034 T shared_dispatch_stub_811
000000000058d650 0000000000000034 T shared_dispatch_stub_812
000000000058d690 0000000000000028 T shared_dispatch_stub_813
000000000058d6c0 0000000000000028 T shared_dispatch_stub_814
000000000058d6f0 0000000000000034 T shared_dispatch_stub_815
000000000058d730 0000000000000028 T shared_dispatch_stub_816
000000000058d760 0000000000000034 T shared_dispatch_stub_817
000000000058d7a0 0000000000000034 T shared_dispatch_stub_818
000000000058d7e0 0000000000000034 T shared_dispatch_stub_819
000000000058d820 0000000000000034 T shared_dispatch_stub_820
000000000058d860 0000000000000034 T shared_dispatch_stub_821
000000000058d8a0 0000000000000034 T shared_dispatch_stub_822
000000000058d8e0 0000000000000034 T shared_dispatch_stub_823
000000000058d920 0000000000000034 T shared_dispatch_stub_824
000000000058d960 0000000000000034 T shared_dispatch_stub_825
000000000058d9a0 0000000000000034 T shared_dispatch_stub_826
000000000058d9e0 0000000000000034 T shared_dispatch_stub_827
000000000058da20 0000000000000034 T shared_dispatch_stub_828
000000000058da60 0000000000000034 T shared_dispatch_stub_829
000000000058daa0 0000000000000034 T shared_dispatch_stub_830
000000000058dae0 0000000000000034 T shared_dispatch_stub_831
000000000058db20 0000000000000034 T shared_dispatch_stub_832
000000000058db60 0000000000000034 T shared_dispatch_stub_833
000000000058dba0 0000000000000034 T shared_dispatch_stub_834
000000000058dbe0 0000000000000034 T shared_dispatch_stub_835
000000000058dc20 0000000000000034 T shared_dispatch_stub_836
000000000058dc60 0000000000000034 T shared_dispatch_stub_837
000000000058dca0 0000000000000034 T shared_dispatch_stub_838
000000000058dce0 0000000000000034 T shared_dispatch_stub_839
000000000058dd20 0000000000000034 T shared_dispatch_stub_840
000000000058dd60 0000000000000028 T shared_dispatch_stub_841
000000000058dd90 0000000000000034 T shared_dispatch_stub_842
000000000058ddd0 0000000000000034 T shared_dispatch_stub_843
000000000058de10 0000000000000034 T shared_dispatch_stub_844
000000000058de50 0000000000000034 T shared_dispatch_stub_845
000000000058de90 0000000000000034 T shared_dispatch_stub_846
000000000058ded0 0000000000000034 T shared_dispatch_stub_847
000000000058df10 0000000000000034 T shared_dispatch_stub_848
000000000058df50 0000000000000034 T shared_dispatch_stub_849
000000000058df90 0000000000000034 T shared_dispatch_stub_850
000000000058dfd0 0000000000000034 T shared_dispatch_stub_851
000000000058e010 0000000000000034 T shared_dispatch_stub_852
000000000058e050 0000000000000034 T shared_dispatch_stub_853
000000000058e090 0000000000000034 T shared_dispatch_stub_854
000000000058e0d0 0000000000000034 T shared_dispatch_stub_855
000000000058e110 0000000000000034 T shared_dispatch_stub_856
000000000058e150 0000000000000034 T shared_dispatch_stub_857
000000000058e190 0000000000000034 T shared_dispatch_stub_858
000000000058e1d0 0000000000000034 T shared_dispatch_stub_859
000000000058e210 0000000000000034 T shared_dispatch_stub_860
000000000058e250 0000000000000034 T shared_dispatch_stub_861
000000000058e290 0000000000000034 T shared_dispatch_stub_862
000000000058e2d0 0000000000000034 T shared_dispatch_stub_863
000000000058e310 0000000000000034 T shared_dispatch_stub_864
000000000058e350 0000000000000034 T shared_dispatch_stub_865
000000000058e390 0000000000000034 T shared_dispatch_stub_866
000000000058e3d0 0000000000000034 T shared_dispatch_stub_867
000000000058e410 0000000000000034 T shared_dispatch_stub_868
000000000058e450 0000000000000034 T shared_dispatch_stub_869
000000000058e490 0000000000000034 T shared_dispatch_stub_870
000000000058e4d0 0000000000000034 T shared_dispatch_stub_871
000000000058e510 0000000000000034 T shared_dispatch_stub_872
000000000058e550 0000000000000034 T shared_dispatch_stub_873
000000000058e590 0000000000000034 T shared_dispatch_stub_874
000000000058e5d0 0000000000000034 T shared_dispatch_stub_875
000000000058e610 0000000000000034 T shared_dispatch_stub_876
000000000058e650 0000000000000034 T shared_dispatch_stub_877
000000000058e690 0000000000000034 T shared_dispatch_stub_878
000000000058e6d0 0000000000000034 T shared_dispatch_stub_879
000000000058e710 0000000000000034 T shared_dispatch_stub_880
000000000058e750 0000000000000034 T shared_dispatch_stub_881
000000000058e790 0000000000000034 T shared_dispatch_stub_882
000000000058e7d0 0000000000000034 T shared_dispatch_stub_883
000000000058e810 0000000000000034 T shared_dispatch_stub_884
000000000058e850 0000000000000034 T shared_dispatch_stub_885
000000000058e890 0000000000000034 T shared_dispatch_stub_886
000000000058e8d0 0000000000000034 T shared_dispatch_stub_887
000000000058e910 0000000000000034 T shared_dispatch_stub_888
000000000058e950 0000000000000034 T shared_dispatch_stub_889
000000000058e990 0000000000000034 T shared_dispatch_stub_890
000000000058e9d0 0000000000000034 T shared_dispatch_stub_891
000000000058ea10 0000000000000034 T shared_dispatch_stub_892
000000000058ea50 0000000000000034 T shared_dispatch_stub_893
000000000058ea90 0000000000000034 T shared_dispatch_stub_894
000000000058ead0 0000000000000034 T shared_dispatch_stub_895
000000000058eb10 0000000000000034 T shared_dispatch_stub_896
000000000058eb50 0000000000000034 T shared_dispatch_stub_897
000000000058eb90 0000000000000034 T shared_dispatch_stub_898
000000000058ebd0 0000000000000034 T shared_dispatch_stub_899
000000000058ec10 0000000000000034 T shared_dispatch_stub_900
000000000058ec50 0000000000000034 T shared_dispatch_stub_901
000000000058ec90 0000000000000034 T shared_dispatch_stub_902
000000000058ecd0 0000000000000034 T shared_dispatch_stub_903
000000000058ed10 0000000000000034 T shared_dispatch_stub_904
000000000058ed50 0000000000000034 T shared_dispatch_stub_905
000000000058ed90 0000000000000034 T shared_dispatch_stub_906
000000000058edd0 0000000000000034 T shared_dispatch_stub_907
000000000058ee10 0000000000000034 T shared_dispatch_stub_908
000000000058ee50 0000000000000034 T shared_dispatch_stub_909
000000000058ee90 0000000000000034 T shared_dispatch_stub_910
000000000058eed0 0000000000000034 T shared_dispatch_stub_911
000000000058ef10 0000000000000034 T shared_dispatch_stub_912
000000000058ef50 0000000000000034 T shared_dispatch_stub_913
000000000058ef90 0000000000000034 T shared_dispatch_stub_914
000000000058efd0 0000000000000034 T shared_dispatch_stub_915
000000000058f010 0000000000000034 T shared_dispatch_stub_916
000000000058f050 0000000000000034 T shared_dispatch_stub_917
000000000058f090 0000000000000034 T shared_dispatch_stub_918
000000000058f0d0 0000000000000034 T shared_dispatch_stub_919
000000000058f110 0000000000000034 T shared_dispatch_stub_920
000000000058f150 0000000000000034 T shared_dispatch_stub_921
000000000058f190 0000000000000034 T shared_dispatch_stub_922
000000000058f1d0 0000000000000034 T shared_dispatch_stub_923
000000000058f210 0000000000000034 T shared_dispatch_stub_924
000000000058f250 0000000000000034 T shared_dispatch_stub_925
000000000058f290 0000000000000034 T shared_dispatch_stub_926
000000000058f2d0 0000000000000034 T shared_dispatch_stub_927
000000000058f310 0000000000000034 T shared_dispatch_stub_928
000000000058f350 0000000000000034 T shared_dispatch_stub_929
000000000058f390 0000000000000034 T shared_dispatch_stub_930
000000000058f3d0 0000000000000034 T shared_dispatch_stub_931
000000000058f410 0000000000000034 T shared_dispatch_stub_932
000000000058f450 0000000000000034 T shared_dispatch_stub_933
000000000058f490 0000000000000034 T shared_dispatch_stub_934
000000000058f4d0 0000000000000034 T shared_dispatch_stub_935
000000000058f510 0000000000000034 T shared_dispatch_stub_936
000000000058f550 0000000000000034 T shared_dispatch_stub_937
000000000058f590 0000000000000034 T shared_dispatch_stub_938
000000000058f5d0 0000000000000034 T shared_dispatch_stub_939
000000000058f610 0000000000000034 T shared_dispatch_stub_940
000000000058f650 0000000000000034 T shared_dispatch_stub_941
000000000058f690 0000000000000034 T shared_dispatch_stub_942
000000000058f6d0 0000000000000034 T shared_dispatch_stub_943
000000000058f710 0000000000000034 T shared_dispatch_stub_944
000000000058f750 0000000000000034 T shared_dispatch_stub_945
000000000058f790 0000000000000034 T shared_dispatch_stub_946
000000000058f7d0 0000000000000034 T shared_dispatch_stub_947
000000000058f810 0000000000000034 T shared_dispatch_stub_948
000000000058f850 0000000000000034 T shared_dispatch_stub_949
000000000058f890 0000000000000034 T shared_dispatch_stub_950
000000000058f8d0 0000000000000034 T shared_dispatch_stub_951
000000000058f910 0000000000000034 T shared_dispatch_stub_952
000000000058f950 0000000000000034 T shared_dispatch_stub_953
000000000058f990 0000000000000034 T shared_dispatch_stub_954
000000000058f9d0 0000000000000034 T shared_dispatch_stub_955
000000000058fa10 0000000000000034 T shared_dispatch_stub_956
000000000058fa50 0000000000000034 T shared_dispatch_stub_957
000000000058fa90 0000000000000034 T shared_dispatch_stub_958
000000000058fad0 0000000000000034 T shared_dispatch_stub_959
000000000058fb10 0000000000000034 T shared_dispatch_stub_960
000000000058fb50 0000000000000034 T shared_dispatch_stub_961
000000000058fb90 0000000000000034 T shared_dispatch_stub_962
000000000058fbd0 0000000000000034 T shared_dispatch_stub_963
000000000058fc10 0000000000000034 T shared_dispatch_stub_964
000000000058fc50 0000000000000034 T shared_dispatch_stub_965
000000000058fc90 0000000000000034 T shared_dispatch_stub_966
000000000058fcd0 0000000000000034 T shared_dispatch_stub_967
000000000058fd10 0000000000000034 T shared_dispatch_stub_968
000000000058fd50 0000000000000034 T shared_dispatch_stub_969
000000000058fd90 0000000000000034 T shared_dispatch_stub_970
000000000058fdd0 0000000000000034 T shared_dispatch_stub_971
000000000058fe10 0000000000000034 T shared_dispatch_stub_972
000000000058fe50 0000000000000034 T shared_dispatch_stub_973
000000000058fe90 0000000000000034 T shared_dispatch_stub_974
000000000058fed0 0000000000000034 T shared_dispatch_stub_975
000000000058ff10 0000000000000034 T shared_dispatch_stub_976
000000000058ff50 0000000000000034 T shared_dispatch_stub_977
000000000058ff90 0000000000000034 T shared_dispatch_stub_978
000000000058ffd0 0000000000000034 T shared_dispatch_stub_979
0000000000590010 0000000000000034 T shared_dispatch_stub_980
0000000000590050 0000000000000034 T shared_dispatch_stub_981
0000000000590090 0000000000000034 T shared_dispatch_stub_982
00000000005900d0 0000000000000034 T shared_dispatch_stub_983
0000000000590110 0000000000000034 T shared_dispatch_stub_984
0000000000590150 0000000000000034 T shared_dispatch_stub_985
0000000000590190 0000000000000034 T shared_dispatch_stub_986
00000000005901d0 0000000000000034 T shared_dispatch_stub_987
0000000000590210 0000000000000034 T shared_dispatch_stub_988
0000000000590250 0000000000000034 T shared_dispatch_stub_989
0000000000590290 0000000000000034 T shared_dispatch_stub_990
00000000005902d0 0000000000000034 T shared_dispatch_stub_991
0000000000590310 0000000000000034 T shared_dispatch_stub_992
0000000000590350 0000000000000034 T shared_dispatch_stub_993
0000000000590390 0000000000000034 T shared_dispatch_stub_994
00000000005903d0 0000000000000034 T shared_dispatch_stub_995
0000000000590410 0000000000000034 T shared_dispatch_stub_996
0000000000590450 0000000000000034 T shared_dispatch_stub_997
0000000000590490 0000000000000034 T shared_dispatch_stub_998
00000000005904d0 0000000000000034 T shared_dispatch_stub_999
0000000000590510 0000000000000034 T shared_dispatch_stub_1000
0000000000590550 0000000000000034 T shared_dispatch_stub_1001
0000000000590590 0000000000000034 T shared_dispatch_stub_1002
00000000005905d0 0000000000000034 T shared_dispatch_stub_1003
0000000000590610 0000000000000034 T shared_dispatch_stub_1004
0000000000590650 0000000000000034 T shared_dispatch_stub_1005
0000000000590690 0000000000000034 T shared_dispatch_stub_1006
00000000005906d0 0000000000000034 T shared_dispatch_stub_1007
0000000000590710 0000000000000034 T shared_dispatch_stub_1008
0000000000590750 0000000000000034 T shared_dispatch_stub_1009
0000000000590790 0000000000000034 T shared_dispatch_stub_1010
00000000005907d0 0000000000000034 T shared_dispatch_stub_1011
0000000000590810 0000000000000034 T shared_dispatch_stub_1012
0000000000590850 0000000000000034 T shared_dispatch_stub_1013
0000000000590890 0000000000000034 T shared_dispatch_stub_1014
00000000005908d0 0000000000000034 T shared_dispatch_stub_1015
0000000000590910 0000000000000034 T shared_dispatch_stub_1016
0000000000590950 0000000000000034 T shared_dispatch_stub_1017
0000000000590990 0000000000000034 T shared_dispatch_stub_1018
00000000005909d0 0000000000000034 T shared_dispatch_stub_1019
0000000000590a10 0000000000000034 T shared_dispatch_stub_1020
0000000000590a50 0000000000000034 T shared_dispatch_stub_1021
0000000000590a90 0000000000000034 T shared_dispatch_stub_1022
0000000000590ad0 0000000000000034 T shared_dispatch_stub_1023
0000000000590b10 0000000000000034 T shared_dispatch_stub_1024
0000000000590b50 0000000000000034 T shared_dispatch_stub_1025
0000000000590b90 0000000000000034 T shared_dispatch_stub_1026
0000000000590bd0 0000000000000034 T shared_dispatch_stub_1027
0000000000590c10 0000000000000034 T shared_dispatch_stub_1028
0000000000590c50 0000000000000034 T shared_dispatch_stub_1029
0000000000590c90 0000000000000034 T shared_dispatch_stub_1030
0000000000590cd0 0000000000000034 T shared_dispatch_stub_1031
0000000000590d10 0000000000000034 T shared_dispatch_stub_1032
0000000000590d50 0000000000000034 T shared_dispatch_stub_1033
0000000000590d90 0000000000000034 T shared_dispatch_stub_1034
0000000000590dd0 0000000000000034 T shared_dispatch_stub_1035
0000000000590e10 0000000000000034 T shared_dispatch_stub_1036
0000000000590e50 0000000000000034 T shared_dispatch_stub_1037
0000000000590e90 0000000000000034 T shared_dispatch_stub_1038
0000000000590ed0 0000000000000034 T shared_dispatch_stub_1039
0000000000590f10 0000000000000034 T shared_dispatch_stub_1040
0000000000590f50 0000000000000034 T shared_dispatch_stub_1041
0000000000590f90 0000000000000034 T shared_dispatch_stub_1042
0000000000590fd0 0000000000000034 T shared_dispatch_stub_1043
0000000000591010 0000000000000034 T shared_dispatch_stub_1044
0000000000591050 0000000000000034 T shared_dispatch_stub_1045
0000000000591090 0000000000000034 T shared_dispatch_stub_1046
00000000005910d0 0000000000000034 T shared_dispatch_stub_1047
0000000000591110 0000000000000034 T shared_dispatch_stub_1048
0000000000591150 0000000000000034 T shared_dispatch_stub_1049
0000000000591190 0000000000000034 T shared_dispatch_stub_1050
00000000005911d0 0000000000000034 T shared_dispatch_stub_1051
0000000000591210 0000000000000034 T shared_dispatch_stub_1052
0000000000591250 0000000000000034 T shared_dispatch_stub_1053
0000000000591290 0000000000000034 T shared_dispatch_stub_1054
00000000005912d0 0000000000000034 T shared_dispatch_stub_1055
0000000000591310 0000000000000034 T shared_dispatch_stub_1056
0000000000591350 0000000000000034 T shared_dispatch_stub_1057
0000000000591390 0000000000000034 T shared_dispatch_stub_1058
00000000005913d0 0000000000000034 T shared_dispatch_stub_1059
0000000000591410 0000000000000034 T shared_dispatch_stub_1060
0000000000591450 0000000000000034 T shared_dispatch_stub_1061
0000000000591490 0000000000000034 T shared_dispatch_stub_1062
00000000005914d0 0000000000000034 T shared_dispatch_stub_1063
0000000000591510 0000000000000034 T shared_dispatch_stub_1064
0000000000591550 0000000000000034 T shared_dispatch_stub_1065
0000000000591590 0000000000000034 T shared_dispatch_stub_1066
00000000005915d0 0000000000000034 T shared_dispatch_stub_1067
0000000000591610 0000000000000034 T shared_dispatch_stub_1068
0000000000591650 0000000000000028 T shared_dispatch_stub_1069
0000000000591680 0000000000000034 T shared_dispatch_stub_1070
00000000005916c0 0000000000000034 T shared_dispatch_stub_1071
0000000000591700 0000000000000034 T shared_dispatch_stub_1072
0000000000591740 0000000000000034 T shared_dispatch_stub_1073
0000000000591780 0000000000000034 T shared_dispatch_stub_1074
00000000005917c0 0000000000000034 T shared_dispatch_stub_1075
0000000000591800 0000000000000034 T shared_dispatch_stub_1076
0000000000591840 0000000000000034 T shared_dispatch_stub_1077
0000000000591880 0000000000000034 T shared_dispatch_stub_1078
00000000005918c0 0000000000000028 T shared_dispatch_stub_1079
00000000005918f0 0000000000000034 T shared_dispatch_stub_1080
0000000000591930 0000000000000034 T shared_dispatch_stub_1081
0000000000591970 0000000000000034 T shared_dispatch_stub_1082
00000000005919b0 0000000000000034 T shared_dispatch_stub_1083
00000000005919f0 0000000000000034 T shared_dispatch_stub_1084
0000000000591a30 0000000000000034 T shared_dispatch_stub_1085
0000000000591a70 0000000000000034 T shared_dispatch_stub_1086
0000000000591ab0 0000000000000034 T shared_dispatch_stub_1087
0000000000591af0 0000000000000034 T shared_dispatch_stub_1088
0000000000591b30 0000000000000034 T shared_dispatch_stub_1089
0000000000591b70 0000000000000034 T shared_dispatch_stub_1090
0000000000591bb0 0000000000000034 T shared_dispatch_stub_1091
0000000000591bf0 0000000000000034 T shared_dispatch_stub_1092
0000000000591c30 0000000000000034 T shared_dispatch_stub_1093
0000000000591c70 0000000000000034 T shared_dispatch_stub_1094
0000000000591cb0 0000000000000034 T shared_dispatch_stub_1095
0000000000591cf0 0000000000000034 T shared_dispatch_stub_1096
0000000000591d30 0000000000000034 T shared_dispatch_stub_1097
0000000000591d70 0000000000000034 T shared_dispatch_stub_1098
0000000000591db0 0000000000000034 T shared_dispatch_stub_1099
0000000000591df0 0000000000000034 T shared_dispatch_stub_1100
0000000000591e30 0000000000000034 T shared_dispatch_stub_1101
0000000000591e70 0000000000000034 T shared_dispatch_stub_1102
0000000000591eb0 0000000000000034 T shared_dispatch_stub_1103
0000000000591ef0 0000000000000034 T shared_dispatch_stub_1104
0000000000591f30 0000000000000034 T shared_dispatch_stub_1105
0000000000591f70 0000000000000034 T shared_dispatch_stub_1106
0000000000591fb0 0000000000000034 T shared_dispatch_stub_1107
0000000000591ff0 0000000000000034 T shared_dispatch_stub_1108
0000000000592030 0000000000000034 T shared_dispatch_stub_1109
0000000000592070 0000000000000034 T shared_dispatch_stub_1110
00000000005920b0 0000000000000034 T shared_dispatch_stub_1111
00000000005920f0 0000000000000034 T shared_dispatch_stub_1112
0000000000592130 0000000000000034 T shared_dispatch_stub_1113
0000000000592170 0000000000000034 T shared_dispatch_stub_1114
00000000005921b0 0000000000000034 T shared_dispatch_stub_1115
00000000005921f0 0000000000000034 T shared_dispatch_stub_1116
0000000000592230 0000000000000034 T shared_dispatch_stub_1117
0000000000592270 0000000000000034 T shared_dispatch_stub_1118
00000000005922b0 0000000000000034 T shared_dispatch_stub_1119
00000000005922f0 0000000000000034 T shared_dispatch_stub_1120
0000000000592330 0000000000000034 T shared_dispatch_stub_1121
0000000000592370 0000000000000034 T shared_dispatch_stub_1122
00000000005923b0 0000000000000034 T shared_dispatch_stub_1123
00000000005923f0 0000000000000034 T shared_dispatch_stub_1124
0000000000592430 0000000000000034 T shared_dispatch_stub_1125
0000000000592470 0000000000000034 T shared_dispatch_stub_1126
00000000005924b0 0000000000000034 T shared_dispatch_stub_1127
00000000005924f0 0000000000000034 T shared_dispatch_stub_1128
0000000000592530 0000000000000034 T shared_dispatch_stub_1129
0000000000592570 0000000000000034 T shared_dispatch_stub_1130
00000000005925b0 0000000000000034 T shared_dispatch_stub_1131
00000000005925f0 0000000000000034 T shared_dispatch_stub_1132
0000000000592630 0000000000000034 T shared_dispatch_stub_1133
0000000000592670 0000000000000034 T shared_dispatch_stub_1134
00000000005926b0 0000000000000034 T shared_dispatch_stub_1135
00000000005926f0 0000000000000034 T shared_dispatch_stub_1136
0000000000592730 0000000000000034 T shared_dispatch_stub_1137
0000000000592770 0000000000000034 T shared_dispatch_stub_1138
00000000005927b0 0000000000000034 T shared_dispatch_stub_1139
00000000005927f0 0000000000000034 T shared_dispatch_stub_1140
0000000000592830 0000000000000034 T shared_dispatch_stub_1141
0000000000592870 0000000000000034 T shared_dispatch_stub_1142
00000000005928b0 0000000000000034 T shared_dispatch_stub_1143
00000000005928f0 0000000000000034 T shared_dispatch_stub_1144
0000000000592930 0000000000000034 T shared_dispatch_stub_1145
0000000000592970 0000000000000034 T shared_dispatch_stub_1146
00000000005929b0 0000000000000034 T shared_dispatch_stub_1147
00000000005929f0 0000000000000034 T shared_dispatch_stub_1148
0000000000592a30 0000000000000034 T shared_dispatch_stub_1149
0000000000592a70 0000000000000034 T shared_dispatch_stub_1150
0000000000592ab0 0000000000000034 T shared_dispatch_stub_1151
0000000000592af0 0000000000000034 T shared_dispatch_stub_1152
0000000000592b30 0000000000000034 T shared_dispatch_stub_1153
0000000000592b70 0000000000000034 T shared_dispatch_stub_1154
0000000000592bb0 0000000000000034 T shared_dispatch_stub_1155
0000000000592bf0 0000000000000034 T shared_dispatch_stub_1156
0000000000592c30 0000000000000028 T shared_dispatch_stub_1157
0000000000592c60 0000000000000034 T shared_dispatch_stub_1158
0000000000592ca0 0000000000000034 T shared_dispatch_stub_1159
0000000000592ce0 0000000000000034 T shared_dispatch_stub_1160
0000000000592d20 0000000000000034 T shared_dispatch_stub_1161
0000000000592d60 0000000000000034 T shared_dispatch_stub_1162
0000000000592da0 0000000000000034 T shared_dispatch_stub_1163
0000000000592de0 0000000000000034 T shared_dispatch_stub_1164
0000000000592e20 0000000000000034 T shared_dispatch_stub_1165
0000000000592e60 0000000000000034 T shared_dispatch_stub_1166
0000000000592ea0 0000000000000034 T shared_dispatch_stub_1167
0000000000592ee0 0000000000000034 T shared_dispatch_stub_1168
0000000000592f20 0000000000000028 T shared_dispatch_stub_1169
0000000000592f50 0000000000000034 T shared_dispatch_stub_1170
0000000000592f90 0000000000000028 T shared_dispatch_stub_1171
0000000000592fc0 0000000000000034 T shared_dispatch_stub_1172
0000000000593000 0000000000000034 T shared_dispatch_stub_1173
0000000000593040 0000000000000028 T shared_dispatch_stub_1174
0000000000593070 0000000000000034 T shared_dispatch_stub_1175
00000000005930b0 0000000000000028 T shared_dispatch_stub_1176
00000000005930e0 0000000000000028 T shared_dispatch_stub_1177
0000000000593110 0000000000000034 T shared_dispatch_stub_1178
0000000000593150 0000000000000028 T shared_dispatch_stub_1179
0000000000593180 0000000000000034 T shared_dispatch_stub_1180
00000000005931c0 0000000000000034 T shared_dispatch_stub_1181
0000000000593200 0000000000000034 T shared_dispatch_stub_1182
0000000000593240 0000000000000034 T shared_dispatch_stub_1183
0000000000593280 0000000000000034 T shared_dispatch_stub_1184
00000000005932c0 0000000000000034 T shared_dispatch_stub_1185
0000000000593300 0000000000000034 T shared_dispatch_stub_1186
0000000000593340 0000000000000034 T shared_dispatch_stub_1187
0000000000593380 0000000000000034 T shared_dispatch_stub_1188
00000000005933c0 0000000000000034 T shared_dispatch_stub_1189
0000000000593400 0000000000000034 T shared_dispatch_stub_1190
0000000000593440 0000000000000034 T shared_dispatch_stub_1191
0000000000593480 0000000000000034 T shared_dispatch_stub_1192
00000000005934c0 0000000000000034 T shared_dispatch_stub_1193
0000000000593500 0000000000000034 T shared_dispatch_stub_1194
0000000000593540 0000000000000034 T shared_dispatch_stub_1195
0000000000593580 0000000000000034 T shared_dispatch_stub_1196
00000000005935c0 0000000000000034 T shared_dispatch_stub_1197
0000000000593600 0000000000000034 T shared_dispatch_stub_1198
0000000000593640 0000000000000034 T shared_dispatch_stub_1199
0000000000593680 0000000000000034 T shared_dispatch_stub_1200
00000000005936c0 0000000000000034 T shared_dispatch_stub_1201
0000000000593700 0000000000000034 T shared_dispatch_stub_1202
0000000000593740 0000000000000034 T shared_dispatch_stub_1203
0000000000593780 0000000000000034 T shared_dispatch_stub_1204
00000000005937c0 0000000000000034 T shared_dispatch_stub_1205
0000000000593800 0000000000000034 T shared_dispatch_stub_1206
0000000000593840 0000000000000034 T shared_dispatch_stub_1207
0000000000593880 0000000000000034 T shared_dispatch_stub_1208
00000000005938c0 0000000000000034 T shared_dispatch_stub_1209
0000000000593900 0000000000000034 T shared_dispatch_stub_1210
0000000000593940 0000000000000034 T shared_dispatch_stub_1211
0000000000593980 0000000000000034 T shared_dispatch_stub_1212
00000000005939c0 0000000000000034 T shared_dispatch_stub_1213
0000000000593a00 0000000000000034 T shared_dispatch_stub_1214
0000000000593a40 0000000000000034 T shared_dispatch_stub_1215
0000000000593a80 0000000000000034 T shared_dispatch_stub_1216
0000000000593ac0 0000000000000034 T shared_dispatch_stub_1217
0000000000593b00 0000000000000034 T shared_dispatch_stub_1218
0000000000593b40 0000000000000034 T shared_dispatch_stub_1219
0000000000593b80 0000000000000034 T shared_dispatch_stub_1220
0000000000593bc0 0000000000000034 T shared_dispatch_stub_1221
0000000000593c00 0000000000000034 T shared_dispatch_stub_1222
0000000000593c40 0000000000000034 T shared_dispatch_stub_1223
0000000000593c80 0000000000000034 T shared_dispatch_stub_1224
0000000000593cc0 0000000000000034 T shared_dispatch_stub_1225
0000000000593d00 0000000000000034 T shared_dispatch_stub_1226
0000000000593d40 0000000000000034 T shared_dispatch_stub_1227
0000000000593d80 0000000000000034 T shared_dispatch_stub_1228
0000000000593dc0 0000000000000034 T shared_dispatch_stub_1229
0000000000593e00 0000000000000034 T shared_dispatch_stub_1230
0000000000593e40 0000000000000034 T shared_dispatch_stub_1231
0000000000593e80 0000000000000034 T shared_dispatch_stub_1232
0000000000593ec0 0000000000000034 T shared_dispatch_stub_1233
0000000000593f00 0000000000000034 T shared_dispatch_stub_1234
0000000000593f40 0000000000000034 T shared_dispatch_stub_1235
0000000000593f80 0000000000000034 T shared_dispatch_stub_1236
0000000000593fc0 0000000000000034 T shared_dispatch_stub_1237
0000000000594000 0000000000000034 T shared_dispatch_stub_1238
0000000000594040 0000000000000034 T shared_dispatch_stub_1239
0000000000594080 0000000000000034 T shared_dispatch_stub_1240
00000000005940c0 0000000000000034 T shared_dispatch_stub_1241
0000000000594100 0000000000000034 T shared_dispatch_stub_1242
0000000000594140 0000000000000034 T shared_dispatch_stub_1243
0000000000594180 0000000000000034 T shared_dispatch_stub_1244
00000000005941c0 0000000000000034 T shared_dispatch_stub_1245
0000000000594200 0000000000000034 T shared_dispatch_stub_1246
0000000000594240 0000000000000034 T shared_dispatch_stub_1247
0000000000594280 0000000000000034 T shared_dispatch_stub_1248
00000000005942c0 0000000000000028 T shared_dispatch_stub_1249
00000000005942f0 0000000000000034 T shared_dispatch_stub_1250
0000000000594330 0000000000000034 T shared_dispatch_stub_1251
0000000000594370 0000000000000034 T shared_dispatch_stub_1252
00000000005943b0 0000000000000034 T shared_dispatch_stub_1253
00000000005943f0 0000000000000034 T shared_dispatch_stub_1254
0000000000594430 0000000000000028 T shared_dispatch_stub_1255
0000000000594460 0000000000000034 T shared_dispatch_stub_1256
00000000005944a0 0000000000000034 T shared_dispatch_stub_1257
00000000005944e0 0000000000000034 T shared_dispatch_stub_1258
0000000000594520 0000000000000034 T shared_dispatch_stub_1259
0000000000594560 0000000000000034 T shared_dispatch_stub_1260
00000000005945a0 0000000000000034 T shared_dispatch_stub_1261
00000000005945e0 0000000000000034 T shared_dispatch_stub_1262
0000000000594620 0000000000000034 T shared_dispatch_stub_1263
0000000000594660 0000000000000034 T shared_dispatch_stub_1264
00000000005946a0 0000000000000034 T shared_dispatch_stub_1265
00000000005946e0 0000000000000034 T shared_dispatch_stub_1266
0000000000594720 0000000000000034 T shared_dispatch_stub_1267
0000000000594760 0000000000000034 T shared_dispatch_stub_1268
00000000005947a0 0000000000000028 T shared_dispatch_stub_1269
00000000005947d0 0000000000000034 T shared_dispatch_stub_1270
0000000000594810 0000000000000034 T shared_dispatch_stub_1271
0000000000594850 0000000000000034 T shared_dispatch_stub_1272
0000000000594890 0000000000000028 T shared_dispatch_stub_1273
00000000005948c0 0000000000000034 T shared_dispatch_stub_1274
0000000000594900 0000000000000034 T shared_dispatch_stub_1275
0000000000594940 0000000000000034 T shared_dispatch_stub_1276
0000000000594980 0000000000000034 T shared_dispatch_stub_1277
00000000005949c0 0000000000000034 T shared_dispatch_stub_1278
0000000000594a00 0000000000000034 T shared_dispatch_stub_1279
0000000000594a40 0000000000000034 T shared_dispatch_stub_1280
0000000000594a80 0000000000000034 T shared_dispatch_stub_1281
0000000000594ac0 0000000000000034 T shared_dispatch_stub_1282
0000000000594b00 0000000000000034 T shared_dispatch_stub_1283
0000000000594b40 0000000000000034 T shared_dispatch_stub_1284
0000000000594b80 0000000000000034 T shared_dispatch_stub_1285
0000000000594bc0 0000000000000034 T shared_dispatch_stub_1286
0000000000594c00 0000000000000034 T shared_dispatch_stub_1287
0000000000594c40 0000000000000034 T shared_dispatch_stub_1288
0000000000594c80 0000000000000034 T shared_dispatch_stub_1289
0000000000594cc0 0000000000000034 T shared_dispatch_stub_1290
0000000000594d00 0000000000000034 T shared_dispatch_stub_1291
0000000000594d40 0000000000000034 T shared_dispatch_stub_1292
0000000000594d80 0000000000000034 T shared_dispatch_stub_1293
0000000000594dc0 0000000000000034 T shared_dispatch_stub_1294
0000000000594e00 0000000000000034 T shared_dispatch_stub_1295
0000000000594e40 0000000000000034 T shared_dispatch_stub_1296
0000000000594e80 0000000000000034 T shared_dispatch_stub_1297
0000000000594ec0 0000000000000034 T shared_dispatch_stub_1298
0000000000594f00 0000000000000034 T shared_dispatch_stub_1299
0000000000594f40 0000000000000034 T shared_dispatch_stub_1300
0000000000594f80 0000000000000034 T shared_dispatch_stub_1301
0000000000594fc0 0000000000000034 T shared_dispatch_stub_1302
0000000000595000 0000000000000034 T shared_dispatch_stub_1303
0000000000595040 0000000000000034 T shared_dispatch_stub_1304
0000000000595080 0000000000000034 T shared_dispatch_stub_1305
00000000005950c0 0000000000000034 T shared_dispatch_stub_1306
0000000000595100 0000000000000034 T shared_dispatch_stub_1307
0000000000595140 0000000000000034 T shared_dispatch_stub_1308
0000000000595180 0000000000000034 T shared_dispatch_stub_1309
00000000005951c0 0000000000000034 T shared_dispatch_stub_1310
0000000000595200 0000000000000034 T shared_dispatch_stub_1311
0000000000595240 0000000000000034 T shared_dispatch_stub_1312
0000000000595280 0000000000000028 T shared_dispatch_stub_1313
00000000005952b0 0000000000000028 T shared_dispatch_stub_1314
00000000005952e0 0000000000000034 T shared_dispatch_stub_1315
0000000000595320 0000000000000034 T shared_dispatch_stub_1316
0000000000595360 0000000000000034 T shared_dispatch_stub_1317
00000000005953a0 0000000000000034 T shared_dispatch_stub_1318
00000000005953e0 0000000000000034 T shared_dispatch_stub_1319
0000000000595420 0000000000000034 T shared_dispatch_stub_1320
0000000000595460 0000000000000034 T shared_dispatch_stub_1321
00000000005954a0 0000000000000034 T shared_dispatch_stub_1322
00000000005954e0 0000000000000034 T shared_dispatch_stub_1323
0000000000595520 0000000000000034 T shared_dispatch_stub_1324
0000000000595560 0000000000000034 T shared_dispatch_stub_1325
00000000005955a0 0000000000000034 T shared_dispatch_stub_1326
00000000005955e0 0000000000000034 T shared_dispatch_stub_1327
0000000000595620 0000000000000034 T shared_dispatch_stub_1328
0000000000595660 0000000000000034 T shared_dispatch_stub_1329
00000000005956a0 0000000000000034 T shared_dispatch_stub_1330
00000000005956e0 0000000000000034 T shared_dispatch_stub_1331
0000000000595720 0000000000000034 T shared_dispatch_stub_1332
0000000000595760 0000000000000034 T shared_dispatch_stub_1333
00000000005957a0 0000000000000028 T shared_dispatch_stub_1334
00000000005957d0 0000000000000034 T shared_dispatch_stub_1335
0000000000595810 0000000000000034 T shared_dispatch_stub_1336
0000000000595850 0000000000000034 T shared_dispatch_stub_1337
0000000000595890 0000000000000034 T shared_dispatch_stub_1338
00000000005958d0 0000000000000034 T shared_dispatch_stub_1339
0000000000595910 0000000000000034 T shared_dispatch_stub_1340
0000000000595950 0000000000000034 T shared_dispatch_stub_1341
0000000000595990 0000000000000034 T shared_dispatch_stub_1342
00000000005959d0 0000000000000034 T shared_dispatch_stub_1343
0000000000595a10 0000000000000034 T shared_dispatch_stub_1344
0000000000595a50 0000000000000034 T shared_dispatch_stub_1345
0000000000595a90 0000000000000034 T shared_dispatch_stub_1346
0000000000595ad0 0000000000000034 T shared_dispatch_stub_1347
0000000000595b10 0000000000000034 T shared_dispatch_stub_1348
0000000000595b50 0000000000000034 T shared_dispatch_stub_1349
0000000000595b90 0000000000000034 T shared_dispatch_stub_1350
0000000000595bd0 0000000000000034 T shared_dispatch_stub_1351
0000000000595c10 0000000000000034 T shared_dispatch_stub_1352
0000000000595c50 0000000000000034 T shared_dispatch_stub_1353
0000000000595c90 0000000000000034 T shared_dispatch_stub_1354
0000000000595cd0 0000000000000034 T shared_dispatch_stub_1355
0000000000595d10 0000000000000034 T shared_dispatch_stub_1356
0000000000595d50 0000000000000034 T shared_dispatch_stub_1357
0000000000595d90 0000000000000034 T shared_dispatch_stub_1358
0000000000595dd0 0000000000000034 T shared_dispatch_stub_1359
0000000000595e10 0000000000000034 T shared_dispatch_stub_1360
0000000000595e50 0000000000000034 T shared_dispatch_stub_1361
0000000000595e90 0000000000000034 T shared_dispatch_stub_1362
0000000000595ed0 0000000000000034 T shared_dispatch_stub_1363
0000000000595f10 0000000000000034 T shared_dispatch_stub_1364
0000000000595f50 0000000000000034 T shared_dispatch_stub_1365
0000000000595f90 0000000000000034 T shared_dispatch_stub_1366
0000000000595fd0 0000000000000028 T shared_dispatch_stub_1367
0000000000596000 0000000000000034 T shared_dispatch_stub_1368
0000000000596040 0000000000000034 T shared_dispatch_stub_1369
0000000000596080 0000000000000034 T shared_dispatch_stub_1370
00000000005960c0 0000000000000034 T shared_dispatch_stub_1371
0000000000596100 0000000000000034 T shared_dispatch_stub_1372
0000000000596140 0000000000000034 T shared_dispatch_stub_1373
0000000000596180 0000000000000034 T shared_dispatch_stub_1374
00000000005961c0 0000000000000034 T shared_dispatch_stub_1375
0000000000596200 0000000000000034 T shared_dispatch_stub_1376
0000000000596240 0000000000000034 T shared_dispatch_stub_1377
0000000000596280 0000000000000034 T shared_dispatch_stub_1378
00000000005962c0 0000000000000034 T shared_dispatch_stub_1379
0000000000596300 0000000000000034 T shared_dispatch_stub_1380
0000000000596340 0000000000000034 T shared_dispatch_stub_1381
0000000000596380 0000000000000028 T shared_dispatch_stub_1382
00000000005963b0 0000000000000034 T shared_dispatch_stub_1383
00000000005963f0 0000000000000034 T shared_dispatch_stub_1384
0000000000596430 0000000000000034 T shared_dispatch_stub_1385
0000000000596470 0000000000000034 T shared_dispatch_stub_1386
00000000005964b0 0000000000000034 T shared_dispatch_stub_1387
00000000005964f0 0000000000000034 T shared_dispatch_stub_1388
0000000000596530 0000000000000034 T shared_dispatch_stub_1389
0000000000596570 0000000000000034 T shared_dispatch_stub_1390
00000000005965b0 0000000000000034 T shared_dispatch_stub_1391
00000000005965f0 0000000000000034 T shared_dispatch_stub_1392
0000000000596630 0000000000000034 T shared_dispatch_stub_1393
0000000000596670 0000000000000034 T shared_dispatch_stub_1394
00000000005966b0 0000000000000028 T shared_dispatch_stub_1395
00000000005966e0 0000000000000034 T shared_dispatch_stub_1396
0000000000596720 0000000000000034 T shared_dispatch_stub_1397
0000000000596760 0000000000000034 T shared_dispatch_stub_1398
00000000005967a0 0000000000000034 T shared_dispatch_stub_1399
00000000005967e0 0000000000000034 T shared_dispatch_stub_1400
0000000000596820 0000000000000034 T shared_dispatch_stub_1401
0000000000596860 0000000000000034 T shared_dispatch_stub_1402
00000000005968a0 0000000000000034 T shared_dispatch_stub_1403
00000000005968e0 0000000000000034 T shared_dispatch_stub_1404
0000000000596920 0000000000000034 T shared_dispatch_stub_1405
0000000000596960 0000000000000034 T shared_dispatch_stub_1406
00000000005969a0 0000000000000034 T shared_dispatch_stub_1407
00000000005969e0 0000000000000034 T shared_dispatch_stub_1408
0000000000596a20 0000000000000034 T shared_dispatch_stub_1409
0000000000596a60 0000000000000034 T shared_dispatch_stub_1410
0000000000596aa0 0000000000000034 T shared_dispatch_stub_1411
0000000000596ae0 0000000000000034 T shared_dispatch_stub_1412
0000000000596b20 0000000000000034 T shared_dispatch_stub_1413
0000000000596b60 0000000000000034 T shared_dispatch_stub_1414
0000000000596ba0 0000000000000034 T shared_dispatch_stub_1415
0000000000596be0 0000000000000034 T shared_dispatch_stub_1416
0000000000596c20 0000000000000034 T shared_dispatch_stub_1417
0000000000596c60 0000000000000028 T shared_dispatch_stub_1418
0000000000596c90 0000000000000028 T shared_dispatch_stub_1419
0000000000596cc0 0000000000000034 T shared_dispatch_stub_1420
0000000000596d00 0000000000000034 T shared_dispatch_stub_1421
0000000000596d40 0000000000000034 T shared_dispatch_stub_1422
0000000000596d80 0000000000000034 T shared_dispatch_stub_1423
0000000000596dc0 0000000000000034 T shared_dispatch_stub_1424
0000000000596e00 0000000000000034 T shared_dispatch_stub_1425
0000000000596e40 0000000000000034 T shared_dispatch_stub_1426
0000000000596e80 0000000000000034 T shared_dispatch_stub_1427
0000000000596ec0 0000000000000034 T shared_dispatch_stub_1428
0000000000596f00 0000000000000034 T shared_dispatch_stub_1429
0000000000596f40 0000000000000034 T shared_dispatch_stub_1430
0000000000596f80 0000000000000034 T shared_dispatch_stub_1431
0000000000596fc0 0000000000000034 T shared_dispatch_stub_1432
0000000000597000 0000000000000034 T shared_dispatch_stub_1433
0000000000597040 0000000000000034 T shared_dispatch_stub_1434
0000000000597080 0000000000000034 T shared_dispatch_stub_1435
00000000005970c0 0000000000000034 T shared_dispatch_stub_1436
0000000000597100 0000000000000034 T shared_dispatch_stub_1437
0000000000597140 0000000000000034 T shared_dispatch_stub_1438
0000000000597180 0000000000000034 T shared_dispatch_stub_1439
00000000005971c0 0000000000000034 T shared_dispatch_stub_1440
0000000000597200 0000000000000034 T shared_dispatch_stub_1441
0000000000597240 0000000000000034 T shared_dispatch_stub_1442
0000000000597280 0000000000000034 T shared_dispatch_stub_1443
00000000005972c0 0000000000000034 T shared_dispatch_stub_1444
0000000000597300 0000000000000034 T shared_dispatch_stub_1445
0000000000597340 0000000000000034 T shared_dispatch_stub_1446
0000000000597380 0000000000000034 T shared_dispatch_stub_1447
00000000005973c0 0000000000000034 T shared_dispatch_stub_1448
0000000000597400 0000000000000034 T shared_dispatch_stub_1449
0000000000597440 0000000000000034 T shared_dispatch_stub_1450
0000000000597480 0000000000000034 T shared_dispatch_stub_1451
00000000005974c0 0000000000000034 T shared_dispatch_stub_1452
0000000000597500 0000000000000034 T shared_dispatch_stub_1453
0000000000597540 0000000000000034 T shared_dispatch_stub_1454
0000000000597580 0000000000000034 T shared_dispatch_stub_1455
00000000005975c0 0000000000000034 T shared_dispatch_stub_1456
0000000000597600 0000000000000034 T shared_dispatch_stub_1457
0000000000597640 0000000000000034 T shared_dispatch_stub_1458
0000000000597680 0000000000000034 T shared_dispatch_stub_1459
00000000005976c0 0000000000000034 T shared_dispatch_stub_1460
0000000000597700 0000000000000034 T shared_dispatch_stub_1461
0000000000597740 0000000000000034 T shared_dispatch_stub_1462
0000000000597780 0000000000000034 T shared_dispatch_stub_1463
00000000005977c0 0000000000000034 T shared_dispatch_stub_1464
0000000000597800 0000000000000034 T shared_dispatch_stub_1465
0000000000597840 0000000000000034 T shared_dispatch_stub_1466
0000000000597880 0000000000000034 T shared_dispatch_stub_1467
00000000005978c0 0000000000000034 T shared_dispatch_stub_1468
0000000000597900 0000000000000034 T shared_dispatch_stub_1469
0000000000597940 0000000000000034 T shared_dispatch_stub_1470
0000000000597980 0000000000000034 T shared_dispatch_stub_1471
00000000005979c0 0000000000000034 T shared_dispatch_stub_1472
0000000000597a00 0000000000000034 T shared_dispatch_stub_1473
0000000000597a40 0000000000000034 T shared_dispatch_stub_1474
0000000000597a80 0000000000000034 T shared_dispatch_stub_1475
0000000000597ac0 0000000000000034 T shared_dispatch_stub_1476
0000000000597b00 0000000000000034 T shared_dispatch_stub_1477
0000000000597b40 0000000000000034 T shared_dispatch_stub_1478
0000000000597b80 0000000000000034 T shared_dispatch_stub_1479
0000000000597bc0 0000000000000034 T shared_dispatch_stub_1480
0000000000597c00 0000000000000034 T shared_dispatch_stub_1481
0000000000597c40 0000000000000034 T shared_dispatch_stub_1482
0000000000597c80 0000000000000034 T shared_dispatch_stub_1483
0000000000597cc0 0000000000000034 T shared_dispatch_stub_1484
0000000000597d00 0000000000000034 T shared_dispatch_stub_1485
0000000000597d40 0000000000000034 T shared_dispatch_stub_1486
0000000000597d80 0000000000000034 T shared_dispatch_stub_1487
0000000000597dc0 0000000000000034 T shared_dispatch_stub_1488
0000000000597e00 0000000000000034 T shared_dispatch_stub_1489
0000000000597e40 0000000000000034 T shared_dispatch_stub_1490
0000000000597e80 0000000000000034 T shared_dispatch_stub_1491
0000000000597ec0 0000000000000034 T shared_dispatch_stub_1492
0000000000597f00 0000000000000034 T shared_dispatch_stub_1493
0000000000597f40 0000000000000034 T shared_dispatch_stub_1494
0000000000597f80 0000000000000034 T shared_dispatch_stub_1495
0000000000597fc0 0000000000000034 T shared_dispatch_stub_1496
0000000000598000 0000000000000034 T shared_dispatch_stub_1497
0000000000598040 0000000000000034 T shared_dispatch_stub_1498
0000000000598080 0000000000000034 T shared_dispatch_stub_1499
00000000005980c0 0000000000000034 T shared_dispatch_stub_1500
0000000000598100 0000000000000034 T shared_dispatch_stub_1501
0000000000598140 0000000000000034 T shared_dispatch_stub_1502
0000000000598180 0000000000000034 T shared_dispatch_stub_1503
00000000005981c0 0000000000000034 T shared_dispatch_stub_1504
0000000000598200 0000000000000034 T shared_dispatch_stub_1505
0000000000598240 0000000000000034 T shared_dispatch_stub_1506
0000000000598280 0000000000000034 T shared_dispatch_stub_1507
00000000005982c0 0000000000000034 T shared_dispatch_stub_1508
0000000000598300 0000000000000034 T shared_dispatch_stub_1509
0000000000598340 0000000000000034 T shared_dispatch_stub_1510
0000000000598380 0000000000000034 T shared_dispatch_stub_1511
00000000005983c0 0000000000000034 T shared_dispatch_stub_1512
0000000000598400 0000000000000034 T shared_dispatch_stub_1513
0000000000598440 0000000000000034 T shared_dispatch_stub_1514
0000000000598480 0000000000000034 T shared_dispatch_stub_1515
00000000005984c0 0000000000000034 T shared_dispatch_stub_1516
0000000000598500 0000000000000034 T shared_dispatch_stub_1517
0000000000598540 0000000000000034 T shared_dispatch_stub_1518
0000000000598580 0000000000000034 T shared_dispatch_stub_1519
00000000005985c0 0000000000000034 T shared_dispatch_stub_1520
0000000000598600 0000000000000034 T shared_dispatch_stub_1521
0000000000598640 0000000000000034 T shared_dispatch_stub_1522
0000000000598680 0000000000000034 T shared_dispatch_stub_1523
00000000005986c0 0000000000000034 T shared_dispatch_stub_1524
0000000000598700 0000000000000034 T shared_dispatch_stub_1525
0000000000598740 0000000000000034 T shared_dispatch_stub_1526
0000000000598780 0000000000000034 T shared_dispatch_stub_1527
00000000005987c0 0000000000000034 T shared_dispatch_stub_1528
0000000000598800 0000000000000034 T shared_dispatch_stub_1529
0000000000598840 0000000000000034 T shared_dispatch_stub_1530
0000000000598880 0000000000000034 T shared_dispatch_stub_1531
00000000005988c0 0000000000000034 T shared_dispatch_stub_1532
0000000000598900 0000000000000034 T shared_dispatch_stub_1533
0000000000598940 0000000000000034 T shared_dispatch_stub_1534
0000000000598980 0000000000000034 T shared_dispatch_stub_1535
00000000005989c0 0000000000000034 T shared_dispatch_stub_1536
0000000000598a00 0000000000000034 T shared_dispatch_stub_1537
0000000000598a40 0000000000000034 T shared_dispatch_stub_1538
0000000000598a80 0000000000000034 T shared_dispatch_stub_1539
0000000000598ac0 0000000000000034 T shared_dispatch_stub_1540
0000000000598b00 0000000000000034 T shared_dispatch_stub_1541
0000000000598b40 0000000000000034 T shared_dispatch_stub_1542
0000000000598b80 0000000000000034 T shared_dispatch_stub_1543
0000000000598bc0 0000000000000034 T shared_dispatch_stub_1544
0000000000598c00 0000000000000034 T shared_dispatch_stub_1545
0000000000598c40 0000000000000034 T shared_dispatch_stub_1546
0000000000598c80 0000000000000034 T shared_dispatch_stub_1547
0000000000598cc0 0000000000000034 T shared_dispatch_stub_1548
0000000000598d00 0000000000000034 T shared_dispatch_stub_1549
0000000000598d40 0000000000000034 T shared_dispatch_stub_1550
0000000000598d80 0000000000000034 T shared_dispatch_stub_1551
0000000000598dc0 0000000000000034 T shared_dispatch_stub_1552
0000000000598e00 0000000000000034 T shared_dispatch_stub_1553
0000000000598e40 0000000000000034 T shared_dispatch_stub_1554
0000000000598e80 0000000000000034 T shared_dispatch_stub_1555
0000000000598ec0 0000000000000034 T shared_dispatch_stub_1556
0000000000598f00 0000000000000034 T shared_dispatch_stub_1557
0000000000598f40 0000000000000034 T shared_dispatch_stub_1558
0000000000598f80 0000000000000034 T shared_dispatch_stub_1559
0000000000598fc0 0000000000000034 T shared_dispatch_stub_1560
0000000000599000 0000000000000034 T shared_dispatch_stub_1561
0000000000599040 0000000000000034 T shared_dispatch_stub_1562
0000000000599080 0000000000000034 T shared_dispatch_stub_1563
00000000005990c0 0000000000000034 T shared_dispatch_stub_1564
0000000000599100 0000000000000034 T shared_dispatch_stub_1565
0000000000599140 0000000000000034 T shared_dispatch_stub_1566
0000000000599180 0000000000000034 T shared_dispatch_stub_1567
00000000005991c0 0000000000000034 T shared_dispatch_stub_1568
0000000000599200 0000000000000034 T shared_dispatch_stub_1569
0000000000599240 0000000000000034 T shared_dispatch_stub_1570
0000000000599280 0000000000000034 T shared_dispatch_stub_1571
00000000005992c0 0000000000000034 T shared_dispatch_stub_1572
0000000000599300 0000000000000034 T shared_dispatch_stub_1573
0000000000599340 0000000000000034 T shared_dispatch_stub_1574
0000000000599380 0000000000000034 T shared_dispatch_stub_1575
00000000005993c0 0000000000000034 T shared_dispatch_stub_1576
0000000000599400 0000000000000034 T shared_dispatch_stub_1577
0000000000599440 0000000000000034 T shared_dispatch_stub_1578
0000000000599480 0000000000000034 T shared_dispatch_stub_1579
00000000005994c0 0000000000000034 T shared_dispatch_stub_1580
0000000000599500 0000000000000034 T shared_dispatch_stub_1581
0000000000599540 0000000000000034 T shared_dispatch_stub_1582
0000000000599580 0000000000000034 T shared_dispatch_stub_1583
00000000005995c0 0000000000000034 T shared_dispatch_stub_1584
0000000000599600 0000000000000034 T shared_dispatch_stub_1585
0000000000599640 0000000000000034 T shared_dispatch_stub_1586
0000000000599680 0000000000000034 T shared_dispatch_stub_1587
00000000005996c0 0000000000000034 T shared_dispatch_stub_1588
0000000000599700 0000000000000034 T shared_dispatch_stub_1589
0000000000599740 0000000000000034 T shared_dispatch_stub_1590
0000000000599780 0000000000000034 T shared_dispatch_stub_1591
00000000005997c0 0000000000000034 T shared_dispatch_stub_1592
0000000000599800 0000000000000034 T shared_dispatch_stub_1593
0000000000599840 0000000000000034 T shared_dispatch_stub_1594
0000000000599880 0000000000000034 T shared_dispatch_stub_1595
00000000005998c0 0000000000000034 T shared_dispatch_stub_1596
0000000000599900 0000000000000034 T shared_dispatch_stub_1597
0000000000599940 0000000000000034 T shared_dispatch_stub_1598
0000000000599980 0000000000000034 T shared_dispatch_stub_1599
00000000005999c0 0000000000000034 T shared_dispatch_stub_1600
0000000000599a00 0000000000000034 T shared_dispatch_stub_1601
0000000000599a40 0000000000000034 T shared_dispatch_stub_1602
0000000000599a80 0000000000000034 T shared_dispatch_stub_1603
0000000000599ac0 0000000000000034 T shared_dispatch_stub_1604
0000000000599b00 0000000000000034 T shared_dispatch_stub_1605
0000000000599b40 0000000000000034 T shared_dispatch_stub_1606
0000000000599b80 0000000000000034 T shared_dispatch_stub_1607
0000000000599bc0 0000000000000034 T shared_dispatch_stub_1608
0000000000599c00 0000000000000034 T shared_dispatch_stub_1609
0000000000599c40 0000000000000004 T entry_patch_public
0000000000599c50 0000000000000010 t entry_get_public
0000000000599c60 0000000000000008 t entry_generate
0000000000599c70 0000000000000004 t entry_patch
0000000000599c80 0000000000000078 T nouveau_bufctx_new
0000000000599d00 000000000000005c T nouveau_bufctx_reset
0000000000599d60 0000000000000074 T nouveau_bufctx_del
0000000000599de0 0000000000000090 T nouveau_bufctx_refn
0000000000599e70 0000000000000008 T nouveau_object_mclass
0000000000599e80 0000000000000098 T nouveau_object_new
0000000000599f20 0000000000000044 T nouveau_object_del
0000000000599f70 0000000000000028 T nouveau_drm_del
0000000000599fa0 0000000000000050 T nouveau_drm_new
0000000000599ff0 0000000000000100 T nouveau_device_new
000000000059a0f0 0000000000000050 T nouveau_device_del
000000000059a140 0000000000000034 T nouveau_getparam
000000000059a180 000000000000011c T nouveau_client_new
000000000059a2a0 0000000000000088 T nouveau_client_del
000000000059a330 0000000000000184 T nouveau_bo_new
000000000059a4c0 0000000000000104 T nouveau_bo_name_ref
000000000059a5d0 0000000000000010 T nouveau_bo_name_get
000000000059a5e0 00000000000000d0 T nouveau_bo_ref
000000000059a6b0 0000000000000008 T nouveau_bo_prime_handle_ref
000000000059a6c0 0000000000000008 T nouveau_bo_set_prime
000000000059a6d0 0000000000000014 T nouveau_bo_get_syncpoint
000000000059a6f0 000000000000009c T nouveau_bo_wait
000000000059a790 000000000000000c T nouveau_bo_map
000000000059a7a0 0000000000000008 T nouveau_bo_unmap
000000000059a7b0 0000000000000098 t pushbuf_refn_fail
000000000059a850 0000000000000118 T nouveau_pushbuf_del
000000000059a970 0000000000000280 T nouveau_pushbuf_new
000000000059abf0 0000000000000010 T nouveau_pushbuf_bufctx
000000000059ac00 00000000000000c4 T nouveau_pushbuf_data
000000000059ac00 00000000000000c4 t nouveau_pushbuf_data.localalias
000000000059acd0 0000000000000254 t pushbuf_submit.isra.0
000000000059af30 000000000000012c t pushbuf_flush.isra.0
000000000059b060 0000000000000128 t pushbuf_kref
000000000059b190 00000000000001b0 t pushbuf_validate
000000000059b340 0000000000000238 T nouveau_pushbuf_space
000000000059b580 00000000000000cc T nouveau_pushbuf_refn
000000000059b650 0000000000000008 T nouveau_pushbuf_validate
000000000059b660 0000000000000040 T nouveau_pushbuf_kick
000000000059b6a0 000000000000004c T cli_map_free
000000000059b6f0 0000000000000058 T cli_kref_get
000000000059b750 0000000000000058 T cli_push_get
000000000059b7b0 0000000000000110 T cli_kref_set
000000000059b8c0 0000000000000004 T operator delete(void*, unsigned long)
000000000059b8e0 0000000000000004 T operator delete[](void*)
000000000059b900 0000000000000004 T operator delete[](void*, unsigned long)
000000000059b920 000000000000000c W __gnu_cxx::__concurrence_lock_error::what() const
000000000059b940 000000000000000c W __gnu_cxx::__concurrence_unlock_error::what() const
000000000059b960 000000000000000c W __gnu_cxx::__concurrence_broadcast_error::what() const
000000000059b980 000000000000000c W __gnu_cxx::__concurrence_wait_error::what() const
000000000059b9a0 000000000000001c t (anonymous namespace)::init()
000000000059b9c0 000000000000001c t (anonymous namespace)::init_static_cond()
000000000059b9e0 0000000000000014 W __gnu_cxx::__concurrence_lock_error::~__concurrence_lock_error()
000000000059b9e0 0000000000000014 W __gnu_cxx::__concurrence_lock_error::~__concurrence_lock_error()
000000000059ba00 0000000000000038 W __gnu_cxx::__concurrence_lock_error::~__concurrence_lock_error()
000000000059ba40 0000000000000014 W __gnu_cxx::__concurrence_wait_error::~__concurrence_wait_error()
000000000059ba40 0000000000000014 W __gnu_cxx::__concurrence_wait_error::~__concurrence_wait_error()
000000000059ba60 0000000000000038 W __gnu_cxx::__concurrence_wait_error::~__concurrence_wait_error()
000000000059baa0 0000000000000014 W __gnu_cxx::__concurrence_unlock_error::~__concurrence_unlock_error()
000000000059baa0 0000000000000014 W __gnu_cxx::__concurrence_unlock_error::~__concurrence_unlock_error()
000000000059bac0 0000000000000038 W __gnu_cxx::__concurrence_unlock_error::~__concurrence_unlock_error()
000000000059bb00 0000000000000014 W __gnu_cxx::__concurrence_broadcast_error::~__concurrence_broadcast_error()
000000000059bb00 0000000000000014 W __gnu_cxx::__concurrence_broadcast_error::~__concurrence_broadcast_error()
000000000059bb20 0000000000000038 W __gnu_cxx::__concurrence_broadcast_error::~__concurrence_broadcast_error()
000000000059bb60 000000000000014c T __cxa_guard_acquire
000000000059bcc0 0000000000000088 T __cxa_guard_release
000000000059bd60 0000000000000068 T operator new(unsigned long)
000000000059bde0 0000000000000004 T operator new[](unsigned long)
000000000059be00 0000000000000014 T __cxxabiv1::__si_class_type_info::~__si_class_type_info()
000000000059be00 0000000000000014 T __cxxabiv1::__si_class_type_info::~__si_class_type_info()
000000000059be20 0000000000000028 T __cxxabiv1::__si_class_type_info::~__si_class_type_info()
000000000059be60 000000000000015c T __cxxabiv1::__si_class_type_info::__do_dyncast(long, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const
000000000059bfc0 000000000000008c T __cxxabiv1::__si_class_type_info::__do_find_public_src(long, void const*, __cxxabiv1::__class_type_info const*, void const*) const
000000000059c060 0000000000000064 T __cxxabiv1::__si_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const
000000000059c0e0 0000000000000004 T std::type_info::~type_info()
000000000059c0e0 0000000000000004 T std::type_info::~type_info()
000000000059c100 0000000000000008 T std::type_info::__is_pointer_p() const
000000000059c100 0000000000000008 T std::type_info::__is_function_p() const
000000000059c120 0000000000000568 T std::ios_base::Init::Init()
000000000059c120 0000000000000568 T std::ios_base::Init::Init()
000000000059c6a0 0000000000000088 T std::ios_base::Init::~Init()
000000000059c6a0 0000000000000088 T std::ios_base::Init::~Init()
000000000059c740 0000000000000034 T std::__detail::_List_node_base::_M_transfer(std::__detail::_List_node_base*, std::__detail::_List_node_base*)
000000000059c780 0000000000000014 T std::__detail::_List_node_base::_M_hook(std::__detail::_List_node_base*)
000000000059c7a0 0000000000000010 T std::__detail::_List_node_base::_M_unhook()
000000000059c7c0 0000000000000004 T std::locale::facet::~facet()
000000000059c7c0 0000000000000004 T std::locale::facet::~facet()
000000000059c7e0 000000000000003c T std::locale::facet::~facet()
000000000059c7e0 000000000000003c t std::locale::facet::~facet() [clone .localalias]
000000000059c820 0000000000000024 T std::locale::facet::_S_initialize_once()
000000000059c860 0000000000000030 T std::locale::locale(std::locale const&)
000000000059c860 0000000000000030 T std::locale::locale(std::locale const&)
000000000059c8a0 0000000000000008 T std::locale::locale(std::locale::_Impl*)
000000000059c8a0 0000000000000008 T std::locale::locale(std::locale::_Impl*)
000000000059c8c0 0000000000000050 T std::locale::facet::_S_get_c_locale()
000000000059c920 000000000000000c T std::locale::facet::_S_get_c_name()
000000000059c940 00000000000001b8 T std::locale::_Impl::~_Impl()
000000000059c940 00000000000001b8 T std::locale::_Impl::~_Impl()
000000000059cb00 00000000000000ac T std::locale::operator=(std::locale const&)
000000000059cbc0 000000000000005c T std::locale::~locale()
000000000059cbc0 000000000000005c T std::locale::~locale()
000000000059cc20 0000000000000048 T std::locale::id::_M_id() const
000000000059cc80 00000000000004d4 T std::locale::_Impl::_M_install_facet(std::locale::id const*, std::locale::facet const*)
000000000059d160 000000000000025c T std::locale::_Impl::_M_install_cache(std::locale::facet const*, unsigned long)
000000000059d3c0 0000000000000050 T std::_Rb_tree_increment(std::_Rb_tree_node_base*)
000000000059d420 0000000000000050 T std::_Rb_tree_increment(std::_Rb_tree_node_base const*)
000000000059d480 0000000000000064 T std::_Rb_tree_decrement(std::_Rb_tree_node_base*)
000000000059d500 000000000000029c T std::_Rb_tree_insert_and_rebalance(bool, std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, std::_Rb_tree_node_base&)
000000000059d7a0 0000000000000024 t std::__facet_shims::(anonymous namespace)::collate_shim<char>::do_compare(char const*, char const*, char const*, char const*) const
000000000059d7e0 0000000000000058 t std::__facet_shims::(anonymous namespace)::time_get_shim<char>::do_get_year(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, tm*) const
000000000059d840 0000000000000058 t std::__facet_shims::(anonymous namespace)::time_get_shim<char>::do_get_monthname(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, tm*) const
000000000059d8a0 0000000000000058 t std::__facet_shims::(anonymous namespace)::time_get_shim<char>::do_get_weekday(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, tm*) const
000000000059d900 0000000000000058 t std::__facet_shims::(anonymous namespace)::time_get_shim<char>::do_get_date(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, tm*) const
000000000059d960 0000000000000058 t std::__facet_shims::(anonymous namespace)::time_get_shim<char>::do_get_time(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, tm*) const
000000000059d9c0 0000000000000010 t std::__facet_shims::(anonymous namespace)::time_get_shim<char>::do_date_order() const
000000000059d9e0 00000000000000a0 t std::__facet_shims::(anonymous namespace)::money_get_shim<char>::do_get(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, bool, std::ios_base&, std::_Ios_Iostate&, long double&) const
000000000059da80 0000000000000030 t std::__facet_shims::(anonymous namespace)::money_put_shim<char>::do_put(std::ostreambuf_iterator<char, std::char_traits<char> >, bool, std::ios_base&, char, long double) const
000000000059dac0 0000000000000014 t std::__facet_shims::(anonymous namespace)::messages_shim<char>::do_close(int) const
000000000059dae0 000000000000001c t std::__facet_shims::(anonymous namespace)::messages_shim<char>::do_open(std::string const&, std::locale const&) const
000000000059db00 0000000000000024 t std::__facet_shims::(anonymous namespace)::collate_shim<wchar_t>::do_compare(wchar_t const*, wchar_t const*, wchar_t const*, wchar_t const*) const
000000000059db40 0000000000000058 t std::__facet_shims::(anonymous namespace)::time_get_shim<wchar_t>::do_get_year(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, tm*) const
000000000059dba0 0000000000000058 t std::__facet_shims::(anonymous namespace)::time_get_shim<wchar_t>::do_get_monthname(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, tm*) const
000000000059dc00 0000000000000058 t std::__facet_shims::(anonymous namespace)::time_get_shim<wchar_t>::do_get_weekday(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, tm*) const
000000000059dc60 0000000000000058 t std::__facet_shims::(anonymous namespace)::time_get_shim<wchar_t>::do_get_date(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, tm*) const
000000000059dcc0 0000000000000058 t std::__facet_shims::(anonymous namespace)::time_get_shim<wchar_t>::do_get_time(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, tm*) const
000000000059dd20 0000000000000010 t std::__facet_shims::(anonymous namespace)::time_get_shim<wchar_t>::do_date_order() const
000000000059dd40 00000000000000a0 t std::__facet_shims::(anonymous namespace)::money_get_shim<wchar_t>::do_get(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, bool, std::ios_base&, std::_Ios_Iostate&, long double&) const
000000000059dde0 0000000000000028 t std::__facet_shims::(anonymous namespace)::money_put_shim<wchar_t>::do_put(std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, bool, std::ios_base&, wchar_t, long double) const
000000000059de20 0000000000000014 t std::__facet_shims::(anonymous namespace)::messages_shim<wchar_t>::do_close(int) const
000000000059de40 000000000000001c t std::__facet_shims::(anonymous namespace)::messages_shim<wchar_t>::do_open(std::string const&, std::locale const&) const
000000000059de60 00000000000000d4 t wchar_t* std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_S_construct<wchar_t const*>(wchar_t const*, wchar_t const*, std::allocator<wchar_t> const&, std::forward_iterator_tag) [clone .isra.0]
000000000059df40 00000000000000b8 t char* std::string::_S_construct<char const*>(char const*, char const*, std::allocator<char> const&, std::forward_iterator_tag) [clone .isra.0]
000000000059e000 0000000000000094 t std::__facet_shims::(anonymous namespace)::collate_shim<wchar_t>::do_transform(wchar_t const*, wchar_t const*) const
000000000059e0a0 00000000000000a0 t std::__facet_shims::(anonymous namespace)::messages_shim<wchar_t>::do_get(int, int, int, std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> > const&) const
000000000059e140 0000000000000094 t std::__facet_shims::(anonymous namespace)::collate_shim<char>::do_transform(char const*, char const*) const
000000000059e1e0 00000000000000a0 t std::__facet_shims::(anonymous namespace)::messages_shim<char>::do_get(int, int, int, std::string const&) const
000000000059e280 000000000000011c t std::__facet_shims::(anonymous namespace)::money_put_shim<wchar_t>::do_put(std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, bool, std::ios_base&, wchar_t, std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> > const&) const
000000000059e3a0 000000000000011c t std::__facet_shims::(anonymous namespace)::money_put_shim<char>::do_put(std::ostreambuf_iterator<char, std::char_traits<char> >, bool, std::ios_base&, char, std::string const&) const
000000000059e4c0 0000000000000050 t void std::__facet_shims::(anonymous namespace)::__destroy_string<wchar_t>(void*)
000000000059e520 0000000000000050 t void std::__facet_shims::(anonymous namespace)::__destroy_string<char>(void*)
000000000059e580 0000000000000054 t std::__facet_shims::(anonymous namespace)::messages_shim<char>::~messages_shim()
000000000059e580 0000000000000054 t std::__facet_shims::(anonymous namespace)::messages_shim<char>::~messages_shim()
000000000059e5e0 0000000000000054 t std::__facet_shims::(anonymous namespace)::messages_shim<wchar_t>::~messages_shim()
000000000059e5e0 0000000000000054 t std::__facet_shims::(anonymous namespace)::messages_shim<wchar_t>::~messages_shim()
000000000059e640 0000000000000064 t std::__facet_shims::(anonymous namespace)::money_get_shim<char>::~money_get_shim()
000000000059e640 0000000000000064 t std::__facet_shims::(anonymous namespace)::money_get_shim<char>::~money_get_shim()
000000000059e6c0 0000000000000064 t std::__facet_shims::(anonymous namespace)::money_put_shim<char>::~money_put_shim()
000000000059e6c0 0000000000000064 t std::__facet_shims::(anonymous namespace)::money_put_shim<char>::~money_put_shim()
000000000059e740 0000000000000064 t std::__facet_shims::(anonymous namespace)::money_get_shim<wchar_t>::~money_get_shim()
000000000059e740 0000000000000064 t std::__facet_shims::(anonymous namespace)::money_get_shim<wchar_t>::~money_get_shim()
000000000059e7c0 0000000000000064 t std::__facet_shims::(anonymous namespace)::money_put_shim<wchar_t>::~money_put_shim()
000000000059e7c0 0000000000000064 t std::__facet_shims::(anonymous namespace)::money_put_shim<wchar_t>::~money_put_shim()
000000000059e840 0000000000000064 t std::__facet_shims::(anonymous namespace)::time_get_shim<char>::~time_get_shim()
000000000059e840 0000000000000064 t std::__facet_shims::(anonymous namespace)::time_get_shim<char>::~time_get_shim()
000000000059e8c0 0000000000000064 t std::__facet_shims::(anonymous namespace)::time_get_shim<wchar_t>::~time_get_shim()
000000000059e8c0 0000000000000064 t std::__facet_shims::(anonymous namespace)::time_get_shim<wchar_t>::~time_get_shim()
000000000059e940 000000000000005c t std::__facet_shims::(anonymous namespace)::messages_shim<char>::~messages_shim()
000000000059e9a0 000000000000005c t std::__facet_shims::(anonymous namespace)::messages_shim<wchar_t>::~messages_shim()
000000000059ea00 0000000000000058 t std::__facet_shims::(anonymous namespace)::numpunct_shim<char>::~numpunct_shim()
000000000059ea00 0000000000000058 t std::__facet_shims::(anonymous namespace)::numpunct_shim<char>::~numpunct_shim()
000000000059ea60 0000000000000058 t std::__facet_shims::(anonymous namespace)::numpunct_shim<wchar_t>::~numpunct_shim()
000000000059ea60 0000000000000058 t std::__facet_shims::(anonymous namespace)::numpunct_shim<wchar_t>::~numpunct_shim()
000000000059eac0 000000000000006c t std::__facet_shims::(anonymous namespace)::money_get_shim<char>::~money_get_shim()
000000000059eb40 000000000000006c t std::__facet_shims::(anonymous namespace)::money_put_shim<char>::~money_put_shim()
000000000059ebc0 000000000000006c t std::__facet_shims::(anonymous namespace)::money_get_shim<wchar_t>::~money_get_shim()
000000000059ec40 000000000000006c t std::__facet_shims::(anonymous namespace)::money_put_shim<wchar_t>::~money_put_shim()
000000000059ecc0 000000000000006c t std::__facet_shims::(anonymous namespace)::time_get_shim<char>::~time_get_shim()
000000000059ed40 000000000000006c t std::__facet_shims::(anonymous namespace)::time_get_shim<wchar_t>::~time_get_shim()
000000000059edc0 000000000000006c t std::__facet_shims::(anonymous namespace)::collate_shim<char>::~collate_shim()
000000000059edc0 000000000000006c t std::__facet_shims::(anonymous namespace)::collate_shim<char>::~collate_shim()
000000000059ee40 000000000000006c t std::__facet_shims::(anonymous namespace)::collate_shim<wchar_t>::~collate_shim()
000000000059ee40 000000000000006c t std::__facet_shims::(anonymous namespace)::collate_shim<wchar_t>::~collate_shim()
000000000059eec0 0000000000000060 t std::__facet_shims::(anonymous namespace)::numpunct_shim<char>::~numpunct_shim()
000000000059ef20 0000000000000060 t std::__facet_shims::(anonymous namespace)::numpunct_shim<wchar_t>::~numpunct_shim()
000000000059ef80 0000000000000074 t std::__facet_shims::(anonymous namespace)::collate_shim<char>::~collate_shim()
000000000059f000 0000000000000074 t std::__facet_shims::(anonymous namespace)::collate_shim<wchar_t>::~collate_shim()
000000000059f080 0000000000000064 t std::__facet_shims::(anonymous namespace)::moneypunct_shim<char, true>::~moneypunct_shim()
000000000059f080 0000000000000064 t std::__facet_shims::(anonymous namespace)::moneypunct_shim<char, true>::~moneypunct_shim()
000000000059f100 0000000000000064 t std::__facet_shims::(anonymous namespace)::moneypunct_shim<char, false>::~moneypunct_shim()
000000000059f100 0000000000000064 t std::__facet_shims::(anonymous namespace)::moneypunct_shim<char, false>::~moneypunct_shim()
000000000059f180 0000000000000064 t std::__facet_shims::(anonymous namespace)::moneypunct_shim<wchar_t, true>::~moneypunct_shim()
000000000059f180 0000000000000064 t std::__facet_shims::(anonymous namespace)::moneypunct_shim<wchar_t, true>::~moneypunct_shim()
000000000059f200 0000000000000064 t std::__facet_shims::(anonymous namespace)::moneypunct_shim<wchar_t, false>::~moneypunct_shim()
000000000059f200 0000000000000064 t std::__facet_shims::(anonymous namespace)::moneypunct_shim<wchar_t, false>::~moneypunct_shim()
000000000059f280 000000000000006c t std::__facet_shims::(anonymous namespace)::moneypunct_shim<char, true>::~moneypunct_shim()
000000000059f300 000000000000006c t std::__facet_shims::(anonymous namespace)::moneypunct_shim<char, false>::~moneypunct_shim()
000000000059f380 000000000000006c t std::__facet_shims::(anonymous namespace)::moneypunct_shim<wchar_t, true>::~moneypunct_shim()
000000000059f400 000000000000006c t std::__facet_shims::(anonymous namespace)::moneypunct_shim<wchar_t, false>::~moneypunct_shim()
000000000059f480 0000000000000140 t std::__facet_shims::(anonymous namespace)::money_get_shim<wchar_t>::do_get(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, bool, std::ios_base&, std::_Ios_Iostate&, std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >&) const
000000000059f5c0 0000000000000140 t std::__facet_shims::(anonymous namespace)::money_get_shim<char>::do_get(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, bool, std::ios_base&, std::_Ios_Iostate&, std::string&) const
000000000059f700 000000000000002c W std::locale::facet::_M_remove_reference() const
000000000059f740 0000000000000208 W void std::__facet_shims::__numpunct_fill_cache<char>(std::integral_constant<bool, false>, std::locale::facet const*, std::__numpunct_cache<char>*)
000000000059f960 0000000000000260 W void std::__facet_shims::__numpunct_fill_cache<wchar_t>(std::integral_constant<bool, false>, std::locale::facet const*, std::__numpunct_cache<wchar_t>*)
000000000059fbc0 0000000000000024 W int std::__facet_shims::__collate_compare<char>(std::integral_constant<bool, false>, std::locale::facet const*, char const*, char const*, char const*, char const*)
000000000059fc00 0000000000000024 W int std::__facet_shims::__collate_compare<wchar_t>(std::integral_constant<bool, false>, std::locale::facet const*, wchar_t const*, wchar_t const*, wchar_t const*, wchar_t const*)
000000000059fc40 0000000000000100 W void std::__facet_shims::__collate_transform<char>(std::integral_constant<bool, false>, std::locale::facet const*, std::__facet_shims::__any_string&, char const*, char const*)
000000000059fd40 0000000000000100 W void std::__facet_shims::__collate_transform<wchar_t>(std::integral_constant<bool, false>, std::locale::facet const*, std::__facet_shims::__any_string&, wchar_t const*, wchar_t const*)
000000000059fe40 00000000000002cc W void std::__facet_shims::__moneypunct_fill_cache<char, true>(std::integral_constant<bool, false>, std::locale::facet const*, std::__moneypunct_cache<char, true>*)
00000000005a0120 00000000000002cc W void std::__facet_shims::__moneypunct_fill_cache<char, false>(std::integral_constant<bool, false>, std::locale::facet const*, std::__moneypunct_cache<char, false>*)
00000000005a0400 0000000000000340 W void std::__facet_shims::__moneypunct_fill_cache<wchar_t, true>(std::integral_constant<bool, false>, std::locale::facet const*, std::__moneypunct_cache<wchar_t, true>*)
00000000005a0740 0000000000000340 W void std::__facet_shims::__moneypunct_fill_cache<wchar_t, false>(std::integral_constant<bool, false>, std::locale::facet const*, std::__moneypunct_cache<wchar_t, false>*)
00000000005a0a80 00000000000000b4 W int std::__facet_shims::__messages_open<char>(std::integral_constant<bool, false>, std::locale::facet const*, char const*, unsigned long, std::locale const&)
00000000005a0b40 00000000000000b4 W int std::__facet_shims::__messages_open<wchar_t>(std::integral_constant<bool, false>, std::locale::facet const*, char const*, unsigned long, std::locale const&)
00000000005a0c00 0000000000000184 W void std::__facet_shims::__messages_get<char>(std::integral_constant<bool, false>, std::locale::facet const*, std::__facet_shims::__any_string&, int, int, int, char const*, unsigned long)
00000000005a0da0 0000000000000184 W void std::__facet_shims::__messages_get<wchar_t>(std::integral_constant<bool, false>, std::locale::facet const*, std::__facet_shims::__any_string&, int, int, int, wchar_t const*, unsigned long)
00000000005a0f40 0000000000000018 W void std::__facet_shims::__messages_close<char>(std::integral_constant<bool, false>, std::locale::facet const*, int)
00000000005a0f60 0000000000000018 W void std::__facet_shims::__messages_close<wchar_t>(std::integral_constant<bool, false>, std::locale::facet const*, int)
00000000005a0f80 0000000000000014 W std::time_base::dateorder std::__facet_shims::__time_get_dateorder<char>(std::integral_constant<bool, false>, std::locale::facet const*)
00000000005a0fa0 0000000000000014 W std::time_base::dateorder std::__facet_shims::__time_get_dateorder<wchar_t>(std::integral_constant<bool, false>, std::locale::facet const*)
00000000005a0fc0 00000000000000a4 W std::istreambuf_iterator<char, std::char_traits<char> > std::__facet_shims::__time_get<char>(std::integral_constant<bool, false>, std::locale::facet const*, std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, tm*, char)
00000000005a1080 00000000000000a4 W std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::__facet_shims::__time_get<wchar_t>(std::integral_constant<bool, false>, std::locale::facet const*, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, tm*, char)
00000000005a1140 0000000000000198 W std::istreambuf_iterator<char, std::char_traits<char> > std::__facet_shims::__money_get<char>(std::integral_constant<bool, false>, std::locale::facet const*, std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, bool, std::ios_base&, std::_Ios_Iostate&, long double*, std::__facet_shims::__any_string*)
00000000005a12e0 0000000000000198 W std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::__facet_shims::__money_get<wchar_t>(std::integral_constant<bool, false>, std::locale::facet const*, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, bool, std::ios_base&, std::_Ios_Iostate&, long double*, std::__facet_shims::__any_string*)
00000000005a1480 0000000000000140 W std::ostreambuf_iterator<char, std::char_traits<char> > std::__facet_shims::__money_put<char>(std::integral_constant<bool, false>, std::locale::facet const*, std::ostreambuf_iterator<char, std::char_traits<char> >, bool, std::ios_base&, char, long double, std::__facet_shims::__any_string const*)
00000000005a15c0 0000000000000140 W std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::__facet_shims::__money_put<wchar_t>(std::integral_constant<bool, false>, std::locale::facet const*, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, bool, std::ios_base&, wchar_t, long double, std::__facet_shims::__any_string const*)
00000000005a1700 0000000000000988 T std::locale::facet::_M_cow_shim(std::locale::id const*) const
00000000005a20a0 0000000000000090 W std::string::copy(char*, unsigned long, unsigned long) const
00000000005a2140 0000000000000034 W std::string::swap(std::string&)
00000000005a2180 0000000000000038 W std::string::find_first_not_of(char, unsigned long) const
00000000005a21c0 0000000000000080 W std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator<char> const&)
00000000005a2240 000000000000009c W std::string::_S_construct(unsigned long, char, std::allocator<char> const&)
00000000005a22e0 0000000000000004 W std::string::_Rep::_M_destroy(std::allocator<char> const&)
00000000005a2300 00000000000001ec W std::string::_M_mutate(unsigned long, unsigned long, unsigned long)
00000000005a2500 0000000000000058 W std::string::_M_leak_hard()
00000000005a2560 0000000000000018 W std::string::_M_leak()
00000000005a2580 000000000000009c W std::string::_M_replace_aux(unsigned long, unsigned long, unsigned long, char)
00000000005a2620 0000000000000078 W std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long)
00000000005a26a0 0000000000000130 W std::string::assign(char const*, unsigned long)
00000000005a27e0 00000000000000ac W std::string::_Rep::_M_clone(std::allocator<char> const&, unsigned long)
00000000005a28a0 00000000000000c0 W std::string::reserve(unsigned long)
00000000005a2960 00000000000000d4 W std::string::append(std::string const&)
00000000005a2a40 0000000000000134 W std::string::append(char const*, unsigned long)
00000000005a2b80 00000000000000f4 W std::string::append(unsigned long, char)
00000000005a2c80 0000000000000054 W std::string::resize(unsigned long, char)
00000000005a2ce0 000000000000009c W std::string::push_back(char)
00000000005a2d80 0000000000000094 W std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::copy(wchar_t*, unsigned long, unsigned long) const
00000000005a2e20 0000000000000034 W std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::swap(std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >&)
00000000005a2e60 0000000000000094 W std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_Rep::_S_create(unsigned long, unsigned long, std::allocator<wchar_t> const&)
00000000005a2f00 00000000000000a4 W std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_S_construct(unsigned long, wchar_t, std::allocator<wchar_t> const&)
00000000005a2fc0 0000000000000004 W std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_Rep::_M_destroy(std::allocator<wchar_t> const&)
00000000005a2fe0 00000000000001fc W std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_M_mutate(unsigned long, unsigned long, unsigned long)
00000000005a31e0 0000000000000058 W std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_M_leak_hard()
00000000005a3240 000000000000009c W std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_M_replace_aux(unsigned long, unsigned long, unsigned long, wchar_t)
00000000005a32e0 000000000000007c W std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_M_replace_safe(unsigned long, unsigned long, wchar_t const*, unsigned long)
00000000005a3360 000000000000010c W std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::assign(wchar_t const*, unsigned long)
00000000005a3480 00000000000000b0 W std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_Rep::_M_clone(std::allocator<wchar_t> const&, unsigned long)
00000000005a3540 00000000000000c0 W std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::reserve(unsigned long)
00000000005a3600 00000000000000dc W std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::append(std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> > const&)
00000000005a36e0 0000000000000144 W std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::append(wchar_t const*, unsigned long)
00000000005a3840 00000000000000f4 W std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::append(unsigned long, wchar_t)
00000000005a3940 000000000000004c W std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::resize(unsigned long, wchar_t)
00000000005a39a0 0000000000000094 W std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::push_back(wchar_t)
00000000005a3a40 0000000000000008 W std::ctype<char>::do_narrow(char, char) const
00000000005a3a60 0000000000000048 T std::ctype<char>::~ctype()
00000000005a3a60 0000000000000048 T std::ctype<char>::~ctype()
00000000005a3ac0 0000000000000044 T std::ctype<wchar_t>::~ctype()
00000000005a3ac0 0000000000000044 T std::ctype<wchar_t>::~ctype()
00000000005a3b20 0000000000000024 T std::ctype<char>::~ctype()
00000000005a3b60 0000000000000024 T std::ctype<wchar_t>::~ctype()
00000000005a3ba0 0000000000000034 W std::ctype<char>::do_narrow(char const*, char const*, char, char*) const
00000000005a3be0 0000000000000034 W std::ctype<char>::do_widen(char const*, char const*, char*) const
00000000005a3c20 0000000000000158 T std::ctype<char>::_M_widen_init() const
00000000005a3d80 000000000000006c T std::ctype<wchar_t>::ctype(unsigned long)
00000000005a3d80 000000000000006c T std::ctype<wchar_t>::ctype(unsigned long)
00000000005a3e00 0000000000000020 T std::ctype<char>::do_toupper(char) const
00000000005a3e00 0000000000000020 t std::ctype<char>::do_toupper(char) const [clone .localalias]
00000000005a3e20 0000000000000018 T std::ctype<char>::do_tolower(char) const
00000000005a3e20 0000000000000018 t std::ctype<char>::do_tolower(char) const [clone .localalias]
00000000005a3e40 0000000000000010 T std::ctype<char>::classic_table()
00000000005a3e60 00000000000000bc T std::ctype<char>::ctype(char const*, bool, unsigned long)
00000000005a3e60 00000000000000bc T std::ctype<char>::ctype(char const*, bool, unsigned long)
00000000005a3f20 0000000000000094 T std::ctype<char>::do_toupper(char*, char const*) const
00000000005a3fc0 0000000000000090 T std::ctype<char>::do_tolower(char*, char const*) const
00000000005a4060 0000000000000088 T std::ctype<wchar_t>::do_is(char, wchar_t) const
00000000005a4060 0000000000000088 t std::ctype<wchar_t>::do_is(char, wchar_t) const [clone .localalias]
00000000005a4100 0000000000000110 T std::ctype<wchar_t>::_M_convert_to_wmask(char) const
00000000005a4220 0000000000000008 T std::ctype<wchar_t>::do_toupper(wchar_t) const
00000000005a4240 0000000000000068 T std::ctype<wchar_t>::do_toupper(wchar_t*, wchar_t const*) const
00000000005a42c0 0000000000000008 T std::ctype<wchar_t>::do_tolower(wchar_t) const
00000000005a42e0 0000000000000068 T std::ctype<wchar_t>::do_tolower(wchar_t*, wchar_t const*) const
00000000005a4360 00000000000000bc T std::ctype<wchar_t>::do_is(wchar_t const*, wchar_t const*, char*) const
00000000005a4420 00000000000000d0 T std::ctype<wchar_t>::do_scan_is(char, wchar_t const*, wchar_t const*) const
00000000005a4500 00000000000000e4 T std::ctype<wchar_t>::do_scan_not(char, wchar_t const*, wchar_t const*) const
00000000005a4600 000000000000000c T std::ctype<wchar_t>::do_widen(char) const
00000000005a4620 0000000000000034 T std::ctype<wchar_t>::do_widen(char const*, char const*, wchar_t*) const
00000000005a4660 000000000000005c T std::ctype<wchar_t>::do_narrow(wchar_t, char) const
00000000005a46c0 00000000000000ec T std::ctype<wchar_t>::do_narrow(wchar_t const*, wchar_t const*, char, char*) const
00000000005a47c0 00000000000000c8 T std::ctype<wchar_t>::_M_initialize_ctype()
00000000005a48a0 0000000000000024 t std::__facet_shims::(anonymous namespace)::collate_shim<char>::do_compare(char const*, char const*, char const*, char const*) const
00000000005a48e0 0000000000000058 t std::__facet_shims::(anonymous namespace)::time_get_shim<char>::do_get_year(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, tm*) const
00000000005a4940 0000000000000058 t std::__facet_shims::(anonymous namespace)::time_get_shim<char>::do_get_monthname(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, tm*) const
00000000005a49a0 0000000000000058 t std::__facet_shims::(anonymous namespace)::time_get_shim<char>::do_get_weekday(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, tm*) const
00000000005a4a00 0000000000000058 t std::__facet_shims::(anonymous namespace)::time_get_shim<char>::do_get_date(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, tm*) const
00000000005a4a60 0000000000000058 t std::__facet_shims::(anonymous namespace)::time_get_shim<char>::do_get_time(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, tm*) const
00000000005a4ac0 0000000000000010 t std::__facet_shims::(anonymous namespace)::time_get_shim<char>::do_date_order() const
00000000005a4ae0 00000000000000a0 t std::__facet_shims::(anonymous namespace)::money_get_shim<char>::do_get(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, bool, std::ios_base&, std::_Ios_Iostate&, long double&) const
00000000005a4b80 0000000000000030 t std::__facet_shims::(anonymous namespace)::money_put_shim<char>::do_put(std::ostreambuf_iterator<char, std::char_traits<char> >, bool, std::ios_base&, char, long double) const
00000000005a4bc0 0000000000000014 t std::__facet_shims::(anonymous namespace)::messages_shim<char>::do_close(int) const
00000000005a4be0 0000000000000018 t std::__facet_shims::(anonymous namespace)::messages_shim<char>::do_open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::locale const&) const
00000000005a4c00 0000000000000024 t std::__facet_shims::(anonymous namespace)::collate_shim<wchar_t>::do_compare(wchar_t const*, wchar_t const*, wchar_t const*, wchar_t const*) const
00000000005a4c40 0000000000000058 t std::__facet_shims::(anonymous namespace)::time_get_shim<wchar_t>::do_get_year(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, tm*) const
00000000005a4ca0 0000000000000058 t std::__facet_shims::(anonymous namespace)::time_get_shim<wchar_t>::do_get_monthname(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, tm*) const
00000000005a4d00 0000000000000058 t std::__facet_shims::(anonymous namespace)::time_get_shim<wchar_t>::do_get_weekday(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, tm*) const
00000000005a4d60 0000000000000058 t std::__facet_shims::(anonymous namespace)::time_get_shim<wchar_t>::do_get_date(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, tm*) const
00000000005a4dc0 0000000000000058 t std::__facet_shims::(anonymous namespace)::time_get_shim<wchar_t>::do_get_time(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, tm*) const
00000000005a4e20 0000000000000010 t std::__facet_shims::(anonymous namespace)::time_get_shim<wchar_t>::do_date_order() const
00000000005a4e40 00000000000000a0 t std::__facet_shims::(anonymous namespace)::money_get_shim<wchar_t>::do_get(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, bool, std::ios_base&, std::_Ios_Iostate&, long double&) const
00000000005a4ee0 0000000000000028 t std::__facet_shims::(anonymous namespace)::money_put_shim<wchar_t>::do_put(std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, bool, std::ios_base&, wchar_t, long double) const
00000000005a4f20 0000000000000014 t std::__facet_shims::(anonymous namespace)::messages_shim<wchar_t>::do_close(int) const
00000000005a4f40 0000000000000018 t std::__facet_shims::(anonymous namespace)::messages_shim<wchar_t>::do_open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::locale const&) const
00000000005a4f60 00000000000000ac t void std::__cxx11::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_M_construct<wchar_t const*>(wchar_t const*, wchar_t const*, std::forward_iterator_tag) [clone .isra.0]
00000000005a5020 00000000000000bc t void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*, std::forward_iterator_tag) [clone .isra.0]
00000000005a50e0 00000000000000d8 t std::__facet_shims::(anonymous namespace)::money_put_shim<char>::do_put(std::ostreambuf_iterator<char, std::char_traits<char> >, bool, std::ios_base&, char, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const
00000000005a51c0 00000000000000bc t void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag) [clone .isra.0]
00000000005a5280 00000000000000ac t void std::__cxx11::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_M_construct<wchar_t*>(wchar_t*, wchar_t*, std::forward_iterator_tag) [clone .isra.0]
00000000005a5340 00000000000000dc t std::__facet_shims::(anonymous namespace)::money_put_shim<wchar_t>::do_put(std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, bool, std::ios_base&, wchar_t, std::__cxx11::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> > const&) const
00000000005a5420 00000000000000b0 t std::__facet_shims::(anonymous namespace)::messages_shim<char>::do_get(int, int, int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const
00000000005a54e0 00000000000000a8 t std::__facet_shims::(anonymous namespace)::collate_shim<wchar_t>::do_transform(wchar_t const*, wchar_t const*) const
00000000005a55a0 00000000000000b0 t std::__facet_shims::(anonymous namespace)::messages_shim<wchar_t>::do_get(int, int, int, std::__cxx11::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> > const&) const
00000000005a5660 00000000000000a8 t std::__facet_shims::(anonymous namespace)::collate_shim<char>::do_transform(char const*, char const*) const
00000000005a5720 0000000000000018 t void std::__facet_shims::(anonymous namespace)::__destroy_string<wchar_t>(void*)
00000000005a5740 0000000000000018 t void std::__facet_shims::(anonymous namespace)::__destroy_string<char>(void*)
00000000005a5760 0000000000000054 t std::__facet_shims::(anonymous namespace)::messages_shim<char>::~messages_shim()
00000000005a5760 0000000000000054 t std::__facet_shims::(anonymous namespace)::messages_shim<char>::~messages_shim()
00000000005a57c0 0000000000000054 t std::__facet_shims::(anonymous namespace)::messages_shim<wchar_t>::~messages_shim()
00000000005a57c0 0000000000000054 t std::__facet_shims::(anonymous namespace)::messages_shim<wchar_t>::~messages_shim()
00000000005a5820 0000000000000064 t std::__facet_shims::(anonymous namespace)::money_get_shim<char>::~money_get_shim()
00000000005a5820 0000000000000064 t std::__facet_shims::(anonymous namespace)::money_get_shim<char>::~money_get_shim()
00000000005a58a0 0000000000000064 t std::__facet_shims::(anonymous namespace)::money_put_shim<char>::~money_put_shim()
00000000005a58a0 0000000000000064 t std::__facet_shims::(anonymous namespace)::money_put_shim<char>::~money_put_shim()
00000000005a5920 0000000000000064 t std::__facet_shims::(anonymous namespace)::money_get_shim<wchar_t>::~money_get_shim()
00000000005a5920 0000000000000064 t std::__facet_shims::(anonymous namespace)::money_get_shim<wchar_t>::~money_get_shim()
00000000005a59a0 0000000000000064 t std::__facet_shims::(anonymous namespace)::money_put_shim<wchar_t>::~money_put_shim()
00000000005a59a0 0000000000000064 t std::__facet_shims::(anonymous namespace)::money_put_shim<wchar_t>::~money_put_shim()
00000000005a5a20 0000000000000064 t std::__facet_shims::(anonymous namespace)::time_get_shim<char>::~time_get_shim()
00000000005a5a20 0000000000000064 t std::__facet_shims::(anonymous namespace)::time_get_shim<char>::~time_get_shim()
00000000005a5aa0 0000000000000064 t std::__facet_shims::(anonymous namespace)::time_get_shim<wchar_t>::~time_get_shim()
00000000005a5aa0 0000000000000064 t std::__facet_shims::(anonymous namespace)::time_get_shim<wchar_t>::~time_get_shim()
00000000005a5b20 000000000000005c t std::__facet_shims::(anonymous namespace)::messages_shim<char>::~messages_shim()
00000000005a5b80 000000000000005c t std::__facet_shims::(anonymous namespace)::messages_shim<wchar_t>::~messages_shim()
00000000005a5be0 0000000000000058 t std::__facet_shims::(anonymous namespace)::numpunct_shim<char>::~numpunct_shim()
00000000005a5be0 0000000000000058 t std::__facet_shims::(anonymous namespace)::numpunct_shim<char>::~numpunct_shim()
00000000005a5c40 0000000000000058 t std::__facet_shims::(anonymous namespace)::numpunct_shim<wchar_t>::~numpunct_shim()
00000000005a5c40 0000000000000058 t std::__facet_shims::(anonymous namespace)::numpunct_shim<wchar_t>::~numpunct_shim()
00000000005a5ca0 000000000000006c t std::__facet_shims::(anonymous namespace)::money_get_shim<char>::~money_get_shim()
00000000005a5d20 000000000000006c t std::__facet_shims::(anonymous namespace)::money_put_shim<char>::~money_put_shim()
00000000005a5da0 000000000000006c t std::__facet_shims::(anonymous namespace)::money_get_shim<wchar_t>::~money_get_shim()
00000000005a5e20 000000000000006c t std::__facet_shims::(anonymous namespace)::money_put_shim<wchar_t>::~money_put_shim()
00000000005a5ea0 000000000000006c t std::__facet_shims::(anonymous namespace)::time_get_shim<char>::~time_get_shim()
00000000005a5f20 000000000000006c t std::__facet_shims::(anonymous namespace)::time_get_shim<wchar_t>::~time_get_shim()
00000000005a5fa0 000000000000006c t std::__facet_shims::(anonymous namespace)::collate_shim<char>::~collate_shim()
00000000005a5fa0 000000000000006c t std::__facet_shims::(anonymous namespace)::collate_shim<char>::~collate_shim()
00000000005a6020 000000000000006c t std::__facet_shims::(anonymous namespace)::collate_shim<wchar_t>::~collate_shim()
00000000005a6020 000000000000006c t std::__facet_shims::(anonymous namespace)::collate_shim<wchar_t>::~collate_shim()
00000000005a60a0 0000000000000060 t std::__facet_shims::(anonymous namespace)::numpunct_shim<char>::~numpunct_shim()
00000000005a6100 0000000000000060 t std::__facet_shims::(anonymous namespace)::numpunct_shim<wchar_t>::~numpunct_shim()
00000000005a6160 0000000000000074 t std::__facet_shims::(anonymous namespace)::collate_shim<char>::~collate_shim()
00000000005a61e0 0000000000000074 t std::__facet_shims::(anonymous namespace)::collate_shim<wchar_t>::~collate_shim()
00000000005a6260 0000000000000064 t std::__facet_shims::(anonymous namespace)::moneypunct_shim<char, true>::~moneypunct_shim()
00000000005a6260 0000000000000064 t std::__facet_shims::(anonymous namespace)::moneypunct_shim<char, true>::~moneypunct_shim()
00000000005a62e0 0000000000000064 t std::__facet_shims::(anonymous namespace)::moneypunct_shim<char, false>::~moneypunct_shim()
00000000005a62e0 0000000000000064 t std::__facet_shims::(anonymous namespace)::moneypunct_shim<char, false>::~moneypunct_shim()
00000000005a6360 0000000000000064 t std::__facet_shims::(anonymous namespace)::moneypunct_shim<wchar_t, true>::~moneypunct_shim()
00000000005a6360 0000000000000064 t std::__facet_shims::(anonymous namespace)::moneypunct_shim<wchar_t, true>::~moneypunct_shim()
00000000005a63e0 0000000000000064 t std::__facet_shims::(anonymous namespace)::moneypunct_shim<wchar_t, false>::~moneypunct_shim()
00000000005a63e0 0000000000000064 t std::__facet_shims::(anonymous namespace)::moneypunct_shim<wchar_t, false>::~moneypunct_shim()
00000000005a6460 000000000000006c t std::__facet_shims::(anonymous namespace)::moneypunct_shim<char, true>::~moneypunct_shim()
00000000005a64e0 000000000000006c t std::__facet_shims::(anonymous namespace)::moneypunct_shim<char, false>::~moneypunct_shim()
00000000005a6560 000000000000006c t std::__facet_shims::(anonymous namespace)::moneypunct_shim<wchar_t, true>::~moneypunct_shim()
00000000005a65e0 000000000000006c t std::__facet_shims::(anonymous namespace)::moneypunct_shim<wchar_t, false>::~moneypunct_shim()
00000000005a6660 00000000000001b4 t std::__facet_shims::(anonymous namespace)::money_get_shim<wchar_t>::do_get(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, bool, std::ios_base&, std::_Ios_Iostate&, std::__cxx11::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >&) const
00000000005a6820 0000000000000224 t std::__facet_shims::(anonymous namespace)::money_get_shim<char>::do_get(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, bool, std::ios_base&, std::_Ios_Iostate&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&) const
00000000005a6a60 0000000000000180 W void std::__facet_shims::__numpunct_fill_cache<char>(std::integral_constant<bool, true>, std::locale::facet const*, std::__numpunct_cache<char>*)
00000000005a6be0 00000000000001d0 W void std::__facet_shims::__numpunct_fill_cache<wchar_t>(std::integral_constant<bool, true>, std::locale::facet const*, std::__numpunct_cache<wchar_t>*)
00000000005a6dc0 0000000000000024 W int std::__facet_shims::__collate_compare<char>(std::integral_constant<bool, true>, std::locale::facet const*, char const*, char const*, char const*, char const*)
00000000005a6e00 0000000000000024 W int std::__facet_shims::__collate_compare<wchar_t>(std::integral_constant<bool, true>, std::locale::facet const*, wchar_t const*, wchar_t const*, wchar_t const*, wchar_t const*)
00000000005a6e40 0000000000000098 W void std::__facet_shims::__collate_transform<char>(std::integral_constant<bool, true>, std::locale::facet const*, std::__facet_shims::__any_string&, char const*, char const*)
00000000005a6ee0 0000000000000098 W void std::__facet_shims::__collate_transform<wchar_t>(std::integral_constant<bool, true>, std::locale::facet const*, std::__facet_shims::__any_string&, wchar_t const*, wchar_t const*)
00000000005a6f80 0000000000000218 W void std::__facet_shims::__moneypunct_fill_cache<char, true>(std::integral_constant<bool, true>, std::locale::facet const*, std::__moneypunct_cache<char, true>*)
00000000005a71a0 0000000000000218 W void std::__facet_shims::__moneypunct_fill_cache<char, false>(std::integral_constant<bool, true>, std::locale::facet const*, std::__moneypunct_cache<char, false>*)
00000000005a73c0 0000000000000284 W void std::__facet_shims::__moneypunct_fill_cache<wchar_t, true>(std::integral_constant<bool, true>, std::locale::facet const*, std::__moneypunct_cache<wchar_t, true>*)
00000000005a7660 0000000000000284 W void std::__facet_shims::__moneypunct_fill_cache<wchar_t, false>(std::integral_constant<bool, true>, std::locale::facet const*, std::__moneypunct_cache<wchar_t, false>*)
00000000005a7900 000000000000009c W int std::__facet_shims::__messages_open<char>(std::integral_constant<bool, true>, std::locale::facet const*, char const*, unsigned long, std::locale const&)
00000000005a79a0 000000000000009c W int std::__facet_shims::__messages_open<wchar_t>(std::integral_constant<bool, true>, std::locale::facet const*, char const*, unsigned long, std::locale const&)
00000000005a7a40 0000000000000114 W void std::__facet_shims::__messages_get<char>(std::integral_constant<bool, true>, std::locale::facet const*, std::__facet_shims::__any_string&, int, int, int, char const*, unsigned long)
00000000005a7b60 0000000000000114 W void std::__facet_shims::__messages_get<wchar_t>(std::integral_constant<bool, true>, std::locale::facet const*, std::__facet_shims::__any_string&, int, int, int, wchar_t const*, unsigned long)
00000000005a7c80 0000000000000018 W void std::__facet_shims::__messages_close<char>(std::integral_constant<bool, true>, std::locale::facet const*, int)
00000000005a7ca0 0000000000000018 W void std::__facet_shims::__messages_close<wchar_t>(std::integral_constant<bool, true>, std::locale::facet const*, int)
00000000005a7cc0 0000000000000014 W std::time_base::dateorder std::__facet_shims::__time_get_dateorder<char>(std::integral_constant<bool, true>, std::locale::facet const*)
00000000005a7ce0 0000000000000014 W std::time_base::dateorder std::__facet_shims::__time_get_dateorder<wchar_t>(std::integral_constant<bool, true>, std::locale::facet const*)
00000000005a7d00 00000000000000a4 W std::istreambuf_iterator<char, std::char_traits<char> > std::__facet_shims::__time_get<char>(std::integral_constant<bool, true>, std::locale::facet const*, std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, tm*, char)
00000000005a7dc0 00000000000000a4 W std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::__facet_shims::__time_get<wchar_t>(std::integral_constant<bool, true>, std::locale::facet const*, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, tm*, char)
00000000005a7e80 0000000000000128 W std::istreambuf_iterator<char, std::char_traits<char> > std::__facet_shims::__money_get<char>(std::integral_constant<bool, true>, std::locale::facet const*, std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, bool, std::ios_base&, std::_Ios_Iostate&, long double*, std::__facet_shims::__any_string*)
00000000005a7fc0 0000000000000128 W std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::__facet_shims::__money_get<wchar_t>(std::integral_constant<bool, true>, std::locale::facet const*, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, bool, std::ios_base&, std::_Ios_Iostate&, long double*, std::__facet_shims::__any_string*)
00000000005a8100 0000000000000120 W std::ostreambuf_iterator<char, std::char_traits<char> > std::__facet_shims::__money_put<char>(std::integral_constant<bool, true>, std::locale::facet const*, std::ostreambuf_iterator<char, std::char_traits<char> >, bool, std::ios_base&, char, long double, std::__facet_shims::__any_string const*)
00000000005a8220 0000000000000120 W std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::__facet_shims::__money_put<wchar_t>(std::integral_constant<bool, true>, std::locale::facet const*, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, bool, std::ios_base&, wchar_t, long double, std::__facet_shims::__any_string const*)
00000000005a8340 0000000000000988 T std::locale::facet::_M_sso_shim(std::locale::id const*) const
00000000005a8ce0 000000000000000c W std::__cxx11::moneypunct<wchar_t, false>::do_decimal_point() const
00000000005a8d00 000000000000000c W std::__cxx11::moneypunct<wchar_t, false>::do_thousands_sep() const
00000000005a8d20 000000000000000c W std::__cxx11::moneypunct<wchar_t, false>::do_frac_digits() const
00000000005a8d40 000000000000000c W std::__cxx11::moneypunct<wchar_t, false>::do_pos_format() const
00000000005a8d60 000000000000000c W std::__cxx11::moneypunct<wchar_t, false>::do_neg_format() const
00000000005a8d80 000000000000000c W std::__cxx11::moneypunct<wchar_t, true>::do_decimal_point() const
00000000005a8da0 000000000000000c W std::__cxx11::moneypunct<wchar_t, true>::do_thousands_sep() const
00000000005a8dc0 000000000000000c W std::__cxx11::moneypunct<wchar_t, true>::do_frac_digits() const
00000000005a8de0 000000000000000c W std::__cxx11::moneypunct<wchar_t, true>::do_pos_format() const
00000000005a8e00 000000000000000c W std::__cxx11::moneypunct<wchar_t, true>::do_neg_format() const
00000000005a8e20 000000000000000c W std::__cxx11::numpunct<wchar_t>::do_decimal_point() const
00000000005a8e40 000000000000000c W std::__cxx11::numpunct<wchar_t>::do_thousands_sep() const
00000000005a8e60 0000000000000008 W std::__cxx11::time_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::do_date_order() const
00000000005a8e80 0000000000000008 W std::__cxx11::messages<wchar_t>::do_open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::locale const&) const
00000000005a8ea0 0000000000000004 W std::__cxx11::messages<wchar_t>::do_close(int) const
00000000005a8ec0 0000000000000024 W std::__cxx11::collate<wchar_t>::do_hash(wchar_t const*, wchar_t const*) const
00000000005a8f00 0000000000000014 W std::__cxx11::money_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::~money_get()
00000000005a8f00 0000000000000014 W std::__cxx11::money_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::~money_get()
00000000005a8f20 0000000000000034 W std::__cxx11::money_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::~money_get()
00000000005a8f60 0000000000000014 W std::__cxx11::money_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::~money_put()
00000000005a8f60 0000000000000014 W std::__cxx11::money_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::~money_put()
00000000005a8f80 0000000000000034 W std::__cxx11::money_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::~money_put()
00000000005a8fc0 0000000000000014 W std::__cxx11::time_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::~time_get()
00000000005a8fc0 0000000000000014 W std::__cxx11::time_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::~time_get()
00000000005a8fe0 0000000000000034 W std::__cxx11::time_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::~time_get()
00000000005a9020 0000000000000034 W std::__cxx11::messages<wchar_t>::~messages()
00000000005a9020 0000000000000034 W std::__cxx11::messages<wchar_t>::~messages()
00000000005a9060 0000000000000024 W std::__cxx11::messages<wchar_t>::~messages()
00000000005a90a0 0000000000000034 W std::__cxx11::collate<wchar_t>::~collate()
00000000005a90a0 0000000000000034 W std::__cxx11::collate<wchar_t>::~collate()
00000000005a90e0 00000000000000ac t void std::__cxx11::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_M_construct<wchar_t const*>(wchar_t const*, wchar_t const*, std::forward_iterator_tag) [clone .isra.0]
00000000005a91a0 000000000000003c W std::__cxx11::collate<wchar_t>::~collate()
00000000005a91e0 00000000000000ec W std::__cxx11::numpunct<wchar_t>::do_grouping() const
00000000005a92e0 00000000000000ec W std::__cxx11::moneypunct<wchar_t, false>::do_grouping() const
00000000005a93e0 00000000000000ec W std::__cxx11::moneypunct<wchar_t, true>::do_grouping() const
00000000005a94e0 000000000000005c W std::__cxx11::moneypunct<wchar_t, false>::do_curr_symbol() const
00000000005a9540 000000000000005c W std::__cxx11::moneypunct<wchar_t, false>::do_positive_sign() const
00000000005a95a0 000000000000005c W std::__cxx11::moneypunct<wchar_t, false>::do_negative_sign() const
00000000005a9600 000000000000005c W std::__cxx11::moneypunct<wchar_t, true>::do_curr_symbol() const
00000000005a9660 000000000000005c W std::__cxx11::moneypunct<wchar_t, true>::do_positive_sign() const
00000000005a96c0 000000000000005c W std::__cxx11::moneypunct<wchar_t, true>::do_negative_sign() const
00000000005a9720 000000000000005c W std::__cxx11::numpunct<wchar_t>::do_truename() const
00000000005a9780 000000000000005c W std::__cxx11::numpunct<wchar_t>::do_falsename() const
00000000005a97e0 000000000000011c W std::__cxx11::collate<wchar_t>::do_compare(wchar_t const*, wchar_t const*, wchar_t const*, wchar_t const*) const
00000000005a9900 0000000000000210 W std::__cxx11::collate<wchar_t>::do_transform(wchar_t const*, wchar_t const*) const
00000000005a9b20 0000000000000150 W std::__convert_from_v(int* const&, char*, int, char const*, ...)
00000000005a9c80 00000000000012ac W std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::__cxx11::money_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract<true>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&) const
00000000005aaf40 00000000000012ac W std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::__cxx11::money_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract<false>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&) const
00000000005ac200 00000000000000c4 W std::__cxx11::money_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::do_get(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, bool, std::ios_base&, std::_Ios_Iostate&, long double&) const
00000000005ac2e0 0000000000000144 W std::__cxx11::money_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::do_get(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, bool, std::ios_base&, std::_Ios_Iostate&, std::__cxx11::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >&) const
00000000005ac440 00000000000006bc W std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::__cxx11::money_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_insert<true>(std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, wchar_t, std::__cxx11::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> > const&) const
00000000005acb00 00000000000006bc W std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::__cxx11::money_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_insert<false>(std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, wchar_t, std::__cxx11::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> > const&) const
00000000005ad1c0 00000000000001bc W std::__cxx11::money_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::do_put(std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, bool, std::ios_base&, wchar_t, long double) const
00000000005ad380 0000000000000020 W std::__cxx11::money_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::do_put(std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, bool, std::ios_base&, wchar_t, std::__cxx11::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> > const&) const
00000000005ad3a0 0000000000000288 W std::__cxx11::time_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_num(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, int&, int, int, unsigned long, std::ios_base&, std::_Ios_Iostate&) const
00000000005ad640 00000000000005fc W std::__cxx11::time_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::do_get_year(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, tm*) const
00000000005adc40 0000000000000c48 W std::__cxx11::time_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_name(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, int&, wchar_t const**, unsigned long, std::ios_base&, std::_Ios_Iostate&) const
00000000005ae8a0 0000000000000538 W std::__cxx11::time_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_wday_or_month(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, int&, wchar_t const**, unsigned long, std::ios_base&, std::_Ios_Iostate&) const
00000000005aede0 0000000000000220 W std::__cxx11::time_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::do_get_weekday(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, tm*) const
00000000005af000 0000000000000228 W std::__cxx11::time_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::do_get_monthname(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, tm*) const
00000000005af240 0000000000000058 W std::__cxx11::messages<wchar_t>::messages(unsigned long)
00000000005af240 0000000000000058 W std::__cxx11::messages<wchar_t>::messages(unsigned long)
00000000005af2a0 0000000000000064 W std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >::_M_get() const
00000000005af320 00000000000018d8 W std::__cxx11::time_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_via_format(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, tm*, wchar_t const*, std::__time_get_state&) const
00000000005af320 00000000000018d8 t std::__cxx11::time_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_via_format(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, tm*, wchar_t const*, std::__time_get_state&) const [clone .localalias]
00000000005b0c00 00000000000001b8 W std::__cxx11::time_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::do_get_time(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, tm*) const
00000000005b0dc0 00000000000001b8 W std::__cxx11::time_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::do_get_date(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, tm*) const
00000000005b0f80 00000000000001cc W std::__cxx11::time_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::do_get(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, tm*, char, char) const
00000000005b1160 0000000000000014 W __gnu_cxx::stdio_sync_filebuf<char, std::char_traits<char> >::~stdio_sync_filebuf()
00000000005b1160 0000000000000014 W __gnu_cxx::stdio_sync_filebuf<char, std::char_traits<char> >::~stdio_sync_filebuf()
00000000005b1180 0000000000000034 W __gnu_cxx::stdio_sync_filebuf<char, std::char_traits<char> >::~stdio_sync_filebuf()
00000000005b11c0 0000000000000014 W __gnu_cxx::stdio_sync_filebuf<wchar_t, std::char_traits<wchar_t> >::~stdio_sync_filebuf()
00000000005b11c0 0000000000000014 W __gnu_cxx::stdio_sync_filebuf<wchar_t, std::char_traits<wchar_t> >::~stdio_sync_filebuf()
00000000005b11e0 0000000000000034 W __gnu_cxx::stdio_sync_filebuf<wchar_t, std::char_traits<wchar_t> >::~stdio_sync_filebuf()
00000000005b1220 0000000000000028 W __gnu_cxx::stdio_sync_filebuf<char, std::char_traits<char> >::uflow()
00000000005b1260 0000000000000028 W __gnu_cxx::stdio_sync_filebuf<char, std::char_traits<char> >::underflow()
00000000005b12a0 0000000000000060 W __gnu_cxx::stdio_sync_filebuf<char, std::char_traits<char> >::pbackfail(int)
00000000005b1300 0000000000000008 W __gnu_cxx::stdio_sync_filebuf<char, std::char_traits<char> >::sync()
00000000005b1320 0000000000000008 W __gnu_cxx::stdio_sync_filebuf<wchar_t, std::char_traits<wchar_t> >::sync()
00000000005b1340 0000000000000064 W __gnu_cxx::stdio_sync_filebuf<char, std::char_traits<char> >::seekoff(long, std::_Ios_Seekdir, std::_Ios_Openmode)
00000000005b13c0 0000000000000064 W __gnu_cxx::stdio_sync_filebuf<wchar_t, std::char_traits<wchar_t> >::seekoff(long, std::_Ios_Seekdir, std::_Ios_Openmode)
00000000005b1440 0000000000000028 W __gnu_cxx::stdio_sync_filebuf<wchar_t, std::char_traits<wchar_t> >::uflow()
00000000005b1480 000000000000007c W __gnu_cxx::stdio_sync_filebuf<wchar_t, std::char_traits<wchar_t> >::xsgetn(wchar_t*, long)
00000000005b1500 0000000000000028 W __gnu_cxx::stdio_sync_filebuf<wchar_t, std::char_traits<wchar_t> >::underflow()
00000000005b1540 0000000000000060 W __gnu_cxx::stdio_sync_filebuf<wchar_t, std::char_traits<wchar_t> >::pbackfail(unsigned int)
00000000005b15a0 0000000000000064 W __gnu_cxx::stdio_sync_filebuf<wchar_t, std::char_traits<wchar_t> >::xsputn(wchar_t const*, long)
00000000005b1620 0000000000000014 W __gnu_cxx::stdio_sync_filebuf<char, std::char_traits<char> >::xsputn(char const*, long)
00000000005b1640 0000000000000048 W __gnu_cxx::stdio_sync_filebuf<char, std::char_traits<char> >::xsgetn(char*, long)
00000000005b16a0 0000000000000038 W __gnu_cxx::stdio_sync_filebuf<wchar_t, std::char_traits<wchar_t> >::overflow(unsigned int)
00000000005b16e0 0000000000000038 W __gnu_cxx::stdio_sync_filebuf<char, std::char_traits<char> >::overflow(int)
00000000005b1720 0000000000000074 W __gnu_cxx::stdio_sync_filebuf<wchar_t, std::char_traits<wchar_t> >::seekpos(std::fpos<_mbstate_t>, std::_Ios_Openmode)
00000000005b17a0 0000000000000074 W __gnu_cxx::stdio_sync_filebuf<char, std::char_traits<char> >::seekpos(std::fpos<_mbstate_t>, std::_Ios_Openmode)
00000000005b1820 00000000000000c0 T std::__detail::_Prime_rehash_policy::_M_next_bkt(unsigned long) const
00000000005b18e0 000000000000009c T std::__detail::_Prime_rehash_policy::_M_need_rehash(unsigned long, unsigned long, unsigned long) const
00000000005b1980 0000000000000014 W std::basic_ios<char, std::char_traits<char> >::~basic_ios()
00000000005b1980 0000000000000014 W std::basic_ios<char, std::char_traits<char> >::~basic_ios()
00000000005b19a0 0000000000000014 W std::basic_ios<wchar_t, std::char_traits<wchar_t> >::~basic_ios()
00000000005b19a0 0000000000000014 W std::basic_ios<wchar_t, std::char_traits<wchar_t> >::~basic_ios()
00000000005b19c0 0000000000000034 W std::basic_ios<char, std::char_traits<char> >::~basic_ios()
00000000005b1a00 0000000000000034 W std::basic_ios<wchar_t, std::char_traits<wchar_t> >::~basic_ios()
00000000005b1a40 0000000000000038 W std::basic_ios<char, std::char_traits<char> >::clear(std::_Ios_Iostate)
00000000005b1a80 0000000000000024 W std::basic_ios<char, std::char_traits<char> >::_M_setstate(std::_Ios_Iostate)
00000000005b1ac0 000000000000007c W std::basic_ios<char, std::char_traits<char> >::_M_cache_locale(std::locale const&)
00000000005b1b40 0000000000000048 W std::basic_ios<char, std::char_traits<char> >::init(std::basic_streambuf<char, std::char_traits<char> >*)
00000000005b1ba0 0000000000000038 W std::basic_ios<wchar_t, std::char_traits<wchar_t> >::clear(std::_Ios_Iostate)
00000000005b1be0 0000000000000024 W std::basic_ios<wchar_t, std::char_traits<wchar_t> >::_M_setstate(std::_Ios_Iostate)
00000000005b1c20 000000000000007c W std::basic_ios<wchar_t, std::char_traits<wchar_t> >::_M_cache_locale(std::locale const&)
00000000005b1ca0 000000000000004c W std::basic_ios<wchar_t, std::char_traits<wchar_t> >::init(std::basic_streambuf<wchar_t, std::char_traits<wchar_t> >*)
00000000005b1d00 0000000000000060 T std::ios_base::ios_base()
00000000005b1d00 0000000000000060 T std::ios_base::ios_base()
00000000005b1d60 0000000000000068 T std::ios_base::_M_call_callbacks(std::ios_base::event)
00000000005b1de0 0000000000000054 T std::ios_base::_M_dispose_callbacks()
00000000005b1e40 000000000000005c T std::ios_base::~ios_base()
00000000005b1e40 000000000000005c T std::ios_base::~ios_base()
00000000005b1ea0 0000000000000024 T std::ios_base::~ios_base()
00000000005b1ee0 000000000000002c W std::basic_istream<char, std::char_traits<char> >::~basic_istream()
00000000005b1f0c 0000000000000034 W virtual thunk to std::basic_istream<char, std::char_traits<char> >::~basic_istream()
00000000005b1f40 0000000000000048 W std::basic_istream<char, std::char_traits<char> >::~basic_istream()
00000000005b1f88 0000000000000050 W virtual thunk to std::basic_istream<char, std::char_traits<char> >::~basic_istream()
00000000005b1fe0 000000000000002c W std::basic_istream<wchar_t, std::char_traits<wchar_t> >::~basic_istream()
00000000005b200c 0000000000000034 W virtual thunk to std::basic_istream<wchar_t, std::char_traits<wchar_t> >::~basic_istream()
00000000005b2040 0000000000000048 W std::basic_istream<wchar_t, std::char_traits<wchar_t> >::~basic_istream()
00000000005b2088 0000000000000050 W virtual thunk to std::basic_istream<wchar_t, std::char_traits<wchar_t> >::~basic_istream()
00000000005b20e0 000000000000000c W std::moneypunct<char, false>::do_decimal_point() const
00000000005b2100 000000000000000c W std::moneypunct<char, false>::do_thousands_sep() const
00000000005b2120 000000000000000c W std::moneypunct<char, false>::do_frac_digits() const
00000000005b2140 000000000000000c W std::moneypunct<char, false>::do_pos_format() const
00000000005b2160 000000000000000c W std::moneypunct<char, false>::do_neg_format() const
00000000005b2180 000000000000000c W std::moneypunct<char, true>::do_decimal_point() const
00000000005b21a0 000000000000000c W std::moneypunct<char, true>::do_thousands_sep() const
00000000005b21c0 000000000000000c W std::moneypunct<char, true>::do_frac_digits() const
00000000005b21e0 000000000000000c W std::moneypunct<char, true>::do_pos_format() const
00000000005b2200 000000000000000c W std::moneypunct<char, true>::do_neg_format() const
00000000005b2220 000000000000000c W std::numpunct<char>::do_decimal_point() const
00000000005b2240 000000000000000c W std::numpunct<char>::do_thousands_sep() const
00000000005b2260 0000000000000008 W std::time_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::do_date_order() const
00000000005b2280 0000000000000008 W std::messages<char>::do_open(std::string const&, std::locale const&) const
00000000005b22a0 0000000000000004 W std::messages<char>::do_close(int) const
00000000005b22c0 0000000000000024 W std::collate<char>::do_hash(char const*, char const*) const
00000000005b2300 0000000000000014 W std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::~num_get()
00000000005b2300 0000000000000014 W std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::~num_get()
00000000005b2320 0000000000000014 W std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::~num_put()
00000000005b2320 0000000000000014 W std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::~num_put()
00000000005b2340 0000000000000014 W std::money_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::~money_get()
00000000005b2340 0000000000000014 W std::money_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::~money_get()
00000000005b2360 0000000000000014 W std::money_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::~money_put()
00000000005b2360 0000000000000014 W std::money_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::~money_put()
00000000005b2380 0000000000000014 W std::__timepunct_cache<char>::~__timepunct_cache()
00000000005b2380 0000000000000014 W std::__timepunct_cache<char>::~__timepunct_cache()
00000000005b23a0 0000000000000014 W std::time_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::~time_put()
00000000005b23a0 0000000000000014 W std::time_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::~time_put()
00000000005b23c0 0000000000000014 W std::time_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::~time_get()
00000000005b23c0 0000000000000014 W std::time_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::~time_get()
00000000005b23e0 0000000000000034 W std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::~num_get()
00000000005b2420 0000000000000034 W std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::~num_put()
00000000005b2460 0000000000000034 W std::money_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::~money_get()
00000000005b24a0 0000000000000034 W std::money_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::~money_put()
00000000005b24e0 0000000000000024 W std::__timepunct_cache<char>::~__timepunct_cache()
00000000005b2520 0000000000000034 W std::time_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::~time_put()
00000000005b2560 0000000000000034 W std::time_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::~time_get()
00000000005b25a0 0000000000000068 W std::__moneypunct_cache<char, false>::~__moneypunct_cache()
00000000005b25a0 0000000000000068 W std::__moneypunct_cache<char, false>::~__moneypunct_cache()
00000000005b2620 0000000000000024 W std::__moneypunct_cache<char, false>::~__moneypunct_cache()
00000000005b2660 0000000000000068 W std::__moneypunct_cache<char, true>::~__moneypunct_cache()
00000000005b2660 0000000000000068 W std::__moneypunct_cache<char, true>::~__moneypunct_cache()
00000000005b26e0 0000000000000024 W std::__moneypunct_cache<char, true>::~__moneypunct_cache()
00000000005b2720 000000000000005c W std::__numpunct_cache<char>::~__numpunct_cache()
00000000005b2720 000000000000005c W std::__numpunct_cache<char>::~__numpunct_cache()
00000000005b2780 0000000000000024 W std::__numpunct_cache<char>::~__numpunct_cache()
00000000005b27c0 0000000000000034 W std::messages<char>::~messages()
00000000005b27c0 0000000000000034 W std::messages<char>::~messages()
00000000005b2800 0000000000000024 W std::messages<char>::~messages()
00000000005b2840 0000000000000034 W std::collate<char>::~collate()
00000000005b2840 0000000000000034 W std::collate<char>::~collate()
00000000005b2880 0000000000000068 W std::__timepunct<char>::~__timepunct()
00000000005b2880 0000000000000068 W std::__timepunct<char>::~__timepunct()
00000000005b2900 0000000000000024 W std::__timepunct<char>::~__timepunct()
00000000005b2940 0000000000000028 t std::basic_streambuf<char, std::char_traits<char> >::sbumpc() [clone .isra.0]
00000000005b2980 0000000000000058 t std::ctype<char>::widen(char) const [clone .part.0]
00000000005b29e0 00000000000000a0 t std::ctype<char>::widen(char const*, char const*, char*) const [clone .isra.0]
00000000005b2a80 00000000000000b8 t char* std::string::_S_construct<char const*>(char const*, char const*, std::allocator<char> const&, std::forward_iterator_tag) [clone .isra.0]
00000000005b2b40 0000000000000050 t std::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string() [clone .isra.0]
00000000005b2ba0 000000000000003c W std::collate<char>::~collate()
00000000005b2be0 0000000000000164 W std::time_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::do_put(std::ostreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, char, tm const*, char, char) const
00000000005b2d60 00000000000000d8 W std::moneypunct<char, false>::do_grouping() const
00000000005b2e40 00000000000000d8 W std::moneypunct<char, false>::do_curr_symbol() const
00000000005b2f20 00000000000000d8 W std::moneypunct<char, false>::do_positive_sign() const
00000000005b3000 00000000000000d8 W std::moneypunct<char, false>::do_negative_sign() const
00000000005b30e0 00000000000000d8 W std::moneypunct<char, true>::do_grouping() const
00000000005b31c0 00000000000000d8 W std::moneypunct<char, true>::do_curr_symbol() const
00000000005b32a0 00000000000000d8 W std::moneypunct<char, true>::do_positive_sign() const
00000000005b3380 00000000000000d8 W std::moneypunct<char, true>::do_negative_sign() const
00000000005b3460 00000000000000d8 W std::numpunct<char>::do_grouping() const
00000000005b3540 00000000000000d8 W std::numpunct<char>::do_truename() const
00000000005b3620 00000000000000d8 W std::numpunct<char>::do_falsename() const
00000000005b3700 000000000000018c W std::collate<char>::do_compare(char const*, char const*, char const*, char const*) const
00000000005b38a0 00000000000001fc W std::collate<char>::do_transform(char const*, char const*) const
00000000005b3aa0 000000000000007c W std::ctype<char>::narrow(char, char) const
00000000005b3b20 0000000000000558 W std::__moneypunct_cache<char, false>::_M_cache(std::locale const&)
00000000005b4080 0000000000000558 W std::__moneypunct_cache<char, true>::_M_cache(std::locale const&)
00000000005b45e0 0000000000000494 W std::__numpunct_cache<char>::_M_cache(std::locale const&)
00000000005b4a80 00000000000000e4 t std::__use_cache<std::__numpunct_cache<char> >::operator()(std::locale const&) const [clone .isra.0]
00000000005b4b80 0000000000000068 W std::__timepunct<char>::__timepunct(std::__timepunct_cache<char>*, unsigned long)
00000000005b4b80 0000000000000068 W std::__timepunct<char>::__timepunct(std::__timepunct_cache<char>*, unsigned long)
00000000005b4c00 00000000000002c4 W std::time_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_num(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, int&, int, int, unsigned long, std::ios_base&, std::_Ios_Iostate&) const
00000000005b4ee0 0000000000000058 W std::messages<char>::messages(unsigned long)
00000000005b4ee0 0000000000000058 W std::messages<char>::messages(unsigned long)
00000000005b4f40 000000000000014c W char* std::__add_grouping<char>(char*, char, char const*, unsigned long, char const*, char const*)
00000000005b50a0 00000000000000bc W std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::_M_group_float(char const*, unsigned long, char, char const*, char*, char*, int&) const
00000000005b5160 0000000000000050 W std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::_M_group_int(char const*, unsigned long, char, std::ios_base&, char*, char*, int&) const
00000000005b51c0 000000000000056c W std::ostreambuf_iterator<char, std::char_traits<char> > std::money_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::_M_insert<true>(std::ostreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, char, std::string const&) const
00000000005b5740 000000000000056c W std::ostreambuf_iterator<char, std::char_traits<char> > std::money_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::_M_insert<false>(std::ostreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, char, std::string const&) const
00000000005b5cc0 0000000000000294 W std::money_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::do_put(std::ostreambuf_iterator<char, std::char_traits<char> >, bool, std::ios_base&, char, long double) const
00000000005b5f60 0000000000000020 W std::money_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::do_put(std::ostreambuf_iterator<char, std::char_traits<char> >, bool, std::ios_base&, char, std::string const&) const
00000000005b5f80 00000000000002ec W std::__pad<char, std::char_traits<char> >::_S_pad(std::ios_base&, char, char*, char const*, long, long)
00000000005b6280 000000000000003c W std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::_M_pad(char, long, std::ios_base&, char*, char const*, int&) const
00000000005b62c0 0000000000000408 W std::ostreambuf_iterator<char, std::char_traits<char> > std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::_M_insert_float<double>(std::ostreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, char, char, double) const
00000000005b66e0 0000000000000008 W std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::do_put(std::ostreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, char, double) const
00000000005b6700 0000000000000410 W std::ostreambuf_iterator<char, std::char_traits<char> > std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::_M_insert_float<long double>(std::ostreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, char, char, long double) const
00000000005b6b20 0000000000000008 W std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::do_put(std::ostreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, char, long double) const
00000000005b6b40 00000000000000a4 W int std::__int_to_char<char, unsigned long>(char*, unsigned long, char const*, std::_Ios_Fmtflags, bool)
00000000005b6c00 0000000000000218 W std::ostreambuf_iterator<char, std::char_traits<char> > std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::_M_insert_int<long>(std::ostreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, char, long) const
00000000005b6e20 0000000000000004 W std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::do_put(std::ostreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, char, long) const
00000000005b6e40 000000000000019c W std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::do_put(std::ostreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, char, bool) const
00000000005b6fe0 00000000000001cc W std::ostreambuf_iterator<char, std::char_traits<char> > std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::_M_insert_int<unsigned long>(std::ostreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, char, unsigned long) const
00000000005b71c0 0000000000000004 W std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::do_put(std::ostreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, char, unsigned long) const
00000000005b71e0 0000000000000050 W std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::do_put(std::ostreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, char, void const*) const
00000000005b7240 00000000000000a4 W int std::__int_to_char<char, unsigned long long>(char*, unsigned long long, char const*, std::_Ios_Fmtflags, bool)
00000000005b7300 0000000000000218 W std::ostreambuf_iterator<char, std::char_traits<char> > std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::_M_insert_int<long long>(std::ostreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, char, long long) const
00000000005b7520 0000000000000004 W std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::do_put(std::ostreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, char, long long) const
00000000005b7540 00000000000001cc W std::ostreambuf_iterator<char, std::char_traits<char> > std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::_M_insert_int<unsigned long long>(std::ostreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, char, unsigned long long) const
00000000005b7720 0000000000000004 W std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::do_put(std::ostreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, char, unsigned long long) const
00000000005b7740 00000000000000e8 W std::istreambuf_iterator<char, std::char_traits<char> >::equal(std::istreambuf_iterator<char, std::char_traits<char> > const&) const
00000000005b7840 000000000000006c W std::istreambuf_iterator<char, std::char_traits<char> >::_M_get() const
00000000005b78c0 0000000000000be4 W std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_float(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const
00000000005b84c0 00000000000001c8 W std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::do_get(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, float&) const
00000000005b86a0 00000000000001c8 W std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::do_get(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, double&) const
00000000005b8880 00000000000001c8 W std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::do_get(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, long double&) const
00000000005b8a60 000000000000092c W std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<long>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, long&) const
00000000005b93a0 0000000000000458 W std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::do_get(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, bool&) const
00000000005b9800 0000000000000004 W std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::do_get(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, long&) const
00000000005b9820 0000000000000a44 W std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<unsigned short>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, unsigned short&) const
00000000005ba280 0000000000000004 W std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::do_get(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, unsigned short&) const
00000000005ba2a0 0000000000000a10 W std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<unsigned int>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, unsigned int&) const
00000000005bacc0 0000000000000004 W std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::do_get(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, unsigned int&) const
00000000005bace0 0000000000000a54 W std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<unsigned long>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, unsigned long&) const
00000000005bb740 0000000000000004 W std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::do_get(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, unsigned long&) const
00000000005bb760 000000000000005c W std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::do_get(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, void*&) const
00000000005bb7c0 000000000000092c W std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<long long>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, long long&) const
00000000005bc100 0000000000000004 W std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::do_get(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, long long&) const
00000000005bc120 000000000000099c W std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<unsigned long long>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, unsigned long long&) const
00000000005bcac0 0000000000000004 W std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::do_get(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, unsigned long long&) const
00000000005bcae0 00000000000002bc W std::time_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::do_get_year(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, tm*) const
00000000005bcda0 00000000000009e4 W std::time_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_name(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, int&, char const**, unsigned long, std::ios_base&, std::_Ios_Iostate&) const
00000000005bd7a0 00000000000003d8 W std::time_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_wday_or_month(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, int&, char const**, unsigned long, std::ios_base&, std::_Ios_Iostate&) const
00000000005bdb80 0000000000000208 W std::time_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::do_get_weekday(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, tm*) const
00000000005bdda0 0000000000000210 W std::time_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::do_get_monthname(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, tm*) const
00000000005bdfc0 00000000000010d8 W std::time_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_via_format(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, tm*, char const*, std::__time_get_state&) const
00000000005bdfc0 00000000000010d8 t std::time_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_via_format(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, tm*, char const*, std::__time_get_state&) const [clone .localalias]
00000000005bf0a0 000000000000019c W std::time_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::do_get_time(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, tm*) const
00000000005bf240 000000000000019c W std::time_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::do_get_date(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, tm*) const
00000000005bf3e0 0000000000000ef0 W std::istreambuf_iterator<char, std::char_traits<char> > std::money_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract<true>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const
00000000005c02e0 0000000000000ef0 W std::istreambuf_iterator<char, std::char_traits<char> > std::money_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract<false>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const
00000000005c11e0 00000000000000f0 W std::money_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::do_get(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, bool, std::ios_base&, std::_Ios_Iostate&, long double&) const
00000000005c12e0 0000000000000200 W std::money_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::do_get(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, bool, std::ios_base&, std::_Ios_Iostate&, std::string&) const
00000000005c14e0 0000000000000af8 T std::locale::_Impl::_Impl(unsigned long)
00000000005c14e0 0000000000000af8 T std::locale::_Impl::_Impl(unsigned long)
00000000005c1fe0 0000000000000064 T std::locale::_S_initialize_once()
00000000005c2060 000000000000003c T std::locale::_S_initialize()
00000000005c20a0 0000000000000100 T std::locale::locale()
00000000005c20a0 0000000000000100 T std::locale::locale()
00000000005c21a0 0000000000000028 W std::basic_ostream<char, std::char_traits<char> >::~basic_ostream()
00000000005c21c8 0000000000000034 W virtual thunk to std::basic_ostream<char, std::char_traits<char> >::~basic_ostream()
00000000005c2200 0000000000000044 W std::basic_ostream<char, std::char_traits<char> >::~basic_ostream()
00000000005c2244 0000000000000050 W virtual thunk to std::basic_ostream<char, std::char_traits<char> >::~basic_ostream()
00000000005c22a0 0000000000000028 W std::basic_ostream<wchar_t, std::char_traits<wchar_t> >::~basic_ostream()
00000000005c22c8 0000000000000034 W virtual thunk to std::basic_ostream<wchar_t, std::char_traits<wchar_t> >::~basic_ostream()
00000000005c2300 0000000000000044 W std::basic_ostream<wchar_t, std::char_traits<wchar_t> >::~basic_ostream()
00000000005c2344 0000000000000050 W virtual thunk to std::basic_ostream<wchar_t, std::char_traits<wchar_t> >::~basic_ostream()
00000000005c23a0 0000000000000078 W std::ostream::sentry::~sentry()
00000000005c23a0 0000000000000078 W std::ostream::sentry::~sentry()
00000000005c2420 000000000000015c W std::ostream::flush()
00000000005c2580 0000000000000088 W std::ostream::sentry::sentry(std::ostream&)
00000000005c2580 0000000000000088 W std::ostream::sentry::sentry(std::ostream&)
00000000005c2620 0000000000000174 W std::ostream::put(char)
00000000005c27a0 0000000000000414 W std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)
00000000005c2bc0 0000000000000068 W std::basic_ostream<char, std::char_traits<char> >& std::operator<< <std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*)
00000000005c2c40 00000000000001fc W std::ostream& std::ostream::_M_insert<long>(long)
00000000005c2e40 0000000000000034 W std::ostream::operator<<(int)
00000000005c2e80 0000000000000078 W std::basic_ostream<wchar_t, std::char_traits<wchar_t> >::sentry::~sentry()
00000000005c2e80 0000000000000078 W std::basic_ostream<wchar_t, std::char_traits<wchar_t> >::sentry::~sentry()
00000000005c2f00 000000000000015c W std::basic_ostream<wchar_t, std::char_traits<wchar_t> >::flush()
00000000005c3060 0000000000000088 W std::basic_ostream<wchar_t, std::char_traits<wchar_t> >::sentry::sentry(std::basic_ostream<wchar_t, std::char_traits<wchar_t> >&)
00000000005c3060 0000000000000088 W std::basic_ostream<wchar_t, std::char_traits<wchar_t> >::sentry::sentry(std::basic_ostream<wchar_t, std::char_traits<wchar_t> >&)
00000000005c3100 0000000000000004 W std::basic_streambuf<char, std::char_traits<char> >::imbue(std::locale const&)
00000000005c3120 0000000000000004 W std::basic_streambuf<char, std::char_traits<char> >::setbuf(char*, long)
00000000005c3140 000000000000000c W std::basic_streambuf<char, std::char_traits<char> >::seekoff(long, std::_Ios_Seekdir, std::_Ios_Openmode)
00000000005c3160 000000000000000c W std::basic_streambuf<char, std::char_traits<char> >::seekpos(std::fpos<_mbstate_t>, std::_Ios_Openmode)
00000000005c3180 0000000000000008 W std::basic_streambuf<char, std::char_traits<char> >::sync()
00000000005c31a0 0000000000000008 W std::basic_streambuf<char, std::char_traits<char> >::showmanyc()
00000000005c31c0 0000000000000008 W std::basic_streambuf<char, std::char_traits<char> >::underflow()
00000000005c31e0 0000000000000008 W std::basic_streambuf<char, std::char_traits<char> >::pbackfail(int)
00000000005c3200 0000000000000008 W std::basic_streambuf<char, std::char_traits<char> >::overflow(int)
00000000005c3220 0000000000000004 W std::basic_streambuf<wchar_t, std::char_traits<wchar_t> >::imbue(std::locale const&)
00000000005c3240 0000000000000004 W std::basic_streambuf<wchar_t, std::char_traits<wchar_t> >::setbuf(wchar_t*, long)
00000000005c3260 000000000000000c W std::basic_streambuf<wchar_t, std::char_traits<wchar_t> >::seekoff(long, std::_Ios_Seekdir, std::_Ios_Openmode)
00000000005c3280 000000000000000c W std::basic_streambuf<wchar_t, std::char_traits<wchar_t> >::seekpos(std::fpos<_mbstate_t>, std::_Ios_Openmode)
00000000005c32a0 0000000000000008 W std::basic_streambuf<wchar_t, std::char_traits<wchar_t> >::sync()
00000000005c32c0 0000000000000008 W std::basic_streambuf<wchar_t, std::char_traits<wchar_t> >::showmanyc()
00000000005c32e0 0000000000000008 W std::basic_streambuf<wchar_t, std::char_traits<wchar_t> >::underflow()
00000000005c3300 0000000000000008 W std::basic_streambuf<wchar_t, std::char_traits<wchar_t> >::pbackfail(unsigned int)
00000000005c3320 0000000000000008 W std::basic_streambuf<wchar_t, std::char_traits<wchar_t> >::overflow(unsigned int)
00000000005c3340 0000000000000014 W std::basic_streambuf<char, std::char_traits<char> >::~basic_streambuf()
00000000005c3340 0000000000000014 W std::basic_streambuf<char, std::char_traits<char> >::~basic_streambuf()
00000000005c3360 0000000000000014 W std::basic_streambuf<wchar_t, std::char_traits<wchar_t> >::~basic_streambuf()
00000000005c3360 0000000000000014 W std::basic_streambuf<wchar_t, std::char_traits<wchar_t> >::~basic_streambuf()
00000000005c3380 0000000000000034 W std::basic_streambuf<char, std::char_traits<char> >::~basic_streambuf()
00000000005c33c0 0000000000000034 W std::basic_streambuf<wchar_t, std::char_traits<wchar_t> >::~basic_streambuf()
00000000005c3400 00000000000000c8 W std::basic_streambuf<wchar_t, std::char_traits<wchar_t> >::xsputn(wchar_t const*, long)
00000000005c34e0 00000000000000c8 W std::basic_streambuf<char, std::char_traits<char> >::xsputn(char const*, long)
00000000005c35c0 0000000000000064 W std::basic_streambuf<wchar_t, std::char_traits<wchar_t> >::uflow()
00000000005c3640 0000000000000064 W std::basic_streambuf<char, std::char_traits<char> >::uflow()
00000000005c36c0 000000000000010c W std::basic_streambuf<char, std::char_traits<char> >::xsgetn(char*, long)
00000000005c37e0 0000000000000114 W std::basic_streambuf<wchar_t, std::char_traits<wchar_t> >::xsgetn(wchar_t*, long)
00000000005c3900 000000000000005c W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned long&, unsigned long)
00000000005c3960 0000000000000018 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_dispose()
00000000005c3980 0000000000000098 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct(unsigned long, char)
00000000005c3a20 0000000000000100 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_assign(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
00000000005c3b20 0000000000000124 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_mutate(unsigned long, unsigned long, char const*, unsigned long)
00000000005c3c60 000000000000008c W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_erase(unsigned long, unsigned long)
00000000005c3d00 00000000000000b0 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::reserve(unsigned long)
00000000005c3dc0 0000000000000138 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_replace_aux(unsigned long, unsigned long, unsigned long, char)
00000000005c3f00 0000000000000038 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::resize(unsigned long, char)
00000000005c3f40 000000000000019c W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_replace(unsigned long, unsigned long, char const*, unsigned long)
00000000005c40e0 00000000000000bc W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_append(char const*, unsigned long)
00000000005c41a0 0000000000000090 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::copy(char*, unsigned long, unsigned long) const
00000000005c4240 000000000000018c W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::swap(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
00000000005c43e0 0000000000000044 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::find_first_not_of(char, unsigned long) const
00000000005c4440 0000000000000010 T std::_V2::error_category::default_error_condition(int) const
00000000005c4460 0000000000000050 T std::_V2::error_category::equivalent(int, std::error_condition const&) const
00000000005c44c0 0000000000000024 T std::_V2::error_category::equivalent(std::error_code const&, int) const
00000000005c4500 0000000000000014 T std::system_error::~system_error()
00000000005c4500 0000000000000014 T std::system_error::~system_error()
00000000005c4520 0000000000000024 T std::system_error::~system_error()
00000000005c4560 0000000000000068 T std::_V2::error_category::_M_message[abi:cxx11](int) const
00000000005c45e0 0000000000000004 T std::_V2::error_category::~error_category()
00000000005c45e0 0000000000000004 T std::_V2::error_category::~error_category()
00000000005c4600 000000000000000c W std::moneypunct<wchar_t, false>::do_decimal_point() const
00000000005c4620 000000000000000c W std::moneypunct<wchar_t, false>::do_thousands_sep() const
00000000005c4640 000000000000000c W std::moneypunct<wchar_t, false>::do_frac_digits() const
00000000005c4660 000000000000000c W std::moneypunct<wchar_t, false>::do_pos_format() const
00000000005c4680 000000000000000c W std::moneypunct<wchar_t, false>::do_neg_format() const
00000000005c46a0 000000000000000c W std::moneypunct<wchar_t, true>::do_decimal_point() const
00000000005c46c0 000000000000000c W std::moneypunct<wchar_t, true>::do_thousands_sep() const
00000000005c46e0 000000000000000c W std::moneypunct<wchar_t, true>::do_frac_digits() const
00000000005c4700 000000000000000c W std::moneypunct<wchar_t, true>::do_pos_format() const
00000000005c4720 000000000000000c W std::moneypunct<wchar_t, true>::do_neg_format() const
00000000005c4740 000000000000000c W std::numpunct<wchar_t>::do_decimal_point() const
00000000005c4760 000000000000000c W std::numpunct<wchar_t>::do_thousands_sep() const
00000000005c4780 0000000000000008 W std::time_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::do_date_order() const
00000000005c47a0 0000000000000008 W std::messages<wchar_t>::do_open(std::string const&, std::locale const&) const
00000000005c47c0 0000000000000004 W std::messages<wchar_t>::do_close(int) const
00000000005c47e0 0000000000000024 W std::collate<wchar_t>::do_hash(wchar_t const*, wchar_t const*) const
00000000005c4820 0000000000000014 W std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::~num_get()
00000000005c4820 0000000000000014 W std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::~num_get()
00000000005c4840 0000000000000014 W std::num_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::~num_put()
00000000005c4840 0000000000000014 W std::num_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::~num_put()
00000000005c4860 0000000000000014 W std::money_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::~money_get()
00000000005c4860 0000000000000014 W std::money_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::~money_get()
00000000005c4880 0000000000000014 W std::money_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::~money_put()
00000000005c4880 0000000000000014 W std::money_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::~money_put()
00000000005c48a0 0000000000000014 W std::__timepunct_cache<wchar_t>::~__timepunct_cache()
00000000005c48a0 0000000000000014 W std::__timepunct_cache<wchar_t>::~__timepunct_cache()
00000000005c48c0 0000000000000014 W std::time_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::~time_put()
00000000005c48c0 0000000000000014 W std::time_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::~time_put()
00000000005c48e0 0000000000000014 W std::time_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::~time_get()
00000000005c48e0 0000000000000014 W std::time_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::~time_get()
00000000005c4900 0000000000000034 W std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::~num_get()
00000000005c4940 0000000000000034 W std::num_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::~num_put()
00000000005c4980 0000000000000034 W std::money_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::~money_get()
00000000005c49c0 0000000000000034 W std::money_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::~money_put()
00000000005c4a00 0000000000000024 W std::__timepunct_cache<wchar_t>::~__timepunct_cache()
00000000005c4a40 0000000000000034 W std::time_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::~time_put()
00000000005c4a80 0000000000000034 W std::time_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::~time_get()
00000000005c4ac0 0000000000000068 W std::__moneypunct_cache<wchar_t, false>::~__moneypunct_cache()
00000000005c4ac0 0000000000000068 W std::__moneypunct_cache<wchar_t, false>::~__moneypunct_cache()
00000000005c4b40 0000000000000024 W std::__moneypunct_cache<wchar_t, false>::~__moneypunct_cache()
00000000005c4b80 0000000000000068 W std::__moneypunct_cache<wchar_t, true>::~__moneypunct_cache()
00000000005c4b80 0000000000000068 W std::__moneypunct_cache<wchar_t, true>::~__moneypunct_cache()
00000000005c4c00 0000000000000024 W std::__moneypunct_cache<wchar_t, true>::~__moneypunct_cache()
00000000005c4c40 000000000000005c W std::__numpunct_cache<wchar_t>::~__numpunct_cache()
00000000005c4c40 000000000000005c W std::__numpunct_cache<wchar_t>::~__numpunct_cache()
00000000005c4ca0 0000000000000024 W std::__numpunct_cache<wchar_t>::~__numpunct_cache()
00000000005c4ce0 0000000000000034 W std::messages<wchar_t>::~messages()
00000000005c4ce0 0000000000000034 W std::messages<wchar_t>::~messages()
00000000005c4d20 0000000000000024 W std::messages<wchar_t>::~messages()
00000000005c4d60 0000000000000034 W std::collate<wchar_t>::~collate()
00000000005c4d60 0000000000000034 W std::collate<wchar_t>::~collate()
00000000005c4da0 0000000000000068 W std::__timepunct<wchar_t>::~__timepunct()
00000000005c4da0 0000000000000068 W std::__timepunct<wchar_t>::~__timepunct()
00000000005c4e20 0000000000000024 W std::__timepunct<wchar_t>::~__timepunct()
00000000005c4e60 0000000000000028 t std::basic_streambuf<wchar_t, std::char_traits<wchar_t> >::sbumpc() [clone .isra.0]
00000000005c4ea0 00000000000000b8 t char* std::string::_S_construct<char const*>(char const*, char const*, std::allocator<char> const&, std::forward_iterator_tag) [clone .isra.0]
00000000005c4f60 00000000000000d4 t wchar_t* std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_S_construct<wchar_t const*>(wchar_t const*, wchar_t const*, std::allocator<wchar_t> const&, std::forward_iterator_tag) [clone .isra.0]
00000000005c5040 000000000000003c W std::collate<wchar_t>::~collate()
00000000005c5080 00000000000000d8 W std::moneypunct<wchar_t, false>::do_grouping() const
00000000005c5160 00000000000000d8 W std::moneypunct<wchar_t, true>::do_grouping() const
00000000005c5240 00000000000000d8 W std::numpunct<wchar_t>::do_grouping() const
00000000005c5320 000000000000018c W std::collate<wchar_t>::do_compare(wchar_t const*, wchar_t const*, wchar_t const*, wchar_t const*) const
00000000005c54c0 0000000000000140 W std::time_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::do_put(std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, wchar_t, tm const*, char, char) const
00000000005c5600 00000000000000ec W std::moneypunct<wchar_t, false>::do_curr_symbol() const
00000000005c5700 00000000000000ec W std::moneypunct<wchar_t, false>::do_positive_sign() const
00000000005c5800 00000000000000ec W std::moneypunct<wchar_t, false>::do_negative_sign() const
00000000005c5900 00000000000000ec W std::moneypunct<wchar_t, true>::do_curr_symbol() const
00000000005c5a00 00000000000000ec W std::moneypunct<wchar_t, true>::do_positive_sign() const
00000000005c5b00 00000000000000ec W std::moneypunct<wchar_t, true>::do_negative_sign() const
00000000005c5c00 00000000000000ec W std::numpunct<wchar_t>::do_truename() const
00000000005c5d00 00000000000000ec W std::numpunct<wchar_t>::do_falsename() const
00000000005c5e00 0000000000000214 W std::collate<wchar_t>::do_transform(wchar_t const*, wchar_t const*) const
00000000005c6020 000000000000058c W std::__moneypunct_cache<wchar_t, false>::_M_cache(std::locale const&)
00000000005c65c0 000000000000058c W std::__moneypunct_cache<wchar_t, true>::_M_cache(std::locale const&)
00000000005c6b60 0000000000000468 W std::__numpunct_cache<wchar_t>::_M_cache(std::locale const&)
00000000005c6fe0 00000000000000e4 t std::__use_cache<std::__numpunct_cache<wchar_t> >::operator()(std::locale const&) const [clone .isra.0]
00000000005c70e0 0000000000000068 W std::__timepunct<wchar_t>::__timepunct(std::__timepunct_cache<wchar_t>*, unsigned long)
00000000005c70e0 0000000000000068 W std::__timepunct<wchar_t>::__timepunct(std::__timepunct_cache<wchar_t>*, unsigned long)
00000000005c7160 0000000000000288 W std::time_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_num(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, int&, int, int, unsigned long, std::ios_base&, std::_Ios_Iostate&) const
00000000005c7400 0000000000000058 W std::messages<wchar_t>::messages(unsigned long)
00000000005c7400 0000000000000058 W std::messages<wchar_t>::messages(unsigned long)
00000000005c7460 0000000000000150 W wchar_t* std::__add_grouping<wchar_t>(wchar_t*, wchar_t, char const*, unsigned long, wchar_t const*, wchar_t const*)
00000000005c75c0 00000000000000c8 W std::num_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_group_float(char const*, unsigned long, wchar_t, wchar_t const*, wchar_t*, wchar_t*, int&) const
00000000005c76a0 0000000000000054 W std::num_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_group_int(char const*, unsigned long, wchar_t, std::ios_base&, wchar_t*, wchar_t*, int&) const
00000000005c7700 00000000000005d8 W std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::money_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_insert<true>(std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, wchar_t, std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> > const&) const
00000000005c7ce0 00000000000005d8 W std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::money_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_insert<false>(std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, wchar_t, std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> > const&) const
00000000005c82c0 000000000000021c W std::money_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::do_put(std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, bool, std::ios_base&, wchar_t, long double) const
00000000005c84e0 0000000000000020 W std::money_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::do_put(std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, bool, std::ios_base&, wchar_t, std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> > const&) const
00000000005c8500 0000000000000200 W std::__pad<wchar_t, std::char_traits<wchar_t> >::_S_pad(std::ios_base&, wchar_t, wchar_t*, wchar_t const*, long, long)
00000000005c8700 000000000000003c W std::num_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_pad(wchar_t, long, std::ios_base&, wchar_t*, wchar_t const*, int&) const
00000000005c8740 0000000000000368 W std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_insert_float<double>(std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, wchar_t, char, double) const
00000000005c8ac0 0000000000000008 W std::num_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::do_put(std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, wchar_t, double) const
00000000005c8ae0 0000000000000360 W std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_insert_float<long double>(std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, wchar_t, char, long double) const
00000000005c8e40 0000000000000008 W std::num_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::do_put(std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, wchar_t, long double) const
00000000005c8e60 00000000000000a8 W int std::__int_to_char<wchar_t, unsigned long>(wchar_t*, unsigned long, wchar_t const*, std::_Ios_Fmtflags, bool)
00000000005c8f20 0000000000000218 W std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_insert_int<long>(std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, wchar_t, long) const
00000000005c9140 0000000000000004 W std::num_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::do_put(std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, wchar_t, long) const
00000000005c9160 000000000000019c W std::num_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::do_put(std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, wchar_t, bool) const
00000000005c9300 00000000000001cc W std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_insert_int<unsigned long>(std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, wchar_t, unsigned long) const
00000000005c94e0 0000000000000004 W std::num_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::do_put(std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, wchar_t, unsigned long) const
00000000005c9500 0000000000000050 W std::num_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::do_put(std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, wchar_t, void const*) const
00000000005c9560 00000000000000a8 W int std::__int_to_char<wchar_t, unsigned long long>(wchar_t*, unsigned long long, wchar_t const*, std::_Ios_Fmtflags, bool)
00000000005c9620 0000000000000218 W std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_insert_int<long long>(std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, wchar_t, long long) const
00000000005c9840 0000000000000004 W std::num_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::do_put(std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, wchar_t, long long) const
00000000005c9860 00000000000001cc W std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_insert_int<unsigned long long>(std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, wchar_t, unsigned long long) const
00000000005c9a40 0000000000000004 W std::num_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::do_put(std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, wchar_t, unsigned long long) const
00000000005c9a60 0000000000000110 W std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >::equal(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > const&) const
00000000005c9b80 0000000000000b84 W std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_float(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const
00000000005ca720 00000000000001e0 W std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::do_get(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, float&) const
00000000005ca900 00000000000001e0 W std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::do_get(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, double&) const
00000000005caae0 00000000000001e0 W std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::do_get(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, long double&) const
00000000005cacc0 0000000000000958 W std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<long>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, long&) const
00000000005cb620 0000000000000440 W std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::do_get(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, bool&) const
00000000005cba60 0000000000000004 W std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::do_get(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, long&) const
00000000005cba80 0000000000000ab0 W std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<unsigned short>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, unsigned short&) const
00000000005cc540 0000000000000004 W std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::do_get(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, unsigned short&) const
00000000005cc560 0000000000000954 W std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<unsigned int>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, unsigned int&) const
00000000005ccec0 0000000000000004 W std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::do_get(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, unsigned int&) const
00000000005ccee0 00000000000009a4 W std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<unsigned long>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, unsigned long&) const
00000000005cd8a0 0000000000000004 W std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::do_get(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, unsigned long&) const
00000000005cd8c0 000000000000005c W std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::do_get(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, void*&) const
00000000005cd920 0000000000000958 W std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<long long>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, long long&) const
00000000005ce280 0000000000000004 W std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::do_get(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, long long&) const
00000000005ce2a0 00000000000009a4 W std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<unsigned long long>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, unsigned long long&) const
00000000005cec60 0000000000000004 W std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::do_get(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, unsigned long long&) const
00000000005cec80 00000000000002ec W std::time_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::do_get_year(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, tm*) const
00000000005cef80 00000000000009e8 W std::time_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_name(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, int&, wchar_t const**, unsigned long, std::ios_base&, std::_Ios_Iostate&) const
00000000005cf980 00000000000004b0 W std::time_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_wday_or_month(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, int&, wchar_t const**, unsigned long, std::ios_base&, std::_Ios_Iostate&) const
00000000005cfe40 0000000000000220 W std::time_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::do_get_weekday(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, tm*) const
00000000005d0060 0000000000000228 W std::time_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::do_get_monthname(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, tm*) const
00000000005d02a0 0000000000001370 W std::time_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_via_format(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, tm*, wchar_t const*, std::__time_get_state&) const
00000000005d02a0 0000000000001370 t std::time_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_via_format(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, tm*, wchar_t const*, std::__time_get_state&) const [clone .localalias]
00000000005d1620 00000000000001b8 W std::time_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::do_get_time(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, tm*) const
00000000005d17e0 00000000000001b8 W std::time_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::do_get_date(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, tm*) const
00000000005d19a0 0000000000001030 W std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::money_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract<true>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const
00000000005d29e0 0000000000001030 W std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::money_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract<false>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const
00000000005d3a20 00000000000000f0 W std::money_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::do_get(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, bool, std::ios_base&, std::_Ios_Iostate&, long double&) const
00000000005d3b20 0000000000000198 W std::money_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::do_get(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, bool, std::ios_base&, std::_Ios_Iostate&, std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >&) const
00000000005d3cc0 0000000000000068 W std::__cxx11::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_M_create(unsigned long&, unsigned long)
00000000005d3d40 0000000000000018 W std::__cxx11::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_M_dispose()
00000000005d3d60 0000000000000090 W std::__cxx11::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_M_construct(unsigned long, wchar_t)
00000000005d3e00 0000000000000134 W std::__cxx11::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_M_mutate(unsigned long, unsigned long, wchar_t const*, unsigned long)
00000000005d3f40 00000000000000b8 W std::__cxx11::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::reserve(unsigned long)
00000000005d4000 0000000000000144 W std::__cxx11::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_M_replace_aux(unsigned long, unsigned long, unsigned long, wchar_t)
00000000005d4160 0000000000000038 W std::__cxx11::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::resize(unsigned long, wchar_t)
00000000005d41a0 00000000000001a0 W std::__cxx11::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_M_replace(unsigned long, unsigned long, wchar_t const*, unsigned long)
00000000005d4340 00000000000000c4 W std::__cxx11::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_M_append(wchar_t const*, unsigned long)
00000000005d4420 0000000000000094 W std::__cxx11::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::copy(wchar_t*, unsigned long, unsigned long) const
00000000005d44c0 000000000000000c T std::bad_alloc::what() const
00000000005d44e0 0000000000000014 T std::bad_alloc::~bad_alloc()
00000000005d44e0 0000000000000014 T std::bad_alloc::~bad_alloc()
00000000005d4500 0000000000000028 T std::bad_alloc::~bad_alloc()
00000000005d4540 000000000000000c T std::bad_array_new_length::what() const
00000000005d4560 0000000000000014 T std::bad_array_new_length::~bad_array_new_length()
00000000005d4560 0000000000000014 T std::bad_array_new_length::~bad_array_new_length()
00000000005d4580 0000000000000028 T std::bad_array_new_length::~bad_array_new_length()
00000000005d45c0 000000000000000c T std::bad_cast::what() const
00000000005d45e0 0000000000000014 T std::bad_cast::~bad_cast()
00000000005d45e0 0000000000000014 T std::bad_cast::~bad_cast()
00000000005d4600 0000000000000028 T std::bad_cast::~bad_cast()
00000000005d4640 0000000000000068 T __cxxabiv1::__class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void**) const
00000000005d46c0 0000000000000010 T __cxxabiv1::__class_type_info::__do_find_public_src(long, void const*, __cxxabiv1::__class_type_info const*, void const*) const
00000000005d46e0 0000000000000014 T __cxxabiv1::__class_type_info::~__class_type_info()
00000000005d46e0 0000000000000014 T __cxxabiv1::__class_type_info::~__class_type_info()
00000000005d4700 0000000000000028 T __cxxabiv1::__class_type_info::~__class_type_info()
00000000005d4740 0000000000000078 T __cxxabiv1::__class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const
00000000005d47c0 00000000000000b8 T __cxxabiv1::__class_type_info::__do_catch(std::type_info const*, void**, unsigned int) const
00000000005d4880 00000000000000ec T __cxxabiv1::__class_type_info::__do_dyncast(long, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const
00000000005d4980 0000000000000004 T operator delete(void*)
00000000005d49a0 00000000000001a4 T __dynamic_cast
00000000005d4b60 0000000000000110 t (anonymous namespace)::pool::free(void*) [clone .constprop.0]
00000000005d4c80 00000000000000cc t (anonymous namespace)::pool::allocate(unsigned long) [clone .constprop.0]
00000000005d4d60 0000000000000058 T __cxa_allocate_exception
00000000005d4dc0 000000000000002c T __cxa_free_exception
00000000005d4e00 000000000000009c T __cxa_begin_catch
00000000005d4ea0 0000000000000098 T __cxa_end_catch
00000000005d4f40 0000000000000020 T std::uncaught_exception()
00000000005d4f60 0000000000000004 T std::exception::~exception()
00000000005d4f60 0000000000000004 T std::exception::~exception()
00000000005d4f80 0000000000000014 T std::bad_exception::~bad_exception()
00000000005d4f80 0000000000000014 T std::bad_exception::~bad_exception()
00000000005d4fa0 000000000000000c T std::bad_exception::what() const
00000000005d4fc0 0000000000000028 T std::bad_exception::~bad_exception()
00000000005d5000 0000000000000044 t eh_globals_dtor(void*)
00000000005d5060 0000000000000038 T __cxa_get_globals_fast
00000000005d50a0 0000000000000078 T __cxa_get_globals
00000000005d5120 000000000000007c t get_adjusted_ptr(std::type_info const*, std::type_info const*, void**)
00000000005d51a0 0000000000000138 t read_encoded_value_with_base(unsigned char, unsigned long, unsigned char const*, unsigned long*)
00000000005d52e0 000000000000005c t base_of_encoded_value(unsigned char, _Unwind_Context*)
00000000005d5340 0000000000000110 t check_exception_spec(lsda_header_info*, std::type_info const*, void*, long)
00000000005d5460 00000000000000e8 t parse_lsda_header(_Unwind_Context*, unsigned char const*, lsda_header_info*)
00000000005d5560 00000000000005f0 T __gxx_personality_v0
00000000005d5b60 00000000000000ec T __cxa_call_unexpected
00000000005d5c60 0000000000000018 T __cxxabiv1::__terminate(void (*)())
00000000005d5c80 0000000000000010 T std::get_terminate()
00000000005d5ca0 0000000000000010 T __cxxabiv1::__unexpected(void (*)())
00000000005d5cc0 0000000000000010 T std::get_unexpected()
00000000005d5ce0 0000000000000064 t __gxx_exception_cleanup(_Unwind_Reason_Code, _Unwind_Exception*)
00000000005d5d60 0000000000000058 T __cxa_init_primary_exception
00000000005d5dc0 0000000000000060 T __cxa_throw
00000000005d5e20 0000000000000070 T __cxa_rethrow
00000000005d5ea0 0000000000000010 T std::get_new_handler()
00000000005d5ec0 0000000000000024 T operator new[](unsigned long, std::nothrow_t const&)
00000000005d5f00 0000000000000014 T __cxxabiv1::__vmi_class_type_info::~__vmi_class_type_info()
00000000005d5f00 0000000000000014 T __cxxabiv1::__vmi_class_type_info::~__vmi_class_type_info()
00000000005d5f20 0000000000000028 T __cxxabiv1::__vmi_class_type_info::~__vmi_class_type_info()
00000000005d5f60 0000000000000114 T __cxxabiv1::__vmi_class_type_info::__do_find_public_src(long, void const*, __cxxabiv1::__class_type_info const*, void const*) const
00000000005d6080 0000000000000618 T __cxxabiv1::__vmi_class_type_info::__do_dyncast(long, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const
00000000005d66a0 0000000000000224 T __cxxabiv1::__vmi_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const
00000000005d68e0 0000000000000070 t std::(anonymous namespace)::__set_C_locale()
00000000005d6960 00000000000000d0 T void std::__convert_to_v<float>(char const*, float&, std::_Ios_Iostate&, int* const&)
00000000005d6a40 00000000000000d8 T void std::__convert_to_v<double>(char const*, double&, std::_Ios_Iostate&, int* const&)
00000000005d6b20 0000000000000108 T void std::__convert_to_v<long double>(char const*, long double&, std::_Ios_Iostate&, int* const&)
00000000005d6c40 0000000000000030 T std::locale::facet::_S_create_c_locale(int*&, char const*, int*)
00000000005d6c80 0000000000000008 T std::locale::facet::_S_destroy_c_locale(int*&)
00000000005d6ca0 0000000000000010 T std::codecvt<char, char, _mbstate_t>::do_in(_mbstate_t&, char const*, char const*, char const*&, char*, char*, char*&) const
00000000005d6ca0 0000000000000010 T std::codecvt<char, char, _mbstate_t>::do_out(_mbstate_t&, char const*, char const*, char const*&, char*, char*, char*&) const
00000000005d6cc0 000000000000000c T std::codecvt<char, char, _mbstate_t>::do_unshift(_mbstate_t&, char*, char*, char*&) const
00000000005d6cc0 000000000000000c T std::codecvt<wchar_t, char, _mbstate_t>::do_unshift(_mbstate_t&, char*, char*, char*&) const
00000000005d6ce0 0000000000000008 T std::codecvt<char, char, _mbstate_t>::do_encoding() const
00000000005d6ce0 0000000000000008 T std::codecvt<char, char, _mbstate_t>::do_max_length() const
00000000005d6d00 0000000000000008 T std::codecvt<char, char, _mbstate_t>::do_always_noconv() const
00000000005d6d20 0000000000000010 T std::codecvt<char, char, _mbstate_t>::do_length(_mbstate_t&, char const*, char const*, unsigned long) const
00000000005d6d40 0000000000000008 T std::codecvt<wchar_t, char, _mbstate_t>::do_always_noconv() const
00000000005d6d60 0000000000000068 T std::codecvt<char, char, _mbstate_t>::~codecvt()
00000000005d6d60 0000000000000068 T std::codecvt<char, char, _mbstate_t>::~codecvt()
00000000005d6de0 000000000000003c T std::codecvt<char, char, _mbstate_t>::~codecvt()
00000000005d6e20 0000000000000068 T std::codecvt<wchar_t, char, _mbstate_t>::~codecvt()
00000000005d6e20 0000000000000068 T std::codecvt<wchar_t, char, _mbstate_t>::~codecvt()
00000000005d6ea0 000000000000003c T std::codecvt<wchar_t, char, _mbstate_t>::~codecvt()
00000000005d6ee0 0000000000000064 T std::codecvt<char, char, _mbstate_t>::codecvt(unsigned long)
00000000005d6ee0 0000000000000064 T std::codecvt<char, char, _mbstate_t>::codecvt(unsigned long)
00000000005d6f60 0000000000000064 T std::codecvt<wchar_t, char, _mbstate_t>::codecvt(unsigned long)
00000000005d6f60 0000000000000064 T std::codecvt<wchar_t, char, _mbstate_t>::codecvt(unsigned long)
00000000005d6fe0 00000000000001c0 T std::codecvt<wchar_t, char, _mbstate_t>::do_out(_mbstate_t&, wchar_t const*, wchar_t const*, wchar_t const*&, char*, char*, char*&) const
00000000005d71a0 00000000000000f4 T std::codecvt<wchar_t, char, _mbstate_t>::do_in(_mbstate_t&, char const*, char const*, char const*&, wchar_t*, wchar_t*, wchar_t*&) const
00000000005d72a0 000000000000002c T std::codecvt<wchar_t, char, _mbstate_t>::do_encoding() const
00000000005d72e0 0000000000000024 T std::codecvt<wchar_t, char, _mbstate_t>::do_max_length() const
00000000005d7320 00000000000000a4 T std::codecvt<wchar_t, char, _mbstate_t>::do_length(_mbstate_t&, char const*, char const*, unsigned long) const
00000000005d73e0 0000000000000028 T std::__cxx11::collate<char>::_M_compare(char const*, char const*) const
00000000005d7420 0000000000000010 T std::__cxx11::collate<char>::_M_transform(char*, char const*, unsigned long) const
00000000005d7440 0000000000000028 T std::__cxx11::collate<wchar_t>::_M_compare(wchar_t const*, wchar_t const*) const
00000000005d7480 0000000000000010 T std::__cxx11::collate<wchar_t>::_M_transform(wchar_t*, wchar_t const*, unsigned long) const
00000000005d74a0 0000000000000028 T std::collate<char>::_M_compare(char const*, char const*) const
00000000005d74e0 0000000000000010 T std::collate<char>::_M_transform(char*, char const*, unsigned long) const
00000000005d7500 0000000000000028 T std::collate<wchar_t>::_M_compare(wchar_t const*, wchar_t const*) const
00000000005d7540 0000000000000010 T std::collate<wchar_t>::_M_transform(wchar_t*, wchar_t const*, unsigned long) const
00000000005d7560 0000000000000050 T std::ios_base::_M_init()
00000000005d75c0 00000000000000b0 t std::(anonymous namespace)::day_of_the_week(int, int, int)
00000000005d7680 00000000000000dc T std::__num_base::_S_format_float(std::ios_base const&, char*, char)
00000000005d7760 00000000000000a0 T std::__verify_grouping_impl(char const*, unsigned long, char const*, unsigned long)
00000000005d7800 000000000000002c T std::__verify_grouping(char const*, unsigned long, std::string const&)
00000000005d7840 00000000000003dc T std::__time_get_state::_M_finalize_state(tm*)
00000000005d7c20 00000000000000d0 T std::__cxx11::messages<char>::do_get(int, int, int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const
00000000005d7d00 00000000000000c8 T std::__cxx11::messages<wchar_t>::do_get(int, int, int, std::__cxx11::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> > const&) const
00000000005d7de0 0000000000000080 T std::messages<char>::do_get(int, int, int, std::string const&) const
00000000005d7e60 0000000000000080 T std::messages<wchar_t>::do_get(int, int, int, std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> > const&) const
00000000005d7ee0 0000000000000028 T std::__verify_grouping(char const*, unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
00000000005d7f20 00000000000000f0 T std::__cxx11::moneypunct<char, true>::_M_initialize_moneypunct(int*, char const*)
00000000005d8020 00000000000000f0 T std::__cxx11::moneypunct<char, false>::_M_initialize_moneypunct(int*, char const*)
00000000005d8120 000000000000005c T std::__cxx11::moneypunct<char, true>::~moneypunct()
00000000005d8120 000000000000005c T std::__cxx11::moneypunct<char, true>::~moneypunct()
00000000005d8180 000000000000003c T std::__cxx11::moneypunct<char, true>::~moneypunct()
00000000005d81c0 000000000000005c T std::__cxx11::moneypunct<char, false>::~moneypunct()
00000000005d81c0 000000000000005c T std::__cxx11::moneypunct<char, false>::~moneypunct()
00000000005d8220 000000000000003c T std::__cxx11::moneypunct<char, false>::~moneypunct()
00000000005d8260 00000000000000ec T std::__cxx11::moneypunct<wchar_t, true>::_M_initialize_moneypunct(int*, char const*)
00000000005d8360 00000000000000ec T std::__cxx11::moneypunct<wchar_t, false>::_M_initialize_moneypunct(int*, char const*)
00000000005d8460 000000000000005c T std::__cxx11::moneypunct<wchar_t, true>::~moneypunct()
00000000005d8460 000000000000005c T std::__cxx11::moneypunct<wchar_t, true>::~moneypunct()
00000000005d84c0 000000000000003c T std::__cxx11::moneypunct<wchar_t, true>::~moneypunct()
00000000005d8500 000000000000005c T std::__cxx11::moneypunct<wchar_t, false>::~moneypunct()
00000000005d8500 000000000000005c T std::__cxx11::moneypunct<wchar_t, false>::~moneypunct()
00000000005d8560 000000000000003c T std::__cxx11::moneypunct<wchar_t, false>::~moneypunct()
00000000005d85a0 00000000000000f0 T std::moneypunct<char, true>::_M_initialize_moneypunct(int*, char const*)
00000000005d86a0 00000000000000f0 T std::moneypunct<char, false>::_M_initialize_moneypunct(int*, char const*)
00000000005d87a0 000000000000009c T std::moneypunct<char, true>::~moneypunct()
00000000005d87a0 000000000000009c T std::moneypunct<char, true>::~moneypunct()
00000000005d8840 000000000000003c T std::moneypunct<char, true>::~moneypunct()
00000000005d8880 000000000000009c T std::moneypunct<char, false>::~moneypunct()
00000000005d8880 000000000000009c T std::moneypunct<char, false>::~moneypunct()
00000000005d8920 000000000000003c T std::moneypunct<char, false>::~moneypunct()
00000000005d8960 00000000000000ec T std::moneypunct<wchar_t, true>::_M_initialize_moneypunct(int*, char const*)
00000000005d8a60 00000000000000ec T std::moneypunct<wchar_t, false>::_M_initialize_moneypunct(int*, char const*)
00000000005d8b60 000000000000009c T std::moneypunct<wchar_t, true>::~moneypunct()
00000000005d8b60 000000000000009c T std::moneypunct<wchar_t, true>::~moneypunct()
00000000005d8c00 000000000000003c T std::moneypunct<wchar_t, true>::~moneypunct()
00000000005d8c40 000000000000009c T std::moneypunct<wchar_t, false>::~moneypunct()
00000000005d8c40 000000000000009c T std::moneypunct<wchar_t, false>::~moneypunct()
00000000005d8ce0 000000000000003c T std::moneypunct<wchar_t, false>::~moneypunct()
00000000005d8d20 0000000000000108 T std::__cxx11::numpunct<char>::_M_initialize_numpunct(int*)
00000000005d8e40 000000000000005c T std::__cxx11::numpunct<char>::~numpunct()
00000000005d8e40 000000000000005c T std::__cxx11::numpunct<char>::~numpunct()
00000000005d8ea0 000000000000003c T std::__cxx11::numpunct<char>::~numpunct()
00000000005d8ee0 00000000000000f0 T std::__cxx11::numpunct<wchar_t>::_M_initialize_numpunct(int*)
00000000005d8fe0 000000000000005c T std::__cxx11::numpunct<wchar_t>::~numpunct()
00000000005d8fe0 000000000000005c T std::__cxx11::numpunct<wchar_t>::~numpunct()
00000000005d9040 000000000000003c T std::__cxx11::numpunct<wchar_t>::~numpunct()
00000000005d9080 0000000000000108 T std::numpunct<char>::_M_initialize_numpunct(int*)
00000000005d91a0 000000000000009c T std::numpunct<char>::~numpunct()
00000000005d91a0 000000000000009c T std::numpunct<char>::~numpunct()
00000000005d9240 000000000000003c T std::numpunct<char>::~numpunct()
00000000005d9280 00000000000000f0 T std::numpunct<wchar_t>::_M_initialize_numpunct(int*)
00000000005d9380 000000000000009c T std::numpunct<wchar_t>::~numpunct()
00000000005d9380 000000000000009c T std::numpunct<wchar_t>::~numpunct()
00000000005d9420 000000000000003c T std::numpunct<wchar_t>::~numpunct()
00000000005d9460 0000000000000008 T std::logic_error::what() const
00000000005d9460 0000000000000008 T std::runtime_error::what() const
00000000005d9480 0000000000000070 T std::logic_error::~logic_error()
00000000005d9480 0000000000000070 T std::logic_error::~logic_error()
00000000005d9500 0000000000000024 T std::logic_error::~logic_error()
00000000005d9540 0000000000000014 T std::length_error::~length_error()
00000000005d9540 0000000000000014 T std::length_error::~length_error()
00000000005d9560 0000000000000024 T std::length_error::~length_error()
00000000005d95a0 0000000000000014 T std::out_of_range::~out_of_range()
00000000005d95a0 0000000000000014 T std::out_of_range::~out_of_range()
00000000005d95c0 0000000000000024 T std::out_of_range::~out_of_range()
00000000005d9600 0000000000000070 T std::runtime_error::~runtime_error()
00000000005d9600 0000000000000070 T std::runtime_error::~runtime_error()
00000000005d9680 0000000000000024 T std::runtime_error::~runtime_error()
00000000005d96c0 00000000000000c4 T std::__timepunct<char>::_M_put(char*, unsigned long, char const*, tm const*) const
00000000005d97a0 0000000000000248 T std::__timepunct<char>::_M_initialize_timepunct(int*)
00000000005d9a00 00000000000000c4 T std::__timepunct<wchar_t>::_M_put(wchar_t*, unsigned long, wchar_t const*, tm const*) const
00000000005d9ae0 0000000000000248 T std::__timepunct<wchar_t>::_M_initialize_timepunct(int*)
00000000005d9d40 000000000000000c T std::__codecvt_utf8_base<char32_t>::do_unshift(_mbstate_t&, char*, char*, char*&) const
00000000005d9d40 000000000000000c T std::__codecvt_utf8_base<char16_t>::do_unshift(_mbstate_t&, char*, char*, char*&) const
00000000005d9d40 000000000000000c T std::__codecvt_utf8_base<wchar_t>::do_unshift(_mbstate_t&, char*, char*, char*&) const
00000000005d9d40 000000000000000c T std::__codecvt_utf16_base<char32_t>::do_unshift(_mbstate_t&, char*, char*, char*&) const
00000000005d9d40 000000000000000c T std::__codecvt_utf16_base<char16_t>::do_unshift(_mbstate_t&, char*, char*, char*&) const
00000000005d9d40 000000000000000c T std::__codecvt_utf16_base<wchar_t>::do_unshift(_mbstate_t&, char*, char*, char*&) const
00000000005d9d40 000000000000000c T std::__codecvt_utf8_utf16_base<char32_t>::do_unshift(_mbstate_t&, char*, char*, char*&) const
00000000005d9d40 000000000000000c T std::__codecvt_utf8_utf16_base<char16_t>::do_unshift(_mbstate_t&, char*, char*, char*&) const
00000000005d9d40 000000000000000c T std::__codecvt_utf8_utf16_base<wchar_t>::do_unshift(_mbstate_t&, char*, char*, char*&) const
00000000005d9d40 000000000000000c T std::codecvt<char32_t, char, _mbstate_t>::do_unshift(_mbstate_t&, char*, char*, char*&) const
00000000005d9d40 000000000000000c T std::codecvt<char16_t, char, _mbstate_t>::do_unshift(_mbstate_t&, char*, char*, char*&) const
00000000005d9d60 0000000000000008 T std::__codecvt_utf8_base<char32_t>::do_encoding() const
00000000005d9d60 0000000000000008 T std::__codecvt_utf8_base<char16_t>::do_encoding() const
00000000005d9d60 0000000000000008 T std::__codecvt_utf8_base<wchar_t>::do_encoding() const
00000000005d9d60 0000000000000008 T std::__codecvt_utf16_base<char32_t>::do_encoding() const
00000000005d9d60 0000000000000008 T std::__codecvt_utf16_base<char16_t>::do_encoding() const
00000000005d9d60 0000000000000008 T std::__codecvt_utf16_base<wchar_t>::do_encoding() const
00000000005d9d60 0000000000000008 T std::__codecvt_utf8_utf16_base<char32_t>::do_encoding() const
00000000005d9d60 0000000000000008 T std::__codecvt_utf8_utf16_base<char16_t>::do_encoding() const
00000000005d9d60 0000000000000008 T std::__codecvt_utf8_utf16_base<wchar_t>::do_encoding() const
00000000005d9d60 0000000000000008 T std::codecvt<char32_t, char, _mbstate_t>::do_encoding() const
00000000005d9d60 0000000000000008 T std::codecvt<char32_t, char8_t, _mbstate_t>::do_encoding() const
00000000005d9d60 0000000000000008 T std::codecvt<char16_t, char, _mbstate_t>::do_encoding() const
00000000005d9d60 0000000000000008 T std::codecvt<char16_t, char8_t, _mbstate_t>::do_encoding() const
00000000005d9d80 0000000000000008 T std::__codecvt_utf8_base<char32_t>::do_always_noconv() const
00000000005d9d80 0000000000000008 T std::__codecvt_utf8_base<char16_t>::do_always_noconv() const
00000000005d9d80 0000000000000008 T std::__codecvt_utf8_base<wchar_t>::do_always_noconv() const
00000000005d9d80 0000000000000008 T std::__codecvt_utf16_base<char32_t>::do_always_noconv() const
00000000005d9d80 0000000000000008 T std::__codecvt_utf16_base<char16_t>::do_always_noconv() const
00000000005d9d80 0000000000000008 T std::__codecvt_utf16_base<wchar_t>::do_always_noconv() const
00000000005d9d80 0000000000000008 T std::__codecvt_utf8_utf16_base<char32_t>::do_always_noconv() const
00000000005d9d80 0000000000000008 T std::__codecvt_utf8_utf16_base<char16_t>::do_always_noconv() const
00000000005d9d80 0000000000000008 T std::__codecvt_utf8_utf16_base<wchar_t>::do_always_noconv() const
00000000005d9d80 0000000000000008 T std::codecvt<char32_t, char, _mbstate_t>::do_always_noconv() const
00000000005d9d80 0000000000000008 T std::codecvt<char32_t, char8_t, _mbstate_t>::do_always_noconv() const
00000000005d9d80 0000000000000008 T std::codecvt<char16_t, char, _mbstate_t>::do_always_noconv() const
00000000005d9d80 0000000000000008 T std::codecvt<char16_t, char8_t, _mbstate_t>::do_always_noconv() const
00000000005d9da0 0000000000000008 T std::codecvt<char32_t, char, _mbstate_t>::do_max_length() const
00000000005d9da0 0000000000000008 T std::codecvt<char32_t, char8_t, _mbstate_t>::do_max_length() const
00000000005d9da0 0000000000000008 T std::codecvt<char16_t, char, _mbstate_t>::do_max_length() const
00000000005d9da0 0000000000000008 T std::codecvt<char16_t, char8_t, _mbstate_t>::do_max_length() const
00000000005d9dc0 000000000000000c T std::codecvt<char32_t, char8_t, _mbstate_t>::do_unshift(_mbstate_t&, char8_t*, char8_t*, char8_t*&) const
00000000005d9dc0 000000000000000c T std::codecvt<char16_t, char8_t, _mbstate_t>::do_unshift(_mbstate_t&, char8_t*, char8_t*, char8_t*&) const
00000000005d9de0 0000000000000140 t bool std::(anonymous namespace)::write_utf8_code_point<char>(std::(anonymous namespace)::range<char, true>&, char32_t)
00000000005d9f20 00000000000001a8 t char32_t std::(anonymous namespace)::read_utf8_code_point<char>(std::(anonymous namespace)::range<char const, true>&, unsigned long)
00000000005da0e0 000000000000011c t bool std::(anonymous namespace)::write_utf8_code_point<char8_t>(std::(anonymous namespace)::range<char8_t, true>&, char32_t)
00000000005da200 00000000000001a8 t char32_t std::(anonymous namespace)::read_utf8_code_point<char8_t>(std::(anonymous namespace)::range<char8_t const, true>&, unsigned long)
00000000005da3c0 0000000000000014 T std::codecvt<char16_t, char, _mbstate_t>::~codecvt()
00000000005da3c0 0000000000000014 T std::codecvt<char16_t, char, _mbstate_t>::~codecvt()
00000000005da3e0 0000000000000014 T std::codecvt<char32_t, char, _mbstate_t>::~codecvt()
00000000005da3e0 0000000000000014 T std::codecvt<char32_t, char, _mbstate_t>::~codecvt()
00000000005da400 0000000000000014 T std::codecvt<char16_t, char8_t, _mbstate_t>::~codecvt()
00000000005da400 0000000000000014 T std::codecvt<char16_t, char8_t, _mbstate_t>::~codecvt()
00000000005da420 0000000000000014 T std::codecvt<char32_t, char8_t, _mbstate_t>::~codecvt()
00000000005da420 0000000000000014 T std::codecvt<char32_t, char8_t, _mbstate_t>::~codecvt()
00000000005da440 0000000000000024 T std::codecvt<char16_t, char, _mbstate_t>::~codecvt()
00000000005da480 0000000000000024 T std::codecvt<char32_t, char, _mbstate_t>::~codecvt()
00000000005da4c0 0000000000000024 T std::codecvt<char16_t, char8_t, _mbstate_t>::~codecvt()
00000000005da500 0000000000000024 T std::codecvt<char32_t, char8_t, _mbstate_t>::~codecvt()
00000000005da540 000000000000005c T std::codecvt<char32_t, char8_t, _mbstate_t>::do_length(_mbstate_t&, char8_t const*, char8_t const*, unsigned long) const
00000000005da5a0 00000000000000a4 T std::codecvt<char32_t, char8_t, _mbstate_t>::do_in(_mbstate_t&, char8_t const*, char8_t const*, char8_t const*&, char32_t*, char32_t*, char32_t*&) const
00000000005da660 0000000000000090 T std::codecvt<char32_t, char8_t, _mbstate_t>::do_out(_mbstate_t&, char32_t const*, char32_t const*, char32_t const*&, char8_t*, char8_t*, char8_t*&) const
00000000005da700 00000000000000a8 T std::codecvt<char16_t, char8_t, _mbstate_t>::do_length(_mbstate_t&, char8_t const*, char8_t const*, unsigned long) const
00000000005da7c0 00000000000000cc T std::codecvt<char16_t, char8_t, _mbstate_t>::do_out(_mbstate_t&, char16_t const*, char16_t const*, char16_t const*&, char8_t*, char8_t*, char8_t*&) const
00000000005da8a0 0000000000000188 t std::codecvt_base::result std::(anonymous namespace)::utf16_out<char16_t, char>(std::(anonymous namespace)::range<char16_t const, true>&, std::(anonymous namespace)::range<char, true>&, unsigned long, std::codecvt_mode, std::(anonymous namespace)::surrogates)
00000000005daa40 0000000000000050 T std::codecvt<char16_t, char, _mbstate_t>::do_out(_mbstate_t&, char16_t const*, char16_t const*, char16_t const*&, char*, char*, char*&) const
00000000005daaa0 0000000000000130 t std::codecvt_base::result std::(anonymous namespace)::utf16_in<char, char16_t>(std::(anonymous namespace)::range<char const, true>&, std::(anonymous namespace)::range<char16_t, true>&, unsigned long, std::codecvt_mode)
00000000005dabe0 0000000000000054 T std::codecvt<char16_t, char, _mbstate_t>::do_in(_mbstate_t&, char const*, char const*, char const*&, char16_t*, char16_t*, char16_t*&) const
00000000005dac40 000000000000005c T std::codecvt<char32_t, char, _mbstate_t>::do_length(_mbstate_t&, char const*, char const*, unsigned long) const
00000000005daca0 00000000000000f8 T std::codecvt<char16_t, char8_t, _mbstate_t>::do_in(_mbstate_t&, char8_t const*, char8_t const*, char8_t const*&, char16_t*, char16_t*, char16_t*&) const
00000000005dada0 00000000000000a4 T std::codecvt<char32_t, char, _mbstate_t>::do_in(_mbstate_t&, char const*, char const*, char const*&, char32_t*, char32_t*, char32_t*&) const
00000000005dae60 0000000000000090 T std::codecvt<char32_t, char, _mbstate_t>::do_out(_mbstate_t&, char32_t const*, char32_t const*, char32_t const*&, char*, char*, char*&) const
00000000005daf00 00000000000000a8 T std::codecvt<char16_t, char, _mbstate_t>::do_length(_mbstate_t&, char const*, char const*, unsigned long) const
00000000005dafc0 00000000000006cc T std::locale::_Impl::_M_init_extra(std::locale::facet**)
00000000005db6a0 00000000000000f0 T std::logic_error::logic_error(char const*)
00000000005db6a0 00000000000000f0 T std::logic_error::logic_error(char const*)
00000000005db7a0 0000000000000030 T std::length_error::length_error(char const*)
00000000005db7a0 0000000000000030 T std::length_error::length_error(char const*)
00000000005db7e0 0000000000000030 T std::out_of_range::out_of_range(char const*)
00000000005db7e0 0000000000000030 T std::out_of_range::out_of_range(char const*)
00000000005db820 00000000000000f0 T std::runtime_error::runtime_error(char const*)
00000000005db820 00000000000000f0 T std::runtime_error::runtime_error(char const*)
00000000005db920 00000000000000c8 T std::__cow_string::__cow_string(char const*, unsigned long)
00000000005db920 00000000000000c8 T std::__cow_string::__cow_string(char const*, unsigned long)
00000000005dba00 0000000000000014 T std::ios_base::failure[abi:cxx11]::~failure()
00000000005dba00 0000000000000014 T std::ios_base::failure[abi:cxx11]::~failure()
00000000005dba20 0000000000000024 T std::ios_base::failure[abi:cxx11]::~failure()
00000000005dba60 0000000000000004 T std::ios_base::failure[abi:cxx11]::what() const
00000000005dba80 0000000000000014 T std::__iosfail_type_info::~__iosfail_type_info()
00000000005dba80 0000000000000014 T std::__iosfail_type_info::~__iosfail_type_info()
00000000005dbaa0 0000000000000024 T std::__iosfail_type_info::~__iosfail_type_info()
00000000005dbae0 0000000000000060 T std::__iosfail_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void**) const
00000000005dbb40 0000000000000034 W std::__ios_failure::~__ios_failure()
00000000005dbb40 0000000000000034 W std::__ios_failure::~__ios_failure()
00000000005dbb80 000000000000003c W std::__ios_failure::~__ios_failure()
00000000005dbbc0 00000000000001d4 T std::ios_base::failure[abi:cxx11]::failure(char const*, std::error_code const&)
00000000005dbbc0 00000000000001d4 T std::ios_base::failure[abi:cxx11]::failure(char const*, std::error_code const&)
00000000005dbda0 000000000000000c W std::__cxx11::moneypunct<char, false>::do_decimal_point() const
00000000005dbdc0 000000000000000c W std::__cxx11::moneypunct<char, false>::do_thousands_sep() const
00000000005dbde0 000000000000000c W std::__cxx11::moneypunct<char, false>::do_frac_digits() const
00000000005dbe00 000000000000000c W std::__cxx11::moneypunct<char, false>::do_pos_format() const
00000000005dbe20 000000000000000c W std::__cxx11::moneypunct<char, false>::do_neg_format() const
00000000005dbe40 000000000000000c W std::__cxx11::moneypunct<char, true>::do_decimal_point() const
00000000005dbe60 000000000000000c W std::__cxx11::moneypunct<char, true>::do_thousands_sep() const
00000000005dbe80 000000000000000c W std::__cxx11::moneypunct<char, true>::do_frac_digits() const
00000000005dbea0 000000000000000c W std::__cxx11::moneypunct<char, true>::do_pos_format() const
00000000005dbec0 000000000000000c W std::__cxx11::moneypunct<char, true>::do_neg_format() const
00000000005dbee0 000000000000000c W std::__cxx11::numpunct<char>::do_decimal_point() const
00000000005dbf00 000000000000000c W std::__cxx11::numpunct<char>::do_thousands_sep() const
00000000005dbf20 0000000000000008 W std::__cxx11::time_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::do_date_order() const
00000000005dbf40 0000000000000008 W std::__cxx11::messages<char>::do_open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::locale const&) const
00000000005dbf60 0000000000000004 W std::__cxx11::messages<char>::do_close(int) const
00000000005dbf80 0000000000000024 W std::__cxx11::collate<char>::do_hash(char const*, char const*) const
00000000005dbfc0 0000000000000014 W std::__cxx11::money_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::~money_get()
00000000005dbfc0 0000000000000014 W std::__cxx11::money_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::~money_get()
00000000005dbfe0 0000000000000034 W std::__cxx11::money_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::~money_get()
00000000005dc020 0000000000000014 W std::__cxx11::money_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::~money_put()
00000000005dc020 0000000000000014 W std::__cxx11::money_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::~money_put()
00000000005dc040 0000000000000034 W std::__cxx11::money_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::~money_put()
00000000005dc080 0000000000000014 W std::__cxx11::time_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::~time_get()
00000000005dc080 0000000000000014 W std::__cxx11::time_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::~time_get()
00000000005dc0a0 0000000000000034 W std::__cxx11::time_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::~time_get()
00000000005dc0e0 0000000000000034 W std::__cxx11::messages<char>::~messages()
00000000005dc0e0 0000000000000034 W std::__cxx11::messages<char>::~messages()
00000000005dc120 0000000000000024 W std::__cxx11::messages<char>::~messages()
00000000005dc160 0000000000000034 W std::__cxx11::collate<char>::~collate()
00000000005dc160 0000000000000034 W std::__cxx11::collate<char>::~collate()
00000000005dc1a0 00000000000000bc t void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag) [clone .isra.0]
00000000005dc260 000000000000003c W std::__cxx11::collate<char>::~collate()
00000000005dc2a0 0000000000000058 W std::__cxx11::moneypunct<char, false>::do_grouping() const
00000000005dc300 0000000000000058 W std::__cxx11::moneypunct<char, false>::do_curr_symbol() const
00000000005dc360 0000000000000058 W std::__cxx11::moneypunct<char, false>::do_positive_sign() const
00000000005dc3c0 0000000000000058 W std::__cxx11::moneypunct<char, false>::do_negative_sign() const
00000000005dc420 0000000000000058 W std::__cxx11::moneypunct<char, true>::do_grouping() const
00000000005dc480 0000000000000058 W std::__cxx11::moneypunct<char, true>::do_curr_symbol() const
00000000005dc4e0 0000000000000058 W std::__cxx11::moneypunct<char, true>::do_positive_sign() const
00000000005dc540 0000000000000058 W std::__cxx11::moneypunct<char, true>::do_negative_sign() const
00000000005dc5a0 0000000000000058 W std::__cxx11::numpunct<char>::do_grouping() const
00000000005dc600 0000000000000058 W std::__cxx11::numpunct<char>::do_truename() const
00000000005dc660 0000000000000058 W std::__cxx11::numpunct<char>::do_falsename() const
00000000005dc6c0 000000000000011c W std::__cxx11::collate<char>::do_compare(char const*, char const*, char const*, char const*) const
00000000005dc7e0 00000000000001ec W std::__cxx11::collate<char>::do_transform(char const*, char const*) const
00000000005dc9e0 000000000000121c W std::istreambuf_iterator<char, std::char_traits<char> > std::__cxx11::money_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract<true>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&) const
00000000005ddc00 000000000000121c W std::istreambuf_iterator<char, std::char_traits<char> > std::__cxx11::money_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract<false>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&) const
00000000005dee20 00000000000000c4 W std::__cxx11::money_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::do_get(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, bool, std::ios_base&, std::_Ios_Iostate&, long double&) const
00000000005def00 00000000000001b4 W std::__cxx11::money_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::do_get(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, bool, std::ios_base&, std::_Ios_Iostate&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&) const
00000000005df0c0 0000000000000694 W std::ostreambuf_iterator<char, std::char_traits<char> > std::__cxx11::money_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::_M_insert<true>(std::ostreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, char, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const
00000000005df760 0000000000000694 W std::ostreambuf_iterator<char, std::char_traits<char> > std::__cxx11::money_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::_M_insert<false>(std::ostreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, char, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const
00000000005dfe00 0000000000000224 W std::__cxx11::money_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::do_put(std::ostreambuf_iterator<char, std::char_traits<char> >, bool, std::ios_base&, char, long double) const
00000000005e0040 0000000000000020 W std::__cxx11::money_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::do_put(std::ostreambuf_iterator<char, std::char_traits<char> >, bool, std::ios_base&, char, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const
00000000005e0060 00000000000002c4 W std::__cxx11::time_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_num(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, int&, int, int, unsigned long, std::ios_base&, std::_Ios_Iostate&) const
00000000005e0340 00000000000008ac W std::__cxx11::time_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::do_get_year(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, tm*) const
00000000005e0c00 0000000000000bf4 W std::__cxx11::time_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_name(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, int&, char const**, unsigned long, std::ios_base&, std::_Ios_Iostate&) const
00000000005e1800 00000000000005a8 W std::__cxx11::time_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_wday_or_month(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, int&, char const**, unsigned long, std::ios_base&, std::_Ios_Iostate&) const
00000000005e1dc0 0000000000000208 W std::__cxx11::time_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::do_get_weekday(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, tm*) const
00000000005e1fe0 0000000000000210 W std::__cxx11::time_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::do_get_monthname(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, tm*) const
00000000005e2200 0000000000000058 W std::__cxx11::messages<char>::messages(unsigned long)
00000000005e2200 0000000000000058 W std::__cxx11::messages<char>::messages(unsigned long)
00000000005e2260 0000000000001e04 W std::__cxx11::time_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_via_format(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, tm*, char const*, std::__time_get_state&) const
00000000005e2260 0000000000001e04 t std::__cxx11::time_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_via_format(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, tm*, char const*, std::__time_get_state&) const [clone .localalias]
00000000005e4080 000000000000019c W std::__cxx11::time_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::do_get_time(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, tm*) const
00000000005e4220 000000000000019c W std::__cxx11::time_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::do_get_date(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, tm*) const
00000000005e43c0 00000000000001e0 W std::__cxx11::time_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::do_get(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, tm*, char, char) const
00000000005e45a0 0000000000000008 T std::__cow_string::__cow_string(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
00000000005e45a0 0000000000000008 T std::__cow_string::__cow_string(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
00000000005e45c0 0000000000000048 T std::runtime_error::runtime_error(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
00000000005e45c0 0000000000000048 T std::runtime_error::runtime_error(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
00000000005e4620 000000000000000c t (anonymous namespace)::io_error_category::name() const
00000000005e4640 0000000000000010 t (anonymous namespace)::io_error_category::~io_error_category()
00000000005e4640 0000000000000010 t (anonymous namespace)::io_error_category::~io_error_category()
00000000005e4660 0000000000000030 t (anonymous namespace)::io_error_category::~io_error_category()
00000000005e46a0 0000000000000094 t (anonymous namespace)::io_error_category::message[abi:cxx11](int) const
00000000005e4740 000000000000000c T std::iostream_category()
00000000005e4760 0000000000000008 T std::ios_base::failure::what() const
00000000005e4780 0000000000000070 T std::ios_base::failure::~failure()
00000000005e4780 0000000000000070 T std::ios_base::failure::~failure()
00000000005e4780 0000000000000070 t std::ios_base::failure::~failure() [clone .localalias]
00000000005e4800 0000000000000024 T std::ios_base::failure::~failure()
00000000005e4840 00000000000000b0 T std::ios_base::failure::failure(std::string const&)
00000000005e4840 00000000000000b0 T std::ios_base::failure::failure(std::string const&)
00000000005e4900 000000000000011c T std::__construct_ios_failure(void*, char const*)
00000000005e4a20 0000000000000090 T std::__destroy_ios_failure(void*)
00000000005e4ac0 0000000000000050 T std::__is_ios_failure_handler(__cxxabiv1::__class_type_info const*)
00000000005e4b10 0000000000000138 t _get_next_page
00000000005e4c50 00000000000000f0 t _initial_pcmoffset
00000000005e4d40 0000000000000094 t _seek_helper
00000000005e4de0 0000000000000094 t _make_decode_ready
00000000005e4e80 0000000000000170 t _get_prev_page_serial
00000000005e4ff0 0000000000000330 t _fetch_headers
00000000005e5320 0000000000000490 t _bisect_forward_serialno
00000000005e57b0 00000000000002f8 t _fetch_and_process_packet.constprop.11
00000000005e5ab0 0000000000000100 T ov_clear
00000000005e5bb0 0000000000000220 t _ov_open1
00000000005e5dd0 00000000000000a8 T ov_pcm_total
00000000005e5e80 00000000000000c8 T ov_time_total
00000000005e5f50 0000000000000414 T ov_raw_seek
00000000005e6370 0000000000000140 t _open_seekable2
00000000005e64b0 0000000000000090 T ov_open_callbacks
00000000005e6540 0000000000000084 T rescale64
00000000005e65d0 000000000000068c T ov_pcm_seek_page
00000000005e6c60 000000000000034c T ov_pcm_seek
00000000005e6fb0 0000000000000128 T ov_time_seek
00000000005e70e0 000000000000001c T ov_pcm_tell
00000000005e7100 0000000000000060 T ov_info
00000000005e7160 000000000000005c T ov_comment
00000000005e71c0 00000000000001bc T ov_read
00000000005e7380 0000000000000034 T vorbis_block_init
00000000005e73c0 000000000000008c T _vorbis_block_alloc
00000000005e7450 0000000000000094 T _vorbis_block_ripcord
00000000005e74f0 0000000000000058 T vorbis_block_clear
00000000005e7550 0000000000000054 T vorbis_synthesis_restart
00000000005e75b0 000000000000012c T vorbis_dsp_clear
00000000005e76e0 0000000000000290 T vorbis_synthesis_init
00000000005e7970 000000000000047c T vorbis_synthesis_blockin
00000000005e7df0 0000000000000070 T vorbis_synthesis_pcmout
00000000005e7e60 0000000000000030 T vorbis_synthesis_read
00000000005e7e90 00000000000000b4 T _vorbis_window
00000000005e7f50 000000000000015c T _vorbis_apply_window
00000000005e80b0 0000000000000210 t _vorbis_synthesis1
00000000005e82c0 0000000000000008 T vorbis_synthesis
00000000005e82d0 0000000000000008 T vorbis_synthesis_trackonly
00000000005e82e0 0000000000000098 T vorbis_packet_blocksize
00000000005e8380 000000000000000c T vorbis_comment_init
00000000005e8390 0000000000000088 T vorbis_comment_clear
00000000005e8420 0000000000000018 T vorbis_info_blocksize
00000000005e8440 0000000000000038 T vorbis_info_init
00000000005e8480 00000000000001b0 T vorbis_info_clear
00000000005e8630 00000000000000cc T vorbis_synthesis_idheader
00000000005e8700 0000000000000738 T vorbis_synthesis_headerin
00000000005e8e40 0000000000000044 t bitreverse
00000000005e8e90 0000000000000410 T vorbis_staticbook_unpack
00000000005e92a0 000000000000016c T vorbis_book_decode
00000000005e9410 0000000000000418 T vorbis_book_decodevs_add
00000000005e9830 0000000000000388 T vorbis_book_decodev_add
00000000005e9bc0 0000000000000394 T vorbis_book_decodev_set
00000000005e9f60 0000000000000390 T vorbis_book_decodevv_add
00000000005ea2f0 0000000000000044 t bitreverse
00000000005ea340 0000000000000020 t sort32a
00000000005ea360 000000000000001c T _ilog
00000000005ea380 000000000000023c T _make_words
00000000005ea5c0 00000000000000b8 T _book_maptype1_quantvals
00000000005ea680 00000000000006e8 T _book_unquantize
00000000005ead70 0000000000000038 T vorbis_staticbook_destroy
00000000005eadb0 0000000000000070 T vorbis_book_clear
00000000005eae20 0000000000000468 T vorbis_book_init_decode
00000000005eb290 0000000000000018 t icomp
00000000005eb2b0 00000000000001e0 t floor1_inverse2
00000000005eb490 000000000000031c t floor1_inverse1
00000000005eb7b0 000000000000000c t floor1_free_look
00000000005eb7c0 000000000000000c t floor1_free_info
00000000005eb7d0 0000000000000230 t floor1_look
00000000005eba00 0000000000000380 t floor1_unpack
00000000005ebd80 000000000000019c t floor0_inverse1
00000000005ebf20 000000000000000c t floor0_free_info
00000000005ebf30 0000000000000148 t floor0_unpack
00000000005ec080 0000000000000040 t floor0_free_look
00000000005ec0c0 0000000000000238 t floor0_look
00000000005ec300 00000000000004dc T vorbis_lsp_to_curve
00000000005ec7e0 0000000000000074 t floor0_inverse2
00000000005ec860 000000000000000c T res0_free_info
00000000005ec870 0000000000000244 T res0_unpack
00000000005ecac0 0000000000000274 T res0_look
00000000005ecd40 000000000000034c t _01inverse
00000000005ed090 000000000000004c T res0_inverse
00000000005ed0e0 000000000000004c T res1_inverse
00000000005ed130 000000000000025c T res2_inverse
00000000005ed390 0000000000000098 T res0_free_look
00000000005ed430 000000000000042c t mapping0_inverse
00000000005ed860 000000000000000c t mapping0_free_info
00000000005ed870 0000000000000180 t mapping0_look
00000000005ed9f0 0000000000000264 t mapping0_unpack
00000000005edc60 00000000000000a0 t mapping0_free_look
00000000005edd00 00000000000019ac T mdct_backward
00000000005ef6b0 00000000000000f4 t _os_update_crc
00000000005ef7b0 0000000000000114 t _packetout
00000000005ef8d0 000000000000000c T ogg_page_version
00000000005ef8e0 0000000000000010 T ogg_page_continued
00000000005ef8f0 0000000000000010 T ogg_page_bos
00000000005ef900 0000000000000010 T ogg_page_eos
00000000005ef910 000000000000000c T ogg_page_granulepos
00000000005ef920 000000000000000c T ogg_page_serialno
00000000005ef930 000000000000000c T ogg_page_pageno
00000000005ef940 0000000000000040 T ogg_page_packets
00000000005ef980 000000000000001c T ogg_stream_check
00000000005ef9a0 0000000000000060 T ogg_stream_clear
00000000005efa00 00000000000000a4 T ogg_stream_init
00000000005efab0 0000000000000090 t _os_body_expand
00000000005efb40 00000000000000a4 t _os_lacing_expand
00000000005efbf0 0000000000000084 T ogg_page_checksum_set
00000000005efc80 0000000000000014 T ogg_sync_init
00000000005efca0 0000000000000040 T ogg_sync_clear
00000000005efce0 000000000000000c T ogg_sync_check
00000000005efcf0 00000000000000f0 T ogg_sync_buffer
00000000005efde0 000000000000004c T ogg_sync_wrote
00000000005efe30 0000000000000190 T ogg_sync_pageseek
00000000005effc0 000000000000039c T ogg_stream_pagein
00000000005f0360 0000000000000034 T ogg_sync_reset
00000000005f03a0 000000000000004c T ogg_stream_reset
00000000005f03f0 0000000000000050 T ogg_stream_reset_serialno
00000000005f0440 0000000000000044 T ogg_stream_packetout
00000000005f0490 0000000000000044 T ogg_stream_packetpeek
00000000005f04e0 0000000000000014 T oggpack_readinit
00000000005f0500 00000000000000f8 T oggpack_look
00000000005f0600 000000000000006c T oggpack_adv
00000000005f0670 000000000000012c T oggpack_read
00000000005f07a0 0000000000000020 T oggpack_bytes
00000000005f07c0 0000000000000190 t conv_s16_to_s32
00000000005f0950 0000000000000280 t cap_fit
00000000005f0bd0 0000000000000184 t enc_chan_fit
00000000005f0d60 0000000000000020 T mpg123_rates
00000000005f0d80 0000000000000050 T mpg123_encsize
00000000005f0dd0 0000000000000c30 T INT123_frame_output_format
00000000005f1a00 000000000000007c T mpg123_fmt_none
00000000005f1a80 000000000000003c T mpg123_format_none
00000000005f1ac0 00000000000002c8 T mpg123_fmt_all
00000000005f1d90 000000000000033c T mpg123_fmt2
00000000005f20d0 0000000000000010 T mpg123_fmt
00000000005f20e0 000000000000003c T mpg123_format
00000000005f2120 0000000000000010 T INT123_invalidate_format
00000000005f2130 0000000000000018 T INT123_decoder_synth_bytes
00000000005f2150 0000000000000018 T INT123_samples_to_bytes
00000000005f2170 0000000000000018 T INT123_bytes_to_samples
00000000005f2190 0000000000000044 T INT123_outblock_bytes
00000000005f21e0 0000000000000700 T swap_endian
00000000005f28e0 0000000000001620 T INT123_postprocess_buffer
00000000005f3f00 00000000000000e4 t decode_the_frame
00000000005f3ff0 0000000000000154 t frame_buffercheck.part.0.constprop.0
00000000005f4150 0000000000000008 T mpg123_init
00000000005f4160 0000000000000004 T mpg123_exit
00000000005f4170 0000000000000090 T mpg123_parnew
00000000005f4200 0000000000000010 T mpg123_new
00000000005f4210 00000000000001e4 T INT123_decode_update
00000000005f4400 00000000000001b8 t get_next_frame
00000000005f45c0 0000000000000100 t do_the_seek
00000000005f46c0 0000000000000064 T mpg123_feed
00000000005f4730 000000000000019c T mpg123_decode
00000000005f48d0 0000000000000018 T mpg123_read
00000000005f48f0 000000000000008c T mpg123_getformat2
00000000005f4980 0000000000000008 T mpg123_getformat
00000000005f4990 00000000000000d8 T mpg123_tell
00000000005f4a70 00000000000001e0 T mpg123_scan
00000000005f4c50 00000000000001f4 T mpg123_seek
00000000005f4e50 0000000000000064 T mpg123_close
00000000005f4ec0 0000000000000058 T mpg123_open_handle
00000000005f4f20 000000000000004c T mpg123_replace_reader_handle
00000000005f4f70 0000000000000028 T mpg123_delete
00000000005f4fa0 0000000000000080 T mpg123_plain_strerror
00000000005f5020 0000000000000018 T mpg123_errcode
00000000005f5040 0000000000000010 T mpg123_strerror
00000000005f5050 0000000000000014 T INT123_fi_init
00000000005f5070 0000000000000028 T INT123_fi_exit
00000000005f50a0 00000000000001a0 T INT123_fi_resize
00000000005f5240 0000000000000194 T INT123_fi_add
00000000005f53e0 0000000000000010 T INT123_fi_reset
00000000005f53f0 0000000000000008 T INT123_init_icy
00000000005f5400 0000000000000020 T INT123_clear_icy
00000000005f5420 0000000000000018 T INT123_reset_icy
00000000005f5440 00000000000001c4 T INT123_ntom_val
00000000005f5610 000000000000015c T INT123_synth_ntom_set_step
00000000005f5770 000000000000001c T INT123_ntom_set_ntom
00000000005f5790 000000000000002c T INT123_ntom_frame_outsamples
00000000005f57c0 0000000000000170 T INT123_ntom_frmouts
00000000005f5930 0000000000000130 T INT123_ntom_ins2outs
00000000005f5a60 000000000000012c T INT123_ntom_frameoff
00000000005f5b90 000000000000000c T mpg123_init_string
00000000005f5ba0 0000000000000028 T mpg123_free_string
00000000005f5bd0 0000000000000094 T mpg123_resize_string
00000000005f5c70 000000000000002c T mpg123_grow_string
00000000005f5ca0 000000000000006c T mpg123_move_string
00000000005f5d10 0000000000000050 T mpg123_same_string
00000000005f5d60 0000000000000010 T INT123_safe_realloc
00000000005f5d70 000000000000073c t decode_header
00000000005f64b0 0000000000000094 t forget_head_shift
00000000005f6550 00000000000000a4 t getbits.constprop.0
00000000005f6600 0000000000000018 T INT123_frame_freq
00000000005f6620 00000000000000bc T INT123_set_pointer
00000000005f66e0 0000000000000024 T INT123_compute_bpf
00000000005f6710 0000000000001a54 T INT123_read_frame
00000000005f8170 00000000000000ec t frame_fuzzy_find.constprop.0
00000000005f8260 000000000000006c T mpg123_reset_eq
00000000005f82d0 00000000000000e0 T INT123_frame_outbuffer
00000000005f83b0 00000000000000a8 T INT123_frame_index_setup
00000000005f8460 000000000000015c T INT123_frame_buffers
00000000005f85c0 0000000000000084 T INT123_frame_buffers_reset
00000000005f8650 0000000000000068 T INT123_frame_fill_toc
00000000005f86c0 00000000000000ac T INT123_frame_exit
00000000005f8770 00000000000000cc T INT123_frame_index_find
00000000005f8840 000000000000006c T INT123_frame_ins2outs
00000000005f88b0 0000000000000080 T INT123_frame_outs
00000000005f8930 0000000000000078 T INT123_frame_expect_outsamples
00000000005f89b0 0000000000000080 T INT123_frame_offset
00000000005f8a30 0000000000000060 T INT123_frame_gapless_init
00000000005f8a90 0000000000000154 t frame_fixed_reset
00000000005f8bf0 00000000000001a4 T INT123_frame_init_par
00000000005f8da0 000000000000003c T INT123_frame_reset
00000000005f8de0 0000000000000058 T INT123_frame_gapless_realinit
00000000005f8e40 00000000000000cc T INT123_frame_gapless_update
00000000005f8f10 0000000000000118 T INT123_frame_set_frameseek
00000000005f9030 0000000000000020 T INT123_frame_skip
00000000005f9050 0000000000000088 T INT123_frame_set_seek
00000000005f90e0 0000000000000150 T INT123_do_rva
00000000005f9230 0000000000000180 t next_text
00000000005f93b0 0000000000000250 t promote_framename
00000000005f9600 00000000000006fc t convert_utf16bom
00000000005f9d00 0000000000000328 t convert_latin1
00000000005fa030 0000000000000064 t convert_utf8
00000000005fa0a0 0000000000000364 t add_id3_text
00000000005fa410 0000000000000044 T INT123_init_id3
00000000005fa460 00000000000002e8 T INT123_exit_id3
00000000005fa750 0000000000000018 T INT123_reset_id3
00000000005fa770 0000000000000200 T INT123_id3_to_utf8
00000000005fa970 0000000000000134 t store_id3_text.part.0
00000000005faab0 0000000000000120 T store_id3v2
00000000005fabd0 00000000000021d0 T INT123_parse_new_id3
00000000005fcda0 0000000000000050 t synth_stereo_wrap
00000000005fcdf0 0000000000000008 T INT123_defdec
00000000005fce00 0000000000000020 T INT123_decclass
00000000005fce20 0000000000000368 T INT123_set_synth_functions
00000000005fd190 0000000000000124 T INT123_dectype
00000000005fd2c0 0000000000000114 T INT123_frame_cpu_opt
00000000005fd3e0 0000000000000008 t nix_lseek
00000000005fd3f0 00000000000000bc t plain_fullread
00000000005fd4b0 0000000000000050 t generic_head_read
00000000005fd500 0000000000000054 t generic_head_shift
00000000005fd560 000000000000002c t generic_read_frame_body
00000000005fd590 000000000000003c t generic_tell
00000000005fd5d0 000000000000004c t feed_skip_bytes
00000000005fd620 0000000000000008 t feed_seek_frame
00000000005fd630 0000000000000014 t bad_init
00000000005fd650 0000000000000004 t bad_close
00000000005fd660 0000000000000014 t bad_fullread
00000000005fd680 0000000000000014 t bad_head_read
00000000005fd6a0 0000000000000014 t bad_skip_bytes
00000000005fd6c0 0000000000000014 t bad_read_frame_body
00000000005fd6e0 0000000000000014 t bad_back_bytes
00000000005fd700 0000000000000014 t bad_tell
00000000005fd720 0000000000000038 t plain_read
00000000005fd760 0000000000000154 t bc_give
00000000005fd8c0 0000000000000024 t feed_read
00000000005fd8f0 000000000000013c t bc_add
00000000005fda30 0000000000000398 t icy_fullread
00000000005fddd0 000000000000020c t buffered_fullread
00000000005fdfe0 00000000000000e4 t stream_seek_frame
00000000005fe0d0 0000000000000004 t posix_lseek
00000000005fe0e0 0000000000000004 t posix_read
00000000005fe0f0 00000000000000d4 t buffered_forget
00000000005fe1d0 0000000000000034 t io_seek
00000000005fe210 0000000000000070 t stream_rewind
00000000005fe280 000000000000012c t stream_skip_bytes
00000000005fe3b0 000000000000004c t stream_back_bytes
00000000005fe400 00000000000002ec t default_init
00000000005fe6f0 0000000000000014 t bad_head_shift
00000000005fe710 0000000000000014 t bad_seek_frame
00000000005fe730 0000000000000004 t bad_rewind
00000000005fe740 00000000000002dc t bc_fill_pool.isra.0
00000000005fea20 000000000000004c t feed_init
00000000005fea70 0000000000000078 t bc_reset
00000000005feaf0 0000000000000064 t stream_close
00000000005feb60 0000000000000064 t feed_back_bytes
00000000005febd0 0000000000000008 T INT123_bc_poolsize
00000000005febe0 0000000000000024 T INT123_bc_prepare
00000000005fec10 00000000000000e4 T INT123_bc_cleanup
00000000005fed00 0000000000000058 T INT123_feed_more
00000000005fed60 0000000000000050 T INT123_open_bad
00000000005fedb0 000000000000009c T INT123_open_stream_handle
00000000005fee50 00000000000002e4 T INT123_make_decode_tables
00000000005ff140 0000000000000a84 T INT123_make_conv16to8_table
00000000005ffbd0 00000000000000c0 t getbits
00000000005ffc90 0000000000002318 T INT123_do_layer1
0000000000601fb0 00000000000000c0 t getbits
0000000000602070 0000000000000120 T INT123_init_layer12_stuff
0000000000602190 0000000000000064 T INT123_init_layer12_table
0000000000602200 0000000000001b34 T INT123_do_layer2
0000000000603d40 00000000000002bc t III_get_scale_factors_2
0000000000604000 00000000000003b8 t dct12
00000000006043c0 00000000000000c0 t getbits
0000000000604480 00000000000017a4 t III_dequantize_sample
0000000000605c30 00000000000013c4 t III_get_scale_factors_1.isra.0
0000000000607000 0000000000000028 T INT123_init_layer3_gainpow2
0000000000607030 0000000000000478 T INT123_init_layer3_stuff
00000000006074b0 0000000000000554 T INT123_dct36
0000000000607a10 00000000000035d8 T INT123_do_layer3
000000000060aff0 00000000000003bc T INT123_synth_1to1_8bit
000000000060b3b0 00000000000000bc T INT123_synth_1to1_8bit_mono
000000000060b470 000000000000008c T INT123_synth_1to1_8bit_m2s
000000000060b500 0000000000000140 T INT123_synth_1to1_8bit_wrap
000000000060b640 000000000000011c T INT123_synth_1to1_8bit_wrap_mono
000000000060b760 0000000000000198 T INT123_synth_1to1_8bit_wrap_m2s
000000000060b900 00000000000003bc T INT123_synth_2to1_8bit
000000000060bcc0 00000000000000d4 T INT123_synth_2to1_8bit_mono
000000000060bda0 00000000000000bc T INT123_synth_2to1_8bit_m2s
000000000060be60 0000000000000490 T INT123_synth_4to1_8bit
000000000060c2f0 0000000000000094 T INT123_synth_4to1_8bit_mono
000000000060c390 000000000000007c T INT123_synth_4to1_8bit_m2s
000000000060c410 00000000000008d0 T INT123_synth_ntom_8bit
000000000060cce0 000000000000015c T INT123_synth_ntom_8bit_mono
000000000060ce40 0000000000000148 T INT123_synth_ntom_8bit_m2s
000000000060cf90 0000000000000394 T INT123_synth_1to1
000000000060d330 00000000000000bc T INT123_synth_1to1_mono
000000000060d3f0 000000000000008c T INT123_synth_1to1_m2s
000000000060d480 0000000000000394 T INT123_synth_2to1
000000000060d820 00000000000000d4 T INT123_synth_2to1_mono
000000000060d900 00000000000000bc T INT123_synth_2to1_m2s
000000000060d9c0 0000000000000874 T INT123_synth_4to1
000000000060e240 0000000000000094 T INT123_synth_4to1_mono
000000000060e2e0 000000000000007c T INT123_synth_4to1_m2s
000000000060e360 0000000000000be4 T INT123_synth_ntom
000000000060ef50 0000000000000158 T INT123_synth_ntom_mono
000000000060f0b0 000000000000013c T INT123_synth_ntom_m2s
000000000060f1f0 00000000000003bc T INT123_synth_1to1_s32
000000000060f5b0 00000000000000bc T INT123_synth_1to1_s32_mono
000000000060f670 000000000000008c T INT123_synth_1to1_s32_m2s
000000000060f700 00000000000003bc T INT123_synth_2to1_s32
000000000060fac0 00000000000000d4 T INT123_synth_2to1_s32_mono
000000000060fba0 00000000000000bc T INT123_synth_2to1_s32_m2s
000000000060fc60 00000000000008d4 T INT123_synth_4to1_s32
0000000000610540 0000000000000094 T INT123_synth_4to1_s32_mono
00000000006105e0 000000000000007c T INT123_synth_4to1_s32_m2s
0000000000610660 0000000000000c1c T INT123_synth_ntom_s32
0000000000611280 0000000000000158 T INT123_synth_ntom_s32_mono
00000000006113e0 000000000000013c T INT123_synth_ntom_s32_m2s
0000000000611520 000000000000035c T INT123_synth_1to1_real
0000000000611880 00000000000000bc T INT123_synth_1to1_real_mono
0000000000611940 000000000000008c T INT123_synth_1to1_real_m2s
00000000006119d0 000000000000035c T INT123_synth_2to1_real
0000000000611d30 00000000000000d4 T INT123_synth_2to1_real_mono
0000000000611e10 00000000000000bc T INT123_synth_2to1_real_m2s
0000000000611ed0 000000000000064c T INT123_synth_4to1_real
0000000000612520 0000000000000094 T INT123_synth_4to1_real_mono
00000000006125c0 000000000000007c T INT123_synth_4to1_real_m2s
0000000000612640 0000000000000598 T INT123_synth_ntom_real
0000000000612be0 0000000000000158 T INT123_synth_ntom_real_mono
0000000000612d40 000000000000013c T INT123_synth_ntom_real_m2s
0000000000612e80 0000000000000004 T INT123_compat_close
0000000000612e90 0000000000000610 T INT123_dct64
00000000006134a0 00000000000000b8 T INT123_do_equalizer
0000000000613560 00000000000000f0 t ModPlug::UpdateSettings(bool)
0000000000613650 00000000000000a4 T ModPlug_Load
0000000000613700 0000000000000044 T ModPlug_Unload
0000000000613750 0000000000000020 T ModPlug_Read
0000000000613770 0000000000000008 T ModPlug_SetMasterVolume
0000000000613780 0000000000000078 T ModPlug_Seek
0000000000613800 0000000000000024 T ModPlug_GetSettings
0000000000613830 000000000000002c T ModPlug_SetSettings
0000000000613860 000000000000000c t _muldiv(long, long, long)
0000000000613870 0000000000000010 t _muldivr(long, long, long)
0000000000613880 000000000000010c T CSoundFile::InitPlayer(bool)
0000000000613990 00000000000000d8 T CSoundFile::FadeSong(unsigned int)
0000000000613a70 0000000000000058 T CSoundFile::GlobalFadeSong(unsigned int)
0000000000613ad0 00000000000002a8 T CSoundFile::ProcessRow()
0000000000613d80 0000000000001588 T CSoundFile::ReadNote()
0000000000615310 00000000000003fc T CSoundFile::Read(void*, unsigned int)
0000000000615710 0000000000000130 T CSoundFile::CSoundFile()
0000000000615710 0000000000000130 T CSoundFile::CSoundFile()
0000000000615840 0000000000000040 T CSoundFile::AllocatePattern(unsigned int, unsigned int)
0000000000615880 000000000000000c T CSoundFile::FreePattern(void*)
0000000000615890 0000000000000028 T CSoundFile::AllocateSample(unsigned int)
00000000006158c0 0000000000000010 T CSoundFile::FreeSample(void*)
00000000006158d0 0000000000000144 T CSoundFile::Destroy()
0000000000615a20 0000000000000004 T CSoundFile::~CSoundFile()
0000000000615a20 0000000000000004 T CSoundFile::~CSoundFile()
0000000000615a30 0000000000000128 T CSoundFile::ResetMidiCfg()
0000000000615b60 0000000000000790 T CSoundFile::Create(unsigned char const*, unsigned int)
00000000006162f0 00000000000000b4 T CSoundFile::SetWaveConfig(unsigned int, unsigned int, unsigned int, bool)
00000000006163b0 0000000000000030 T CSoundFile::SetMixConfig(unsigned int, unsigned int)
00000000006163e0 000000000000005c T CSoundFile::SetResamplingMode(unsigned int)
0000000000616440 0000000000000078 T CSoundFile::SetMasterVolume(unsigned int, bool)
00000000006164c0 0000000000000050 T CSoundFile::GetMaxPosition() const
0000000000616510 0000000000000210 T CSoundFile::SetCurrentPos(unsigned int)
0000000000616720 0000000000000344 T CSoundFile::AdjustSampleLoop(_MODINSTRUMENT*)
0000000000616a70 0000000000000948 T CSoundFile::ReadSample(_MODINSTRUMENT*, unsigned int, char const*, unsigned int)
00000000006173c0 000000000000003c T CSoundFile::TransposeToFrequency(int, int)
0000000000617400 0000000000000034 T CSoundFile::FrequencyToTranspose(unsigned int)
0000000000617440 0000000000000060 T CSoundFile::FrequencyToTranspose(_MODINSTRUMENT*)
00000000006174a0 0000000000000118 T CSoundFile::SetPatternName(unsigned int, char const*)
00000000006175c0 0000000000000184 T CSoundFile::DetectUnusedSamples(bool*)
0000000000617750 00000000000000a8 T CSoundFile::DestroySample(unsigned int)
0000000000617800 0000000000000804 T CSoundFile::GetLength(bool, bool)
0000000000618010 00000000000003c0 T CSoundFile::InstrumentChange(_MODCHANNEL*, unsigned int, bool, bool, bool)
00000000006183d0 00000000000000e8 T CSoundFile::GetNNAChannel(unsigned int) const
00000000006184c0 00000000000000ac T CSoundFile::FinePortamentoUp(_MODCHANNEL*, unsigned int)
0000000000618570 00000000000000b0 T CSoundFile::FinePortamentoDown(_MODCHANNEL*, unsigned int)
0000000000618620 00000000000000a8 T CSoundFile::ExtraFinePortamentoUp(_MODCHANNEL*, unsigned int)
00000000006186d0 00000000000000b0 T CSoundFile::ExtraFinePortamentoDown(_MODCHANNEL*, unsigned int)
0000000000618780 000000000000012c T CSoundFile::TonePortamento(_MODCHANNEL*, unsigned int)
00000000006188b0 0000000000000030 T CSoundFile::Vibrato(_MODCHANNEL*, unsigned int)
00000000006188e0 000000000000002c T CSoundFile::FineVibrato(_MODCHANNEL*, unsigned int)
0000000000618910 000000000000002c T CSoundFile::Panbrello(_MODCHANNEL*, unsigned int)
0000000000618940 00000000000000cc T CSoundFile::PanningSlide(_MODCHANNEL*, unsigned int)
0000000000618a10 000000000000004c T CSoundFile::FineVolumeUp(_MODCHANNEL*, unsigned int)
0000000000618a60 0000000000000044 T CSoundFile::FineVolumeDown(_MODCHANNEL*, unsigned int)
0000000000618ab0 00000000000000f8 T CSoundFile::VolumeSlide(_MODCHANNEL*, unsigned int)
0000000000618bb0 0000000000000030 T CSoundFile::Tremolo(_MODCHANNEL*, unsigned int)
0000000000618be0 00000000000000b8 T CSoundFile::ChannelVolSlide(_MODCHANNEL*, unsigned int)
0000000000618ca0 0000000000000134 T CSoundFile::ExtendedChannelEffect(_MODCHANNEL*, unsigned int)
0000000000618de0 0000000000000398 T CSoundFile::ProcessMidiMacro(unsigned int, char const*, unsigned int)
0000000000619180 00000000000000d8 T CSoundFile::DoFreqSlide(_MODCHANNEL*, int)
0000000000619260 0000000000000070 T CSoundFile::PortamentoUp(_MODCHANNEL*, unsigned int)
00000000006192d0 0000000000000070 T CSoundFile::PortamentoDown(_MODCHANNEL*, unsigned int)
0000000000619340 000000000000003c T CSoundFile::NoteCut(unsigned int, unsigned int)
0000000000619380 0000000000000104 T CSoundFile::KeyOff(unsigned int)
0000000000619490 000000000000046c T CSoundFile::CheckNNA(unsigned int, unsigned int, int, bool)
0000000000619900 000000000000005c T CSoundFile::SetTempo(unsigned int)
0000000000619960 0000000000000084 T CSoundFile::PatternLoop(_MODCHANNEL*, unsigned int)
00000000006199f0 00000000000000c0 T CSoundFile::GlobalVolSlide(unsigned int)
0000000000619ab0 0000000000000118 T CSoundFile::IsSongFinished(unsigned int, unsigned int) const
0000000000619bd0 00000000000000cc T CSoundFile::SetSpeed(unsigned int)
0000000000619ca0 000000000000017c T CSoundFile::IsValidBackwardJump(unsigned int, unsigned int, unsigned int, unsigned int) const
0000000000619e20 00000000000001dc T CSoundFile::GetPeriodFromNote(unsigned int, int, unsigned int) const
000000000061a000 00000000000007c8 T CSoundFile::NoteChange(unsigned int, int, bool, bool)
000000000061a7d0 00000000000002dc T CSoundFile::RetrigNote(unsigned int, unsigned int)
000000000061aab0 000000000000027c T CSoundFile::ExtendedMODCommands(unsigned int, unsigned int)
000000000061ad30 000000000000048c T CSoundFile::ExtendedS3MCommands(unsigned int, unsigned int)
000000000061b1c0 0000000000000e20 T CSoundFile::ProcessEffects()
000000000061bfe0 000000000000011c T CSoundFile::GetNoteFromPeriod(unsigned int) const
000000000061c100 00000000000000c4 T CSoundFile::GetFreqFromPeriod(unsigned int, unsigned int, int) const
000000000061c1d0 0000000000000090 T CSoundFile::CutOffToFrequency(unsigned int, int) const
000000000061c260 00000000000000ec T CSoundFile::SetupChannelFilter(_MODCHANNEL*, bool, int) const
000000000061c350 0000000000000528 T CSoundFile::InitializeDSP(bool)
000000000061c880 0000000000000554 T CSoundFile::ProcessStereoDSP(int)
000000000061cde0 0000000000000060 T CSoundFile::SetReverbParameters(unsigned int, unsigned int)
000000000061ce40 000000000000006c T CSoundFile::SetXBassParameters(unsigned int, unsigned int)
000000000061ceb0 0000000000000060 T CSoundFile::SetSurroundParameters(unsigned int, unsigned int)
000000000061cf10 0000000000000088 T CSoundFile::SetWaveConfigEx(bool, bool, bool, bool, bool, bool, bool)
000000000061cfa0 0000000000000070 T Mono8BitMix(_MODCHANNEL*, int*, int*)
000000000061d010 000000000000006c T Mono16BitMix(_MODCHANNEL*, int*, int*)
000000000061d080 0000000000000084 T Mono8BitLinearMix(_MODCHANNEL*, int*, int*)
000000000061d110 0000000000000084 T Mono16BitLinearMix(_MODCHANNEL*, int*, int*)
000000000061d1a0 00000000000000c0 T Mono8BitSplineMix(_MODCHANNEL*, int*, int*)
000000000061d260 00000000000000c4 T Mono16BitSplineMix(_MODCHANNEL*, int*, int*)
000000000061d330 0000000000000108 T Mono8BitFirFilterMix(_MODCHANNEL*, int*, int*)
000000000061d440 0000000000000124 T Mono16BitFirFilterMix(_MODCHANNEL*, int*, int*)
000000000061d570 0000000000000080 T Mono8BitRampMix(_MODCHANNEL*, int*, int*)
000000000061d5f0 0000000000000084 T Mono16BitRampMix(_MODCHANNEL*, int*, int*)
000000000061d680 0000000000000094 T Mono8BitLinearRampMix(_MODCHANNEL*, int*, int*)
000000000061d720 000000000000009c T Mono16BitLinearRampMix(_MODCHANNEL*, int*, int*)
000000000061d7c0 00000000000000d0 T Mono8BitSplineRampMix(_MODCHANNEL*, int*, int*)
000000000061d890 00000000000000e0 T Mono16BitSplineRampMix(_MODCHANNEL*, int*, int*)
000000000061d970 0000000000000130 T Mono8BitFirFilterRampMix(_MODCHANNEL*, int*, int*)
000000000061daa0 0000000000000140 T Mono16BitFirFilterRampMix(_MODCHANNEL*, int*, int*)
000000000061dbe0 000000000000006c T FastMono8BitMix(_MODCHANNEL*, int*, int*)
000000000061dc50 0000000000000068 T FastMono16BitMix(_MODCHANNEL*, int*, int*)
000000000061dcc0 0000000000000080 T FastMono8BitLinearMix(_MODCHANNEL*, int*, int*)
000000000061dd40 0000000000000080 T FastMono16BitLinearMix(_MODCHANNEL*, int*, int*)
000000000061ddc0 000000000000007c T FastMono8BitRampMix(_MODCHANNEL*, int*, int*)
000000000061de40 0000000000000080 T FastMono16BitRampMix(_MODCHANNEL*, int*, int*)
000000000061dec0 0000000000000090 T FastMono8BitLinearRampMix(_MODCHANNEL*, int*, int*)
000000000061df50 0000000000000098 T FastMono16BitLinearRampMix(_MODCHANNEL*, int*, int*)
000000000061dff0 0000000000000080 T Stereo8BitMix(_MODCHANNEL*, int*, int*)
000000000061e070 000000000000007c T Stereo16BitMix(_MODCHANNEL*, int*, int*)
000000000061e0f0 000000000000009c T Stereo8BitLinearMix(_MODCHANNEL*, int*, int*)
000000000061e190 00000000000000a8 T Stereo16BitLinearMix(_MODCHANNEL*, int*, int*)
000000000061e240 0000000000000110 T Stereo8BitSplineMix(_MODCHANNEL*, int*, int*)
000000000061e350 0000000000000108 T Stereo16BitSplineMix(_MODCHANNEL*, int*, int*)
000000000061e460 00000000000001bc T Stereo8BitFirFilterMix(_MODCHANNEL*, int*, int*)
000000000061e620 00000000000001b8 T Stereo16BitFirFilterMix(_MODCHANNEL*, int*, int*)
000000000061e7e0 0000000000000090 T Stereo8BitRampMix(_MODCHANNEL*, int*, int*)
000000000061e870 0000000000000094 T Stereo16BitRampMix(_MODCHANNEL*, int*, int*)
000000000061e910 00000000000000ac T Stereo8BitLinearRampMix(_MODCHANNEL*, int*, int*)
000000000061e9c0 00000000000000c0 T Stereo16BitLinearRampMix(_MODCHANNEL*, int*, int*)
000000000061ea80 0000000000000130 T Stereo8BitSplineRampMix(_MODCHANNEL*, int*, int*)
000000000061ebb0 000000000000012c T Stereo16BitSplineRampMix(_MODCHANNEL*, int*, int*)
000000000061ece0 00000000000001d8 T Stereo8BitFirFilterRampMix(_MODCHANNEL*, int*, int*)
000000000061eec0 00000000000001cc T Stereo16BitFirFilterRampMix(_MODCHANNEL*, int*, int*)
000000000061f090 000000000000009c T FilterMono8BitMix(_MODCHANNEL*, int*, int*)
000000000061f130 000000000000009c T FilterMono16BitMix(_MODCHANNEL*, int*, int*)
000000000061f1d0 00000000000000b0 T FilterMono8BitLinearMix(_MODCHANNEL*, int*, int*)
000000000061f280 00000000000000b4 T FilterMono16BitLinearMix(_MODCHANNEL*, int*, int*)
000000000061f340 00000000000000ec T FilterMono8BitSplineMix(_MODCHANNEL*, int*, int*)
000000000061f430 00000000000000f4 T FilterMono16BitSplineMix(_MODCHANNEL*, int*, int*)
000000000061f530 0000000000000148 T FilterMono8BitFirFilterMix(_MODCHANNEL*, int*, int*)
000000000061f680 000000000000015c T FilterMono16BitFirFilterMix(_MODCHANNEL*, int*, int*)
000000000061f7e0 00000000000000b4 T FilterMono8BitRampMix(_MODCHANNEL*, int*, int*)
000000000061f8a0 00000000000000b4 T FilterMono16BitRampMix(_MODCHANNEL*, int*, int*)
000000000061f960 00000000000000c8 T FilterMono8BitLinearRampMix(_MODCHANNEL*, int*, int*)
000000000061fa30 00000000000000c8 T FilterMono16BitLinearRampMix(_MODCHANNEL*, int*, int*)
000000000061fb00 0000000000000104 T FilterMono8BitSplineRampMix(_MODCHANNEL*, int*, int*)
000000000061fc10 0000000000000114 T FilterMono16BitSplineRampMix(_MODCHANNEL*, int*, int*)
000000000061fd30 0000000000000168 T FilterMono8BitFirFilterRampMix(_MODCHANNEL*, int*, int*)
000000000061fea0 0000000000000178 T FilterMono16BitFirFilterRampMix(_MODCHANNEL*, int*, int*)
0000000000620020 00000000000000d0 T FilterStereo8BitMix(_MODCHANNEL*, int*, int*)
00000000006200f0 00000000000000cc T FilterStereo16BitMix(_MODCHANNEL*, int*, int*)
00000000006201c0 00000000000000ec T FilterStereo8BitLinearMix(_MODCHANNEL*, int*, int*)
00000000006202b0 00000000000000fc T FilterStereo16BitLinearMix(_MODCHANNEL*, int*, int*)
00000000006203b0 0000000000000178 T FilterStereo8BitSplineMix(_MODCHANNEL*, int*, int*)
0000000000620530 0000000000000174 T FilterStereo16BitSplineMix(_MODCHANNEL*, int*, int*)
00000000006206b0 0000000000000210 T FilterStereo8BitFirFilterMix(_MODCHANNEL*, int*, int*)
00000000006208c0 0000000000000214 T FilterStereo16BitFirFilterMix(_MODCHANNEL*, int*, int*)
0000000000620ae0 00000000000000e8 T FilterStereo8BitRampMix(_MODCHANNEL*, int*, int*)
0000000000620bd0 00000000000000e4 T FilterStereo16BitRampMix(_MODCHANNEL*, int*, int*)
0000000000620cc0 0000000000000114 T FilterStereo8BitLinearRampMix(_MODCHANNEL*, int*, int*)
0000000000620de0 0000000000000124 T FilterStereo16BitLinearRampMix(_MODCHANNEL*, int*, int*)
0000000000620f10 0000000000000194 T FilterStereo8BitSplineRampMix(_MODCHANNEL*, int*, int*)
00000000006210b0 000000000000018c T FilterStereo16BitSplineRampMix(_MODCHANNEL*, int*, int*)
0000000000621240 0000000000000224 T FilterStereo8BitFirFilterRampMix(_MODCHANNEL*, int*, int*)
0000000000621470 0000000000000224 T FilterStereo16BitFirFilterRampMix(_MODCHANNEL*, int*, int*)
00000000006216a0 00000000000001d4 t CzCUBICSPLINE::CzCUBICSPLINE()
00000000006216a0 00000000000001d4 T CzCUBICSPLINE::CzCUBICSPLINE()
0000000000621880 00000000000001c8 t CzWINDOWEDFIR::CzWINDOWEDFIR()
0000000000621880 00000000000001c8 T CzWINDOWEDFIR::CzWINDOWEDFIR()
0000000000621a50 0000000000000084 T X86_Convert32To8(void*, int*, unsigned int, int*, int*)
0000000000621ae0 000000000000007c T X86_Convert32To16(void*, int*, unsigned int, int*, int*)
0000000000621b60 000000000000008c T X86_Convert32To24(void*, int*, unsigned int, int*, int*)
0000000000621bf0 000000000000007c T X86_Convert32To32(void*, int*, unsigned int, int*, int*)
0000000000621c70 0000000000000004 t X86_InterleaveFrontRear(int*, int*, unsigned int)
0000000000621c80 000000000000003c t X86_MonoFromStereo(int*, unsigned int)
0000000000621cc0 000000000000007c t X86_StereoFill(int*, unsigned int, int*, int*)
0000000000621d40 0000000000000078 t X86_EndChannelOfs(_MODCHANNEL*, int*, unsigned int)
0000000000621dc0 00000000000006c4 T CSoundFile::CreateStereoMix(int)
0000000000622490 000000000000007c t MMCMPBITBUFFER::GetBits(unsigned int) [clone .part.0]
0000000000622510 0000000000000070 t _PPBITBUFFER::GetBits(unsigned int)
0000000000622580 00000000000004c0 t PP20_Unpack(unsigned char const**, unsigned int*)
0000000000622a40 000000000000079c t MMCMP_Unpack(unsigned char const**, unsigned int*)
00000000006231e0 000000000000143c T CSoundFile::ReadXM(unsigned char const*, unsigned int)
0000000000624620 0000000000000550 T CSoundFile::ReadWav(unsigned char const*, unsigned int)
0000000000624b70 0000000000000074 t get_fci(char const*, int*)
0000000000624bf0 00000000000004cc T CSoundFile::ReadUMX(unsigned char const*, unsigned int)
00000000006250c0 00000000000006d8 T CSoundFile::ReadUlt(unsigned char const*, unsigned int)
00000000006257a0 0000000000000598 T CSoundFile::ReadSTM(unsigned char const*, unsigned int)
0000000000625d40 0000000000000124 T CSoundFile::S3MConvert(_MODCOMMAND*, bool) const
0000000000625e70 0000000000000898 T CSoundFile::ReadS3M(unsigned char const*, unsigned int)
0000000000626710 00000000000004c0 T CSoundFile::ReadPTM(unsigned char const*, unsigned int)
0000000000626bd0 00000000000006a0 T CSoundFile::ReadOKT(unsigned char const*, unsigned int)
0000000000627270 000000000000056c T CSoundFile::ReadMTM(unsigned char const*, unsigned int)
00000000006277e0 0000000000000190 T CSoundFile::ConvertModCommand(_MODCOMMAND*) const
0000000000627970 0000000000000a38 T CSoundFile::ReadMod(unsigned char const*, unsigned int)
00000000006283b0 0000000000000330 t MedConvert(_MODCOMMAND*, tagMMD0SONGHEADER const*)
00000000006286e0 0000000000000d84 T CSoundFile::ReadMed(unsigned char const*, unsigned int)
0000000000629470 0000000000000238 t ConvertMDLCommand(_MODCOMMAND*, unsigned int, unsigned int)
00000000006296b0 0000000000000268 t UnpackMDLTrack(_MODCOMMAND*, unsigned int, unsigned int, unsigned int, unsigned char const*, unsigned int)
0000000000629920 0000000000000f9c T CSoundFile::ReadMDL(unsigned char const*, unsigned int)
000000000062a8c0 0000000000000068 t MDLReadBits(unsigned int&, unsigned int&, unsigned char*&, signed char)
000000000062a930 0000000000000508 T CSoundFile::ITInstrToMPT(void const*, _INSTRUMENTHEADER*, unsigned int)
000000000062ae40 000000000000007c t ITReadBits(unsigned int&, unsigned int&, unsigned char*&, signed char)
000000000062aec0 000000000000023c t ITUnpack8Bit(signed char*, unsigned int, unsigned char*, unsigned int, bool)
000000000062b100 0000000000000230 t ITUnpack16Bit(signed char*, unsigned int, unsigned char*, unsigned int, bool)
000000000062b330 00000000000001d8 T CSoundFile::LoadMixPlugins(void const*, unsigned int)
000000000062b510 000000000000108c T CSoundFile::ReadIT(unsigned char const*, unsigned int)
000000000062c5a0 000000000000063c T CSoundFile::ReadFAR(unsigned char const*, unsigned int)
000000000062cbe0 0000000000000534 T CSoundFile::ReadDSM(unsigned char const*, unsigned int)
000000000062d120 0000000000000cd4 T CSoundFile::ReadDMF(unsigned char const*, unsigned int)
000000000062de00 00000000000001f4 t DMFNewNode(DMF_HTREE*)
000000000062e000 00000000000001d0 t DMFUnpack(unsigned char*, unsigned char*, unsigned char*, unsigned int)
000000000062e1d0 00000000000009f4 T CSoundFile::ReadDBM(unsigned char const*, unsigned int)
000000000062ebd0 000000000000090c T CSoundFile::ReadAMS2(unsigned char const*, unsigned int)
000000000062f4e0 0000000000000764 T CSoundFile::ReadAMS(unsigned char const*, unsigned int)
000000000062fc50 00000000000001c4 t AMSUnpack(char const*, unsigned int, char*, unsigned int, char)
000000000062fe20 0000000000000274 t AMF_Unpack(_MODCOMMAND*, unsigned char const*, unsigned int, unsigned int)
00000000006300a0 00000000000008c0 T CSoundFile::ReadAMF(unsigned char const*, unsigned int)
0000000000630960 00000000000005f4 T CSoundFile::Read669(unsigned char const*, unsigned int)
0000000000630f60 00000000000000fc t ConvertMT2Command(CSoundFile*, _MODCOMMAND*, _MT2COMMAND const*)
0000000000631060 0000000000000d7c T CSoundFile::ReadMT2(unsigned char const*, unsigned int)
0000000000631de0 0000000000000800 T CSoundFile::ReadPSM(unsigned char const*, unsigned int)
00000000006325e0 00000000000000f4 t abc_brokenrithm(char const*, int*, int*, int*, int)
00000000006326e0 0000000000000090 t abc_pattracktime(_ABCHANDLE*, unsigned int)
0000000000632770 00000000000000e8 t abc_globalslide(_ABCHANDLE*, unsigned int, int)
0000000000632860 000000000000006c t abc_isvalidchar(char)
00000000006328d0 0000000000000074 t abc_skip_word(char*)
0000000000632950 0000000000000170 t abc_parse_decorations(_ABCHANDLE*, _ABCTRACK*, char const*)
0000000000632ac0 00000000000001c0 t abc_MIDI_gchord(char const*, _ABCHANDLE*)
0000000000632c80 00000000000000c8 t abc_beat_vol(_ABCHANDLE*, int, int)
0000000000632d50 0000000000000078 t abc_MIDI_beatstring(_ABCHANDLE*, char const*)
0000000000632dd0 00000000000001cc t abc_substitute(_ABCHANDLE*, char*, char*)
0000000000632fa0 0000000000000070 t abc_message(char const*, char const*)
0000000000633010 00000000000002b0 t ABC_Key(char const*)
00000000006332c0 000000000000017c t abc_addchordname(char const*, int, int const*)
0000000000633440 00000000000001c8 t abc_partpat_to_orderlist(unsigned char (*) [2], char const*, _ABCHANDLE*, unsigned char**, int) [clone .constprop.0]
0000000000633610 0000000000000144 t abc_extractkeyvalue(char*, unsigned long, char*, unsigned long, char const*) [clone .constprop.0]
0000000000633760 0000000000000138 t abc_new_umacro(_ABCHANDLE*, char const*)
00000000006338a0 0000000000000750 t ABC_ReadPatterns(_MODCOMMAND**, unsigned short*, _ABCHANDLE*, int, int)
0000000000633ff0 000000000000009c t ABC_CleanupMacros(_ABCHANDLE*)
0000000000634090 0000000000000138 t abc_fgetbytes(MMFILE*, char*, unsigned int) [clone .part.0]
00000000006341d0 0000000000000308 t abc_gets(_ABCHANDLE*, MMFILE*)
00000000006344e0 00000000000000f0 t abc_MIDI_beat(_ABCHANDLE*, char const*)
00000000006345d0 0000000000000098 t abc_MIDI_getnumber(char const*)
0000000000634670 0000000000000098 t abc_MIDI_getprog(char const*)
0000000000634710 00000000000000c8 t abc_add_event(_ABCHANDLE*, _ABCTRACK*, _ABCEVENT*) [clone .isra.0]
00000000006347e0 0000000000000080 t abc_add_partbreak(_ABCHANDLE*, _ABCTRACK*, unsigned int) [clone .isra.0]
0000000000634860 0000000000000090 t abc_add_tempo_event(_ABCHANDLE*, _ABCTRACK*, unsigned int, int) [clone .isra.0]
00000000006348f0 0000000000000090 t abc_add_noteoff(_ABCHANDLE*, _ABCTRACK*, unsigned int) [clone .isra.0]
0000000000634980 00000000000001cc t abc_add_dronenote(_ABCHANDLE*, _ABCTRACK*, unsigned int, int, int) [clone .isra.0]
0000000000634b50 0000000000000084 t abc_add_setjumploop(_ABCHANDLE*, _ABCTRACK*, unsigned int, ABCEVENT_JUMPTYPE) [clone .isra.0]
0000000000634be0 00000000000000bc t abc_add_sync(_ABCHANDLE*, _ABCTRACK*, unsigned int) [clone .isra.0]
0000000000634ca0 0000000000000080 t abc_add_tocoda(_ABCHANDLE*, _ABCTRACK*, unsigned int) [clone .isra.0]
0000000000634d20 0000000000000988 t abc_transpose(char const*)
00000000006356b0 0000000000000318 t abc_locate_track(_ABCHANDLE*, char const*, int)
00000000006359d0 00000000000004e0 t abc_add_gchord(_ABCHANDLE*, unsigned int, unsigned int)
0000000000635eb0 0000000000000208 t abc_add_drum(_ABCHANDLE*, unsigned int, unsigned int)
00000000006360c0 0000000000000034 t abc_check_track(_ABCHANDLE*, _ABCTRACK*) [clone .part.0]
0000000000636100 000000000000071c t abc_add_noteon(_ABCHANDLE*, int, char const*, unsigned int, char*, int, ABCEVENT_X_EFFECT, int)
0000000000636820 00000000000001a8 t abc_getexpr(char const*, int*)
00000000006369d0 00000000000000d4 t abc_M_field(char const*, int*, int*)
0000000000636ab0 0000000000000124 t abc_notelen(char const*, int*, int*)
0000000000636be0 00000000000002ec t abc_extract_tempo(char const*, int)
0000000000636ed0 00000000000004dc t abc_set_parts(char**, char*)
00000000006373b0 00000000000009dc t abc_song_to_parts(_ABCHANDLE*, char**, unsigned char (*) [2])
0000000000637d90 0000000000001264 t abc_MIDI_command(_ABCHANDLE*, char*, char)
0000000000639000 00000000000001a8 T CSoundFile::TestABC(unsigned char const*, unsigned int)
00000000006391b0 0000000000005a6c T CSoundFile::ReadABC(unsigned char const*, unsigned int)
000000000063ec20 0000000000000070 t mid_message(char const*, char const*)
000000000063ec90 0000000000000610 t MID_ReadPatterns(_MODCOMMAND**, unsigned short*, _MIDHANDLE*, int, int)
000000000063f2a0 000000000000001c t mid_read_long(_MIDHANDLE*) [clone .isra.0]
000000000063f2c0 0000000000000084 t mid_sync_track(_MIDTRACK*, unsigned int)
000000000063f350 0000000000000114 t mid_add_event(_MIDHANDLE*, _MIDTRACK*, _MIDEVENT*) [clone .constprop.0]
000000000063f470 0000000000000258 t mid_locate_track(_MIDHANDLE*, int, int)
000000000063f6d0 000000000000005c t mid_add_noteoff(_MIDHANDLE*, _MIDTRACK*)
000000000063f730 00000000000000a0 t mid_add_wheel(_MIDHANDLE*, _MIDTRACK*, int)
000000000063f7d0 0000000000000064 T CSoundFile::TestMID(unsigned char const*, unsigned int)
000000000063f840 0000000000001db8 T CSoundFile::ReadMID(unsigned char const*, unsigned int)
0000000000641600 00000000000000c8 t pat_sawtooth(int)
00000000006416d0 00000000000000ac t pat_setpat_attr(WaveHeader*, _MODINSTRUMENT*)
0000000000641780 000000000000008c t mmreadUBYTES(unsigned char*, long, MMFILE*)
0000000000641810 00000000000000ec t pat_build_path(char*, int)
0000000000641900 0000000000000330 t pat_setpat_inst(WaveHeader*, _INSTRUMENTHEADER*, int)
0000000000641c30 0000000000000078 t pat_square(int)
0000000000641cb0 0000000000000018 t pat_sinus(int)
0000000000641cd0 0000000000000178 t pat_read_waveheader(__sFILE*, WaveHeader*, int) [clone .constprop.0]
0000000000641e50 00000000000002b4 t pat_readpat(int, char*, int)
0000000000642110 00000000000000f4 t dec_pat_Decompress8Bit(short*, int, int) [clone .isra.0]
0000000000642210 00000000000000a8 t pat_readpat_attr(int, WaveHeader*, int) [clone .constprop.0]
00000000006422c0 0000000000000294 t PATsample(CSoundFile*, _MODINSTRUMENT*, int, int)
0000000000642560 0000000000000140 t pat_get_waveheader(MMFILE*, WaveHeader*, int)
00000000006426a0 0000000000000050 t pat_resetsmp
00000000006426f0 0000000000000024 t pat_smptogm
0000000000642720 000000000000005c t pat_gmtosmp
0000000000642780 0000000000000024 t pat_smplooped
00000000006427b0 0000000000000058 t pat_gm_name
0000000000642810 0000000000000024 t pat_gm_drumnr
0000000000642840 0000000000000088 t pat_gm_drumnote
00000000006428d0 0000000000000600 t pat_init_patnames
0000000000642ed0 0000000000000080 T CSoundFile::TestPAT(unsigned char const*, unsigned int)
0000000000642f50 0000000000000008 t pat_modnote
0000000000642f60 00000000000002fc t PAT_Load_Instruments
0000000000643260 0000000000000800 T CSoundFile::ReadPAT(unsigned char const*, unsigned int)
0000000000643a60 0000000000000080 T mutexLock
0000000000643ae0 0000000000000068 T mutexUnlock
0000000000643b50 000000000000001c T mutexIsLockedByCurrentThread
0000000000643b70 000000000000004c T rmutexLock
0000000000643bc0 000000000000001c T rmutexUnlock
0000000000643be0 0000000000000018 t _appletInfiniteSleepLoop
0000000000643c00 0000000000000108 t _appletCmdGetSession
0000000000643d10 00000000000000cc t _appletCmdInU8NoOut
0000000000643de0 0000000000000104 t _appletGetLaunchReason
0000000000643ef0 00000000000000e4 t _appletSetFocusHandlingMode
0000000000643fe0 00000000000000d4 t _appletCmdInSession
00000000006440c0 00000000000000cc t _appletCmdInU32NoOut
0000000000644190 000000000000011c t _appletCreateLibraryApplet
00000000006442b0 000000000000010c t _appletCmdGetSessionInU64
00000000006443c0 0000000000000138 t _appletGetSessionProxy.constprop.0
0000000000644500 0000000000000154 t _appletOpenLibraryAppletProxy.constprop.0
0000000000644660 00000000000000d0 t _appletCmdGetHandle.constprop.0.isra.0
0000000000644730 00000000000001c4 t _appletStorageAccessorRW.isra.0
0000000000644900 00000000000000f8 t _appletStorageRW.part.0
0000000000644a00 00000000000000d4 t _appletCmdNoInOutU8.isra.0
0000000000644ae0 00000000000000d4 t _appletCmdNoInOutU32.isra.0
0000000000644bc0 00000000000000d4 t _appletCmdNoInOutU64.isra.0
0000000000644ca0 00000000000000c0 t _appletCmdNoIO.isra.0
0000000000644d60 0000000000000010 T appletGetAppletType
0000000000644d70 000000000000000c T appletGetThemeColorType
0000000000644d80 0000000000000108 T appletSetFocusHandlingMode
0000000000644e90 000000000000005c T appletSetCpuBoostMode
0000000000644ef0 000000000000002c T appletCreateManagedDisplayLayer
0000000000644f20 000000000000000c T appletGetAppletResourceUserId
0000000000644f30 00000000000000f4 t _appletGetIndirectLayerConsumerHandle
0000000000645030 0000000000000088 t _appletHolderCreateState
00000000006450c0 00000000000000c4 T appletCreateLibraryApplet
0000000000645190 00000000000000b0 T appletHolderClose
0000000000645240 0000000000000010 T appletHolderActive
0000000000645250 00000000000000b8 T appletHolderStart
0000000000645310 0000000000000164 T appletHolderJump
0000000000645480 0000000000000084 T appletHolderJoin
0000000000645510 0000000000000024 T appletHolderCheckFinished
0000000000645540 0000000000000008 T appletHolderGetExitReason
0000000000645550 0000000000000060 T appletHolderPresetLibraryAppletGpuTimeSliceZero
00000000006455b0 0000000000000028 T appletHolderPopOutData
00000000006455e0 0000000000000028 T appletHolderPopInteractiveOutData
0000000000645610 0000000000000024 T appletHolderGetLibraryAppletInfo
0000000000645640 000000000000002c T appletCreateStorage
0000000000645670 0000000000000090 T appletStorageClose
0000000000645700 000000000000004c T appletHolderPushInData
0000000000645750 000000000000004c T appletHolderPushInteractiveInData
00000000006457a0 0000000000000008 T appletStorageCloseTmem
00000000006457b0 00000000000000d8 T appletStorageGetSize
0000000000645890 0000000000000018 T appletStorageWrite
00000000006458b0 0000000000000018 T appletStorageRead
00000000006458d0 0000000000000090 T appletNotifyRunning
0000000000645960 000000000000008c T appletSetGamePlayRecordingState
00000000006459f0 0000000000000ad4 t _appletCleanup
00000000006464d0 0000000000000044 T appletExit
0000000000646520 0000000000000040 T appletGetLibraryAppletInfo
0000000000646560 0000000000000a98 T appletInitialize
0000000000647000 0000000000000024 t _appletExitProcess
0000000000647030 000000000000000c T appletGetOperationMode
0000000000647040 0000000000000074 T appletGetMessage
00000000006470c0 000000000000027c T appletProcessMessage
0000000000647340 0000000000000034 T appletMainLoop
0000000000647380 0000000000000084 t _audrenCleanup
0000000000647410 00000000000000c0 t _audrenCmdNoIO.constprop.0
00000000006474d0 00000000000004cc T audrenInitialize
00000000006479a0 0000000000000044 T audrenExit
00000000006479f0 0000000000000010 T audrenWaitFrame
0000000000647a00 0000000000000330 T audrenRequestUpdateAudioRenderer
0000000000647d30 0000000000000008 T audrenStartAudioRenderer
0000000000647d40 00000000000001c0 t _fatalCmd
0000000000647f00 000000000000000c T fatalThrowWithPolicy
0000000000647f10 0000000000000014 T fatalThrow
0000000000647f30 0000000000000108 t _hidCleanup
0000000000648040 00000000000000d8 t _hidCmdInAruidNoOut
0000000000648120 00000000000000e4 t _hidCmdInU32AruidNoOut
0000000000648210 00000000000000e4 t _hidCmdInU64AruidNoOut
0000000000648300 00000000000001a4 t _hidGetStates
00000000006484b0 00000000000000f4 t _hidCmdInAruidOutU64.constprop.0
00000000006485b0 00000000000000e8 t _hidCmdInAruidOutU32.constprop.0
00000000006486a0 00000000000000c0 t _hidCmdInU32NoOut.constprop.0
0000000000648760 0000000000000100 t _hidCmdGetSession.constprop.0
0000000000648860 0000000000000114 t _hidCreateAppletResource.constprop.0
0000000000648980 00000000000000c8 t _hidCmdGetHandle.constprop.0
0000000000648a50 00000000000000dc T hidInitialize
0000000000648b30 0000000000000044 T hidExit
0000000000648b80 000000000000000c T hidGetSharedmemAddr
0000000000648b90 0000000000000090 T hidGetNpadStyleSet
0000000000648c20 00000000000000a8 T hidGetNpadDeviceType
0000000000648cd0 0000000000000020 T hidInitializeTouchScreen
0000000000648cf0 0000000000000088 T hidGetTouchScreenStates
0000000000648d80 0000000000000020 T hidInitializeMouse
0000000000648da0 0000000000000058 T hidGetMouseStates
0000000000648e00 0000000000000020 T hidInitializeKeyboard
0000000000648e20 0000000000000058 T hidGetKeyboardStates
0000000000648e80 0000000000000080 T hidInitializeNpad
0000000000648f00 00000000000000a8 T hidGetNpadStatesFullKey
0000000000648fb0 00000000000000a8 T hidGetNpadStatesHandheld
0000000000649060 00000000000000a8 T hidGetNpadStatesJoyDual
0000000000649110 00000000000000a8 T hidGetNpadStatesJoyLeft
00000000006491c0 00000000000000a8 T hidGetNpadStatesJoyRight
0000000000649270 0000000000000158 T hidGetNpadStatesGc
00000000006493d0 00000000000000ac T hidGetNpadStatesSystemExt
0000000000649480 0000000000000008 T hidSetSupportedNpadStyleSet
0000000000649490 000000000000003c T hidGetSupportedNpadStyleSet
00000000006494d0 0000000000000100 T hidSetSupportedNpadIdType
00000000006495d0 000000000000000c T hidSetNpadJoyHoldType
00000000006495e0 0000000000000040 T hidGetNpadJoyHoldType
0000000000649620 000000000000020c T hidInitializeVibrationDevices
0000000000649830 0000000000000124 T hidSendVibrationValues
0000000000649960 00000000000000d0 t _nvSetClientPID
0000000000649a30 00000000000000c8 t _nvCleanup
0000000000649b00 00000000000000d8 t _nvCmdInitialize.constprop.0
0000000000649be0 000000000000001c W __nx_nv_create_tmem
0000000000649c00 00000000000002d8 T nvInitialize
0000000000649ee0 0000000000000044 T nvExit
0000000000649f30 00000000000000f4 T nvConvertError
000000000064a030 0000000000000118 T nvOpen
000000000064a150 00000000000002f8 T nvIoctl
000000000064a450 00000000000003cc T nvIoctl2
000000000064a820 00000000000000d8 T nvClose
000000000064a900 0000000000000110 T nvQueryEvent
000000000064aa10 0000000000000068 t _psmCleanup
000000000064aa80 0000000000000098 T psmInitialize
000000000064ab20 0000000000000044 T psmExit
000000000064ab70 00000000000000d0 t _smCmifCmdInPid
000000000064ac40 0000000000000068 t _smCleanup
000000000064acb0 0000000000000048 T smAddOverrideHandle
000000000064ad00 0000000000000054 T smGetServiceOverride
000000000064ad60 00000000000001bc T smInitialize
000000000064af20 0000000000000044 T smExit
000000000064af70 00000000000000d0 T smGetServiceOriginal
000000000064b040 0000000000000120 T smGetServiceWrapper
000000000064b160 0000000000000044 T nvAddressSpaceClose
000000000064b1b0 0000000000000088 T nvAddressSpaceCreate
000000000064b240 0000000000000044 T nvAddressSpaceMap
000000000064b290 0000000000000008 T nvAddressSpaceUnmap
000000000064b2a0 000000000000007c t _nvFenceCleanup
000000000064b320 0000000000000098 T nvFenceInit
000000000064b3c0 0000000000000044 T nvFenceExit
000000000064b410 0000000000000240 T nvFenceWait
000000000064b650 0000000000000074 T nvMultiFenceWait
000000000064b6d0 0000000000000130 T nvGpuInit
000000000064b800 000000000000006c T nvGpuExit
000000000064b870 000000000000000c T nvGpuGetCharacteristics
000000000064b880 000000000000000c T nvGpuGetZcullCtxSize
000000000064b890 0000000000000064 T nvGpuChannelClose
000000000064b900 000000000000010c T nvGpuChannelCreate
000000000064ba10 000000000000000c T nvGpuChannelZcullBind
000000000064ba20 00000000000000f8 T nvGpuChannelKickoff
000000000064bb20 00000000000000b8 T nvGpuChannelAppendEntry
000000000064bbe0 00000000000000b4 T nvMapInit
000000000064bca0 000000000000006c T nvMapExit
000000000064bd10 000000000000000c T nvMapGetFd
000000000064bd20 0000000000000080 T nvMapClose
000000000064bda0 0000000000000154 T nvMapCreate
000000000064bf00 000000000000009c T nvMapLoadRemote
000000000064bfa0 0000000000000028 T nvioctlChannel_SetNvmapFd
000000000064bfd0 00000000000000c4 T nvioctlChannel_SubmitGpfifo
000000000064c0a0 000000000000005c T nvioctlChannel_KickoffPb
000000000064c100 0000000000000058 T nvioctlChannel_AllocObjCtx
000000000064c160 0000000000000030 T nvioctlChannel_ZCullBind
000000000064c190 0000000000000030 T nvioctlChannel_SetErrorNotifier
000000000064c1c0 0000000000000028 T nvioctlChannel_SetPriority
000000000064c1f0 0000000000000058 T nvioctlChannel_AllocGpfifoEx2
000000000064c250 0000000000000028 T nvioctlNvhostAsGpu_BindChannel
000000000064c280 0000000000000054 T nvioctlNvhostAsGpu_MapBufferEx
000000000064c2e0 0000000000000028 T nvioctlNvhostAsGpu_UnmapBuffer
000000000064c310 0000000000000044 T nvioctlNvhostAsGpu_InitializeEx
000000000064c360 0000000000000028 T nvioctlNvhostCtrl_EventSignal
000000000064c390 0000000000000044 T nvioctlNvhostCtrl_EventWait
000000000064c3e0 0000000000000030 T nvioctlNvhostCtrl_EventWaitAsync
000000000064c410 0000000000000028 T nvioctlNvhostCtrl_EventRegister
000000000064c440 0000000000000028 T nvioctlNvhostCtrl_EventUnregister
000000000064c470 000000000000003c T nvioctlNvhostCtrlGpu_ZCullGetCtxSize
000000000064c4b0 0000000000000050 T nvioctlNvhostCtrlGpu_ZCullGetInfo
000000000064c500 000000000000008c T nvioctlNvhostCtrlGpu_GetCharacteristics
000000000064c590 000000000000007c T nvioctlNvhostCtrlGpu_GetTpcMasks
000000000064c610 0000000000000040 T nvioctlNvmap_Create
000000000064c650 0000000000000040 T nvioctlNvmap_FromId
000000000064c690 0000000000000038 T nvioctlNvmap_Alloc
000000000064c6d0 0000000000000034 T nvioctlNvmap_Free
000000000064c710 0000000000000048 T nvioctlNvmap_Param
000000000064c760 0000000000000040 T nvioctlNvmap_GetId
000000000064c7a0 000000000000000c T nwindowGetDefault
000000000064c7b0 00000000000000b0 T __nx_win_init
000000000064c860 0000000000000034 T __nx_win_exit
000000000064c8a0 0000000000000024 T nwindowIsValid
000000000064c8d0 000000000000007c T nwindowClose
000000000064c950 00000000000000f4 T nwindowCreate
000000000064ca50 0000000000000034 T nwindowCreateFromLayer
000000000064ca90 0000000000000090 T nwindowGetDimensions
000000000064cb20 0000000000000084 T nwindowSetDimensions
000000000064cbb0 0000000000000040 T nwindowSetSwapInterval
000000000064cbf0 000000000000018c T nwindowConfigureBuffer
000000000064cd80 00000000000001e0 T nwindowDequeueBuffer
000000000064cf60 00000000000000d4 T nwindowCancelBuffer
000000000064d040 000000000000013c T nwindowQueueBuffer
000000000064d180 00000000000000bc T nwindowReleaseBuffers
000000000064d240 0000000000000388 T audrvCreate
000000000064d5d0 0000000000000138 T audrvUpdate
000000000064d710 000000000000004c T audrvClose
000000000064d760 000000000000005c T audrvMemPoolAdd
000000000064d7c0 000000000000007c T audrvMemPoolAttach
000000000064d840 00000000000000c8 T audrvDeviceSinkAdd
000000000064d910 00000000000000b4 t _audrvVoiceQueueWaveBufs
000000000064d9d0 00000000000000e8 T audrvVoiceDrop
000000000064dac0 00000000000001bc T audrvVoiceInit
000000000064dc80 000000000000003c T audrvVoiceIsPlaying
000000000064dcc0 00000000000000a8 T audrvVoiceAddWaveBuf
000000000064dd70 00000000000000c0 T _audrvVoiceUpdate
000000000064de30 0000000000000174 t _hidLaShow.constprop.0
000000000064dfb0 0000000000000128 t _hidLaShowControllerSupportCore
000000000064e0e0 0000000000000034 T hidLaCreateControllerSupportArg
000000000064e120 00000000000000b0 T hidLaShowControllerSupportForSystem
000000000064e1d0 0000000000000040 T libappletArgsCreate
000000000064e210 0000000000000008 T libappletArgsSetPlayStartupSound
000000000064e220 0000000000000068 T libappletCreateWriteStorage
000000000064e290 0000000000000080 T libappletReadStorage
000000000064e310 0000000000000048 T libappletArgsPush
000000000064e360 0000000000000038 T libappletPushInData
000000000064e3a0 000000000000006c T libappletPopOutData
000000000064e410 0000000000000064 T libappletStart
000000000064e480 00000000000000b4 t _swkbdInitVersion
000000000064e540 00000000000000e0 t _swkbdSendRequest
000000000064e620 0000000000000104 t _swkbdInlineLaunch
000000000064e730 0000000000000408 t _swkbdGetReplies
000000000064eb40 0000000000000134 T swkbdInlineClose
000000000064ec80 0000000000000024 T swkbdInlineLaunchForLibraryApplet
000000000064ecb0 0000000000000008 T swkbdInlineSetDecidedCancelCallback
000000000064ecc0 0000000000000008 T swkbdInlineSetDecidedEnterCallback
000000000064ecd0 00000000000000ec T swkbdInlineAppearEx
000000000064edc0 0000000000000008 T swkbdInlineAppear
000000000064edd0 0000000000000018 T swkbdInlineDisappear
000000000064edf0 0000000000000030 T swkbdInlineMakeAppearArg
000000000064ee20 000000000000003c T swkbdInlineAppearArgSetOkButtonText
000000000064ee60 0000000000000060 T swkbdInlineSetInputText
000000000064eec0 0000000000000014 T swkbdInlineSetCursorPos
000000000064eee0 0000000000000024 T swkbdInlineSetUtf8Mode
000000000064ef10 0000000000000114 T swkbdInlineCreate
000000000064f030 0000000000000024 T swkbdInlineSetInputModeFadeType
000000000064f060 0000000000000030 T swkbdInlineSetFooterBgAlpha
000000000064f090 00000000000000d0 T swkbdInlineUpdate
000000000064f160 0000000000000004 W __libnx_alloc
000000000064f170 0000000000000014 W __libnx_aligned_alloc
000000000064f190 0000000000000004 W __libnx_free
000000000064f1a0 000000000000001c W diagAbortWithResult
000000000064f1c0 0000000000000208 T envSetup
000000000064f3d0 0000000000000020 T envGetMainThreadHandle
000000000064f3f0 000000000000000c T envIsNso
000000000064f400 0000000000000014 T envHasHeapOverride
000000000064f420 000000000000000c T envGetHeapOverrideAddr
000000000064f430 000000000000000c T envGetHeapOverrideSize
000000000064f440 0000000000000014 T envHasArgv
000000000064f460 000000000000000c T envGetArgv
000000000064f470 000000000000000c T envGetExitFuncPtr
000000000064f480 000000000000000c T envSetExitFuncPtr
000000000064f490 000000000000000c T envHasRandomSeed
000000000064f4a0 0000000000000010 T envGetRandomSeed
000000000064f4b0 0000000000000014 T hosversionGet
000000000064f4d0 0000000000000010 T hosversionSet
000000000064f4e0 000000000000009c T padConfigureInput
000000000064f580 0000000000000024 T padInitializeWithMask
000000000064f5b0 00000000000002a8 T padUpdate
000000000064f860 0000000000000008 t romfs_close
000000000064f870 0000000000000088 t romfs_seek
000000000064f900 000000000000001c t romfs_dirreset
000000000064f920 0000000000000100 t fillDir
000000000064fa20 00000000000002b0 t romfs_dirnext
000000000064fcd0 0000000000000118 t searchForDir
000000000064fdf0 0000000000000118 t searchForFile
000000000064ff10 0000000000000164 t _romfs_read_safe
0000000000650080 00000000000000b8 t _romfs_read
0000000000650140 0000000000000084 t romfs_read
00000000006501d0 00000000000000b4 t romfs_free
0000000000650290 00000000000001f4 t navigateToDir.constprop.0
0000000000650490 00000000000000f0 t romfs_open
0000000000650580 0000000000000190 t romfs_stat
0000000000650710 0000000000000054 t romfs_chdir
0000000000650770 0000000000000084 t romfs_diropen
0000000000650800 0000000000000008 t romfs_dirclose
0000000000650810 000000000000017c t romfsFindMount
0000000000650990 000000000000006c t romfs_fstat
0000000000650a00 00000000000001b4 t romfsMountCommon
0000000000650bc0 0000000000000068 T romfsMountFromFile
0000000000650c30 000000000000006c T romfsMountFromStorage
0000000000650ca0 0000000000000038 T romfsMountFromCurrentProcess
0000000000650ce0 00000000000001a8 T romfsMountSelf
0000000000650e90 00000000000000ac T romfsUnmount
0000000000650f40 000000000000007c t _socketGetFd
0000000000650fc0 00000000000000a0 t _socketParseBsdResult.part.0
0000000000651060 00000000000000d0 T fcntl
0000000000651130 0000000000000140 T utf16_to_utf8
0000000000651270 000000000000010c T utf8_to_utf16
000000000065137c T armDCacheFlush
00000000006513ac t armDCacheFlush_L0
00000000006513c8 T svcSetHeapSize
00000000006513dc T svcSetMemoryPermission
00000000006513e4 T svcSetMemoryAttribute
00000000006513ec T svcMapMemory
00000000006513f4 T svcUnmapMemory
00000000006513fc T svcQueryMemory
0000000000651410 T svcExitProcess
0000000000651418 T svcCreateThread
000000000065142c T svcStartThread
0000000000651434 T svcExitThread
000000000065143c T svcSleepThread
0000000000651444 T svcSetThreadPriority
000000000065144c T svcSetThreadCoreMask
0000000000651454 T svcMapSharedMemory
000000000065145c T svcUnmapSharedMemory
0000000000651464 T svcCreateTransferMemory
0000000000651478 T svcCloseHandle
0000000000651480 T svcResetSignal
0000000000651488 T svcWaitSynchronization
000000000065149c T svcArbitrateLock
00000000006514a4 T svcArbitrateUnlock
00000000006514ac T svcWaitProcessWideKeyAtomic
00000000006514b4 T svcSignalProcessWideKey
00000000006514bc T svcConnectToNamedPort
00000000006514d0 T svcSendSyncRequest
00000000006514d8 T svcBreak
00000000006514e0 T svcOutputDebugString
00000000006514e8 T svcReturnFromException
00000000006514f0 T svcGetInfo
0000000000651504 T svcUnmapTransferMemory
000000000065150c T __aarch64_read_tp
0000000000651520 000000000000000c T eventLoadRemote
0000000000651530 0000000000000038 T eventWait
0000000000651570 0000000000000050 T eventClose
00000000006515c0 0000000000000014 T shmemLoadRemote
00000000006515e0 0000000000000088 T shmemMap
0000000000651670 0000000000000034 T shmemUnmap
00000000006516b0 0000000000000044 T shmemClose
0000000000651700 00000000000000a8 T tmemCreate
00000000006517b0 0000000000000034 T tmemUnmap
00000000006517f0 0000000000000038 T tmemCloseHandle
0000000000651830 00000000000000c8 T tmemWaitForPermission
0000000000651900 0000000000000054 T tmemClose
0000000000651960 0000000000000064 t _memregionInitWithInfo
00000000006519d0 0000000000000004 W __libnx_virtmem_rng
00000000006519e0 0000000000000164 t _memregionFindRandom
0000000000651b50 0000000000000140 T virtmemSetup
0000000000651c90 000000000000000c T virtmemLock
0000000000651ca0 000000000000000c T virtmemUnlock
0000000000651cb0 0000000000000050 T virtmemFindAslr
0000000000651d00 0000000000000050 T virtmemFindStack
0000000000651d50 000000000000056c T waitObjects
00000000006522c0 0000000000000108 T waitHandles
00000000006523d0 00000000000000c0 t _apmCleanup
0000000000652490 00000000000000fc t _apmCmdGetSession.constprop.0
0000000000652590 00000000000000a0 T apmInitialize
0000000000652630 0000000000000044 T apmExit
0000000000652680 00000000000000c8 T apmSetPerformanceConfiguration
0000000000652750 000000000000017c T bsdFcntl
00000000006528d0 00000000000000b4 t _fsCleanup
0000000000652990 00000000000001ac t _fsCmdNoIO
0000000000652b40 00000000000001d4 t _fsFsCmdWithInPath
0000000000652d20 00000000000001f0 t _fsFsCmdWithTwoInPaths
0000000000652f10 000000000000026c t _fsFsOpenCommon
0000000000653180 00000000000001e8 t _fsFsCmdWithInPathAndOutU64
0000000000653370 00000000000000f4 t _fsObjectClose
0000000000653470 000000000000017c t _fsCmdGetSession.constprop.0
00000000006535f0 00000000000002f8 T fsInitialize
00000000006538f0 0000000000000044 T fsExit
0000000000653940 0000000000000008 T fsOpenSdCardFileSystem
0000000000653950 0000000000000008 T fsOpenDataStorageByCurrentProcess
0000000000653960 00000000000001e4 T fsFsCreateFile
0000000000653b50 0000000000000008 T fsFsDeleteFile
0000000000653b60 0000000000000008 T fsFsCreateDirectory
0000000000653b70 0000000000000008 T fsFsDeleteDirectory
0000000000653b80 0000000000000008 T fsFsRenameFile
0000000000653b90 0000000000000008 T fsFsRenameDirectory
0000000000653ba0 00000000000001e8 T fsFsGetEntryType
0000000000653d90 0000000000000008 T fsFsOpenFile
0000000000653da0 0000000000000008 T fsFsOpenDirectory
0000000000653db0 0000000000000008 T fsFsGetFreeSpace
0000000000653dc0 0000000000000008 T fsFsGetTotalSpace
0000000000653dd0 0000000000000228 T fsFsGetFileTimeStampRaw
0000000000654000 0000000000000004 T fsFsClose
0000000000654010 0000000000000210 T fsFileRead
0000000000654220 00000000000001f8 T fsFileWrite
0000000000654420 0000000000000008 T fsFileFlush
0000000000654430 00000000000001b8 T fsFileSetSize
0000000000654430 00000000000001b8 t fsFileSetSize.localalias
00000000006545f0 00000000000001c0 T fsFileGetSize
00000000006545f0 00000000000001c0 t fsFileGetSize.localalias
00000000006547b0 0000000000000004 T fsFileClose
00000000006547c0 0000000000000004 T fsDirClose
00000000006547d0 00000000000001f8 T fsDirRead
00000000006549d0 00000000000001ec T fsStorageRead
0000000000654bc0 0000000000000004 T fsStorageClose
0000000000654bd0 00000000000001dc t _viCleanup
0000000000654db0 0000000000000100 t _viCmdGetSessionNoParams.constprop.0
0000000000654eb0 00000000000000fc t _viCmdGetSession.constprop.0
0000000000654fb0 0000000000000284 T viInitialize
0000000000655240 0000000000000044 T viExit
0000000000655290 000000000000000c T viGetSession_IHOSBinderDriverRelay
00000000006552a0 0000000000000118 T viOpenDisplay
00000000006553c0 00000000000000f4 T viCloseDisplay
00000000006554c0 00000000000000fc T viCloseLayer
00000000006555c0 0000000000000374 T viCreateLayer
0000000000655940 00000000000000d8 T viSetLayerScalingMode
0000000000655a20 0000000000000044 T nvChannelClose
0000000000655a70 0000000000000070 T nvChannelCreate
0000000000655ae0 0000000000000008 T nvChannelSetPriority
0000000000655af0 000000000000001c T binderCreate
0000000000655b10 0000000000000368 T binderTransactParcel
0000000000655e80 00000000000000e8 T binderConvertErrorCode
0000000000655f70 0000000000000128 T binderAdjustRefcount
00000000006560a0 0000000000000098 T binderInitSession
0000000000656140 0000000000000068 T binderClose
00000000006561b0 000000000000015c T binderGetNativeHandle
0000000000656310 00000000000000d8 T bqRequestBuffer
00000000006563f0 0000000000000160 T bqDequeueBuffer
0000000000656550 00000000000000dc T bqQueueBuffer
0000000000656630 0000000000000094 T bqCancelBuffer
00000000006566d0 00000000000000e4 T bqConnect
00000000006567c0 000000000000009c T bqDisconnect
0000000000656860 000000000000017c T bqSetPreallocatedBuffer
00000000006569e0 0000000000000030 T parcelCreate
0000000000656a10 0000000000000198 T parcelTransact
0000000000656bb0 0000000000000088 T parcelWriteData
0000000000656c40 0000000000000098 T parcelReadData
0000000000656ce0 0000000000000020 T parcelWriteInt32
0000000000656d00 0000000000000020 T parcelWriteUInt32
0000000000656d20 000000000000007c T parcelWriteString16
0000000000656da0 0000000000000030 T parcelWriteInterfaceToken
0000000000656dd0 0000000000000024 T parcelReadInt32
0000000000656e00 0000000000000068 T parcelReadFlattenedObject
0000000000656e70 000000000000004c T parcelWriteFlattenedObject
0000000000656ec0 0000000000000340 W argvSetup
0000000000657200 0000000000000208 T __nx_dynamic
0000000000657410 00000000000000d4 W __libnx_initheap
00000000006574f0 00000000000000ec W __appInit
00000000006575e0 0000000000000044 W __appExit
0000000000657630 000000000000002c W __libnx_init
0000000000657660 000000000000001c W __libnx_exit
0000000000657680 000000000000001c T __syscall_exit
00000000006576a0 0000000000000030 T __syscall_getreent
00000000006576d0 0000000000000004 T __syscall_lock_acquire
00000000006576e0 0000000000000004 T __syscall_lock_release
00000000006576f0 0000000000000004 T __syscall_lock_acquire_recursive
0000000000657700 0000000000000004 T __syscall_lock_release_recursive
0000000000657710 000000000000001c T __syscall_cond_signal
0000000000657730 000000000000001c T __syscall_cond_broadcast
0000000000657750 000000000000003c T __syscall_cond_wait
0000000000657790 0000000000000068 T __syscall_cond_wait_recursive
0000000000657800 0000000000000014 T __syscall_thread_self
0000000000657820 000000000000002c T __syscall_thread_exit
0000000000657850 0000000000000058 t __thread_entry
00000000006578b0 000000000000015c T __syscall_thread_create
0000000000657a10 0000000000000058 T __syscall_thread_join
0000000000657a70 0000000000000044 T __syscall_tls_create
0000000000657ac0 0000000000000018 T __syscall_tls_set
0000000000657ae0 0000000000000004 T __syscall_tls_get
0000000000657af0 0000000000000018 T __syscall_tls_delete
0000000000657b10 0000000000000238 T __libnx_init_time
0000000000657d50 00000000000000e8 T __syscall_clock_gettime
0000000000657e40 000000000000008c T __syscall_gettod_r
0000000000657ed0 000000000000009c T newlibSetup
0000000000657f70 00000000000000c4 T nxlinkSetup
0000000000658040 000000000000002c T _convert_errno
0000000000658070 0000000000000014 t fsdev_link
0000000000658090 0000000000000014 t fsdev_dirreset
00000000006580b0 0000000000000014 t fsdev_chmod
00000000006580d0 0000000000000018 t error_cmp
00000000006580f0 0000000000000020 t fsdev_dirclose
0000000000658110 000000000000001c t fsdev_close
0000000000658130 000000000000007c t fsdev_converttimetoutc
00000000006581b0 00000000000000dc t fsdevFindDevice.part.0
0000000000658290 00000000000001d4 t fsdev_fixpath
0000000000658470 00000000000000a0 t _fsdevUnmountDeviceStruct.part.0
0000000000658510 0000000000000014 t fsdev_fchmod
0000000000658530 00000000000000fc t fsdev_diropen
0000000000658630 0000000000000100 t fsdev_statvfs
0000000000658730 000000000000007c t fsdev_fsync
00000000006587b0 00000000000000f4 t fsdev_fstat
00000000006588b0 0000000000000094 t fsdev_ftruncate
0000000000658950 00000000000001fc t fsdev_stat
0000000000658b50 000000000000014c t fsdev_rename
0000000000658ca0 0000000000000140 t fsdev_chdir
0000000000658de0 00000000000000a4 t fsdev_rmdir
0000000000658e90 00000000000000a4 t fsdev_mkdir
0000000000658f40 00000000000000a4 t fsdev_unlink
0000000000658ff0 0000000000000144 t fsdev_write_safe
0000000000659140 000000000000013c t fsdev_read_safe
0000000000659280 0000000000000100 t fsdev_read
0000000000659380 00000000000001cc t fsdev_dirnext
0000000000659550 0000000000000124 t fsdev_write
0000000000659680 00000000000000e0 t fsdev_seek
0000000000659760 0000000000000250 t fsdev_open
00000000006599b0 0000000000000228 T fsdevMountDevice
0000000000659be0 0000000000000040 T fsdevMountSdmc
0000000000659c20 00000000000000c0 T __libnx_init_cwd
0000000000659ce0 0000000000000064 T fsdevUnmountAll
0000000000659d50 0000000000000084 T fsdevTranslatePath
0000000000659de0 0000000000000064 T decode_utf16
0000000000659e50 000000000000012c T decode_utf8
0000000000659f80 0000000000000058 T encode_utf16
0000000000659fe0 00000000000000d0 T encode_utf8
000000000065a0b0 W __libnx_exception_entry
000000000065a13c t __libnx_exception_entry_start
000000000065a264 t __libnx_exception_entry_abort
000000000065a268 t __libnx_exception_entry_end
000000000065a270 T __libnx_exception_returnentry
000000000065a290 0000000000000064 T condvarWaitTimeout
000000000065a300 00000000000003c4 T randomGet
000000000065a6d0 0000000000000020 T randomGet64
000000000065a6f0 00000000000000b0 T __libnx_init_thread
000000000065a7a0 00000000000002d8 T threadCreate
000000000065aa80 00000000000000a4 T threadExit
000000000065ab30 00000000000000ac t _EntryWrap
000000000065abe0 0000000000000008 T threadStart
000000000065abf0 000000000000002c T threadWaitForExit
000000000065ac20 0000000000000098 T threadClose
000000000065acc0 0000000000000010 T threadTlsGet
000000000065acd0 0000000000000010 T threadTlsSet
000000000065ace0 00000000000000d8 T threadTlsAlloc
000000000065adc0 0000000000000048 T threadTlsFree
000000000065ae10 0000000000000178 T sessionmgrCreate
000000000065af90 0000000000000084 T sessionmgrClose
000000000065b020 00000000000000b4 T sessionmgrAttachClient
000000000065b0e0 0000000000000070 T sessionmgrDetachClient
000000000065b150 00000000000000d4 t _setsysGetFirmwareVersionImpl
000000000065b230 0000000000000068 t _setsysCleanup
000000000065b2a0 00000000000000a0 T setsysInitialize
000000000065b340 0000000000000044 T setsysExit
000000000065b390 0000000000000044 T setsysGetFirmwareVersion
000000000065b3e0 0000000000000228 t _timeCleanup
000000000065b610 0000000000000100 t _timeCmdGetSession.constprop.0
000000000065b710 00000000000000cc t _timeGetSharedMemoryNativeHandle.constprop.0
000000000065b7e0 00000000000000c4 t _timeCmdNoInOutU64.constprop.0.isra.0
000000000065b8b0 0000000000000104 t _timeReadClockFromSharedMem
000000000065b9c0 0000000000000238 T timeInitialize
000000000065bc00 0000000000000044 T timeExit
000000000065bc50 0000000000000038 T timeGetServiceSession_SystemClock
000000000065bc90 0000000000000068 T timeGetCurrentTime
000000000065bd00 0000000000000110 T timeToCalendarTimeWithMyRule
000000000065be10 0000000000000104 T timeToPosixTimeWithMyRule
000000000065bf20 0000000000000488 t ParseHeadersInternal
000000000065c3b0 0000000000000070 t WebPParseHeaders
000000000065c420 00000000000001e8 t DecodeInto
000000000065c610 00000000000000b0 T WebPDecodeRGBInto
000000000065c6c0 00000000000000b0 T WebPDecodeRGBAInto
000000000065c770 0000000000000040 T WebPGetFeaturesInternal
000000000065c7b0 00000000000001a0 t WebPIoInitFromOptions
000000000065c950 00000000000000ec t WebPRescalerInit
000000000065ca40 0000000000000060 t WebPRescalerGetScaledDimensions
000000000065caa0 0000000000000020 t WebPRescaleNeededLines
000000000065cac0 0000000000000104 t WebPRescalerImport
000000000065cbd0 000000000000006c t WebPRescalerExport
000000000065cc40 0000000000000160 t CheckDecBuffer
000000000065cda0 00000000000000c0 t WebPFlipBuffer
000000000065ce60 0000000000000250 t WebPAllocateDecBuffer
000000000065d0b0 000000000000003c T WebPInitDecBufferInternal
000000000065d0f0 000000000000004c T WebPFreeDecBuffer
000000000065d140 0000000000000090 t Dither8x8
000000000065d1d0 00000000000005b4 t ReconstructRow
000000000065d790 00000000000006f8 t FinishRow
000000000065de90 0000000000000100 t VP8InitDithering
000000000065df90 000000000000015c t VP8ProcessRow
000000000065e0f0 0000000000000248 t VP8EnterCritical
000000000065e340 0000000000000068 t VP8ExitCritical
000000000065e3b0 0000000000000024 t VP8GetThreadMethod
000000000065e3e0 00000000000003b0 t VP8InitFrame
000000000065e790 0000000000000084 t GetAlphaSourceRow
000000000065e820 00000000000000f8 t EmitAlphaRGB
000000000065e920 00000000000000f8 t EmitAlphaRGBA4444
000000000065ea20 0000000000000078 t CustomPut
000000000065eaa0 0000000000000028 t CustomTeardown
000000000065ead0 0000000000000160 t EmitYUV
000000000065ec30 00000000000001fc t EmitFancyRGB
000000000065ee30 00000000000000e8 t EmitAlphaYUV
000000000065ef20 000000000000006c t EmitSampledRGB
000000000065ef90 0000000000000594 t CustomSetup
000000000065f530 0000000000000178 t ExportAlpha
000000000065f6b0 0000000000000164 t ExportAlphaRGBA4444
000000000065f820 00000000000000b0 t EmitRescaledAlphaRGB
000000000065f8d0 00000000000001e0 t EmitRescaledRGB
000000000065fab0 0000000000000174 t EmitRescaledAlphaYUV
000000000065fc30 0000000000000170 t EmitRescaledYUV
000000000065fda0 0000000000000024 t WebPInitCustomIo
000000000065fdd0 0000000000000058 t VP8Clear.part.0
000000000065fe30 000000000000072c t GetLargeValue
0000000000660560 000000000000046c t GetCoeffsAlt
00000000006609d0 0000000000000398 t GetCoeffsFast
0000000000660d70 0000000000000038 t VP8InitIoInternal
0000000000660db0 00000000000000b0 t VP8New
0000000000660e60 000000000000002c t VP8Delete
0000000000660e90 0000000000000018 t VP8SetError
0000000000660eb0 0000000000000040 T VP8CheckSignature
0000000000660ef0 000000000000063c t VP8GetHeaders.part.0.constprop.0
0000000000661530 00000000000000bc T VP8GetInfo
00000000006615f0 0000000000000038 t VP8GetHeaders
0000000000661630 0000000000000480 t VP8DecodeMB
0000000000661ab0 0000000000000018 t VP8InitScanline
0000000000661ad0 0000000000000234 t VP8Decode
0000000000661d10 00000000000000d8 t ConvertToYUVA
0000000000661df0 00000000000000bc t ApplyInverseTransforms
0000000000661eb0 0000000000000400 t ProcessRows
00000000006622b0 000000000000014c t ExtractPalettedAlphaRows
0000000000662400 0000000000000098 t ReadImageInfo.part.0
00000000006624a0 0000000000000164 t ExtractAlphaRows
0000000000662610 00000000000000b8 t VP8LClear.part.0
00000000006626d0 0000000000000b04 t DecodeImageData
00000000006631e0 0000000000000490 t DecodeImageStream
0000000000663670 0000000000000940 t ReadHuffmanCodes
0000000000663fb0 0000000000000034 T VP8LCheckSignature
0000000000663ff0 00000000000000c8 T VP8LGetInfo
00000000006640c0 000000000000003c t VP8LNew
0000000000664100 000000000000002c t VP8LDelete
0000000000664130 00000000000001b8 t VP8LDecodeAlphaHeader
00000000006642f0 0000000000000608 t VP8LDecodeAlphaImageStream
0000000000664900 00000000000000e4 t VP8LDecodeHeader
00000000006649f0 00000000000001fc t VP8LDecodeImage
0000000000664bf0 00000000000000ac T WebPMultARGBRow_C
0000000000664ca0 000000000000006c T WebPMultRow_C
0000000000664d10 0000000000000030 t HasAlpha8b_C
0000000000664d40 0000000000000040 t HasAlpha32b_C
0000000000664d80 000000000000004c t PackRGB_C
0000000000664dd0 00000000000000b8 t ApplyAlphaMultiply_16b_C
0000000000664e90 0000000000000080 t WebPMultARGBRows
0000000000664f10 0000000000000094 t WebPMultRows
0000000000664fb0 00000000000000c8 t WebPInitAlphaProcessing
0000000000665080 000000000000000c t armCPUInfo
0000000000665090 000000000000004c t TransformUV_C
00000000006650e0 0000000000000094 t TransformDCUV_C
0000000000665180 000000000000007c t HE4_C
0000000000665200 00000000000000f4 t VR4_C
0000000000665300 00000000000000f4 t VL4_C
0000000000665400 00000000000000a4 t HU4_C
00000000006654b0 00000000000000f4 t HD4_C
00000000006655b0 000000000000005c t DitherCombine8x8_C
0000000000665610 00000000000000dc t VP8DspInit
00000000006656f0 0000000000000004 t VP8InitClipTables
0000000000665700 00000000000000a8 t GradientUnfilter_C
00000000006657b0 0000000000000088 t VP8FiltersInit
0000000000665840 0000000000000008 t Predictor0_C
0000000000665850 0000000000000004 t Predictor1_C
0000000000665860 0000000000000008 t Predictor2_C
0000000000665870 0000000000000008 t Predictor3_C
0000000000665880 0000000000000008 t Predictor4_C
0000000000665890 0000000000000030 t Predictor5_C
00000000006658c0 000000000000001c t Predictor6_C
00000000006658e0 000000000000001c t Predictor7_C
0000000000665900 000000000000001c t Predictor8_C
0000000000665920 000000000000001c t Predictor9_C
0000000000665940 0000000000000048 t Predictor10_C
0000000000665990 0000000000000098 t Predictor11_C
0000000000665a30 0000000000000098 t Predictor12_C
0000000000665ad0 00000000000000b8 t Predictor13_C
0000000000665b90 0000000000000038 t PredictorAdd0_C
0000000000665bd0 000000000000004c t PredictorAdd1_C
0000000000665c20 0000000000000050 t PredictorAdd2_C
0000000000665c70 0000000000000050 t PredictorAdd3_C
0000000000665cc0 0000000000000050 t PredictorAdd4_C
0000000000665d10 0000000000000070 t PredictorAdd6_C
0000000000665d80 0000000000000068 t PredictorAdd7_C
0000000000665df0 0000000000000068 t PredictorAdd8_C
0000000000665e60 0000000000000068 t PredictorAdd9_C
0000000000665ed0 000000000000005c t MapARGB_C
0000000000665f30 0000000000000054 t MapAlpha_C
0000000000665f90 0000000000000040 T VP8LConvertBGRAToRGBA4444_C
0000000000665fd0 0000000000000048 T VP8LConvertBGRAToRGB565_C
0000000000666020 00000000000000c0 t ColorIndexInverseTransform_C.isra.0
00000000006660e0 00000000000000a0 t PredictorAdd10_C
0000000000666180 0000000000000088 t PredictorAdd5_C
0000000000666210 0000000000000100 t PredictorAdd11_C
0000000000666310 00000000000000f0 t PredictorAdd12_C
0000000000666400 000000000000010c t PredictorAdd13_C
0000000000666510 0000000000000044 t VP8LAddGreenToBlueAndRed_C
0000000000666560 000000000000006c t VP8LTransformColorInverse_C
00000000006665d0 00000000000000c0 t VP8LColorIndexInverseTransformAlpha
0000000000666690 00000000000004ec t VP8LInverseTransform
0000000000666b80 0000000000000038 t VP8LConvertBGRAToRGB_C
0000000000666bc0 0000000000000040 t VP8LConvertBGRAToRGBA_C
0000000000666c00 0000000000000038 t VP8LConvertBGRAToBGR_C
0000000000666c40 0000000000000240 t VP8LConvertFromBGRA
0000000000666e80 0000000000000238 t VP8LDspInit
00000000006670c0 00000000000000c0 T WebPRescalerImportRowExpand_C
0000000000667180 00000000000000cc T WebPRescalerImportRowShrink_C
0000000000667250 0000000000000028 t WebPRescalerImportRow
0000000000667280 00000000000000d8 t WebPRescalerExportRow
0000000000667360 0000000000000088 t WebPRescalerDspInit
00000000006673f0 000000000000013c T WebPYuv444ToRgb565_C
0000000000667530 00000000000000d8 T WebPYuv444ToBgr_C
0000000000667610 00000000000000d8 T WebPYuv444ToRgb_C
00000000006676f0 00000000000000ec T WebPYuv444ToBgra_C
00000000006677e0 00000000000000ec T WebPYuv444ToRgba_C
00000000006678d0 00000000000000ec T WebPYuv444ToArgb_C
00000000006679c0 0000000000000150 T WebPYuv444ToRgba4444_C
0000000000667b10 00000000000000b4 t WebPInitYUV444Converters
0000000000667bd0 0000000000000068 t WebPInitUpsamplers
0000000000667c40 0000000000000050 t ConvertARGBToY_C
0000000000667c90 0000000000000054 t ConvertRGB24ToY_C
0000000000667cf0 0000000000000050 t ConvertBGR24ToY_C
0000000000667d40 00000000000000a8 T WebPConvertRGBA32ToUV_C
0000000000667df0 0000000000000198 t WebPConvertARGBToUV_C
0000000000667f90 000000000000030c t YuvToRgb565Row
00000000006682a0 0000000000000300 t YuvToRgba4444Row
00000000006685a0 0000000000000298 t YuvToBgraRow
0000000000668840 000000000000029c t YuvToArgbRow
0000000000668ae0 00000000000002a0 t YuvToBgrRow
0000000000668d80 00000000000002a0 t YuvToRgbRow
0000000000669020 000000000000029c t YuvToRgbaRow
00000000006692c0 00000000000000dc t WebPSamplerProcessPlane
00000000006693a0 00000000000000b4 t WebPInitSamplers
0000000000669460 00000000000000bc t WebPInitConvertARGBToYUV
0000000000669520 0000000000000074 t ExtractGreen_NEON
00000000006695a0 00000000000000d8 t ExtractAlpha_NEON
0000000000669680 00000000000000e8 t DispatchAlpha_NEON
0000000000669770 00000000000000b0 t DispatchAlphaToGreen_NEON
0000000000669820 000000000000019c t ApplyAlphaMultiply_NEON
00000000006699c0 0000000000000068 t WebPInitAlphaProcessingNEON
0000000000669a30 0000000000000050 t DC4_NEON
0000000000669a80 0000000000000018 t DC8uvNoTopLeft_NEON
0000000000669aa0 0000000000000020 t VE8uv_NEON
0000000000669ac0 0000000000000020 t HE8uv_NEON
0000000000669ae0 0000000000000020 t VE16_NEON
0000000000669b00 0000000000000020 t HE16_NEON
0000000000669b20 0000000000000018 t DC16NoTopLeft_NEON
0000000000669b40 000000000000009c t TM16_NEON
0000000000669be0 0000000000000028 t VE4_NEON
0000000000669c10 0000000000000040 t LD4_NEON
0000000000669c50 0000000000000070 t RD4_NEON
0000000000669cc0 00000000000000f8 t Load4x8_NEON
0000000000669dc0 00000000000000ac t DoFilter4_NEON
0000000000669e70 000000000000010c t DoFilter6_NEON
0000000000669f80 00000000000001ac t VFilter8_NEON
000000000066a130 0000000000000134 t TransformWHT_NEON
000000000066a270 0000000000000098 t SimpleVFilter16_NEON
000000000066a310 000000000000002c t SimpleVFilter16i_NEON
000000000066a340 0000000000000078 t TM8uv_NEON
000000000066a3c0 0000000000000064 t TM4_NEON
000000000066a430 0000000000000078 t DC8uv_NEON
000000000066a4b0 00000000000000e0 t DC16TopLeft_NEON
000000000066a590 0000000000000038 t DC8uvNoLeft_NEON
000000000066a5d0 0000000000000040 t DC16NoLeft_NEON
000000000066a610 0000000000000060 t DC8uvNoTop_NEON
000000000066a670 000000000000005c t TransformDC_NEON
000000000066a6d0 0000000000000144 t Store2x16_NEON
000000000066a820 00000000000000e4 t TransformAC3_NEON
000000000066a910 000000000000011c t VFilter16i_NEON
000000000066aa30 000000000000028c t TransformTwo_NEON
000000000066acc0 0000000000000490 t HFilter16i_NEON
000000000066b150 0000000000000550 t HFilter8_NEON
000000000066b6a0 00000000000000b8 t DC16NoTop_NEON
000000000066b760 0000000000000100 t VFilter16_NEON
000000000066b860 000000000000021c t SimpleHFilter16_NEON
000000000066ba80 000000000000004c t SimpleHFilter16i_NEON
000000000066bad0 0000000000000410 t HFilter8i_NEON
000000000066bee0 0000000000000180 t VFilter8i_NEON
000000000066c060 00000000000001a4 t HFilter16_NEON
000000000066c210 000000000000025c t VP8DspInitNEON
000000000066c470 0000000000000080 t PredictLine_NEON
000000000066c4f0 00000000000000d0 t HorizontalUnfilter_NEON
000000000066c5c0 0000000000000094 t VerticalUnfilter_NEON
000000000066c660 000000000000016c t GradientFilter_NEON
000000000066c7d0 0000000000000074 t VerticalFilter_NEON
000000000066c850 0000000000000098 t HorizontalFilter_NEON
000000000066c8f0 0000000000000048 t VP8FiltersInitNEON
000000000066c940 0000000000000108 t TransformColorInverse_NEON
000000000066ca50 0000000000000068 t AddGreenToBlueAndRed_NEON
000000000066cac0 000000000000005c t ConvertBGRAToRGB_NEON
000000000066cb20 000000000000005c t ConvertBGRAToBGR_NEON
000000000066cb80 0000000000000050 t ConvertBGRAToRGBA_NEON
000000000066cbd0 000000000000006c t PredictorAdd0_NEON
000000000066cc40 0000000000000070 t PredictorAdd2_NEON
000000000066ccb0 0000000000000070 t PredictorAdd3_NEON
000000000066cd20 0000000000000070 t PredictorAdd4_NEON
000000000066cd90 0000000000000078 t PredictorAdd8_NEON
000000000066ce10 0000000000000078 t PredictorAdd9_NEON
000000000066ce90 0000000000000084 t PredictorAdd1_NEON
000000000066cf20 00000000000000d4 t PredictorAdd5_NEON
000000000066d000 00000000000000c0 t PredictorAdd6_NEON
000000000066d0c0 00000000000000c0 t PredictorAdd7_NEON
000000000066d180 00000000000000e0 t PredictorAdd10_NEON
000000000066d260 0000000000000148 t PredictorAdd13_NEON
000000000066d3b0 00000000000000f0 t PredictorAdd12_NEON
000000000066d4a0 0000000000000118 t PredictorAdd11_NEON
000000000066d5c0 0000000000000020 t Predictor5_NEON
000000000066d5e0 0000000000000018 t Predictor6_NEON
000000000066d600 0000000000000014 t Predictor7_NEON
000000000066d620 0000000000000034 t Predictor13_NEON
000000000066d660 0000000000000148 t VP8LDspInitNEON
000000000066d7b0 000000000000019c t RescalerExportRowShrink_NEON
000000000066d950 00000000000001c8 t RescalerExportRowExpand_NEON
000000000066db20 000000000000002c t WebPRescalerDspInitNEON
000000000066db50 0000000000000064 t Upsample16Pixels_NEON
000000000066dbc0 000000000000087c t UpsampleRgba4444LinePair_NEON
000000000066e440 0000000000000878 t UpsampleRgb565LinePair_NEON
000000000066ecc0 000000000000078c t UpsampleBgraLinePair_NEON
000000000066f450 000000000000075c t UpsampleBgrLinePair_NEON
000000000066fbb0 00000000000007a8 t UpsampleArgbLinePair_NEON
0000000000670360 0000000000000754 t UpsampleRgbLinePair_NEON
0000000000670ac0 0000000000000784 t UpsampleRgbaLinePair_NEON
0000000000671250 000000000000005c t WebPInitUpsamplersNEON
00000000006712b0 0000000000000158 t ConvertARGBToUV_NEON
0000000000671410 000000000000005c t ConvertRGBToY_NEON
0000000000671470 00000000000000bc t ConvertARGBToY_NEON
0000000000671530 00000000000000c4 t ConvertRGB24ToY_NEON
0000000000671600 00000000000000c0 t ConvertBGR24ToY_NEON
00000000006716c0 00000000000000a8 t SharpYUVUpdateRGB_NEON
0000000000671770 0000000000000184 t SharpYUVFilterRow_NEON
0000000000671900 00000000000000fc t SharpYUVUpdateY_NEON
0000000000671a00 0000000000000198 t ConvertRGBA32ToUV_NEON
0000000000671ba0 0000000000000068 t WebPInitConvertARGBToYUVNEON
0000000000671c10 0000000000000040 t WebPInitSharpYUVNEON
0000000000671c50 0000000000000074 t ShiftBytes
0000000000671cd0 0000000000000088 t VP8InitBitReader
0000000000671d60 0000000000000068 t VP8LoadFinalBytes
0000000000671dd0 00000000000000dc t VP8GetValue
0000000000671eb0 0000000000000030 t VP8GetSignedValue
0000000000671ee0 0000000000000050 t VP8LInitBitReader
0000000000671f30 0000000000000048 t VP8LDoFillBitWindow
0000000000671f80 0000000000000064 t VP8LReadBits
0000000000671ff0 0000000000000068 t VP8LColorCacheInit
0000000000672060 0000000000000030 t VP8LColorCacheClear
0000000000672090 000000000000001c t VP8LColorCacheCopy
00000000006720b0 0000000000000444 t BuildHuffmanTable
0000000000672500 000000000000000c t VP8LHtreeGroupsNew
0000000000672510 000000000000000c t VP8LHtreeGroupsFree
0000000000672520 00000000000000c4 t VP8LBuildHuffmanTable
00000000006725f0 000000000000007c t VP8InitRandom
0000000000672670 0000000000000044 t Execute
00000000006726c0 0000000000000010 t Init
00000000006726d0 0000000000000074 t Sync
0000000000672750 000000000000017c t Reset
00000000006728d0 0000000000000080 t Launch
0000000000672950 0000000000000098 t End
00000000006729f0 000000000000000c T WebPGetWorkerInterface
0000000000672a00 00000000000000bc t ThreadLoop
0000000000672ac0 0000000000000024 T WebPSafeMalloc
0000000000672af0 0000000000000020 T WebPSafeCalloc
0000000000672b10 0000000000000004 T WebPSafeFree
0000000000672b20 000000000000004c t WebPDeallocateAlphaMemory
0000000000672b70 00000000000003f8 t VP8DecompressAlphaRows
0000000000672f70 0000000000000278 t VP8ParseQuant
00000000006731f0 0000000000000010 t VP8ResetProba
0000000000673200 0000000000000ef8 t VP8ParseIntraModeRow
0000000000674100 0000000000000260 t VP8ParseProba
0000000000674360 00000000000005c8 t WebPDequantizeLevels
0000000000674930 0000000000000010 t default_bzfree
0000000000674940 000000000000000c t default_bzalloc
0000000000674950 00000000000000f0 T BZ2_bzDecompressInit
0000000000674a40 0000000000000038 T BZ2_indexIntoF
0000000000674a80 0000000000000e6c T BZ2_bzDecompress
00000000006758f0 0000000000000088 T BZ2_bzDecompressEnd
0000000000675980 000000000000000c T BZ2_bzlibVersion
0000000000675990 0000000000000064 T BZ2_bz__AssertH__fail
0000000000675a00 0000000000002a3c T BZ2_decompress
0000000000678440 0000000000000158 T BZ2_hbCreateDecodeTables
00000000006785a0 0000000000000028 t hb_buffer_t::assert_unicode() [clone .part.0]
00000000006785d0 0000000000000054 T hb_segment_properties_equal
0000000000678630 000000000000005c T hb_segment_properties_overlay
0000000000678690 000000000000017c t hb_buffer_t::enlarge(unsigned int)
0000000000678810 00000000000000cc t hb_buffer_t::make_room_for(unsigned int, unsigned int)
00000000006788e0 00000000000000f4 t hb_buffer_t::shift_forward(unsigned int)
00000000006789e0 0000000000000034 t hb_buffer_t::clear()
0000000000678a20 000000000000004c t hb_buffer_t::enter()
0000000000678a70 0000000000000014 t hb_buffer_t::leave()
0000000000678a90 0000000000000080 t hb_buffer_t::add(unsigned int, unsigned int)
0000000000678b10 000000000000001c t hb_buffer_t::clear_output()
0000000000678b30 0000000000000038 t hb_buffer_t::clear_positions()
0000000000678b70 000000000000013c t hb_buffer_t::sync()
0000000000678cb0 0000000000000080 t hb_buffer_t::sync_so_far()
0000000000678d30 0000000000000194 t hb_buffer_t::move_to(unsigned int)
0000000000678ed0 0000000000000060 t hb_buffer_t::set_masks(unsigned int, unsigned int, unsigned int, unsigned int)
0000000000678f30 00000000000002a0 t hb_buffer_t::merge_clusters_impl(unsigned int, unsigned int)
00000000006791d0 00000000000001b4 t hb_buffer_t::merge_out_clusters(unsigned int, unsigned int)
0000000000679390 00000000000000e0 t hb_buffer_t::delete_glyph()
0000000000679470 00000000000001bc t hb_buffer_t::delete_glyphs_inplace(bool (*)(hb_glyph_info_t const*))
0000000000679630 000000000000000c T hb_buffer_get_empty
0000000000679640 0000000000000088 T hb_buffer_create
00000000006796d0 0000000000000050 T hb_buffer_create_similar
0000000000679720 0000000000000198 T hb_buffer_destroy
00000000006798c0 0000000000000014 T hb_buffer_set_direction
00000000006798e0 0000000000000008 T hb_buffer_get_direction
00000000006798f0 0000000000000014 T hb_buffer_set_script
0000000000679910 000000000000001c T hb_buffer_set_segment_properties
0000000000679930 0000000000000010 T hb_buffer_get_segment_properties
0000000000679940 0000000000000014 T hb_buffer_set_flags
0000000000679960 0000000000000008 T hb_buffer_get_flags
0000000000679970 0000000000000014 T hb_buffer_clear_contents
0000000000679990 00000000000000e0 T hb_buffer_set_length
0000000000679a70 0000000000000014 T hb_buffer_get_glyph_infos
0000000000679a90 0000000000000074 T hb_buffer_get_glyph_positions
0000000000679b10 00000000000000f0 T hb_buffer_reverse
0000000000679c00 0000000000000600 T hb_buffer_add_utf8
000000000067a200 000000000000038c T hb_buffer_append
000000000067a590 000000000000014c t hb_buffer_t::sort(unsigned int, unsigned int, int (*)(hb_glyph_info_t const*, hb_glyph_info_t const*))
000000000067a6e0 00000000000001ec T hb_buffer_diff
000000000067a8d0 00000000000000c4 t hb_buffer_t::message_impl(hb_font_t*, char const*, std::__va_list)
000000000067a9a0 0000000000000160 t lang_find_or_insert(char const*)
000000000067ab00 00000000000000d4 t _hb_options_init()
000000000067abe0 00000000000000a0 T hb_tag_from_string
000000000067ac80 0000000000000080 T hb_language_from_string
000000000067ad00 0000000000000004 T hb_language_to_string
000000000067ad10 00000000000000ac T hb_language_matches
000000000067adc0 0000000000000344 T hb_script_get_horizontal_direction
000000000067b110 000000000000000c t hb_font_get_nominal_glyph_nil(hb_font_t*, void*, unsigned int, unsigned int*, void*)
000000000067b120 000000000000000c t hb_font_get_variation_glyph_nil(hb_font_t*, void*, unsigned int, unsigned int, unsigned int*, void*)
000000000067b130 0000000000000008 t hb_font_get_glyph_h_advance_nil(hb_font_t*, void*, unsigned int, void*)
000000000067b140 0000000000000008 t hb_font_get_glyph_v_advance_nil(hb_font_t*, void*, unsigned int, void*)
000000000067b150 0000000000000010 t hb_font_get_glyph_h_origin_nil(hb_font_t*, void*, unsigned int, int*, int*, void*)
000000000067b160 0000000000000010 t hb_font_get_glyph_v_origin_nil(hb_font_t*, void*, unsigned int, int*, int*, void*)
000000000067b170 0000000000000008 t hb_font_get_glyph_h_kerning_nil(hb_font_t*, void*, unsigned int, unsigned int, void*)
000000000067b180 0000000000000010 t hb_font_get_glyph_contour_point_nil(hb_font_t*, void*, unsigned int, unsigned int, int*, int*, void*)
000000000067b190 0000000000000010 t hb_font_get_glyph_name_nil(hb_font_t*, void*, unsigned int, char*, unsigned int, void*)
000000000067b1a0 000000000000000c t hb_font_get_glyph_from_name_nil(hb_font_t*, void*, char const*, int, unsigned int*, void*)
000000000067b1b0 0000000000000004 t hb_font_draw_glyph_nil(hb_font_t*, void*, unsigned int, hb_draw_funcs_t*, void*, void*)
000000000067b1c0 0000000000000004 t hb_font_paint_glyph_nil(hb_font_t*, void*, unsigned int, hb_paint_funcs_t*, void*, unsigned int, unsigned int, void*)
000000000067b1d0 0000000000000030 t hb_draw_move_to_default(hb_draw_funcs_t*, void*, hb_draw_state_t*, float, float, void*)
000000000067b200 0000000000000044 t hb_draw_line_to_default(hb_draw_funcs_t*, void*, hb_draw_state_t*, float, float, void*)
000000000067b250 0000000000000050 t hb_draw_quadratic_to_default(hb_draw_funcs_t*, void*, hb_draw_state_t*, float, float, float, float, void*)
000000000067b2a0 000000000000005c t hb_draw_cubic_to_default(hb_draw_funcs_t*, void*, hb_draw_state_t*, float, float, float, float, float, float, void*)
000000000067b300 0000000000000018 t hb_draw_close_path_default(hb_draw_funcs_t*, void*, hb_draw_state_t*, void*)
000000000067b320 00000000000000a0 t hb_font_draw_glyph_default(hb_font_t*, void*, unsigned int, hb_draw_funcs_t*, void*, void*)
000000000067b3c0 0000000000000110 t hb_font_paint_glyph_default(hb_font_t*, void*, unsigned int, hb_paint_funcs_t*, void*, unsigned int, unsigned int, void*)
000000000067b4d0 000000000000000c t hb_font_get_glyph_extents_nil(hb_font_t*, void*, unsigned int, hb_glyph_extents_t*, void*)
000000000067b4e0 0000000000000014 t hb_font_get_font_h_extents_nil(hb_font_t*, void*, hb_font_extents_t*, void*)
000000000067b500 000000000000008c t _hb_font_funcs_set_middle(hb_font_funcs_t*, void*, void (*)(void*))
000000000067b590 00000000000000fc t hb_font_get_glyph_extents_default(hb_font_t*, void*, unsigned int, hb_glyph_extents_t*, void*)
000000000067b690 0000000000000008 t hb_font_get_glyph_v_kerning_nil(hb_font_t*, void*, unsigned int, unsigned int, void*)
000000000067b6a0 0000000000000014 t hb_font_get_font_v_extents_nil(hb_font_t*, void*, hb_font_extents_t*, void*)
000000000067b6c0 0000000000000024 t hb_font_get_variation_glyph_default(hb_font_t*, void*, unsigned int, unsigned int, unsigned int*, void*)
000000000067b6f0 00000000000000f8 t hb_font_get_nominal_glyphs_default(hb_font_t*, void*, unsigned int, unsigned int const*, unsigned int, unsigned int*, unsigned int, void*)
000000000067b7f0 0000000000000060 t hb_font_get_glyph_h_kerning_default(hb_font_t*, void*, unsigned int, unsigned int, void*)
000000000067b850 0000000000000060 t hb_font_get_glyph_v_kerning_default(hb_font_t*, void*, unsigned int, unsigned int, void*)
000000000067b8b0 0000000000000154 t hb_font_get_glyph_h_advances_default(hb_font_t*, void*, unsigned int, unsigned int const*, unsigned int, int*, unsigned int, void*)
000000000067ba10 0000000000000028 t hb_font_get_glyph_name_default(hb_font_t*, void*, unsigned int, char*, unsigned int, void*)
000000000067ba40 00000000000000fc t void hb_object_fini<hb_font_funcs_t>(hb_font_funcs_t*)
000000000067ba40 00000000000000fc t void hb_object_fini<hb_font_t>(hb_font_t*)
000000000067bb40 0000000000000058 t hb_font_get_glyph_from_name_default(hb_font_t*, void*, char const*, int, unsigned int*, void*)
000000000067bba0 0000000000000098 t hb_font_get_font_h_extents_default(hb_font_t*, void*, hb_font_extents_t*, void*)
000000000067bc40 0000000000000098 t hb_font_get_font_v_extents_default(hb_font_t*, void*, hb_font_extents_t*, void*)
000000000067bce0 00000000000000ac t hb_font_get_glyph_v_advance_default(hb_font_t*, void*, unsigned int, void*)
000000000067bd90 0000000000000154 t hb_font_get_glyph_v_advances_default(hb_font_t*, void*, unsigned int, unsigned int const*, unsigned int, int*, unsigned int, void*)
000000000067bef0 00000000000000ac t hb_font_get_glyph_h_advance_default(hb_font_t*, void*, unsigned int, void*)
000000000067bfa0 0000000000000080 t hb_font_get_nominal_glyph_default(hb_font_t*, void*, unsigned int, unsigned int*, void*)
000000000067c020 00000000000000d0 t hb_font_get_glyph_h_origin_default(hb_font_t*, void*, unsigned int, int*, int*, void*)
000000000067c0f0 00000000000000d0 t hb_font_get_glyph_v_origin_default(hb_font_t*, void*, unsigned int, int*, int*, void*)
000000000067c1c0 00000000000000d0 t hb_font_get_glyph_contour_point_default(hb_font_t*, void*, unsigned int, unsigned int, int*, int*, void*)
000000000067c290 0000000000000104 t hb_font_t::mults_changed()
000000000067c3a0 00000000000002d0 t OT::ItemVariationStore::sanitize(hb_sanitize_context_t*) const
000000000067c670 00000000000001d0 t OT::avarV2Tail::sanitize(hb_sanitize_context_t*, void const*) const
000000000067c840 00000000000001ac t OT::SegmentMaps::map(int, unsigned int, unsigned int) const
000000000067c9f0 0000000000000148 t OT::fvar::sanitize(hb_sanitize_context_t*) const
000000000067cb40 000000000000000c T hb_font_funcs_get_empty
000000000067cb50 0000000000000088 T hb_font_funcs_create
000000000067cbe0 0000000000000058 T hb_font_funcs_reference
000000000067cc40 00000000000002ac T hb_font_funcs_destroy
000000000067cef0 0000000000000018 T hb_font_funcs_make_immutable
000000000067cf10 00000000000000d0 T hb_font_funcs_set_font_h_extents_func
000000000067cfe0 00000000000000d0 T hb_font_funcs_set_font_v_extents_func
000000000067d0b0 00000000000000d0 T hb_font_funcs_set_nominal_glyph_func
000000000067d180 00000000000000d0 T hb_font_funcs_set_nominal_glyphs_func
000000000067d250 00000000000000d0 T hb_font_funcs_set_variation_glyph_func
000000000067d320 00000000000000d0 T hb_font_funcs_set_glyph_v_advance_func
000000000067d3f0 00000000000000d0 T hb_font_funcs_set_glyph_h_advances_func
000000000067d4c0 00000000000000d0 T hb_font_funcs_set_glyph_v_advances_func
000000000067d590 00000000000000d0 T hb_font_funcs_set_glyph_v_origin_func
000000000067d660 00000000000000d0 T hb_font_funcs_set_glyph_h_kerning_func
000000000067d730 00000000000000d0 T hb_font_funcs_set_glyph_extents_func
000000000067d800 00000000000000d0 T hb_font_funcs_set_glyph_contour_point_func
000000000067d8d0 00000000000000d0 T hb_font_funcs_set_glyph_name_func
000000000067d9a0 00000000000000d0 T hb_font_funcs_set_glyph_from_name_func
000000000067da70 00000000000000d0 T hb_font_funcs_set_draw_glyph_func
000000000067db40 00000000000000d0 T hb_font_funcs_set_paint_glyph_func
000000000067dc10 0000000000000074 t hb_font_t::has_func(unsigned int)
000000000067dc90 000000000000004c T hb_font_get_glyph
000000000067dce0 0000000000000028 T hb_font_get_nominal_glyph
000000000067dd10 0000000000000020 T hb_font_get_glyph_h_advance
000000000067dd30 0000000000000028 T hb_font_get_glyph_extents
000000000067dd60 000000000000002c T hb_font_draw_glyph
000000000067dd90 000000000000000c T hb_font_get_empty
000000000067dda0 00000000000000d8 t _hb_font_create(hb_face_t*)
000000000067de80 00000000000000e4 T hb_font_destroy
000000000067df70 0000000000000008 T hb_font_get_face
000000000067df80 000000000000009c T hb_font_set_funcs
000000000067e020 000000000000003c T hb_font_set_scale
000000000067e060 00000000000001ec t hb_table_lazy_loader_t<OT::fvar, 18u, true>::create(hb_face_t*)
000000000067e250 000000000000039c t hb_table_lazy_loader_t<OT::avar, 19u, true>::create(hb_face_t*)
000000000067e5f0 000000000000040c T hb_font_set_var_coords_normalized
000000000067ea00 00000000000002a4 T hb_font_set_variations
000000000067ecb0 000000000000003c T hb_font_set_var_named_instance
000000000067ecf0 0000000000000054 T hb_font_create
000000000067ed50 0000000000000350 t hb_parse_double(char const**, char const*, double*, bool)
000000000067f0a0 0000000000000018 t int _hb_cmp_operator<unsigned short, unsigned short>(void const*, void const*)
000000000067f0c0 0000000000000008 W OT::ColorLine<OT::NoVariable>::static_get_extend(hb_color_line_t*, void*, void*)
000000000067f0d0 0000000000000008 W OT::ColorLine<OT::Variable>::static_get_extend(hb_color_line_t*, void*, void*)
000000000067f0e0 000000000000002c t _hb_ot_font_destroy(void*)
000000000067f110 0000000000000040 W OT::cff1::accelerator_t::gname_t::cmp(void const*, void const*)
000000000067f150 0000000000000070 t hb_ot_get_font_v_extents(hb_font_t*, void*, hb_font_extents_t*, void*)
000000000067f1c0 0000000000000084 t hb_ot_get_font_h_extents(hb_font_t*, void*, hb_font_extents_t*, void*)
000000000067f250 0000000000000030 t int _hb_cmp_method<unsigned int, OT::CmapSubtableLongGroup const>(void const*, void const*)
000000000067f280 0000000000000028 t OT::CFFIndex<OT::IntType<unsigned int, 4u> >::offset_at(unsigned int) const [clone .part.0]
000000000067f2b0 0000000000000028 t OT::CFFIndex<OT::IntType<unsigned short, 2u> >::offset_at(unsigned int) const [clone .part.0]
000000000067f2e0 0000000000000028 t hb_vector_t<CFF::cff2_font_dict_values_t, false>::shrink_vector(unsigned int) [clone .part.0]
000000000067f310 0000000000000028 t hb_vector_t<CFF::cff2_private_dict_values_base_t<CFF::dict_val_t>, false>::shrink_vector(unsigned int) [clone .part.0]
000000000067f340 0000000000000180 t OT::glyf_impl::CompositeGlyphRecord::get_transformation(float (&) [4], contour_point_t&) const [clone .isra.0]
000000000067f4c0 00000000000000b4 W bool OT::cmap::accelerator_t::get_glyph_from<OT::CmapSubtableFormat12>(void const*, unsigned int, unsigned int*)
000000000067f580 0000000000000408 t void sort_r_simple<>(void*, unsigned long, unsigned long, int (*)(void const*, void const*)) [clone .constprop.0]
000000000067f990 0000000000001034 t void sort_r_simple<void*>(void*, unsigned long, unsigned long, int (*)(void const*, void const*, void*), void*) [clone .constprop.0]
00000000006809d0 0000000000000014 t hb_draw_funcs_t::emit_close_path(void*, hb_draw_state_t&)
00000000006809f0 0000000000000070 t hb_draw_funcs_t::start_path(void*, hb_draw_state_t&)
0000000000680a60 0000000000000154 t OT::VarRegionList::evaluate(unsigned int, int const*, unsigned int, float*) const
0000000000680bc0 0000000000000218 t OT::VarData::get_delta(unsigned int, int const*, unsigned int, OT::VarRegionList const&, float*) const
0000000000680de0 0000000000000104 t OT::DeltaSetIndexMap::sanitize(hb_sanitize_context_t*) const
0000000000680ef0 0000000000000178 t OT::ItemVarStoreInstancer::operator()(unsigned int, unsigned short) const
0000000000681070 00000000000001ec W OT::ColorLine<OT::Variable>::static_get_color_stops(hb_color_line_t*, void*, unsigned int, unsigned int*, hb_color_stop_t*, void*)
0000000000681260 00000000000001e0 W OT::ColorLine<OT::NoVariable>::static_get_color_stops(hb_color_line_t*, void*, unsigned int, unsigned int*, hb_color_stop_t*, void*)
0000000000681440 00000000000001ec t OT::TupleVariationData::decompile_points(OT::IntType<unsigned char, 1u> const*&, hb_vector_t<unsigned int, false>&, OT::IntType<unsigned char, 1u> const*)
0000000000681630 00000000000018e4 t OT::gvar::accelerator_t::apply_deltas_to_points(unsigned int, hb_array_t<int const>, hb_array_t<contour_point_t>, bool) const [clone .isra.0]
0000000000682f20 00000000000000f4 t OT::CmapSubtableFormat4::accelerator_t::get_glyph(unsigned int, unsigned int*) const
0000000000683020 0000000000000004 W OT::CmapSubtableFormat4::accelerator_t::get_glyph_func(void const*, unsigned int, unsigned int*)
0000000000683030 0000000000000144 t OT::VariationSelectorRecord::get_glyph(unsigned int, unsigned int*, void const*) const
0000000000683180 0000000000000190 t OT::VariationSelectorRecord::sanitize(hb_sanitize_context_t*, void const*) const
0000000000683310 0000000000000298 t OT::CmapSubtable::get_glyph(unsigned int, unsigned int*) const
00000000006835b0 0000000000000014 W bool OT::cmap::accelerator_t::get_glyph_from_ascii<OT::CmapSubtable>(void const*, unsigned int, unsigned int*)
00000000006835d0 0000000000000004 W bool OT::cmap::accelerator_t::get_glyph_from<OT::CmapSubtable>(void const*, unsigned int, unsigned int*)
00000000006835e0 00000000000000c8 t bool OT::cmap::accelerator_t::get_glyph_from_symbol<OT::CmapSubtable, &(_hb_arabic_pua_trad_map(unsigned int))>(void const*, unsigned int, unsigned int*)
00000000006836b0 00000000000000c0 t bool OT::cmap::accelerator_t::get_glyph_from_symbol<OT::CmapSubtable, &(_hb_arabic_pua_simp_map(unsigned int))>(void const*, unsigned int, unsigned int*)
0000000000683770 0000000000000058 t bool OT::cmap::accelerator_t::get_glyph_from_symbol<OT::CmapSubtable, &OT::_hb_symbol_pua_map>(void const*, unsigned int, unsigned int*)
00000000006837d0 00000000000000d8 W bool OT::cmap::accelerator_t::get_glyph_from_macroman<OT::CmapSubtable>(void const*, unsigned int, unsigned int*)
00000000006838b0 000000000000034c t OT::CmapSubtable::sanitize(hb_sanitize_context_t*) const
0000000000683c00 00000000000000c0 t OT::cmap::find_subtable(unsigned int, unsigned int) const
0000000000683cc0 00000000000003dc t OT::cmap::find_best_subtable(bool*, bool*, bool*) const
00000000006840a0 0000000000000150 t OT::cmap::sanitize(hb_sanitize_context_t*) const
00000000006841f0 00000000000001b4 t OT::HVARVVAR::sanitize(hb_sanitize_context_t*) const
00000000006843b0 000000000000012c t OT::gvar::sanitize_shallow(hb_sanitize_context_t*) const
00000000006844e0 0000000000000400 W OT::gvar::accelerator_t::accelerator_t(hb_face_t*)
00000000006844e0 0000000000000400 t OT::gvar::accelerator_t::accelerator_t(hb_face_t*)
00000000006848e0 00000000000000fc t OT::glyf_impl::SimpleGlyph::trim_padding() const
00000000006849e0 00000000000004ac t OT::glyf_impl::SimpleGlyph::get_contour_points(contour_point_vector_t&, bool) const
0000000000684e90 00000000000001b0 t OT::glyf_accelerator_t::glyph_for_gid(unsigned int, bool) const
0000000000685040 0000000000000260 t OT::glyf_accelerator_t::get_extents(hb_font_t*, unsigned int, hb_glyph_extents_t*) const [clone .part.0]
00000000006852a0 00000000000001d0 t CFF::Encoding::sanitize(hb_sanitize_context_t*) const
0000000000685470 000000000000014c t CFF::Charset::sanitize(hb_sanitize_context_t*, unsigned int*) const
00000000006855c0 000000000000036c W OT::post::accelerator_t::accelerator_t(hb_face_t*)
00000000006855c0 000000000000036c t OT::post::accelerator_t::accelerator_t(hb_face_t*)
0000000000685930 000000000000025c t OT::post::accelerator_t::get_glyph_from_name(char const*, int, unsigned int*) const
0000000000685b90 0000000000000120 t OT::IndexSubtableRecord::get_image_data(unsigned int, void const*, unsigned int*, unsigned int*, unsigned int*) const
0000000000685cb0 00000000000001cc t OT::IndexSubtableArray::sanitize(hb_sanitize_context_t*, unsigned int) const
0000000000685e80 000000000000017c t OT::CBLC::sanitize(hb_sanitize_context_t*) const
0000000000686000 0000000000000174 t OT::CBLC::choose_strike(hb_font_t*) const
0000000000686180 000000000000028c W OT::CBDT::accelerator_t::accelerator_t(hb_face_t*)
0000000000686180 000000000000028c t OT::CBDT::accelerator_t::accelerator_t(hb_face_t*)
0000000000686410 00000000000003ec t OT::CBDT::accelerator_t::get_extents(hb_font_t*, unsigned int, hb_glyph_extents_t*, bool) const
0000000000686800 00000000000001d8 t OT::CBDT::accelerator_t::reference_png(hb_font_t*, unsigned int) const
00000000006869e0 0000000000000140 t hb_paint_extents_context_t::hb_paint_extents_context_t()
00000000006869e0 0000000000000140 W hb_paint_extents_context_t::hb_paint_extents_context_t()
0000000000686b20 0000000000000160 t OT::Affine2x3::paint_glyph(OT::hb_paint_context_t*, unsigned int) const
0000000000686c80 0000000000000184 t OT::ClipList::sanitize(hb_sanitize_context_t*) const
0000000000686e10 0000000000000244 t OT::ClipList::get_extents(unsigned int, hb_glyph_extents_t*, OT::ItemVarStoreInstancer const&) const
0000000000687060 00000000000000b4 t OT::COLR::get_base_glyph_paint(unsigned int) const
0000000000687120 0000000000000130 t OT::SBIXStrike::get_glyph_blob(unsigned int, hb_blob_t*, unsigned int, int*, int*, unsigned int, unsigned int*) const
0000000000687250 00000000000001a4 t OT::sbix::accelerator_t::choose_strike(hb_font_t*) const
0000000000687400 00000000000002b0 t OT::sbix::accelerator_t::get_png_extents(hb_font_t*, unsigned int, hb_glyph_extents_t*, bool) const
00000000006876b0 000000000000016c t OT::sbix::sanitize(hb_sanitize_context_t*) const
0000000000687820 0000000000000240 W OT::sbix::accelerator_t::accelerator_t(hb_face_t*)
0000000000687820 0000000000000240 t OT::sbix::accelerator_t::accelerator_t(hb_face_t*)
0000000000687a60 00000000000000d8 t OT::SVG::accelerator_t::reference_blob_for_glyph(unsigned int) const
0000000000687b40 00000000000002b0 T hb_ot_font_set_funcs
0000000000687df0 0000000000000334 t hb_hashmap_t<unsigned int, unsigned int, true>::alloc(unsigned int)
0000000000688130 000000000000013c t OT::CFFIndex<OT::IntType<unsigned int, 4u> >::sanitize(hb_sanitize_context_t*) const
0000000000688270 0000000000000264 t CFF::opset_t<CFF::number_t>::process_op(unsigned int, CFF::interp_env_t<CFF::number_t>&)
00000000006884e0 00000000000002a0 t CFF::dict_opset_t::process_op(unsigned int, CFF::interp_env_t<CFF::number_t>&)
0000000000688780 0000000000000714 t CFF::cff1_top_dict_opset_t::process_op(unsigned int, CFF::cff1_top_dict_interp_env_t&, CFF::cff1_top_dict_values_t&)
0000000000688ea0 0000000000000234 t CFF::FDSelect3_4<OT::IntType<unsigned short, 2u>, OT::IntType<unsigned char, 1u> >::sanitize(hb_sanitize_context_t*, unsigned int) const
00000000006890e0 00000000000001f8 t CFF::FDSelect3_4<OT::IntType<unsigned int, 4u>, OT::IntType<unsigned short, 2u> >::sanitize(hb_sanitize_context_t*, unsigned int) const
00000000006892e0 0000000000000134 t CFF::parsed_values_t<CFF::op_str_t>::add_op(unsigned int, CFF::byte_str_ref_t const&, CFF::op_str_t const&)
0000000000689420 0000000000000134 t CFF::parsed_values_t<CFF::dict_val_t>::add_op(unsigned int, CFF::byte_str_ref_t const&, CFF::dict_val_t const&)
0000000000689560 00000000000001b8 t OT::CFFIndex<OT::IntType<unsigned short, 2u> >::operator[](unsigned int) const
0000000000689720 00000000000006ac t OT::cff1::accelerator_t::get_glyph_from_name(char const*, int, unsigned int*) const
0000000000689dd0 000000000000024c t OT::hmtxvmtx<OT::hmtx, OT::hhea, OT::HVAR>::accelerator_t::get_advance_with_var_unscaled(unsigned int, hb_font_t*, float*) const
000000000068a020 0000000000000114 t hb_hashmap_t<unsigned int, unsigned int, true>::fini()
000000000068a140 000000000000199c t bool OT::glyf_impl::Glyph::get_points<OT::glyf_accelerator_t>(hb_font_t*, OT::glyf_accelerator_t const&, contour_point_vector_t&, contour_point_vector_t*, head_maxp_info_t*, unsigned int*, bool, bool, bool, hb_array_t<int const>, hb_map_t*, unsigned int, unsigned int*) const
000000000068bae0 0000000000000324 t bool OT::glyf_accelerator_t::get_points<OT::glyf_accelerator_t::points_aggregator_t>(hb_font_t*, unsigned int, OT::glyf_accelerator_t::points_aggregator_t, hb_array_t<int const>) const
000000000068be10 0000000000000f14 t bool OT::glyf_accelerator_t::get_points<OT::glyf_impl::path_builder_t>(hb_font_t*, unsigned int, OT::glyf_impl::path_builder_t, hb_array_t<int const>) const
000000000068cd30 00000000000002a8 t CFF::dict_interpreter_t<CFF::cff2_top_dict_opset_t, CFF::cff2_top_dict_values_t, CFF::interp_env_t<CFF::number_t> >::interpret(CFF::cff2_top_dict_values_t&)
000000000068cfe0 0000000000000230 t hb_vector_t<CFF::cff2_private_dict_values_base_t<CFF::dict_val_t>, false>::resize(int, bool, bool)
000000000068d210 00000000000001e0 t hb_vector_t<CFF::cff2_font_dict_values_t, false>::push()
000000000068d3f0 0000000000000ff4 W OT::cff2::accelerator_templ_t<CFF::cff2_private_dict_opset_t, CFF::cff2_private_dict_values_base_t<CFF::dict_val_t> >::accelerator_templ_t(hb_face_t*)
000000000068d3f0 0000000000000ff4 t OT::cff2::accelerator_templ_t<CFF::cff2_private_dict_opset_t, CFF::cff2_private_dict_values_base_t<CFF::dict_val_t> >::accelerator_templ_t(hb_face_t*)
000000000068e3f0 0000000000000170 t OT::cff2::accelerator_templ_t<CFF::cff2_private_dict_opset_t, CFF::cff2_private_dict_values_base_t<CFF::dict_val_t> >::_fini()
000000000068e560 0000000000000134 t OT::CFFIndex<OT::IntType<unsigned short, 2u> >::sanitize(hb_sanitize_context_t*) const
000000000068e6a0 0000000000000228 t hb_vector_t<CFF::cff1_private_dict_values_base_t<CFF::dict_val_t>, false>::resize(int, bool, bool)
000000000068e8d0 00000000000001e8 t hb_vector_t<CFF::cff1_font_dict_values_t, false>::push()
000000000068eac0 000000000000043c t CFF::dict_interpreter_t<CFF::cff1_private_dict_opset_t, CFF::cff1_private_dict_values_base_t<CFF::dict_val_t>, CFF::interp_env_t<CFF::number_t> >::interpret(CFF::cff1_private_dict_values_base_t<CFF::dict_val_t>&)
000000000068ef00 000000000000009c t OT::CFFIndex<OT::IntType<unsigned short, 2u> >::offset_at(unsigned int) const
000000000068efa0 0000000000001328 W OT::cff1::accelerator_templ_t<CFF::cff1_private_dict_opset_t, CFF::cff1_private_dict_values_base_t<CFF::dict_val_t> >::accelerator_templ_t(hb_face_t*)
000000000068efa0 0000000000001328 t OT::cff1::accelerator_templ_t<CFF::cff1_private_dict_opset_t, CFF::cff1_private_dict_values_base_t<CFF::dict_val_t> >::accelerator_templ_t(hb_face_t*)
00000000006902d0 0000000000000090 t hb_vector_t<CFF::cff2_private_dict_values_base_t<CFF::dict_val_t>, false>::shrink_vector(unsigned int)
0000000000690360 0000000000000300 t hb_lazy_loader_t<OT::cff1_accelerator_t, hb_face_lazy_loader_t<OT::cff1_accelerator_t, 16u>, hb_face_t, 16u, OT::cff1_accelerator_t>::get_stored() const
0000000000690660 0000000000000144 t hb_ot_get_glyph_from_name(hb_font_t*, void*, char const*, int, unsigned int*, void*)
00000000006907b0 000000000000040c t hb_ot_get_glyph_name(hb_font_t*, void*, unsigned int, char*, unsigned int, void*)
0000000000690bc0 0000000000000090 t hb_vector_t<CFF::cff2_font_dict_values_t, false>::shrink_vector(unsigned int)
0000000000690c50 00000000000001b4 t OT::PaintLinearGradient<OT::NoVariable>::paint_glyph(OT::hb_paint_context_t*, unsigned int) const
0000000000690e10 00000000000001b4 t OT::PaintLinearGradient<OT::Variable>::paint_glyph(OT::hb_paint_context_t*, unsigned int) const
0000000000690fd0 00000000000001bc t OT::PaintRadialGradient<OT::NoVariable>::paint_glyph(OT::hb_paint_context_t*, unsigned int) const
0000000000691190 00000000000001bc t OT::PaintRadialGradient<OT::Variable>::paint_glyph(OT::hb_paint_context_t*, unsigned int) const
0000000000691350 000000000000018c t OT::PaintSweepGradient<OT::NoVariable>::paint_glyph(OT::hb_paint_context_t*, unsigned int) const
00000000006914e0 000000000000018c t OT::PaintSweepGradient<OT::Variable>::paint_glyph(OT::hb_paint_context_t*, unsigned int) const
0000000000691670 0000000000000708 t OT::hb_paint_context_t::return_t OT::Paint::dispatch<OT::hb_paint_context_t>(OT::hb_paint_context_t*) const [clone .isra.0]
0000000000691d80 0000000000000390 t OT::PaintColrLayers::paint_glyph(OT::hb_paint_context_t*) const
0000000000692110 0000000000000158 t OT::PaintTranslate::paint_glyph(OT::hb_paint_context_t*, unsigned int) const
0000000000692270 0000000000000168 t OT::PaintScale::paint_glyph(OT::hb_paint_context_t*, unsigned int) const
00000000006923e0 00000000000001a0 t OT::PaintSkew::paint_glyph(OT::hb_paint_context_t*, unsigned int) const
0000000000692580 0000000000000204 t OT::PaintGlyph::paint_glyph(OT::hb_paint_context_t*) const
0000000000692790 00000000000002e0 t OT::PaintScaleUniformAroundCenter::paint_glyph(OT::hb_paint_context_t*, unsigned int) const
0000000000692a70 0000000000000360 t OT::PaintRotateAroundCenter::paint_glyph(OT::hb_paint_context_t*, unsigned int) const
0000000000692dd0 0000000000000318 t OT::PaintScaleAroundCenter::paint_glyph(OT::hb_paint_context_t*, unsigned int) const
00000000006930f0 000000000000039c t OT::PaintSkewAroundCenter::paint_glyph(OT::hb_paint_context_t*, unsigned int) const
0000000000693490 00000000000005bc t OT::PaintColrGlyph::paint_glyph(OT::hb_paint_context_t*) const
0000000000693a50 0000000000000808 t OT::COLR::paint_glyph(hb_font_t*, unsigned int, hb_paint_funcs_t*, void*, unsigned int, unsigned int, bool) const
0000000000694260 00000000000002c4 t OT::COLR::get_extents(hb_font_t*, unsigned int, hb_glyph_extents_t*) const
0000000000694530 00000000000000e8 t hb_table_lazy_loader_t<OT::OS2, 6u, true>::create(hb_face_t*)
0000000000694620 00000000000004c4 W OT::cmap::accelerator_t::accelerator_t(hb_face_t*)
0000000000694620 00000000000004c4 t OT::cmap::accelerator_t::accelerator_t(hb_face_t*)
0000000000694af0 0000000000000220 t hb_ot_get_variation_glyph(hb_font_t*, void*, unsigned int, unsigned int, unsigned int*, void*)
0000000000694d10 0000000000000188 t hb_ot_get_nominal_glyph(hb_font_t*, void*, unsigned int, unsigned int*, void*)
0000000000694ea0 000000000000022c t hb_ot_get_nominal_glyphs(hb_font_t*, void*, unsigned int, unsigned int const*, unsigned int, unsigned int*, unsigned int, void*)
00000000006950d0 00000000000000c0 t hb_table_lazy_loader_t<OT::head, 1u, true>::create(hb_face_t*)
0000000000695190 00000000000000f8 t hb_table_lazy_loader_t<OT::VORG, 13u, true>::create(hb_face_t*)
0000000000695290 000000000000015c t hb_lazy_loader_t<OT::SVG_accelerator_t, hb_face_lazy_loader_t<OT::SVG_accelerator_t, 39u>, hb_face_t, 39u, OT::SVG_accelerator_t>::create(hb_face_t*)
00000000006953f0 00000000000000b8 t hb_table_lazy_loader_t<OT::hhea, 4u, true>::create(hb_face_t*)
00000000006954b0 0000000000000508 W OT::hmtxvmtx<OT::hmtx, OT::hhea, OT::HVAR>::accelerator_t::accelerator_t(hb_face_t*)
00000000006954b0 0000000000000508 t OT::hmtxvmtx<OT::hmtx, OT::hhea, OT::HVAR>::accelerator_t::accelerator_t(hb_face_t*)
00000000006959c0 00000000000003c4 t hb_ot_get_glyph_h_advances(hb_font_t*, void*, unsigned int, unsigned int const*, unsigned int, int*, unsigned int, void*)
0000000000695d90 00000000000000b8 t hb_table_lazy_loader_t<OT::vhea, 11u, true>::create(hb_face_t*)
0000000000695e50 0000000000000788 W OT::hmtxvmtx<OT::vmtx, OT::vhea, OT::VVAR>::accelerator_t::accelerator_t(hb_face_t*)
0000000000695e50 0000000000000788 t OT::hmtxvmtx<OT::vmtx, OT::vhea, OT::VVAR>::accelerator_t::accelerator_t(hb_face_t*)
00000000006965e0 0000000000000530 t hb_ot_get_glyph_v_advances(hb_font_t*, void*, unsigned int, unsigned int const*, unsigned int, int*, unsigned int, void*)
0000000000696b10 00000000000005a8 t OT::glyf_accelerator_t::glyf_accelerator_t(hb_face_t*)
0000000000696b10 00000000000005a8 W OT::glyf_accelerator_t::glyf_accelerator_t(hb_face_t*)
00000000006970c0 000000000000057c t hb_ot_draw_glyph(hb_font_t*, void*, unsigned int, hb_draw_funcs_t*, void*, void*)
0000000000697640 00000000000009ac t hb_ot_get_glyph_v_origin(hb_font_t*, void*, unsigned int, int*, int*, void*)
0000000000697ff0 0000000000000174 t OT::PaintTransform<OT::Variable>::sanitize(hb_sanitize_context_t*) const
0000000000698170 0000000000000478 t hb_sanitize_context_t::return_t OT::Paint::dispatch<hb_sanitize_context_t>(hb_sanitize_context_t*) const
00000000006985f0 000000000000016c t OT::BaseGlyphList::sanitize(hb_sanitize_context_t*) const
0000000000698760 0000000000000168 t OT::LayerList::sanitize(hb_sanitize_context_t*) const
00000000006988d0 00000000000002ac t OT::COLR::sanitize(hb_sanitize_context_t*) const
0000000000698b80 0000000000000744 t hb_ot_get_glyph_extents(hb_font_t*, void*, unsigned int, hb_glyph_extents_t*, void*)
00000000006992d0 0000000000000834 t hb_ot_paint_glyph(hb_font_t*, void*, unsigned int, hb_paint_funcs_t*, void*, unsigned int, unsigned int, void*)
0000000000699b10 0000000000000160 t OT::PaintTransform<OT::NoVariable>::sanitize(hb_sanitize_context_t*) const
0000000000699c70 0000000000000190 t OT::PaintComposite::sanitize(hb_sanitize_context_t*) const
0000000000699e00 00000000000000fc t hb_outline_recording_pen_close_path(hb_draw_funcs_t*, void*, hb_draw_state_t*, void*)
0000000000699f00 0000000000000110 t hb_outline_recording_pen_line_to(hb_draw_funcs_t*, void*, hb_draw_state_t*, float, float, void*)
000000000069a010 0000000000000110 t hb_outline_recording_pen_move_to(hb_draw_funcs_t*, void*, hb_draw_state_t*, float, float, void*)
000000000069a120 0000000000000200 t hb_outline_recording_pen_quadratic_to(hb_draw_funcs_t*, void*, hb_draw_state_t*, float, float, float, float, void*)
000000000069a320 00000000000002ec t hb_outline_recording_pen_cubic_to(hb_draw_funcs_t*, void*, hb_draw_state_t*, float, float, float, float, float, float, void*)
000000000069a610 0000000000000420 t hb_outline_t::replay(hb_draw_funcs_t*, void*) const
000000000069aa30 00000000000000c8 t hb_outline_t::control_area() const
000000000069ab00 0000000000000420 t hb_outline_t::embolden(float, float, float, float)
000000000069af20 0000000000000114 t hb_outline_recording_pen_get_funcs()
000000000069b040 00000000000000dc t OT::MVAR::get_var(unsigned int, int const*, unsigned int) const
000000000069b120 000000000000044c t hb_lazy_loader_t<OT::MVAR, hb_table_lazy_loader_t<OT::MVAR, 22u, true>, hb_face_t, 22u, hb_blob_t>::get() const
000000000069b570 0000000000000180 t hb_lazy_loader_t<OT::OS2, hb_table_lazy_loader_t<OT::OS2, 6u, true>, hb_face_t, 6u, hb_blob_t>::get() const
000000000069b6f0 0000000000000c64 t _hb_ot_metrics_get_position_common(hb_font_t*, hb_ot_metrics_tag_t, int*)
000000000069c360 0000000000000024 t _hb_glyph_info_is_default_ignorable(hb_glyph_info_t const*)
000000000069c390 00000000000002e0 t _hb_glyph_info_set_unicode_props(hb_glyph_info_t*, hb_buffer_t*)
000000000069c670 0000000000000028 t hb_buffer_t::allocate_var(unsigned int, unsigned int) [clone .part.0]
000000000069c6a0 0000000000000028 t hb_buffer_t::deallocate_var(unsigned int, unsigned int) [clone .part.0]
000000000069c6d0 0000000000000078 t hb_buffer_t::message(hb_font_t*, char const*, ...)
000000000069c750 00000000000009ec t hb_ot_shape_planner_t::hb_ot_shape_planner_t(hb_face_t*, hb_segment_properties_t const&)
000000000069c750 00000000000009ec T hb_ot_shape_planner_t::hb_ot_shape_planner_t(hb_face_t*, hb_segment_properties_t const&)
000000000069d140 00000000000006fc t hb_ot_shape_planner_t::compile(hb_ot_shape_plan_t&, hb_ot_shape_plan_key_t const&)
000000000069d840 0000000000000384 t hb_ot_shape_plan_t::init0(hb_face_t*, hb_shape_plan_key_t const*)
000000000069dbd0 00000000000000b0 t hb_ot_shape_plan_t::fini()
000000000069dc80 00000000000000b8 t hb_ot_shape_plan_t::position(hb_font_t*, hb_buffer_t*) const
000000000069dd40 0000000000000008 t _hb_ot_shaper_face_data_create
000000000069dd50 0000000000000004 t _hb_ot_shaper_face_data_destroy
000000000069dd60 0000000000000008 t _hb_ot_shaper_font_data_create
000000000069dd70 0000000000000004 t _hb_ot_shaper_font_data_destroy
000000000069dd80 0000000000001f80 t _hb_ot_shape
000000000069fd00 0000000000000470 t OT::avar::map_coords(int*, unsigned int) const
00000000006a0170 00000000000001d4 T hb_ot_var_named_instance_get_design_coords
00000000006a0350 00000000000002a8 T hb_ot_var_normalize_coords
00000000006a0600 0000000000000368 t hb_shape_plan_key_t::init(bool, hb_face_t*, hb_segment_properties_t const*, hb_feature_t const*, unsigned int, int const*, unsigned int, char const* const*)
00000000006a0970 0000000000000098 t hb_shape_plan_key_t::user_features_match(hb_shape_plan_key_t const*)
00000000006a0a10 0000000000000074 t hb_shape_plan_key_t::equal(hb_shape_plan_key_t const*)
00000000006a0a90 000000000000000c T hb_shape_plan_get_empty
00000000006a0aa0 000000000000013c T hb_shape_plan_create2
00000000006a0be0 0000000000000058 T hb_shape_plan_reference
00000000006a0c40 00000000000001f4 T hb_shape_plan_destroy
00000000006a0e40 0000000000000258 T hb_shape_plan_execute
00000000006a10a0 00000000000001a8 T hb_shape_plan_create_cached2
00000000006a1250 00000000000001b0 T hb_shape_full
00000000006a1400 0000000000000008 T hb_shape
00000000006a1410 000000000000017c t hb_shapers_lazy_loader_t::create()
00000000006a1590 0000000000000090 t _hb_shapers_get()
00000000006a1620 0000000000000174 t hb_lazy_loader_t<OT::maxp, hb_table_lazy_loader_t<OT::maxp, 2u, true>, hb_face_t, 2u, hb_blob_t>::get() const
00000000006a17a0 0000000000000038 t hb_face_t::load_num_glyphs() const
00000000006a17e0 00000000000000ec t hb_face_t::load_upem() const
00000000006a18d0 00000000000002c8 t _glyf_get_advance_with_var_unscaled(hb_font_t*, unsigned int, bool)
00000000006a1ba0 000000000000018c t _glyf_get_leading_bearing_with_var_unscaled(hb_font_t*, unsigned int, bool, int*)
00000000006a1d30 0000000000000008 t hb_unicode_combining_class_nil(hb_unicode_funcs_t*, unsigned int, void*)
00000000006a1d40 0000000000000008 t hb_unicode_eastasian_width_nil(hb_unicode_funcs_t*, unsigned int, void*)
00000000006a1d50 0000000000000008 t hb_unicode_general_category_nil(hb_unicode_funcs_t*, unsigned int, void*)
00000000006a1d60 0000000000000008 t hb_unicode_mirroring_nil(hb_unicode_funcs_t*, unsigned int, void*)
00000000006a1d70 000000000000000c t hb_unicode_script_nil(hb_unicode_funcs_t*, unsigned int, void*)
00000000006a1d80 0000000000000008 t hb_unicode_compose_nil(hb_unicode_funcs_t*, unsigned int, unsigned int, unsigned int*, void*)
00000000006a1d90 0000000000000008 t hb_unicode_decompose_nil(hb_unicode_funcs_t*, unsigned int, unsigned int*, unsigned int*, void*)
00000000006a1da0 0000000000000008 t hb_unicode_decompose_compatibility_nil(hb_unicode_funcs_t*, unsigned int, unsigned int*, void*)
00000000006a1db0 0000000000000004 T hb_unicode_funcs_get_default
00000000006a1dc0 000000000000000c T hb_unicode_funcs_get_empty
00000000006a1dd0 0000000000000058 T hb_unicode_funcs_reference
00000000006a1e30 00000000000001f4 T hb_unicode_funcs_destroy
00000000006a1e30 00000000000001f4 t hb_unicode_funcs_destroy.localalias
00000000006a2030 0000000000000018 T hb_unicode_funcs_make_immutable
00000000006a2050 00000000000000c8 T hb_unicode_funcs_create
00000000006a2120 00000000000000ac T hb_unicode_funcs_set_combining_class_func
00000000006a21d0 00000000000000ac T hb_unicode_funcs_set_general_category_func
00000000006a2280 00000000000000ac T hb_unicode_funcs_set_mirroring_func
00000000006a2330 00000000000000ac T hb_unicode_funcs_set_script_func
00000000006a23e0 00000000000000ac T hb_unicode_funcs_set_compose_func
00000000006a2490 00000000000000ac T hb_unicode_funcs_set_decompose_func
00000000006a2540 0000000000000078 t _hb_unicode_is_emoji_Extended_Pictographic(unsigned int)
00000000006a25c0 000000000000001c t _hb_ft_color_line_get_extend(hb_color_line_t*, void*, void*)
00000000006a25e0 0000000000000050 t _hb_ft_font_destroy(void*)
00000000006a2630 0000000000000060 t _hb_ft_get_table_tags(hb_face_t const*, unsigned int, unsigned int*, unsigned int*, void*)
00000000006a2690 00000000000000b0 t _hb_ft_reference_table(hb_face_t*, unsigned int, void*)
00000000006a2740 00000000000000c4 t hb_ft_get_glyph_contour_point(hb_font_t*, void*, unsigned int, unsigned int, int*, int*, void*)
00000000006a2810 0000000000000084 t hb_ft_get_glyph_name(hb_font_t*, void*, unsigned int, char*, unsigned int, void*)
00000000006a28a0 0000000000000148 t hb_ft_get_glyph_from_name(hb_font_t*, void*, char const*, int, unsigned int*, void*)
00000000006a29f0 0000000000000170 t hb_ft_get_glyph_v_origin(hb_font_t*, void*, unsigned int, int*, int*, void*)
00000000006a2b60 0000000000000208 t hb_ft_get_glyph_extents(hb_font_t*, void*, unsigned int, hb_glyph_extents_t*, void*)
00000000006a2d70 0000000000000084 t hb_ft_get_glyph_h_kerning(hb_font_t*, void*, unsigned int, unsigned int, void*)
00000000006a2e00 0000000000000140 t hb_ft_get_glyph_v_advance(hb_font_t*, void*, unsigned int, void*)
00000000006a2f40 0000000000000164 t hb_ft_get_font_h_extents(hb_font_t*, void*, hb_font_extents_t*, void*)
00000000006a30b0 0000000000000090 t hb_ft_get_variation_glyph(hb_font_t*, void*, unsigned int, unsigned int, unsigned int*, void*)
00000000006a3140 0000000000000098 t hb_ft_get_nominal_glyphs(hb_font_t*, void*, unsigned int, unsigned int const*, unsigned int, unsigned int*, unsigned int, void*)
00000000006a31e0 00000000000001e4 t hb_ft_get_glyph_h_advances(hb_font_t*, void*, unsigned int, unsigned int const*, unsigned int, int*, unsigned int, void*)
00000000006a33d0 00000000000001f4 t _hb_ft_color_line_get_color_stops(hb_color_line_t*, void*, unsigned int, unsigned int*, hb_color_stop_t*, void*)
00000000006a35d0 000000000000025c t hb_ft_draw_glyph(hb_font_t*, void*, unsigned int, hb_draw_funcs_t*, void*, void*)
00000000006a3830 0000000000000158 t _hb_ft_move_to(FT_Vector_ const*, void*)
00000000006a3990 0000000000000128 t _hb_ft_cubic_to(FT_Vector_ const*, FT_Vector_ const*, FT_Vector_ const*, void*)
00000000006a3ac0 00000000000000e4 t _hb_ft_line_to(FT_Vector_ const*, void*)
00000000006a3bb0 0000000000000104 t _hb_ft_conic_to(FT_Vector_ const*, FT_Vector_ const*, void*)
00000000006a3cc0 0000000000000028 T hb_ft_font_set_load_flags
00000000006a3cf0 0000000000000178 t hb_ft_font_funcs_lazy_loader_t::create()
00000000006a3e70 0000000000000144 t _hb_ft_font_set_funcs(hb_font_t*, FT_FaceRec_*, bool)
00000000006a3fc0 00000000000000ac T hb_ft_face_create
00000000006a4070 0000000000000178 T hb_ft_font_changed
00000000006a41f0 0000000000000058 T hb_ft_font_create
00000000006a4250 000000000000186c t _hb_ft_paint(hb_ft_paint_context_t*, FT_Opaque_Paint_)
00000000006a5ac0 00000000000009fc t hb_ft_paint_glyph_colr(hb_font_t*, void*, unsigned int, hb_paint_funcs_t*, void*, unsigned int, unsigned int, void*) [clone .isra.0]
00000000006a64c0 00000000000001f4 t hb_ft_paint_glyph(hb_font_t*, void*, unsigned int, hb_paint_funcs_t*, void*, unsigned int, unsigned int, void*)
00000000006a66c0 0000000000000290 t hb_ft_get_nominal_glyph(hb_font_t*, void*, unsigned int, unsigned int*, void*)
00000000006a6950 0000000000000014 t is_deleted_glyph(hb_glyph_info_t const*)
00000000006a6970 0000000000000028 t hb_sanitize_context_t::reset_object() [clone .part.0]
00000000006a69a0 0000000000000028 t bool hb_buffer_t::replace_glyphs<unsigned int>(unsigned int, unsigned int, unsigned int const*) [clone .part.0]
00000000006a69d0 0000000000000028 t bool hb_buffer_t::replace_glyphs<OT::HBGlyphID16>(unsigned int, unsigned int, OT::HBGlyphID16 const*) [clone .part.0]
00000000006a6a00 00000000000002f8 t AAT::Lookup<OT::IntType<unsigned int, 4u> >::get_value_or_null(unsigned int, unsigned int) const [clone .part.0]
00000000006a6d00 00000000000006d8 t hb_buffer_t::_set_glyph_flags(unsigned int, unsigned int, unsigned int, bool, bool)
00000000006a73e0 000000000000013c t hb_font_t::get_glyph_v_origin_with_fallback(unsigned int, int*, int*)
00000000006a7520 00000000000001d8 t hb_font_t::get_glyph_contour_point_for_origin(unsigned int, unsigned int, hb_direction_t, int*, int*)
00000000006a7700 000000000000011c t AAT::ltag::sanitize(hb_sanitize_context_t*) const
00000000006a7820 00000000000000e4 t AAT::SubtableGlyphCoverage::sanitize(hb_sanitize_context_t*, unsigned int) const
00000000006a7910 000000000000031c t AAT::ankr::get_anchor(unsigned int, unsigned int, unsigned int) const
00000000006a7c30 00000000000000f4 t OT::ClassDef::sanitize(hb_sanitize_context_t*) const
00000000006a7d30 0000000000000280 t OT::AttachList::sanitize(hb_sanitize_context_t*) const
00000000006a7fb0 000000000000024c t OT::LigGlyph::sanitize(hb_sanitize_context_t*) const
00000000006a8200 0000000000000264 t OT::LigCaretList::sanitize(hb_sanitize_context_t*) const
00000000006a8470 0000000000000160 t OT::MarkGlyphSetsFormat1::covers(unsigned int, unsigned int) const
00000000006a85d0 00000000000001d8 t OT::MarkGlyphSetsFormat1::sanitize(hb_sanitize_context_t*) const
00000000006a87b0 0000000000000240 t OT::GDEF::get_glyph_props(unsigned int) const
00000000006a89f0 0000000000000230 t AAT::TrackData::get_tracking(void const*, float) const
00000000006a8c20 000000000000014c t AAT::TrackData::sanitize(hb_sanitize_context_t*, void const*) const
00000000006a8d70 0000000000000008 t AAT::hb_aat_apply_context_t::~hb_aat_apply_context_t()
00000000006a8d70 0000000000000008 T AAT::hb_aat_apply_context_t::~hb_aat_apply_context_t()
00000000006a8d80 0000000000000058 t hb_aat_layout_find_feature_mapping(unsigned int)
00000000006a8de0 000000000000004c t hb_aat_layout_zero_width_deleted_glyphs(hb_buffer_t*)
00000000006a8e30 000000000000000c t hb_aat_layout_remove_deleted_glyphs(hb_buffer_t*)
00000000006a8e40 0000000000000444 T hb_aat_layout_has_tracking
00000000006a9290 00000000000002c0 t OT::GDEFVersion1_2<OT::Layout::SmallTypes>::sanitize(hb_sanitize_context_t*) const
00000000006a9550 0000000000000304 t AAT::StateTable<AAT::ObsoleteTypes, void>::sanitize(hb_sanitize_context_t*, unsigned int*) const
00000000006a9860 0000000000000200 t AAT::LookupFormat4<OT::IntType<unsigned short, 2u> >::sanitize(hb_sanitize_context_t*) const
00000000006a9a60 00000000000001f0 t AAT::Lookup<OT::IntType<unsigned short, 2u> >::sanitize(hb_sanitize_context_t*) const
00000000006a9c50 0000000000000428 t void OT::MarkGlyphSetsFormat1::collect_coverage<hb_set_digest_combiner_t<hb_set_digest_bits_pattern_t<unsigned long, 4u>, hb_set_digest_combiner_t<hb_set_digest_bits_pattern_t<unsigned long, 0u>, hb_set_digest_bits_pattern_t<unsigned long, 9u> > > >(hb_vector_t<hb_set_digest_combiner_t<hb_set_digest_bits_pattern_t<unsigned long, 4u>, hb_set_digest_combiner_t<hb_set_digest_bits_pattern_t<unsigned long, 0u>, hb_set_digest_bits_pattern_t<unsigned long, 9u> > >, false>&) const
00000000006aa080 000000000000036c W OT::GDEF::accelerator_t::accelerator_t(hb_face_t*)
00000000006aa080 000000000000036c t OT::GDEF::accelerator_t::accelerator_t(hb_face_t*)
00000000006aa3f0 00000000000001d4 t AAT::hb_aat_apply_context_t::hb_aat_apply_context_t(hb_ot_shape_plan_t const*, hb_font_t*, hb_buffer_t*, hb_blob_t*)
00000000006aa3f0 00000000000001d4 T AAT::hb_aat_apply_context_t::hb_aat_apply_context_t(hb_ot_shape_plan_t const*, hb_font_t*, hb_buffer_t*, hb_blob_t*)
00000000006aa5d0 00000000000006b8 t hb_aat_layout_track(hb_ot_shape_plan_t const*, hb_font_t*, hb_buffer_t*)
00000000006aac90 00000000000004bc t OT::hb_ot_apply_context_t::hb_ot_apply_context_t(unsigned int, hb_font_t*, hb_buffer_t*, hb_blob_t*)
00000000006aac90 00000000000004bc W OT::hb_ot_apply_context_t::hb_ot_apply_context_t(unsigned int, hb_font_t*, hb_buffer_t*, hb_blob_t*)
00000000006ab150 00000000000001b8 t hb_vector_t<hb_vector_t<hb_aat_map_t::range_flags_t, true>, false>::resize(int, bool, bool)
00000000006ab310 00000000000003dc t AAT::Chain<AAT::ExtendedTypes>::compile_flags(hb_aat_map_builder_t const*) const
00000000006ab6f0 00000000000003f0 t AAT::Chain<AAT::ObsoleteTypes>::compile_flags(hb_aat_map_builder_t const*) const
00000000006abae0 00000000000001ec t AAT::LookupFormat2<OT::OffsetTo<OT::ArrayOf<AAT::Anchor, OT::IntType<unsigned int, 4u> >, OT::IntType<unsigned short, 2u>, void, false> >::sanitize(hb_sanitize_context_t*, void const*) const
00000000006abcd0 00000000000002a8 t AAT::LookupFormat4<OT::OffsetTo<OT::ArrayOf<AAT::Anchor, OT::IntType<unsigned int, 4u> >, OT::IntType<unsigned short, 2u>, void, false> >::sanitize(hb_sanitize_context_t*, void const*) const
00000000006abf80 00000000000001c8 t AAT::LookupFormat6<OT::OffsetTo<OT::ArrayOf<AAT::Anchor, OT::IntType<unsigned int, 4u> >, OT::IntType<unsigned short, 2u>, void, false> >::sanitize(hb_sanitize_context_t*, void const*) const
00000000006ac150 000000000000026c t AAT::Lookup<OT::OffsetTo<OT::ArrayOf<AAT::Anchor, OT::IntType<unsigned int, 4u> >, OT::IntType<unsigned short, 2u>, void, false> >::sanitize(hb_sanitize_context_t*, void const*) const
00000000006ac3c0 00000000000000e8 t AAT::ankr::sanitize(hb_sanitize_context_t*) const
00000000006ac4b0 0000000000000218 t AAT::StateTable<AAT::ExtendedTypes, AAT::Format1Entry<true>::EntryData>::sanitize(hb_sanitize_context_t*, unsigned int*) const
00000000006ac6d0 0000000000000218 t AAT::StateTable<AAT::ExtendedTypes, AAT::KerxSubTableFormat4<AAT::KerxSubTableHeader>::EntryData>::sanitize(hb_sanitize_context_t*, unsigned int*) const
00000000006ac8f0 0000000000000304 t AAT::StateTable<AAT::ObsoleteTypes, AAT::ContextualSubtable<AAT::ObsoleteTypes>::EntryData>::sanitize(hb_sanitize_context_t*, unsigned int*) const
00000000006acc00 0000000000000304 t AAT::StateTable<AAT::ObsoleteTypes, AAT::InsertionSubtable<AAT::ObsoleteTypes>::EntryData>::sanitize(hb_sanitize_context_t*, unsigned int*) const
00000000006acf10 00000000000001e8 t void AAT::LookupFormat2<OT::IntType<unsigned short, 2u> >::collect_glyphs<hb_set_digest_combiner_t<hb_set_digest_bits_pattern_t<unsigned long, 4u>, hb_set_digest_combiner_t<hb_set_digest_bits_pattern_t<unsigned long, 0u>, hb_set_digest_bits_pattern_t<unsigned long, 9u> > > >(hb_set_digest_combiner_t<hb_set_digest_bits_pattern_t<unsigned long, 4u>, hb_set_digest_combiner_t<hb_set_digest_bits_pattern_t<unsigned long, 0u>, hb_set_digest_bits_pattern_t<unsigned long, 9u> > >&) const
00000000006ad100 000000000000057c t void AAT::Lookup<OT::IntType<unsigned short, 2u> >::collect_glyphs<hb_set_digest_combiner_t<hb_set_digest_bits_pattern_t<unsigned long, 4u>, hb_set_digest_combiner_t<hb_set_digest_bits_pattern_t<unsigned long, 0u>, hb_set_digest_bits_pattern_t<unsigned long, 9u> > > >(hb_set_digest_combiner_t<hb_set_digest_bits_pattern_t<unsigned long, 4u>, hb_set_digest_combiner_t<hb_set_digest_bits_pattern_t<unsigned long, 0u>, hb_set_digest_bits_pattern_t<unsigned long, 9u> > >&, unsigned int) const
00000000006ad680 00000000000001e8 t void AAT::LookupFormat2<OT::IntType<unsigned int, 4u> >::collect_glyphs<hb_set_digest_combiner_t<hb_set_digest_bits_pattern_t<unsigned long, 4u>, hb_set_digest_combiner_t<hb_set_digest_bits_pattern_t<unsigned long, 0u>, hb_set_digest_bits_pattern_t<unsigned long, 9u> > > >(hb_set_digest_combiner_t<hb_set_digest_bits_pattern_t<unsigned long, 4u>, hb_set_digest_combiner_t<hb_set_digest_bits_pattern_t<unsigned long, 0u>, hb_set_digest_bits_pattern_t<unsigned long, 9u> > >&) const
00000000006ad870 000000000000057c t void AAT::Lookup<OT::IntType<unsigned int, 4u> >::collect_glyphs<hb_set_digest_combiner_t<hb_set_digest_bits_pattern_t<unsigned long, 4u>, hb_set_digest_combiner_t<hb_set_digest_bits_pattern_t<unsigned long, 0u>, hb_set_digest_bits_pattern_t<unsigned long, 9u> > > >(hb_set_digest_combiner_t<hb_set_digest_bits_pattern_t<unsigned long, 4u>, hb_set_digest_combiner_t<hb_set_digest_bits_pattern_t<unsigned long, 0u>, hb_set_digest_bits_pattern_t<unsigned long, 9u> > >&, unsigned int) const
00000000006addf0 00000000000003c0 t AAT::KerxTable<AAT::kerx>::create_accelerator_data(unsigned int) const
00000000006ae1b0 00000000000007b4 t OT::hb_kern_machine_t<AAT::KerxSubTableFormat0<AAT::KerxSubTableHeader>::accelerator_t>::kern(hb_font_t*, hb_buffer_t*, unsigned int, bool) const
00000000006ae970 0000000000000200 t AAT::LookupFormat4<OT::HBGlyphID16>::sanitize(hb_sanitize_context_t*) const
00000000006aeb70 00000000000001f0 t AAT::Lookup<OT::HBGlyphID16>::sanitize(hb_sanitize_context_t*) const
00000000006aed60 000000000000018c t hb_sanitize_context_t::return_t AAT::ChainSubtable<AAT::ObsoleteTypes>::dispatch<hb_sanitize_context_t>(hb_sanitize_context_t*) const
00000000006aeef0 0000000000000260 t AAT::mortmorx<AAT::mort, AAT::ObsoleteTypes, 1836020340u>::sanitize(hb_sanitize_context_t*) const
00000000006af150 0000000000000278 W AAT::mortmorx<AAT::mort, AAT::ObsoleteTypes, 1836020340u>::accelerator_t::accelerator_t(hb_face_t*)
00000000006af150 0000000000000278 t AAT::mortmorx<AAT::mort, AAT::ObsoleteTypes, 1836020340u>::accelerator_t::accelerator_t(hb_face_t*)
00000000006af3d0 00000000000002c8 t AAT::Lookup<OT::HBGlyphID16>::get_value(unsigned int, unsigned int) const
00000000006af6a0 000000000000083c t void AAT::StateTableDriver<AAT::ObsoleteTypes, void>::drive<AAT::RearrangementSubtable<AAT::ObsoleteTypes>::driver_context_t>(AAT::RearrangementSubtable<AAT::ObsoleteTypes>::driver_context_t*, AAT::hb_aat_apply_context_t*)
00000000006afee0 00000000000007ac t void AAT::StateTableDriver<AAT::ObsoleteTypes, AAT::ContextualSubtable<AAT::ObsoleteTypes>::EntryData>::drive<AAT::ContextualSubtable<AAT::ObsoleteTypes>::driver_context_t>(AAT::ContextualSubtable<AAT::ObsoleteTypes>::driver_context_t*, AAT::hb_aat_apply_context_t*)
00000000006b0690 0000000000000890 t void AAT::StateTableDriver<AAT::ObsoleteTypes, void>::drive<AAT::LigatureSubtable<AAT::ObsoleteTypes>::driver_context_t>(AAT::LigatureSubtable<AAT::ObsoleteTypes>::driver_context_t*, AAT::hb_aat_apply_context_t*)
00000000006b0f20 00000000000009e8 t void AAT::StateTableDriver<AAT::ObsoleteTypes, AAT::InsertionSubtable<AAT::ObsoleteTypes>::EntryData>::drive<AAT::InsertionSubtable<AAT::ObsoleteTypes>::driver_context_t>(AAT::InsertionSubtable<AAT::ObsoleteTypes>::driver_context_t*, AAT::hb_aat_apply_context_t*)
00000000006b1910 0000000000000984 t AAT::Chain<AAT::ObsoleteTypes>::apply(AAT::hb_aat_apply_context_t*, AAT::hb_aat_layout_chain_accelerator_t const*) const
00000000006b22a0 000000000000057c t AAT::mortmorx<AAT::mort, AAT::ObsoleteTypes, 1836020340u>::apply(AAT::hb_aat_apply_context_t*, hb_aat_map_t const&, AAT::mortmorx<AAT::mort, AAT::ObsoleteTypes, 1836020340u>::accelerator_t const&) const
00000000006b2820 00000000000002ac t AAT::ContextualSubtable<AAT::ExtendedTypes>::driver_context_t::transition(hb_buffer_t*, AAT::StateTableDriver<AAT::ExtendedTypes, AAT::ContextualSubtable<AAT::ExtendedTypes>::EntryData>*, AAT::Entry<AAT::ContextualSubtable<AAT::ExtendedTypes>::EntryData> const&)
00000000006b2ad0 0000000000000204 t AAT::LookupFormat4<OT::IntType<unsigned int, 4u> >::sanitize(hb_sanitize_context_t*) const
00000000006b2ce0 00000000000001dc t AAT::Lookup<OT::IntType<unsigned int, 4u> >::sanitize(hb_sanitize_context_t*) const
00000000006b2ec0 0000000000000168 t AAT::KerxSubTableFormat6<AAT::KerxSubTableHeader>::sanitize(hb_sanitize_context_t*) const
00000000006b3030 00000000000001c0 t hb_sanitize_context_t::return_t AAT::KerxSubTable::dispatch<hb_sanitize_context_t>(hb_sanitize_context_t*) const
00000000006b31f0 0000000000000234 t AAT::KerxTable<AAT::kerx>::sanitize(hb_sanitize_context_t*) const
00000000006b3430 00000000000002ac W AAT::KerxTable<AAT::kerx>::accelerator_t::accelerator_t(hb_face_t*)
00000000006b3430 00000000000002ac t AAT::KerxTable<AAT::kerx>::accelerator_t::accelerator_t(hb_face_t*)
00000000006b36e0 0000000000000114 T hb_aat_layout_has_positioning
00000000006b3800 00000000000002c8 t AAT::Lookup<OT::IntType<unsigned short, 2u> >::get_value(unsigned int, unsigned int) const
00000000006b3ad0 000000000000055c t void AAT::StateTableDriver<AAT::ExtendedTypes, AAT::ContextualSubtable<AAT::ExtendedTypes>::EntryData>::drive<AAT::ContextualSubtable<AAT::ExtendedTypes>::driver_context_t>(AAT::ContextualSubtable<AAT::ExtendedTypes>::driver_context_t*, AAT::hb_aat_apply_context_t*)
00000000006b4030 0000000000000134 t AAT::KerxSubTableFormat2<AAT::KerxSubTableHeader>::get_kerning(unsigned int, unsigned int, AAT::hb_aat_apply_context_t*) const
00000000006b4170 00000000000006cc t OT::hb_kern_machine_t<AAT::KerxSubTableFormat2<AAT::KerxSubTableHeader>::accelerator_t>::kern(hb_font_t*, hb_buffer_t*, unsigned int, bool) const
00000000006b4840 0000000000000420 t AAT::KerxSubTableFormat6<AAT::KerxSubTableHeader>::get_kerning(unsigned int, unsigned int, AAT::hb_aat_apply_context_t*) const
00000000006b4c60 00000000000006cc t OT::hb_kern_machine_t<AAT::KerxSubTableFormat6<AAT::KerxSubTableHeader>::accelerator_t>::kern(hb_font_t*, hb_buffer_t*, unsigned int, bool) const
00000000006b5330 0000000000000834 t void AAT::StateTableDriver<AAT::ExtendedTypes, AAT::LigatureEntry<true>::EntryData>::drive<AAT::LigatureSubtable<AAT::ExtendedTypes>::driver_context_t>(AAT::LigatureSubtable<AAT::ExtendedTypes>::driver_context_t*, AAT::hb_aat_apply_context_t*)
00000000006b5b70 00000000000007f8 t void AAT::StateTableDriver<AAT::ExtendedTypes, AAT::Format1Entry<true>::EntryData>::drive<AAT::KerxSubTableFormat1<AAT::KerxSubTableHeader>::driver_context_t>(AAT::KerxSubTableFormat1<AAT::KerxSubTableHeader>::driver_context_t*, AAT::hb_aat_apply_context_t*)
00000000006b6370 0000000000000868 t void AAT::StateTableDriver<AAT::ExtendedTypes, AAT::KerxSubTableFormat4<AAT::KerxSubTableHeader>::EntryData>::drive<AAT::KerxSubTableFormat4<AAT::KerxSubTableHeader>::driver_context_t>(AAT::KerxSubTableFormat4<AAT::KerxSubTableHeader>::driver_context_t*, AAT::hb_aat_apply_context_t*)
00000000006b6be0 0000000000000d58 t hb_aat_layout_position(hb_ot_shape_plan_t const*, hb_font_t*, hb_buffer_t*)
00000000006b7940 000000000000081c t void AAT::StateTableDriver<AAT::ExtendedTypes, void>::drive<AAT::RearrangementSubtable<AAT::ExtendedTypes>::driver_context_t>(AAT::RearrangementSubtable<AAT::ExtendedTypes>::driver_context_t*, AAT::hb_aat_apply_context_t*)
00000000006b8160 00000000000009d0 t void AAT::StateTableDriver<AAT::ExtendedTypes, AAT::InsertionSubtable<AAT::ExtendedTypes>::EntryData>::drive<AAT::InsertionSubtable<AAT::ExtendedTypes>::driver_context_t>(AAT::InsertionSubtable<AAT::ExtendedTypes>::driver_context_t*, AAT::hb_aat_apply_context_t*)
00000000006b8b30 0000000000000934 t AAT::Chain<AAT::ExtendedTypes>::apply(AAT::hb_aat_apply_context_t*, AAT::hb_aat_layout_chain_accelerator_t const*) const
00000000006b9470 0000000000000380 t AAT::mortmorx<AAT::morx, AAT::ExtendedTypes, 1836020344u>::apply(AAT::hb_aat_apply_context_t*, hb_aat_map_t const&, AAT::mortmorx<AAT::morx, AAT::ExtendedTypes, 1836020344u>::accelerator_t const&) const
00000000006b97f0 0000000000000218 t AAT::StateTable<AAT::ExtendedTypes, void>::sanitize(hb_sanitize_context_t*, unsigned int*) const
00000000006b9a10 0000000000000218 t AAT::StateTable<AAT::ExtendedTypes, AAT::ContextualSubtable<AAT::ExtendedTypes>::EntryData>::sanitize(hb_sanitize_context_t*, unsigned int*) const
00000000006b9c30 0000000000000184 t AAT::ContextualSubtable<AAT::ExtendedTypes>::sanitize(hb_sanitize_context_t*) const
00000000006b9dc0 0000000000000218 t AAT::StateTable<AAT::ExtendedTypes, AAT::LigatureEntry<true>::EntryData>::sanitize(hb_sanitize_context_t*, unsigned int*) const
00000000006b9fe0 0000000000000218 t AAT::StateTable<AAT::ExtendedTypes, AAT::InsertionSubtable<AAT::ExtendedTypes>::EntryData>::sanitize(hb_sanitize_context_t*, unsigned int*) const
00000000006ba200 0000000000000108 t hb_sanitize_context_t::return_t AAT::ChainSubtable<AAT::ExtendedTypes>::dispatch<hb_sanitize_context_t>(hb_sanitize_context_t*) const
00000000006ba310 00000000000001b4 t AAT::Chain<AAT::ExtendedTypes>::sanitize(hb_sanitize_context_t*, unsigned int) const
00000000006ba4d0 0000000000000354 W AAT::mortmorx<AAT::morx, AAT::ExtendedTypes, 1836020344u>::accelerator_t::accelerator_t(hb_face_t*)
00000000006ba4d0 0000000000000354 t AAT::mortmorx<AAT::morx, AAT::ExtendedTypes, 1836020344u>::accelerator_t::accelerator_t(hb_face_t*)
00000000006ba830 0000000000000540 t hb_aat_layout_compile_map(hb_aat_map_builder_t const*, hb_aat_map_t*)
00000000006bad70 0000000000000260 T hb_aat_layout_has_substitution
00000000006bafd0 0000000000000488 t hb_aat_layout_substitute(hb_ot_shape_plan_t const*, hb_font_t*, hb_buffer_t*, hb_feature_t const*, unsigned int)
00000000006bb460 0000000000000060 W hb_aat_map_builder_t::feature_info_t::cmp(void const*, void const*)
00000000006bb4c0 000000000000008c W hb_aat_map_builder_t::feature_event_t::cmp(void const*, void const*)
00000000006bb550 0000000000000420 t void sort_r_simple<>(void*, unsigned long, unsigned long, int (*)(void const*, void const*))
00000000006bb970 00000000000008a8 t hb_aat_map_builder_t::compile(hb_aat_map_t&)
00000000006bc220 0000000000000174 t hb_table_lazy_loader_t<AAT::feat, 34u, false>::create(hb_face_t*)
00000000006bc3a0 00000000000006fc t hb_aat_map_builder_t::add_feature(hb_feature_t const&)
00000000006bcaa0 000000000000000c T hb_blob_get_empty
00000000006bcab0 0000000000000058 T hb_blob_reference
00000000006bcb10 0000000000000180 T hb_blob_destroy
00000000006bcc90 0000000000000004 t _hb_blob_destroy(void*)
00000000006bcca0 0000000000000018 T hb_blob_make_immutable
00000000006bccc0 00000000000000ac t hb_blob_t::try_make_writable()
00000000006bcd70 000000000000005c T hb_blob_get_data_writable
00000000006bcdd0 00000000000000e4 T hb_blob_create_or_fail
00000000006bcec0 0000000000000030 T hb_blob_create
00000000006bcef0 0000000000000094 T hb_blob_create_sub_blob
00000000006bcf90 00000000000000cc t buffer_verify_error(hb_buffer_t*, hb_font_t*, char const*, ...)
00000000006bd060 0000000000000958 t hb_buffer_t::verify(hb_buffer_t*, hb_font_t*, hb_feature_t const*, unsigned int, char const* const*)
00000000006bd9c0 0000000000000004 t hb_draw_move_to_nil(hb_draw_funcs_t*, void*, hb_draw_state_t*, float, float, void*)
00000000006bd9d0 0000000000000054 t hb_draw_quadratic_to_nil(hb_draw_funcs_t*, void*, hb_draw_state_t*, float, float, float, float, void*)
00000000006bda30 0000000000000004 t hb_draw_cubic_to_nil(hb_draw_funcs_t*, void*, hb_draw_state_t*, float, float, float, float, float, float, void*)
00000000006bda40 0000000000000004 t hb_draw_close_path_nil(hb_draw_funcs_t*, void*, hb_draw_state_t*, void*)
00000000006bda50 000000000000008c t _hb_draw_funcs_set_middle(hb_draw_funcs_t*, void*, void (*)(void*))
00000000006bdae0 0000000000000004 t hb_draw_line_to_nil(hb_draw_funcs_t*, void*, hb_draw_state_t*, float, float, void*)
00000000006bdaf0 00000000000000d0 T hb_draw_funcs_set_move_to_func
00000000006bdbc0 00000000000000d0 T hb_draw_funcs_set_line_to_func
00000000006bdc90 00000000000000d0 T hb_draw_funcs_set_quadratic_to_func
00000000006bdd60 00000000000000d0 T hb_draw_funcs_set_cubic_to_func
00000000006bde30 00000000000000d0 T hb_draw_funcs_set_close_path_func
00000000006bdf00 000000000000006c T hb_draw_funcs_create
00000000006bdf70 000000000000000c T hb_draw_funcs_get_empty
00000000006bdf80 000000000000020c T hb_draw_funcs_destroy
00000000006be190 0000000000000018 T hb_draw_funcs_make_immutable
00000000006be1b0 0000000000000014 t hb_paint_extents_pop_transform(hb_paint_funcs_t*, void*, void*)
00000000006be1d0 00000000000001ac t hb_paint_extents_push_transform(hb_paint_funcs_t*, void*, float, float, float, float, float, float, void*)
00000000006be380 00000000000001d8 t hb_paint_extents_pop_group(hb_paint_funcs_t*, void*, hb_paint_composite_mode_t, void*)
00000000006be560 0000000000000018 t hb_paint_extents_pop_clip(hb_paint_funcs_t*, void*, void*)
00000000006be580 0000000000000050 t hb_draw_extents_move_to(hb_draw_funcs_t*, void*, hb_draw_state_t*, float, float, void*)
00000000006be5d0 0000000000000050 t hb_draw_extents_line_to(hb_draw_funcs_t*, void*, hb_draw_state_t*, float, float, void*)
00000000006be620 000000000000009c t hb_draw_extents_quadratic_to(hb_draw_funcs_t*, void*, hb_draw_state_t*, float, float, float, float, void*)
00000000006be6c0 00000000000000e0 t hb_draw_extents_cubic_to(hb_draw_funcs_t*, void*, hb_draw_state_t*, float, float, float, float, float, float, void*)
00000000006be7a0 0000000000000118 t hb_paint_extents_paint_sweep_gradient(hb_paint_funcs_t*, void*, hb_color_line_t*, float, float, float, float, void*)
00000000006be8c0 0000000000000118 t hb_paint_extents_paint_linear_gradient(hb_paint_funcs_t*, void*, hb_color_line_t*, float, float, float, float, float, float, void*)
00000000006be9e0 0000000000000118 t hb_paint_extents_paint_color(hb_paint_funcs_t*, void*, int, unsigned int, void*)
00000000006beb00 0000000000000118 t hb_paint_extents_paint_radial_gradient(hb_paint_funcs_t*, void*, hb_color_line_t*, float, float, float, float, float, float, void*)
00000000006bec20 0000000000000130 t hb_paint_extents_push_group(hb_paint_funcs_t*, void*, void*)
00000000006bed50 0000000000000310 t hb_paint_extents_context_t::push_clip(hb_extents_t)
00000000006bf060 0000000000000050 t hb_paint_extents_push_clip_rectangle(hb_paint_funcs_t*, void*, float, float, float, float, void*)
00000000006bf0b0 00000000000001ac t hb_paint_extents_paint_image(hb_paint_funcs_t*, void*, hb_blob_t*, unsigned int, unsigned int, unsigned int, float, hb_glyph_extents_t*, void*)
00000000006bf260 0000000000000144 t hb_paint_extents_push_clip_glyph(hb_paint_funcs_t*, void*, unsigned int, hb_font_t*, void*)
00000000006bf3b0 00000000000001b8 t hb_paint_extents_get_funcs()
00000000006bf570 0000000000000028 t _hb_face_for_data_closure_destroy(void*)
00000000006bf5a0 00000000000000fc t void hb_object_fini<hb_sparseset_t<hb_bit_set_invertible_t> >(hb_sparseset_t<hb_bit_set_invertible_t>*)
00000000006bf5a0 00000000000000fc t void hb_object_fini<hb_face_t>(hb_face_t*)
00000000006bf6a0 000000000000015c t OT::TTCHeaderVersion1::sanitize(hb_sanitize_context_t*) const
00000000006bf800 0000000000000358 t OT::ResourceForkHeader::sanitize(hb_sanitize_context_t*) const
00000000006bfb60 00000000000001e4 t OT::OpenTypeFontFile::get_face(unsigned int, unsigned int*) const
00000000006bfd50 0000000000000144 t _hb_face_for_data_reference_table(hb_face_t*, unsigned int, void*)
00000000006bfea0 00000000000000f4 t _hb_face_for_data_get_table_tags(hb_face_t const*, unsigned int, unsigned int*, unsigned int*, void*)
00000000006bffa0 0000000000000134 t OT::OpenTypeFontFile::sanitize(hb_sanitize_context_t*) const
00000000006c00e0 000000000000000c T hb_face_get_empty
00000000006c00f0 00000000000000e0 T hb_face_create_for_tables
00000000006c01d0 0000000000000058 T hb_face_reference
00000000006c0230 000000000000010c T hb_face_destroy
00000000006c0340 0000000000000440 T hb_face_set_user_data
00000000006c0780 00000000000000d4 T hb_face_get_user_data
00000000006c0860 0000000000000018 T hb_face_make_immutable
00000000006c0880 0000000000000030 T hb_face_reference_table
00000000006c08b0 0000000000000014 T hb_face_set_index
00000000006c08d0 000000000000001c T hb_face_set_upem
00000000006c08f0 0000000000000018 T hb_face_get_upem
00000000006c0910 000000000000001c T hb_face_get_glyph_count
00000000006c0930 0000000000000064 T hb_face_set_get_table_tags_func
00000000006c09a0 0000000000000384 T hb_face_create
00000000006c0d30 0000000000000008 t _hb_fallback_shaper_face_data_create
00000000006c0d40 0000000000000004 t _hb_fallback_shaper_face_data_destroy
00000000006c0d50 0000000000000008 t _hb_fallback_shaper_font_data_create
00000000006c0d60 0000000000000004 t _hb_fallback_shaper_font_data_destroy
00000000006c0d70 00000000000004f8 t _hb_fallback_shape
00000000006c1270 0000000000000020 t OT::cff1::lookup_expert_charset_for_sid(unsigned int)
00000000006c1290 0000000000000020 t OT::cff1::lookup_expert_subset_charset_for_sid(unsigned int)
00000000006c12b0 0000000000000064 t OT::cff1::lookup_expert_charset_for_glyph(unsigned int)
00000000006c1320 0000000000000064 t OT::cff1::lookup_expert_subset_charset_for_glyph(unsigned int)
00000000006c1390 0000000000000174 t cff1_path_param_t::move_to(CFF::point_t const&)
00000000006c1510 0000000000000100 t cff1_path_param_t::line_to(CFF::point_t const&)
00000000006c1610 0000000000000160 t cff1_path_param_t::cubic_to(CFF::point_t const&, CFF::point_t const&, CFF::point_t const&)
00000000006c1770 0000000000000424 t CFF::path_procs_t<cff1_path_procs_extents_t, CFF::cff1_cs_interp_env_t, cff1_extents_param_t>::hlineto(CFF::cff1_cs_interp_env_t&, cff1_extents_param_t&)
00000000006c1ba0 0000000000000428 t CFF::path_procs_t<cff1_path_procs_extents_t, CFF::cff1_cs_interp_env_t, cff1_extents_param_t>::vlineto(CFF::cff1_cs_interp_env_t&, cff1_extents_param_t&)
00000000006c1fd0 0000000000000380 t CFF::path_procs_t<cff1_path_procs_extents_t, CFF::cff1_cs_interp_env_t, cff1_extents_param_t>::rrcurveto(CFF::cff1_cs_interp_env_t&, cff1_extents_param_t&)
00000000006c2350 0000000000000588 t CFF::path_procs_t<cff1_path_procs_extents_t, CFF::cff1_cs_interp_env_t, cff1_extents_param_t>::rcurveline(CFF::cff1_cs_interp_env_t&, cff1_extents_param_t&)
00000000006c28e0 000000000000056c t CFF::path_procs_t<cff1_path_procs_extents_t, CFF::cff1_cs_interp_env_t, cff1_extents_param_t>::rlinecurve(CFF::cff1_cs_interp_env_t&, cff1_extents_param_t&)
00000000006c2e50 0000000000000310 t CFF::path_procs_t<cff1_path_procs_extents_t, CFF::cff1_cs_interp_env_t, cff1_extents_param_t>::vvcurveto(CFF::cff1_cs_interp_env_t&, cff1_extents_param_t&)
00000000006c3160 0000000000000310 t CFF::path_procs_t<cff1_path_procs_extents_t, CFF::cff1_cs_interp_env_t, cff1_extents_param_t>::hhcurveto(CFF::cff1_cs_interp_env_t&, cff1_extents_param_t&)
00000000006c3470 0000000000000e64 t CFF::path_procs_t<cff1_path_procs_extents_t, CFF::cff1_cs_interp_env_t, cff1_extents_param_t>::vhcurveto(CFF::cff1_cs_interp_env_t&, cff1_extents_param_t&)
00000000006c42e0 0000000000000e5c t CFF::path_procs_t<cff1_path_procs_extents_t, CFF::cff1_cs_interp_env_t, cff1_extents_param_t>::hvcurveto(CFF::cff1_cs_interp_env_t&, cff1_extents_param_t&)
00000000006c5140 0000000000000374 t CFF::path_procs_t<cff1_path_procs_extents_t, CFF::cff1_cs_interp_env_t, cff1_extents_param_t>::flex1(CFF::cff1_cs_interp_env_t&, cff1_extents_param_t&)
00000000006c54c0 000000000000129c t CFF::cs_opset_t<CFF::number_t, cff1_cs_opset_extents_t, CFF::cff1_cs_interp_env_t, cff1_extents_param_t, cff1_path_procs_extents_t>::process_op(unsigned int, CFF::cff1_cs_interp_env_t&, cff1_extents_param_t&)
00000000006c6760 000000000000040c t _get_bounds(OT::cff1::accelerator_t const*, unsigned int, bounds_t&, bool)
00000000006c6b70 000000000000018c t OT::cff1::accelerator_t::get_extents(hb_font_t*, unsigned int, hb_glyph_extents_t*) const
00000000006c6d00 0000000000000610 t cff1_cs_opset_extents_t::process_seac(CFF::cff1_cs_interp_env_t&, cff1_extents_param_t&)
00000000006c7310 0000000000000304 t CFF::path_procs_t<cff1_path_procs_path_t, CFF::cff1_cs_interp_env_t, cff1_path_param_t>::rcurveline(CFF::cff1_cs_interp_env_t&, cff1_path_param_t&)
00000000006c7620 00000000000002a8 t CFF::path_procs_t<cff1_path_procs_path_t, CFF::cff1_cs_interp_env_t, cff1_path_param_t>::rlinecurve(CFF::cff1_cs_interp_env_t&, cff1_path_param_t&)
00000000006c78d0 0000000000000680 t CFF::path_procs_t<cff1_path_procs_path_t, CFF::cff1_cs_interp_env_t, cff1_path_param_t>::vhcurveto(CFF::cff1_cs_interp_env_t&, cff1_path_param_t&)
00000000006c7f50 0000000000000680 t CFF::path_procs_t<cff1_path_procs_path_t, CFF::cff1_cs_interp_env_t, cff1_path_param_t>::hvcurveto(CFF::cff1_cs_interp_env_t&, cff1_path_param_t&)
00000000006c85d0 0000000000000134 t CFF::path_procs_t<cff1_path_procs_path_t, CFF::cff1_cs_interp_env_t, cff1_path_param_t>::flex1(CFF::cff1_cs_interp_env_t&, cff1_path_param_t&)
00000000006c8710 000000000000139c t CFF::cs_opset_t<CFF::number_t, cff1_cs_opset_path_t, CFF::cff1_cs_interp_env_t, cff1_path_param_t, cff1_path_procs_path_t>::process_op(unsigned int, CFF::cff1_cs_interp_env_t&, cff1_path_param_t&)
00000000006c9ab0 000000000000045c t _get_path(OT::cff1::accelerator_t const*, hb_font_t*, unsigned int, hb_draw_session_t&, bool, CFF::point_t*)
00000000006c9f10 000000000000000c t OT::cff1::accelerator_t::get_path(hb_font_t*, unsigned int, hb_draw_session_t&) const
00000000006c9f20 00000000000004cc t cff1_cs_opset_path_t::process_seac(CFF::cff1_cs_interp_env_t&, cff1_path_param_t&)
00000000006ca3f0 0000000000000028 t OT::CFFIndex<OT::IntType<unsigned int, 4u> >::offset_at(unsigned int) const [clone .part.0]
00000000006ca420 0000000000000160 t cff2_path_param_t::move_to(CFF::point_t const&) [clone .isra.0]
00000000006ca580 000000000000013c t cff2_path_param_t::cubic_to(CFF::point_t const&, CFF::point_t const&, CFF::point_t const&) [clone .isra.0]
00000000006ca6c0 00000000000000ec t cff2_path_param_t::line_to(CFF::point_t const&) [clone .isra.0]
00000000006ca7b0 0000000000000180 t OT::VarData::get_region_scalars(int const*, unsigned int, OT::VarRegionList const&, float*, unsigned int) const
00000000006ca930 00000000000001ac t OT::CFFIndex<OT::IntType<unsigned int, 4u> >::operator[](unsigned int) const
00000000006caae0 00000000000000b0 t CFF::FDSelect3_4<OT::IntType<unsigned int, 4u>, OT::IntType<unsigned short, 2u> >::get_fd(unsigned int) const
00000000006cab90 000000000000010c t CFF::CFF2FDSelect::get_fd(unsigned int) const
00000000006caca0 0000000000000424 t CFF::path_procs_t<cff2_path_procs_extents_t, CFF::cff2_cs_interp_env_t<CFF::number_t>, cff2_extents_param_t>::hlineto(CFF::cff2_cs_interp_env_t<CFF::number_t>&, cff2_extents_param_t&)
00000000006cb0d0 0000000000000428 t CFF::path_procs_t<cff2_path_procs_extents_t, CFF::cff2_cs_interp_env_t<CFF::number_t>, cff2_extents_param_t>::vlineto(CFF::cff2_cs_interp_env_t<CFF::number_t>&, cff2_extents_param_t&)
00000000006cb500 0000000000000388 t CFF::path_procs_t<cff2_path_procs_extents_t, CFF::cff2_cs_interp_env_t<CFF::number_t>, cff2_extents_param_t>::rrcurveto(CFF::cff2_cs_interp_env_t<CFF::number_t>&, cff2_extents_param_t&)
00000000006cb890 0000000000000584 t CFF::path_procs_t<cff2_path_procs_extents_t, CFF::cff2_cs_interp_env_t<CFF::number_t>, cff2_extents_param_t>::rcurveline(CFF::cff2_cs_interp_env_t<CFF::number_t>&, cff2_extents_param_t&)
00000000006cbe20 000000000000056c t CFF::path_procs_t<cff2_path_procs_extents_t, CFF::cff2_cs_interp_env_t<CFF::number_t>, cff2_extents_param_t>::rlinecurve(CFF::cff2_cs_interp_env_t<CFF::number_t>&, cff2_extents_param_t&)
00000000006cc390 0000000000000310 t CFF::path_procs_t<cff2_path_procs_extents_t, CFF::cff2_cs_interp_env_t<CFF::number_t>, cff2_extents_param_t>::vvcurveto(CFF::cff2_cs_interp_env_t<CFF::number_t>&, cff2_extents_param_t&)
00000000006cc6a0 0000000000000308 t CFF::path_procs_t<cff2_path_procs_extents_t, CFF::cff2_cs_interp_env_t<CFF::number_t>, cff2_extents_param_t>::hhcurveto(CFF::cff2_cs_interp_env_t<CFF::number_t>&, cff2_extents_param_t&)
00000000006cc9b0 0000000000000e44 t CFF::path_procs_t<cff2_path_procs_extents_t, CFF::cff2_cs_interp_env_t<CFF::number_t>, cff2_extents_param_t>::vhcurveto(CFF::cff2_cs_interp_env_t<CFF::number_t>&, cff2_extents_param_t&)
00000000006cd800 0000000000000e38 t CFF::path_procs_t<cff2_path_procs_extents_t, CFF::cff2_cs_interp_env_t<CFF::number_t>, cff2_extents_param_t>::hvcurveto(CFF::cff2_cs_interp_env_t<CFF::number_t>&, cff2_extents_param_t&)
00000000006ce640 0000000000000374 t CFF::path_procs_t<cff2_path_procs_extents_t, CFF::cff2_cs_interp_env_t<CFF::number_t>, cff2_extents_param_t>::flex1(CFF::cff2_cs_interp_env_t<CFF::number_t>&, cff2_extents_param_t&)
00000000006ce9c0 00000000000010d8 t CFF::cs_opset_t<CFF::number_t, cff2_cs_opset_extents_t, CFF::cff2_cs_interp_env_t<CFF::number_t>, cff2_extents_param_t, cff2_path_procs_extents_t>::process_op(unsigned int, CFF::cff2_cs_interp_env_t<CFF::number_t>&, cff2_extents_param_t&)
00000000006cfaa0 0000000000000220 t CFF::cff2_cs_interp_env_t<CFF::number_t>::process_blend()
00000000006cfcc0 00000000000006d8 t OT::cff2::accelerator_t::get_extents(hb_font_t*, unsigned int, hb_glyph_extents_t*) const
00000000006d03a0 0000000000000304 t CFF::path_procs_t<cff2_path_procs_path_t, CFF::cff2_cs_interp_env_t<CFF::number_t>, cff2_path_param_t>::rcurveline(CFF::cff2_cs_interp_env_t<CFF::number_t>&, cff2_path_param_t&)
00000000006d06b0 00000000000002a8 t CFF::path_procs_t<cff2_path_procs_path_t, CFF::cff2_cs_interp_env_t<CFF::number_t>, cff2_path_param_t>::rlinecurve(CFF::cff2_cs_interp_env_t<CFF::number_t>&, cff2_path_param_t&)
00000000006d0960 0000000000000690 t CFF::path_procs_t<cff2_path_procs_path_t, CFF::cff2_cs_interp_env_t<CFF::number_t>, cff2_path_param_t>::vhcurveto(CFF::cff2_cs_interp_env_t<CFF::number_t>&, cff2_path_param_t&)
00000000006d0ff0 0000000000000690 t CFF::path_procs_t<cff2_path_procs_path_t, CFF::cff2_cs_interp_env_t<CFF::number_t>, cff2_path_param_t>::hvcurveto(CFF::cff2_cs_interp_env_t<CFF::number_t>&, cff2_path_param_t&)
00000000006d1680 0000000000000138 t CFF::path_procs_t<cff2_path_procs_path_t, CFF::cff2_cs_interp_env_t<CFF::number_t>, cff2_path_param_t>::flex1(CFF::cff2_cs_interp_env_t<CFF::number_t>&, cff2_path_param_t&)
00000000006d17c0 00000000000011b0 t CFF::cs_opset_t<CFF::number_t, cff2_cs_opset_path_t, CFF::cff2_cs_interp_env_t<CFF::number_t>, cff2_path_param_t, cff2_path_procs_path_t>::process_op(unsigned int, CFF::cff2_cs_interp_env_t<CFF::number_t>&, cff2_path_param_t&)
00000000006d2970 0000000000000660 t OT::cff2::accelerator_t::get_path_at(hb_font_t*, unsigned int, hb_draw_session_t&, hb_array_t<int const>) const
00000000006d2fd0 000000000000000c t OT::cff2::accelerator_t::get_path(hb_font_t*, unsigned int, hb_draw_session_t&) const
00000000006d2fe0 0000000000000118 t OT::CPALV1Tail::sanitize(hb_sanitize_context_t*, void const*, unsigned int, unsigned int) const
00000000006d3100 0000000000000108 t OT::CPAL::get_palette_colors(unsigned int, unsigned int, unsigned int*, unsigned int*) const
00000000006d3210 00000000000000dc t OT::CPAL::sanitize(hb_sanitize_context_t*) const
00000000006d32f0 0000000000000280 t hb_lazy_loader_t<OT::CPAL, hb_table_lazy_loader_t<OT::CPAL, 36u, true>, hb_face_t, 36u, hb_blob_t>::get() const
00000000006d3570 0000000000000048 T hb_ot_color_palette_get_colors
00000000006d35c0 0000000000000008 t hb_ot_face_t::init0(hb_face_t*)
00000000006d35d0 0000000000000ce4 t hb_ot_face_t::fini()
00000000006d42c0 0000000000000008 t OT::match_always(hb_glyph_info_t&, unsigned int, void const*)
00000000006d42d0 0000000000000010 t OT::match_glyph(hb_glyph_info_t&, unsigned int, void const*)
00000000006d42e0 0000000000000008 W bool OT::hb_accelerate_subtables_context_t::cache_func_to<OT::Layout::GPOS_impl::SinglePosFormat1>(void const*, OT::hb_ot_apply_context_t*, bool)
00000000006d42f0 0000000000000008 W bool OT::hb_accelerate_subtables_context_t::cache_func_to<OT::Layout::GPOS_impl::SinglePosFormat2>(void const*, OT::hb_ot_apply_context_t*, bool)
00000000006d4300 0000000000000008 W bool OT::hb_accelerate_subtables_context_t::cache_func_to<OT::Layout::GPOS_impl::PairPosFormat1_3<OT::Layout::SmallTypes> >(void const*, OT::hb_ot_apply_context_t*, bool)
00000000006d4310 0000000000000008 W bool OT::hb_accelerate_subtables_context_t::cache_func_to<OT::Layout::GPOS_impl::PairPosFormat2_4<OT::Layout::SmallTypes> >(void const*, OT::hb_ot_apply_context_t*, bool)
00000000006d4320 0000000000000008 W bool OT::hb_accelerate_subtables_context_t::cache_func_to<OT::Layout::GPOS_impl::CursivePosFormat1>(void const*, OT::hb_ot_apply_context_t*, bool)
00000000006d4330 0000000000000008 W bool OT::hb_accelerate_subtables_context_t::cache_func_to<OT::Layout::GPOS_impl::MarkBasePosFormat1_2<OT::Layout::SmallTypes> >(void const*, OT::hb_ot_apply_context_t*, bool)
00000000006d4340 0000000000000008 W bool OT::hb_accelerate_subtables_context_t::cache_func_to<OT::Layout::GPOS_impl::MarkLigPosFormat1_2<OT::Layout::SmallTypes> >(void const*, OT::hb_ot_apply_context_t*, bool)
00000000006d4350 0000000000000008 W bool OT::hb_accelerate_subtables_context_t::cache_func_to<OT::Layout::GPOS_impl::MarkMarkPosFormat1_2<OT::Layout::SmallTypes> >(void const*, OT::hb_ot_apply_context_t*, bool)
00000000006d4360 0000000000000008 W bool OT::hb_accelerate_subtables_context_t::cache_func_to<OT::ContextFormat1_4<OT::Layout::SmallTypes> >(void const*, OT::hb_ot_apply_context_t*, bool)
00000000006d4370 0000000000000008 W bool OT::hb_accelerate_subtables_context_t::cache_func_to<OT::ContextFormat3>(void const*, OT::hb_ot_apply_context_t*, bool)
00000000006d4380 0000000000000008 W bool OT::hb_accelerate_subtables_context_t::cache_func_to<OT::ChainContextFormat1_4<OT::Layout::SmallTypes> >(void const*, OT::hb_ot_apply_context_t*, bool)
00000000006d4390 0000000000000008 W bool OT::hb_accelerate_subtables_context_t::cache_func_to<OT::ChainContextFormat3>(void const*, OT::hb_ot_apply_context_t*, bool)
00000000006d43a0 0000000000000008 W bool OT::hb_accelerate_subtables_context_t::cache_func_to<OT::Layout::GSUB_impl::SingleSubstFormat1_3<OT::Layout::SmallTypes> >(void const*, OT::hb_ot_apply_context_t*, bool)
00000000006d43b0 0000000000000008 W bool OT::hb_accelerate_subtables_context_t::cache_func_to<OT::Layout::GSUB_impl::SingleSubstFormat2_4<OT::Layout::SmallTypes> >(void const*, OT::hb_ot_apply_context_t*, bool)
00000000006d43c0 0000000000000008 W bool OT::hb_accelerate_subtables_context_t::cache_func_to<OT::Layout::GSUB_impl::MultipleSubstFormat1_2<OT::Layout::SmallTypes> >(void const*, OT::hb_ot_apply_context_t*, bool)
00000000006d43d0 0000000000000008 W bool OT::hb_accelerate_subtables_context_t::cache_func_to<OT::Layout::GSUB_impl::AlternateSubstFormat1_2<OT::Layout::SmallTypes> >(void const*, OT::hb_ot_apply_context_t*, bool)
00000000006d43e0 0000000000000008 W bool OT::hb_accelerate_subtables_context_t::cache_func_to<OT::Layout::GSUB_impl::LigatureSubstFormat1_2<OT::Layout::SmallTypes> >(void const*, OT::hb_ot_apply_context_t*, bool)
00000000006d43f0 0000000000000008 W bool OT::hb_accelerate_subtables_context_t::cache_func_to<OT::Layout::GSUB_impl::ReverseChainSingleSubstFormat1>(void const*, OT::hb_ot_apply_context_t*, bool)
00000000006d4400 00000000000000b8 t OT::Layout::GPOS_impl::reverse_cursive_minor_offset(hb_glyph_position_t*, unsigned int, hb_direction_t, unsigned int)
00000000006d44c0 00000000000001d4 t OT::Layout::propagate_attachment_offsets(hb_glyph_position_t*, unsigned int, unsigned int, hb_direction_t, unsigned int)
00000000006d46a0 0000000000000028 t hb_sanitize_context_t::reset_object() [clone .part.0]
00000000006d46d0 0000000000000028 t hb_buffer_t::deallocate_var(unsigned int, unsigned int) [clone .part.0]
00000000006d4700 0000000000000028 t hb_buffer_t::assert_var(unsigned int, unsigned int) [clone .part.0]
00000000006d4730 0000000000000028 t bool hb_buffer_t::replace_glyphs<unsigned int>(unsigned int, unsigned int, unsigned int const*) [clone .part.0]
00000000006d4760 0000000000000088 W bool OT::hb_accelerate_subtables_context_t::cache_func_to<OT::ContextFormat2_5<OT::Layout::SmallTypes> >(void const*, OT::hb_ot_apply_context_t*, bool)
00000000006d47f0 0000000000000088 W bool OT::hb_accelerate_subtables_context_t::cache_func_to<OT::ChainContextFormat2_5<OT::Layout::SmallTypes> >(void const*, OT::hb_ot_apply_context_t*, bool)
00000000006d4880 0000000000000288 t bool OT::Layout::Common::Coverage::collect_coverage<hb_set_digest_combiner_t<hb_set_digest_bits_pattern_t<unsigned long, 4u>, hb_set_digest_combiner_t<hb_set_digest_bits_pattern_t<unsigned long, 0u>, hb_set_digest_bits_pattern_t<unsigned long, 9u> > > >(hb_set_digest_combiner_t<hb_set_digest_bits_pattern_t<unsigned long, 4u>, hb_set_digest_combiner_t<hb_set_digest_bits_pattern_t<unsigned long, 0u>, hb_set_digest_bits_pattern_t<unsigned long, 9u> > >*) const [clone .isra.0]
00000000006d4b10 00000000000001ec t OT::hb_accelerate_subtables_context_t::return_t OT::Context::dispatch<OT::hb_accelerate_subtables_context_t>(OT::hb_accelerate_subtables_context_t*) const [clone .isra.0]
00000000006d4d00 000000000000021c t OT::hb_accelerate_subtables_context_t::return_t OT::ChainContext::dispatch<OT::hb_accelerate_subtables_context_t>(OT::hb_accelerate_subtables_context_t*) const [clone .isra.0]
00000000006d4f20 0000000000000264 t OT::hb_accelerate_subtables_context_t::return_t OT::Layout::GPOS_impl::PosLookupSubTable::dispatch<OT::hb_accelerate_subtables_context_t>(OT::hb_accelerate_subtables_context_t*, unsigned int) const [clone .isra.0]
00000000006d5190 00000000000000f0 t decltype (({parm#1}.sanitize)(this)) hb_sanitize_context_t::_dispatch<OT::Layout::Common::Coverage>(OT::Layout::Common::Coverage const&, hb_priority<1u>) [clone .isra.0]
00000000006d5280 00000000000001fc t OT::hb_accelerate_subtables_context_t::return_t OT::Layout::GSUB_impl::SubstLookupSubTable::dispatch<OT::hb_accelerate_subtables_context_t>(OT::hb_accelerate_subtables_context_t*, unsigned int) const [clone .isra.0]
00000000006d5480 0000000000000108 t OT::match_class(hb_glyph_info_t&, unsigned int, void const*)
00000000006d5590 0000000000000118 t OT::match_class_cached(hb_glyph_info_t&, unsigned int, void const*)
00000000006d56b0 0000000000000128 t OT::match_class_cached1(hb_glyph_info_t&, unsigned int, void const*)
00000000006d57e0 0000000000000128 t OT::match_class_cached2(hb_glyph_info_t&, unsigned int, void const*)
00000000006d5910 000000000000041c t OT::apply_lookup(OT::hb_ot_apply_context_t*, unsigned int, unsigned int*, unsigned int, OT::LookupRecord const*, unsigned int)
00000000006d5d30 0000000000000114 t OT::Layout::Common::Coverage::get_coverage(unsigned int) const
00000000006d5e50 000000000000016c t OT::hb_ot_apply_context_t::match_properties_mark(unsigned int, unsigned int, unsigned int) const [clone .isra.0]
00000000006d5fc0 0000000000000340 t apply_forward(OT::hb_ot_apply_context_t*, OT::hb_ot_layout_lookup_accelerator_t const&, unsigned int) [clone .isra.0]
00000000006d6300 0000000000000340 t bool apply_string<GSUBProxy>(OT::hb_ot_apply_context_t*, GSUBProxy::Lookup const&, OT::hb_ot_layout_lookup_accelerator_t const&) [clone .isra.0]
00000000006d6640 00000000000004b4 t OT::Rule<OT::Layout::SmallTypes>::apply(OT::hb_ot_apply_context_t*, OT::ContextApplyLookupContext const&) const [clone .isra.0]
00000000006d6b00 0000000000000034 t OT::match_coverage(hb_glyph_info_t&, unsigned int, void const*)
00000000006d6b40 0000000000000154 t OT::FeatureParams::sanitize(hb_sanitize_context_t*, unsigned int) const
00000000006d6ca0 00000000000000ec t OT::ClassDef::get_class(unsigned int) const
00000000006d6d90 0000000000000314 t OT::Condition::sanitize(hb_sanitize_context_t*) const
00000000006d70b0 0000000000000134 t OT::ConditionSet::sanitize(hb_sanitize_context_t*) const
00000000006d71f0 0000000000000224 t OT::FeatureTableSubstitution::sanitize(hb_sanitize_context_t*) const
00000000006d7420 00000000000000f4 t OT::FeatureVariationRecord::sanitize(hb_sanitize_context_t*, void const*) const
00000000006d7520 0000000000000114 t OT::FeatureVariations::sanitize(hb_sanitize_context_t*) const
00000000006d7640 0000000000000194 t OT::Device::get_x_delta(hb_font_t*, OT::ItemVariationStore const&, float*) const
00000000006d77e0 0000000000000194 t OT::Device::get_y_delta(hb_font_t*, OT::ItemVariationStore const&, float*) const
00000000006d7980 00000000000000bc t OT::Device::sanitize(hb_sanitize_context_t*) const
00000000006d7a40 00000000000001ec t OT::Layout::GPOS_impl::AnchorFormat3::get_anchor(OT::hb_ot_apply_context_t*, unsigned int, float*, float*) const [clone .isra.0]
00000000006d7c30 0000000000000240 t OT::GDEF::accelerator_t::get_glyph_props(unsigned int) const
00000000006d7e70 000000000000016c t OT::hb_ot_apply_context_t::replace_glyph(unsigned int)
00000000006d7fe0 000000000000011c W bool OT::hb_accelerate_subtables_context_t::apply_cached_to<OT::Layout::GSUB_impl::SingleSubstFormat2_4<OT::Layout::SmallTypes> >(void const*, OT::hb_ot_apply_context_t*)
00000000006d8100 00000000000000ec W bool OT::hb_accelerate_subtables_context_t::apply_cached_to<OT::Layout::GSUB_impl::SingleSubstFormat1_3<OT::Layout::SmallTypes> >(void const*, OT::hb_ot_apply_context_t*)
00000000006d81f0 00000000000003cc t OT::Layout::GSUB_impl::Sequence<OT::Layout::SmallTypes>::apply(OT::hb_ot_apply_context_t*) const [clone .isra.0]
00000000006d85c0 00000000000000c8 W bool OT::hb_accelerate_subtables_context_t::apply_to<OT::Layout::GSUB_impl::MultipleSubstFormat1_2<OT::Layout::SmallTypes> >(void const*, OT::hb_ot_apply_context_t*)
00000000006d8690 00000000000000c8 W bool OT::hb_accelerate_subtables_context_t::apply_cached_to<OT::Layout::GSUB_impl::MultipleSubstFormat1_2<OT::Layout::SmallTypes> >(void const*, OT::hb_ot_apply_context_t*)
00000000006d8760 00000000000000ec W bool OT::hb_accelerate_subtables_context_t::apply_to<OT::Layout::GSUB_impl::SingleSubstFormat1_3<OT::Layout::SmallTypes> >(void const*, OT::hb_ot_apply_context_t*)
00000000006d8850 000000000000011c W bool OT::hb_accelerate_subtables_context_t::apply_to<OT::Layout::GSUB_impl::SingleSubstFormat2_4<OT::Layout::SmallTypes> >(void const*, OT::hb_ot_apply_context_t*)
00000000006d8970 00000000000004c8 t OT::ContextFormat3::apply(OT::hb_ot_apply_context_t*) const
00000000006d8e40 0000000000000004 W bool OT::hb_accelerate_subtables_context_t::apply_to<OT::ContextFormat3>(void const*, OT::hb_ot_apply_context_t*)
00000000006d8e50 0000000000000004 W bool OT::hb_accelerate_subtables_context_t::apply_cached_to<OT::ContextFormat3>(void const*, OT::hb_ot_apply_context_t*)
00000000006d8e60 00000000000001c8 t OT::ContextFormat3::sanitize(hb_sanitize_context_t*) const
00000000006d9030 00000000000009bc t OT::ChainContextFormat3::apply(OT::hb_ot_apply_context_t*) const
00000000006d99f0 0000000000000004 W bool OT::hb_accelerate_subtables_context_t::apply_to<OT::ChainContextFormat3>(void const*, OT::hb_ot_apply_context_t*)
00000000006d9a00 0000000000000004 W bool OT::hb_accelerate_subtables_context_t::apply_cached_to<OT::ChainContextFormat3>(void const*, OT::hb_ot_apply_context_t*)
00000000006d9a10 000000000000037c t OT::ChainContextFormat3::sanitize(hb_sanitize_context_t*) const
00000000006d9d90 0000000000000200 t OT::Layout::GPOS_impl::ValueFormat::sanitize_value_devices(hb_sanitize_context_t*, OT::Layout::GPOS_impl::ValueBase const*, OT::IntType<unsigned short, 2u> const*) const
00000000006d9f90 00000000000000cc t OT::Layout::GPOS_impl::ValueFormat::get_device(OT::IntType<unsigned short, 2u> const*, bool*, OT::Layout::GPOS_impl::ValueBase const*, hb_sanitize_context_t&)
00000000006da060 0000000000000400 t OT::Layout::GPOS_impl::ValueFormat::apply_value(OT::hb_ot_apply_context_t*, OT::Layout::GPOS_impl::ValueBase const*, OT::IntType<unsigned short, 2u> const*, hb_glyph_position_t&) const
00000000006da460 0000000000000104 W bool OT::hb_accelerate_subtables_context_t::apply_cached_to<OT::Layout::GPOS_impl::SinglePosFormat1>(void const*, OT::hb_ot_apply_context_t*)
00000000006da570 000000000000012c W bool OT::hb_accelerate_subtables_context_t::apply_cached_to<OT::Layout::GPOS_impl::SinglePosFormat2>(void const*, OT::hb_ot_apply_context_t*)
00000000006da6a0 0000000000000104 W bool OT::hb_accelerate_subtables_context_t::apply_to<OT::Layout::GPOS_impl::SinglePosFormat1>(void const*, OT::hb_ot_apply_context_t*)
00000000006da7b0 000000000000012c W bool OT::hb_accelerate_subtables_context_t::apply_to<OT::Layout::GPOS_impl::SinglePosFormat2>(void const*, OT::hb_ot_apply_context_t*)
00000000006da8e0 00000000000001bc t OT::Layout::GPOS_impl::SinglePosFormat1::sanitize(hb_sanitize_context_t*) const
00000000006daaa0 0000000000000160 t OT::Layout::GPOS_impl::Anchor::sanitize(hb_sanitize_context_t*) const
00000000006dac00 0000000000000174 t OT::Layout::GPOS_impl::Anchor::get_anchor(OT::hb_ot_apply_context_t*, unsigned int, float*, float*) const
00000000006dad80 0000000000000234 t OT::Layout::GPOS_impl::CursivePosFormat1::sanitize(hb_sanitize_context_t*) const
00000000006dafc0 00000000000006ac t OT::Layout::GPOS_impl::CursivePosFormat1::apply(OT::hb_ot_apply_context_t*) const
00000000006db670 0000000000000004 W bool OT::hb_accelerate_subtables_context_t::apply_to<OT::Layout::GPOS_impl::CursivePosFormat1>(void const*, OT::hb_ot_apply_context_t*)
00000000006db680 0000000000000004 W bool OT::hb_accelerate_subtables_context_t::apply_cached_to<OT::Layout::GPOS_impl::CursivePosFormat1>(void const*, OT::hb_ot_apply_context_t*)
00000000006db690 000000000000012c t OT::Layout::GPOS_impl::AnchorMatrix::sanitize(hb_sanitize_context_t*, unsigned int) const
00000000006db7c0 00000000000004fc t OT::Layout::GPOS_impl::MarkArray::apply(OT::hb_ot_apply_context_t*, unsigned int, unsigned int, OT::Layout::GPOS_impl::AnchorMatrix const&, unsigned int, unsigned int) const
00000000006dbcc0 00000000000002dc t OT::Layout::GSUB_impl::ReverseChainSingleSubstFormat1::sanitize(hb_sanitize_context_t*) const
00000000006dbfa0 00000000000006a0 t OT::Layout::GSUB_impl::ReverseChainSingleSubstFormat1::apply(OT::hb_ot_apply_context_t*) const
00000000006dc640 0000000000000004 W bool OT::hb_accelerate_subtables_context_t::apply_to<OT::Layout::GSUB_impl::ReverseChainSingleSubstFormat1>(void const*, OT::hb_ot_apply_context_t*)
00000000006dc650 0000000000000004 W bool OT::hb_accelerate_subtables_context_t::apply_cached_to<OT::Layout::GSUB_impl::ReverseChainSingleSubstFormat1>(void const*, OT::hb_ot_apply_context_t*)
00000000006dc660 0000000000000040 t hb_ot_layout_position_start(hb_font_t*, hb_buffer_t*)
00000000006dc6a0 0000000000000004 t hb_ot_layout_position_finish_advances(hb_font_t*, hb_buffer_t*)
00000000006dc6b0 00000000000000f8 t hb_ot_layout_position_finish_offsets(hb_font_t*, hb_buffer_t*)
00000000006dc7b0 0000000000000004 t hb_ot_layout_substitute_lookup(OT::hb_ot_apply_context_t*, OT::Layout::GSUB_impl::SubstLookup const&, OT::hb_ot_layout_lookup_accelerator_t const&)
00000000006dc7c0 0000000000000384 t bool OT::Condition::evaluate<OT::ItemVarStoreInstancer>(int const*, unsigned int, OT::ItemVarStoreInstancer*) const
00000000006dcb50 0000000000000064 t OT::Layout::GSUB_impl::SubstLookupSubTable const& OT::Lookup::get_subtable<OT::Layout::GSUB_impl::SubstLookupSubTable>(unsigned int) const
00000000006dcbc0 000000000000018c t OT::hb_ot_layout_lookup_accelerator_t* OT::hb_ot_layout_lookup_accelerator_t::create<OT::Layout::GPOS_impl::PosLookup>(OT::Layout::GPOS_impl::PosLookup const&)
00000000006dcd50 0000000000000488 W OT::hb_ot_apply_context_t::return_t OT::Layout::GPOS_impl::PosLookup::dispatch_recurse_func<OT::hb_ot_apply_context_t>(OT::hb_ot_apply_context_t*, unsigned int)
00000000006dd1e0 000000000000018c t OT::hb_ot_layout_lookup_accelerator_t* OT::hb_ot_layout_lookup_accelerator_t::create<OT::Layout::GSUB_impl::SubstLookup>(OT::Layout::GSUB_impl::SubstLookup const&)
00000000006dd370 0000000000000488 W OT::hb_ot_apply_context_t::return_t OT::Layout::GSUB_impl::SubstLookup::dispatch_recurse_func<OT::hb_ot_apply_context_t>(OT::hb_ot_apply_context_t*, unsigned int)
00000000006dd800 0000000000000044 t hb_set_digest_combiner_t<hb_set_digest_bits_pattern_t<unsigned long, 4u>, hb_set_digest_combiner_t<hb_set_digest_bits_pattern_t<unsigned long, 0u>, hb_set_digest_bits_pattern_t<unsigned long, 9u> > >::may_have(hb_set_digest_combiner_t<hb_set_digest_bits_pattern_t<unsigned long, 4u>, hb_set_digest_combiner_t<hb_set_digest_bits_pattern_t<unsigned long, 0u>, hb_set_digest_bits_pattern_t<unsigned long, 9u> > > const&) const
00000000006dd850 0000000000000300 t OT::hb_would_apply_context_t::return_t OT::Context::dispatch<OT::hb_would_apply_context_t>(OT::hb_would_apply_context_t*) const
00000000006ddb50 0000000000000504 t OT::Layout::GPOS_impl::PairPosFormat2_4<OT::Layout::SmallTypes>::apply(OT::hb_ot_apply_context_t*) const
00000000006de060 0000000000000004 W bool OT::hb_accelerate_subtables_context_t::apply_to<OT::Layout::GPOS_impl::PairPosFormat2_4<OT::Layout::SmallTypes> >(void const*, OT::hb_ot_apply_context_t*)
00000000006de070 0000000000000004 W bool OT::hb_accelerate_subtables_context_t::apply_cached_to<OT::Layout::GPOS_impl::PairPosFormat2_4<OT::Layout::SmallTypes> >(void const*, OT::hb_ot_apply_context_t*)
00000000006de080 00000000000003b4 t OT::Layout::GPOS_impl::MarkBasePosFormat1_2<OT::Layout::SmallTypes>::apply(OT::hb_ot_apply_context_t*) const
00000000006de440 0000000000000004 W bool OT::hb_accelerate_subtables_context_t::apply_cached_to<OT::Layout::GPOS_impl::MarkBasePosFormat1_2<OT::Layout::SmallTypes> >(void const*, OT::hb_ot_apply_context_t*)
00000000006de450 0000000000000004 W bool OT::hb_accelerate_subtables_context_t::apply_to<OT::Layout::GPOS_impl::MarkBasePosFormat1_2<OT::Layout::SmallTypes> >(void const*, OT::hb_ot_apply_context_t*)
00000000006de460 00000000000003ac t OT::Layout::GPOS_impl::MarkLigPosFormat1_2<OT::Layout::SmallTypes>::apply(OT::hb_ot_apply_context_t*) const
00000000006de810 0000000000000004 W bool OT::hb_accelerate_subtables_context_t::apply_cached_to<OT::Layout::GPOS_impl::MarkLigPosFormat1_2<OT::Layout::SmallTypes> >(void const*, OT::hb_ot_apply_context_t*)
00000000006de820 0000000000000004 W bool OT::hb_accelerate_subtables_context_t::apply_to<OT::Layout::GPOS_impl::MarkLigPosFormat1_2<OT::Layout::SmallTypes> >(void const*, OT::hb_ot_apply_context_t*)
00000000006de830 0000000000000368 t OT::Layout::GPOS_impl::MarkMarkPosFormat1_2<OT::Layout::SmallTypes>::apply(OT::hb_ot_apply_context_t*) const
00000000006deba0 0000000000000004 W bool OT::hb_accelerate_subtables_context_t::apply_cached_to<OT::Layout::GPOS_impl::MarkMarkPosFormat1_2<OT::Layout::SmallTypes> >(void const*, OT::hb_ot_apply_context_t*)
00000000006debb0 0000000000000004 W bool OT::hb_accelerate_subtables_context_t::apply_to<OT::Layout::GPOS_impl::MarkMarkPosFormat1_2<OT::Layout::SmallTypes> >(void const*, OT::hb_ot_apply_context_t*)
00000000006debc0 00000000000002ec t OT::RecordListOf<OT::Script>::sanitize(hb_sanitize_context_t*) const
00000000006deeb0 0000000000000300 t OT::RecordListOf<OT::Feature>::sanitize(hb_sanitize_context_t*) const
00000000006df1b0 0000000000000168 t OT::Layout::GSUB_impl::LigatureSubstFormat1_2<OT::Layout::SmallTypes>::would_apply(OT::hb_would_apply_context_t*) const
00000000006df320 00000000000002b8 t OT::Layout::GPOS_impl::PairSet<OT::Layout::SmallTypes>::apply(OT::hb_ot_apply_context_t*, OT::Layout::GPOS_impl::ValueFormat const*, unsigned int) const
00000000006df5e0 000000000000029c t OT::Layout::GPOS_impl::PairPosFormat1_3<OT::Layout::SmallTypes>::apply(OT::hb_ot_apply_context_t*) const
00000000006df880 0000000000000004 W bool OT::hb_accelerate_subtables_context_t::apply_to<OT::Layout::GPOS_impl::PairPosFormat1_3<OT::Layout::SmallTypes> >(void const*, OT::hb_ot_apply_context_t*)
00000000006df890 0000000000000004 W bool OT::hb_accelerate_subtables_context_t::apply_cached_to<OT::Layout::GPOS_impl::PairPosFormat1_3<OT::Layout::SmallTypes> >(void const*, OT::hb_ot_apply_context_t*)
00000000006df8a0 0000000000000800 t OT::RuleSet<OT::Layout::SmallTypes>::apply(OT::hb_ot_apply_context_t*, OT::ContextApplyLookupContext const&) const
00000000006e00a0 00000000000000d8 W bool OT::hb_accelerate_subtables_context_t::apply_to<OT::ContextFormat1_4<OT::Layout::SmallTypes> >(void const*, OT::hb_ot_apply_context_t*)
00000000006e0180 0000000000000124 W bool OT::hb_accelerate_subtables_context_t::apply_cached_to<OT::ContextFormat2_5<OT::Layout::SmallTypes> >(void const*, OT::hb_ot_apply_context_t*)
00000000006e02b0 00000000000000d8 W bool OT::hb_accelerate_subtables_context_t::apply_cached_to<OT::ContextFormat1_4<OT::Layout::SmallTypes> >(void const*, OT::hb_ot_apply_context_t*)
00000000006e0390 00000000000000fc W bool OT::hb_accelerate_subtables_context_t::apply_to<OT::ContextFormat2_5<OT::Layout::SmallTypes> >(void const*, OT::hb_ot_apply_context_t*)
00000000006e0490 000000000000078c t void AAT::StateTableDriver<AAT::ObsoleteTypes, void>::drive<AAT::KerxSubTableFormat1<OT::KernOTSubTableHeader>::driver_context_t>(AAT::KerxSubTableFormat1<OT::KernOTSubTableHeader>::driver_context_t*, AAT::hb_aat_apply_context_t*)
00000000006e0c20 000000000000078c t void AAT::StateTableDriver<AAT::ObsoleteTypes, void>::drive<AAT::KerxSubTableFormat1<OT::KernAATSubTableHeader>::driver_context_t>(AAT::KerxSubTableFormat1<OT::KernAATSubTableHeader>::driver_context_t*, AAT::hb_aat_apply_context_t*)
00000000006e13b0 0000000000000198 t OT::Layout::GSUB_impl::AlternateSet<OT::Layout::SmallTypes>::apply(OT::hb_ot_apply_context_t*) const
00000000006e1550 00000000000000c0 W bool OT::hb_accelerate_subtables_context_t::apply_to<OT::Layout::GSUB_impl::AlternateSubstFormat1_2<OT::Layout::SmallTypes> >(void const*, OT::hb_ot_apply_context_t*)
00000000006e1610 00000000000000c0 W bool OT::hb_accelerate_subtables_context_t::apply_cached_to<OT::Layout::GSUB_impl::AlternateSubstFormat1_2<OT::Layout::SmallTypes> >(void const*, OT::hb_ot_apply_context_t*)
00000000006e16d0 0000000000000178 t OT::ChainRuleSet<OT::Layout::SmallTypes>::would_apply(OT::hb_would_apply_context_t*, OT::ChainContextApplyLookupContext const&) const
00000000006e1850 000000000000028c t OT::hb_would_apply_context_t::return_t OT::ChainContext::dispatch<OT::hb_would_apply_context_t>(OT::hb_would_apply_context_t*) const
00000000006e1ae0 0000000000000148 t OT::hb_would_apply_context_t::return_t OT::Layout::GSUB_impl::SubstLookupSubTable::dispatch<OT::hb_would_apply_context_t>(OT::hb_would_apply_context_t*, unsigned int) const
00000000006e1c30 0000000000000a08 t OT::ChainRule<OT::Layout::SmallTypes>::apply(OT::hb_ot_apply_context_t*, OT::ChainContextApplyLookupContext const&) const
00000000006e2640 0000000000000938 t OT::ChainRuleSet<OT::Layout::SmallTypes>::apply(OT::hb_ot_apply_context_t*, OT::ChainContextApplyLookupContext const&) const
00000000006e2f80 00000000000000e4 W bool OT::hb_accelerate_subtables_context_t::apply_to<OT::ChainContextFormat1_4<OT::Layout::SmallTypes> >(void const*, OT::hb_ot_apply_context_t*)
00000000006e3070 0000000000000178 W bool OT::hb_accelerate_subtables_context_t::apply_cached_to<OT::ChainContextFormat2_5<OT::Layout::SmallTypes> >(void const*, OT::hb_ot_apply_context_t*)
00000000006e31f0 00000000000000e4 W bool OT::hb_accelerate_subtables_context_t::apply_cached_to<OT::ChainContextFormat1_4<OT::Layout::SmallTypes> >(void const*, OT::hb_ot_apply_context_t*)
00000000006e32e0 000000000000012c W bool OT::hb_accelerate_subtables_context_t::apply_to<OT::ChainContextFormat2_5<OT::Layout::SmallTypes> >(void const*, OT::hb_ot_apply_context_t*)
00000000006e3410 0000000000000afc t OT::Layout::GSUB_impl::Ligature<OT::Layout::SmallTypes>::apply(OT::hb_ot_apply_context_t*) const
00000000006e3f10 000000000000042c t OT::Layout::GSUB_impl::LigatureSet<OT::Layout::SmallTypes>::apply(OT::hb_ot_apply_context_t*) const
00000000006e4340 00000000000000c0 W bool OT::hb_accelerate_subtables_context_t::apply_to<OT::Layout::GSUB_impl::LigatureSubstFormat1_2<OT::Layout::SmallTypes> >(void const*, OT::hb_ot_apply_context_t*)
00000000006e4400 00000000000000c0 W bool OT::hb_accelerate_subtables_context_t::apply_cached_to<OT::Layout::GSUB_impl::LigatureSubstFormat1_2<OT::Layout::SmallTypes> >(void const*, OT::hb_ot_apply_context_t*)
00000000006e44c0 00000000000001c0 t hb_sanitize_context_t::return_t OT::Layout::GPOS_impl::SinglePos::dispatch<hb_sanitize_context_t>(hb_sanitize_context_t*) const
00000000006e4680 0000000000000238 t hb_sanitize_context_t::return_t OT::Layout::GSUB_impl::SingleSubst::dispatch<hb_sanitize_context_t>(hb_sanitize_context_t*) const
00000000006e48c0 0000000000000444 t AAT::KerxTable<OT::KernOT>::sanitize(hb_sanitize_context_t*) const
00000000006e4d10 0000000000000268 t hb_sanitize_context_t::return_t OT::KernSubTable<OT::KernAATSubTableHeader>::dispatch<hb_sanitize_context_t>(hb_sanitize_context_t*) const
00000000006e4f80 0000000000000234 t AAT::KerxTable<OT::KernAAT>::sanitize(hb_sanitize_context_t*) const
00000000006e51c0 0000000000000bac W OT::kern::accelerator_t::accelerator_t(hb_face_t*)
00000000006e51c0 0000000000000bac t OT::kern::accelerator_t::accelerator_t(hb_face_t*)
00000000006e5d70 0000000000000114 t hb_ot_layout_has_kerning(hb_face_t*)
00000000006e5e90 00000000000001b4 t hb_ot_layout_has_machine_kerning(hb_face_t*)
00000000006e6050 00000000000001ac t hb_ot_layout_has_cross_kerning(hb_face_t*)
00000000006e6200 0000000000000354 t OT::Layout::GPOS_impl::PairPosFormat1_3<OT::Layout::SmallTypes>::sanitize(hb_sanitize_context_t*) const
00000000006e6560 0000000000000300 t OT::Layout::GPOS_impl::PairPosFormat2_4<OT::Layout::SmallTypes>::sanitize(hb_sanitize_context_t*) const
00000000006e6860 00000000000002a0 t OT::Layout::GPOS_impl::MarkBasePosFormat1_2<OT::Layout::SmallTypes>::sanitize(hb_sanitize_context_t*) const
00000000006e6b00 000000000000037c t OT::Layout::GPOS_impl::MarkLigPosFormat1_2<OT::Layout::SmallTypes>::sanitize(hb_sanitize_context_t*) const
00000000006e6e80 00000000000002a0 t OT::Layout::GPOS_impl::MarkMarkPosFormat1_2<OT::Layout::SmallTypes>::sanitize(hb_sanitize_context_t*) const
00000000006e7120 00000000000001c4 t OT::Layout::GSUB_impl::MultipleSubstFormat1_2<OT::Layout::SmallTypes>::sanitize(hb_sanitize_context_t*) const
00000000006e72f0 00000000000001c4 t OT::Layout::GSUB_impl::AlternateSubstFormat1_2<OT::Layout::SmallTypes>::sanitize(hb_sanitize_context_t*) const
00000000006e74c0 0000000000000160 t OT::RuleSet<OT::Layout::SmallTypes>::sanitize(hb_sanitize_context_t*) const
00000000006e7620 00000000000001dc t OT::ContextFormat2_5<OT::Layout::SmallTypes>::sanitize(hb_sanitize_context_t*) const
00000000006e7800 0000000000000184 t OT::ContextFormat1_4<OT::Layout::SmallTypes>::sanitize(hb_sanitize_context_t*) const
00000000006e7990 00000000000001d0 t OT::ChainRuleSet<OT::Layout::SmallTypes>::sanitize(hb_sanitize_context_t*) const
00000000006e7b60 0000000000000284 t OT::ChainContextFormat2_5<OT::Layout::SmallTypes>::sanitize(hb_sanitize_context_t*) const
00000000006e7df0 0000000000000184 t OT::ChainContextFormat1_4<OT::Layout::SmallTypes>::sanitize(hb_sanitize_context_t*) const
00000000006e7f80 0000000000000224 t hb_sanitize_context_t::return_t OT::Layout::GPOS_impl::PosLookupSubTable::dispatch<hb_sanitize_context_t>(hb_sanitize_context_t*, unsigned int) const
00000000006e81b0 00000000000002dc t bool OT::Lookup::sanitize<OT::Layout::GPOS_impl::PosLookupSubTable>(hb_sanitize_context_t*) const
00000000006e8490 00000000000002a8 t bool OT::GSUBGPOSVersion1_2<OT::Layout::SmallTypes>::sanitize<OT::Layout::GPOS_impl::PosLookup>(hb_sanitize_context_t*) const
00000000006e8740 00000000000002fc W OT::GSUBGPOS::accelerator_t<OT::Layout::GPOS>::accelerator_t(hb_face_t*)
00000000006e8740 00000000000002fc t OT::GSUBGPOS::accelerator_t<OT::Layout::GPOS>::accelerator_t(hb_face_t*)
00000000006e8a40 0000000000000130 T hb_ot_layout_has_positioning
00000000006e8b70 0000000000000168 t OT::Layout::GSUB_impl::LigatureSet<OT::Layout::SmallTypes>::sanitize(hb_sanitize_context_t*) const
00000000006e8ce0 0000000000000184 t OT::Layout::GSUB_impl::LigatureSubstFormat1_2<OT::Layout::SmallTypes>::sanitize(hb_sanitize_context_t*) const
00000000006e8e70 00000000000001ec t hb_sanitize_context_t::return_t OT::Layout::GSUB_impl::SubstLookupSubTable::dispatch<hb_sanitize_context_t>(hb_sanitize_context_t*, unsigned int) const
00000000006e9060 0000000000000278 t bool OT::Lookup::sanitize<OT::Layout::GSUB_impl::SubstLookupSubTable>(hb_sanitize_context_t*) const
00000000006e92e0 00000000000002a8 t bool OT::GSUBGPOSVersion1_2<OT::Layout::SmallTypes>::sanitize<OT::Layout::GSUB_impl::SubstLookup>(hb_sanitize_context_t*) const
00000000006e9590 00000000000002fc W OT::GSUBGPOS::accelerator_t<OT::Layout::GSUB>::accelerator_t(hb_face_t*)
00000000006e9590 00000000000002fc t OT::GSUBGPOS::accelerator_t<OT::Layout::GSUB>::accelerator_t(hb_face_t*)
00000000006e9890 0000000000000108 t hb_lazy_loader_t<OT::GSUB_accelerator_t, hb_face_lazy_loader_t<OT::GSUB_accelerator_t, 25u>, hb_face_t, 25u, OT::GSUB_accelerator_t>::get_stored() const
00000000006e99a0 00000000000001a4 t get_gsubgpos_table(hb_face_t*, unsigned int)
00000000006e9b50 0000000000000354 T hb_ot_layout_table_select_script
00000000006e9eb0 0000000000000120 t hb_ot_layout_table_find_feature(hb_face_t*, unsigned int, unsigned int, unsigned int*)
00000000006e9fd0 000000000000021c T hb_ot_layout_script_select_language2
00000000006ea1f0 0000000000000008 T hb_ot_layout_script_select_language
00000000006ea200 00000000000001ac T hb_ot_layout_language_get_required_feature
00000000006ea3b0 0000000000000218 T hb_ot_layout_language_find_feature
00000000006ea5d0 0000000000000054 T hb_ot_layout_table_get_lookup_count
00000000006ea630 0000000000000348 T hb_ot_layout_collect_features_map
00000000006ea980 0000000000000258 T hb_ot_layout_feature_with_variations_get_lookups
00000000006eabe0 0000000000000130 T hb_ot_layout_has_substitution
00000000006ead10 0000000000000538 t OT::GDEF::is_blocklisted(hb_blob_t*, hb_face_t*) const
00000000006eb250 0000000000000124 T hb_ot_layout_has_glyph_classes
00000000006eb380 0000000000000148 t hb_ot_layout_substitute_start(hb_font_t*, hb_buffer_t*)
00000000006eb4d0 0000000000000298 T hb_ot_layout_table_find_feature_variations
00000000006eb770 0000000000000628 t OT::hb_kern_machine_t<AAT::KerxSubTableFormat0<OT::KernOTSubTableHeader>::accelerator_t>::kern(hb_font_t*, hb_buffer_t*, unsigned int, bool) const
00000000006ebda0 0000000000000660 t OT::hb_kern_machine_t<AAT::KerxSubTableFormat2<OT::KernOTSubTableHeader>::accelerator_t>::kern(hb_font_t*, hb_buffer_t*, unsigned int, bool) const
00000000006ec400 00000000000005c0 t OT::hb_kern_machine_t<OT::KernSubTableFormat3<OT::KernOTSubTableHeader> >::kern(hb_font_t*, hb_buffer_t*, unsigned int, bool) const
00000000006ec9c0 0000000000000628 t OT::hb_kern_machine_t<AAT::KerxSubTableFormat0<OT::KernAATSubTableHeader>::accelerator_t>::kern(hb_font_t*, hb_buffer_t*, unsigned int, bool) const
00000000006ecff0 0000000000000660 t OT::hb_kern_machine_t<AAT::KerxSubTableFormat2<OT::KernAATSubTableHeader>::accelerator_t>::kern(hb_font_t*, hb_buffer_t*, unsigned int, bool) const
00000000006ed650 00000000000005c0 t OT::hb_kern_machine_t<OT::KernSubTableFormat3<OT::KernAATSubTableHeader> >::kern(hb_font_t*, hb_buffer_t*, unsigned int, bool) const
00000000006edc10 00000000000011ec t hb_ot_layout_kern(hb_ot_shape_plan_t const*, hb_font_t*, hb_buffer_t*)
00000000006eee00 00000000000006c0 t void hb_ot_map_t::apply<GSUBProxy>(GSUBProxy const&, hb_ot_shape_plan_t const*, hb_font_t*, hb_buffer_t*) const
00000000006ef4c0 00000000000001d4 t hb_ot_map_t::substitute(hb_ot_shape_plan_t const*, hb_font_t*, hb_buffer_t*) const
00000000006ef6a0 00000000000007bc t void hb_ot_map_t::apply<GPOSProxy>(GPOSProxy const&, hb_ot_shape_plan_t const*, hb_font_t*, hb_buffer_t*) const
00000000006efe60 00000000000001d4 t hb_ot_map_t::position(hb_ot_shape_plan_t const*, hb_font_t*, hb_buffer_t*) const
00000000006f0040 00000000000003bc T hb_ot_layout_lookup_would_substitute
00000000006f0400 0000000000000018 W hb_ot_map_t::feature_map_t::cmp(void const*, void const*)
00000000006f0420 0000000000000018 W hb_ot_map_t::lookup_map_t::cmp(void const*, void const*)
00000000006f0440 0000000000000034 W hb_ot_map_builder_t::feature_info_t::cmp(void const*, void const*)
00000000006f0480 0000000000000420 t void sort_r_simple<>(void*, unsigned long, unsigned long, int (*)(void const*, void const*))
00000000006f08a0 0000000000000124 t hb_ot_map_builder_t::hb_ot_map_builder_t(hb_face_t*, hb_segment_properties_t const&)
00000000006f08a0 0000000000000124 T hb_ot_map_builder_t::hb_ot_map_builder_t(hb_face_t*, hb_segment_properties_t const&)
00000000006f09d0 00000000000000d4 t hb_ot_map_builder_t::~hb_ot_map_builder_t()
00000000006f09d0 00000000000000d4 T hb_ot_map_builder_t::~hb_ot_map_builder_t()
00000000006f0ab0 000000000000016c t hb_ot_map_builder_t::add_feature(unsigned int, hb_ot_map_feature_flags_t, unsigned int)
00000000006f0c20 0000000000000074 t hb_ot_map_builder_t::has_feature(unsigned int)
00000000006f0ca0 0000000000000258 t hb_ot_map_builder_t::add_lookups(hb_ot_map_t&, unsigned int, unsigned int, unsigned int, unsigned int, bool, bool, bool, bool, unsigned int)
00000000006f0f00 000000000000012c t hb_ot_map_builder_t::add_pause(unsigned int, bool (*)(hb_ot_shape_plan_t const*, hb_font_t*, hb_buffer_t*))
00000000006f1030 0000000000000fe8 t hb_ot_map_builder_t::compile(hb_ot_map_t&, hb_ot_shape_plan_key_t const&)
00000000006f2020 0000000000000210 t joining_type(unsigned int)
00000000006f2230 00000000000001f8 t collect_features_arabic(hb_ot_shape_planner_t*)
00000000006f2430 0000000000000070 t record_stch(hb_ot_shape_plan_t const*, hb_font_t*, hb_buffer_t*)
00000000006f24a0 0000000000000070 t arabic_fallback_plan_destroy(arabic_fallback_plan_t*) [clone .part.0]
00000000006f2510 0000000000000028 t hb_buffer_t::deallocate_var(unsigned int, unsigned int) [clone .part.0]
00000000006f2540 000000000000027c t reorder_marks_arabic(hb_ot_shape_plan_t const*, hb_buffer_t*, unsigned int, unsigned int)
00000000006f27c0 0000000000000084 W OT::Layout::Common::RangeRecord<OT::Layout::SmallTypes>::cmp_range(void const*, void const*)
00000000006f2850 0000000000000028 t OT::Lookup* hb_serialize_context_t::extend_size<OT::Lookup>(OT::Lookup*, unsigned long, bool) [clone .part.0]
00000000006f2880 0000000000000028 t OT::ArrayOf<OT::Offset<OT::IntType<unsigned short, 2u>, true>, OT::IntType<unsigned short, 2u> >* hb_serialize_context_t::extend_size<OT::ArrayOf<OT::Offset<OT::IntType<unsigned short, 2u>, true>, OT::IntType<unsigned short, 2u> > >(OT::ArrayOf<OT::Offset<OT::IntType<unsigned short, 2u>, true>, OT::IntType<unsigned short, 2u> >*, unsigned long, bool) [clone .part.0]
00000000006f28b0 0000000000000028 t OT::IntType<unsigned short, 2u>* hb_serialize_context_t::extend_size<OT::IntType<unsigned short, 2u> >(OT::IntType<unsigned short, 2u>*, unsigned long, bool) [clone .part.0]
00000000006f28e0 0000000000000028 t OT::ArrayOf<OT::OffsetTo<OT::Layout::GSUB_impl::LigatureSet<OT::Layout::SmallTypes>, OT::IntType<unsigned short, 2u>, void, true>, OT::IntType<unsigned short, 2u> >* hb_serialize_context_t::extend_size<OT::ArrayOf<OT::OffsetTo<OT::Layout::GSUB_impl::LigatureSet<OT::Layout::SmallTypes>, OT::IntType<unsigned short, 2u>, void, true>, OT::IntType<unsigned short, 2u> > >(OT::ArrayOf<OT::OffsetTo<OT::Layout::GSUB_impl::LigatureSet<OT::Layout::SmallTypes>, OT::IntType<unsigned short, 2u>, void, true>, OT::IntType<unsigned short, 2u> >*, unsigned long, bool) [clone .part.0]
00000000006f2910 0000000000000028 t void hb_serialize_context_t::add_link<OT::OffsetTo<OT::Layout::Common::Coverage, OT::IntType<unsigned short, 2u>, void, true> >(OT::OffsetTo<OT::Layout::Common::Coverage, OT::IntType<unsigned short, 2u>, void, true>&, unsigned int, hb_serialize_context_t::whence_t, unsigned int) [clone .part.0]
00000000006f2940 0000000000000028 t void hb_serialize_context_t::add_link<OT::OffsetTo<OT::Layout::GSUB_impl::SubstLookupSubTable, OT::IntType<unsigned short, 2u>, void, true> >(OT::OffsetTo<OT::Layout::GSUB_impl::SubstLookupSubTable, OT::IntType<unsigned short, 2u>, void, true>&, unsigned int, hb_serialize_context_t::whence_t, unsigned int) [clone .part.0]
00000000006f2970 0000000000000028 t hb_serialize_context_t::end_serialize() [clone .part.0]
00000000006f29a0 0000000000000028 t OT::Layout::Common::Coverage* hb_serialize_context_t::extend_size<OT::Layout::Common::Coverage>(OT::Layout::Common::Coverage*, unsigned long, bool) [clone .part.0]
00000000006f29d0 0000000000000028 t OT::ArrayOf<OT::HBGlyphID16, OT::IntType<unsigned short, 2u> >* hb_serialize_context_t::extend_size<OT::ArrayOf<OT::HBGlyphID16, OT::IntType<unsigned short, 2u> > >(OT::ArrayOf<OT::HBGlyphID16, OT::IntType<unsigned short, 2u> >*, unsigned long, bool) [clone .part.0]
00000000006f2a00 0000000000000028 t OT::Layout::Common::CoverageFormat2_4<OT::Layout::SmallTypes>* hb_serialize_context_t::extend_size<OT::Layout::Common::CoverageFormat2_4<OT::Layout::SmallTypes> >(OT::Layout::Common::CoverageFormat2_4<OT::Layout::SmallTypes>*, unsigned long, bool) [clone .part.0]
00000000006f2a30 0000000000000028 t OT::ArrayOf<OT::OffsetTo<OT::Layout::GSUB_impl::Ligature<OT::Layout::SmallTypes>, OT::IntType<unsigned short, 2u>, void, true>, OT::IntType<unsigned short, 2u> >* hb_serialize_context_t::extend_size<OT::ArrayOf<OT::OffsetTo<OT::Layout::GSUB_impl::Ligature<OT::Layout::SmallTypes>, OT::IntType<unsigned short, 2u>, void, true>, OT::IntType<unsigned short, 2u> > >(OT::ArrayOf<OT::OffsetTo<OT::Layout::GSUB_impl::Ligature<OT::Layout::SmallTypes>, OT::IntType<unsigned short, 2u>, void, true>, OT::IntType<unsigned short, 2u> >*, unsigned long, bool) [clone .part.0]
00000000006f2a60 0000000000000028 t OT::ArrayOf<OT::Layout::Common::RangeRecord<OT::Layout::SmallTypes>, OT::IntType<unsigned short, 2u> >* hb_serialize_context_t::extend_size<OT::ArrayOf<OT::Layout::Common::RangeRecord<OT::Layout::SmallTypes>, OT::IntType<unsigned short, 2u> > >(OT::ArrayOf<OT::Layout::Common::RangeRecord<OT::Layout::SmallTypes>, OT::IntType<unsigned short, 2u> >*, unsigned long, bool) [clone .part.0]
00000000006f2a90 0000000000000028 t OT::Layout::GSUB_impl::SubstLookup* hb_serialize_context_t::start_serialize<OT::Layout::GSUB_impl::SubstLookup>() [clone .part.0]
00000000006f2ac0 00000000000001a0 t fasthash64(void const*, unsigned long, unsigned long) [clone .constprop.0]
00000000006f2c60 0000000000000038 t data_destroy_arabic(void*)
00000000006f2ca0 0000000000000024 t deallocate_buffer_var(hb_ot_shape_plan_t const*, hb_font_t*, hb_buffer_t*)
00000000006f2cd0 0000000000000224 t data_create_arabic(hb_ot_shape_plan_t const*)
00000000006f2f00 00000000000003f8 t void sort_r_simple<>(void*, unsigned long, unsigned long, int (*)(void const*, void const*)) [clone .constprop.0]
00000000006f3300 000000000000057c t bool hb_hashmap_t<hb_serialize_context_t::object_t const*, unsigned int, false>::set_with_hash<hb_serialize_context_t::object_t const*, unsigned int>(hb_serialize_context_t::object_t const*&&, unsigned int, unsigned int&&, bool) [clone .isra.0]
00000000006f3880 00000000000007cc t postprocess_glyphs_arabic(hb_ot_shape_plan_t const*, hb_buffer_t*, hb_font_t*)
00000000006f4050 00000000000002ac t hb_serialize_context_t::discard_stale_objects()
00000000006f4300 0000000000000394 t hb_serialize_context_t::resolve_links()
00000000006f46a0 0000000000000380 t OT::Lookup::serialize(hb_serialize_context_t*, unsigned int, unsigned int, unsigned int)
00000000006f4a20 00000000000007c8 t setup_masks_arabic_plan(arabic_shape_plan_t const*, hb_buffer_t*, hb_script_t)
00000000006f51f0 000000000000000c t setup_masks_arabic(hb_ot_shape_plan_t const*, hb_buffer_t*, hb_font_t*)
00000000006f5200 0000000000000114 t hb_hashmap_t<hb_serialize_context_t::object_t const*, unsigned int, false>::fini()
00000000006f5320 0000000000000208 t hb_hashmap_t<hb_serialize_context_t::object_t const*, unsigned int, false>::alloc(unsigned int)
00000000006f5530 00000000000009ec t hb_serialize_context_t::pop_pack(bool)
00000000006f5f20 00000000000001bc t hb_pool_t<hb_serialize_context_t::object_t, 32u>::alloc()
00000000006f60e0 00000000000005e8 t arabic_fallback_plan_shape(arabic_fallback_plan_t*, hb_font_t*, hb_buffer_t*)
00000000006f66d0 00000000000001d4 t OT::ArrayOf<OT::HBGlyphID16, OT::IntType<unsigned short, 2u> >::serialize(hb_serialize_context_t*, unsigned int, bool)
00000000006f68b0 00000000000001dc t OT::ArrayOf<OT::Layout::Common::RangeRecord<OT::Layout::SmallTypes>, OT::IntType<unsigned short, 2u> >::serialize(hb_serialize_context_t*, unsigned int, bool)
00000000006f6a90 00000000000009d8 t bool OT::Layout::Common::Coverage::serialize<hb_map_iter_t<hb_zip_iter_t<hb_sorted_array_t<OT::HBGlyphID16>, hb_array_t<OT::HBGlyphID16> >, ._anon_115 const&, (hb_function_sortedness_t)1, (void*)0>, (void*)0>(hb_serialize_context_t*, hb_map_iter_t<hb_zip_iter_t<hb_sorted_array_t<OT::HBGlyphID16>, hb_array_t<OT::HBGlyphID16> >, ._anon_115 const&, (hb_function_sortedness_t)1, (void*)0>)
00000000006f7470 0000000000000584 t bool OT::Layout::GSUB_impl::SingleSubstFormat2_4<OT::Layout::SmallTypes>::serialize<hb_zip_iter_t<hb_sorted_array_t<OT::HBGlyphID16>, hb_array_t<OT::HBGlyphID16> >, (void*)0>(hb_serialize_context_t*, hb_zip_iter_t<hb_sorted_array_t<OT::HBGlyphID16>, hb_array_t<OT::HBGlyphID16> >)
00000000006f7a00 0000000000000688 t bool OT::Layout::GSUB_impl::SingleSubst::serialize<hb_zip_iter_t<hb_sorted_array_t<OT::HBGlyphID16>, hb_array_t<OT::HBGlyphID16> >, (void*)0>(hb_serialize_context_t*, hb_zip_iter_t<hb_sorted_array_t<OT::HBGlyphID16>, hb_array_t<OT::HBGlyphID16> >)
00000000006f8090 0000000000000ad8 t arabic_fallback_synthesize_lookup_single(hb_ot_shape_plan_t const*, hb_font_t*, unsigned int) [clone .isra.0]
00000000006f8b70 00000000000006cc t bool OT::OffsetTo<OT::Layout::Common::Coverage, OT::IntType<unsigned short, 2u>, void, true>::serialize_serialize<hb_sorted_array_t<OT::HBGlyphID16 const>&>(hb_serialize_context_t*, hb_sorted_array_t<OT::HBGlyphID16 const>&)
00000000006f9240 00000000000012ac t OT::Layout::GSUB_impl::SubstLookup::serialize_ligature(hb_serialize_context_t*, unsigned int, hb_sorted_array_t<OT::HBGlyphID16 const>, hb_array_t<unsigned int const>, hb_array_t<OT::HBGlyphID16 const>, hb_array_t<unsigned int const>, hb_array_t<OT::HBGlyphID16 const>) [clone .isra.0]
00000000006fa4f0 00000000000006b0 t OT::Layout::GSUB_impl::SubstLookup* arabic_fallback_synthesize_lookup_ligature<ligature_mark_set_t [1]>(hb_ot_shape_plan_t const*, hb_font_t*, ligature_mark_set_t const (&) [1], unsigned int) [clone .constprop.0]
00000000006faba0 000000000000083c t OT::Layout::GSUB_impl::SubstLookup* arabic_fallback_synthesize_lookup_ligature<ligature_set_t [18]>(hb_ot_shape_plan_t const*, hb_font_t*, ligature_set_t const (&) [18], unsigned int) [clone .constprop.0]
00000000006fb3e0 00000000000006d8 t OT::Layout::GSUB_impl::SubstLookup* arabic_fallback_synthesize_lookup_ligature<ligature_3_set_t [1]>(hb_ot_shape_plan_t const*, hb_font_t*, ligature_3_set_t const (&) [1], unsigned int) [clone .constprop.0]
00000000006fbac0 0000000000000258 t arabic_fallback_shape(hb_ot_shape_plan_t const*, hb_font_t*, hb_buffer_t*)
00000000006fbd20 0000000000000004 t data_destroy_hangul(void*)
00000000006fbd30 0000000000000060 t collect_features_hangul(hb_ot_shape_planner_t*)
00000000006fbd90 0000000000000018 t override_features_hangul(hb_ot_shape_planner_t*)
00000000006fbdb0 000000000000007c t setup_masks_hangul(hb_ot_shape_plan_t const*, hb_buffer_t*, hb_font_t*)
00000000006fbe30 0000000000000028 t bool hb_buffer_t::replace_glyphs<unsigned int>(unsigned int, unsigned int, unsigned int const*) [clone .part.0]
00000000006fbe60 00000000000000cc t data_create_hangul(hb_ot_shape_plan_t const*)
00000000006fbf30 00000000000016c4 t preprocess_text_hangul(hb_ot_shape_plan_t const*, hb_buffer_t*, hb_font_t*)
00000000006fd600 00000000000000f4 t reorder_marks_hebrew(hb_ot_shape_plan_t const*, hb_buffer_t*, unsigned int, unsigned int)
00000000006fd700 0000000000000204 t compose_hebrew(hb_ot_shape_normalize_context_t const*, unsigned int, unsigned int, unsigned int*)
00000000006fd910 00000000000000d8 t compose_indic(hb_ot_shape_normalize_context_t const*, unsigned int, unsigned int, unsigned int*)
00000000006fd9f0 0000000000000014 t preprocess_text_indic(hb_ot_shape_plan_t const*, hb_buffer_t*, hb_font_t*)
00000000006fda10 0000000000000004 t data_destroy_indic(void*)
00000000006fda20 0000000000000044 t override_features_indic(hb_ot_shape_planner_t*)
00000000006fda70 00000000000000f0 t collect_features_indic(hb_ot_shape_planner_t*)
00000000006fdb60 0000000000000028 t hb_buffer_t::allocate_var(unsigned int, unsigned int) [clone .part.0]
00000000006fdb90 0000000000000028 t hb_buffer_t::deallocate_var(unsigned int, unsigned int) [clone .part.0]
00000000006fdbc0 0000000000000064 t decompose_indic(hb_ot_shape_normalize_context_t const*, unsigned int, unsigned int*, unsigned int*)
00000000006fdc30 0000000000000070 t setup_masks_indic(hb_ot_shape_plan_t const*, hb_buffer_t*, hb_font_t*)
00000000006fdca0 00000000000010e8 t initial_reordering_consonant_syllable(hb_ot_shape_plan_t const*, hb_face_t*, hb_buffer_t*, unsigned int, unsigned int) [clone .isra.0]
00000000006fed90 0000000000000f60 t final_reordering_indic(hb_ot_shape_plan_t const*, hb_font_t*, hb_buffer_t*)
00000000006ffcf0 0000000000000590 t initial_reordering_indic(hb_ot_shape_plan_t const*, hb_font_t*, hb_buffer_t*)
0000000000700280 0000000000000650 t find_syllables_indic(hb_buffer_t*)
00000000007008d0 0000000000000264 t setup_syllables_indic(hb_ot_shape_plan_t const*, hb_font_t*, hb_buffer_t*)
0000000000700b40 0000000000000134 t hb_indic_would_substitute_feature_t::init(hb_ot_map_t const*, unsigned int, bool)
0000000000700c80 000000000000020c t data_create_indic(hb_ot_shape_plan_t const*)
0000000000700e90 0000000000000084 t decompose_khmer(hb_ot_shape_normalize_context_t const*, unsigned int, unsigned int*, unsigned int*)
0000000000700f20 00000000000000b0 t compose_khmer(hb_ot_shape_normalize_context_t const*, unsigned int, unsigned int, unsigned int*)
0000000000700fd0 0000000000000004 t data_destroy_khmer(void*)
0000000000700fe0 00000000000000a0 t override_features_khmer(hb_ot_shape_planner_t*)
0000000000701080 00000000000000d8 t collect_features_khmer(hb_ot_shape_planner_t*)
0000000000701160 0000000000000028 t hb_buffer_t::allocate_var(unsigned int, unsigned int) [clone .part.0]
0000000000701190 00000000000000c4 t data_create_khmer(hb_ot_shape_plan_t const*)
0000000000701260 0000000000000058 t setup_masks_khmer(hb_ot_shape_plan_t const*, hb_buffer_t*, hb_font_t*)
00000000007012c0 000000000000044c t reorder_khmer(hb_ot_shape_plan_t const*, hb_font_t*, hb_buffer_t*)
0000000000701710 0000000000000460 t find_syllables_khmer(hb_buffer_t*)
0000000000701b70 0000000000000264 t setup_syllables_khmer(hb_ot_shape_plan_t const*, hb_font_t*, hb_buffer_t*)
0000000000701de0 0000000000000010 t compare_myanmar_order(hb_glyph_info_t const*, hb_glyph_info_t const*)
0000000000701df0 00000000000000f8 t collect_features_myanmar(hb_ot_shape_planner_t*)
0000000000701ef0 0000000000000028 t hb_buffer_t::allocate_var(unsigned int, unsigned int) [clone .part.0]
0000000000701f20 0000000000000028 t hb_buffer_t::deallocate_var(unsigned int, unsigned int) [clone .part.0]
0000000000701f50 0000000000000064 t setup_masks_myanmar(hb_ot_shape_plan_t const*, hb_buffer_t*, hb_font_t*)
0000000000701fc0 00000000000006bc t reorder_myanmar(hb_ot_shape_plan_t const*, hb_font_t*, hb_buffer_t*)
0000000000702680 00000000000003a8 t find_syllables_myanmar(hb_buffer_t*)
0000000000702a30 0000000000000264 t setup_syllables_myanmar(hb_ot_shape_plan_t const*, hb_font_t*, hb_buffer_t*)
0000000000702ca0 0000000000000368 t hb_syllabic_insert_dotted_circles(hb_font_t*, hb_buffer_t*, unsigned int, unsigned int, int, int)
0000000000703010 0000000000000040 T hb_syllabic_clear_var(hb_ot_shape_plan_t const*, hb_font_t*, hb_buffer_t*)
0000000000703050 00000000000000f8 t thai_pua_shape(unsigned int, thai_action_t, hb_font_t*)
0000000000703150 0000000000000028 t bool hb_buffer_t::replace_glyphs<unsigned int>(unsigned int, unsigned int, unsigned int const*) [clone .part.0]
0000000000703180 00000000000006e4 t preprocess_text_thai(hb_ot_shape_plan_t const*, hb_buffer_t*, hb_font_t*)
0000000000703870 0000000000000034 t _hb_clear_substitution_flags(hb_ot_shape_plan_t const*, hb_font_t*, hb_buffer_t*)
00000000007038b0 00000000000000b0 t compose_use(hb_ot_shape_normalize_context_t const*, unsigned int, unsigned int, unsigned int*)
0000000000703960 0000000000000004 t preprocess_text_use(hb_ot_shape_plan_t const*, hb_buffer_t*, hb_font_t*)
0000000000703970 000000000000002c t data_destroy_use(void*)
00000000007039a0 00000000000001d8 t collect_features_use(hb_ot_shape_planner_t*)
0000000000703b80 0000000000000028 t hb_buffer_t::allocate_var(unsigned int, unsigned int) [clone .part.0]
0000000000703bb0 00000000000000ec t setup_masks_use(hb_ot_shape_plan_t const*, hb_buffer_t*, hb_font_t*)
0000000000703ca0 00000000000001d0 t data_create_use(hb_ot_shape_plan_t const*)
0000000000703e70 0000000000000044 t hb_iter_t<hb_filter_iter_t<hb_zip_iter_t<hb_iota_iter_t<unsigned int, unsigned int>, hb_array_t<hb_glyph_info_t> >, find_syllables_use(hb_buffer_t*)::{lambda(hb_glyph_info_t const&)#1}, ._anon_116 const&, (void*)0>, hb_pair_t<unsigned int, hb_glyph_info_t&> >::operator*() const
0000000000703ec0 00000000000000d8 t record_pref_use(hb_ot_shape_plan_t const*, hb_font_t*, hb_buffer_t*)
0000000000703fa0 00000000000000d4 t hb_filter_iter_t<hb_filter_iter_t<hb_zip_iter_t<hb_iota_iter_t<unsigned int, unsigned int>, hb_array_t<hb_glyph_info_t> >, find_syllables_use(hb_buffer_t*)::{lambda(hb_glyph_info_t const&)#1}, ._anon_116 const&, (void*)0>, find_syllables_use(hb_buffer_t*)::{lambda(hb_pair_t<unsigned int, hb_glyph_info_t const&>)#1}, ._anon_104 const&, (void*)0>::__prev__()
0000000000704080 00000000000000f4 t record_rphf_use(hb_ot_shape_plan_t const*, hb_font_t*, hb_buffer_t*)
0000000000704180 00000000000001b8 t machine_index_t<hb_zip_iter_t<hb_iota_iter_t<unsigned int, unsigned int>, hb_filter_iter_t<hb_filter_iter_t<hb_zip_iter_t<hb_iota_iter_t<unsigned int, unsigned int>, hb_array_t<hb_glyph_info_t> >, find_syllables_use(hb_buffer_t*)::{lambda(hb_glyph_info_t const&)#1}, ._anon_116 const&, (void*)0>, find_syllables_use(hb_buffer_t*)::{lambda(hb_pair_t<unsigned int, hb_glyph_info_t const&>)#1}, ._anon_104 const&, (void*)0> > >::operator=(machine_index_t<hb_zip_iter_t<hb_iota_iter_t<unsigned int, unsigned int>, hb_filter_iter_t<hb_filter_iter_t<hb_zip_iter_t<hb_iota_iter_t<unsigned int, unsigned int>, hb_array_t<hb_glyph_info_t> >, find_syllables_use(hb_buffer_t*)::{lambda(hb_glyph_info_t const&)#1}, ._anon_116 const&, (void*)0>, find_syllables_use(hb_buffer_t*)::{lambda(hb_pair_t<unsigned int, hb_glyph_info_t const&>)#1}, ._anon_104 const&, (void*)0> > > const&)
0000000000704340 0000000000002560 t find_syllables_use(hb_buffer_t*)
00000000007068a0 00000000000005f8 t setup_syllables_use(hb_ot_shape_plan_t const*, hb_font_t*, hb_buffer_t*)
0000000000706ea0 00000000000003b4 t reorder_use(hb_ot_shape_plan_t const*, hb_font_t*, hb_buffer_t*)
0000000000707260 00000000000000e4 t _output_dotted_circle(hb_buffer_t*)
0000000000707350 0000000000002030 t _hb_preprocess_text_vowel_constraints(hb_ot_shape_plan_t const*, hb_buffer_t*, hb_font_t*)
0000000000709380 0000000000000028 t hb_buffer_t::assert_var(unsigned int, unsigned int) [clone .part.0]
00000000007093b0 0000000000000818 t position_around_base(hb_ot_shape_plan_t const*, hb_font_t*, hb_buffer_t*, unsigned int, unsigned int, bool)
0000000000709bd0 00000000000001bc t _hb_ot_shape_fallback_mark_position_recategorize_marks(hb_ot_shape_plan_t const*, hb_font_t*, hb_buffer_t*)
0000000000709d90 000000000000024c t _hb_ot_shape_fallback_mark_position(hb_ot_shape_plan_t const*, hb_font_t*, hb_buffer_t*, bool)
0000000000709fe0 00000000000002dc t _hb_ot_shape_fallback_spaces(hb_ot_shape_plan_t const*, hb_font_t*, hb_buffer_t*)
000000000070a2c0 0000000000000bac t OT::hb_kern_machine_t<hb_ot_shape_fallback_kern_driver_t>::kern(hb_font_t*, hb_buffer_t*, unsigned int, bool) const
000000000070ae70 0000000000000304 t _hb_ot_shape_fallback_kern(hb_ot_shape_plan_t const*, hb_font_t*, hb_buffer_t*)
000000000070b180 0000000000000030 W hb_ot_shape_normalize_context_t::decompose_unicode(hb_ot_shape_normalize_context_t const*, unsigned int, unsigned int*, unsigned int*)
000000000070b1b0 0000000000000050 t compare_combining_class(hb_glyph_info_t const*, hb_glyph_info_t const*)
000000000070b200 0000000000000040 W hb_ot_shape_normalize_context_t::compose_unicode(hb_ot_shape_normalize_context_t const*, unsigned int, unsigned int, unsigned int*)
000000000070b240 00000000000002e0 t _hb_glyph_info_set_unicode_props(hb_glyph_info_t*, hb_buffer_t*)
000000000070b520 0000000000000028 t bool hb_buffer_t::replace_glyphs<unsigned int>(unsigned int, unsigned int, unsigned int const*) [clone .part.0]
000000000070b550 00000000000003f4 t decompose(hb_ot_shape_normalize_context_t const*, bool, unsigned int)
000000000070b950 00000000000003f4 t decompose_current_character(hb_ot_shape_normalize_context_t const*, bool)
000000000070bd50 0000000000000da0 t _hb_ot_shape_normalize(hb_ot_shape_plan_t const*, hb_buffer_t*, hb_font_t*)
000000000070caf0 0000000000000020 t TOUPPER(unsigned char)
000000000070cb10 0000000000000020 t TOLOWER(unsigned char)
000000000070cb30 00000000000001dc t parse_private_use_subtag(char const*, unsigned int*, unsigned int*, char const*, unsigned char (*)(unsigned char))
000000000070cd10 000000000000009c t subtag_matches(char const*, char const*, char const*, unsigned int)
000000000070cdb0 0000000000002860 T hb_ot_tags_from_script_and_language
000000000070f610 000000000000007c t hb_ucd_combining_class(hb_unicode_funcs_t*, unsigned int, void*)
000000000070f690 0000000000000070 t hb_ucd_general_category(hb_unicode_funcs_t*, unsigned int, void*)
000000000070f700 000000000000007c t hb_ucd_mirroring(hb_unicode_funcs_t*, unsigned int, void*)
000000000070f780 000000000000007c t hb_ucd_script(hb_unicode_funcs_t*, unsigned int, void*)
000000000070f800 00000000000001a8 t hb_ucd_decompose(hb_unicode_funcs_t*, unsigned int, unsigned int*, unsigned int*, void*)
000000000070f9b0 0000000000000160 t hb_ucd_compose(hb_unicode_funcs_t*, unsigned int, unsigned int, unsigned int*, void*)
000000000070fb10 000000000000012c t hb_ucd_get_unicode_funcs
000000000070fc40 00000000000001cc t _hb_buffer_serialize_unicode_text(hb_buffer_t*, unsigned int, unsigned int, char*, unsigned int, unsigned int*, hb_buffer_serialize_flags_t)
000000000070fe10 000000000000022c t _hb_buffer_serialize_unicode_json(hb_buffer_t*, unsigned int, unsigned int, char*, unsigned int, unsigned int*, hb_buffer_serialize_flags_t)
0000000000710040 0000000000000028 t hb_buffer_t::assert_unicode() [clone .part.0]
0000000000710070 00000000000000c8 T hb_buffer_serialize_unicode
0000000000710140 0000000000000004 t hb_paint_push_transform_nil(hb_paint_funcs_t*, void*, float, float, float, float, float, float, void*)
0000000000710150 0000000000000004 t hb_paint_pop_transform_nil(hb_paint_funcs_t*, void*, void*)
0000000000710160 0000000000000008 t hb_paint_color_glyph_nil(hb_paint_funcs_t*, void*, unsigned int, hb_font_t*, void*)
0000000000710170 0000000000000004 t hb_paint_push_clip_glyph_nil(hb_paint_funcs_t*, void*, unsigned int, hb_font_t*, void*)
0000000000710180 0000000000000004 t hb_paint_push_clip_rectangle_nil(hb_paint_funcs_t*, void*, float, float, float, float, void*)
0000000000710190 0000000000000004 t hb_paint_color_nil(hb_paint_funcs_t*, void*, int, unsigned int, void*)
00000000007101a0 0000000000000008 t hb_paint_image_nil(hb_paint_funcs_t*, void*, hb_blob_t*, unsigned int, unsigned int, unsigned int, float, hb_glyph_extents_t*, void*)
00000000007101b0 0000000000000004 t hb_paint_linear_gradient_nil(hb_paint_funcs_t*, void*, hb_color_line_t*, float, float, float, float, float, float, void*)
00000000007101c0 0000000000000004 t hb_paint_sweep_gradient_nil(hb_paint_funcs_t*, void*, hb_color_line_t*, float, float, float, float, void*)
00000000007101d0 0000000000000004 t hb_paint_pop_group_nil(hb_paint_funcs_t*, void*, hb_paint_composite_mode_t, void*)
00000000007101e0 000000000000008c t _hb_paint_funcs_set_middle(hb_paint_funcs_t*, void*, void (*)(void*))
0000000000710270 0000000000000004 t hb_paint_radial_gradient_nil(hb_paint_funcs_t*, void*, hb_color_line_t*, float, float, float, float, float, float, void*)
0000000000710280 0000000000000008 t hb_paint_custom_palette_color_nil(hb_paint_funcs_t*, void*, unsigned int, unsigned int*, void*)
0000000000710290 0000000000000004 t hb_paint_push_group_nil(hb_paint_funcs_t*, void*, void*)
00000000007102a0 0000000000000004 t hb_paint_pop_clip_nil(hb_paint_funcs_t*, void*, void*)
00000000007102b0 00000000000000d0 T hb_paint_funcs_set_push_transform_func
0000000000710380 00000000000000d0 T hb_paint_funcs_set_pop_transform_func
0000000000710450 00000000000000d0 T hb_paint_funcs_set_push_clip_glyph_func
0000000000710520 00000000000000d0 T hb_paint_funcs_set_push_clip_rectangle_func
00000000007105f0 00000000000000d0 T hb_paint_funcs_set_pop_clip_func
00000000007106c0 00000000000000d0 T hb_paint_funcs_set_color_func
0000000000710790 00000000000000d0 T hb_paint_funcs_set_image_func
0000000000710860 00000000000000d0 T hb_paint_funcs_set_linear_gradient_func
0000000000710930 00000000000000d0 T hb_paint_funcs_set_radial_gradient_func
0000000000710a00 00000000000000d0 T hb_paint_funcs_set_sweep_gradient_func
0000000000710ad0 00000000000000d0 T hb_paint_funcs_set_push_group_func
0000000000710ba0 00000000000000d0 T hb_paint_funcs_set_pop_group_func
0000000000710c70 0000000000000080 T hb_paint_funcs_create
0000000000710cf0 000000000000000c T hb_paint_funcs_get_empty
0000000000710d00 000000000000030c T hb_paint_funcs_destroy
0000000000711010 0000000000000018 T hb_paint_funcs_make_immutable
0000000000711030 00000000000002e0 t hb_indic_get_categories(unsigned int)
0000000000711320 0000000000000240 T atanf
0000000000711560 0000000000000050 T fmodf
00000000007115c0 00000000000001b0 T sinf
0000000000711780 00000000000001b4 T log
0000000000711940 0000000000000098 T sin
00000000007119e0 0000000000000004 T atan2
0000000000711a00 000000000000000c T lrintf
0000000000711a20 0000000000000008 T fabsf
0000000000711a40 0000000000000034 t with_errno
0000000000711a80 0000000000000018 t xflow
0000000000711aa0 000000000000000c t __math_uflow
0000000000711ac0 000000000000000c t __math_oflow
0000000000711ae0 0000000000000020 t __math_divzero
0000000000711b00 000000000000001c t __math_invalid
0000000000711b20 0000000000000014 t __math_check_uflow
0000000000711b40 0000000000000020 t __math_check_oflow
0000000000711b60 00000000000000dc T log2f
0000000000711c40 0000000000000300 T __ieee754_rem_pio2
0000000000711f40 0000000000000068 T acosf
0000000000711fc0 0000000000000498 T pow
0000000000712460 00000000000001ec T __ieee754_fmodf
0000000000712660 0000000000000880 T __kernel_rem_pio2
0000000000712ee0 000000000000007c T ldexpf
0000000000712f60 000000000000010c T scalbn
0000000000713080 00000000000000f8 T scalbnf
0000000000713180 00000000000000dc T expf
0000000000713260 0000000000000318 T __ieee754_acosf
0000000000713580 0000000000000050 T sqrtf
00000000007135e0 0000000000000050 T sqrt
0000000000713640 000000000000007c T ldexp
00000000007136c0 0000000000000338 T powf
0000000000713a00 000000000000006c T hypotf
0000000000713a80 000000000000009c T __kernel_sin
0000000000713b20 0000000000000004 T atan2f
0000000000713b40 0000000000000064 T tanf
0000000000713bc0 0000000000000090 T cos
0000000000713c60 0000000000000034 t with_errnof
0000000000713ca0 0000000000000018 t xflowf
0000000000713cc0 0000000000000008 t __math_uflowf
0000000000713ce0 000000000000000c t __math_may_uflowf
0000000000713d00 0000000000000008 t __math_oflowf
0000000000713d20 0000000000000020 t __math_divzerof
0000000000713d40 000000000000001c t __math_invalidf
0000000000713d60 0000000000000078 T frexp
0000000000713de0 0000000000000008 T __ieee754_sqrtf
0000000000713e00 00000000000001b0 T log2
0000000000713fc0 000000000000000c T nanf
0000000000713fe0 00000000000000c8 T exp2f
00000000007140c0 00000000000001a8 T __ieee754_hypotf
0000000000714280 00000000000001b4 T cosf
0000000000714440 0000000000000008 T __ieee754_sqrt
0000000000714460 00000000000001dc T __ieee754_atan2
0000000000714640 0000000000000008 T floor
0000000000714660 0000000000000170 T exp
00000000007147e0 0000000000000018 T finitef
0000000000714800 00000000000000dc T logf
00000000007148e0 0000000000000018 T finite
0000000000714900 000000000000021c T atan
0000000000714b20 00000000000001d0 T __ieee754_atan2f
0000000000714d00 0000000000000130 T __kernel_cos
0000000000714e40 0000000000000008 T fabs
0000000000714e60 0000000000000314 T __ieee754_rem_pio2f
0000000000715180 000000000000020c T __kernel_tanf
00000000007153a0 000000000000000c T nan
00000000007153c0 0000000000000884 T __kernel_rem_pio2f
0000000000715c60 0000000000000008 T floorf
0000000000715c80 00000000000000f8 t __eqtf2
0000000000715c80 00000000000000f8 T __netf2
0000000000715d80 0000000000000914 t __multf3
00000000007166a0 0000000000000064 t __floatunsitf
0000000000716720 0000000000000130 t __extenddftf2
0000000000716860 0000000000000370 t __trunctfsf2
0000000000716be0 00000000000002ac t init_dwarf_reg_size_table
0000000000716ea0 0000000000000160 t uw_install_context_1
0000000000717000 000000000000018c t read_encoded_value
00000000007171a0 00000000000007c4 t execute_stack_op
0000000000717980 0000000000000338 t uw_update_context_1
0000000000717cc0 0000000000000148 t uw_update_context
0000000000717e20 00000000000007d4 t execute_cfa_program_specialized
0000000000718600 0000000000000814 t execute_cfa_program_generic
0000000000718e20 0000000000000444 t uw_frame_state_for
0000000000719280 0000000000000370 t uw_init_context_1
0000000000719600 000000000000010c t _Unwind_RaiseException_Phase2
0000000000719720 000000000000010c t _Unwind_ForcedUnwind_Phase2
0000000000719840 0000000000000054 t _Unwind_SetGR
00000000007198a0 0000000000000014 t _Unwind_GetIPInfo
00000000007198c0 0000000000000008 t _Unwind_SetIP
00000000007198e0 0000000000000008 t _Unwind_GetLanguageSpecificData
0000000000719900 0000000000000008 t _Unwind_GetRegionStart
0000000000719920 0000000000000008 t _Unwind_GetDataRelBase
0000000000719940 0000000000000008 t _Unwind_GetTextRelBase
0000000000719960 0000000000000004 t _Unwind_DebugHook
0000000000719980 000000000000018c t _Unwind_RaiseException
0000000000719b20 0000000000000114 t _Unwind_Resume
0000000000719c40 000000000000010c t _Unwind_Resume_or_Rethrow
0000000000719d60 000000000000001c t _Unwind_DeleteException
0000000000719d80 0000000000000018 t fde_unencoded_compare
0000000000719da0 000000000000002c t fde_unencoded_extract
0000000000719de0 00000000000000d4 t frame_downheap
0000000000719ec0 0000000000000138 t read_encoded_value_with_base
000000000071a000 0000000000000238 t fde_radixsort
000000000071a240 0000000000000104 t __deregister_frame_info_bases.part.0
000000000071a360 000000000000012c t get_cie_encoding
000000000071a4a0 00000000000000d4 t fde_mixed_encoding_extract
000000000071a580 00000000000001f0 t classify_object_over_fdes.constprop.0
000000000071a780 00000000000000bc t fde_single_encoding_extract
000000000071a840 00000000000000ac t fde_single_encoding_compare
000000000071a900 000000000000010c t fde_mixed_encoding_compare
000000000071aa20 0000000000000214 t add_fdes.isra.0
000000000071ac40 000000000000027c t linear_search_fdes
000000000071aec0 0000000000000528 t search_object
000000000071b400 0000000000000074 t __register_frame_info
000000000071b480 0000000000000018 t __deregister_frame_info
000000000071b4a0 00000000000001d4 t _Unwind_Find_FDE
000000000071b680 0000000000000030 T __arm_za_disable
000000000071b680 0000000000000030 t __libgcc_arm_za_disable
000000000071b6c0 0000000000000070 t __sfp_handle_exceptions
000000000071b730 00000000000000a0 T __arm_tpidr2_save
000000000071b730 00000000000000a0 t __libgcc_arm_tpidr2_save
000000000071b7e0 0000000000000024 T srand
000000000071b820 0000000000000038 T rand
000000000071b860 000000000000002c T getenv
000000000071b8a0 000000000000002c T strndup
000000000071b8e0 0000000000000020 T _freelocale_r
000000000071b900 0000000000000024 T freelocale
000000000071b940 0000000000000124 T _ungetwc_r
000000000071ba80 0000000000000068 T ungetwc
000000000071bb00 00000000000000b8 T __submore
000000000071bbc0 00000000000001dc T _ungetc_r
000000000071bda0 000000000000002c T ungetc
000000000071bde0 0000000000000008 T wmemmove
000000000071be00 00000000000000b4 T _fputs_r
000000000071bec0 000000000000002c T fputs
000000000071bf00 0000000000000064 T _init_signal_r
000000000071bf80 000000000000006c T _signal_r
000000000071c000 00000000000000a4 T _raise_r
000000000071c0c0 0000000000000024 T raise
000000000071c100 000000000000002c T signal
000000000071c140 0000000000000004 T getwc
000000000071c160 0000000000000018 T isalpha
000000000071c180 0000000000000064 T __assert_func
000000000071c200 00000000000000ec t iso_year_adjust.isra.0
000000000071c300 0000000000001020 t __strftime.isra.0
000000000071d320 0000000000000044 T strftime
000000000071d380 0000000000000418 T _strerror_r
000000000071d7a0 000000000000002c T strerror
000000000071d7e0 00000000000000f0 T _fwrite_r
000000000071d8e0 0000000000000044 T fwrite
000000000071d940 0000000000000104 T strrchr
000000000071da60 0000000000000060 T __itoa
000000000071dac0 0000000000000004 T itoa
000000000071dae0 0000000000000184 T _fgets_r
000000000071dc80 000000000000003c T fgets
000000000071dcc0 000000000000000c T abs
000000000071dce0 0000000000000494 T __sfvwrite_r
000000000071e180 000000000000003c T setenv
000000000071e1c0 0000000000000008 T _user_strerror
000000000071e1e0 00000000000002e8 t _strtoll_l.isra.0
000000000071e4e0 0000000000000044 T _strtoll_r
000000000071e540 0000000000000048 T strtoll
000000000071e5a0 00000000000000b8 t currentlocale
000000000071e660 00000000000007ac T __loadlocale
000000000071ee20 0000000000000094 T __get_locale_env
000000000071eec0 00000000000003dc T _setlocale_r
000000000071f2a0 000000000000002c T __locale_mb_cur_max
000000000071f2e0 000000000000002c T setlocale
000000000071f320 0000000000000004 T wcsxfrm
000000000071f340 0000000000000008 T atof
000000000071f360 0000000000000054 t sulp
000000000071f3c0 0000000000001210 T _strtod_l
00000000007205e0 0000000000000050 T _strtod_r
0000000000720640 000000000000003c T strtod_l
0000000000720680 0000000000000054 T strtod
00000000007206e0 00000000000000d0 T strtof_l
00000000007207c0 00000000000000f4 T strtof
00000000007208c0 0000000000000024 T srandom
0000000000720900 0000000000000038 T random
0000000000720940 00000000000000a0 T sprintf
00000000007209e0 0000000000000078 T fiprintf
0000000000720a60 00000000000000b4 T getc
0000000000720b20 00000000000000a8 T __utoa
0000000000720be0 00000000000000ec t iso_year_adjust.isra.0
0000000000720ce0 0000000000000040 T __ctloc
0000000000720d20 0000000000001024 t __strftime.isra.0
0000000000721d60 0000000000000044 T wcsftime
0000000000721dc0 0000000000000028 T putchar
0000000000721e00 000000000000007c T strcat
0000000000721e80 0000000000000030 T wcscmp
0000000000721ec0 000000000000011c t rshift
0000000000721fe0 00000000000008c4 T __gethex
00000000007228c0 0000000000000060 T strxfrm
0000000000722920 00000000000001a4 t _strtoul_l.isra.0
0000000000722ae0 0000000000000044 T _strtoul_r
0000000000722b40 0000000000000048 T strtoul
0000000000722bc0 0000000000000130 T strlen
0000000000722d00 0000000000000048 T __ascii_mbtowc
0000000000722d60 00000000000002dc T __utf8_mbtowc
0000000000723040 00000000000000cc T __sjis_mbtowc
0000000000723120 0000000000000124 T __eucjp_mbtowc
0000000000723260 00000000000001c0 T __jis_mbtowc
0000000000723420 000000000000003c T write
0000000000723460 00000000000004b0 T _fseeko_r
0000000000723920 000000000000003c T fseeko
0000000000723960 0000000000000094 T ferror
0000000000723a00 0000000000000080 T strncat
0000000000723a80 000000000000002c T gettimeofday
0000000000723ac0 00000000000000b8 T bsearch
0000000000723b80 0000000000000014 T _tzset_unlocked
0000000000723bc0 00000000000000cc T strchr
0000000000723ca0 0000000000000008 T wmemcpy
0000000000723cc0 0000000000000314 T _fread_r
0000000000723fe0 0000000000000044 T fread
0000000000724040 000000000000002c T calloc
0000000000724080 00000000000000d8 T _vsnprintf_r
0000000000724160 0000000000000054 T vsnprintf
00000000007241c0 00000000000000dc T memchr
00000000007242a0 00000000000001d8 T _wctype_r
0000000000724480 0000000000000024 T wctype
00000000007244c0 000000000000004c T __sread
0000000000724520 0000000000000008 T __seofread
0000000000724540 0000000000000068 T __swrite
00000000007245c0 0000000000000050 T __sseek
0000000000724620 0000000000000008 T __sclose
0000000000724640 000000000000006c T _vasprintf_r
00000000007246c0 000000000000004c T vasprintf
0000000000724720 000000000000002c T aligned_alloc
0000000000724760 000000000000000c T labs
0000000000724780 0000000000000974 T qsort
0000000000724780 0000000000000974 t qsort.localalias
0000000000725100 0000000000000018 T abort
0000000000725120 0000000000000038 t lflush
0000000000725160 00000000000001b0 T __srefill_r
0000000000725320 0000000000000004 T call_once
0000000000725340 0000000000000004 T mtx_destroy
0000000000725360 000000000000002c T mtx_init
00000000007253a0 000000000000005c T mtx_lock
0000000000725400 000000000000005c T mtx_unlock
0000000000725460 0000000000000134 T _fclose_r
00000000007255a0 0000000000000024 T fclose
00000000007255e0 000000000000003c T read
0000000000725620 000000000000000c T __gettzinfo
0000000000725640 00000000000001b4 T strncmp
0000000000725800 0000000000000134 T swprintf
0000000000725934 0000000000000790 t get_arg
00000000007260c4 0000000000003c10 T _vfprintf_r
0000000000729cd4 000000000000004c T vfprintf
0000000000729d20 00000000000000d4 t __sbprintf
0000000000729e00 00000000000000c0 T _calloc_r
0000000000729ec0 0000000000000078 T fprintf
0000000000729f40 0000000000000134 T strcmp
000000000072a080 0000000000000094 T __swhatbuf_r
000000000072a120 00000000000000fc T __smakebuf_r
000000000072a220 000000000000002c T realloc
000000000072a260 0000000000000038 T strlcpy
000000000072a2a0 0000000000000024 T strdup
000000000072a300 00000000000000b8 T strnlen
000000000072a3c0 000000000000002c T memalign
000000000072a400 000000000000001c t stdio_exit_handler
000000000072a420 000000000000006c t cleanup_stdio
000000000072a4a0 0000000000000134 t global_stdio_init.part.0
000000000072a5e0 000000000000000c T __sfp_lock_acquire
000000000072a600 000000000000000c T __sfp_lock_release
000000000072a620 000000000000012c T __sfp
000000000072a760 0000000000000054 T __sinit
000000000072a7c0 000000000000000c T __tz_lock
000000000072a7e0 000000000000000c T __tz_unlock
000000000072a800 000000000000000c T _Exit
000000000072a820 00000000000007e8 T _malloc_r
000000000072b008 0000000000000038 T setjmp
000000000072b040 000000000000003c T longjmp
000000000072b080 00000000000000e0 T _putc_r
000000000072b160 00000000000000e4 T putc
000000000072b260 0000000000000074 T strcasecmp
000000000072b2e0 00000000000001a4 t quorem
000000000072b4a0 0000000000001304 T _dtoa_r
000000000072c7c0 00000000000000d8 T _wcrtomb_r
000000000072c8a0 00000000000000e4 T wcrtomb
000000000072c9a0 0000000000000024 T isatty
000000000072ca00 000000000000022c T memcpy
000000000072ca00 T memmove
000000000072cc40 0000000000000078 T _strndup_r
000000000072ccc0 0000000000000124 T _malloc_trim_r
000000000072ce00 00000000000002d4 T _free_r
000000000072d0e0 0000000000000008 T towupper
000000000072d100 0000000000000034 T strtok
000000000072d134 0000000000000790 t get_arg
000000000072d8c4 0000000000003c0c T _svfprintf_r
00000000007314e0 000000000000001c T atoi
0000000000731500 00000000000002e8 t _strtol_l.part.0
0000000000731800 0000000000000070 T _strtol_r
0000000000731880 0000000000000074 T strtol
0000000000731900 0000000000000098 T clearerr
00000000007319a0 000000000000003c T wcslcpy
00000000007319e0 0000000000000024 T close
0000000000731a20 0000000000000018 T isspace
0000000000731a40 0000000000000094 T feof
0000000000731ae0 0000000000000004 T strcoll
0000000000731b00 00000000000006c0 T _tzset_unlocked_r
00000000007321c0 0000000000000014 T __errno
00000000007321e0 0000000000000044 T malloc
0000000000732240 0000000000000024 T free
0000000000732280 0000000000000078 T printf
0000000000732300 0000000000000094 T wctob
00000000007323a0 0000000000000024 T wcscpy
00000000007323e0 000000000000003c T lseek
0000000000732420 0000000000000158 T sniprintf
0000000000732580 00000000000000b4 T sscanf
0000000000732640 0000000000000124 T _fopen_r
0000000000732780 000000000000002c T fopen
00000000007327c0 0000000000000010 T __set_ctype
00000000007327e0 0000000000000048 T time
0000000000732840 00000000000000a8 T strlcat
0000000000732900 0000000000000020 T isblank
0000000000732920 0000000000000094 T btowc
00000000007329c0 00000000000000ac T asprintf
0000000000732a80 00000000000000d0 T _puts_r
0000000000732b60 0000000000000024 T puts
0000000000732ba0 0000000000000154 T _fdopen_r
0000000000732d00 000000000000002c T fdopen
0000000000732d40 0000000000000088 T open
0000000000732de0 000000000000002c T gmtime
0000000000732e20 0000000000000048 T mbstowcs
0000000000732e80 0000000000000104 T _findenv_r
0000000000732fa0 0000000000000018 T _getenv_r
0000000000732fc0 0000000000000134 t critical_factorization
0000000000733100 0000000000000334 t two_way_long_needle
0000000000733440 0000000000000258 T strstr
00000000007336a0 0000000000000034 T wmemchr
00000000007336e0 00000000000000a4 T fputc
00000000007337a0 0000000000000090 T _vsscanf_r
0000000000733840 000000000000004c T vsscanf
00000000007338a0 000000000000053c T _realloc_r
0000000000733de0 0000000000000020 T islower
0000000000733e00 0000000000000084 T strncasecmp
0000000000733ea0 000000000000005c T _strdup_r
0000000000733f00 0000000000000098 T _fwalk_sglue
0000000000733fa0 000000000000000c T __malloc_lock
0000000000733fc0 000000000000000c T __malloc_unlock
0000000000733fe0 0000000000000160 T _ftello_r
0000000000734140 0000000000000024 T ftello
0000000000734180 00000000000000ac T fileno
0000000000734240 000000000000025c T __tzcalc_limits
00000000007344a0 0000000000000068 T __srget_r
0000000000734540 0000000000000104 T memset
0000000000734660 0000000000000004 T _ftell_r
0000000000734680 0000000000000024 T ftell
00000000007346c0 0000000000000254 T _setenv_r
0000000000734920 000000000000002c T stat
000000000073494c 0000000000000270 t wcvt
0000000000734bbc 000000000000073c t get_arg.isra.0
00000000007352f8 00000000000036c0 T _svfwprintf_r
00000000007389c0 00000000000000a0 T __strtok_r
0000000000738a60 0000000000000008 T strtok_r
0000000000738a68 0000000000000074 t get_arg
0000000000738adc 00000000000032d0 T __ssvfscanf_r
000000000073bdc0 0000000000000004 T _fseek_r
000000000073bde0 000000000000003c T fseek
000000000073be20 0000000000000014 T atexit
000000000073be40 000000000000012c T strcpy
000000000073bf80 0000000000000350 T _newlocale_r
000000000073c2e0 000000000000003c T newlocale
000000000073c320 0000000000000034 T __ascii_wctomb
000000000073c360 00000000000000e4 T __utf8_wctomb
000000000073c460 0000000000000084 T __sjis_wctomb
000000000073c500 00000000000000a8 T __eucjp_wctomb
000000000073c5c0 00000000000000bc T __jis_wctomb
000000000073c680 0000000000000040 T __memcpy_chk
000000000073c6c0 0000000000000028 T wcslen
000000000073c700 0000000000000020 T isupper
000000000073c720 0000000000000158 T snprintf
000000000073c880 000000000000008c T strncpy
000000000073c920 0000000000000024 T toupper
000000000073c960 00000000000001a4 t _strtoull_l.isra.0
000000000073cb20 0000000000000044 T _strtoull_r
000000000073cb80 0000000000000048 T strtoull
000000000073cc00 0000000000000150 T stpcpy
000000000073cd60 000000000000001c T wmemset
000000000073cd80 0000000000000010 T _wcsrtombs_r
000000000073cda0 0000000000000004 T wcscoll
000000000073cda4 0000000000000790 t get_arg
000000000073d534 0000000000002888 T _svfiprintf_r
000000000073fdc0 00000000000001c8 T memcmp
000000000073ffa0 0000000000000048 T __match
0000000000740000 000000000000025c T __hexnan
0000000000740260 0000000000000008 T towlower
0000000000740280 0000000000000004 T putwc
00000000007402a0 00000000000000bc T __sflags
0000000000740360 00000000000000f0 T _mbrtowc_r
0000000000740460 0000000000000100 T mbrtowc
0000000000740560 0000000000000090 T __libc_init_array
0000000000740600 000000000000005c T iswctype
0000000000740660 0000000000000060 T _fgetwc_r
00000000007406c0 0000000000000050 T fgetwc
0000000000740720 0000000000000180 T __swsetup_r
00000000007408a0 00000000000001e8 T __sflush_r
0000000000740aa0 00000000000000b8 T _fflush_r
0000000000740b60 0000000000000044 T fflush
0000000000740bc0 00000000000001cc T _wcstoul_l
0000000000740da0 000000000000005c T wcstoul
0000000000740e00 0000000000000008 T iswalnum
0000000000740e20 000000000000000c T __env_lock
0000000000740e40 000000000000000c T __env_unlock
0000000000740e60 0000000000000048 T iswspace_l
0000000000740ec0 000000000000008c T _Balloc
0000000000740f60 0000000000000020 T _Bfree
0000000000740f80 0000000000000108 T __multadd
00000000007410a0 000000000000013c T __s2b
00000000007411e0 0000000000000094 T __hi0bits
0000000000741280 00000000000000fc T __lo0bits
0000000000741380 000000000000004c T __i2b
00000000007413e0 00000000000001ec T __multiply
00000000007415e0 00000000000000fc T __pow5mult
00000000007416e0 0000000000000174 T __lshift
0000000000741860 0000000000000050 T __mcmp
00000000007418c0 00000000000001c4 T __mdiff
0000000000741aa0 0000000000000084 T __ulp
0000000000741b40 0000000000000168 T __b2d
0000000000741cc0 0000000000000154 T __d2b
0000000000741e20 00000000000000ac T __ratio
0000000000741ee0 0000000000000078 T __copybits
0000000000741f60 000000000000006c T __any_on
0000000000741fe0 00000000000000c8 T __ssprint_r
00000000007420c0 0000000000000008 T iswblank
00000000007420e0 0000000000000008 T iswlower
0000000000742100 00000000000002a0 T gmtime_r
00000000007423a0 0000000000000790 t get_arg
0000000000742b30 000000000000294c T _vfiprintf_r
000000000074547c 00000000000000d4 t __sbprintf
0000000000745560 000000000000017c T _memalign_r
00000000007456e0 0000000000000118 T __swbuf_r
0000000000745800 0000000000000188 T _wcsnrtombs_l
00000000007459a0 0000000000000074 T _wcsnrtombs_r
0000000000745a14 0000000000000074 t get_arg
0000000000745a88 00000000000000f0 T _sungetc_r
0000000000745b78 0000000000000070 T __ssrefill_r
0000000000745be8 00000000000000e0 T _sfread_r
0000000000745cc8 00000000000028bc T __ssvfiscanf_r
00000000007485a0 0000000000000008 T iswalpha
00000000007485c0 0000000000000020 T _towctrans_r
00000000007485e0 000000000000002c T towctrans
0000000000748620 00000000000000c8 T __sswprint_r
0000000000748700 0000000000000044 T __sprint_r
0000000000748760 00000000000000b4 T siscanf
0000000000748820 0000000000000008 T iswspace
0000000000748840 0000000000000010 T iswdigit
0000000000748860 00000000000000d4 T __sccl
0000000000748940 00000000000000e8 T _mbstowcs_r
0000000000748a40 0000000000000008 T __localeconv_l
0000000000748a60 0000000000000028 T _localeconv_r
0000000000748aa0 0000000000000034 T iswalpha_l
0000000000748ae0 0000000000000050 T __chk_fail
0000000000748b40 0000000000000104 T __fputwc
0000000000748c60 000000000000007c T _fputwc_r
0000000000748ce0 0000000000000068 T fputwc
0000000000748d60 000000000000011c T _mbsnrtowcs_r
0000000000748e80 0000000000000008 T iswprint
0000000000748ea0 0000000000000008 T iswcntrl
0000000000748ec0 000000000000007c T category
0000000000748f40 0000000000000020 T iswxdigit
0000000000748f60 0000000000000054 T mbrlen
0000000000748fc0 00000000000000e0 T __register_exitproc
00000000007490a0 000000000000009c T stpncpy
0000000000749140 0000000000000188 T __ssputs_r
00000000007492e0 0000000000000008 T iswupper
0000000000749300 0000000000000008 T iswgraph
0000000000749320 0000000000000064 T iswlower_l
00000000007493a0 000000000000002c T iswblank_l
00000000007493e0 0000000000000038 T iswalnum_l
0000000000749420 0000000000000008 T iswpunct
0000000000749440 0000000000000204 T towctrans_l
0000000000749660 0000000000000020 T iswprint_l
0000000000749680 0000000000000024 T iswcntrl_l
00000000007496c0 0000000000000064 T iswupper_l
0000000000749740 0000000000000028 T iswgraph_l
0000000000749780 0000000000000070 T __swbufw_r
0000000000749800 000000000000013c T __call_exitprocs
0000000000749940 0000000000000020 T iswpunct_l
0000000000749960 0000000000000020 T _exit
0000000000749980 0000000000000170 T chdir
0000000000749b00 0000000000000034 T clock_gettime
0000000000749b40 000000000000021c T _concatenate_path
0000000000749d60 0000000000000094 T _fstat_r
0000000000749e00 0000000000000014 T _getpid_r
0000000000749e20 0000000000000020 T __getreent
0000000000749e40 0000000000000024 T _gettimeofday_r
0000000000749e80 0000000000000094 T __release_handle
0000000000749f20 00000000000000c8 T __alloc_handle
000000000074a000 0000000000000050 T __get_handle
000000000074a060 0000000000000108 T _close_r
000000000074a180 0000000000000008 t null_write
000000000074a1a0 0000000000000018 T setDefaultDevice
000000000074a1c0 0000000000000114 T FindDevice
000000000074a2e0 0000000000000034 T RemoveDevice
000000000074a320 00000000000000c8 T AddDevice
000000000074a400 0000000000000034 T GetDeviceOpTab
000000000074a440 0000000000000008 T _isatty_r
000000000074a460 0000000000000014 T _kill_r
000000000074a480 00000000000000a4 T _lseek_r
000000000074a540 000000000000001c T pthread_mutexattr_init
000000000074a560 000000000000001c T pthread_mutexattr_settype
000000000074a580 0000000000000080 T pthread_mutex_init
000000000074a600 0000000000000010 T pthread_mutex_destroy
000000000074a620 000000000000006c T pthread_mutex_lock
000000000074a6a0 000000000000006c T pthread_mutex_unlock
000000000074a720 0000000000000020 T pthread_condattr_init
000000000074a740 0000000000000058 T pthread_cond_init
000000000074a7a0 0000000000000010 T pthread_cond_destroy
000000000074a7c0 0000000000000014 T pthread_cond_signal
000000000074a7e0 0000000000000014 T pthread_cond_broadcast
000000000074a800 0000000000000054 T pthread_cond_wait
000000000074a860 0000000000000020 T pthread_attr_init
000000000074a880 0000000000000020 T pthread_attr_setstacksize
000000000074a8a0 000000000000001c T pthread_attr_setdetachstate
000000000074a8c0 0000000000000084 T pthread_create
000000000074a960 0000000000000040 T pthread_join
000000000074a9a0 0000000000000018 T pthread_self
000000000074a9c0 00000000000000d8 T pthread_once
000000000074aaa0 0000000000000024 T pthread_key_create
000000000074aae0 0000000000000018 T pthread_setspecific
000000000074ab00 0000000000000018 T pthread_getspecific
000000000074ab20 0000000000000018 T pthread_key_delete
000000000074ab40 0000000000000008 T pthread_setcanceltype
000000000074ab60 0000000000000030 T sem_destroy
000000000074aba0 0000000000000058 T sem_init
000000000074ac00 0000000000000064 T sem_post
000000000074ac80 00000000000000b0 T sem_timedwait
000000000074ad40 0000000000000078 T sem_trywait
000000000074adc0 0000000000000098 T sem_wait
000000000074ae60 00000000000000e0 T _open_r
000000000074af40 00000000000000ac T _read_r
000000000074b000 0000000000000078 W _sbrk_r
000000000074b080 0000000000000090 T _stat_r
000000000074b120 0000000000000014 T timespec2nsec
000000000074b140 00000000000000c8 T abstimespec2nsec
000000000074b220 0000000000000014 T __libc_lock_acquire
000000000074b240 0000000000000014 T __libc_lock_release
000000000074b260 0000000000000014 T __libc_lock_acquire_recursive
000000000074b280 0000000000000014 T __libc_lock_release_recursive
000000000074b2a0 0000000000000018 T __libc_cond_signal
000000000074b2c0 0000000000000018 T __libc_cond_broadcast
000000000074b2e0 0000000000000018 T __libc_cond_wait
000000000074b300 0000000000000018 T __libc_cond_wait_recursive
000000000074b320 00000000000000ac T _write_r
000000000074b3e0 00000000000003c4 t __trunctfdf2
000000000074b7a8 T _init
000000000074b7e0 T _fini
00000000007a06a0 0000000000000036 r CSWTCH.143
00000000007a1030 0000000000000400 R bend_coarse
00000000007a1430 0000000000000800 R bend_fine
00000000007a1c30 0000000000000200 R freq_table
00000000007a1e30 0000000000000400 R vol_table
00000000007a2260 00000000000000c8 r format_list
00000000007a2330 0000000000002804 r ResamplerFilterDifference
00000000007a4b40 0000000000002804 r ResamplerFilter
00000000007a7350 0000000000000200 r mix8
00000000007a77c0 0000000000000044 r CSWTCH.10
00000000007a7810 0000000000000800 r SDL_default_keymap
00000000007a8050 000000000000000c r CSWTCH.396
00000000007a8050 000000000000000c r CSWTCH.398
00000000007a8050 000000000000000c r CSWTCH.400
00000000007a8050 000000000000000c r CSWTCH.402
00000000007a8050 000000000000000c r CSWTCH.404
00000000007a8050 000000000000000c r CSWTCH.406
00000000007a8060 0000000000000014 r CSWTCH.91
00000000007a8078 0000000000000028 r CSWTCH.89
00000000007a80a0 0000000000000014 r __func__.0
00000000007a80b8 0000000000000014 r __func__.1
00000000007a80d0 0000000000000017 r __func__.2
00000000007a80e8 0000000000000016 r __func__.3
00000000007a8100 0000000000000016 r __func__.4
00000000007a8118 0000000000000017 r __func__.5
00000000007a8130 0000000000000016 r __func__.6
00000000007a8148 0000000000000015 r __func__.7
00000000007a8180 00000000000000d8 r GLES2_Fragment_TextureExternalOES
00000000007a8260 0000000000000031 r GLES2_Fragment_TextureExternalOES_Prologue
00000000007a82a0 000000000000030f r GLES2_Fragment_TextureNV21BT709
00000000007a85b0 000000000000030f r GLES2_Fragment_TextureNV21BT601
00000000007a88c0 00000000000002fd r GLES2_Fragment_TextureNV21JPEG
00000000007a8bc0 000000000000030f r GLES2_Fragment_TextureNV12BT709_RG
00000000007a8ed0 000000000000030f r GLES2_Fragment_TextureNV12BT709_RA
00000000007a91e0 000000000000030f r GLES2_Fragment_TextureNV12BT601_RG
00000000007a94f0 000000000000030f r GLES2_Fragment_TextureNV12BT601_RA
00000000007a9800 00000000000002fd r GLES2_Fragment_TextureNV12JPEG
00000000007a9b00 000000000000033f r GLES2_Fragment_TextureYUVBT709
00000000007a9e40 000000000000033f r GLES2_Fragment_TextureYUVBT601
00000000007aa180 000000000000032d r GLES2_Fragment_TextureYUVJPEG
00000000007aa4b0 0000000000000107 r GLES2_Fragment_TextureBGR
00000000007aa5c0 0000000000000141 r GLES2_Fragment_TextureRGB
00000000007aa710 0000000000000127 r GLES2_Fragment_TextureARGB
00000000007aa840 00000000000000cf r GLES2_Fragment_TextureABGR
00000000007aa910 000000000000004c r GLES2_Fragment_Solid
00000000007aa960 0000000000000133 r GLES2_Vertex_Default
00000000007aaaa0 000000000000004c r GLES2_Fragment_Include_Undef_Precision
00000000007aaaf0 0000000000000040 r GLES2_Fragment_Include_High_Texture_Precision
00000000007aab30 0000000000000042 r GLES2_Fragment_Include_Medium_Texture_Precision
00000000007aab80 0000000000000097 r GLES2_Fragment_Include_Best_Texture_Precision
00000000007aac18 000000000000000d r __func__.0
00000000007aac28 0000000000000020 r CSWTCH.26
00000000007aac48 0000000000000020 r CSWTCH.25
00000000007aac68 0000000000000020 r CSWTCH.24
00000000007aac88 0000000000000020 r CSWTCH.23
00000000007aad00 0000000000000078 r RGB2YUVFactorTables.0
00000000007aad80 0000000000000200 r lut.0
00000000007aaf80 0000000000000024 r YUV2RGB
00000000007aafa8 0000000000000002 r sink_channels.0
00000000007aafb0 0000000000000018 r arConfig
00000000007aafd0 00000000000000e0 r pad_mapping_right_joy
00000000007ab0b0 00000000000000e0 r pad_mapping_left_joy
00000000007ab190 00000000000000e0 r pad_mapping_default
00000000007ab270 0000000000000800 r RGB565_BGRA8888_LUT
00000000007aba70 0000000000000800 r RGB565_RGBA8888_LUT
00000000007ac270 0000000000000800 r RGB565_ABGR8888_LUT
00000000007aca70 0000000000000800 r RGB565_ARGB8888_LUT
00000000007ad280 0000000000000014 r CSWTCH.52
00000000007ad298 0000000000000024 r gains.6636
00000000007ad2c0 0000000000000020 R tf_select_table
00000000007ad2e0 0000000000000004 r spread_icdf
00000000007ad2e8 0000000000000003 r tapset_icdf
00000000007ad2f0 000000000000000b r trim_icdf
00000000007ad300 0000000000000020 r correction.4177
00000000007ad320 00000000000000e7 r band_allocation
00000000007ad408 0000000000000188 r cache_bits50
00000000007ad590 00000000000000a8 r cache_caps50
00000000007ad638 00000000000000d2 r cache_index50
00000000007ad710 000000000000002c r eband5ms
00000000007ad740 00000000000000f0 r fft_bitrev120
00000000007ad830 00000000000001e0 r fft_bitrev240
00000000007ada10 00000000000003c0 r fft_bitrev480
00000000007addd0 0000000000000078 r fft_bitrev60
00000000007ade48 0000000000000f00 r fft_twiddles48000_960
00000000007aed48 000000000000002a r logN400
00000000007aed78 0000000000001c20 r mdct_twiddles960
00000000007b0998 00000000000001e0 r window120
00000000007b0b78 0000000000000010 r beta_coef
00000000007b0b88 0000000000000064 R eMeans
00000000007b0bf0 0000000000000150 r e_prob_model
00000000007b0d40 0000000000000010 r pred_coef
00000000007b0d50 0000000000000003 r small_energy_icdf
00000000007b0d58 0000000000000018 r LOG2_FRAC_TABLE
00000000007b0d70 000000000000000c r SPREAD_FACTOR.6494
00000000007b0d80 0000000000000003 r silk_LBRR_flags_2_iCDF
00000000007b0d88 0000000000000007 r silk_LBRR_flags_3_iCDF
00000000007b0d90 0000000000000006 R silk_LTPScales_table_Q14
00000000007b0d98 0000000000000003 R silk_LTPscale_iCDF
00000000007b0da0 0000000000000007 R silk_NLSF_EXT_iCDF
00000000007b0da8 0000000000000005 R silk_NLSF_interpolation_factor_iCDF
00000000007b0db0 0000000000000008 R silk_Quantization_Offsets_Q10
00000000007b0db8 0000000000000002 R silk_lsb_iCDF
00000000007b0dc0 0000000000000002 R silk_stereo_only_code_mid_iCDF
00000000007b0dc8 0000000000000019 R silk_stereo_pred_joint_iCDF
00000000007b0de8 0000000000000020 R silk_stereo_pred_quant_Q13
00000000007b0e08 0000000000000004 R silk_type_offset_VAD_iCDF
00000000007b0e10 0000000000000002 R silk_type_offset_no_VAD_iCDF
00000000007b0e18 0000000000000003 R silk_uniform3_iCDF
00000000007b0e20 0000000000000004 R silk_uniform4_iCDF
00000000007b0e28 0000000000000005 R silk_uniform5_iCDF
00000000007b0e30 0000000000000006 R silk_uniform6_iCDF
00000000007b0e38 0000000000000008 R silk_uniform8_iCDF
00000000007b0e40 000000000000000f r delay_matrix_dec
00000000007b0e50 000000000000000f r delay_matrix_enc
00000000007b0e60 000000000000001c R silk_Resampler_1_2_COEFS
00000000007b0e80 0000000000000028 R silk_Resampler_1_3_COEFS
00000000007b0ea8 0000000000000028 R silk_Resampler_1_4_COEFS
00000000007b0ed0 0000000000000028 R silk_Resampler_1_6_COEFS
00000000007b0ef8 0000000000000028 R silk_Resampler_2_3_COEFS
00000000007b0f20 000000000000003a R silk_Resampler_3_4_COEFS
00000000007b0f60 0000000000000060 R silk_resampler_frac_FIR_12
00000000007b0fc0 0000000000000010 r bit_deinterleave_table.7015
00000000007b0fd0 0000000000000010 r bit_interleave_table.7005
00000000007b0fe0 0000000000000010 r exp2_table8.6846
00000000007b0ff0 0000000000000078 r ordery_table
00000000007b1068 00000000000013e0 r CELT_PVQ_U_DATA
00000000007b2448 0000000000000004 r HARM_ATT_Q15
00000000007b2450 0000000000000004 r PLC_RAND_ATTENUATE_UV_Q15
00000000007b2458 0000000000000004 r PLC_RAND_ATTENUATE_V_Q15
00000000007b2460 0000000000000029 R silk_delta_gain_iCDF
00000000007b2490 0000000000000018 R silk_gain_iCDF
00000000007b24a8 0000000000000008 r silk_LTP_gain_iCDF_0
00000000007b24b0 0000000000000010 r silk_LTP_gain_iCDF_1
00000000007b24c0 0000000000000020 r silk_LTP_gain_iCDF_2
00000000007b24e0 0000000000000028 r silk_LTP_gain_vq_0
00000000007b2508 0000000000000050 r silk_LTP_gain_vq_1
00000000007b2558 00000000000000a0 r silk_LTP_gain_vq_2
00000000007b25f8 0000000000000003 R silk_LTP_per_index_iCDF
00000000007b2600 0000000000000140 r silk_NLSF_CB1_NB_MB_Q8
00000000007b2740 0000000000000280 r silk_NLSF_CB1_Wght_Q9
00000000007b29c0 0000000000000040 r silk_NLSF_CB1_iCDF_NB_MB
00000000007b2a00 0000000000000048 r silk_NLSF_CB2_BITS_NB_MB_Q5
00000000007b2a48 00000000000000a0 r silk_NLSF_CB2_SELECT_NB_MB
00000000007b2ae8 0000000000000048 r silk_NLSF_CB2_iCDF_NB_MB
00000000007b2b30 0000000000000016 r silk_NLSF_DELTA_MIN_NB_MB_Q15
00000000007b2b48 0000000000000012 r silk_NLSF_PRED_NB_MB_Q8
00000000007b2b60 0000000000000200 r silk_NLSF_CB1_WB_Q8
00000000007b2d60 0000000000000400 r silk_NLSF_CB1_WB_Wght_Q9
00000000007b3160 0000000000000040 r silk_NLSF_CB1_iCDF_WB
00000000007b31a0 0000000000000048 r silk_NLSF_CB2_BITS_WB_Q5
00000000007b31e8 0000000000000100 r silk_NLSF_CB2_SELECT_WB
00000000007b32e8 0000000000000048 r silk_NLSF_CB2_iCDF_WB
00000000007b3330 0000000000000022 r silk_NLSF_DELTA_MIN_WB_Q15
00000000007b3358 000000000000001e r silk_NLSF_PRED_WB_Q8
00000000007b3378 0000000000000003 R silk_pitch_contour_10_ms_NB_iCDF
00000000007b3380 000000000000000c R silk_pitch_contour_10_ms_iCDF
00000000007b3390 000000000000000b R silk_pitch_contour_NB_iCDF
00000000007b33a0 0000000000000022 R silk_pitch_contour_iCDF
00000000007b33c8 0000000000000015 R silk_pitch_delta_iCDF
00000000007b33e0 0000000000000020 R silk_pitch_lag_iCDF
00000000007b3400 00000000000000b4 R silk_pulses_per_block_iCDF
00000000007b34b8 0000000000000012 R silk_rate_levels_iCDF
00000000007b34d0 0000000000000098 R silk_shell_code_table0
00000000007b3568 0000000000000098 R silk_shell_code_table1
00000000007b3600 0000000000000098 R silk_shell_code_table2
00000000007b3698 0000000000000098 R silk_shell_code_table3
00000000007b3730 0000000000000011 R silk_shell_code_table_offsets
00000000007b3748 000000000000002a R silk_sign_iCDF
00000000007b3778 000000000000000a r ordering10.23678
00000000007b3788 0000000000000010 r ordering16.23677
00000000007b3798 000000000000002c R silk_CB_lags_stage2
00000000007b37c8 0000000000000006 R silk_CB_lags_stage2_10_ms
00000000007b37d0 0000000000000088 R silk_CB_lags_stage3
00000000007b3858 0000000000000018 R silk_CB_lags_stage3_10_ms
00000000007b3870 0000000000000102 R silk_LSFCosTab_FIX_Q12
00000000007b3978 0000000000000024 r sRGB_XYZ.0
00000000007b39a0 00000000000000e0 r png_sRGB_checks
00000000007b3a80 0000000000000020 r sRGB_xy
00000000007b3aa0 000000000000000a r valid_parameters.0
00000000007b3ab0 0000000000000011 r digits.1
00000000007b3ad0 0000000000000010 r png_digit
00000000007b3ae0 0000000000000007 r png_pass_ystart.4
00000000007b3ae8 0000000000000007 r png_pass_yinc.5
00000000007b3af0 0000000000000007 r png_pass_start.0
00000000007b3af0 0000000000000007 r png_pass_start.6
00000000007b3af8 0000000000000007 r png_pass_inc.1
00000000007b3af8 0000000000000007 r png_pass_inc.7
00000000007b3b00 000000000000001c r png_pass_inc.8
00000000007b3b20 0000000000000090 r row_mask.9
00000000007b3bb0 0000000000000048 r display_mask.10
00000000007b3c00 0000000000000100 r fourbppswaptable
00000000007b3d00 0000000000000100 r twobppswaptable
00000000007b3e00 0000000000000100 r onebppswaptable
00000000007b3f00 0000000000000007 r png_pass_ystart.2
00000000007b3f08 0000000000000007 r png_pass_yinc.3
00000000007b3f10 0000000000000007 r png_pass_start.1
00000000007b3f10 0000000000000007 r png_pass_start.4
00000000007b3f18 0000000000000007 r png_pass_inc.0
00000000007b3f18 0000000000000007 r png_pass_inc.5
00000000007b3f20 0000000000000400 r crc_table
00000000007b4320 0000000000000080 r x2n_table
00000000007b43a0 0000000000002000 r crc_braid_table
00000000007b63e0 0000000000000800 r lenfix.1
00000000007b6be0 0000000000000080 r distfix.0
00000000007b6c60 0000000000000026 r order.2
00000000007b6c90 0000000000000040 r dext.0
00000000007b6cd0 0000000000000040 r dbase.1
00000000007b6d10 000000000000003e r lext.2
00000000007b6d50 000000000000003e r lbase.3
00000000007b6d90 000000000000002f R inflate_copyright
00000000007b6dc0 0000000000000100 R _length_code
00000000007b6ec0 0000000000000074 r extra_lbits
00000000007b6f40 0000000000000074 r base_length
00000000007b6fc0 0000000000000200 R _dist_code
00000000007b71c0 0000000000000078 r extra_dbits
00000000007b7240 0000000000000078 r base_dist
00000000007b72c0 0000000000000013 r bl_order
00000000007b72d8 0000000000000078 r static_dtree
00000000007b7350 0000000000000480 r static_ltree
00000000007b77d0 000000000000004c r extra_blbits
00000000007b7820 0000000000000011 r bits_ac_chrominance.1
00000000007b7840 0000000000000011 r bits_ac_luminance.5
00000000007b7860 0000000000000011 r bits_dc_chrominance.3
00000000007b7880 0000000000000011 r bits_dc_luminance.7
00000000007b78a0 0000000000000100 r std_chrominance_quant_tbl
00000000007b79a0 0000000000000100 r std_luminance_quant_tbl
00000000007b7aa0 00000000000000a2 r val_ac_chrominance.0
00000000007b7b50 00000000000000a2 r val_ac_luminance.4
00000000007b7bf8 000000000000000c r val_dc_chrominance.2
00000000007b7c08 000000000000000c r val_dc_luminance.6
00000000007b7ca0 0000000000000044 r rgb_pixelsize
00000000007b7cf0 0000000000000020 r dither_matrix
00000000007b7d10 0000000000000100 r base_dither_matrix
00000000007b7e10 0000000000000044 r rgb_blue
00000000007b7e60 0000000000000044 r rgb_green
00000000007b7eb0 0000000000000044 r rgb_red
00000000007b7ef8 000000000000000c r c_scales
00000000007b7f10 0000000000000044 r rgb_blue
00000000007b7f60 0000000000000044 r rgb_green
00000000007b7fb0 0000000000000044 r rgb_red
00000000007b7ff8 0000000000000140 R jpeg_natural_order
00000000007b8140 0000000000000010 r extra_pool_slop
00000000007b8150 0000000000000010 r first_pool_slop
00000000007b8160 0000000000000044 r rgb_blue
00000000007b81b0 0000000000000044 r rgb_green
00000000007b8200 0000000000000044 r rgb_pixelsize
00000000007b8250 0000000000000044 r rgb_red
00000000007b82a0 0000000000000040 r aanscalefactor.0
00000000007b82e0 0000000000000080 r aanscales.1
00000000007b8360 0000000000000020 r dither_matrix
00000000007b8380 0000000000000044 r rgb_blue
00000000007b83d0 0000000000000044 r rgb_green
00000000007b8420 0000000000000044 r rgb_pixelsize
00000000007b8470 0000000000000044 r rgb_red
00000000007b84c0 0000000000000040 r aanscalefactor.0
00000000007b8500 0000000000000011 r bits_ac_chrominance.1
00000000007b8520 0000000000000011 r bits_ac_luminance.5
00000000007b8540 0000000000000011 r bits_dc_chrominance.3
00000000007b8560 0000000000000011 r bits_dc_luminance.7
00000000007b8580 00000000000000a2 r val_ac_chrominance.0
00000000007b8630 00000000000000a2 r val_ac_luminance.4
00000000007b86d8 000000000000000c r val_dc_chrominance.2
00000000007b86e8 000000000000000c r val_dc_luminance.6
00000000007b86f8 0000000000000390 R jpeg_aritab
00000000007b8a90 0000000000000100 r jsimd_h2_downsample_consts
00000000007b8b90 0000000000000008 r jsimd_ycc_rgb_convert_neon_consts
00000000007b8ba0 0000000000000008 r jsimd_fdct_ifast_neon_consts
00000000007b8bb0 0000000000000008 r jsimd_idct_2x2_neon_consts
00000000007b8bc0 0000000000000018 r jsimd_idct_4x4_neon_consts
00000000007b8be0 0000000000000008 r jsimd_idct_ifast_neon_consts
00000000007b8bf0 r Ljsimd_idct_islow_neon_consts
00000000007b8c10 r Ljsimd_ycc_rgb_neon_consts
00000000007b8c30 r Ljsimd_rgb_ycc_neon_consts
00000000007b8c50 r Ljsimd_fdct_islow_neon_consts
00000000007b8c70 r Ljsimd_huff_encode_one_block_neon_consts
00000000007b8d40 00000000000000b0 r ft_trig_arctan_table
00000000007b8f20 0000000000000020 r fvaraxis_fields.0
00000000007b8f40 0000000000000024 r fvar_fields.1
00000000007b8f70 0000000000000024 r gvar_fields.2
00000000007b8f98 00000000000005d0 r sfnt_id.3
00000000007b9570 0000000000000190 r trick_names.4
00000000007b9700 0000000000000100 r opcode_length
00000000007b9800 0000000000000100 r Pop_Push_Count
00000000007b9900 0000000000000060 R tt_default_graphics_state
00000000007b9960 0000000000000004 r tt_service_truetype_engine
00000000007b99c0 0000000000000014 r cff_header_fields.0
00000000007b99e0 0000000000000200 r cff_expert_encoding
00000000007b9be0 0000000000000200 r cff_standard_encoding
00000000007b9de0 00000000000000ae r cff_expertsubset_charset
00000000007b9e90 000000000000014c r cff_expert_charset
00000000007b9fe0 00000000000001ca r cff_isoadobe_charset
00000000007ba1b0 0000000000000050 r power_ten_limits
00000000007ba200 0000000000000050 r power_tens
00000000007ba250 0000000000000074 r pfr_header_fields
00000000007ba2d0 0000000000000098 r winfnt_header_fields
00000000007ba370 0000000000000018 r winpe_rsrc_data_entry_fields
00000000007ba390 0000000000000010 r winpe_rsrc_dir_entry_fields
00000000007ba3a0 0000000000000020 r winpe_rsrc_dir_fields
00000000007ba3c0 0000000000000020 r winpe32_section_fields
00000000007ba3e0 0000000000000034 r winpe32_header_fields
00000000007ba420 0000000000000018 r winne_header_fields
00000000007ba440 0000000000000014 r winmz_header_fields
00000000007ba460 0000000000000034 r pcf_accel_msb_header
00000000007ba4a0 0000000000000034 r pcf_accel_header
00000000007ba4e0 000000000000001c r pcf_enc_msb_header
00000000007ba500 000000000000001c r pcf_enc_header
00000000007ba520 0000000000000014 r pcf_property_msb_header
00000000007ba540 0000000000000014 r pcf_property_header
00000000007ba560 000000000000001c r pcf_compressed_metric_header
00000000007ba580 0000000000000020 r pcf_metric_msb_header
00000000007ba5a0 0000000000000020 r pcf_metric_header
00000000007ba5c0 0000000000000018 r pcf_table_header
00000000007ba5e0 0000000000000010 r pcf_toc_header
00000000007ba5f0 0000000000000008 r nibble_mask
00000000007ba600 0000000000000020 r hdigits
00000000007ba620 0000000000000020 r ddigits
00000000007ba640 0000000000000080 r a2i
00000000007ba6c0 0000000000000001 r empty
00000000007ba6f0 000000000000003c r woff_header_fields.0
00000000007ba730 0000000000000010 r ttc_header_fields.1
00000000007ba740 0000000000000084 r tt_encodings.2
00000000007ba7d0 000000000000004c r metrics_header_fields.3
00000000007ba820 000000000000003c r maxp_fields_extra.4
00000000007ba860 0000000000000010 r maxp_fields.5
00000000007ba870 0000000000000010 r os2_fields_extra5.6
00000000007ba880 000000000000001c r os2_fields_extra2.7
00000000007ba8a0 0000000000000010 r os2_fields_extra1.8
00000000007ba8b0 00000000000000b0 r os2_fields.9
00000000007ba960 000000000000002c r post_fields.10
00000000007ba990 000000000000001c r name_record_fields.11
00000000007ba9b0 000000000000000c r langTag_record_fields.12
00000000007ba9c0 0000000000000014 r name_table_fields.13
00000000007ba9e0 0000000000000044 r pclt_fields.14
00000000007baa30 0000000000000054 r header_fields.15
00000000007baa90 0000000000000018 r table_dir_entry_fields.16
00000000007baab0 0000000000000018 r offset_table_fields.17
00000000007baad0 0000000000000010 r hexdigits
00000000007baae0 0000000000000010 r sfnt_ps_map
00000000007baaf0 0000000000000018 R af_hani_nonbase_uniranges
00000000007bab10 0000000000000110 R af_hani_uniranges
00000000007bac20 0000000000000050 R af_tibt_nonbase_uniranges
00000000007bac70 0000000000000010 R af_tibt_uniranges
00000000007bac80 0000000000000028 R af_sylo_nonbase_uniranges
00000000007bacb0 0000000000000010 R af_sylo_uniranges
00000000007bacc0 0000000000000038 R af_orya_nonbase_uniranges
00000000007bad00 0000000000000010 R af_orya_uniranges
00000000007bad10 0000000000000020 R af_limb_nonbase_uniranges
00000000007bad30 0000000000000010 R af_limb_uniranges
00000000007bad40 0000000000000008 R af_vaii_nonbase_uniranges
00000000007bad50 0000000000000010 R af_vaii_uniranges
00000000007bad60 0000000000000008 R af_tfng_nonbase_uniranges
00000000007bad70 0000000000000010 R af_tfng_uniranges
00000000007bad80 0000000000000020 R af_thai_nonbase_uniranges
00000000007bada0 0000000000000010 R af_thai_uniranges
00000000007badb0 0000000000000030 R af_telu_nonbase_uniranges
00000000007bade0 0000000000000010 R af_telu_uniranges
00000000007badf0 0000000000000030 R af_tavt_nonbase_uniranges
00000000007bae20 0000000000000010 R af_tavt_uniranges
00000000007bae30 0000000000000020 R af_taml_nonbase_uniranges
00000000007bae50 0000000000000010 R af_taml_uniranges
00000000007bae60 0000000000000018 R af_sund_nonbase_uniranges
00000000007bae80 0000000000000018 R af_sund_uniranges
00000000007baea0 0000000000000018 R af_sinh_nonbase_uniranges
00000000007baec0 0000000000000010 R af_sinh_uniranges
00000000007baed0 0000000000000008 R af_shaw_nonbase_uniranges
00000000007baee0 0000000000000010 R af_shaw_uniranges
00000000007baef0 0000000000000018 R af_saur_nonbase_uniranges
00000000007baf10 0000000000000010 R af_saur_uniranges
00000000007baf20 0000000000000008 R af_rohg_nonbase_uniranges
00000000007baf30 0000000000000010 R af_rohg_uniranges
00000000007baf40 0000000000000008 R af_osma_nonbase_uniranges
00000000007baf50 0000000000000010 R af_osma_uniranges
00000000007baf60 0000000000000008 R af_osge_nonbase_uniranges
00000000007baf70 0000000000000010 R af_osge_uniranges
00000000007baf80 0000000000000008 R af_orkh_nonbase_uniranges
00000000007baf90 0000000000000010 R af_orkh_uniranges
00000000007bafa0 0000000000000008 R af_olck_nonbase_uniranges
00000000007bafb0 0000000000000010 R af_olck_uniranges
00000000007bafc0 0000000000000008 R af_none_nonbase_uniranges
00000000007bafc8 0000000000000008 R af_none_uniranges
00000000007bafd0 0000000000000018 R af_nkoo_nonbase_uniranges
00000000007baff0 0000000000000010 R af_nkoo_uniranges
00000000007bb000 0000000000000068 R af_mymr_nonbase_uniranges
00000000007bb070 0000000000000020 R af_mymr_uniranges
00000000007bb090 0000000000000018 R af_mong_nonbase_uniranges
00000000007bb0b0 0000000000000018 R af_mong_uniranges
00000000007bb0c8 0000000000000008 R af_medf_nonbase_uniranges
00000000007bb0d0 0000000000000010 R af_medf_uniranges
00000000007bb0e0 0000000000000028 R af_mlym_nonbase_uniranges
00000000007bb110 0000000000000010 R af_mlym_uniranges
00000000007bb120 0000000000000008 R af_lisu_nonbase_uniranges
00000000007bb130 0000000000000010 R af_lisu_uniranges
00000000007bb140 0000000000000008 R af_latp_nonbase_uniranges
00000000007bb150 0000000000000070 R af_latp_uniranges
00000000007bb1c0 0000000000000008 R af_latb_nonbase_uniranges
00000000007bb1d0 0000000000000020 R af_latb_uniranges
00000000007bb1f0 0000000000000088 R af_latn_nonbase_uniranges
00000000007bb280 0000000000000108 R af_latn_uniranges
00000000007bb390 0000000000000020 R af_lao_nonbase_uniranges
00000000007bb3b0 0000000000000010 R af_lao_uniranges
00000000007bb3c0 0000000000000008 R af_khms_nonbase_uniranges
00000000007bb3d0 0000000000000010 R af_khms_uniranges
00000000007bb3e0 0000000000000028 R af_khmr_nonbase_uniranges
00000000007bb410 0000000000000010 R af_khmr_uniranges
00000000007bb420 0000000000000038 R af_knda_nonbase_uniranges
00000000007bb460 0000000000000010 R af_knda_uniranges
00000000007bb470 0000000000000010 R af_kali_nonbase_uniranges
00000000007bb480 0000000000000010 R af_kali_uniranges
00000000007bb490 0000000000000030 R af_hebr_nonbase_uniranges
00000000007bb4c0 0000000000000018 R af_hebr_uniranges
00000000007bb4e0 0000000000000030 R af_guru_nonbase_uniranges
00000000007bb510 0000000000000010 R af_guru_uniranges
00000000007bb520 0000000000000038 R af_gujr_nonbase_uniranges
00000000007bb560 0000000000000010 R af_gujr_uniranges
00000000007bb570 0000000000000040 R af_grek_nonbase_uniranges
00000000007bb5b0 0000000000000018 R af_grek_uniranges
00000000007bb5c8 0000000000000008 R af_goth_nonbase_uniranges
00000000007bb5d0 0000000000000010 R af_goth_uniranges
00000000007bb5e0 0000000000000010 R af_glag_nonbase_uniranges
00000000007bb5f0 0000000000000018 R af_glag_uniranges
00000000007bb608 0000000000000008 R af_geok_nonbase_uniranges
00000000007bb610 0000000000000018 R af_geok_uniranges
00000000007bb628 0000000000000008 R af_geor_nonbase_uniranges
00000000007bb630 0000000000000018 R af_geor_uniranges
00000000007bb650 0000000000000010 R af_ethi_nonbase_uniranges
00000000007bb660 0000000000000028 R af_ethi_uniranges
00000000007bb688 0000000000000008 R af_dsrt_nonbase_uniranges
00000000007bb690 0000000000000010 R af_dsrt_uniranges
00000000007bb6a0 0000000000000048 R af_deva_nonbase_uniranges
00000000007bb6f0 0000000000000038 R af_deva_uniranges
00000000007bb730 0000000000000028 R af_cyrl_nonbase_uniranges
00000000007bb760 0000000000000030 R af_cyrl_uniranges
00000000007bb790 0000000000000008 R af_cprt_nonbase_uniranges
00000000007bb7a0 0000000000000010 R af_cprt_uniranges
00000000007bb7b0 0000000000000010 R af_copt_nonbase_uniranges
00000000007bb7c0 0000000000000010 R af_copt_uniranges
00000000007bb7d0 0000000000000008 R af_cher_nonbase_uniranges
00000000007bb7e0 0000000000000018 R af_cher_uniranges
00000000007bb7f8 0000000000000008 R af_cari_nonbase_uniranges
00000000007bb800 0000000000000010 R af_cari_uniranges
00000000007bb810 0000000000000008 R af_cans_nonbase_uniranges
00000000007bb820 0000000000000018 R af_cans_uniranges
00000000007bb840 0000000000000020 R af_cakm_nonbase_uniranges
00000000007bb860 0000000000000010 R af_cakm_uniranges
00000000007bb870 0000000000000010 R af_buhd_nonbase_uniranges
00000000007bb880 0000000000000010 R af_buhd_uniranges
00000000007bb890 0000000000000038 R af_beng_nonbase_uniranges
00000000007bb8d0 0000000000000010 R af_beng_uniranges
00000000007bb8e0 0000000000000010 R af_bamu_nonbase_uniranges
00000000007bb8f0 0000000000000010 R af_bamu_uniranges
00000000007bb900 0000000000000010 R af_avst_nonbase_uniranges
00000000007bb910 0000000000000010 R af_avst_uniranges
00000000007bb920 0000000000000010 R af_armn_nonbase_uniranges
00000000007bb930 0000000000000018 R af_armn_uniranges
00000000007bb950 00000000000000a0 R af_arab_nonbase_uniranges
00000000007bb9f0 0000000000000038 R af_arab_uniranges
00000000007bba30 0000000000000010 R af_adlm_nonbase_uniranges
00000000007bba40 0000000000000010 R af_adlm_uniranges
00000000007bba50 0000000000000014 R af_hani_dflt_style_class
00000000007bba68 0000000000000014 R af_tibt_dflt_style_class
00000000007bba80 0000000000000014 R af_sylo_dflt_style_class
00000000007bba98 0000000000000014 R af_orya_dflt_style_class
00000000007bbab0 0000000000000014 R af_limb_dflt_style_class
00000000007bbac8 0000000000000014 R af_vaii_dflt_style_class
00000000007bbae0 0000000000000014 R af_thai_dflt_style_class
00000000007bbaf8 0000000000000014 R af_tfng_dflt_style_class
00000000007bbb10 0000000000000014 R af_telu_dflt_style_class
00000000007bbb28 0000000000000014 R af_tavt_dflt_style_class
00000000007bbb40 0000000000000014 R af_taml_dflt_style_class
00000000007bbb58 0000000000000014 R af_sund_dflt_style_class
00000000007bbb70 0000000000000014 R af_sinh_dflt_style_class
00000000007bbb88 0000000000000014 R af_shaw_dflt_style_class
00000000007bbba0 0000000000000014 R af_saur_dflt_style_class
00000000007bbbb8 0000000000000014 R af_rohg_dflt_style_class
00000000007bbbd0 0000000000000014 R af_osma_dflt_style_class
00000000007bbbe8 0000000000000014 R af_osge_dflt_style_class
00000000007bbc00 0000000000000014 R af_orkh_dflt_style_class
00000000007bbc18 0000000000000014 R af_olck_dflt_style_class
00000000007bbc30 0000000000000014 R af_none_dflt_style_class
00000000007bbc48 0000000000000014 R af_nkoo_dflt_style_class
00000000007bbc60 0000000000000014 R af_mymr_dflt_style_class
00000000007bbc78 0000000000000014 R af_mong_dflt_style_class
00000000007bbc90 0000000000000014 R af_medf_dflt_style_class
00000000007bbca8 0000000000000014 R af_mlym_dflt_style_class
00000000007bbcc0 0000000000000014 R af_lisu_dflt_style_class
00000000007bbcd8 0000000000000014 R af_latp_dflt_style_class
00000000007bbcf0 0000000000000014 R af_latb_dflt_style_class
00000000007bbd08 0000000000000014 R af_latn_dflt_style_class
00000000007bbd20 0000000000000014 R af_latn_titl_style_class
00000000007bbd38 0000000000000014 R af_latn_sups_style_class
00000000007bbd50 0000000000000014 R af_latn_subs_style_class
00000000007bbd68 0000000000000014 R af_latn_smcp_style_class
00000000007bbd80 0000000000000014 R af_latn_sinf_style_class
00000000007bbd98 0000000000000014 R af_latn_pcap_style_class
00000000007bbdb0 0000000000000014 R af_latn_ordn_style_class
00000000007bbdc8 0000000000000014 R af_latn_c2sc_style_class
00000000007bbde0 0000000000000014 R af_latn_c2cp_style_class
00000000007bbdf8 0000000000000014 R af_lao_dflt_style_class
00000000007bbe10 0000000000000014 R af_knda_dflt_style_class
00000000007bbe28 0000000000000014 R af_khms_dflt_style_class
00000000007bbe40 0000000000000014 R af_khmr_dflt_style_class
00000000007bbe58 0000000000000014 R af_kali_dflt_style_class
00000000007bbe70 0000000000000014 R af_hebr_dflt_style_class
00000000007bbe88 0000000000000014 R af_guru_dflt_style_class
00000000007bbea0 0000000000000014 R af_gujr_dflt_style_class
00000000007bbeb8 0000000000000014 R af_grek_dflt_style_class
00000000007bbed0 0000000000000014 R af_grek_titl_style_class
00000000007bbee8 0000000000000014 R af_grek_sups_style_class
00000000007bbf00 0000000000000014 R af_grek_subs_style_class
00000000007bbf18 0000000000000014 R af_grek_smcp_style_class
00000000007bbf30 0000000000000014 R af_grek_sinf_style_class
00000000007bbf48 0000000000000014 R af_grek_pcap_style_class
00000000007bbf60 0000000000000014 R af_grek_ordn_style_class
00000000007bbf78 0000000000000014 R af_grek_c2sc_style_class
00000000007bbf90 0000000000000014 R af_grek_c2cp_style_class
00000000007bbfa8 0000000000000014 R af_goth_dflt_style_class
00000000007bbfc0 0000000000000014 R af_glag_dflt_style_class
00000000007bbfd8 0000000000000014 R af_geok_dflt_style_class
00000000007bbff0 0000000000000014 R af_geor_dflt_style_class
00000000007bc008 0000000000000014 R af_ethi_dflt_style_class
00000000007bc020 0000000000000014 R af_dsrt_dflt_style_class
00000000007bc038 0000000000000014 R af_deva_dflt_style_class
00000000007bc050 0000000000000014 R af_cyrl_dflt_style_class
00000000007bc068 0000000000000014 R af_cyrl_titl_style_class
00000000007bc080 0000000000000014 R af_cyrl_sups_style_class
00000000007bc098 0000000000000014 R af_cyrl_subs_style_class
00000000007bc0b0 0000000000000014 R af_cyrl_smcp_style_class
00000000007bc0c8 0000000000000014 R af_cyrl_sinf_style_class
00000000007bc0e0 0000000000000014 R af_cyrl_pcap_style_class
00000000007bc0f8 0000000000000014 R af_cyrl_ordn_style_class
00000000007bc110 0000000000000014 R af_cyrl_c2sc_style_class
00000000007bc128 0000000000000014 R af_cyrl_c2cp_style_class
00000000007bc140 0000000000000014 R af_cprt_dflt_style_class
00000000007bc158 0000000000000014 R af_copt_dflt_style_class
00000000007bc170 0000000000000014 R af_cher_dflt_style_class
00000000007bc188 0000000000000014 R af_cari_dflt_style_class
00000000007bc1a0 0000000000000014 R af_cans_dflt_style_class
00000000007bc1b8 0000000000000014 R af_cakm_dflt_style_class
00000000007bc1d0 0000000000000014 R af_buhd_dflt_style_class
00000000007bc1e8 0000000000000014 R af_beng_dflt_style_class
00000000007bc200 0000000000000014 R af_bamu_dflt_style_class
00000000007bc218 0000000000000014 R af_avst_dflt_style_class
00000000007bc230 0000000000000014 R af_armn_dflt_style_class
00000000007bc248 0000000000000014 R af_arab_dflt_style_class
00000000007bc260 0000000000000014 R af_adlm_dflt_style_class
00000000007bc280 0000000000000848 R af_blue_stringsets
00000000007bcad0 000000000000159b R af_blue_strings
00000000007be190 000000000000000c r readFromStack.0
00000000007be1a0 000000000000000c r readFromStack.1
00000000007be1b0 000000000000000c r readFromStack.2
00000000007be1c0 000000000000000c r readFromStack.3
00000000007be1d0 0000000000000080 r ft_char_table
00000000007be250 0000000000000028 r ft_extra_glyph_name_offsets
00000000007be280 0000000000000055 r ft_extra_glyph_names
00000000007be2e0 0000000000000028 r ft_extra_glyph_unicodes
00000000007be310 000000000000dabd R ft_adobe_glyph_list
00000000007cbdd0 0000000000000200 R t1_expert_encoding
00000000007cbfd0 0000000000000200 R t1_standard_encoding
00000000007cc1d0 000000000000030e R ft_sid_names
00000000007cc4e0 0000000000000204 R ft_mac_names
00000000007cc6f0 0000000000000e70 R ft_standard_glyph_names
00000000007cd560 0000000000000018 r __func__.0
00000000007cd578 0000000000000015 r __func__.1
00000000007cd590 0000000000000013 r __func__.10
00000000007cd5a8 0000000000000012 r __func__.11
00000000007cd5c0 000000000000001b r __func__.12
00000000007cd5e0 0000000000000019 r __func__.13
00000000007cd600 000000000000001e r __func__.14
00000000007cd620 0000000000000016 r __func__.15
00000000007cd638 000000000000001a r __func__.16
00000000007cd658 0000000000000018 r __func__.17
00000000007cd670 0000000000000019 r __func__.18
00000000007cd690 0000000000000014 r __func__.19
00000000007cd6a8 0000000000000016 r __func__.2
00000000007cd6c0 0000000000000019 r __func__.20
00000000007cd6e0 0000000000000012 r __func__.21
00000000007cd6f8 0000000000000013 r __func__.22
00000000007cd710 0000000000000011 r __func__.23
00000000007cd728 0000000000000018 r __func__.24
00000000007cd740 0000000000000018 r __func__.25
00000000007cd758 0000000000000013 r __func__.26
00000000007cd770 0000000000000019 r __func__.27
00000000007cd790 0000000000000019 r __func__.28
00000000007cd7b0 000000000000001b r __func__.29
00000000007cd7d0 0000000000000012 r __func__.3
00000000007cd7e8 0000000000000018 r __func__.30
00000000007cd800 000000000000001c r __func__.31
00000000007cd820 0000000000000016 r __func__.32
00000000007cd838 0000000000000011 r __func__.33
00000000007cd850 0000000000000018 r __func__.34
00000000007cd868 000000000000001c r __func__.35
00000000007cd888 0000000000000020 r __func__.36
00000000007cd8a8 000000000000001c r __func__.37
00000000007cd8c8 000000000000001a r __func__.38
00000000007cd8e8 000000000000000f r __func__.39
00000000007cd8f8 0000000000000022 r __func__.4
00000000007cd920 0000000000000012 r __func__.41
00000000007cd938 0000000000000018 r __func__.42
00000000007cd950 0000000000000011 r __func__.43
00000000007cd968 0000000000000013 r __func__.44
00000000007cd980 000000000000000c r __func__.45
00000000007cd990 0000000000000019 r __func__.46
00000000007cd9b0 0000000000000012 r __func__.47
00000000007cd9c8 0000000000000010 r __func__.48
00000000007cd9d8 000000000000000f r __func__.49
00000000007cd9e8 0000000000000022 r __func__.5
00000000007cda10 000000000000000f r __func__.50
00000000007cda20 000000000000000e r __func__.51
00000000007cda30 0000000000000017 r __func__.52
00000000007cda48 0000000000000010 r __func__.53
00000000007cda58 0000000000000016 r __func__.54
00000000007cda70 000000000000000f r __func__.55
00000000007cda80 0000000000000011 r __func__.56
00000000007cda98 0000000000000021 r __func__.57
00000000007cdac0 000000000000000c r __func__.58
00000000007cdad0 000000000000000b r __func__.59
00000000007cdae0 0000000000000013 r __func__.6
00000000007cdaf8 0000000000000015 r __func__.60
00000000007cdb10 0000000000000015 r __func__.61
00000000007cdb28 0000000000000015 r __func__.62
00000000007cdb40 000000000000000e r __func__.63
00000000007cdb50 000000000000000a r __func__.64
00000000007cdb60 0000000000000015 r __func__.65
00000000007cdb78 000000000000000e r __func__.66
00000000007cdb88 000000000000000f r __func__.67
00000000007cdb98 000000000000000f r __func__.68
00000000007cdba8 0000000000000010 r __func__.69
00000000007cdbb8 0000000000000011 r __func__.7
00000000007cdbd0 0000000000000013 r __func__.70
00000000007cdbe8 0000000000000010 r __func__.71
00000000007cdbf8 0000000000000011 r __func__.72
00000000007cdc10 0000000000000010 r __func__.73
00000000007cdc20 0000000000000012 r __func__.74
00000000007cdc38 0000000000000018 r __func__.75
00000000007cdc50 000000000000001f r __func__.76
00000000007cdc70 000000000000001e r __func__.77
00000000007cdc90 0000000000000017 r __func__.78
00000000007cdca8 000000000000001f r __func__.79
00000000007cdcc8 0000000000000022 r __func__.8
00000000007cdcf0 000000000000001e r __func__.80
00000000007cdd10 0000000000000017 r __func__.81
00000000007cdd28 0000000000000010 r __func__.82
00000000007cdd38 000000000000000f r __func__.83
00000000007cdd48 0000000000000012 r __func__.84
00000000007cdd60 0000000000000011 r __func__.85
00000000007cdd78 0000000000000013 r __func__.86
00000000007cdd90 0000000000000010 r __func__.87
00000000007cdda0 000000000000000e r __func__.88
00000000007cddb0 000000000000000f r __func__.89
00000000007cddc0 000000000000001a r __func__.9
00000000007cdde0 000000000000000d r __func__.90
00000000007cddf0 000000000000000e r __func__.91
00000000007cde00 000000000000001d r __func__.92
00000000007cde20 0000000000000016 r __func__.93
00000000007cde38 000000000000000e r __func__.94
00000000007cdf20 0000000000000250 r _eglValidationTable
00000000007ce170 000000000000000c r CSWTCH.4
00000000007ce1e8 000000000000001c r depthfmts.0
00000000007ce208 0000000000000018 r CSWTCH.53
00000000007ce220 000000000000001c r CSWTCH.55
00000000007ce240 00000000000002b2 r CSWTCH.63
00000000007ce4f8 0000000000000010 r CSWTCH.86
00000000007ce508 0000000000000010 r CSWTCH.91
00000000007ce828 0000000000000010 r CSWTCH.133
00000000007ce838 000000000000001c r CSWTCH.91
00000000007ce858 0000000000000030 r code_gk110.5
00000000007ce888 0000000000000078 r code_gm107.6
00000000007ce900 0000000000000028 r code_nvc0.3
00000000007ce928 0000000000000030 r code_nve4.4
00000000007ce958 00000000000002f0 r nve4_su_format_aux_map
00000000007cec48 0000000000000178 r nve4_su_format_map
00000000007cedc0 0000000000000088 r cpbs.0
00000000007cee48 0000000000000004 r deleted_key_value
00000000007cee50 00000000000003e0 r hash_sizes
00000000007cf230 0000000000000017 r __func__.4
00000000007cf538 0000000000000010 r debug_severity_enums
00000000007cf548 0000000000000018 r debug_source_enums
00000000007cf560 0000000000000024 r debug_type_enums
00000000007cfa10 0000000000000028 r CSWTCH.3422
00000000007cfa38 0000000000000028 r CSWTCH.3875
00000000007cfa60 0000000000000017 r __func__.0
00000000007cfa78 0000000000000018 r __func__.1
00000000007cfa90 0000000000000015 r __func__.10
00000000007cfaa8 0000000000000015 r __func__.11
00000000007cfac0 0000000000000016 r __func__.12
00000000007cfad8 0000000000000016 r __func__.13
00000000007cfaf0 0000000000000016 r __func__.14
00000000007cfb08 0000000000000016 r __func__.15
00000000007cfb20 0000000000000016 r __func__.16
00000000007cfb38 0000000000000016 r __func__.17
00000000007cfb50 0000000000000016 r __func__.18
00000000007cfb68 0000000000000017 r __func__.19
00000000007cfb80 0000000000000017 r __func__.2
00000000007cfb98 0000000000000017 r __func__.20
00000000007cfbb0 0000000000000017 r __func__.21
00000000007cfbc8 0000000000000018 r __func__.3
00000000007cfbe0 0000000000000017 r __func__.4
00000000007cfbf8 0000000000000018 r __func__.5
00000000007cfc10 0000000000000016 r __func__.52
00000000007cfc28 0000000000000017 r __func__.53
00000000007cfc40 0000000000000016 r __func__.54
00000000007cfc58 0000000000000017 r __func__.55
00000000007cfc70 0000000000000016 r __func__.56
00000000007cfc88 0000000000000017 r __func__.57
00000000007cfca0 0000000000000016 r __func__.58
00000000007cfcb8 0000000000000017 r __func__.59
00000000007cfcd0 0000000000000017 r __func__.6
00000000007cfce8 0000000000000015 r __func__.60
00000000007cfd00 0000000000000015 r __func__.61
00000000007cfd18 0000000000000015 r __func__.62
00000000007cfd30 0000000000000015 r __func__.63
00000000007cfd48 0000000000000016 r __func__.64
00000000007cfd60 0000000000000016 r __func__.65
00000000007cfd78 0000000000000016 r __func__.66
00000000007cfd90 0000000000000016 r __func__.67
00000000007cfda8 000000000000001b r __func__.68
00000000007cfdc8 000000000000001c r __func__.69
00000000007cfde8 0000000000000018 r __func__.7
00000000007cfe00 0000000000000015 r __func__.8
00000000007cfe18 0000000000000015 r __func__.9
00000000007cfe30 0000000000000029 r CSWTCH.23
00000000007d05b0 000000000000001f r __func__.0
00000000007d0798 0000000000000020 r CSWTCH.175
00000000007d07b8 0000000000000018 r CSWTCH.179
00000000007d07d0 0000000000000018 r CSWTCH.180
00000000007d07d0 0000000000000018 r CSWTCH.181
00000000007d07e8 0000000000000030 r CSWTCH.182
00000000007d0818 000000000000001e r __func__.0
00000000007d0838 00000000000000a9 r mappings
00000000007d08e8 0000000000000013 r __func__.0
00000000007d0900 000000000000001b r __func__.0
00000000007d0920 0000000000002598 r MESA_remap_table_functions
00000000007d2eb8 000000000000f43d r _mesa_function_pool
00000000007e2320 0000000000000114 r CSWTCH.18
00000000007e2438 000000000000002c r CSWTCH.20
00000000007e2530 0000000000000030 r targets.0
00000000007e2a60 00000000000000c0 r anchor_indices
00000000007e2b20 0000000000000a68 r bptc_float_modes
00000000007e3588 0000000000000100 r bptc_unorm_modes
00000000007e3688 0000000000000100 r partition_table1
00000000007e3788 0000000000000100 r partition_table2
00000000007e3888 0000000000000004 r weights2.0
00000000007e3890 0000000000000008 r weights3.1
00000000007e3898 0000000000000010 r weights4.2
00000000007e38a8 0000000000000080 r etc1_modifier_tables
00000000007e3928 0000000000000020 r etc2_distance_table
00000000007e3948 0000000000000200 r etc2_modifier_tables
00000000007e3b48 0000000000000080 r etc2_modifier_tables_non_opaque
00000000007e3bc8 0000000000000020 r lookup.0
00000000007e3bc8 0000000000000020 r lookup.1
00000000007e3be8 0000000000000020 r _rgb_scale_5
00000000007e3c08 0000000000000040 r _rgb_scale_6
00000000007e3c80 0000000000000014 r CSWTCH.326
00000000007e3c98 0000000000000014 r CSWTCH.327
00000000007e3cb0 0000000000000028 r targets.2
00000000007e3cd8 0000000000000010 r zeroData.0
00000000007e3ce8 0000000000000030 r CSWTCH.135
00000000007e3d18 0000000000000030 r CSWTCH.136
00000000007e3d48 0000000000000030 r CSWTCH.137
00000000007e3d78 0000000000000030 r CSWTCH.138
00000000007e3da8 0000000000000028 r default_combine_state
00000000007e3dd0 0000000000000030 r targets.0
00000000007e3e00 00000000000001f8 r compatible_internal_formats
00000000007e3ff8 00000000000000a0 r gles_astc_3d_compatible_internal_formats
00000000007e4098 00000000000000e0 r gles_astc_compatible_internal_formats
00000000007e4178 0000000000000050 r gles_etc2_compatible_internal_formats
00000000007e41c8 0000000000000040 r s3tc_compatible_internal_formats
00000000007e4208 0000000000000050 r CSWTCH.125
00000000007e4278 000000000000000e r CSWTCH.253
00000000007e4288 000000000000000e r CSWTCH.254
00000000007e4298 000000000000000e r CSWTCH.255
00000000007e42a8 0000000000000038 r CSWTCH.256
00000000007e42e0 0000000000000038 r CSWTCH.257
00000000007e4318 0000000000000038 r CSWTCH.258
00000000007e4350 0000000000000038 r CSWTCH.259
00000000007e4388 0000000000000038 r CSWTCH.260
00000000007e43c0 0000000000000038 r CSWTCH.261
00000000007e43f8 0000000000000038 r CSWTCH.262
00000000007e4430 0000000000000038 r CSWTCH.263
00000000007e4468 00000000000001a0 r vertex_formats
00000000007e4608 0000000000000040 r Identity
00000000007e4648 0000000000000015 r __func__.0
00000000007e4660 000000000000001b r __func__.1
00000000007e4680 0000000000000019 r __func__.10
00000000007e46a0 0000000000000019 r __func__.11
00000000007e46c0 0000000000000019 r __func__.12
00000000007e46e0 000000000000001a r __func__.13
00000000007e4700 000000000000001a r __func__.14
00000000007e4720 000000000000001a r __func__.15
00000000007e4740 000000000000001a r __func__.16
00000000007e4760 000000000000001a r __func__.17
00000000007e4780 000000000000001a r __func__.18
00000000007e47a0 000000000000001a r __func__.19
00000000007e47c0 000000000000001c r __func__.2
00000000007e47e0 000000000000001b r __func__.20
00000000007e4800 000000000000001b r __func__.21
00000000007e4820 000000000000001b r __func__.22
00000000007e4840 000000000000001b r __func__.3
00000000007e4860 000000000000001c r __func__.4
00000000007e4880 000000000000001b r __func__.5
00000000007e48a0 000000000000001a r __func__.53
00000000007e48c0 000000000000001b r __func__.54
00000000007e48e0 000000000000001a r __func__.55
00000000007e4900 000000000000001b r __func__.56
00000000007e4920 000000000000001a r __func__.57
00000000007e4940 000000000000001b r __func__.58
00000000007e4960 000000000000001a r __func__.59
00000000007e4980 000000000000001c r __func__.6
00000000007e49a0 000000000000001b r __func__.60
00000000007e49c0 0000000000000019 r __func__.61
00000000007e49e0 0000000000000019 r __func__.62
00000000007e4a00 0000000000000019 r __func__.63
00000000007e4a20 0000000000000019 r __func__.64
00000000007e4a40 000000000000001a r __func__.65
00000000007e4a60 000000000000001a r __func__.66
00000000007e4a80 000000000000001a r __func__.67
00000000007e4aa0 000000000000001a r __func__.68
00000000007e4ac0 000000000000001f r __func__.69
00000000007e4ae0 000000000000001b r __func__.7
00000000007e4b00 0000000000000020 r __func__.74
00000000007e4b20 000000000000001c r __func__.8
00000000007e4b40 0000000000000019 r __func__.9
00000000007e4b60 0000000000000020 r default_double.71
00000000007e4b80 0000000000000010 r default_float.73
00000000007e4b90 0000000000000010 r default_int.72
00000000007e4ba0 0000000000000020 r default_uint64.70
00000000007e4bc0 0000000000000040 R _vbo_attribute_alias_map
00000000007e4c00 000000000000001d r __func__.0
00000000007e4c20 000000000000001e r __func__.1
00000000007e4c40 000000000000001b r __func__.10
00000000007e4c60 000000000000001b r __func__.11
00000000007e4c80 000000000000001c r __func__.12
00000000007e4ca0 000000000000001c r __func__.13
00000000007e4cc0 000000000000001c r __func__.14
00000000007e4ce0 000000000000001c r __func__.15
00000000007e4d00 000000000000001c r __func__.16
00000000007e4d20 000000000000001c r __func__.17
00000000007e4d40 000000000000001c r __func__.18
00000000007e4d60 000000000000001d r __func__.19
00000000007e4d80 000000000000001d r __func__.2
00000000007e4da0 000000000000001d r __func__.20
00000000007e4dc0 000000000000001d r __func__.21
00000000007e4de0 000000000000001e r __func__.3
00000000007e4e00 000000000000001d r __func__.4
00000000007e4e20 000000000000001e r __func__.5
00000000007e4e40 000000000000001c r __func__.52
00000000007e4e60 000000000000001d r __func__.53
00000000007e4e80 000000000000001c r __func__.54
00000000007e4ea0 000000000000001d r __func__.55
00000000007e4ec0 000000000000001c r __func__.56
00000000007e4ee0 000000000000001d r __func__.57
00000000007e4f00 000000000000001c r __func__.58
00000000007e4f20 000000000000001d r __func__.59
00000000007e4f40 000000000000001d r __func__.6
00000000007e4f60 000000000000001b r __func__.60
00000000007e4f80 000000000000001b r __func__.61
00000000007e4fa0 000000000000001b r __func__.62
00000000007e4fc0 000000000000001b r __func__.63
00000000007e4fe0 000000000000001c r __func__.64
00000000007e5000 000000000000001c r __func__.65
00000000007e5020 000000000000001c r __func__.66
00000000007e5040 000000000000001c r __func__.67
00000000007e5060 0000000000000021 r __func__.68
00000000007e5088 0000000000000022 r __func__.69
00000000007e50b0 000000000000001e r __func__.7
00000000007e50d0 000000000000001b r __func__.8
00000000007e50f0 000000000000001b r __func__.9
00000000007e5110 0000000000000018 r __func__.0
00000000007e5128 0000000000000019 r __func__.1
00000000007e5148 0000000000000016 r __func__.10
00000000007e5160 0000000000000016 r __func__.11
00000000007e5178 0000000000000017 r __func__.12
00000000007e5190 0000000000000017 r __func__.13
00000000007e51a8 0000000000000017 r __func__.14
00000000007e51c0 0000000000000017 r __func__.15
00000000007e51d8 0000000000000017 r __func__.16
00000000007e51f0 0000000000000017 r __func__.17
00000000007e5208 0000000000000017 r __func__.18
00000000007e5220 0000000000000018 r __func__.19
00000000007e5238 0000000000000018 r __func__.2
00000000007e5250 0000000000000018 r __func__.20
00000000007e5268 0000000000000018 r __func__.21
00000000007e5280 0000000000000019 r __func__.3
00000000007e52a0 0000000000000018 r __func__.4
00000000007e52b8 0000000000000019 r __func__.5
00000000007e52d8 0000000000000017 r __func__.52
00000000007e52f0 0000000000000018 r __func__.53
00000000007e5308 0000000000000017 r __func__.54
00000000007e5320 0000000000000018 r __func__.55
00000000007e5338 0000000000000017 r __func__.56
00000000007e5350 0000000000000018 r __func__.57
00000000007e5368 0000000000000017 r __func__.58
00000000007e5380 0000000000000018 r __func__.59
00000000007e5398 0000000000000018 r __func__.6
00000000007e53b0 0000000000000016 r __func__.60
00000000007e53c8 0000000000000016 r __func__.61
00000000007e53e0 0000000000000016 r __func__.62
00000000007e53f8 0000000000000016 r __func__.63
00000000007e5410 0000000000000017 r __func__.64
00000000007e5428 0000000000000017 r __func__.65
00000000007e5440 0000000000000017 r __func__.66
00000000007e5458 0000000000000017 r __func__.67
00000000007e5470 000000000000001c r __func__.68
00000000007e5490 0000000000000019 r __func__.7
00000000007e54b0 000000000000001d r __func__.73
00000000007e54d0 0000000000000016 r __func__.8
00000000007e54e8 0000000000000016 r __func__.9
00000000007e5500 0000000000000020 r default_double.70
00000000007e5520 0000000000000010 r default_float.72
00000000007e5530 0000000000000010 r default_int.71
00000000007e5540 0000000000000020 r default_uint64.69
00000000007e5be0 000000000001671d r enum_string_table
00000000007fc300 0000000000007660 r enum_string_table_offsets
0000000000803a60 0000000000000018 r CSWTCH.218
0000000000803d88 00000000000002b2 r CSWTCH.47
0000000000804850 0000000000000010 r table_1010102_snorm
0000000000804860 0000000000000010 r table_1010102_uint
0000000000804870 0000000000000010 r table_1010102_unorm
0000000000804880 0000000000000020 r table_8888_unorm
00000000008048a0 0000000000000010 r zeros.3
00000000008048b0 000000000000001c r CSWTCH.3
00000000008048d0 000000000000001c r CSWTCH.4
00000000008048f0 000000000000001c r CSWTCH.5
0000000000804910 0000000000000018 r CSWTCH.43
0000000000804928 0000000000000320 r cap_mapping.10
0000000000804c48 0000000000000010 r color_formats.4
0000000000804c58 0000000000000014 r depth_formats.3
0000000000804c70 000000000000008c r depthstencil_mapping.7
0000000000804d00 00000000000004ec r rendertarget_mapping.9
00000000008051f0 000000000000008c r rt_blendable.8
0000000000805280 000000000000008c r tbo_rgb32.0
0000000000805310 00000000000009d8 r texture_mapping.6
0000000000805ce8 00000000000001a4 r vertex_mapping.5
0000000000805e90 0000000000005d00 r format_map
000000000080bd90 0000000000000004 r zero.0
000000000080bd98 000000000000001c r CSWTCH.47
000000000080bdb8 000000000000000a r bias_state.1
000000000080bdc8 000000000000000a r depth_range_state
000000000080bdd8 000000000000000a r scale_state.2
000000000080bde8 000000000000000a r texcoord_state.0
000000000080bdf8 000000000000001c r CSWTCH.24
000000000080be18 0000000000000034 r known_desktop_gl_versions
000000000080be50 0000000000000034 r known_desktop_glsl_versions
000000000080be88 0000000000000028 r _mesa_glsl_process_extension(char const*, YYLTYPE*, char const*, YYLTYPE*, _mesa_glsl_parse_state*)::fmt
000000000080c0a0 0000000000000034 r CSWTCH.324
000000000080c0d8 000000000000000e R ir_variable::tmp_name
000000000080c0e8 000000000000001a r ir_swizzle::create(ir_rvalue*, char const*, unsigned int)::idx_map
000000000080c108 000000000000001a r ir_swizzle::create(ir_rvalue*, char const*, unsigned int)::base_idx
000000000080c128 0000000000000050 r CSWTCH.302
000000000080c178 0000000000000050 r CSWTCH.30
000000000080c1f0 0000000000000050 r CSWTCH.228
000000000080c240 000000000000000e r CSWTCH.231
000000000080c250 000000000000000c r CSWTCH.255
000000000080c3b0 0000000000000050 r CSWTCH.67
000000000080c400 0000000000000010 r CSWTCH.61
000000000080c540 0000000000000018 r CSWTCH.162
000000000080c558 000000000000000d r CSWTCH.41
000000000080c7d8 000000000000018a r yytranslate
000000000080c968 0000000000000272 r yyr1
000000000080cbe0 0000000000000139 r yyr2
000000000080cd20 00000000000003b6 r yypact
000000000080d0d8 00000000000013a6 r yycheck
000000000080e480 00000000000000de r yypgoto
000000000080e560 00000000000013a6 r yytable
000000000080f908 00000000000003b6 r yydefact
000000000080fcc0 00000000000000de r yydefgoto
000000000080fda0 0000000000000020 r _mesa_glsl_parse(_mesa_glsl_parse_state*)::yyloc_default
0000000000810000 0000000000000100 r yy_ec
0000000000810100 0000000000000d28 r yy_chk
0000000000810e28 00000000000008ce r yy_def
00000000008116f8 0000000000000d28 r yy_nxt
0000000000812420 00000000000008ce r yy_base
0000000000812cf0 000000000000004a r yy_meta
0000000000812d40 00000000000008b0 r yy_accept
0000000000813670 000000000000017a r yy_accept
00000000008137f0 00000000000001a0 r yy_base
0000000000813990 0000000000000498 r yy_chk
0000000000813e28 00000000000001a0 r yy_def
0000000000813fc8 0000000000000100 r yy_ec
00000000008140c8 0000000000000031 r yy_meta
0000000000814100 0000000000000498 r yy_nxt
00000000008146a0 00000000000005b8 r yycheck
0000000000814c58 00000000000000b9 r yydefact
0000000000814d18 0000000000000028 r yydefgoto
0000000000814d40 0000000000000014 r yyloc_default.0
0000000000814d58 0000000000000172 r yypact
0000000000814ed0 0000000000000028 r yypgoto
0000000000814ef8 0000000000000075 r yyr1
0000000000814f70 0000000000000075 r yyr2
0000000000814fe8 00000000000000ea r yyrline
00000000008150d8 00000000000000b9 r yystos
0000000000815198 00000000000002dc r yytable
0000000000815478 000000000000012b r yytranslate
00000000008155a8 0000000000000050 r CSWTCH.378
00000000008155f8 000000000000000e r CSWTCH.381
0000000000815608 0000000000000020 r prime_deltas
0000000000815678 00000000000003f0 r opcode_info
0000000000815a68 0000000000000038 r CSWTCH.35
0000000000815aa0 0000000000000028 r CSWTCH.39
0000000000815c00 0000000000000048 r CSWTCH.21
0000000000815c48 0000000000000024 r CSWTCH.4
0000000000815cf0 0000000000000048 r shader_templ.3
0000000000815d38 000000000000023b r text.4
0000000000815f78 00000000000000b4 r text.5
0000000000816030 00000000000001e0 r vbuf_format_fallbacks
0000000000816210 000000000000000f r slab_order.0
0000000000816220 0000000000000060 r CSWTCH.24
0000000000816280 0000000000000030 r CSWTCH.45
00000000008162b0 0000000000000060 r nouveau_decoder_msvld
0000000000816310 000000000000001c r CSWTCH.104
0000000000816330 0000000000000002 r ms1.3
0000000000816338 0000000000000004 r ms2.2
0000000000816340 0000000000000008 r ms4.1
0000000000816348 0000000000000010 r ms8.0
0000000000816358 00000000000011a0 R nvc0_format_table
00000000008174f8 0000000000000bc0 R nvc0_vertex_format
00000000008180b8 0000000000000010 r CSWTCH.33
00000000008180c8 000000000000000c r CSWTCH.34
00000000008180f8 0000000000000028 r CSWTCH.44
0000000000818120 0000000000000028 r CSWTCH.45
0000000000818148 0000000000000028 r sm20_achieved_occupancy
0000000000818170 0000000000000028 r sm20_branch_efficiency
0000000000818198 0000000000000028 r sm20_inst_per_wrap
00000000008181c0 0000000000000028 r sm20_inst_replay_overhead
00000000008181e8 0000000000000028 r sm20_ipc
0000000000818210 0000000000000028 r sm20_issue_slot_utilization
0000000000818238 0000000000000028 r sm20_issued_ipc
0000000000818260 0000000000000028 r sm21_inst_issued
0000000000818288 0000000000000028 r sm21_inst_replay_overhead
00000000008182b0 0000000000000028 r sm21_issue_slot_utilization
00000000008182d8 0000000000000028 r sm21_issue_slots
0000000000818300 0000000000000028 r sm21_issued_ipc
0000000000818328 0000000000000028 r sm30_inst_issued
0000000000818350 0000000000000028 r sm30_inst_replay_overhead
0000000000818378 0000000000000028 r sm30_issue_slot_utilization
00000000008183a0 0000000000000028 r sm30_issue_slots
00000000008183c8 0000000000000028 r sm30_issued_ipc
00000000008183f0 0000000000000028 r sm30_shared_replay_overhead
0000000000818418 0000000000000028 r sm30_warp_execution_efficiency
0000000000818440 0000000000000028 r sm35_warp_nonpred_execution_efficiency
0000000000818468 0000000000000160 r gm107_read_hw_sm_counters_code
00000000008185c8 00000000000000b8 r nvc0_read_hw_sm_counters_code
0000000000818680 0000000000000130 r nve4_read_hw_sm_counters_code
00000000008187b0 0000000000000130 r nvf0_read_hw_sm_counters_code
00000000008188e0 0000000000000068 r sm20_active_cycles
0000000000818948 0000000000000068 r sm20_active_warps
00000000008189b0 0000000000000068 r sm20_atom_count
0000000000818a18 0000000000000068 r sm20_branch
0000000000818a80 0000000000000068 r sm20_divergent_branch
0000000000818ae8 0000000000000068 r sm20_gld_request
0000000000818b50 0000000000000068 r sm20_gred_count
0000000000818bb8 0000000000000068 r sm20_gst_request
0000000000818c20 0000000000000068 r sm20_inst_executed
0000000000818c88 0000000000000068 r sm20_inst_issued
0000000000818cf0 0000000000000068 r sm20_local_ld
0000000000818d58 0000000000000068 r sm20_local_st
0000000000818dc0 0000000000000068 r sm20_prof_trigger_0
0000000000818e28 0000000000000068 r sm20_prof_trigger_1
0000000000818e90 0000000000000068 r sm20_prof_trigger_2
0000000000818ef8 0000000000000068 r sm20_prof_trigger_3
0000000000818f60 0000000000000068 r sm20_prof_trigger_4
0000000000818fc8 0000000000000068 r sm20_prof_trigger_5
0000000000819030 0000000000000068 r sm20_prof_trigger_6
0000000000819098 0000000000000068 r sm20_prof_trigger_7
0000000000819100 0000000000000068 r sm20_shared_ld
0000000000819168 0000000000000068 r sm20_shared_st
00000000008191d0 0000000000000068 r sm20_th_inst_executed_0
0000000000819238 0000000000000068 r sm20_th_inst_executed_1
00000000008192a0 0000000000000068 r sm20_threads_launched
0000000000819308 0000000000000068 r sm20_warps_launched
0000000000819370 0000000000000068 r sm21_inst_executed
00000000008193d8 0000000000000068 r sm21_inst_issued1_0
0000000000819440 0000000000000068 r sm21_inst_issued1_1
00000000008194a8 0000000000000068 r sm21_inst_issued2_0
0000000000819510 0000000000000068 r sm21_inst_issued2_1
0000000000819578 0000000000000068 r sm21_th_inst_executed_0
00000000008195e0 0000000000000068 r sm21_th_inst_executed_1
0000000000819648 0000000000000068 r sm21_th_inst_executed_2
00000000008196b0 0000000000000068 r sm21_th_inst_executed_3
0000000000819718 0000000000000068 r sm30_active_cycles
0000000000819780 0000000000000068 r sm30_active_warps
00000000008197e8 0000000000000068 r sm30_atom_cas_count
0000000000819850 0000000000000068 r sm30_atom_count
00000000008198b8 0000000000000068 r sm30_branch
0000000000819920 0000000000000068 r sm30_divergent_branch
0000000000819988 0000000000000068 r sm30_gld_mem_div_replay
00000000008199f0 0000000000000068 r sm30_gld_request
0000000000819a58 0000000000000068 r sm30_gred_count
0000000000819ac0 0000000000000068 r sm30_gst_mem_div_replay
0000000000819b28 0000000000000068 r sm30_gst_request
0000000000819b90 0000000000000068 r sm30_gst_transactions
0000000000819bf8 0000000000000068 r sm30_inst_executed
0000000000819c60 0000000000000068 r sm30_inst_issued1
0000000000819cc8 0000000000000068 r sm30_inst_issued2
0000000000819d30 0000000000000068 r sm30_l1_gld_hit
0000000000819d98 0000000000000068 r sm30_l1_gld_miss
0000000000819e00 0000000000000068 r sm30_l1_gld_transactions
0000000000819e68 0000000000000068 r sm30_l1_gst_transactions
0000000000819ed0 0000000000000068 r sm30_l1_local_ld_hit
0000000000819f38 0000000000000068 r sm30_l1_local_ld_miss
0000000000819fa0 0000000000000068 r sm30_l1_local_st_hit
000000000081a008 0000000000000068 r sm30_l1_local_st_miss
000000000081a070 0000000000000068 r sm30_l1_shared_ld_transactions
000000000081a0d8 0000000000000068 r sm30_l1_shared_st_transactions
000000000081a140 0000000000000068 r sm30_local_ld
000000000081a1a8 0000000000000068 r sm30_local_ld_transactions
000000000081a210 0000000000000068 r sm30_local_st
000000000081a278 0000000000000068 r sm30_local_st_transactions
000000000081a2e0 0000000000000068 r sm30_prof_trigger_0
000000000081a348 0000000000000068 r sm30_prof_trigger_1
000000000081a3b0 0000000000000068 r sm30_prof_trigger_2
000000000081a418 0000000000000068 r sm30_prof_trigger_3
000000000081a480 0000000000000068 r sm30_prof_trigger_4
000000000081a4e8 0000000000000068 r sm30_prof_trigger_5
000000000081a550 0000000000000068 r sm30_prof_trigger_6
000000000081a5b8 0000000000000068 r sm30_prof_trigger_7
000000000081a620 0000000000000068 r sm30_shared_ld
000000000081a688 0000000000000068 r sm30_shared_ld_replay
000000000081a6f0 0000000000000068 r sm30_shared_st
000000000081a758 0000000000000068 r sm30_shared_st_replay
000000000081a7c0 0000000000000068 r sm30_sm_cta_launched
000000000081a828 0000000000000068 r sm30_threads_launched
000000000081a890 0000000000000068 r sm30_uncached_gld_transactions
000000000081a8f8 0000000000000068 r sm30_warps_launched
000000000081a960 0000000000000068 r sm35_atom_cas_count
000000000081a9c8 0000000000000068 r sm35_atom_count
000000000081aa30 0000000000000068 r sm35_gred_count
000000000081aa98 0000000000000068 r sm35_not_pred_off_inst_executed
000000000081ab00 0000000000000068 r sm35_shared_ld_replay
000000000081ab68 0000000000000068 r sm35_shared_st_replay
000000000081abd0 0000000000000068 r sm35_th_inst_executed
000000000081ac38 0000000000000068 r sm50_active_ctas
000000000081aca0 0000000000000068 r sm50_active_cycles
000000000081ad08 0000000000000068 r sm50_active_warps
000000000081ad70 0000000000000068 r sm50_atom_count
000000000081add8 0000000000000068 r sm50_branch
000000000081ae40 0000000000000068 r sm50_divergent_branch
000000000081aea8 0000000000000068 r sm50_global_atom_cas
000000000081af10 0000000000000068 r sm50_global_ld
000000000081af78 0000000000000068 r sm50_global_st
000000000081afe0 0000000000000068 r sm50_gred_count
000000000081b048 0000000000000068 r sm50_inst_executed
000000000081b0b0 0000000000000068 r sm50_inst_issued0
000000000081b118 0000000000000068 r sm50_inst_issued1
000000000081b180 0000000000000068 r sm50_inst_issued2
000000000081b1e8 0000000000000068 r sm50_local_ld
000000000081b250 0000000000000068 r sm50_local_st
000000000081b2b8 0000000000000068 r sm50_not_pred_off_inst_executed
000000000081b320 0000000000000068 r sm50_prof_trigger_0
000000000081b388 0000000000000068 r sm50_prof_trigger_1
000000000081b3f0 0000000000000068 r sm50_prof_trigger_2
000000000081b458 0000000000000068 r sm50_prof_trigger_3
000000000081b4c0 0000000000000068 r sm50_prof_trigger_4
000000000081b528 0000000000000068 r sm50_prof_trigger_5
000000000081b590 0000000000000068 r sm50_prof_trigger_6
000000000081b5f8 0000000000000068 r sm50_prof_trigger_7
000000000081b660 0000000000000068 r sm50_shared_atom
000000000081b6c8 0000000000000068 r sm50_shared_atom_cas
000000000081b730 0000000000000068 r sm50_shared_ld
000000000081b798 0000000000000068 r sm50_shared_ld_bank_conflict
000000000081b800 0000000000000068 r sm50_shared_ld_transactions
000000000081b868 0000000000000068 r sm50_shared_st
000000000081b8d0 0000000000000068 r sm50_shared_st_bank_conflict
000000000081b938 0000000000000068 r sm50_shared_st_transactions
000000000081b9a0 0000000000000068 r sm50_sm_cta_launched
000000000081ba08 0000000000000068 r sm50_th_inst_executed
000000000081ba70 0000000000000068 r sm50_warps_launched
000000000081bad8 0000000000000068 r sm52_atom_count
000000000081bb40 0000000000000068 r sm52_global_atom_cas
000000000081bba8 0000000000000068 r sm52_global_ld
000000000081bc10 0000000000000068 r sm52_global_st
000000000081bc78 0000000000000068 r sm52_gred_count
000000000081bce0 0000000000000068 r sm52_inst_executed
000000000081bd48 0000000000000068 r sm52_inst_issued0
000000000081bdb0 0000000000000068 r sm52_inst_issued1
000000000081be18 0000000000000068 r sm52_inst_issued2
000000000081be80 0000000000000068 r sm52_local_ld
000000000081bee8 0000000000000068 r sm52_local_st
000000000081bf50 0000000000000068 r sm52_shared_atom
000000000081bfb8 0000000000000068 r sm52_shared_atom_cas
000000000081c020 0000000000000068 r sm52_shared_ld
000000000081c088 0000000000000068 r sm52_shared_st
000000000081c0f0 0000000000000068 r sm52_warps_launched
000000000081c158 0000000000000038 r supported_modifiers.0
000000000081c190 0000000000000014 r CSWTCH.55
000000000081c1a8 0000000000000010 r CSWTCH.57
000000000081c1b8 0000000000000040 r CSWTCH.59
000000000081c1f8 0000000000000020 r CSWTCH.63
000000000081c218 0000000000000068 r CSWTCH.66
000000000081c280 0000000000000010 r lut.0
000000000081c290 0000000000000060 r CSWTCH.8
000000000081c2f0 0000000000000060 r CSWTCH.9
000000000081c350 0000000000000060 r CSWTCH.11
000000000081c3b0 0000000000000011 r hex_digits.0
000000000081c3cc 0000000000000004 r deleted_key_value
000000000081c3d0 00000000000003e0 r hash_sizes
000000000081c7b0 0000000000000100 R util_format_linear_to_srgb_8unorm_table
000000000081c8b0 00000000000001a0 R util_format_linear_to_srgb_helper_table
000000000081ca50 0000000000000400 R util_format_srgb_8unorm_to_linear_float_table
000000000081ce50 0000000000000100 R util_format_srgb_to_linear_8unorm_table
000000000081cf50 00000000000000c0 r anchor_indices
000000000081d010 0000000000000a68 r bptc_float_modes
000000000081da78 0000000000000100 r bptc_unorm_modes
000000000081db78 0000000000000100 r partition_table1
000000000081dc78 0000000000000100 r partition_table2
000000000081dd78 0000000000000004 r weights2.0
000000000081dd80 0000000000000008 r weights3.1
000000000081dd88 0000000000000010 r weights4.2
000000000081dd98 0000000000000080 r etc1_modifier_tables
000000000081de18 0000000000000020 r lookup.0
000000000081de38 0000000000000029 r __func__.0
000000000081de68 000000000000002b r __func__.1
000000000081de98 000000000000002a r __func__.2
000000000081dec8 0000000000000029 r __func__.3
000000000081def8 000000000000002b r __func__.4
000000000081df28 000000000000002a r __func__.5
000000000081df58 0000000000000029 r __func__.0
000000000081df88 000000000000002b r __func__.1
000000000081dfb8 000000000000002a r __func__.2
000000000081dfe8 0000000000000029 r __func__.3
000000000081e018 000000000000002b r __func__.4
000000000081e048 000000000000002a r __func__.5
000000000081e078 0000000000000050 r CSWTCH.136
000000000081e140 0000000000000009 r swz.5
000000000081e150 0000000000000014 r CSWTCH.9
000000000081e168 000000000000000a r fogColorState.0
000000000081e178 000000000000000a r fogPStateOpt.1
000000000081e188 0000000000000028 r mvpState.2
000000000081e1b0 0000000000000028 r mvpState.3
000000000081e310 0000000000000048 r CSWTCH.38
000000000081e358 000000000000001e r __func__.1
000000000081e378 000000000000001e r __func__.2
000000000081e420 0000000000000060 R _mesa_vao_attribute_map
000000000081e480 0000000000000074 r CSWTCH.71
000000000081e4f8 0000000000000010 r color_logicop_mapping
000000000081e690 0000000000000004 r undef
000000000081e8d4 0000000000000004 R RGBA32_FLOAT
000000000081e8d8 0000000000000004 R RGBA32_INT
000000000081e8dc 0000000000000004 R RGBA32_UINT
000000000081ec60 0000000000000018 r error_value
000000000081ec78 0000000000000008 r extra_AMD_depth_clamp_separate
000000000081ec80 0000000000000008 r extra_AMD_framebuffer_multisample_advanced
000000000081ec88 000000000000000c r extra_ARB_ES2_compatibility_api_es2
000000000081ec98 000000000000000c r extra_ARB_ES3_compatibility_api_es3
000000000081eca8 0000000000000008 r extra_ARB_blend_func_extended
000000000081ecb0 0000000000000008 r extra_ARB_clip_control
000000000081ecb8 0000000000000008 r extra_ARB_color_buffer_float
000000000081ecc0 000000000000000c r extra_ARB_color_buffer_float_or_glcore
000000000081ecd0 000000000000000c r extra_ARB_compute_shader_es31
000000000081ece0 0000000000000008 r extra_ARB_compute_variable_group_size
000000000081ece8 0000000000000008 r extra_ARB_cull_distance
000000000081ecf0 0000000000000008 r extra_ARB_depth_clamp
000000000081ecf8 0000000000000008 r extra_ARB_draw_indirect
000000000081ed00 0000000000000008 r extra_ARB_explicit_uniform_location
000000000081ed08 0000000000000008 r extra_ARB_fragment_program
000000000081ed10 0000000000000008 r extra_ARB_fragment_shader
000000000081ed18 0000000000000008 r extra_ARB_framebuffer_no_attachments
000000000081ed20 0000000000000008 r extra_ARB_framebuffer_no_attachments_and_geometry_shader
000000000081ed28 000000000000000c r extra_ARB_framebuffer_object_EXT_framebuffer_multisample
000000000081ed38 000000000000000c r extra_ARB_gpu_shader5_or_OES_sample_variables
000000000081ed48 000000000000000c r extra_ARB_gpu_shader5_or_oes_geometry_shader
000000000081ed58 0000000000000008 r extra_ARB_indirect_parameters
000000000081ed60 0000000000000008 r extra_ARB_polygon_offset_clamp
000000000081ed68 0000000000000008 r extra_ARB_query_buffer_object
000000000081ed70 0000000000000008 r extra_ARB_sample_locations
000000000081ed78 0000000000000008 r extra_ARB_seamless_cube_map
000000000081ed80 0000000000000008 r extra_ARB_shader_atomic_counters
000000000081ed88 0000000000000008 r extra_ARB_shader_atomic_counters_and_geometry_shader
000000000081ed90 0000000000000008 r extra_ARB_shader_atomic_counters_and_tessellation
000000000081ed98 0000000000000008 r extra_ARB_shader_image_load_store
000000000081eda0 0000000000000008 r extra_ARB_shader_image_load_store_and_geometry_shader
000000000081eda8 0000000000000008 r extra_ARB_shader_image_load_store_and_tessellation
000000000081edb0 0000000000000010 r extra_ARB_shader_image_load_store_shader_storage_buffer_object_es31
000000000081edc0 0000000000000008 r extra_ARB_shader_storage_buffer_object
000000000081edc8 0000000000000008 r extra_ARB_shader_storage_buffer_object_and_geometry_shader
000000000081edd0 000000000000000c r extra_ARB_shader_storage_buffer_object_es31
000000000081ede0 0000000000000008 r extra_ARB_sparse_buffer
000000000081ede8 0000000000000008 r extra_ARB_spirv_extensions
000000000081edf0 0000000000000008 r extra_ARB_sync
000000000081edf8 0000000000000008 r extra_ARB_tessellation_shader
000000000081ee00 0000000000000008 r extra_ARB_texture_buffer_range
000000000081ee08 0000000000000008 r extra_ARB_texture_cube_map
000000000081ee10 000000000000000c r extra_ARB_texture_cube_map_array_OES_texture_cube_map_array
000000000081ee20 0000000000000008 r extra_ARB_texture_gather
000000000081ee28 0000000000000008 r extra_ARB_texture_multisample
000000000081ee30 0000000000000008 r extra_ARB_timer_query
000000000081ee38 000000000000000c r extra_ARB_transform_feedback2_api_es3
000000000081ee48 0000000000000008 r extra_ARB_transform_feedback3
000000000081ee50 000000000000000c r extra_ARB_transform_feedback3_ARB_gpu_shader5
000000000081ee60 0000000000000008 r extra_ARB_uniform_buffer_object
000000000081ee68 0000000000000008 r extra_ARB_uniform_buffer_object_and_geometry_shader
000000000081ee70 0000000000000008 r extra_ARB_vertex_program
000000000081ee78 000000000000000c r extra_ARB_vertex_program_ARB_fragment_program
000000000081ee88 000000000000000c r extra_ARB_vertex_program_api_es2
000000000081ee98 0000000000000008 r extra_ARB_vertex_shader
000000000081eea0 000000000000000c r extra_ARB_viewport_array_or_oes_geometry_shader
000000000081eeb0 000000000000000c r extra_ARB_viewport_array_or_oes_viewport_array
000000000081eec0 0000000000000008 r extra_ATI_fragment_shader
000000000081eec8 0000000000000008 r extra_ATI_meminfo
000000000081eed0 000000000000000c r extra_ES32
000000000081eee0 0000000000000008 r extra_EXT_depth_bounds_test
000000000081eee8 0000000000000010 r extra_EXT_disjoint_timer_query
000000000081eef8 0000000000000008 r extra_EXT_framebuffer_sRGB
000000000081ef00 000000000000000c r extra_EXT_framebuffer_sRGB_and_new_buffers
000000000081ef10 000000000000000c r extra_EXT_packed_float
000000000081ef20 0000000000000008 r extra_EXT_pixel_buffer_object
000000000081ef28 0000000000000008 r extra_EXT_provoking_vertex
000000000081ef30 0000000000000008 r extra_EXT_provoking_vertex_32
000000000081ef38 0000000000000010 r extra_EXT_shader_framebuffer_fetch
000000000081ef48 0000000000000008 r extra_EXT_stencil_two_side
000000000081ef50 0000000000000008 r extra_EXT_texture_array
000000000081ef58 000000000000000c r extra_EXT_texture_array_es3
000000000081ef68 0000000000000008 r extra_EXT_texture_filter_anisotropic
000000000081ef70 000000000000000c r extra_EXT_texture_integer_and_new_buffers
000000000081ef80 0000000000000008 r extra_EXT_transform_feedback
000000000081ef88 0000000000000008 r extra_EXT_window_rectangles
000000000081ef90 0000000000000010 r extra_GLSL_130_es3_gpushader4
000000000081efa0 0000000000000008 r extra_INTEL_conservative_rasterization
000000000081efa8 0000000000000008 r extra_INTEL_performance_query
000000000081efb0 0000000000000008 r extra_KHR_blend_equation_advanced_coherent
000000000081efb8 0000000000000008 r extra_KHR_robustness
000000000081efc0 0000000000000010 r extra_KHR_robustness_or_GL
000000000081efd0 0000000000000008 r extra_NVX_gpu_memory_info
000000000081efd8 0000000000000008 r extra_NV_conservative_raster
000000000081efe0 0000000000000008 r extra_NV_conservative_raster_dilate
000000000081efe8 0000000000000008 r extra_NV_conservative_raster_pre_snap_triangles
000000000081eff0 0000000000000008 r extra_NV_fog_distance
000000000081eff8 0000000000000008 r extra_NV_point_sprite
000000000081f000 000000000000000c r extra_NV_point_sprite_ARB_point_sprite
000000000081f010 0000000000000008 r extra_NV_primitive_restart
000000000081f018 000000000000000c r extra_NV_read_buffer_api_gl
000000000081f028 0000000000000008 r extra_NV_texture_rectangle
000000000081f030 0000000000000008 r extra_NV_viewport_swizzle
000000000081f038 0000000000000008 r extra_OES_EGL_image_external
000000000081f040 0000000000000008 r extra_OES_primitive_bounding_box
000000000081f048 0000000000000010 r extra_core_ARB_color_buffer_float_and_new_buffers
000000000081f058 0000000000000008 r extra_flush_current
000000000081f060 000000000000000c r extra_flush_current_valid_texture_unit
000000000081f070 000000000000000c r extra_gl30_es3
000000000081f080 000000000000000c r extra_gl32_es3
000000000081f090 000000000000000c r extra_gl40_ARB_sample_shading
000000000081f0a0 0000000000000008 r extra_new_buffers
000000000081f0a8 0000000000000008 r extra_new_frag_clamp
000000000081f0b0 0000000000000008 r extra_texture_buffer_object
000000000081f0b8 0000000000000008 r extra_valid_clip_distance
000000000081f0c0 0000000000000008 r extra_valid_draw_buffer
000000000081f0c8 0000000000000008 r extra_valid_texture_unit
000000000081f0d0 0000000000000008 r extra_version_30
000000000081f0d8 0000000000000008 r extra_version_31
000000000081f0e0 0000000000000008 r extra_version_32
000000000081f0e8 000000000000000c r extra_version_32_OES_geometry_shader
000000000081f0f8 0000000000000008 r extra_version_43
000000000081f100 0000000000000800 r table_API_OPENGL
000000000081f900 0000000000000800 r table_API_OPENGLES
0000000000820100 0000000000000800 r table_API_OPENGLES2
0000000000820900 0000000000000800 r table_API_OPENGLES3
0000000000821100 0000000000000800 r table_API_OPENGLES31
0000000000821900 0000000000000800 r table_API_OPENGLES32
0000000000822100 0000000000000040 r transpose
0000000000822140 0000000000000020 r stage_pairs.0
0000000000822160 0000000000000044 r cem_ranges
00000000008221a8 00000000000000c8 r formats
0000000000822270 0000000000000028 r CSWTCH.17
0000000000822270 0000000000000028 r CSWTCH.27
0000000000822918 0000000000000080 r CSWTCH.53
0000000000822998 000000000000000a r fog_color.0
00000000008229a8 000000000000000a r fog_params_state.1
00000000008229b8 000000000000001c r CSWTCH.10
00000000008229d8 0000000000000080 r table.0
0000000000822a58 0000000000000030 r CSWTCH.32
0000000000822c88 0000000000000010 r zeros.0
0000000000822c98 000000000000001c r CSWTCH.4
0000000000822cb8 0000000000000007 r CSWTCH.5
0000000000822cc0 0000000000000014 r CSWTCH.15
0000000000822cd8 000000000000001c r CSWTCH.6
00000000008230b8 000000000000001c r CSWTCH.14
0000000000823810 000000000000002c r CSWTCH.1206
0000000000823840 000000000000002c r CSWTCH.1207
0000000000823870 000000000000002c r CSWTCH.1208
00000000008238a0 000000000000002c r CSWTCH.1209
00000000008238d0 000000000000002c r CSWTCH.1210
0000000000823900 000000000000002c r CSWTCH.1211
0000000000823930 000000000000002c r CSWTCH.1212
0000000000823960 000000000000002c r CSWTCH.1213
0000000000823990 000000000000002c r CSWTCH.1214
00000000008239c0 000000000000002c r CSWTCH.1215
00000000008239f0 000000000000002c r CSWTCH.1216
0000000000823a20 000000000000002c r CSWTCH.1217
0000000000823a50 000000000000002c r CSWTCH.1218
0000000000823a80 000000000000002c r CSWTCH.1219
0000000000823ab0 000000000000002c r CSWTCH.1220
0000000000823ae0 000000000000002c r CSWTCH.1221
0000000000823b10 000000000000002c r CSWTCH.1222
0000000000823b40 000000000000002c r CSWTCH.1223
0000000000823b70 000000000000002c r CSWTCH.1224
0000000000823ba0 000000000000002c r CSWTCH.1225
0000000000823bd0 0000000000000050 r CSWTCH.470
0000000000823c20 0000000000000014 r CSWTCH.625
0000000000823c38 000000000000001c r CSWTCH.648
0000000000823c58 0000000000000010 r swizzle_for_size(int)::size_swizzles
0000000000823c68 000000000000000a r get_mesa_program_tgsi(gl_context*, gl_shader_program*, gl_linked_shader*)::wposTransformState
0000000000823c78 000000000000000a r glsl_to_tgsi_visitor::visit_expression(ir_expression*, st_src_reg*)::transform_y_state
0000000000823c88 000000000000000a r glsl_to_tgsi_visitor::visit_expression(ir_expression*, st_src_reg*)::transform_y_state
0000000000823c98 000000000000000c r glsl_to_tgsi_visitor::emit_dp(ir_instruction*, st_dst_reg, st_src_reg, st_src_reg, unsigned int)::dot_opcodes
0000000000823ca8 0000000000000030 r CSWTCH.223
0000000000823cd8 000000000000000c r CSWTCH.251
0000000000823ce8 0000000000000038 r CSWTCH.98
0000000000823d20 000000000000000a r wposTransformState.0
0000000000823d30 0000000000000040 r emit_inline_matrix_constructor(glsl_type const*, exec_list*, exec_list*, void*)::rhs_swiz
0000000000823dd8 000000000000002c r CSWTCH.1085
0000000000823e08 000000000000002c r CSWTCH.1086
0000000000823e38 0000000000000050 r CSWTCH.922
0000000000823e88 00000000000000d4 r ast_expression::do_hir(exec_list*, _mesa_glsl_parse_state*, bool)::operations
0000000000823f60 0000000000000018 r gl_ClipPlane_elements
0000000000823f78 0000000000000018 r gl_EyePlaneQ_elements
0000000000823f90 0000000000000018 r gl_EyePlaneR_elements
0000000000823fa8 0000000000000018 r gl_EyePlaneS_elements
0000000000823fc0 0000000000000018 r gl_EyePlaneT_elements
0000000000823fd8 0000000000000018 r gl_NumSamples_elements
0000000000823ff0 0000000000000018 r gl_NormalScale_elements
0000000000824008 0000000000000048 r gl_NormalMatrix_elements
0000000000824050 0000000000000018 r gl_ObjectPlaneQ_elements
0000000000824068 0000000000000018 r gl_ObjectPlaneR_elements
0000000000824080 0000000000000018 r gl_ObjectPlaneS_elements
0000000000824098 0000000000000018 r gl_ObjectPlaneT_elements
00000000008240b0 0000000000000060 r gl_TextureMatrix_elements
0000000000824110 0000000000000060 r gl_ModelViewMatrix_elements
0000000000824170 0000000000000018 r gl_TextureEnvColor_elements
0000000000824188 0000000000000060 r gl_ProjectionMatrix_elements
00000000008241e8 0000000000000060 r gl_TextureMatrixInverse_elements
0000000000824248 0000000000000018 r gl_CurrentAttribFragMESA_elements
0000000000824260 0000000000000018 r gl_CurrentAttribVertMESA_elements
0000000000824278 0000000000000018 r gl_FogParamsOptimizedMESA_elements
0000000000824290 0000000000000060 r gl_ModelViewMatrixInverse_elements
00000000008242f0 0000000000000060 r gl_TextureMatrixTranspose_elements
0000000000824350 0000000000000060 r gl_ProjectionMatrixInverse_elements
00000000008243b0 0000000000000060 r gl_ModelViewMatrixTranspose_elements
0000000000824410 0000000000000060 r gl_ModelViewProjectionMatrix_elements
0000000000824470 0000000000000060 r gl_ProjectionMatrixTranspose_elements
00000000008244d0 0000000000000060 r gl_TextureMatrixInverseTranspose_elements
0000000000824530 0000000000000060 r gl_ModelViewMatrixInverseTranspose_elements
0000000000824590 0000000000000060 r gl_ModelViewProjectionMatrixInverse_elements
00000000008245f0 0000000000000060 r gl_ProjectionMatrixInverseTranspose_elements
0000000000824650 0000000000000060 r gl_ModelViewProjectionMatrixTranspose_elements
00000000008246b0 0000000000000060 r gl_ModelViewProjectionMatrixInverseTranspose_elements
0000000000824710 0000000000000050 r CSWTCH.31
0000000000824760 0000000000000050 r CSWTCH.26
00000000008247b0 0000000000000038 r CSWTCH.160
0000000000824990 000000000000001c r CSWTCH.72
0000000000824be8 0000000000000018 r CSWTCH.981
0000000000824c00 0000000000000520 R nv50_ir::TexInstruction::formatTable
0000000000825120 00000000000001b0 R nv50_ir::TexInstruction::Target::descTable
0000000000825650 0000000000000030 r CSWTCH.652
0000000000825680 0000000000000029 r CSWTCH.654
00000000008256b0 0000000000000048 r CSWTCH.656
00000000008256f8 00000000000000fc r CSWTCH.659
00000000008257f8 0000000000000054 r CSWTCH.661
0000000000825850 00000000000000dc r CSWTCH.880
0000000000825ad0 0000000000000034 r CSWTCH.708
0000000000825b08 0000000000000024 r CSWTCH.828
0000000000825b30 0000000000000008 r nv50_ir::reverseCondCode(nv50_ir::CondCode)::ccRev
0000000000825b38 0000000000000034 r CSWTCH.574
0000000000825b70 0000000000000034 r CSWTCH.45
0000000000825ba8 00000000000001f8 R nv50_ir::Target::operationClass
0000000000825da0 000000000000007e R nv50_ir::Target::operationSrcNr
0000000000825e48 0000000000000034 r CSWTCH.60
0000000000825e80 0000000000000160 r nv50_ir::_initProps
0000000000825fe0 0000000000000030 r nv50_ir::_initPropsNVE4
0000000000826010 0000000000000038 r nv50_ir::_initPropsGM107
0000000000826048 000000000000003c r nv50_ir::TargetNVC0::initOpInfo()::commutative
0000000000826088 000000000000006c r nv50_ir::TargetNVC0::initOpInfo()::noDest
00000000008260f8 0000000000000060 r CSWTCH.39
0000000000826158 0000000000000400 r util_crc32_table
0000000000826558 0000000000000010 r fog_modes.0
0000000000826778 00000000000002c4 r yycheck
0000000000826a40 0000000000000384 r yydefact
0000000000826dc8 0000000000000110 r yydefgoto
0000000000826ed8 0000000000000014 r yyloc_default.0
0000000000826ef0 0000000000000384 r yypact
0000000000827278 0000000000000110 r yypgoto
0000000000827388 000000000000010c r yyr1
0000000000827498 000000000000010c r yyr2
00000000008275a8 00000000000002c4 r yytable
0000000000827870 000000000000016a r yytranslate
00000000008279e0 000000000000001c r CSWTCH.4
0000000000827a00 0000000000000038 r CSWTCH.5
0000000000827a38 0000000000000060 r CSWTCH.2
0000000000827a98 0000000000000060 r CSWTCH.8
0000000000827af8 0000000000000034 r CSWTCH.129
0000000000827b30 0000000000000020 r nv50_ir::BuildUtil::mkClobber(nv50_ir::DataFile, unsigned int, int)::baseSize2
0000000000827c48 0000000000000034 r CSWTCH.357
0000000000827c80 000000000000000e r CSWTCH.363
0000000000827c90 0000000000000038 r CSWTCH.475
0000000000827cc8 0000000000000038 r CSWTCH.477
0000000000827d00 000000000000001c r CSWTCH.488
0000000000827d20 000000000000001c r CSWTCH.489
0000000000827d40 0000000000000038 r CSWTCH.501
0000000000827d78 0000000000000004 r CSWTCH.661
0000000000827d80 0000000000000020 r CSWTCH.680
0000000000827d80 0000000000000020 r CSWTCH.739
0000000000827da0 000000000000000c r CSWTCH.694
0000000000827db0 000000000000000c r CSWTCH.696
0000000000827db0 000000000000000c r CSWTCH.698
0000000000827dc0 000000000000001c r CSWTCH.748
0000000000827de0 0000000000000030 r CSWTCH.751
0000000000827e10 0000000000000005 r CSWTCH.753
0000000000827e18 0000000000000008 r nv50_ir::reverseCondCode(nv50_ir::CondCode)::ccRev
0000000000827e20 0000000000000034 r CSWTCH.79
0000000000827f60 0000000000000034 r CSWTCH.451
0000000000827f98 0000000000000014 r CSWTCH.459
00000000008280e0 0000000000000068 r CSWTCH.15
0000000000828148 000000000000053a r yy_accept
0000000000828688 0000000000000540 r yy_base
0000000000828bc8 00000000000007f0 r yy_chk
00000000008293b8 0000000000000540 r yy_def
00000000008298f8 0000000000000100 r yy_ec
00000000008299f8 0000000000000044 r yy_meta
0000000000829a40 00000000000007f0 r yy_nxt
000000000082a230 000000000000a555 r public_string_pool
0000000000834788 000000000000d7a0 r public_stubs
0000000000841f28 0000000000000027 V typeinfo name for __gnu_cxx::__concurrence_lock_error
0000000000841f50 0000000000000029 V typeinfo name for __gnu_cxx::__concurrence_unlock_error
0000000000841f80 000000000000002c V typeinfo name for __gnu_cxx::__concurrence_broadcast_error
0000000000841fb0 0000000000000027 V typeinfo name for __gnu_cxx::__concurrence_wait_error
0000000000841fd8 0000000000000025 V typeinfo name for __cxxabiv1::__si_class_type_info
0000000000842000 000000000000000d V typeinfo name for std::type_info
0000000000842010 0000000000000012 V typeinfo name for std::locale::facet
0000000000842028 0000000000000002 R std::locale::facet::_S_c_name
0000000000842030 0000000000000035 r typeinfo name for std::__facet_shims::(anonymous namespace)::numpunct_shim<char>
0000000000842068 0000000000000034 r typeinfo name for std::__facet_shims::(anonymous namespace)::collate_shim<char>
00000000008420a0 000000000000003b r typeinfo name for std::__facet_shims::(anonymous namespace)::moneypunct_shim<char, true>
00000000008420e0 000000000000003b r typeinfo name for std::__facet_shims::(anonymous namespace)::moneypunct_shim<char, false>
0000000000842120 0000000000000036 r typeinfo name for std::__facet_shims::(anonymous namespace)::money_get_shim<char>
0000000000842158 0000000000000036 r typeinfo name for std::__facet_shims::(anonymous namespace)::money_put_shim<char>
0000000000842190 0000000000000035 r typeinfo name for std::__facet_shims::(anonymous namespace)::messages_shim<char>
00000000008421c8 0000000000000035 r typeinfo name for std::__facet_shims::(anonymous namespace)::numpunct_shim<wchar_t>
0000000000842200 0000000000000034 r typeinfo name for std::__facet_shims::(anonymous namespace)::collate_shim<wchar_t>
0000000000842238 000000000000003b r typeinfo name for std::__facet_shims::(anonymous namespace)::moneypunct_shim<wchar_t, true>
0000000000842278 000000000000003b r typeinfo name for std::__facet_shims::(anonymous namespace)::moneypunct_shim<wchar_t, false>
00000000008422b8 0000000000000036 r typeinfo name for std::__facet_shims::(anonymous namespace)::money_get_shim<wchar_t>
00000000008422f0 0000000000000036 r typeinfo name for std::__facet_shims::(anonymous namespace)::money_put_shim<wchar_t>
0000000000842328 0000000000000035 r typeinfo name for std::__facet_shims::(anonymous namespace)::messages_shim<wchar_t>
0000000000842360 0000000000000019 V typeinfo name for std::locale::facet::__shim
0000000000842380 0000000000000035 r typeinfo name for std::__facet_shims::(anonymous namespace)::time_get_shim<char>
00000000008423b8 0000000000000035 r typeinfo name for std::__facet_shims::(anonymous namespace)::time_get_shim<wchar_t>
00000000008423f0 000000000000000f V typeinfo name for std::ctype_base
0000000000842400 000000000000000c V typeinfo name for std::ctype<char>
0000000000842410 000000000000000c V typeinfo name for std::ctype<wchar_t>
0000000000842420 0000000000000035 r typeinfo name for std::__facet_shims::(anonymous namespace)::numpunct_shim<char>
0000000000842458 0000000000000034 r typeinfo name for std::__facet_shims::(anonymous namespace)::collate_shim<char>
0000000000842490 000000000000003b r typeinfo name for std::__facet_shims::(anonymous namespace)::moneypunct_shim<char, true>
00000000008424d0 000000000000003b r typeinfo name for std::__facet_shims::(anonymous namespace)::moneypunct_shim<char, false>
0000000000842510 0000000000000036 r typeinfo name for std::__facet_shims::(anonymous namespace)::money_get_shim<char>
0000000000842548 0000000000000036 r typeinfo name for std::__facet_shims::(anonymous namespace)::money_put_shim<char>
0000000000842580 0000000000000035 r typeinfo name for std::__facet_shims::(anonymous namespace)::messages_shim<char>
00000000008425b8 0000000000000035 r typeinfo name for std::__facet_shims::(anonymous namespace)::numpunct_shim<wchar_t>
00000000008425f0 0000000000000034 r typeinfo name for std::__facet_shims::(anonymous namespace)::collate_shim<wchar_t>
0000000000842628 000000000000003b r typeinfo name for std::__facet_shims::(anonymous namespace)::moneypunct_shim<wchar_t, true>
0000000000842668 000000000000003b r typeinfo name for std::__facet_shims::(anonymous namespace)::moneypunct_shim<wchar_t, false>
00000000008426a8 0000000000000036 r typeinfo name for std::__facet_shims::(anonymous namespace)::money_get_shim<wchar_t>
00000000008426e0 0000000000000036 r typeinfo name for std::__facet_shims::(anonymous namespace)::money_put_shim<wchar_t>
0000000000842718 0000000000000035 r typeinfo name for std::__facet_shims::(anonymous namespace)::messages_shim<wchar_t>
0000000000842750 0000000000000035 r typeinfo name for std::__facet_shims::(anonymous namespace)::time_get_shim<char>
0000000000842788 0000000000000035 r typeinfo name for std::__facet_shims::(anonymous namespace)::time_get_shim<wchar_t>
0000000000842870 000000000000000d V typeinfo name for std::time_base
0000000000842880 000000000000000f V typeinfo name for std::money_base
0000000000842890 0000000000000012 V typeinfo name for std::messages_base
00000000008428a8 0000000000000018 V typeinfo name for std::__cxx11::collate<wchar_t>
00000000008428c0 0000000000000019 V typeinfo name for std::__cxx11::numpunct<wchar_t>
00000000008428e0 0000000000000020 V typeinfo name for std::__cxx11::moneypunct<wchar_t, true>
0000000000842900 0000000000000020 V typeinfo name for std::__cxx11::moneypunct<wchar_t, false>
0000000000842920 0000000000000019 V typeinfo name for std::__cxx11::messages<wchar_t>
0000000000842940 0000000000000046 V typeinfo name for std::__cxx11::money_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >
0000000000842988 0000000000000046 V typeinfo name for std::__cxx11::money_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >
00000000008429d0 0000000000000045 V typeinfo name for std::__cxx11::time_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >
0000000000842a18 0000000000000036 V typeinfo name for __gnu_cxx::stdio_sync_filebuf<char, std::char_traits<char> >
0000000000842a50 0000000000000036 V typeinfo name for __gnu_cxx::stdio_sync_filebuf<wchar_t, std::char_traits<wchar_t> >
0000000000842a88 000000000000000e r std::__detail::_Prime_rehash_policy::_M_next_bkt(unsigned long) const::__fast_bkt
0000000000842a98 0000000000000988 R std::__detail::__prime_list
0000000000843420 0000000000000022 V typeinfo name for std::basic_ios<char, std::char_traits<char> >
0000000000843448 0000000000000022 V typeinfo name for std::basic_ios<wchar_t, std::char_traits<wchar_t> >
0000000000843470 000000000000000c V typeinfo name for std::ios_base
0000000000843480 0000000000000003 V typeinfo name for std::istream
0000000000843488 0000000000000027 V typeinfo name for std::basic_istream<wchar_t, std::char_traits<wchar_t> >
0000000000843560 0000000000000011 V typeinfo name for std::codecvt_base
0000000000843578 000000000000000e V typeinfo name for std::collate<char>
0000000000843588 000000000000000f V typeinfo name for std::numpunct<char>
0000000000843598 000000000000003a V typeinfo name for std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >
00000000008435d8 000000000000003a V typeinfo name for std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >
0000000000843618 0000000000000019 V typeinfo name for std::__timepunct_cache<char>
0000000000843638 0000000000000013 V typeinfo name for std::__timepunct<char>
0000000000843650 0000000000000016 V typeinfo name for std::moneypunct<char, true>
0000000000843668 0000000000000016 V typeinfo name for std::moneypunct<char, false>
0000000000843680 000000000000000f V typeinfo name for std::messages<char>
0000000000843690 000000000000002c V typeinfo name for std::__codecvt_abstract_base<char, char, _mbstate_t>
00000000008436c0 000000000000003c V typeinfo name for std::money_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >
0000000000843700 000000000000003c V typeinfo name for std::money_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >
0000000000843740 000000000000003b V typeinfo name for std::time_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >
0000000000843780 000000000000003b V typeinfo name for std::time_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >
00000000008437c0 000000000000001e V typeinfo name for std::__moneypunct_cache<char, false>
00000000008437e0 000000000000001e V typeinfo name for std::__moneypunct_cache<char, true>
0000000000843800 0000000000000018 V typeinfo name for std::__numpunct_cache<char>
0000000000843818 0000000000000003 V typeinfo name for std::ostream
0000000000843820 0000000000000027 V typeinfo name for std::basic_ostream<wchar_t, std::char_traits<wchar_t> >
0000000000843848 0000000000000029 V typeinfo name for std::basic_streambuf<char, std::char_traits<char> >
0000000000843878 0000000000000029 V typeinfo name for std::basic_streambuf<wchar_t, std::char_traits<wchar_t> >
00000000008438a8 0000000000000019 V typeinfo name for std::_V2::error_category
00000000008438c8 0000000000000011 V typeinfo name for std::system_error
0000000000843988 000000000000000e V typeinfo name for std::collate<wchar_t>
0000000000843998 000000000000001d V typeinfo name for std::__ctype_abstract_base<wchar_t>
00000000008439b8 000000000000000f V typeinfo name for std::numpunct<wchar_t>
00000000008439c8 000000000000003a V typeinfo name for std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >
0000000000843a08 000000000000003a V typeinfo name for std::num_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >
0000000000843a48 0000000000000019 V typeinfo name for std::__timepunct_cache<wchar_t>
0000000000843a68 0000000000000013 V typeinfo name for std::__timepunct<wchar_t>
0000000000843a80 0000000000000016 V typeinfo name for std::moneypunct<wchar_t, true>
0000000000843a98 0000000000000016 V typeinfo name for std::moneypunct<wchar_t, false>
0000000000843ab0 000000000000000f V typeinfo name for std::messages<wchar_t>
0000000000843ac0 000000000000002c V typeinfo name for std::__codecvt_abstract_base<wchar_t, char, _mbstate_t>
0000000000843af0 000000000000003c V typeinfo name for std::money_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >
0000000000843b30 000000000000003c V typeinfo name for std::money_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >
0000000000843b70 000000000000003b V typeinfo name for std::time_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >
0000000000843bb0 000000000000003b V typeinfo name for std::time_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >
0000000000843bf0 000000000000001e V typeinfo name for std::__moneypunct_cache<wchar_t, false>
0000000000843c10 000000000000001e V typeinfo name for std::__moneypunct_cache<wchar_t, true>
0000000000843c30 0000000000000018 V typeinfo name for std::__numpunct_cache<wchar_t>
0000000000843c48 000000000000000d V typeinfo name for std::bad_alloc
0000000000843c58 0000000000000019 V typeinfo name for std::bad_array_new_length
0000000000843c78 000000000000000c V typeinfo name for std::bad_cast
0000000000843c88 0000000000000022 V typeinfo name for __cxxabiv1::__class_type_info
0000000000843cb0 000000000000000d V typeinfo name for std::exception
0000000000843cc0 0000000000000012 V typeinfo name for std::bad_exception
0000000000843cd8 0000000000000020 V typeinfo name for __cxxabiv1::__forced_unwind
0000000000843cf8 0000000000000024 V typeinfo name for __cxxabiv1::__foreign_exception
0000000000843d20 0000000000000001 R std::nothrow
0000000000843d28 0000000000000026 V typeinfo name for __cxxabiv1::__vmi_class_type_info
0000000000843d50 000000000000001b V typeinfo name for std::codecvt<char, char, _mbstate_t>
0000000000843d70 000000000000001b V typeinfo name for std::codecvt<wchar_t, char, _mbstate_t>
0000000000843d90 0000000000000034 r std::(anonymous namespace)::mon_yday
0000000000843dc8 0000000000000004 R std::money_base::_S_default_pattern
00000000008444d8 0000000000000010 V typeinfo name for std::logic_error
00000000008444e8 0000000000000011 V typeinfo name for std::length_error
0000000000844500 0000000000000011 V typeinfo name for std::out_of_range
0000000000844518 0000000000000012 V typeinfo name for std::runtime_error
0000000000844530 000000000000002d V typeinfo name for std::__codecvt_abstract_base<char16_t, char, _mbstate_t>
0000000000844560 000000000000001c V typeinfo name for std::codecvt<char16_t, char, _mbstate_t>
0000000000844580 000000000000002d V typeinfo name for std::__codecvt_abstract_base<char32_t, char, _mbstate_t>
00000000008445b0 000000000000001c V typeinfo name for std::codecvt<char32_t, char, _mbstate_t>
00000000008445d0 000000000000002e V typeinfo name for std::__codecvt_abstract_base<char16_t, char8_t, _mbstate_t>
0000000000844600 000000000000001d V typeinfo name for std::codecvt<char16_t, char8_t, _mbstate_t>
0000000000844620 000000000000002e V typeinfo name for std::__codecvt_abstract_base<char32_t, char8_t, _mbstate_t>
0000000000844650 000000000000001d V typeinfo name for std::codecvt<char32_t, char8_t, _mbstate_t>
0000000000844670 000000000000001d V typeinfo name for std::ios_base::failure[abi:cxx11]
0000000000844690 0000000000000012 V typeinfo name for std::__ios_failure
00000000008446a8 0000000000000018 V typeinfo name for std::__iosfail_type_info
0000000000844770 0000000000000018 V typeinfo name for std::__cxx11::collate<char>
0000000000844788 0000000000000019 V typeinfo name for std::__cxx11::numpunct<char>
00000000008447a8 0000000000000020 V typeinfo name for std::__cxx11::moneypunct<char, true>
00000000008447c8 0000000000000020 V typeinfo name for std::__cxx11::moneypunct<char, false>
00000000008447e8 0000000000000019 V typeinfo name for std::__cxx11::messages<char>
0000000000844808 0000000000000046 V typeinfo name for std::__cxx11::money_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >
0000000000844850 0000000000000046 V typeinfo name for std::__cxx11::money_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >
0000000000844898 0000000000000045 V typeinfo name for std::__cxx11::time_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >
00000000008448e0 0000000000000025 r typeinfo name for (anonymous namespace)::io_error_category
0000000000844908 0000000000000016 V typeinfo name for std::ios_base::failure
0000000000844920 0000000000000800 r vwin1024
0000000000845120 0000000000000100 r vwin128
0000000000845220 0000000000001000 r vwin2048
0000000000846220 0000000000000200 r vwin256
0000000000846420 0000000000002000 r vwin4096
0000000000848420 0000000000000400 r vwin512
0000000000848820 0000000000000080 r vwin64
00000000008488a0 0000000000004000 r vwin8192
000000000084c8a0 0000000000000400 r FLOOR_fromdB_LOOKUP
000000000084cca0 0000000000000010 r ADJUST_SQRT2
000000000084ccb0 0000000000000204 r COS_LOOKUP_I
000000000084ceb8 0000000000000080 r FROMdB2_LOOKUP
000000000084cf38 000000000000008c r FROMdB_LOOKUP
000000000084cfc8 0000000000000208 r INVSQ_LOOKUP_I
000000000084d1d0 0000000000000200 r INVSQ_LOOKUP_IDel
000000000084d3d0 0000000000000040 r MLOOP_1
000000000084d410 0000000000000040 r MLOOP_2
000000000084d450 0000000000000008 r MLOOP_3
000000000084d458 0000000000000070 r barklook
000000000084d4c8 0000000000000010 r bitrev
000000000084d4d8 0000000000001008 r sincos_lookup0
000000000084e4e0 0000000000001000 r sincos_lookup1
000000000084f4e0 0000000000002000 r crc_lookup
00000000008514e0 0000000000000108 r mask
00000000008515e8 0000000000000010 r __func__.0
00000000008515f8 0000000000000010 r __func__.1
0000000000851608 000000000000001b r __func__.2
0000000000851630 0000000000000030 r my_encodings
0000000000851660 0000000000000048 r my_rates
00000000008516a8 0000000000000015 r __func__.0
00000000008516c0 000000000000001b r __func__.0
00000000008516e0 0000000000000008 r __func__.1
00000000008516e8 000000000000000d r __func__.2
00000000008516f8 000000000000000e r __func__.3
0000000000851708 0000000000000008 r __func__.4
0000000000851710 000000000000001b r __func__.5
0000000000851730 000000000000000e r __func__.6
0000000000851740 000000000000000a r __func__.7
0000000000851750 0000000000000048 r freqs
00000000008517a0 0000000000000180 r tabsel_123
0000000000851920 000000000000000e r __func__.0
0000000000851930 000000000000001c r __func__.1
0000000000851950 0000000000000014 r __func__.2
0000000000851968 000000000000001f r __func__.3
0000000000851988 0000000000000012 r __func__.4
00000000008519a0 0000000000000016 r __func__.5
00000000008519b8 0000000000000019 r __func__.6
00000000008519d8 0000000000000017 r __func__.7
00000000008519f0 0000000000000010 r __func__.0
0000000000851a00 000000000000000d r __func__.1
0000000000851a10 000000000000000e r __func__.2
0000000000851a20 000000000000000f r __func__.3
0000000000851a30 0000000000000010 r __func__.4
0000000000851a40 0000000000000015 r __func__.5
0000000000851a58 000000000000000c r __func__.6
0000000000851a68 0000000000000011 r __func__.7
0000000000851a80 0000000000000013 r __func__.8
0000000000851aa0 0000000000000010 r encoding_widths
0000000000851ab0 0000000000000019 r frame_type
0000000000851ad0 0000000000000015 r __func__.0
0000000000851ae8 000000000000000d r __func__.1
0000000000851af8 000000000000001b r __func__.2
0000000000851b18 0000000000000006 r dn_nodec
0000000000851b20 000000000000000c r dn_sse_vintage
0000000000851b30 0000000000000011 r dn_dreidnowext_vintage
0000000000851b48 000000000000000e r dn_dreidnow_vintage
0000000000851b58 0000000000000004 r dn_avx
0000000000851b60 0000000000000007 r dn_neon64
0000000000851b68 0000000000000005 r dn_neon
0000000000851b70 0000000000000004 r dn_arm
0000000000851b78 0000000000000007 r dn_x86_64
0000000000851b80 0000000000000004 r dn_sse
0000000000851b88 0000000000000008 r dn_altivec
0000000000851b90 0000000000000009 r dn_dreidnowext
0000000000851ba0 0000000000000006 r dn_dreidnow
0000000000851ba8 0000000000000004 r dn_mmx
0000000000851bb0 000000000000000c r dn_ifuenf_dither
0000000000851bc0 0000000000000005 r dn_ifuenf
0000000000851bc8 0000000000000005 r dn_ivier
0000000000851bd0 0000000000000005 r dn_idrei
0000000000851bd8 000000000000000f r dn_generic_dither
0000000000851be8 0000000000000008 r dn_generic
0000000000851bf0 0000000000000005 r dn_autodec
0000000000851bf8 000000000000000d r __func__.1
0000000000851c08 000000000000000d r __func__.2
0000000000851c18 0000000000000012 r __func__.3
0000000000851c30 0000000000000011 r __func__.5
0000000000851c48 000000000000001c r __func__.0
0000000000851c70 0000000000000808 r intwinbase
0000000000852478 0000000000000004 r cos4
0000000000852480 0000000000000008 r cos8
0000000000852490 0000000000000010 r cos16
00000000008524a0 0000000000000020 r cos32
00000000008524c0 0000000000000040 r cos64
0000000000852500 0000000000000008 r __func__.0
0000000000852508 000000000000000b r __func__.1
0000000000852518 000000000000000d r __func__.2
0000000000852528 000000000000000b r __func__.3
0000000000852538 0000000000000011 r __func__.4
0000000000852550 0000000000000008 r __func__.0
0000000000852558 000000000000000c r __func__.1
0000000000852568 0000000000000011 r __func__.2
0000000000852580 0000000000000c00 r grp_9tab
0000000000853180 0000000000000180 r grp_5tab
0000000000853300 0000000000000060 r grp_3tab
0000000000853360 0000000000001b00 r layer12_table
0000000000854e60 0000000000000310 r alloc_4
0000000000855170 00000000000001c0 r alloc_3
0000000000855330 0000000000000140 r alloc_2
0000000000855470 00000000000004b0 r alloc_1
0000000000855920 0000000000000480 r alloc_0
0000000000855f38 0000000000000016 r __func__.0
0000000000855f50 0000000000000008 r __func__.1
0000000000855f58 0000000000000012 r __func__.2
0000000000855f70 0000000000000011 r __func__.3
0000000000855f88 00000000000003de r bandInfo
0000000000856370 0000000000000200 r i_slen2
0000000000856570 0000000000000400 r n_slen2
0000000000856970 0000000000000318 r mapbuf2
0000000000856c90 0000000000000af8 r mapbuf1
0000000000857790 0000000000000ab0 r mapbuf0
0000000000858240 0000000000000100 r pow2_2
0000000000858340 0000000000000100 r pow1_2
0000000000858440 0000000000000100 r pow2_1
0000000000858540 0000000000000100 r pow1_1
0000000000858640 0000000000000040 r tan2_2
0000000000858680 0000000000000040 r tan1_2
00000000008586c0 0000000000000040 r tan2_1
0000000000858700 0000000000000040 r tan1_1
0000000000858740 0000000000000240 r win1
0000000000858980 0000000000000240 r win
0000000000858bc0 000000000000803c r ispow
0000000000860c00 000000000000003e r tab_c1
0000000000860c40 000000000000003e r tab_c0
0000000000860c80 0000000000000800 r tab24_
0000000000861480 0000000000000820 r tab16_
0000000000861ca0 00000000000007e0 r tab15_
0000000000862480 00000000000007e0 r tab13_
0000000000862c60 00000000000001e0 r tab12_
0000000000862e40 00000000000001e0 r tab11_
0000000000863020 0000000000000220 r tab10_
0000000000863240 0000000000000100 r tab9_
0000000000863340 0000000000000100 r tab8_
0000000000863440 0000000000000120 r tab7_
0000000000863560 0000000000000080 r tab6_
00000000008635e0 0000000000000060 r tab5_
0000000000863640 0000000000000060 r tab3_
00000000008636a0 0000000000000060 r tab2_
0000000000863700 0000000000000020 r tab1_
0000000000863720 0000000000000020 r tab0_
00000000008637d0 0000000000000040 r PreAmpTable
0000000000863810 0000000000000080 r ModSinusTable
0000000000863890 0000000000000080 r ModRandomTable
0000000000863910 0000000000000080 r ModSquareTable
0000000000863990 0000000000000040 r PreAmpAGCTable
00000000008639d0 0000000000000100 r ft2VibratoTable
0000000000863ad0 0000000000000080 r ModRampDownTable
0000000000863b50 0000000000000400 r LinearSlideUpTable
0000000000863f50 0000000000000400 r LinearSlideDownTable
0000000000864350 0000000000000040 r FineLinearSlideUpTable
0000000000864390 0000000000000040 r FineLinearSlideDownTable
0000000000864410 0000000000000020 r FreqS3MTable
0000000000864430 0000000000000010 r retrigTable1
0000000000864440 0000000000000010 r retrigTable2
0000000000864450 0000000000000c00 r XMLinearTable
0000000000865050 00000000000000d0 r XMPeriodTable
0000000000865120 0000000000000020 r S3MFineTuneTable
0000000000865140 0000000000000400 r LinearSlideUpTable
0000000000865540 0000000000000400 r LinearSlideDownTable
0000000000865940 0000000000000090 r ProTrackerPeriodTable
00000000008659d0 0000000000000040 r FineLinearSlideUpTable
0000000000865a10 0000000000000180 r ProTrackerTunedPeriods
0000000000865b90 0000000000000040 r FineLinearSlideDownTable
0000000000865bd0 0000000000000010 r ImpulseTrackerPortaVolCmd
0000000000865be8 0000000000000020 r MMCMP8BitFetch
0000000000865c08 0000000000000040 r MMCMP16BitFetch
0000000000865c48 0000000000000020 r MMCMP8BitCommands
0000000000865c68 0000000000000040 r MMCMP16BitCommands
0000000000865d18 000000000000003c r CSWTCH.23
0000000000865d58 000000000000003c r CSWTCH.24
0000000000865d98 000000000000000a r bpmvals
0000000000865e10 0000000000000010 r abc_setup_chordnames()::list_7sus4
0000000000865e20 0000000000000010 r abc_setup_chordnames()::list_7sus9
0000000000865e30 0000000000000014 r abc_setup_chordnames()::list_9sus4
0000000000865e48 0000000000000008 r abc_setup_chordnames()::list_5
0000000000865e50 0000000000000010 r abc_setup_chordnames()::list_6
0000000000865e60 0000000000000010 r abc_setup_chordnames()::list_7
0000000000865e70 0000000000000014 r abc_setup_chordnames()::list_9
0000000000865e88 000000000000000c r abc_setup_chordnames()::list_m
0000000000865e98 0000000000000018 r abc_setup_chordnames()::list_11
0000000000865eb0 0000000000000018 r abc_setup_chordnames()::list_13
0000000000865ec8 0000000000000010 r abc_setup_chordnames()::list_M7
0000000000865ed8 0000000000000014 r abc_setup_chordnames()::list_M9
0000000000865ef0 0000000000000010 r abc_setup_chordnames()::list_m6
0000000000865f00 0000000000000010 r abc_setup_chordnames()::list_m7
0000000000865f10 0000000000000014 r abc_setup_chordnames()::list_m9
0000000000865f28 000000000000000c r abc_setup_chordnames()::list_Maj
0000000000865f38 000000000000000c r abc_setup_chordnames()::list_aug
0000000000865f48 000000000000000c r abc_setup_chordnames()::list_dim
0000000000865f58 000000000000000c r abc_setup_chordnames()::list_sus
0000000000865f68 0000000000000010 r abc_setup_chordnames()::list_7sus
0000000000865f78 0000000000000010 r abc_setup_chordnames()::list_aug7
0000000000865f88 0000000000000010 r abc_setup_chordnames()::list_dim7
0000000000865f98 0000000000000014 r abc_setup_chordnames()::list_dim9
0000000000865fb0 0000000000000010 r abc_setup_chordnames()::list_maj7
0000000000865fc0 0000000000000014 r abc_setup_chordnames()::list_maj9
0000000000865fd8 000000000000000c r abc_setup_chordnames()::list_plus
0000000000865fe8 000000000000000c r abc_setup_chordnames()::list_sus9
00000000008673f8 0000000000000027 r CSWTCH.60
0000000000867420 0000000000000041 r tune
0000000000867468 0000000000000014 r CSWTCH.1001
0000000000867490 0000000000000024 r s_emptyFence.0
0000000000867530 0000000000000023 r g_bq_InterfaceDescriptor
0000000000867560 0000000000000086 r _error_code_map
00000000008675e8 0000000000000020 r error_table
0000000000867608 000000000000000d r kModeBpp
0000000000867618 0000000000000003 r kFilterExtraRows
0000000000867620 000000000000000c r kQuantToDitherAmp
0000000000867630 0000000000000020 r kScan
0000000000867650 0000000000000030 r CSWTCH.31
0000000000867680 0000000000000004 r kCat3
0000000000867688 0000000000000005 r kCat4
0000000000867690 0000000000000006 r kCat5
0000000000867698 000000000000000c r kCat6
00000000008676a8 0000000000000010 r kZigzag
00000000008676b8 000000000000000a r kAlphabetSize
00000000008676c8 0000000000000013 r kCodeLengthCodeOrder
00000000008676e0 0000000000000003 r kCodeLengthExtraBits
00000000008676e8 0000000000000003 r kCodeLengthRepeatOffsets
00000000008676f0 0000000000000078 r kCodeToPlane
0000000000867768 0000000000000005 r kLiteralMap
0000000000867770 0000000000000018 r kTableSize
0000000000867800 0000000000000008 r k0g0g.0
0000000000867808 0000000000000008 r kGreenShuffle
0000000000867810 0000000000000008 r kCoeffs1
0000000000867818 0000000000000064 r kBitMask
0000000000867880 0000000000000080 R kVP8Log2Range
0000000000867900 0000000000000080 R kVP8NewRange
0000000000867980 00000000000000dc r kRandomTable
0000000000867a60 0000000000000100 r kAcTable
0000000000867b60 0000000000000080 r kDcTable
0000000000867be0 0000000000000420 r CoeffsProba0
0000000000868000 0000000000000420 r CoeffsUpdateProba
0000000000868420 0000000000000384 r kBModesProba
00000000008687a8 0000000000000011 r kBands
0000000000868810 0000000000000100 r canon_map
0000000000868910 0000000000000048 r _pow10(unsigned int)::_powers_of_10
0000000000868958 000000000000000a r _double_parser_trans_actions
0000000000868968 000000000000000a r _double_parser_trans_targs
0000000000868980 00000000000000bf r _double_parser_indicies
0000000000868a40 0000000000000009 r _double_parser_index_offsets
0000000000868a50 0000000000000009 r _double_parser_key_spans
0000000000868a60 0000000000000013 r _double_parser_trans_keys
0000000000868b00 000000000000040c r format1_names_msgidx
0000000000868f10 000000000000073a r format1_names_msgstr
0000000000869650 0000000000000620 r cff1_std_strings_msgidx
0000000000869c70 0000000000000d73 r cff1_std_strings_msgstr
000000000086a9e8 0000000000000200 r OT::unicode_to_macroman(unsigned int)::mapping
000000000086abf0 00000000000005a0 r _hb_arabic_u16
000000000086b190 00000000000001d0 r _hb_arabic_u8
000000000086b4d0 0000000000000038 r horizontal_features
000000000086b508 0000000000000038 r common_features
000000000086b540 0000000000000004 R minus_1
000000000086b548 0000000000000002 R _hb_Null_AAT_Lookup
000000000086b550 000000000000000c R _hb_Null_OT_CmapSubtableLongGroup
000000000086b560 0000000000000009 R _hb_Null_OT_RangeRecord
000000000086b570 0000000000000008 R _hb_Null_OT_LangSys
000000000086b578 0000000000000002 R _hb_Null_OT_Index
000000000086b580 0000000000000280 R _hb_NullPool
000000000086b800 00000000000001d0 r _hb_emoji_u8
000000000086b9d0 0000000000000100 R _hb_modified_combining_class
000000000086bb10 00000000000005a0 r _hb_arabic_u16
000000000086c0b0 00000000000001d0 r _hb_arabic_u8
000000000086c280 00000000000004e0 r feature_mappings
000000000086c7f0 0000000000000100 r standard_encoding_to_sid
000000000086c8f0 0000000000000158 r expert_subset_charset_sid_to_gid
000000000086ca48 0000000000000294 r expert_charset_sid_to_gid
000000000086cce0 00000000000000ae r expert_subset_charset_to_sid
000000000086cd90 000000000000014c r expert_charset_to_sid
000000000086cf60 0000000000000008 r table_tags
000000000086cf70 0000000000000038 r modifier_combining_marks
000000000086cfb0 000000000000001c r arabic_fallback_features
000000000086cfd0 00000000000000a8 r arabic_state_table
000000000086d080 0000000000000020 r arabic_features
000000000086d0a0 0000000000000014 r ligature_3_table
000000000086d0b8 0000000000000016 r ligature_mark_table
000000000086d0d0 0000000000000414 r ligature_table
000000000086d4f0 0000000000000598 r shaping_table
000000000086da90 000000000000059a r joining_table
000000000086e030 0000000000000001 r hb_first
000000000086e0b8 0000000000000060 R _hb_ot_shaper_dumber
000000000086e118 0000000000000060 R _hb_ot_shaper_default
000000000086e180 0000000000000010 r hangul_features
000000000086e190 000000000000006c r compose_hebrew(hb_ot_shape_normalize_context_t const*, unsigned int, unsigned int, unsigned int*)::sDageshForms
000000000086e228 0000000000000088 r indic_features
000000000086e2b0 00000000000000f0 r indic_configs
000000000086e3a0 0000000000000114 r _indic_syllable_machine_eof_trans
000000000086e4c0 000000000000008a r _indic_syllable_machine_from_state_actions
000000000086e550 000000000000008a r _indic_syllable_machine_to_state_actions
000000000086e5e0 0000000000000096 r _indic_syllable_machine_trans_actions
000000000086e680 0000000000000096 r _indic_syllable_machine_trans_targs
000000000086e720 000000000000059f r _indic_syllable_machine_indicies
000000000086ecc0 0000000000000114 r _indic_syllable_machine_index_offsets
000000000086ede0 000000000000008a r _indic_syllable_machine_key_spans
000000000086ee70 0000000000000115 r _indic_syllable_machine_trans_keys
000000000086ef88 0000000000000048 r khmer_features
000000000086efd0 0000000000000056 r _khmer_syllable_machine_eof_trans
000000000086f030 000000000000002b r _khmer_syllable_machine_from_state_actions
000000000086f060 000000000000002b r _khmer_syllable_machine_to_state_actions
000000000086f090 0000000000000031 r _khmer_syllable_machine_trans_actions
000000000086f0d0 0000000000000031 r _khmer_syllable_machine_trans_targs
000000000086f110 00000000000003bd r _khmer_syllable_machine_indicies
000000000086f4d0 0000000000000056 r _khmer_syllable_machine_index_offsets
000000000086f530 000000000000002b r _khmer_syllable_machine_key_spans
000000000086f560 0000000000000057 r _khmer_syllable_machine_trans_keys
000000000086f5b8 0000000000000060 R _hb_ot_shaper_myanmar_zawgyi
000000000086f620 0000000000000010 r myanmar_other_features
000000000086f630 0000000000000010 r myanmar_basic_features
000000000086f640 000000000000006e r _myanmar_syllable_machine_eof_trans
000000000086f6b0 0000000000000037 r _myanmar_syllable_machine_from_state_actions
000000000086f6f0 0000000000000037 r _myanmar_syllable_machine_to_state_actions
000000000086f730 000000000000003d r _myanmar_syllable_machine_trans_actions
000000000086f770 000000000000003d r _myanmar_syllable_machine_trans_targs
000000000086f7b0 00000000000007cd r _myanmar_syllable_machine_indicies
000000000086ff80 000000000000006e r _myanmar_syllable_machine_index_offsets
000000000086fff0 0000000000000037 r _myanmar_syllable_machine_key_spans
0000000000870030 000000000000006f r _myanmar_syllable_machine_trans_keys
00000000008700a0 0000000000000048 r thai_below_state_machine
00000000008700f0 0000000000000014 r thai_below_start_state
0000000000870108 0000000000000060 r thai_above_state_machine
0000000000870170 0000000000000014 r thai_above_start_state
0000000000870188 0000000000000012 r thai_pua_shape(unsigned int, thai_action_t, hb_font_t*)::RD_mappings
00000000008701a0 000000000000004e r thai_pua_shape(unsigned int, thai_action_t, hb_font_t*)::SL_mappings
00000000008701f0 0000000000000024 r thai_pua_shape(unsigned int, thai_action_t, hb_font_t*)::SDL_mappings
0000000000870218 0000000000000036 r thai_pua_shape(unsigned int, thai_action_t, hb_font_t*)::SD_mappings
0000000000870280 0000000000000014 r use_other_features
00000000008702a0 0000000000000010 r use_topographical_features
00000000008702b0 000000000000001c r use_basic_features
00000000008702d0 00000000000006b0 r hb_use_u16
0000000000870980 0000000000000d0f r hb_use_u8
0000000000871690 00000000000000fa r _use_syllable_machine_eof_trans
0000000000871790 000000000000007d r _use_syllable_machine_from_state_actions
0000000000871810 000000000000007d r _use_syllable_machine_to_state_actions
0000000000871890 000000000000008f r _use_syllable_machine_trans_actions
0000000000871920 000000000000008f r _use_syllable_machine_trans_targs
00000000008719b0 0000000000001138 r _use_syllable_machine_indicies
0000000000872af0 00000000000000fa r _use_syllable_machine_index_offsets
0000000000872bf0 000000000000007d r _use_syllable_machine_key_spans
0000000000872c70 00000000000000fb r _use_syllable_machine_trans_keys
0000000000872d70 0000000000000001 r hb_second
0000000000872d78 0000000000000001 r hb_identity
0000000000872e50 0000000000002648 r ot_languages3
00000000008754a0 0000000000000660 r ot_languages2
0000000000875b00 0000000000000188 r _hb_ucd_i16
0000000000875c90 0000000000005140 r _hb_ucd_u16
000000000087add0 00000000000044cc r _hb_ucd_u8
000000000087f2a0 0000000000000cc0 r _hb_ucd_dm2_u64_map
000000000087ff60 00000000000009f8 r _hb_ucd_dm2_u32_map
0000000000880960 00000000000000dc r _hb_ucd_dm1_p2_map
0000000000880a40 0000000000000672 r _hb_ucd_dm1_p0_map
00000000008810c0 00000000000002b0 r _hb_ucd_sc_map
0000000000881370 0000000000000db0 r indic_table
0000000000882120 0000000000000010 r atanlo
0000000000882130 0000000000000010 r atanhi
0000000000882140 0000000000000080 r npio2_hw
00000000008821c0 0000000000000108 r two_over_pi
00000000008822c8 0000000000000008 r Zero
00000000008822d0 0000000000000040 r PIo2
0000000000882310 0000000000000010 r init_jk
0000000000882320 0000000000000060 R __inv_pio4
0000000000882380 00000000000000e0 R __sincosf_table
0000000000882460 0000000000000870 R __exp_data
0000000000882cd0 0000000000001048 R __pow_log_data
0000000000883d20 0000000000000890 R __log_data
00000000008845b0 0000000000000018 r CSWTCH.9
00000000008845c8 0000000000000018 r CSWTCH.8
00000000008845e0 0000000000000128 R __powf_log2_data
0000000000884710 0000000000000120 R __log2f_data
0000000000884830 0000000000000020 r atanlo
0000000000884850 0000000000000020 r atanhi
0000000000884870 000000000000000c r CSWTCH.9
0000000000884880 000000000000000c r CSWTCH.8
0000000000884890 0000000000000148 R __exp2f_data
00000000008849e0 0000000000000080 r npio2_hw
0000000000884a60 0000000000000318 r two_over_pi
0000000000884d78 0000000000000120 R __logf_data
0000000000884ea0 000000000000002c r PIo2
0000000000884ed0 000000000000000c r init_jk
0000000000884ee0 0000000000000490 R __log2_data
0000000000885488 0000000000000008 r terminator.0
0000000000885490 0000000000000001 R __aarch64_have_sme
00000000008856d0 0000000000000014 r fpinan.0
00000000008856e8 0000000000000014 r fpi.1
0000000000885700 0000000000000028 r tinytens
00000000008857d8 0000000000000100 R __hexdig
00000000008858e0 0000000000000048 r JIS_action_table
0000000000885930 0000000000000048 r JIS_state_table
0000000000885ab0 0000000000000010 r zeroes.0
0000000000885ac0 0000000000000010 r blanks.1
0000000000885bd0 0000000000000010 r zeroes.0
0000000000885be0 0000000000000010 r blanks.1
0000000000885bf0 0000000000000101 R _ctype_
0000000000885e90 0000000000000040 r zeroes.0
0000000000885ed0 0000000000000040 r blanks.1
0000000000886010 0000000000000022 r basefix.0
0000000000886130 0000000000000010 r zeroes.0
0000000000886140 0000000000000010 r blanks.1
0000000000886150 000000000000006c R __action_table
00000000008861c0 000000000000006c R __state_table
0000000000886230 0000000000000100 R __chclass
0000000000886340 000000000000000c r p05.0
0000000000886350 0000000000000028 R __mprec_bigtens
0000000000886378 00000000000000c8 R __mprec_tens
0000000000886540 0000000000000010 r zeroes.0
0000000000886550 0000000000000010 r blanks.1
00000000008865d0 0000000000000022 r basefix.0
00000000008865f8 0000000000000060 R __month_lengths
0000000000886658 00000000000035dc r categories
0000000000889c38 r __tls_align
000000000088b8d1 r __eh_frame_hdr_end
000000000088b8d1 r __eh_frame_hdr_start
000000000088b8d8 r __EH_FRAME_BEGIN__
0000000000977cb0 r __FRAME_END__
0000000000978000 d __init_array_start
0000000000978000 d __preinit_array_end
0000000000978000 d __preinit_array_start
0000000000978000 d __relro_start
0000000000978008 d __frame_dummy_init_array_entry
0000000000978080 d __fini_array_start
0000000000978080 d __init_array_end
0000000000978088 d __do_global_dtors_aux_fini_array_entry
00000000009780b8 d __fini_array_end
00000000009780c0 0000000000000070 d known.9876
0000000000978130 0000000000000038 d SDL_priority_prefixes
0000000000978170 0000000000000200 d channel_converters
0000000000978370 00000000000000b0 d map_StringForControllerButton
0000000000978420 0000000000000038 d map_StringForControllerAxis
0000000000978458 00000000000020b0 d arrControllers
000000000097a510 0000000000000020 d getpixes
000000000097a530 0000000000000028 d colorkey_blit
000000000097a560 0000000000000028 d bitmap_blit
000000000097a590 0000000000000028 d one_blitkey
000000000097a5c0 0000000000000028 d one_blit
000000000097a5f0 0000000000000020 d normal_blit
000000000097a610 00000000000001b0 d normal_blit_4
000000000097a7c0 0000000000000150 d normal_blit_3
000000000097a910 0000000000000150 d normal_blit_2
000000000097aa60 0000000000000030 d normal_blit_1
000000000097aa90 0000000000000048 d fft_state48000_960_0
000000000097aad8 0000000000000048 d fft_state48000_960_1
000000000097ab20 0000000000000048 d fft_state48000_960_2
000000000097ab68 0000000000000048 d fft_state48000_960_3
000000000097abb0 00000000000000a0 d mode48000_960_120
000000000097ac50 0000000000000010 D silk_LBRR_flags_iCDF_ptr
000000000097ac60 0000000000000078 d CELT_PVQ_U_ROW
000000000097acd8 0000000000000018 D silk_LTP_gain_iCDF_ptrs
000000000097acf0 0000000000000018 D silk_LTP_vq_ptrs_Q7
000000000097ad08 0000000000000048 D silk_NLSF_CB_NB_MB
000000000097ad50 0000000000000048 D silk_NLSF_CB_WB
000000000097ad98 00000000000000a0 d configuration_table
000000000097ae38 0000000000000020 d static_l_desc
000000000097ae58 0000000000000020 d static_d_desc
000000000097ae78 0000000000000020 d static_bl_desc
000000000097ae98 0000000000000050 D z_errmsg
000000000097aee8 0000000000000410 D jpeg_std_message_table
000000000097b2f8 0000000000000090 d ft_raccess_guess_table
000000000097b388 0000000000000040 D ft_svg_glyph_class
000000000097b3c8 0000000000000040 D ft_outline_glyph_class
000000000097b408 0000000000000040 D ft_bitmap_glyph_class
000000000097b448 00000000000000c0 D tt_driver_class
000000000097b508 0000000000000070 d tt_services
000000000097b578 0000000000000008 d tt_service_truetype_glyf
000000000097b580 0000000000000048 d tt_service_metrics_variations
000000000097b5c8 0000000000000098 d tt_service_gx_multi_masters
000000000097b660 0000000000000010 d tt_service_properties
000000000097b670 00000000000008d0 d t1_keywords
000000000097bf40 00000000000000c0 D t1_driver_class
000000000097c000 0000000000000080 d t1_services
000000000097c080 0000000000000008 d t1_service_kerning
000000000097c088 0000000000000028 d t1_service_ps_info
000000000097c0b0 0000000000000098 d t1_service_multi_masters
000000000097c148 0000000000000008 d t1_service_ps_name
000000000097c150 0000000000000010 d t1_service_glyph_dict
000000000097c160 00000000000009a0 d cff_field_handlers
000000000097cb00 00000000000000c0 D cff_driver_class
000000000097cbc0 00000000000000b0 d cff_services
000000000097cc70 0000000000000028 d cff_service_cff_load
000000000097cc98 0000000000000048 d cff_service_metrics_variations
000000000097cce0 0000000000000098 d cff_service_multi_masters
000000000097cd78 0000000000000018 d cff_service_cid_info
000000000097cd90 0000000000000008 d cff_service_get_cmap_info
000000000097cd98 0000000000000008 d cff_service_ps_name
000000000097cda0 0000000000000028 d cff_service_ps_info
000000000097cdc8 0000000000000010 d cff_service_glyph_dict
000000000097cdd8 0000000000000050 D cff_cmap_unicode_class_rec
000000000097ce28 0000000000000050 D cff_cmap_encoding_class_rec
000000000097ce78 00000000000000c0 D t1cid_driver_class
000000000097cf38 0000000000000060 d cid_services
000000000097cf98 0000000000000018 d cid_service_cid_info
000000000097cfb0 0000000000000028 d cid_service_ps_info
000000000097cfd8 0000000000000008 d cid_service_ps_name
000000000097cfe0 00000000000009f0 d cid_field_records
000000000097d9d0 0000000000000050 d pfr_phy_font_extra_items
000000000097da20 00000000000000c0 D pfr_driver_class
000000000097dae0 0000000000000030 d pfr_services
000000000097db10 0000000000000018 d pfr_metrics_service_rec
000000000097db28 0000000000000050 D pfr_cmap_class_rec
000000000097db78 00000000000003c0 d t42_keywords
000000000097df38 00000000000000c0 D t42_driver_class
000000000097dff8 0000000000000050 d t42_services
000000000097e048 0000000000000028 d t42_service_ps_info
000000000097e070 0000000000000008 d t42_service_ps_font_name
000000000097e078 0000000000000010 d t42_service_glyph_dict
000000000097e088 00000000000000c0 D winfnt_driver_class
000000000097e148 0000000000000030 d winfnt_services
000000000097e178 0000000000000008 d winfnt_service_rec
000000000097e180 0000000000000050 d fnt_cmap_class_rec
000000000097e1d0 00000000000000c0 D pcf_driver_class
000000000097e290 0000000000000040 d pcf_services
000000000097e2d0 0000000000000010 d pcf_service_properties
000000000097e2e0 0000000000000010 d pcf_service_bdf
000000000097e2f0 0000000000000050 d pcf_cmap_class
000000000097e340 00000000000000c0 D bdf_driver_class
000000000097e400 0000000000000030 d bdf_services
000000000097e430 0000000000000010 d bdf_service_bdf
000000000097e440 0000000000000050 d bdf_cmap_class
000000000097e490 00000000000007c8 d bdf_properties_
000000000097ec60 0000000000000050 d tt_cmap_classes
000000000097ecb0 0000000000000068 D tt_cmap_unicode_class_rec
000000000097ed18 0000000000000068 D tt_cmap14_class_rec
000000000097ed80 0000000000000068 D tt_cmap13_class_rec
000000000097ede8 0000000000000068 D tt_cmap12_class_rec
000000000097ee50 0000000000000068 D tt_cmap10_class_rec
000000000097eeb8 0000000000000068 D tt_cmap8_class_rec
000000000097ef20 0000000000000068 D tt_cmap6_class_rec
000000000097ef88 0000000000000068 D tt_cmap4_class_rec
000000000097eff0 0000000000000068 D tt_cmap2_class_rec
000000000097f058 0000000000000068 D tt_cmap0_class_rec
000000000097f0c0 0000000000000048 D sfnt_module_class
000000000097f108 0000000000000170 d sfnt_interface
000000000097f278 0000000000000060 d sfnt_services
000000000097f2d8 0000000000000010 d sfnt_service_bdf
000000000097f2e8 0000000000000008 d tt_service_get_cmap_info
000000000097f2f0 0000000000000008 d sfnt_service_ps_name
000000000097f2f8 0000000000000010 d sfnt_service_glyph_dict
000000000097f308 0000000000000018 d sfnt_service_sfnt_table
000000000097f320 0000000000000048 D autofit_module_class
000000000097f368 0000000000000020 D af_autofitter_interface
000000000097f388 0000000000000020 d af_services
000000000097f3a8 0000000000000010 d af_service_properties
000000000097f3b8 0000000000000040 D af_latin_writing_system_class
000000000097f3f8 0000000000000040 D af_indic_writing_system_class
000000000097f440 00000000000002c0 D af_style_classes
000000000097f700 00000000000001e8 D af_script_classes
000000000097f8f0 0000000000000028 D af_writing_system_classes
000000000097f918 0000000000000028 D af_hani_script_class
000000000097f940 0000000000000028 D af_tibt_script_class
000000000097f968 0000000000000028 D af_sylo_script_class
000000000097f990 0000000000000028 D af_orya_script_class
000000000097f9b8 0000000000000028 D af_limb_script_class
000000000097f9e0 0000000000000028 D af_vaii_script_class
000000000097fa08 0000000000000028 D af_thai_script_class
000000000097fa30 0000000000000028 D af_tfng_script_class
000000000097fa58 0000000000000028 D af_telu_script_class
000000000097fa80 0000000000000028 D af_tavt_script_class
000000000097faa8 0000000000000028 D af_taml_script_class
000000000097fad0 0000000000000028 D af_sund_script_class
000000000097faf8 0000000000000028 D af_sinh_script_class
000000000097fb20 0000000000000028 D af_shaw_script_class
000000000097fb48 0000000000000028 D af_saur_script_class
000000000097fb70 0000000000000028 D af_rohg_script_class
000000000097fb98 0000000000000028 D af_osma_script_class
000000000097fbc0 0000000000000028 D af_osge_script_class
000000000097fbe8 0000000000000028 D af_orkh_script_class
000000000097fc10 0000000000000028 D af_olck_script_class
000000000097fc38 0000000000000028 D af_none_script_class
000000000097fc60 0000000000000028 D af_nkoo_script_class
000000000097fc88 0000000000000028 D af_mymr_script_class
000000000097fcb0 0000000000000028 D af_mong_script_class
000000000097fcd8 0000000000000028 D af_medf_script_class
000000000097fd00 0000000000000028 D af_mlym_script_class
000000000097fd28 0000000000000028 D af_lisu_script_class
000000000097fd50 0000000000000028 D af_latp_script_class
000000000097fd78 0000000000000028 D af_latb_script_class
000000000097fda0 0000000000000028 D af_latn_script_class
000000000097fdc8 0000000000000028 D af_lao_script_class
000000000097fdf0 0000000000000028 D af_knda_script_class
000000000097fe18 0000000000000028 D af_khms_script_class
000000000097fe40 0000000000000028 D af_khmr_script_class
000000000097fe68 0000000000000028 D af_kali_script_class
000000000097fe90 0000000000000028 D af_hebr_script_class
000000000097feb8 0000000000000028 D af_guru_script_class
000000000097fee0 0000000000000028 D af_gujr_script_class
000000000097ff08 0000000000000028 D af_grek_script_class
000000000097ff30 0000000000000028 D af_goth_script_class
000000000097ff58 0000000000000028 D af_glag_script_class
000000000097ff80 0000000000000028 D af_geok_script_class
000000000097ffa8 0000000000000028 D af_geor_script_class
000000000097ffd0 0000000000000028 D af_ethi_script_class
000000000097fff8 0000000000000028 D af_dsrt_script_class
0000000000980020 0000000000000028 D af_deva_script_class
0000000000980048 0000000000000028 D af_cyrl_script_class
0000000000980070 0000000000000028 D af_cprt_script_class
0000000000980098 0000000000000028 D af_copt_script_class
00000000009800c0 0000000000000028 D af_cher_script_class
00000000009800e8 0000000000000028 D af_cari_script_class
0000000000980110 0000000000000028 D af_cans_script_class
0000000000980138 0000000000000028 D af_cakm_script_class
0000000000980160 0000000000000028 D af_buhd_script_class
0000000000980188 0000000000000028 D af_beng_script_class
00000000009801b0 0000000000000028 D af_bamu_script_class
00000000009801d8 0000000000000028 D af_avst_script_class
0000000000980200 0000000000000028 D af_armn_script_class
0000000000980228 0000000000000028 D af_arab_script_class
0000000000980250 0000000000000028 D af_adlm_script_class
0000000000980278 0000000000000040 D af_dummy_writing_system_class
00000000009802b8 0000000000000040 D af_cjk_writing_system_class
00000000009802f8 0000000000000048 D pshinter_module_class
0000000000980340 0000000000000018 d pshinter_interface
0000000000980358 0000000000000078 D ft_smooth_renderer_class
00000000009803d0 0000000000000030 D ft_grays_raster
0000000000980400 0000000000000030 d func_interface
0000000000980430 0000000000000078 D ft_raster1_renderer_class
00000000009804a8 0000000000000030 D ft_standard_raster
00000000009804d8 0000000000000078 D ft_svg_renderer_class
0000000000980550 0000000000000020 d ft_svg_services
0000000000980570 0000000000000010 d ft_svg_service_properties
0000000000980580 0000000000000008 d svg_interface
0000000000980588 0000000000000030 D ft_sdf_raster
00000000009805b8 0000000000000030 d sdf_decompose_funcs
00000000009805e8 0000000000000030 D ft_bitmap_sdf_raster
0000000000980618 0000000000000078 D ft_bitmap_sdf_renderer_class
0000000000980690 0000000000000078 D ft_sdf_renderer_class
0000000000980708 0000000000000020 d sdf_services
0000000000980728 0000000000000010 d sdf_service_properties
0000000000980738 0000000000000050 D t1_cmap_unicode_class_rec
0000000000980788 0000000000000050 D t1_cmap_custom_class_rec
00000000009807d8 0000000000000050 D t1_cmap_expert_class_rec
0000000000980828 0000000000000050 D t1_cmap_standard_class_rec
0000000000980878 0000000000000048 D psaux_module_class
00000000009808c0 0000000000000058 d psaux_interface
0000000000980918 0000000000000018 D cff_decoder_funcs
0000000000980930 0000000000000040 D cff_builder_funcs
0000000000980970 0000000000000020 D t1_cmap_classes
0000000000980990 0000000000000018 D afm_parser_funcs
00000000009809a8 0000000000000020 D t1_decoder_funcs
00000000009809c8 0000000000000040 D t1_builder_funcs
0000000000980a08 0000000000000068 D ps_parser_funcs
0000000000980a70 0000000000000020 D ps_table_funcs
0000000000980a90 0000000000000250 d afm_key_table
0000000000980ce0 0000000000000048 D psnames_module_class
0000000000980d28 0000000000000020 d pscmaps_services
0000000000980d48 0000000000000040 d pscmaps_interface
0000000000980d88 0000000000000080 d egl_platforms
0000000000980e08 0000000000000020 d level_strings
0000000000980e28 0000000000000048 d st_gl_api
0000000000980e70 00000000000000d8 D util_format_a16_float_description
0000000000980f48 00000000000000d8 D util_format_a16_sint_description
0000000000981020 00000000000000d8 D util_format_a16_snorm_description
00000000009810f8 00000000000000d8 D util_format_a16_uint_description
00000000009811d0 00000000000000d8 D util_format_a16_unorm_description
00000000009812a8 00000000000000d8 D util_format_a1b5g5r5_uint_description
0000000000981380 00000000000000d8 D util_format_a1b5g5r5_unorm_description
0000000000981458 00000000000000d8 D util_format_a1r5g5b5_uint_description
0000000000981530 00000000000000d8 D util_format_a1r5g5b5_unorm_description
0000000000981608 00000000000000d8 D util_format_a2b10g10r10_uint_description
00000000009816e0 00000000000000d8 D util_format_a2b10g10r10_unorm_description
00000000009817b8 00000000000000d8 D util_format_a2r10g10b10_uint_description
0000000000981890 00000000000000d8 D util_format_a2r10g10b10_unorm_description
0000000000981968 00000000000000d8 D util_format_a32_float_description
0000000000981a40 00000000000000d8 D util_format_a32_sint_description
0000000000981b18 00000000000000d8 D util_format_a32_uint_description
0000000000981bf0 00000000000000d8 D util_format_a4b4g4r4_uint_description
0000000000981cc8 00000000000000d8 D util_format_a4b4g4r4_unorm_description
0000000000981da0 00000000000000d8 D util_format_a4r4_unorm_description
0000000000981e78 00000000000000d8 D util_format_a4r4g4b4_uint_description
0000000000981f50 00000000000000d8 D util_format_a4r4g4b4_unorm_description
0000000000982028 00000000000000d8 D util_format_a8_sint_description
0000000000982100 00000000000000d8 D util_format_a8_snorm_description
00000000009821d8 00000000000000d8 D util_format_a8_uint_description
00000000009822b0 00000000000000d8 D util_format_a8_unorm_description
0000000000982388 00000000000000d8 D util_format_a8b8g8r8_sint_description
0000000000982460 00000000000000d8 D util_format_a8b8g8r8_snorm_description
0000000000982538 00000000000000d8 D util_format_a8b8g8r8_srgb_description
0000000000982610 00000000000000d8 D util_format_a8b8g8r8_sscaled_description
00000000009826e8 00000000000000d8 D util_format_a8b8g8r8_uint_description
00000000009827c0 00000000000000d8 D util_format_a8b8g8r8_unorm_description
0000000000982898 00000000000000d8 D util_format_a8b8g8r8_uscaled_description
0000000000982970 00000000000000d8 D util_format_a8r8_unorm_description
0000000000982a48 00000000000000d8 D util_format_a8r8g8b8_srgb_description
0000000000982b20 00000000000000d8 D util_format_a8r8g8b8_uint_description
0000000000982bf8 00000000000000d8 D util_format_a8r8g8b8_unorm_description
0000000000982cd0 00000000000000d8 D util_format_astc_10x10_description
0000000000982da8 00000000000000d8 D util_format_astc_10x10_srgb_description
0000000000982e80 00000000000000d8 D util_format_astc_10x5_description
0000000000982f58 00000000000000d8 D util_format_astc_10x5_srgb_description
0000000000983030 00000000000000d8 D util_format_astc_10x6_description
0000000000983108 00000000000000d8 D util_format_astc_10x6_srgb_description
00000000009831e0 00000000000000d8 D util_format_astc_10x8_description
00000000009832b8 00000000000000d8 D util_format_astc_10x8_srgb_description
0000000000983390 00000000000000d8 D util_format_astc_12x10_description
0000000000983468 00000000000000d8 D util_format_astc_12x10_srgb_description
0000000000983540 00000000000000d8 D util_format_astc_12x12_description
0000000000983618 00000000000000d8 D util_format_astc_12x12_srgb_description
00000000009836f0 00000000000000d8 D util_format_astc_3x3x3_description
00000000009837c8 00000000000000d8 D util_format_astc_3x3x3_srgb_description
00000000009838a0 00000000000000d8 D util_format_astc_4x3x3_description
0000000000983978 00000000000000d8 D util_format_astc_4x3x3_srgb_description
0000000000983a50 00000000000000d8 D util_format_astc_4x4_description
0000000000983b28 00000000000000d8 D util_format_astc_4x4_srgb_description
0000000000983c00 00000000000000d8 D util_format_astc_4x4x3_description
0000000000983cd8 00000000000000d8 D util_format_astc_4x4x3_srgb_description
0000000000983db0 00000000000000d8 D util_format_astc_4x4x4_description
0000000000983e88 00000000000000d8 D util_format_astc_4x4x4_srgb_description
0000000000983f60 00000000000000d8 D util_format_astc_5x4_description
0000000000984038 00000000000000d8 D util_format_astc_5x4_srgb_description
0000000000984110 00000000000000d8 D util_format_astc_5x4x4_description
00000000009841e8 00000000000000d8 D util_format_astc_5x4x4_srgb_description
00000000009842c0 00000000000000d8 D util_format_astc_5x5_description
0000000000984398 00000000000000d8 D util_format_astc_5x5_srgb_description
0000000000984470 00000000000000d8 D util_format_astc_5x5x4_description
0000000000984548 00000000000000d8 D util_format_astc_5x5x4_srgb_description
0000000000984620 00000000000000d8 D util_format_astc_5x5x5_description
00000000009846f8 00000000000000d8 D util_format_astc_5x5x5_srgb_description
00000000009847d0 00000000000000d8 D util_format_astc_6x5_description
00000000009848a8 00000000000000d8 D util_format_astc_6x5_srgb_description
0000000000984980 00000000000000d8 D util_format_astc_6x5x5_description
0000000000984a58 00000000000000d8 D util_format_astc_6x5x5_srgb_description
0000000000984b30 00000000000000d8 D util_format_astc_6x6_description
0000000000984c08 00000000000000d8 D util_format_astc_6x6_srgb_description
0000000000984ce0 00000000000000d8 D util_format_astc_6x6x5_description
0000000000984db8 00000000000000d8 D util_format_astc_6x6x5_srgb_description
0000000000984e90 00000000000000d8 D util_format_astc_6x6x6_description
0000000000984f68 00000000000000d8 D util_format_astc_6x6x6_srgb_description
0000000000985040 00000000000000d8 D util_format_astc_8x5_description
0000000000985118 00000000000000d8 D util_format_astc_8x5_srgb_description
00000000009851f0 00000000000000d8 D util_format_astc_8x6_description
00000000009852c8 00000000000000d8 D util_format_astc_8x6_srgb_description
00000000009853a0 00000000000000d8 D util_format_astc_8x8_description
0000000000985478 00000000000000d8 D util_format_astc_8x8_srgb_description
0000000000985550 00000000000000d8 D util_format_atc_rgb_description
0000000000985628 00000000000000d8 D util_format_atc_rgba_explicit_description
0000000000985700 00000000000000d8 D util_format_atc_rgba_interpolated_description
00000000009857d8 00000000000000d8 D util_format_b10g10r10a2_sint_description
00000000009858b0 00000000000000d8 D util_format_b10g10r10a2_snorm_description
0000000000985988 00000000000000d8 D util_format_b10g10r10a2_sscaled_description
0000000000985a60 00000000000000d8 D util_format_b10g10r10a2_uint_description
0000000000985b38 00000000000000d8 D util_format_b10g10r10a2_unorm_description
0000000000985c10 00000000000000d8 D util_format_b10g10r10a2_uscaled_description
0000000000985ce8 00000000000000d8 D util_format_b10g10r10x2_unorm_description
0000000000985dc0 00000000000000d8 D util_format_b2g3r3_uint_description
0000000000985e98 00000000000000d8 D util_format_b2g3r3_unorm_description
0000000000985f70 00000000000000d8 D util_format_b4g4r4a4_uint_description
0000000000986048 00000000000000d8 D util_format_b4g4r4a4_unorm_description
0000000000986120 00000000000000d8 D util_format_b4g4r4x4_unorm_description
00000000009861f8 00000000000000d8 D util_format_b5g5r5a1_uint_description
00000000009862d0 00000000000000d8 D util_format_b5g5r5a1_unorm_description
00000000009863a8 00000000000000d8 D util_format_b5g5r5x1_unorm_description
0000000000986480 00000000000000d8 D util_format_b5g6r5_srgb_description
0000000000986558 00000000000000d8 D util_format_b5g6r5_uint_description
0000000000986630 00000000000000d8 D util_format_b5g6r5_unorm_description
0000000000986708 00000000000000d8 D util_format_b8g8r8_sint_description
00000000009867e0 00000000000000d8 D util_format_b8g8r8_snorm_description
00000000009868b8 00000000000000d8 D util_format_b8g8r8_srgb_description
0000000000986990 00000000000000d8 D util_format_b8g8r8_sscaled_description
0000000000986a68 00000000000000d8 D util_format_b8g8r8_uint_description
0000000000986b40 00000000000000d8 D util_format_b8g8r8_unorm_description
0000000000986c18 00000000000000d8 D util_format_b8g8r8_uscaled_description
0000000000986cf0 00000000000000d8 D util_format_b8g8r8a8_sint_description
0000000000986dc8 00000000000000d8 D util_format_b8g8r8a8_snorm_description
0000000000986ea0 00000000000000d8 D util_format_b8g8r8a8_srgb_description
0000000000986f78 00000000000000d8 D util_format_b8g8r8a8_sscaled_description
0000000000987050 00000000000000d8 D util_format_b8g8r8a8_uint_description
0000000000987128 00000000000000d8 D util_format_b8g8r8a8_unorm_description
0000000000987200 00000000000000d8 D util_format_b8g8r8a8_uscaled_description
00000000009872d8 00000000000000d8 D util_format_b8g8r8x8_srgb_description
00000000009873b0 00000000000000d8 D util_format_b8g8r8x8_unorm_description
0000000000987488 00000000000000d8 D util_format_etc2_r11_snorm_description
0000000000987560 00000000000000d8 D util_format_etc2_r11_unorm_description
0000000000987638 00000000000000d8 D util_format_etc2_rg11_snorm_description
0000000000987710 00000000000000d8 D util_format_etc2_rg11_unorm_description
00000000009877e8 00000000000000d8 D util_format_etc2_rgb8_description
00000000009878c0 00000000000000d8 D util_format_etc2_rgb8a1_description
0000000000987998 00000000000000d8 D util_format_etc2_rgba8_description
0000000000987a70 00000000000000d8 D util_format_etc2_srgb8_description
0000000000987b48 00000000000000d8 D util_format_etc2_srgb8a1_description
0000000000987c20 00000000000000d8 D util_format_etc2_srgba8_description
0000000000987cf8 00000000000000d8 D util_format_fxt1_rgb_description
0000000000987dd0 00000000000000d8 D util_format_fxt1_rgba_description
0000000000987ea8 00000000000000d8 D util_format_g16r16_snorm_description
0000000000987f80 00000000000000d8 D util_format_g16r16_unorm_description
0000000000988058 00000000000000d8 D util_format_g8r8_sint_description
0000000000988130 00000000000000d8 D util_format_g8r8_snorm_description
0000000000988208 00000000000000d8 D util_format_g8r8_unorm_description
00000000009882e0 00000000000000d8 D util_format_i16_float_description
00000000009883b8 00000000000000d8 D util_format_i16_sint_description
0000000000988490 00000000000000d8 D util_format_i16_snorm_description
0000000000988568 00000000000000d8 D util_format_i16_uint_description
0000000000988640 00000000000000d8 D util_format_i16_unorm_description
0000000000988718 00000000000000d8 D util_format_i32_float_description
00000000009887f0 00000000000000d8 D util_format_i32_sint_description
00000000009888c8 00000000000000d8 D util_format_i32_uint_description
00000000009889a0 00000000000000d8 D util_format_i8_sint_description
0000000000988a78 00000000000000d8 D util_format_i8_snorm_description
0000000000988b50 00000000000000d8 D util_format_i8_uint_description
0000000000988c28 00000000000000d8 D util_format_i8_unorm_description
0000000000988d00 00000000000000d8 D util_format_l16_float_description
0000000000988dd8 00000000000000d8 D util_format_l16_sint_description
0000000000988eb0 00000000000000d8 D util_format_l16_snorm_description
0000000000988f88 00000000000000d8 D util_format_l16_uint_description
0000000000989060 00000000000000d8 D util_format_l16_unorm_description
0000000000989138 00000000000000d8 D util_format_l16a16_float_description
0000000000989210 00000000000000d8 D util_format_l16a16_sint_description
00000000009892e8 00000000000000d8 D util_format_l16a16_snorm_description
00000000009893c0 00000000000000d8 D util_format_l16a16_uint_description
0000000000989498 00000000000000d8 D util_format_l16a16_unorm_description
0000000000989570 00000000000000d8 D util_format_l32_float_description
0000000000989648 00000000000000d8 D util_format_l32_sint_description
0000000000989720 00000000000000d8 D util_format_l32_uint_description
00000000009897f8 00000000000000d8 D util_format_l32a32_float_description
00000000009898d0 00000000000000d8 D util_format_l32a32_sint_description
00000000009899a8 00000000000000d8 D util_format_l32a32_uint_description
0000000000989a80 00000000000000d8 D util_format_l4a4_unorm_description
0000000000989b58 00000000000000d8 D util_format_l8_sint_description
0000000000989c30 00000000000000d8 D util_format_l8_snorm_description
0000000000989d08 00000000000000d8 D util_format_l8_srgb_description
0000000000989de0 00000000000000d8 D util_format_l8_uint_description
0000000000989eb8 00000000000000d8 D util_format_l8_unorm_description
0000000000989f90 00000000000000d8 D util_format_l8a8_sint_description
000000000098a068 00000000000000d8 D util_format_l8a8_snorm_description
000000000098a140 00000000000000d8 D util_format_l8a8_srgb_description
000000000098a218 00000000000000d8 D util_format_l8a8_uint_description
000000000098a2f0 00000000000000d8 D util_format_l8a8_unorm_description
000000000098a3c8 00000000000000d8 D util_format_none_description
000000000098a4a0 00000000000000d8 D util_format_r10g10b10a2_sint_description
000000000098a578 00000000000000d8 D util_format_r10g10b10a2_snorm_description
000000000098a650 00000000000000d8 D util_format_r10g10b10a2_sscaled_description
000000000098a728 00000000000000d8 D util_format_r10g10b10a2_uint_description
000000000098a800 00000000000000d8 D util_format_r10g10b10a2_unorm_description
000000000098a8d8 00000000000000d8 D util_format_r10g10b10a2_uscaled_description
000000000098a9b0 00000000000000d8 D util_format_r10g10b10x2_snorm_description
000000000098aa88 00000000000000d8 D util_format_r10g10b10x2_unorm_description
000000000098ab60 00000000000000d8 D util_format_r10g10b10x2_uscaled_description
000000000098ac38 00000000000000d8 D util_format_r10sg10sb10sa2u_norm_description
000000000098ad10 00000000000000d8 D util_format_r16_float_description
000000000098ade8 00000000000000d8 D util_format_r16_sint_description
000000000098aec0 00000000000000d8 D util_format_r16_snorm_description
000000000098af98 00000000000000d8 D util_format_r16_sscaled_description
000000000098b070 00000000000000d8 D util_format_r16_uint_description
000000000098b148 00000000000000d8 D util_format_r16_unorm_description
000000000098b220 00000000000000d8 D util_format_r16_uscaled_description
000000000098b2f8 00000000000000d8 D util_format_r16a16_float_description
000000000098b3d0 00000000000000d8 D util_format_r16a16_sint_description
000000000098b4a8 00000000000000d8 D util_format_r16a16_snorm_description
000000000098b580 00000000000000d8 D util_format_r16a16_uint_description
000000000098b658 00000000000000d8 D util_format_r16a16_unorm_description
000000000098b730 00000000000000d8 D util_format_r16g16_float_description
000000000098b808 00000000000000d8 D util_format_r16g16_sint_description
000000000098b8e0 00000000000000d8 D util_format_r16g16_snorm_description
000000000098b9b8 00000000000000d8 D util_format_r16g16_sscaled_description
000000000098ba90 00000000000000d8 D util_format_r16g16_uint_description
000000000098bb68 00000000000000d8 D util_format_r16g16_unorm_description
000000000098bc40 00000000000000d8 D util_format_r16g16_uscaled_description
000000000098bd18 00000000000000d8 D util_format_r16g16b16_float_description
000000000098bdf0 00000000000000d8 D util_format_r16g16b16_sint_description
000000000098bec8 00000000000000d8 D util_format_r16g16b16_snorm_description
000000000098bfa0 00000000000000d8 D util_format_r16g16b16_sscaled_description
000000000098c078 00000000000000d8 D util_format_r16g16b16_uint_description
000000000098c150 00000000000000d8 D util_format_r16g16b16_unorm_description
000000000098c228 00000000000000d8 D util_format_r16g16b16_uscaled_description
000000000098c300 00000000000000d8 D util_format_r16g16b16a16_float_description
000000000098c3d8 00000000000000d8 D util_format_r16g16b16a16_sint_description
000000000098c4b0 00000000000000d8 D util_format_r16g16b16a16_snorm_description
000000000098c588 00000000000000d8 D util_format_r16g16b16a16_sscaled_description
000000000098c660 00000000000000d8 D util_format_r16g16b16a16_uint_description
000000000098c738 00000000000000d8 D util_format_r16g16b16a16_unorm_description
000000000098c810 00000000000000d8 D util_format_r16g16b16a16_uscaled_description
000000000098c8e8 00000000000000d8 D util_format_r16g16b16x16_float_description
000000000098c9c0 00000000000000d8 D util_format_r16g16b16x16_sint_description
000000000098ca98 00000000000000d8 D util_format_r16g16b16x16_snorm_description
000000000098cb70 00000000000000d8 D util_format_r16g16b16x16_uint_description
000000000098cc48 00000000000000d8 D util_format_r16g16b16x16_unorm_description
000000000098cd20 00000000000000d8 D util_format_r32_fixed_description
000000000098cdf8 00000000000000d8 D util_format_r32_float_description
000000000098ced0 00000000000000d8 D util_format_r32_sint_description
000000000098cfa8 00000000000000d8 D util_format_r32_snorm_description
000000000098d080 00000000000000d8 D util_format_r32_sscaled_description
000000000098d158 00000000000000d8 D util_format_r32_uint_description
000000000098d230 00000000000000d8 D util_format_r32_unorm_description
000000000098d308 00000000000000d8 D util_format_r32_uscaled_description
000000000098d3e0 00000000000000d8 D util_format_r32a32_float_description
000000000098d4b8 00000000000000d8 D util_format_r32a32_sint_description
000000000098d590 00000000000000d8 D util_format_r32a32_uint_description
000000000098d668 00000000000000d8 D util_format_r32g32_fixed_description
000000000098d740 00000000000000d8 D util_format_r32g32_float_description
000000000098d818 00000000000000d8 D util_format_r32g32_sint_description
000000000098d8f0 00000000000000d8 D util_format_r32g32_snorm_description
000000000098d9c8 00000000000000d8 D util_format_r32g32_sscaled_description
000000000098daa0 00000000000000d8 D util_format_r32g32_uint_description
000000000098db78 00000000000000d8 D util_format_r32g32_unorm_description
000000000098dc50 00000000000000d8 D util_format_r32g32_uscaled_description
000000000098dd28 00000000000000d8 D util_format_r32g32b32_fixed_description
000000000098de00 00000000000000d8 D util_format_r32g32b32_float_description
000000000098ded8 00000000000000d8 D util_format_r32g32b32_sint_description
000000000098dfb0 00000000000000d8 D util_format_r32g32b32_snorm_description
000000000098e088 00000000000000d8 D util_format_r32g32b32_sscaled_description
000000000098e160 00000000000000d8 D util_format_r32g32b32_uint_description
000000000098e238 00000000000000d8 D util_format_r32g32b32_unorm_description
000000000098e310 00000000000000d8 D util_format_r32g32b32_uscaled_description
000000000098e3e8 00000000000000d8 D util_format_r32g32b32a32_fixed_description
000000000098e4c0 00000000000000d8 D util_format_r32g32b32a32_float_description
000000000098e598 00000000000000d8 D util_format_r32g32b32a32_sint_description
000000000098e670 00000000000000d8 D util_format_r32g32b32a32_snorm_description
000000000098e748 00000000000000d8 D util_format_r32g32b32a32_sscaled_description
000000000098e820 00000000000000d8 D util_format_r32g32b32a32_uint_description
000000000098e8f8 00000000000000d8 D util_format_r32g32b32a32_unorm_description
000000000098e9d0 00000000000000d8 D util_format_r32g32b32a32_uscaled_description
000000000098eaa8 00000000000000d8 D util_format_r32g32b32x32_float_description
000000000098eb80 00000000000000d8 D util_format_r32g32b32x32_sint_description
000000000098ec58 00000000000000d8 D util_format_r32g32b32x32_uint_description
000000000098ed30 00000000000000d8 D util_format_r3g3b2_uint_description
000000000098ee08 00000000000000d8 D util_format_r3g3b2_unorm_description
000000000098eee0 00000000000000d8 D util_format_r4a4_unorm_description
000000000098efb8 00000000000000d8 D util_format_r4g4b4a4_uint_description
000000000098f090 00000000000000d8 D util_format_r4g4b4a4_unorm_description
000000000098f168 00000000000000d8 D util_format_r5g5b5a1_uint_description
000000000098f240 00000000000000d8 D util_format_r5g5b5a1_unorm_description
000000000098f318 00000000000000d8 D util_format_r5g6b5_uint_description
000000000098f3f0 00000000000000d8 D util_format_r5g6b5_unorm_description
000000000098f4c8 00000000000000d8 D util_format_r5sg5sb6u_norm_description
000000000098f5a0 00000000000000d8 D util_format_r64_float_description
000000000098f678 00000000000000d8 D util_format_r64g64_float_description
000000000098f750 00000000000000d8 D util_format_r64g64b64_float_description
000000000098f828 00000000000000d8 D util_format_r64g64b64a64_float_description
000000000098f900 00000000000000d8 D util_format_r8_sint_description
000000000098f9d8 00000000000000d8 D util_format_r8_snorm_description
000000000098fab0 00000000000000d8 D util_format_r8_srgb_description
000000000098fb88 00000000000000d8 D util_format_r8_sscaled_description
000000000098fc60 00000000000000d8 D util_format_r8_uint_description
000000000098fd38 00000000000000d8 D util_format_r8_unorm_description
000000000098fe10 00000000000000d8 D util_format_r8_uscaled_description
000000000098fee8 00000000000000d8 D util_format_r8a8_sint_description
000000000098ffc0 00000000000000d8 D util_format_r8a8_snorm_description
0000000000990098 00000000000000d8 D util_format_r8a8_uint_description
0000000000990170 00000000000000d8 D util_format_r8a8_unorm_description
0000000000990248 00000000000000d8 D util_format_r8g8_sint_description
0000000000990320 00000000000000d8 D util_format_r8g8_snorm_description
00000000009903f8 00000000000000d8 D util_format_r8g8_srgb_description
00000000009904d0 00000000000000d8 D util_format_r8g8_sscaled_description
00000000009905a8 00000000000000d8 D util_format_r8g8_uint_description
0000000000990680 00000000000000d8 D util_format_r8g8_unorm_description
0000000000990758 00000000000000d8 D util_format_r8g8_uscaled_description
0000000000990830 00000000000000d8 D util_format_r8g8b8_sint_description
0000000000990908 00000000000000d8 D util_format_r8g8b8_snorm_description
00000000009909e0 00000000000000d8 D util_format_r8g8b8_srgb_description
0000000000990ab8 00000000000000d8 D util_format_r8g8b8_sscaled_description
0000000000990b90 00000000000000d8 D util_format_r8g8b8_uint_description
0000000000990c68 00000000000000d8 D util_format_r8g8b8_unorm_description
0000000000990d40 00000000000000d8 D util_format_r8g8b8_uscaled_description
0000000000990e18 00000000000000d8 D util_format_r8g8b8a8_sint_description
0000000000990ef0 00000000000000d8 D util_format_r8g8b8a8_snorm_description
0000000000990fc8 00000000000000d8 D util_format_r8g8b8a8_srgb_description
00000000009910a0 00000000000000d8 D util_format_r8g8b8a8_sscaled_description
0000000000991178 00000000000000d8 D util_format_r8g8b8a8_uint_description
0000000000991250 00000000000000d8 D util_format_r8g8b8a8_unorm_description
0000000000991328 00000000000000d8 D util_format_r8g8b8a8_uscaled_description
0000000000991400 00000000000000d8 D util_format_r8g8b8x8_sint_description
00000000009914d8 00000000000000d8 D util_format_r8g8b8x8_snorm_description
00000000009915b0 00000000000000d8 D util_format_r8g8b8x8_srgb_description
0000000000991688 00000000000000d8 D util_format_r8g8b8x8_uint_description
0000000000991760 00000000000000d8 D util_format_r8g8b8x8_unorm_description
0000000000991838 00000000000000d8 D util_format_r8sg8sb8ux8u_norm_description
0000000000991910 00000000000000d8 D util_format_x1b5g5r5_unorm_description
00000000009919e8 00000000000000d8 D util_format_x8b8g8r8_sint_description
0000000000991ac0 00000000000000d8 D util_format_x8b8g8r8_snorm_description
0000000000991b98 00000000000000d8 D util_format_x8b8g8r8_srgb_description
0000000000991c70 00000000000000d8 D util_format_x8b8g8r8_unorm_description
0000000000991d48 00000000000000d8 D util_format_x8r8g8b8_srgb_description
0000000000991e20 00000000000000d8 D util_format_x8r8g8b8_unorm_description
0000000000991ef8 00000000000000d8 D util_format_z24_unorm_s8_uint_as_r8g8b8a8_description
0000000000991fd0 0000000000002ac0 D _mesa_extension_table
0000000000994a90 0000000000005240 d format_info
0000000000999cd0 0000000000000028 d weights.3
0000000000999cf8 0000000000000040 d decode_1.0
0000000000999d38 0000000000000038 d inv_mat_tab
0000000000999d70 0000000000000020 d vert_attrfunc
0000000000999d90 0000000000000088 d prim_names
0000000000999e18 0000000000000180 d st_debug_flags
0000000000999f98 0000000000001220 d _mesa_glsl_supported_extensions
000000000099b1b8 0000000000000060 d tex_opcode_strs
000000000099b218 00000000000004c8 D ir_expression_operation_strings
000000000099b6e0 0000000000000140 V vtable for ir_hierarchical_visitor
000000000099b820 00000000000000d0 V vtable for ir_print_visitor
000000000099b8f0 0000000000000048 V vtable for parcel_out_uniform_storage
000000000099b938 0000000000000038 d vtable for (anonymous namespace)::count_uniform_size
000000000099b970 00000000000000d0 d vtable for (anonymous namespace)::ir_lower_jumps_visitor
000000000099ba40 0000000000000890 d yytname
000000000099c2d0 0000000000000018 d _mesa_glsl_parse(_mesa_glsl_parse_state*)::local_size_qualifiers
000000000099c2e8 0000000000000070 d _mesa_glsl_parse(_mesa_glsl_parse_state*)::map
000000000099c358 0000000000000580 d _mesa_glsl_parse(_mesa_glsl_parse_state*)::map
000000000099c8d8 0000000000000030 d _mesa_glsl_parse(_mesa_glsl_parse_state*)::map
000000000099c908 0000000000000100 d _mesa_glsl_parse(_mesa_glsl_parse_state*)::map
000000000099ca08 00000000000002b8 d yytname
000000000099ccc0 0000000000000008 D glsl_type::bvec2_type
000000000099ccc8 0000000000000008 D glsl_type::bvec3_type
000000000099ccd0 0000000000000008 D glsl_type::bvec4_type
000000000099ccd8 0000000000000008 D glsl_type::dmat2_type
000000000099cce0 0000000000000008 D glsl_type::dmat3_type
000000000099cce8 0000000000000008 D glsl_type::dmat4_type
000000000099ccf0 0000000000000008 D glsl_type::dvec2_type
000000000099ccf8 0000000000000008 D glsl_type::dvec3_type
000000000099cd00 0000000000000008 D glsl_type::dvec4_type
000000000099cd08 0000000000000008 D glsl_type::error_type
000000000099cd10 0000000000000008 D glsl_type::float_type
000000000099cd18 0000000000000008 D glsl_type::ivec2_type
000000000099cd20 0000000000000008 D glsl_type::ivec3_type
000000000099cd28 0000000000000008 D glsl_type::ivec4_type
000000000099cd30 0000000000000008 D glsl_type::uvec2_type
000000000099cd38 0000000000000008 D glsl_type::uvec3_type
000000000099cd40 0000000000000008 D glsl_type::uvec4_type
000000000099cd48 0000000000000008 D glsl_type::double_type
000000000099cd50 0000000000000008 D glsl_type::mat2x3_type
000000000099cd58 0000000000000008 D glsl_type::mat2x4_type
000000000099cd60 0000000000000008 D glsl_type::mat3x2_type
000000000099cd68 0000000000000008 D glsl_type::mat3x4_type
000000000099cd70 0000000000000008 D glsl_type::mat4x2_type
000000000099cd78 0000000000000008 D glsl_type::mat4x3_type
000000000099cd80 0000000000000008 D glsl_type::dmat2x3_type
000000000099cd88 0000000000000008 D glsl_type::dmat2x4_type
000000000099cd90 0000000000000008 D glsl_type::dmat3x2_type
000000000099cd98 0000000000000008 D glsl_type::dmat3x4_type
000000000099cda0 0000000000000008 D glsl_type::dmat4x2_type
000000000099cda8 0000000000000008 D glsl_type::dmat4x3_type
000000000099cdb0 0000000000000008 D glsl_type::i64vec2_type
000000000099cdb8 0000000000000008 D glsl_type::i64vec3_type
000000000099cdc0 0000000000000008 D glsl_type::i64vec4_type
000000000099cdc8 0000000000000008 D glsl_type::image1D_type
000000000099cdd0 0000000000000008 D glsl_type::image2D_type
000000000099cdd8 0000000000000008 D glsl_type::image3D_type
000000000099cde0 0000000000000008 D glsl_type::int64_t_type
000000000099cde8 0000000000000008 D glsl_type::u64vec2_type
000000000099cdf0 0000000000000008 D glsl_type::u64vec3_type
000000000099cdf8 0000000000000008 D glsl_type::u64vec4_type
000000000099ce00 0000000000000008 D glsl_type::iimage1D_type
000000000099ce08 0000000000000008 D glsl_type::iimage2D_type
000000000099ce10 0000000000000008 D glsl_type::iimage3D_type
000000000099ce18 0000000000000008 D glsl_type::uimage1D_type
000000000099ce20 0000000000000008 D glsl_type::uimage2D_type
000000000099ce28 0000000000000008 D glsl_type::uimage3D_type
000000000099ce30 0000000000000008 D glsl_type::uint64_t_type
000000000099ce38 0000000000000008 D glsl_type::image2DMS_type
000000000099ce40 0000000000000008 D glsl_type::imageCube_type
000000000099ce48 0000000000000008 D glsl_type::sampler1D_type
000000000099ce50 0000000000000008 D glsl_type::sampler2D_type
000000000099ce58 0000000000000008 D glsl_type::sampler3D_type
000000000099ce60 0000000000000008 D glsl_type::iimage2DMS_type
000000000099ce68 0000000000000008 D glsl_type::iimageCube_type
000000000099ce70 0000000000000008 D glsl_type::isampler1D_type
000000000099ce78 0000000000000008 D glsl_type::isampler2D_type
000000000099ce80 0000000000000008 D glsl_type::isampler3D_type
000000000099ce88 0000000000000008 D glsl_type::uimage2DMS_type
000000000099ce90 0000000000000008 D glsl_type::uimageCube_type
000000000099ce98 0000000000000008 D glsl_type::usampler1D_type
000000000099cea0 0000000000000008 D glsl_type::usampler2D_type
000000000099cea8 0000000000000008 D glsl_type::usampler3D_type
000000000099ceb0 0000000000000008 D glsl_type::atomic_uint_type
000000000099ceb8 0000000000000008 D glsl_type::image2DRect_type
000000000099cec0 0000000000000008 D glsl_type::imageBuffer_type
000000000099cec8 0000000000000008 D glsl_type::sampler2DMS_type
000000000099ced0 0000000000000008 D glsl_type::samplerCube_type
000000000099ced8 0000000000000008 D glsl_type::iimage2DRect_type
000000000099cee0 0000000000000008 D glsl_type::iimageBuffer_type
000000000099cee8 0000000000000008 D glsl_type::image1DArray_type
000000000099cef0 0000000000000008 D glsl_type::image2DArray_type
000000000099cef8 0000000000000008 D glsl_type::isampler2DMS_type
000000000099cf00 0000000000000008 D glsl_type::isamplerCube_type
000000000099cf08 0000000000000008 D glsl_type::uimage2DRect_type
000000000099cf10 0000000000000008 D glsl_type::uimageBuffer_type
000000000099cf18 0000000000000008 D glsl_type::usampler2DMS_type
000000000099cf20 0000000000000008 D glsl_type::usamplerCube_type
000000000099cf28 0000000000000008 D glsl_type::iimage1DArray_type
000000000099cf30 0000000000000008 D glsl_type::iimage2DArray_type
000000000099cf38 0000000000000008 D glsl_type::sampler2DRect_type
000000000099cf40 0000000000000008 D glsl_type::samplerBuffer_type
000000000099cf48 0000000000000008 D glsl_type::uimage1DArray_type
000000000099cf50 0000000000000008 D glsl_type::uimage2DArray_type
000000000099cf58 0000000000000008 D glsl_type::image2DMSArray_type
000000000099cf60 0000000000000008 D glsl_type::imageCubeArray_type
000000000099cf68 0000000000000008 D glsl_type::isampler2DRect_type
000000000099cf70 0000000000000008 D glsl_type::isamplerBuffer_type
000000000099cf78 0000000000000008 D glsl_type::sampler1DArray_type
000000000099cf80 0000000000000008 D glsl_type::sampler2DArray_type
000000000099cf88 0000000000000008 D glsl_type::usampler2DRect_type
000000000099cf90 0000000000000008 D glsl_type::usamplerBuffer_type
000000000099cf98 0000000000000008 D glsl_type::iimage2DMSArray_type
000000000099cfa0 0000000000000008 D glsl_type::iimageCubeArray_type
000000000099cfa8 0000000000000008 D glsl_type::isampler1DArray_type
000000000099cfb0 0000000000000008 D glsl_type::isampler2DArray_type
000000000099cfb8 0000000000000008 D glsl_type::sampler1DShadow_type
000000000099cfc0 0000000000000008 D glsl_type::sampler2DShadow_type
000000000099cfc8 0000000000000008 D glsl_type::uimage2DMSArray_type
000000000099cfd0 0000000000000008 D glsl_type::uimageCubeArray_type
000000000099cfd8 0000000000000008 D glsl_type::usampler1DArray_type
000000000099cfe0 0000000000000008 D glsl_type::usampler2DArray_type
000000000099cfe8 0000000000000008 D glsl_type::sampler2DMSArray_type
000000000099cff0 0000000000000008 D glsl_type::samplerCubeArray_type
000000000099cff8 0000000000000008 D glsl_type::isampler2DMSArray_type
000000000099d000 0000000000000008 D glsl_type::isamplerCubeArray_type
000000000099d008 0000000000000008 D glsl_type::samplerCubeShadow_type
000000000099d010 0000000000000008 D glsl_type::usampler2DMSArray_type
000000000099d018 0000000000000008 D glsl_type::usamplerCubeArray_type
000000000099d020 0000000000000008 D glsl_type::samplerExternalOES_type
000000000099d028 0000000000000008 D glsl_type::sampler2DRectShadow_type
000000000099d030 0000000000000008 D glsl_type::sampler1DArrayShadow_type
000000000099d038 0000000000000008 D glsl_type::sampler2DArrayShadow_type
000000000099d040 0000000000000008 D glsl_type::samplerCubeArrayShadow_type
000000000099d048 0000000000000008 D glsl_type::int_type
000000000099d050 0000000000000008 D glsl_type::bool_type
000000000099d058 0000000000000008 D glsl_type::mat2_type
000000000099d060 0000000000000008 D glsl_type::mat3_type
000000000099d068 0000000000000008 D glsl_type::mat4_type
000000000099d070 0000000000000008 D glsl_type::uint_type
000000000099d078 0000000000000008 D glsl_type::vec2_type
000000000099d080 0000000000000008 D glsl_type::vec3_type
000000000099d088 0000000000000008 D glsl_type::vec4_type
000000000099d090 0000000000000008 D glsl_type::void_type
000000000099d098 00000000000007e0 d opcode_names
000000000099d878 0000000000000078 d tgsi_file_names
000000000099d8f0 0000000000000168 d names.0
000000000099da58 0000000000000028 d hw_query_funcs
000000000099da80 0000000000000020 d hw_metric_query_funcs
000000000099daa0 0000000000000180 d nvc0_hw_metric_queries
000000000099dc20 0000000000000020 d hw_sm_query_funcs
000000000099dc40 0000000000000648 d nvc0_hw_sm_queries
000000000099e288 0000000000000028 d weights.3
000000000099e2b0 0000000000000200 d fragAttribs.7
000000000099e4b0 0000000000000060 d fragResults.1
000000000099e510 0000000000000100 d vertAttribs.8
000000000099e610 0000000000000200 d vertResults.2
000000000099e810 0000000000000400 d AttribFuncsARB
000000000099ec10 0000000000000200 d AttribFuncsNV
000000000099ee10 0000000000000038 d table_set
000000000099ee48 0000000000003d38 d values
00000000009a2b80 0000000000000120 d inst_desc
00000000009a2ca0 00000000000000d0 V vtable for glsl_to_tgsi_visitor
00000000009a2d70 0000000000000140 d ast_expression::operator_string(ast_operators)::operators
00000000009a2eb0 0000000000000020 d get_type_name_for_precision_qualifier(glsl_type const*)::names
00000000009a2ed0 0000000000000040 d get_type_name_for_precision_qualifier(glsl_type const*)::names
00000000009a2f10 0000000000000040 d get_type_name_for_precision_qualifier(glsl_type const*)::names
00000000009a2f50 0000000000000040 d get_type_name_for_precision_qualifier(glsl_type const*)::names
00000000009a2f90 0000000000000020 d get_type_name_for_precision_qualifier(glsl_type const*)::names
00000000009a2fb0 0000000000000020 d get_type_name_for_precision_qualifier(glsl_type const*)::names
00000000009a2fd0 0000000000000040 d get_type_name_for_precision_qualifier(glsl_type const*)::names
00000000009a3010 0000000000000020 d get_type_name_for_precision_qualifier(glsl_type const*)::names
00000000009a3030 0000000000000020 d get_type_name_for_precision_qualifier(glsl_type const*)::names
00000000009a3050 0000000000000040 d get_type_name_for_precision_qualifier(glsl_type const*)::names
00000000009a3090 0000000000000040 d get_type_name_for_precision_qualifier(glsl_type const*)::names
00000000009a30d0 0000000000000040 d get_type_name_for_precision_qualifier(glsl_type const*)::names
00000000009a3110 0000000000000020 d get_type_name_for_precision_qualifier(glsl_type const*)::names
00000000009a3130 0000000000000020 d get_type_name_for_precision_qualifier(glsl_type const*)::names
00000000009a3150 0000000000000040 d get_type_name_for_precision_qualifier(glsl_type const*)::names
00000000009a3190 0000000000000020 d get_type_name_for_precision_qualifier(glsl_type const*)::names
00000000009a31b0 0000000000000040 d get_type_name_for_precision_qualifier(glsl_type const*)::names
00000000009a31f0 0000000000000040 d get_type_name_for_precision_qualifier(glsl_type const*)::names
00000000009a3230 0000000000000040 d get_type_name_for_precision_qualifier(glsl_type const*)::names
00000000009a3270 0000000000000020 d get_type_name_for_precision_qualifier(glsl_type const*)::names
00000000009a3290 0000000000000020 d get_type_name_for_precision_qualifier(glsl_type const*)::names
00000000009a32b0 0000000000000040 d get_type_name_for_precision_qualifier(glsl_type const*)::names
00000000009a32f0 0000000000000020 d ast_declarator_list::hir(exec_list*, _mesa_glsl_parse_state*)::precision_names
00000000009a3310 0000000000000038 d deprecated_types
00000000009a3348 0000000000000078 d gl_Fog_elements
00000000009a33c0 00000000000000a8 d gl_Point_elements
00000000009a3468 0000000000000048 d gl_DepthRange_elements
00000000009a34b0 0000000000000018 d gl_LightModel_elements
00000000009a34c8 0000000000000120 d gl_LightSource_elements
00000000009a35e8 0000000000000078 d gl_BackMaterial_elements
00000000009a3660 0000000000000078 d gl_FrontMaterial_elements
00000000009a36d8 0000000000000420 d _mesa_builtin_uniform_desc
00000000009a3af8 0000000000000048 d gl_BackLightProduct_elements
00000000009a3b40 0000000000000048 d gl_FrontLightProduct_elements
00000000009a3b88 0000000000000018 d gl_BackLightModelProduct_elements
00000000009a3ba0 0000000000000018 d gl_FrontLightModelProduct_elements
00000000009a3bb8 0000000000000028 V vtable for nv50_ir::Instruction
00000000009a3be0 0000000000000028 V vtable for nv50_ir::TexInstruction
00000000009a3c08 0000000000000028 V vtable for nv50_ir::CmpInstruction
00000000009a3c30 0000000000000028 V vtable for nv50_ir::FlowInstruction
00000000009a3c58 0000000000000020 V vtable for nv50_ir::DeepClonePolicy<nv50_ir::Function>
00000000009a3c78 0000000000000028 d vtable for (anonymous namespace)::Converter::BindArgumentsPass
00000000009a3ca0 0000000000000020 V vtable for nv50_ir::Graph
00000000009a3cc0 0000000000000040 V vtable for nv50_ir::DFSIterator
00000000009a3d00 0000000000000040 V vtable for nv50_ir::CFGIterator
00000000009a3d40 0000000000000028 V vtable for nv50_ir::CopyPropagation
00000000009a3d68 0000000000000028 V vtable for nv50_ir::MergeSplits
00000000009a3d90 0000000000000028 V vtable for nv50_ir::LoadPropagation
00000000009a3db8 0000000000000028 V vtable for nv50_ir::IndirectPropagation
00000000009a3de0 0000000000000028 V vtable for nv50_ir::ConstantFolding
00000000009a3e08 0000000000000028 V vtable for nv50_ir::ModifierFolding
00000000009a3e30 0000000000000028 V vtable for nv50_ir::AlgebraicOpt
00000000009a3e58 0000000000000028 V vtable for nv50_ir::LateAlgebraicOpt
00000000009a3e80 0000000000000028 V vtable for nv50_ir::Split64BitOpPreRA
00000000009a3ea8 0000000000000028 V vtable for nv50_ir::MemoryOpt
00000000009a3ed0 0000000000000028 V vtable for nv50_ir::FlatteningPass
00000000009a3ef8 0000000000000028 V vtable for nv50_ir::PostRaLoadPropagation
00000000009a3f20 0000000000000028 V vtable for nv50_ir::GlobalCSE
00000000009a3f48 0000000000000028 V vtable for nv50_ir::LocalCSE
00000000009a3f70 0000000000000028 V vtable for nv50_ir::DeadCodeElim
00000000009a3f98 0000000000000020 V vtable for nv50_ir::ShallowClonePolicy<nv50_ir::Function>
00000000009a3fb8 0000000000000030 d nv50_ir::pixldOpStr
00000000009a3fe8 0000000000000010 d nv50_ir::subfmOpStr
00000000009a3ff8 0000000000000080 d nv50_ir::texMaskStr
00000000009a4078 00000000000000c0 d nv50_ir::CondCodeStr
00000000009a4138 0000000000000070 d nv50_ir::DataTypeStr
00000000009a41a8 0000000000000170 d nv50_ir::SemanticStr
00000000009a4318 0000000000000010 d nv50_ir::rcprsqOpStr
00000000009a4328 0000000000000040 d nv50_ir::RoundModeStr
00000000009a4368 0000000000000050 d nv50_ir::atomSubOpStr
00000000009a43b8 0000000000000018 d nv50_ir::ldstSubOpStr
00000000009a43d0 0000000000000020 d nv50_ir::gatherCompStr
00000000009a43f0 0000000000000020 d nv50_ir::xmadOpCModeStr
00000000009a4410 0000000000000028 d nv50_ir::barOpStr
00000000009a4438 0000000000000038 d nv50_ir::cctlOpStr
00000000009a4470 0000000000000010 d nv50_ir::emitOpStr
00000000009a4480 0000000000000080 d nv50_ir::interpStr
00000000009a4500 0000000000000020 d nv50_ir::shflOpStr
00000000009a4520 0000000000000028 V vtable for nv50_ir::RegAlloc::PhiMovesPass
00000000009a4548 0000000000000028 V vtable for nv50_ir::RegAlloc::ArgumentMovesPass
00000000009a4570 0000000000000028 V vtable for nv50_ir::RegAlloc::BuildIntervalsPass
00000000009a4598 0000000000000028 V vtable for nv50_ir::RegAlloc::InsertConstraintsPass
00000000009a45c0 0000000000000020 V vtable for nv50_ir::DominatorTree
00000000009a45e0 0000000000000050 V vtable for nv50_ir::DLList::Iterator
00000000009a4630 00000000000005a0 d InstInfo
00000000009a4bd0 00000000000007e8 d yytname
00000000009a53b8 0000000000000078 d file_names
00000000009a5430 0000000000000028 V vtable for nv50_ir::SchedDataCalculatorGM107
00000000009a5458 0000000000000028 V vtable for nv50_ir::NVC0LegalizeSSA
00000000009a5480 0000000000000028 V vtable for nv50_ir::NVC0LegalizePostRA
00000000009a54a8 0000000000000030 V vtable for nv50_ir::NVC0LoweringPass
00000000009a54d8 0000000000003a50 D table_noop_array
00000000009a8f28 0000000000003250 d public_entries
00000000009ac178 0000000000000030 d vtable for std::__facet_shims::(anonymous namespace)::money_get_shim<char>
00000000009ac1a8 0000000000000030 d vtable for std::__facet_shims::(anonymous namespace)::money_put_shim<char>
00000000009ac1d8 0000000000000038 d vtable for std::__facet_shims::(anonymous namespace)::messages_shim<char>
00000000009ac210 0000000000000030 d vtable for std::__facet_shims::(anonymous namespace)::money_get_shim<wchar_t>
00000000009ac240 0000000000000030 d vtable for std::__facet_shims::(anonymous namespace)::money_put_shim<wchar_t>
00000000009ac270 0000000000000038 d vtable for std::__facet_shims::(anonymous namespace)::messages_shim<wchar_t>
00000000009ac2a8 0000000000000050 d vtable for std::__facet_shims::(anonymous namespace)::time_get_shim<char>
00000000009ac2f8 0000000000000050 d vtable for std::__facet_shims::(anonymous namespace)::time_get_shim<wchar_t>
00000000009ac348 0000000000000030 d vtable for std::__facet_shims::(anonymous namespace)::money_get_shim<char>
00000000009ac378 0000000000000030 d vtable for std::__facet_shims::(anonymous namespace)::money_put_shim<char>
00000000009ac3a8 0000000000000038 d vtable for std::__facet_shims::(anonymous namespace)::messages_shim<char>
00000000009ac3e0 0000000000000030 d vtable for std::__facet_shims::(anonymous namespace)::money_get_shim<wchar_t>
00000000009ac410 0000000000000030 d vtable for std::__facet_shims::(anonymous namespace)::money_put_shim<wchar_t>
00000000009ac440 0000000000000038 d vtable for std::__facet_shims::(anonymous namespace)::messages_shim<wchar_t>
00000000009ac480 0000000000000168 d mpg123_error
00000000009ac5f0 0000000000000020 d text_converters
00000000009ac610 00000000000000a8 d decname
00000000009ac6c0 00000000000000d8 d mapend
00000000009ac7a0 00000000000000d8 d map
00000000009ac878 0000000000000020 d htc
00000000009ac898 0000000000000200 d ht
00000000009aca98 0000000000000200 d gpMixFunctionTable
00000000009acc98 0000000000000200 d gpFastMixFunctionTable
00000000009ace98 0000000000000028 d mustype
00000000009acec0 0000000000000078 d sig
00000000009acf38 0000000000000080 d keySigs
00000000009acfb8 0000000000000018 d pat_fun
00000000009acfd0 0000000000000100 d romFS_devoptab
00000000009ad0d0 0000000000000100 d fsdev_devoptab
00000000009ad1d0 0000000000000020 d kCat3456
00000000009ad1f0 0000000000000030 d _hb_all_shapers
00000000009ad220 0000000000000060 D _hb_ot_shaper_arabic
00000000009ad280 0000000000000060 D _hb_ot_shaper_hangul
00000000009ad2e0 0000000000000060 D _hb_ot_shaper_hebrew
00000000009ad340 0000000000000060 D _hb_ot_shaper_indic
00000000009ad3a0 0000000000000060 D _hb_ot_shaper_khmer
00000000009ad400 0000000000000060 D _hb_ot_shaper_myanmar
00000000009ad460 0000000000000060 D _hb_ot_shaper_thai
00000000009ad4c0 0000000000000060 D _hb_ot_shaper_use
00000000009ad520 0000000000000038 d categories
00000000009ad558 00000000000001f8 D _C_time_locale
00000000009ad750 0000000000000100 D dotab_stdnull
00000000009ad850 0000000000000180 d supported
00000000009ad9d0 0000000000000030 d s_music_interfaces
00000000009ada00 0000000000000010 d render_drivers
00000000009ada10 00000000000000a0 d ft_default_modules
00000000009adab0 0000000000000010 d t1_service_properties
00000000009adac0 0000000000000010 d cff_service_properties
00000000009adad0 0000000000000010 d cid_service_properties
00000000009adae0 0000000000000530 d egl_functions.40
00000000009ae010 00000000000000d8 D util_format_ayuv_description
00000000009ae0e8 00000000000000d8 D util_format_bptc_rgb_float_description
00000000009ae1c0 00000000000000d8 D util_format_bptc_rgb_ufloat_description
00000000009ae298 00000000000000d8 D util_format_bptc_rgba_unorm_description
00000000009ae370 00000000000000d8 D util_format_bptc_srgba_description
00000000009ae448 00000000000000d8 D util_format_dxt1_rgb_description
00000000009ae520 00000000000000d8 D util_format_dxt1_rgba_description
00000000009ae5f8 00000000000000d8 D util_format_dxt1_srgb_description
00000000009ae6d0 00000000000000d8 D util_format_dxt1_srgba_description
00000000009ae7a8 00000000000000d8 D util_format_dxt3_rgba_description
00000000009ae880 00000000000000d8 D util_format_dxt3_srgba_description
00000000009ae958 00000000000000d8 D util_format_dxt5_rgba_description
00000000009aea30 00000000000000d8 D util_format_dxt5_srgba_description
00000000009aeb08 00000000000000d8 D util_format_etc1_rgb8_description
00000000009aebe0 00000000000000d8 D util_format_g8r8_b8r8_unorm_description
00000000009aecb8 00000000000000d8 D util_format_g8r8_g8b8_unorm_description
00000000009aed90 00000000000000d8 D util_format_iyuv_description
00000000009aee68 00000000000000d8 D util_format_latc1_snorm_description
00000000009aef40 00000000000000d8 D util_format_latc1_unorm_description
00000000009af018 00000000000000d8 D util_format_latc2_snorm_description
00000000009af0f0 00000000000000d8 D util_format_latc2_unorm_description
00000000009af1c8 00000000000000d8 D util_format_nv12_description
00000000009af2a0 00000000000000d8 D util_format_nv21_description
00000000009af378 00000000000000d8 D util_format_p010_description
00000000009af450 00000000000000d8 D util_format_p016_description
00000000009af528 00000000000000d8 D util_format_r11g11b10_float_description
00000000009af600 00000000000000d8 D util_format_r1_unorm_description
00000000009af6d8 00000000000000d8 D util_format_r8g8_b8g8_unorm_description
00000000009af7b0 00000000000000d8 D util_format_r8g8_r8b8_unorm_description
00000000009af888 00000000000000d8 D util_format_r8g8bx_snorm_description
00000000009af960 00000000000000d8 D util_format_r9g9b9e5_float_description
00000000009afa38 00000000000000d8 D util_format_rgtc1_snorm_description
00000000009afb10 00000000000000d8 D util_format_rgtc1_unorm_description
00000000009afbe8 00000000000000d8 D util_format_rgtc2_snorm_description
00000000009afcc0 00000000000000d8 D util_format_rgtc2_unorm_description
00000000009afd98 00000000000000d8 D util_format_s8_uint_description
00000000009afe70 00000000000000d8 D util_format_s8_uint_z24_unorm_description
00000000009aff48 00000000000000d8 D util_format_s8x24_uint_description
00000000009b0020 00000000000000d8 D util_format_uyvy_description
00000000009b00f8 00000000000000d8 D util_format_x24s8_uint_description
00000000009b01d0 00000000000000d8 D util_format_x32_s8x24_uint_description
00000000009b02a8 00000000000000d8 D util_format_x8z24_unorm_description
00000000009b0380 00000000000000d8 D util_format_xyuv_description
00000000009b0458 00000000000000d8 D util_format_yuyv_description
00000000009b0530 00000000000000d8 D util_format_yv12_description
00000000009b0608 00000000000000d8 D util_format_yv16_description
00000000009b06e0 00000000000000d8 D util_format_z16_unorm_description
00000000009b07b8 00000000000000d8 D util_format_z24_unorm_s8_uint_description
00000000009b0890 00000000000000d8 D util_format_z24x8_unorm_description
00000000009b0968 00000000000000d8 D util_format_z32_float_description
00000000009b0a40 00000000000000d8 D util_format_z32_float_s8x24_uint_description
00000000009b0b18 00000000000000d8 D util_format_z32_unorm_description
00000000009b0bf0 0000000000000030 V vtable for ast_node
00000000009b0c20 0000000000000030 V vtable for ast_compound_statement
00000000009b0c50 0000000000000030 V vtable for ast_expression_statement
00000000009b0c80 0000000000000030 V vtable for ast_function
00000000009b0cb0 0000000000000030 V vtable for ast_fully_specified_type
00000000009b0ce0 0000000000000030 V vtable for ast_parameter_declarator
00000000009b0d10 0000000000000030 V vtable for ast_function_definition
00000000009b0d40 0000000000000030 V vtable for ast_declaration
00000000009b0d70 0000000000000030 V vtable for ast_declarator_list
00000000009b0da0 0000000000000030 V vtable for ast_jump_statement
00000000009b0dd0 0000000000000030 V vtable for ast_demote_statement
00000000009b0e00 0000000000000030 V vtable for ast_selection_statement
00000000009b0e30 0000000000000030 V vtable for ast_switch_statement
00000000009b0e60 0000000000000030 V vtable for ast_switch_body
00000000009b0e90 0000000000000030 V vtable for ast_case_label
00000000009b0ec0 0000000000000030 V vtable for ast_case_label_list
00000000009b0ef0 0000000000000030 V vtable for ast_case_statement
00000000009b0f20 0000000000000030 V vtable for ast_case_statement_list
00000000009b0f50 0000000000000030 V vtable for ast_iteration_statement
00000000009b0f80 0000000000000030 V vtable for ast_struct_specifier
00000000009b0fb0 0000000000000030 V vtable for ast_subroutine_list
00000000009b0fe0 0000000000000080 V vtable for ir_rvalue
00000000009b1060 0000000000000040 V vtable for ir_variable
00000000009b10a0 0000000000000080 V vtable for ir_swizzle
00000000009b1120 0000000000000040 V vtable for ir_return
00000000009b1160 0000000000000040 V vtable for ir_discard
00000000009b11a0 0000000000000040 V vtable for ir_demote
00000000009b11e0 0000000000000040 V vtable for ir_loop_jump
00000000009b1220 0000000000000040 V vtable for ir_if
00000000009b1260 0000000000000040 V vtable for ir_loop
00000000009b12a0 0000000000000048 V vtable for ir_call
00000000009b12e8 0000000000000088 V vtable for ir_dereference_variable
00000000009b1370 0000000000000088 V vtable for ir_dereference_array
00000000009b13f8 0000000000000088 V vtable for ir_dereference_record
00000000009b1480 0000000000000080 V vtable for ir_texture
00000000009b1500 0000000000000048 V vtable for ir_assignment
00000000009b1548 0000000000000040 V vtable for ir_function
00000000009b1588 0000000000000040 V vtable for ir_function_signature
00000000009b15c8 0000000000000088 V vtable for ir_constant
00000000009b1650 0000000000000140 V vtable for fixup_ir_call_visitor
00000000009b1790 0000000000000080 V vtable for ir_expression
00000000009b1810 0000000000000040 V vtable for ir_emit_vertex
00000000009b1850 0000000000000040 V vtable for ir_end_primitive
00000000009b1890 0000000000000040 V vtable for ir_barrier
00000000009b18d0 0000000000000140 V vtable for array_sizing_visitor
00000000009b1a10 0000000000000140 d vtable for (anonymous namespace)::deref_type_updater
00000000009b1b50 0000000000000140 d vtable for (anonymous namespace)::find_deref_visitor
00000000009b1c90 0000000000000150 d vtable for (anonymous namespace)::array_resize_visitor
00000000009b1de0 0000000000000140 d vtable for (anonymous namespace)::find_assignment_visitor
00000000009b1f20 0000000000000140 d vtable for (anonymous namespace)::find_emit_vertex_visitor
00000000009b2060 0000000000000140 d vtable for (anonymous namespace)::dynamic_sampler_array_indexing_visitor
00000000009b21a0 0000000000000140 d vtable for remap_variables(ir_instruction*, gl_linked_shader*, hash_table*)::remap_visitor
00000000009b22e0 0000000000000140 d vtable for (anonymous namespace)::call_link_visitor
00000000009b2420 0000000000000038 d vtable for (anonymous namespace)::ubo_visitor
00000000009b2458 0000000000000038 d vtable for (anonymous namespace)::count_block_size
00000000009b2490 0000000000000038 V vtable for tfeedback_candidate_generator
00000000009b24c8 0000000000000140 V vtable for examine_rhs
00000000009b2608 0000000000000140 d vtable for (anonymous namespace)::loop_analysis
00000000009b2748 0000000000000140 V vtable for loop_unroll_count
00000000009b2888 0000000000000140 d vtable for (anonymous namespace)::loop_unroll_visitor
00000000009b29c8 0000000000000140 d vtable for (anonymous namespace)::lower_builtins_visitor
00000000009b2b08 0000000000000148 d vtable for (anonymous namespace)::lower_const_array_visitor
00000000009b2c50 0000000000000140 d vtable for (anonymous namespace)::lower_cs_derived_visitor
00000000009b2d90 0000000000000140 d vtable for (anonymous namespace)::lower_discard_flow_visitor
00000000009b2ed0 0000000000000148 d vtable for (anonymous namespace)::lower_distance_visitor
00000000009b3018 0000000000000148 d vtable for (anonymous namespace)::lower_distance_visitor_counter
00000000009b3160 0000000000000140 d vtable for (anonymous namespace)::lower_instructions_visitor
00000000009b32a0 0000000000000140 V vtable for lower_packed_varyings_gs_splicer
00000000009b33e0 0000000000000140 V vtable for lower_packed_varyings_return_splicer
00000000009b3520 0000000000000148 d vtable for (anonymous namespace)::flatten_named_interface_blocks_declarations
00000000009b3668 0000000000000148 d vtable for (anonymous namespace)::find_precision_visitor
00000000009b37b0 0000000000000148 d vtable for (anonymous namespace)::lower_precision_visitor
00000000009b38f8 0000000000000140 d vtable for (anonymous namespace)::find_lowerable_rvalues_visitor
00000000009b3a38 0000000000000140 d vtable for (anonymous namespace)::lower_subroutine_visitor
00000000009b3b78 0000000000000148 d vtable for (anonymous namespace)::lower_tess_level_visitor
00000000009b3cc0 0000000000000148 d vtable for (anonymous namespace)::ir_vec_index_to_swizzle_visitor
00000000009b3e08 0000000000000158 d vtable for (anonymous namespace)::vector_deref_visitor
00000000009b3f60 0000000000000158 d vtable for (anonymous namespace)::vector_insert_visitor
00000000009b40b8 0000000000000140 d vtable for (anonymous namespace)::lower_vertex_id_visitor
00000000009b41f8 0000000000000150 d vtable for (anonymous namespace)::lower_shared_reference_visitor
00000000009b4348 0000000000000150 d vtable for (anonymous namespace)::lower_ubo_reference_visitor
00000000009b4498 0000000000000140 d vtable for (anonymous namespace)::lower_xfb_var_splicer
00000000009b45d8 0000000000000158 d vtable for (anonymous namespace)::ir_algebraic_visitor
00000000009b4730 0000000000000158 V vtable for ir_array_splitting_visitor
00000000009b4888 0000000000000140 d vtable for (anonymous namespace)::ir_array_reference_visitor
00000000009b49c8 0000000000000140 d vtable for (anonymous namespace)::opt_conditional_discard_visitor
00000000009b4b08 0000000000000158 d vtable for (anonymous namespace)::ir_constant_folding_visitor
00000000009b4c60 0000000000000148 d vtable for (anonymous namespace)::ir_constant_propagation_visitor
00000000009b4da8 0000000000000148 d vtable for (anonymous namespace)::ir_constant_variable_visitor
00000000009b4ef0 0000000000000148 d vtable for (anonymous namespace)::ir_copy_propagation_elements_visitor
00000000009b5038 0000000000000140 d vtable for (anonymous namespace)::varying_info_visitor
00000000009b5178 0000000000000148 d vtable for (anonymous namespace)::replace_varyings_visitor
00000000009b52c0 0000000000000140 d vtable for (anonymous namespace)::array_index_visit
00000000009b5400 0000000000000148 d vtable for (anonymous namespace)::kill_for_derefs_visitor
00000000009b5548 0000000000000140 d vtable for (anonymous namespace)::ir_dead_functions_visitor
00000000009b5688 0000000000000140 d vtable for (anonymous namespace)::nested_if_flattener
00000000009b57c8 0000000000000140 d vtable for (anonymous namespace)::matrix_flipper
00000000009b5908 0000000000000150 V vtable for ir_variable_replacement_visitor
00000000009b5a58 0000000000000140 d vtable for (anonymous namespace)::ir_save_lvalue_visitor
00000000009b5b98 0000000000000150 d vtable for (anonymous namespace)::ir_function_inlining_visitor
00000000009b5ce8 0000000000000140 d vtable for (anonymous namespace)::ir_if_simplification_visitor
00000000009b5e28 0000000000000148 d vtable for (anonymous namespace)::ir_minmax_visitor
00000000009b5f70 0000000000000148 d vtable for (anonymous namespace)::ir_rebalance_visitor
00000000009b60b8 0000000000000140 d vtable for (anonymous namespace)::redundant_jumps_visitor
00000000009b61f8 0000000000000140 d vtable for (anonymous namespace)::ir_structure_reference_visitor
00000000009b6338 0000000000000158 d vtable for (anonymous namespace)::ir_structure_splitting_visitor
00000000009b6490 0000000000000148 d vtable for (anonymous namespace)::ir_opt_swizzle_visitor
00000000009b65d8 0000000000000140 d vtable for (anonymous namespace)::ir_tree_grafting_visitor
00000000009b6718 0000000000000140 d vtable for (anonymous namespace)::ir_vectorize_visitor
00000000009b6858 0000000000000150 d vtable for (anonymous namespace)::ir_invariance_propagation_visitor
00000000009b69a8 0000000000000030 V vtable for ast_layout_expression
00000000009b69d8 0000000000000028 D nouveau_buffer_vtbl
00000000009b6a00 0000000000000028 D nvc0_miptree_vtbl
00000000009b6a28 0000000000000038 d vtable for (anonymous namespace)::add_uniform_to_shader
00000000009b6a60 0000000000000200 d update_functions
00000000009b6c60 0000000000000140 V vtable for ir_control_flow_info_visitor
00000000009b6da0 0000000000000030 V vtable for ast_array_specifier
00000000009b6dd0 0000000000000038 V vtable for ast_expression_bin
00000000009b6e08 0000000000000038 V vtable for ast_function_expression
00000000009b6e40 0000000000000038 V vtable for ast_aggregate_initializer
00000000009b6e78 0000000000000140 V vtable for read_from_write_only_variable_visitor
00000000009b6fb8 0000000000000038 V vtable for ast_expression
00000000009b6ff0 0000000000000140 V vtable for interface_block_usage_visitor
00000000009b7130 0000000000000030 V vtable for ast_interface_block
00000000009b7160 0000000000000030 V vtable for ast_tcs_output_layout
00000000009b7190 0000000000000030 V vtable for ast_gs_input_layout
00000000009b71c0 0000000000000030 V vtable for ast_cs_input_layout
00000000009b71f0 0000000000000030 V vtable for ast_warnings_toggle
00000000009b7220 0000000000000030 V vtable for ast_type_specifier
00000000009b7250 0000000000000140 V vtable for ir_array_refcount_visitor
00000000009b7390 0000000000000140 V vtable for ir_function_can_inline_visitor
00000000009b74d0 0000000000000140 d vtable for (anonymous namespace)::has_recursion_visitor
00000000009b7610 0000000000000140 d vtable for (anonymous namespace)::ir_set_program_inouts_visitor
00000000009b7750 0000000000000140 V vtable for ir_variable_refcount_visitor
00000000009b7890 0000000000000140 V vtable for link_uniform_block_active_visitor
00000000009b79d0 0000000000000140 d vtable for (anonymous namespace)::lower_discard_visitor
00000000009b7b10 0000000000000140 d vtable for (anonymous namespace)::ir_if_to_cond_assign_visitor
00000000009b7c50 0000000000000148 d vtable for (anonymous namespace)::lower_64bit_visitor
00000000009b7d98 0000000000000140 d vtable for (anonymous namespace)::ir_mat_op_to_vec_visitor
00000000009b7ed8 0000000000000148 V vtable for lower_offset_array_visitor
00000000009b8020 0000000000000158 d vtable for (anonymous namespace)::lower_packing_builtins_visitor
00000000009b8178 0000000000000148 d vtable for (anonymous namespace)::deref_replacer
00000000009b82c0 0000000000000140 d vtable for (anonymous namespace)::find_variable_index
00000000009b8400 0000000000000148 d vtable for (anonymous namespace)::variable_index_to_cond_assign_visitor
00000000009b8548 0000000000000140 d vtable for (anonymous namespace)::ir_vec_index_to_cond_assign_visitor
00000000009b8688 0000000000000148 d vtable for (anonymous namespace)::lower_vector_visitor
00000000009b87d0 0000000000000140 d vtable for (anonymous namespace)::output_read_remover
00000000009b8910 0000000000000028 D nv50_miptree_vtbl
00000000009b8938 0000000000000048 V vtable for nv50_ir::LValue
00000000009b8980 0000000000000048 V vtable for nv50_ir::Symbol
00000000009b89c8 0000000000000048 V vtable for nv50_ir::ImmediateValue
00000000009b8a10 0000000000000048 V vtable for nv50_ir::Value
00000000009b8a58 0000000000000048 V vtable for nv50_ir::CodeEmitter
00000000009b8aa0 00000000000000d8 V vtable for nv50_ir::TargetGM107
00000000009b8b78 0000000000000158 V vtable for ir_expression_flattening_visitor
00000000009b8cd0 0000000000000048 V vtable for nv50_ir::CodeEmitterGM107
00000000009b8d18 0000000000000028 V vtable for nv50_ir::GM107LegalizeSSA
00000000009b8d40 0000000000000030 V vtable for nv50_ir::GM107LoweringPass
00000000009b8d70 00000000000000b8 V vtable for nv50_ir::TargetNVC0
00000000009b8e28 0000000000000018 V typeinfo for __gnu_cxx::__concurrence_lock_error
00000000009b8e40 0000000000000018 V typeinfo for __gnu_cxx::__concurrence_unlock_error
00000000009b8e58 0000000000000018 V typeinfo for __gnu_cxx::__concurrence_broadcast_error
00000000009b8e70 0000000000000018 V typeinfo for __gnu_cxx::__concurrence_wait_error
00000000009b8e88 0000000000000028 V vtable for __gnu_cxx::__concurrence_lock_error
00000000009b8eb0 0000000000000028 V vtable for __gnu_cxx::__concurrence_unlock_error
00000000009b8ed8 0000000000000028 V vtable for __gnu_cxx::__concurrence_broadcast_error
00000000009b8f00 0000000000000028 V vtable for __gnu_cxx::__concurrence_wait_error
00000000009b8f28 0000000000000018 V typeinfo for __cxxabiv1::__si_class_type_info
00000000009b8f40 0000000000000058 V vtable for __cxxabiv1::__si_class_type_info
00000000009b8f98 0000000000000010 V typeinfo for std::type_info
00000000009b8fa8 0000000000000010 V typeinfo for std::locale::facet
00000000009b8fb8 0000000000000038 d typeinfo for std::__facet_shims::(anonymous namespace)::numpunct_shim<char>
00000000009b8ff0 0000000000000038 d typeinfo for std::__facet_shims::(anonymous namespace)::collate_shim<char>
00000000009b9028 0000000000000038 d typeinfo for std::__facet_shims::(anonymous namespace)::moneypunct_shim<char, true>
00000000009b9060 0000000000000038 d typeinfo for std::__facet_shims::(anonymous namespace)::moneypunct_shim<char, false>
00000000009b9098 0000000000000038 d typeinfo for std::__facet_shims::(anonymous namespace)::money_get_shim<char>
00000000009b90d0 0000000000000038 d typeinfo for std::__facet_shims::(anonymous namespace)::money_put_shim<char>
00000000009b9108 0000000000000038 d typeinfo for std::__facet_shims::(anonymous namespace)::messages_shim<char>
00000000009b9140 0000000000000038 d typeinfo for std::__facet_shims::(anonymous namespace)::numpunct_shim<wchar_t>
00000000009b9178 0000000000000038 d typeinfo for std::__facet_shims::(anonymous namespace)::collate_shim<wchar_t>
00000000009b91b0 0000000000000038 d typeinfo for std::__facet_shims::(anonymous namespace)::moneypunct_shim<wchar_t, true>
00000000009b91e8 0000000000000038 d typeinfo for std::__facet_shims::(anonymous namespace)::moneypunct_shim<wchar_t, false>
00000000009b9220 0000000000000038 d typeinfo for std::__facet_shims::(anonymous namespace)::money_get_shim<wchar_t>
00000000009b9258 0000000000000038 d typeinfo for std::__facet_shims::(anonymous namespace)::money_put_shim<wchar_t>
00000000009b9290 0000000000000038 d typeinfo for std::__facet_shims::(anonymous namespace)::messages_shim<wchar_t>
00000000009b92c8 0000000000000010 V typeinfo for std::locale::facet::__shim
00000000009b92d8 0000000000000038 d typeinfo for std::__facet_shims::(anonymous namespace)::time_get_shim<char>
00000000009b9310 0000000000000038 d typeinfo for std::__facet_shims::(anonymous namespace)::time_get_shim<wchar_t>
00000000009b9348 0000000000000048 d vtable for std::__facet_shims::(anonymous namespace)::numpunct_shim<char>
00000000009b9390 0000000000000038 d vtable for std::__facet_shims::(anonymous namespace)::collate_shim<char>
00000000009b93c8 0000000000000068 d vtable for std::__facet_shims::(anonymous namespace)::moneypunct_shim<char, true>
00000000009b9430 0000000000000068 d vtable for std::__facet_shims::(anonymous namespace)::moneypunct_shim<char, false>
00000000009b9498 0000000000000048 d vtable for std::__facet_shims::(anonymous namespace)::numpunct_shim<wchar_t>
00000000009b94e0 0000000000000038 d vtable for std::__facet_shims::(anonymous namespace)::collate_shim<wchar_t>
00000000009b9518 0000000000000068 d vtable for std::__facet_shims::(anonymous namespace)::moneypunct_shim<wchar_t, true>
00000000009b9580 0000000000000068 d vtable for std::__facet_shims::(anonymous namespace)::moneypunct_shim<wchar_t, false>
00000000009b95e8 0000000000000010 V typeinfo for std::ctype_base
00000000009b95f8 0000000000000038 V typeinfo for std::ctype<char>
00000000009b9630 0000000000000018 V typeinfo for std::ctype<wchar_t>
00000000009b9648 0000000000000060 V vtable for std::ctype<char>
00000000009b96a8 0000000000000080 V vtable for std::ctype<wchar_t>
00000000009b9728 0000000000000038 d typeinfo for std::__facet_shims::(anonymous namespace)::numpunct_shim<char>
00000000009b9760 0000000000000038 d typeinfo for std::__facet_shims::(anonymous namespace)::collate_shim<char>
00000000009b9798 0000000000000038 d typeinfo for std::__facet_shims::(anonymous namespace)::moneypunct_shim<char, true>
00000000009b97d0 0000000000000038 d typeinfo for std::__facet_shims::(anonymous namespace)::moneypunct_shim<char, false>
00000000009b9808 0000000000000038 d typeinfo for std::__facet_shims::(anonymous namespace)::money_get_shim<char>
00000000009b9840 0000000000000038 d typeinfo for std::__facet_shims::(anonymous namespace)::money_put_shim<char>
00000000009b9878 0000000000000038 d typeinfo for std::__facet_shims::(anonymous namespace)::messages_shim<char>
00000000009b98b0 0000000000000038 d typeinfo for std::__facet_shims::(anonymous namespace)::numpunct_shim<wchar_t>
00000000009b98e8 0000000000000038 d typeinfo for std::__facet_shims::(anonymous namespace)::collate_shim<wchar_t>
00000000009b9920 0000000000000038 d typeinfo for std::__facet_shims::(anonymous namespace)::moneypunct_shim<wchar_t, true>
00000000009b9958 0000000000000038 d typeinfo for std::__facet_shims::(anonymous namespace)::moneypunct_shim<wchar_t, false>
00000000009b9990 0000000000000038 d typeinfo for std::__facet_shims::(anonymous namespace)::money_get_shim<wchar_t>
00000000009b99c8 0000000000000038 d typeinfo for std::__facet_shims::(anonymous namespace)::money_put_shim<wchar_t>
00000000009b9a00 0000000000000038 d typeinfo for std::__facet_shims::(anonymous namespace)::messages_shim<wchar_t>
00000000009b9a38 0000000000000038 d typeinfo for std::__facet_shims::(anonymous namespace)::time_get_shim<char>
00000000009b9a70 0000000000000038 d typeinfo for std::__facet_shims::(anonymous namespace)::time_get_shim<wchar_t>
00000000009b9aa8 0000000000000048 d vtable for std::__facet_shims::(anonymous namespace)::numpunct_shim<char>
00000000009b9af0 0000000000000038 d vtable for std::__facet_shims::(anonymous namespace)::collate_shim<char>
00000000009b9b28 0000000000000068 d vtable for std::__facet_shims::(anonymous namespace)::moneypunct_shim<char, true>
00000000009b9b90 0000000000000068 d vtable for std::__facet_shims::(anonymous namespace)::moneypunct_shim<char, false>
00000000009b9bf8 0000000000000048 d vtable for std::__facet_shims::(anonymous namespace)::numpunct_shim<wchar_t>
00000000009b9c40 0000000000000038 d vtable for std::__facet_shims::(anonymous namespace)::collate_shim<wchar_t>
00000000009b9c78 0000000000000068 d vtable for std::__facet_shims::(anonymous namespace)::moneypunct_shim<wchar_t, true>
00000000009b9ce0 0000000000000068 d vtable for std::__facet_shims::(anonymous namespace)::moneypunct_shim<wchar_t, false>
00000000009b9d48 0000000000000058 d vtable for std::__facet_shims::(anonymous namespace)::time_get_shim<char>
00000000009b9da0 0000000000000058 d vtable for std::__facet_shims::(anonymous namespace)::time_get_shim<wchar_t>
00000000009b9df8 0000000000000010 V typeinfo for std::time_base
00000000009b9e08 0000000000000010 V typeinfo for std::money_base
00000000009b9e18 0000000000000010 V typeinfo for std::messages_base
00000000009b9e28 0000000000000018 V typeinfo for std::__cxx11::collate<wchar_t>
00000000009b9e40 0000000000000018 V typeinfo for std::__cxx11::numpunct<wchar_t>
00000000009b9e58 0000000000000038 V typeinfo for std::__cxx11::moneypunct<wchar_t, true>
00000000009b9e90 0000000000000038 V typeinfo for std::__cxx11::moneypunct<wchar_t, false>
00000000009b9ec8 0000000000000038 V typeinfo for std::__cxx11::messages<wchar_t>
00000000009b9f00 0000000000000018 V typeinfo for std::__cxx11::money_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >
00000000009b9f18 0000000000000018 V typeinfo for std::__cxx11::money_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >
00000000009b9f30 0000000000000038 V typeinfo for std::__cxx11::time_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >
00000000009b9f68 0000000000000038 V vtable for std::__cxx11::collate<wchar_t>
00000000009b9fa0 0000000000000048 V vtable for std::__cxx11::numpunct<wchar_t>
00000000009b9fe8 0000000000000068 V vtable for std::__cxx11::moneypunct<wchar_t, true>
00000000009ba050 0000000000000068 V vtable for std::__cxx11::moneypunct<wchar_t, false>
00000000009ba0b8 0000000000000038 V vtable for std::__cxx11::messages<wchar_t>
00000000009ba0f0 0000000000000030 V vtable for std::__cxx11::money_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >
00000000009ba120 0000000000000030 V vtable for std::__cxx11::money_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >
00000000009ba150 0000000000000058 V vtable for std::__cxx11::time_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >
00000000009ba1a8 0000000000000018 V typeinfo for __gnu_cxx::stdio_sync_filebuf<char, std::char_traits<char> >
00000000009ba1c0 0000000000000018 V typeinfo for __gnu_cxx::stdio_sync_filebuf<wchar_t, std::char_traits<wchar_t> >
00000000009ba1d8 0000000000000080 V vtable for __gnu_cxx::stdio_sync_filebuf<char, std::char_traits<char> >
00000000009ba258 0000000000000080 V vtable for __gnu_cxx::stdio_sync_filebuf<wchar_t, std::char_traits<wchar_t> >
00000000009ba2d8 0000000000000018 V typeinfo for std::basic_ios<char, std::char_traits<char> >
00000000009ba2f0 0000000000000018 V typeinfo for std::basic_ios<wchar_t, std::char_traits<wchar_t> >
00000000009ba308 0000000000000020 V vtable for std::basic_ios<char, std::char_traits<char> >
00000000009ba328 0000000000000020 V vtable for std::basic_ios<wchar_t, std::char_traits<wchar_t> >
00000000009ba348 0000000000000010 V typeinfo for std::ios_base
00000000009ba358 0000000000000020 V vtable for std::ios_base
00000000009ba378 0000000000000028 V typeinfo for std::istream
00000000009ba3a0 0000000000000028 V typeinfo for std::basic_istream<wchar_t, std::char_traits<wchar_t> >
00000000009ba3c8 0000000000000010 V VTT for std::istream
00000000009ba3d8 0000000000000050 V vtable for std::istream
00000000009ba428 0000000000000010 V VTT for std::basic_istream<wchar_t, std::char_traits<wchar_t> >
00000000009ba438 0000000000000050 V vtable for std::basic_istream<wchar_t, std::char_traits<wchar_t> >
00000000009ba488 0000000000000010 V typeinfo for std::codecvt_base
00000000009ba498 0000000000000018 V typeinfo for std::collate<char>
00000000009ba4b0 0000000000000018 V typeinfo for std::numpunct<char>
00000000009ba4c8 0000000000000018 V typeinfo for std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >
00000000009ba4e0 0000000000000018 V typeinfo for std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >
00000000009ba4f8 0000000000000018 V typeinfo for std::__timepunct_cache<char>
00000000009ba510 0000000000000018 V typeinfo for std::__timepunct<char>
00000000009ba528 0000000000000038 V typeinfo for std::moneypunct<char, true>
00000000009ba560 0000000000000038 V typeinfo for std::moneypunct<char, false>
00000000009ba598 0000000000000038 V typeinfo for std::messages<char>
00000000009ba5d0 0000000000000038 V typeinfo for std::__codecvt_abstract_base<char, char, _mbstate_t>
00000000009ba608 0000000000000018 V typeinfo for std::money_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >
00000000009ba620 0000000000000018 V typeinfo for std::money_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >
00000000009ba638 0000000000000018 V typeinfo for std::time_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >
00000000009ba650 0000000000000038 V typeinfo for std::time_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >
00000000009ba688 0000000000000018 V typeinfo for std::__moneypunct_cache<char, false>
00000000009ba6a0 0000000000000018 V typeinfo for std::__moneypunct_cache<char, true>
00000000009ba6b8 0000000000000018 V typeinfo for std::__numpunct_cache<char>
00000000009ba6d0 0000000000000038 V vtable for std::collate<char>
00000000009ba708 0000000000000048 V vtable for std::numpunct<char>
00000000009ba750 0000000000000078 V vtable for std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >
00000000009ba7c8 0000000000000060 V vtable for std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >
00000000009ba828 0000000000000020 V vtable for std::__timepunct_cache<char>
00000000009ba848 0000000000000020 V vtable for std::__timepunct<char>
00000000009ba868 0000000000000068 V vtable for std::moneypunct<char, true>
00000000009ba8d0 0000000000000068 V vtable for std::moneypunct<char, false>
00000000009ba938 0000000000000038 V vtable for std::messages<char>
00000000009ba970 0000000000000058 V vtable for std::__codecvt_abstract_base<char, char, _mbstate_t>
00000000009ba9c8 0000000000000030 V vtable for std::money_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >
00000000009ba9f8 0000000000000030 V vtable for std::money_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >
00000000009baa28 0000000000000028 V vtable for std::time_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >
00000000009baa50 0000000000000050 V vtable for std::time_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >
00000000009baaa0 0000000000000020 V vtable for std::__moneypunct_cache<char, false>
00000000009baac0 0000000000000020 V vtable for std::__moneypunct_cache<char, true>
00000000009baae0 0000000000000020 V vtable for std::__numpunct_cache<char>
00000000009bab00 0000000000000110 D std::locale::_S_twinned_facets
00000000009bac10 0000000000000028 V typeinfo for std::ostream
00000000009bac38 0000000000000028 V typeinfo for std::basic_ostream<wchar_t, std::char_traits<wchar_t> >
00000000009bac60 0000000000000010 V VTT for std::ostream
00000000009bac70 0000000000000050 V vtable for std::ostream
00000000009bacc0 0000000000000010 V VTT for std::basic_ostream<wchar_t, std::char_traits<wchar_t> >
00000000009bacd0 0000000000000050 V vtable for std::basic_ostream<wchar_t, std::char_traits<wchar_t> >
00000000009bad20 0000000000000010 V typeinfo for std::basic_streambuf<char, std::char_traits<char> >
00000000009bad30 0000000000000010 V typeinfo for std::basic_streambuf<wchar_t, std::char_traits<wchar_t> >
00000000009bad40 0000000000000080 V vtable for std::basic_streambuf<char, std::char_traits<char> >
00000000009badc0 0000000000000080 V vtable for std::basic_streambuf<wchar_t, std::char_traits<wchar_t> >
00000000009bae40 0000000000000010 V typeinfo for std::_V2::error_category
00000000009bae50 0000000000000018 V typeinfo for std::system_error
00000000009bae68 0000000000000028 V vtable for std::system_error
00000000009bae90 0000000000000018 V typeinfo for std::collate<wchar_t>
00000000009baea8 0000000000000038 V typeinfo for std::__ctype_abstract_base<wchar_t>
00000000009baee0 0000000000000018 V typeinfo for std::numpunct<wchar_t>
00000000009baef8 0000000000000018 V typeinfo for std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >
00000000009baf10 0000000000000018 V typeinfo for std::num_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >
00000000009baf28 0000000000000018 V typeinfo for std::__timepunct_cache<wchar_t>
00000000009baf40 0000000000000018 V typeinfo for std::__timepunct<wchar_t>
00000000009baf58 0000000000000038 V typeinfo for std::moneypunct<wchar_t, true>
00000000009baf90 0000000000000038 V typeinfo for std::moneypunct<wchar_t, false>
00000000009bafc8 0000000000000038 V typeinfo for std::messages<wchar_t>
00000000009bb000 0000000000000038 V typeinfo for std::__codecvt_abstract_base<wchar_t, char, _mbstate_t>
00000000009bb038 0000000000000018 V typeinfo for std::money_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >
00000000009bb050 0000000000000018 V typeinfo for std::money_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >
00000000009bb068 0000000000000018 V typeinfo for std::time_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >
00000000009bb080 0000000000000038 V typeinfo for std::time_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >
00000000009bb0b8 0000000000000018 V typeinfo for std::__moneypunct_cache<wchar_t, false>
00000000009bb0d0 0000000000000018 V typeinfo for std::__moneypunct_cache<wchar_t, true>
00000000009bb0e8 0000000000000018 V typeinfo for std::__numpunct_cache<wchar_t>
00000000009bb100 0000000000000038 V vtable for std::collate<wchar_t>
00000000009bb138 0000000000000080 V vtable for std::__ctype_abstract_base<wchar_t>
00000000009bb1b8 0000000000000048 V vtable for std::numpunct<wchar_t>
00000000009bb200 0000000000000078 V vtable for std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >
00000000009bb278 0000000000000060 V vtable for std::num_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >
00000000009bb2d8 0000000000000020 V vtable for std::__timepunct_cache<wchar_t>
00000000009bb2f8 0000000000000020 V vtable for std::__timepunct<wchar_t>
00000000009bb318 0000000000000068 V vtable for std::moneypunct<wchar_t, true>
00000000009bb380 0000000000000068 V vtable for std::moneypunct<wchar_t, false>
00000000009bb3e8 0000000000000038 V vtable for std::messages<wchar_t>
00000000009bb420 0000000000000058 V vtable for std::__codecvt_abstract_base<wchar_t, char, _mbstate_t>
00000000009bb478 0000000000000030 V vtable for std::money_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >
00000000009bb4a8 0000000000000030 V vtable for std::money_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >
00000000009bb4d8 0000000000000028 V vtable for std::time_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >
00000000009bb500 0000000000000050 V vtable for std::time_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >
00000000009bb550 0000000000000020 V vtable for std::__moneypunct_cache<wchar_t, false>
00000000009bb570 0000000000000020 V vtable for std::__moneypunct_cache<wchar_t, true>
00000000009bb590 0000000000000020 V vtable for std::__numpunct_cache<wchar_t>
00000000009bb5b0 0000000000000018 V typeinfo for std::bad_alloc
00000000009bb5c8 0000000000000028 V vtable for std::bad_alloc
00000000009bb5f0 0000000000000018 V typeinfo for std::bad_array_new_length
00000000009bb608 0000000000000028 V vtable for std::bad_array_new_length
00000000009bb630 0000000000000018 V typeinfo for std::bad_cast
00000000009bb648 0000000000000028 V vtable for std::bad_cast
00000000009bb670 0000000000000018 V typeinfo for __cxxabiv1::__class_type_info
00000000009bb688 0000000000000058 V vtable for __cxxabiv1::__class_type_info
00000000009bb6e0 0000000000000010 V typeinfo for std::exception
00000000009bb6f0 0000000000000018 V typeinfo for std::bad_exception
00000000009bb708 0000000000000010 V typeinfo for __cxxabiv1::__forced_unwind
00000000009bb718 0000000000000010 V typeinfo for __cxxabiv1::__foreign_exception
00000000009bb728 0000000000000028 V vtable for std::bad_exception
00000000009bb750 0000000000000018 V typeinfo for __cxxabiv1::__vmi_class_type_info
00000000009bb768 0000000000000058 V vtable for __cxxabiv1::__vmi_class_type_info
00000000009bb7c0 0000000000000018 V typeinfo for std::codecvt<char, char, _mbstate_t>
00000000009bb7d8 0000000000000018 V typeinfo for std::codecvt<wchar_t, char, _mbstate_t>
00000000009bb7f0 0000000000000058 V vtable for std::codecvt<char, char, _mbstate_t>
00000000009bb848 0000000000000058 V vtable for std::codecvt<wchar_t, char, _mbstate_t>
00000000009bb8a0 0000000000000018 V typeinfo for std::logic_error
00000000009bb8b8 0000000000000018 V typeinfo for std::length_error
00000000009bb8d0 0000000000000018 V typeinfo for std::out_of_range
00000000009bb8e8 0000000000000018 V typeinfo for std::runtime_error
00000000009bb900 0000000000000028 V vtable for std::logic_error
00000000009bb928 0000000000000028 V vtable for std::length_error
00000000009bb950 0000000000000028 V vtable for std::out_of_range
00000000009bb978 0000000000000028 V vtable for std::runtime_error
00000000009bb9a0 0000000000000038 V typeinfo for std::__codecvt_abstract_base<char16_t, char, _mbstate_t>
00000000009bb9d8 0000000000000018 V typeinfo for std::codecvt<char16_t, char, _mbstate_t>
00000000009bb9f0 0000000000000038 V typeinfo for std::__codecvt_abstract_base<char32_t, char, _mbstate_t>
00000000009bba28 0000000000000018 V typeinfo for std::codecvt<char32_t, char, _mbstate_t>
00000000009bba40 0000000000000038 V typeinfo for std::__codecvt_abstract_base<char16_t, char8_t, _mbstate_t>
00000000009bba78 0000000000000018 V typeinfo for std::codecvt<char16_t, char8_t, _mbstate_t>
00000000009bba90 0000000000000038 V typeinfo for std::__codecvt_abstract_base<char32_t, char8_t, _mbstate_t>
00000000009bbac8 0000000000000018 V typeinfo for std::codecvt<char32_t, char8_t, _mbstate_t>
00000000009bbae0 0000000000000058 V vtable for std::__codecvt_abstract_base<char16_t, char, _mbstate_t>
00000000009bbb38 0000000000000058 V vtable for std::__codecvt_abstract_base<char32_t, char, _mbstate_t>
00000000009bbb90 0000000000000058 V vtable for std::__codecvt_abstract_base<char16_t, char8_t, _mbstate_t>
00000000009bbbe8 0000000000000058 V vtable for std::__codecvt_abstract_base<char32_t, char8_t, _mbstate_t>
00000000009bbc40 0000000000000058 V vtable for std::codecvt<char16_t, char, _mbstate_t>
00000000009bbc98 0000000000000058 V vtable for std::codecvt<char32_t, char, _mbstate_t>
00000000009bbcf0 0000000000000058 V vtable for std::codecvt<char16_t, char8_t, _mbstate_t>
00000000009bbd48 0000000000000058 V vtable for std::codecvt<char32_t, char8_t, _mbstate_t>
00000000009bbda0 0000000000000018 V typeinfo for std::ios_base::failure[abi:cxx11]
00000000009bbdb8 0000000000000018 V typeinfo for std::__ios_failure
00000000009bbdd0 0000000000000028 V typeinfo for std::__iosfail_type_info
00000000009bbdf8 0000000000000028 V vtable for std::ios_base::failure[abi:cxx11]
00000000009bbe20 0000000000000028 V vtable for std::__ios_failure
00000000009bbe48 0000000000000058 V vtable for std::__iosfail_type_info
00000000009bbea0 0000000000000018 V typeinfo for std::__cxx11::collate<char>
00000000009bbeb8 0000000000000018 V typeinfo for std::__cxx11::numpunct<char>
00000000009bbed0 0000000000000038 V typeinfo for std::__cxx11::moneypunct<char, true>
00000000009bbf08 0000000000000038 V typeinfo for std::__cxx11::moneypunct<char, false>
00000000009bbf40 0000000000000038 V typeinfo for std::__cxx11::messages<char>
00000000009bbf78 0000000000000018 V typeinfo for std::__cxx11::money_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >
00000000009bbf90 0000000000000018 V typeinfo for std::__cxx11::money_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >
00000000009bbfa8 0000000000000038 V typeinfo for std::__cxx11::time_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >
00000000009bbfe0 0000000000000038 V vtable for std::__cxx11::collate<char>
00000000009bc018 0000000000000048 V vtable for std::__cxx11::numpunct<char>
00000000009bc060 0000000000000068 V vtable for std::__cxx11::moneypunct<char, true>
00000000009bc0c8 0000000000000068 V vtable for std::__cxx11::moneypunct<char, false>
00000000009bc130 0000000000000038 V vtable for std::__cxx11::messages<char>
00000000009bc168 0000000000000030 V vtable for std::__cxx11::money_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >
00000000009bc198 0000000000000030 V vtable for std::__cxx11::money_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >
00000000009bc1c8 0000000000000058 V vtable for std::__cxx11::time_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >
00000000009bc220 0000000000000018 d typeinfo for (anonymous namespace)::io_error_category
00000000009bc238 0000000000000050 d vtable for (anonymous namespace)::io_error_category
00000000009bc288 0000000000000018 V typeinfo for std::ios_base::failure
00000000009bc2a0 0000000000000028 V vtable for std::ios_base::failure
00000000009bc2d0 0000000000000200 d synth_base
00000000009bc4d0 00000000000001a8 D __C_locale
00000000009bc678 a _DYNAMIC
00000000009bc7c8 d __got_start__
00000000009bc7c8 a _GLOBAL_OFFSET_TABLE_
00000000009c2048 d __got_end__
00000000009c3000 d __data_start
00000000009c3020 0000000000000028 D weaponPoints
00000000009c3088 0000000000000001 D inStartScreen
00000000009c3089 0000000000000001 D showSplash
00000000009c308a 0000000000000001 D pistol
00000000009c308c 0000000000000004 d g_hb_script
00000000009c3090 0000000000000004 d g_hb_direction
00000000009c3098 00000000000000a0 D nsvg__colors
00000000009c3138 0000000000000008 d mix_music
00000000009c3140 0000000000000004 d music_active
00000000009c3144 0000000000000004 d music_volume
00000000009c3148 0000000000000090 D Mix_MusicInterface_MODPLUG
00000000009c31d8 0000000000000090 D Mix_MusicInterface_MPG123
00000000009c3268 0000000000000090 D Mix_MusicInterface_OGG
00000000009c32f8 0000000000000090 D Mix_MusicInterface_Opus
00000000009c3388 0000000000000090 D Mix_MusicInterface_TIMIDITY
00000000009c3418 0000000000000090 D Mix_MusicInterface_WAV
00000000009c34a8 0000000000000004 d SDL_MainIsReady
00000000009c3500 0000000000000008 d assertion_handler
00000000009c3508 0000000000000008 d SDL_log_function
00000000009c3510 0000000000000004 d SDL_test_priority
00000000009c3514 0000000000000004 d SDL_application_priority
00000000009c3518 0000000000000004 d SDL_assert_priority
00000000009c351c 0000000000000004 d SDL_default_priority
00000000009c3520 000000000000006c d extensible_guids
00000000009c358c 0000000000000004 d SDL_SIMDAlignment
00000000009c3590 0000000000000004 d SDL_CPUFeatures
00000000009c3594 0000000000000004 d SDL_update_sensors
00000000009c3598 0000000000000004 d SDL_update_joysticks
00000000009c35a0 0000000000000060 D GLES2_RenderDriver
00000000009c3600 0000000000000030 d sdl_assert_data.1
00000000009c3630 0000000000000060 D SW_RenderDriver
00000000009c3690 0000000000000028 d s_mem
00000000009c36b8 0000000000000048 D SDL_expand_byte
00000000009c3700 0000000000000001 d lookup_8
00000000009c3708 0000000000000002 d lookup_7
00000000009c3710 0000000000000004 d lookup_6
00000000009c3718 0000000000000008 d lookup_5
00000000009c3720 0000000000000010 d lookup_4
00000000009c3730 0000000000000020 d lookup_3
00000000009c3750 0000000000000040 d lookup_2
00000000009c3790 0000000000000080 d lookup_1
00000000009c3810 0000000000000100 d lookup_0
00000000009c3910 0000000000000004 d val.0
00000000009c3914 0000000000000004 d SDL_YUV_ConversionMode
00000000009c3918 0000000000000004 d thread_local_storage
00000000009c3920 0000000000000018 D SWITCH_bootstrap
00000000009c3938 0000000000000020 D SWITCHAUDIO_bootstrap
00000000009c3958 00000000000000a0 D SDL_SWITCH_JoystickDriver
00000000009c39f8 00000000000000a0 D SDL_VIRTUAL_JoystickDriver
00000000009c3a98 0000000000000058 D SDL_DUMMY_SensorDriver
00000000009c3af0 0000000000000004 d features.0
00000000009c3af8 0000000000000be8 D SDL_GeneratedBlitFuncTable
00000000009c46e0 0000000000000004 d simd_features
00000000009c46e4 0000000000000004 d simd_huffman
00000000009c46e8 0000000000000004 d simd_support
00000000009c46f0 0000000000000018 D _eglSoftwareDevice
00000000009c4708 0000000000000088 D _eglGlobal
00000000009c4790 0000000000000018 d logging
00000000009c47a8 0000000000000024 D mme9097_blend_enables
00000000009c47d0 0000000000000060 D mme9097_compute_counter
00000000009c4830 000000000000004c D mme9097_compute_counter_to_query
00000000009c4880 0000000000000044 D mme9097_conservative_raster_state
00000000009c48c8 0000000000000078 D mme9097_draw_arrays_indirect
00000000009c4940 00000000000000b8 D mme9097_draw_arrays_indirect_count
00000000009c49f8 00000000000000a8 D mme9097_draw_elts_indirect
00000000009c4aa0 00000000000000f4 D mme9097_draw_elts_indirect_count
00000000009c4b98 0000000000000044 D mme9097_gp_select
00000000009c4be0 000000000000001c D mme9097_per_instance_bf
00000000009c4c00 0000000000000044 D mme9097_poly_mode_back
00000000009c4c48 0000000000000044 D mme9097_poly_mode_front
00000000009c4c90 0000000000000088 D mme9097_query_buffer_write
00000000009c4d18 0000000000000044 D mme9097_tep_select
00000000009c4d60 0000000000000030 D mme9097_vertex_array_select
00000000009c4d90 0000000000000040 D mme90c0_launch_grid_indirect
00000000009c4dd0 0000000000000080 d validate_list_cp
00000000009c4e50 0000000000000001 d first.8
00000000009c4e54 0000000000000004 d NextDynamicID
00000000009c4e58 000000000000001f d out_of_memory
00000000009c4e78 0000000000000004 d debug.0
00000000009c4e7c 0000000000000004 d debug.3
00000000009c4e80 0000000000000010 d color.2
00000000009c4e90 0000000000000004 d index.3
00000000009c4e98 000000000000000c d normal.1
00000000009c4ea8 0000000000000010 d texcoord.0
00000000009c4eb8 0000000000000010 d vertex.4
00000000009c4ec8 0000000000000020 d override.0
00000000009c4ee8 0000000000000001 d first.1
00000000009c4ee9 0000000000000001 d first.1
00000000009c4f78 0000000000000004 d ir_print_visitor::unique_name(ir_variable*)::i
00000000009c4f7c 0000000000000004 d ir_print_visitor::unique_name(ir_variable*)::arg
00000000009c4f80 0000000000000020 D tgsi_swizzle_names
00000000009c4fa0 0000000000000001 d firsttime.0
00000000009c4fa8 0000000000000010 D tgsi_fs_coord_origin_names
00000000009c4fb8 0000000000000010 D tgsi_fs_coord_pixel_center_names
00000000009c4fc8 0000000000000030 D tgsi_immediate_type_names
00000000009c4ff8 0000000000000018 D tgsi_interpolate_locations
00000000009c5010 0000000000000020 D tgsi_interpolate_names
00000000009c5030 0000000000000008 D tgsi_invariant_name
00000000009c5038 0000000000000020 D tgsi_memory_names
00000000009c5058 0000000000000078 D tgsi_primitive_names
00000000009c50d0 0000000000000030 D tgsi_processor_type_names
00000000009c5100 00000000000000d8 D tgsi_property_names
00000000009c51d8 0000000000000030 D tgsi_return_type_names
00000000009c5208 0000000000000188 D tgsi_semantic_names
00000000009c5390 0000000000000098 D tgsi_texture_names
00000000009c5428 0000000000000080 d validate_list_cp
00000000009c54a8 0000000000000038 d sm20_hw_metric_queries
00000000009c54e0 0000000000000048 d sm21_hw_metric_queries
00000000009c5528 0000000000000058 d sm30_hw_metric_queries
00000000009c5580 0000000000000058 d sm35_hw_metric_queries
00000000009c55d8 0000000000000058 d sm50_hw_metric_queries
00000000009c5630 00000000000000d0 d sm20_hw_sm_queries
00000000009c5700 00000000000000f8 d sm21_hw_sm_queries
00000000009c57f8 0000000000000168 d sm30_hw_sm_queries
00000000009c5960 0000000000000168 d sm35_hw_sm_queries
00000000009c5ac8 0000000000000120 d sm50_hw_sm_queries
00000000009c5be8 0000000000000120 d sm52_hw_sm_queries
00000000009c5d08 0000000000000220 d validate_list_3d
00000000009c5f28 0000000000000008 D util_format_dxt1_rgb_fetch
00000000009c5f30 0000000000000008 D util_format_dxt1_rgba_fetch
00000000009c5f38 0000000000000008 D util_format_dxt3_rgba_fetch
00000000009c5f40 0000000000000008 D util_format_dxt5_rgba_fetch
00000000009c5f48 0000000000000008 D util_format_dxtn_pack
00000000009c5f50 0000000000000030 d markers.0
00000000009c5f80 0000000000000720 d builtin_type_versions
00000000009c66a0 00000000000003f0 D nv50_ir::operationStr
00000000009c6a90 0000000000000700 D nv50_ir::gm107_builtin_code
00000000009c7190 0000000000000020 D nv50_ir::gm107_builtin_offsets
00000000009c71b0 0000000000000190 D nv50_ir::gf100_builtin_code
00000000009c7340 0000000000001590 D nv50_ir::gk104_builtin_code
00000000009c88d0 00000000000005a8 D nv50_ir::gk110_builtin_code
00000000009c8e78 0000000000000020 D nv50_ir::gf100_builtin_offsets
00000000009c8e98 0000000000000020 D nv50_ir::gk104_builtin_offsets
00000000009c8eb8 0000000000000020 D nv50_ir::gk110_builtin_offsets
00000000009c8ed8 0000000000000001 d first.1
00000000009c8edc 0000000000000004 d next_dynamic_slot
00000000009c8ee0 0000000000000004 d debug.0
00000000009c8ee8 0000000000000008 V DW.ref.__gxx_personality_v0
00000000009c8ef0 0000000000000008 V DW.ref._ZTIN10__cxxabiv115__forced_unwindE
00000000009c8ef8 0000000000000001 D std::ios_base::Init::_S_synced_with_stdio
00000000009c8f00 0000000000000008 D __cxxabiv1::__unexpected_handler
00000000009c8f08 0000000000000008 D std::__num_base::_S_atoms_out
00000000009c8f10 0000000000000008 D std::__num_base::_S_atoms_in
00000000009c8f18 0000000000000008 D std::money_base::_S_atoms
00000000009c8f20 0000000000000070 D std::__timepunct_cache<wchar_t>::_S_timezones
00000000009c8f90 0000000000000070 D std::__timepunct_cache<char>::_S_timezones
00000000009c9000 0000000000000008 d (anonymous namespace)::io_category_instance
00000000009c9008 0000000000000008 D __cxxabiv1::__terminate_handler
00000000009c9010 0000000000000010 D _floor_P
00000000009c9020 0000000000000008 D _mapping_P
00000000009c9028 0000000000000018 D _residue_P
00000000009c9040 0000000000000030 D floor1_exportbundle
00000000009c9070 0000000000000030 D floor0_exportbundle
00000000009c90a0 0000000000000028 D residue0_exportbundle
00000000009c90c8 0000000000000028 D residue1_exportbundle
00000000009c90f0 0000000000000028 D residue2_exportbundle
00000000009c9118 0000000000000028 D mapping0_exportbundle
00000000009c9390 0000000000000060 d bad_reader
00000000009c93f0 00000000000001e0 d readers
00000000009c95d0 0000000000000028 D INT123_pnts
00000000009c96d0 000000000000002c d pretab_choice
00000000009c9700 0000000000000038 D ModPlug::gSettings
00000000009c9738 0000000000000004 D CSoundFile::gnChannels
00000000009c973c 0000000000000004 D CSoundFile::gdwMixingFreq
00000000009c9740 0000000000000004 D CSoundFile::gnBitsPerSample
00000000009c9744 0000000000000004 D CSoundFile::m_nMaxMixChannels
00000000009c9748 0000000000000004 D CSoundFile::gnVolumeRampSamples
00000000009c974c 0000000000000004 D CSoundFile::m_nStereoSeparation
00000000009c9750 0000000000000004 D CSoundFile::gnAGC
00000000009c9754 0000000000000004 D CSoundFile::m_nXBassDepth
00000000009c9758 0000000000000004 D CSoundFile::m_nXBassRange
00000000009c975c 0000000000000004 D CSoundFile::m_nReverbDelay
00000000009c9760 0000000000000004 D CSoundFile::m_nReverbDepth
00000000009c9764 0000000000000004 D CSoundFile::m_nProLogicDelay
00000000009c9768 0000000000000004 D CSoundFile::m_nProLogicDepth
00000000009c9770 0000000000000008 D autovibit2xm
00000000009c9778 0000000000000008 V __nx_applet_init_timeout
00000000009c9780 0000000000000001 V __nx_applet_auto_notifyrunning
00000000009c9784 0000000000000004 V __nx_applet_type
00000000009c9788 0000000000000004 V __nx_nv_transfermem_size
00000000009c978c 0000000000000004 V __nx_nv_service_type
00000000009c9790 0000000000000004 d g_ctrl_fd
00000000009c9794 0000000000000004 d g_ctrlgpu_fd
00000000009c9798 0000000000000004 d g_nvmap_fd
00000000009c979c 0000000000000004 V __nx_fs_num_sessions
00000000009c97a0 0000000000000004 d g_viServiceType
00000000009c97a4 0000000000000004 V __nx_vi_stray_layer_flags
00000000009c97a8 0000000000000008 V __nx_exception_stack_size
00000000009c97b0 0000000000000001 V __nx_fsdev_support_cwd
00000000009c97b4 0000000000000004 V __nx_fsdev_direntry_cache_size
00000000009c97b8 0000000000000008 d WebPInitAlphaProcessing_body_last_cpuinfo_used.0
00000000009c97c0 0000000000000008 D VP8GetCPUInfo
00000000009c97c8 0000000000000008 d VP8DspInit_body_last_cpuinfo_used.0
00000000009c97d0 0000000000000008 d VP8FiltersInit_body_last_cpuinfo_used.0
00000000009c97d8 0000000000000008 d VP8LDspInit_body_last_cpuinfo_used.0
00000000009c97e0 0000000000000008 d WebPRescalerDspInit_body_last_cpuinfo_used.0
00000000009c97e8 0000000000000008 d WebPInitUpsamplers_body_last_cpuinfo_used.0
00000000009c97f0 0000000000000008 d WebPInitYUV444Converters_body_last_cpuinfo_used.2
00000000009c97f8 0000000000000008 d WebPInitConvertARGBToYUV_body_last_cpuinfo_used.0
00000000009c9800 0000000000000008 d WebPInitSamplers_body_last_cpuinfo_used.2
00000000009c9808 0000000000000030 d g_worker_interface
00000000009c9838 0000000000000400 D BZ2_crc32Table
00000000009c9c38 0000000000000800 D BZ2_rNums
00000000009ca438 00000000000000f0 D _hb_Null_hb_buffer_t
00000000009ca528 00000000000000c0 D _hb_Null_hb_font_t
00000000009ca5e8 00000000000000b8 d _hb_font_funcs_default
00000000009ca6a0 00000000000000b8 D _hb_Null_hb_font_funcs_t
00000000009ca758 0000000000000048 d _hb_draw_funcs_default
00000000009ca7a0 00000000000000d8 D _hb_Null_hb_unicode_funcs_t
00000000009ca8a8 0000000000000048 D _hb_Null_hb_draw_funcs_t
00000000009ca8f0 00000000000001b8 D _hb_Null_hb_face_t
00000000009caad8 0000000000000090 D _hb_Null_hb_paint_funcs_t
00000000009cab68 0000000000000008 D _impure_ptr
00000000009cab70 0000000000000160 D _impure_data
00000000009cacd0 00000000000000e7 d global_locale_string
00000000009cadb8 00000000000001a8 D __global_locale
00000000009caf60 0000000000000020 D __default_locale
00000000009caf80 0000000000000058 d tzinfo
00000000009cafd8 0000000000000018 D __sglue
00000000009caff0 0000000000000008 D __malloc_sbrk_base
00000000009caff8 0000000000000008 D __malloc_trim_threshold
00000000009cb000 0000000000000810 D __malloc_av_
00000000009cb810 0000000000000010 D _tzname
00000000009cb820 0000000000000008 D environ
00000000009cb828 00000000000007b0 d caseconv_table
00000000009cbfe0 0000000000000400 d _current_working_directory
00000000009cc3e0 0000000000002000 d handles
00000000009ce3e0 0000000000000010 d __stderr_handle
00000000009ce3f0 0000000000000010 d __stdout_handle
00000000009ce400 0000000000000010 d __stdin_handle
00000000009ce410 0000000000000118 D devoptab_list
00000000009ce528 0000000000000004 d defaultDevice
00000000009ce530 d __tdata_lma
00000000009ce538 d __tdata_lma_end
00000000009ce540 b __bss_start__
00000000009ce540 b completed.1
00000000009ce548 b object.0
00000000009ce580 0000000000000048 B player
00000000009ce5c8 0000000000000001 B quit
00000000009ce5d0 0000000000000030 B brown_seal
00000000009ce600 0000000000000030 B sealCubTextures
00000000009ce630 0000000000000048 B sealCubDeathTextures
00000000009ce680 0000000000000018 B seal_cubs
00000000009ce698 0000000000000008 B bloodTexture
00000000009ce6a0 0000000000000004 B sealCubFrameCounter
00000000009ce6a4 0000000000000004 B sealCubFrame
00000000009ce6b0 0000000000000010 B muzzleFlashTextures
00000000009ce6c0 0000000000000001 B showMuzzleFlash
00000000009ce6c4 0000000000000004 B muzzleFlashTimer
00000000009ce6d0 0000000000000020 B shellTextures
00000000009ce6f0 0000000000000008 B backdropTexture
00000000009ce6f8 0000000000000008 B iceTexture
00000000009ce700 0000000000000008 B hudTexture
00000000009ce710 0000000000000050 B weaponTextures
00000000009ce760 0000000000000008 B font
00000000009ce768 0000000000000004 B score
00000000009ce770 0000000000000008 B dosFont
00000000009ce778 0000000000000004 B enemiesKilled
00000000009ce77c 0000000000000001 B isReloading
00000000009ce780 0000000000000004 B reloadStartTime
00000000009ce788 0000000000000008 B pistolReloadSound
00000000009ce790 0000000000000004 B bulletCount
00000000009ce798 0000000000000018 B bullets
00000000009ce7b0 0000000000000008 B pistolShootSound
00000000009ce7c0 0000000000000018 B shells
00000000009ce7d8 0000000000000018 B floatingTexts
00000000009ce7f0 0000000000000018 B bloodSplatters
00000000009ce808 0000000000000008 B startMenuBackgroundTexture
00000000009ce810 0000000000000004 B selectedOption
00000000009ce818 0000000000000008 B dosTitleFont
00000000009ce820 0000000000000004 B selectedPauseOption
00000000009ce824 0000000000000001 B confirmingQuit
00000000009ce828 0000000000000004 B quitConfirmOption
00000000009ce82c 0000000000000001 B isPaused
00000000009ce82d 0000000000000001 B musicEnabled
00000000009ce830 0000000000000004 B selectedOptionsMenuOption
00000000009ce838 0000000000000008 B backgroundMusic
00000000009ce840 0000000000000018 B splashScreens
00000000009ce858 0000000000000004 B currentSplashStartTime
00000000009ce860 0000000000000008 B currentSplashIndex
00000000009ce868 0000000000000008 B splashTexture
00000000009ce870 0000000000000004 B splashStartTime
00000000009ce874 0000000000000004 b TTF_byteswapped
00000000009ce878 0000000000000004 b TTF_initialized
00000000009ce880 0000000000000008 b library
00000000009ce888 0000000000000004 b initialized
00000000009ce890 0000000000000010 b Gif89
00000000009ce8a0 000000000000031c b GifScreen
00000000009cebbc 0000000000000004 b ZeroDataBlock
00000000009cebc0 0000000000000100 b buf.9898
00000000009cecc0 0000000000000118 b buf.9926
00000000009cedd8 0000000000000004 b clear_code.9952
00000000009ceddc 0000000000000004 b code_size.9946
00000000009cede0 0000000000000004 b curbit.9927
00000000009cede4 0000000000000004 b done.9929
00000000009cede8 0000000000000004 b end_code.9953
00000000009cedec 0000000000000004 b firstcode.9950
00000000009cedf0 0000000000000004 b fresh.9943
00000000009cedf4 0000000000000004 b last_byte.9930
00000000009cedf8 0000000000000004 b lastbit.9928
00000000009cedfc 0000000000000004 b max_code.9948
00000000009cee00 0000000000000004 b max_code_size.9949
00000000009cee04 0000000000000004 b oldcode.9951
00000000009cee08 0000000000000004 b set_code_size.9947
00000000009cee10 0000000000000008 b sp.9956
00000000009cee18 0000000000008000 b stack.9955
00000000009d6e18 0000000000008000 b table.9954
00000000009dee18 0000000000000090 b lib
00000000009deea8 00000000000000f0 b lib
00000000009def98 0000000000000004 b buflen
00000000009defa0 0000000000000008 b error
00000000009defa8 0000000000000008 b linebuf
00000000009defb0 0000000000000028 b lib
00000000009defd8 0000000000000004 b audio_device
00000000009defdc 0000000000000004 b audio_opened
00000000009defe0 0000000000000008 b channel_done_callback
00000000009defe8 0000000000000008 b chunk_decoders
00000000009deff0 0000000000000008 b mix_channel
00000000009deff8 0000000000000008 b mix_postmix
00000000009df000 0000000000000008 b mix_postmix_data
00000000009df008 0000000000000020 b mixer
00000000009df028 0000000000000008 b music_data
00000000009df030 0000000000000004 b num_channels
00000000009df034 0000000000000004 b num_decoders
00000000009df038 0000000000000008 b posteffects
00000000009df040 0000000000000004 b reserved_channels
00000000009df044 0000000000000004 b ms_per_step
00000000009df048 0000000000000008 B music_cmd
00000000009df050 0000000000000008 b music_decoders
00000000009df058 0000000000000008 b music_finished_hook
00000000009df060 0000000000000008 b music_playing
00000000009df068 0000000000000004 b num_decoders
00000000009df070 0000000000000008 b soundfont_paths
00000000009df078 0000000000000048 b modplug
00000000009df0c0 0000000000000038 b settings
00000000009df0f8 0000000000000088 b mpg123
00000000009df180 0000000000000058 b vorbis
00000000009df1d8 0000000000000040 b opus
00000000009df218 0000000000000100 b def_instr_name
00000000009df318 0000000000000004 b rcf_count.10150
00000000009df31c 0000000000000004 B _Mix_effects_max_speed
00000000009df320 0000000000000008 b pathlist
00000000009df328 0000000000000001 b lastchan.10105
00000000009df329 0000000000000001 b laststatus.10104
00000000009df32a 0000000000000001 b nrpn.10106
00000000009df330 0000000000000010 b rpn_lsb.10108
00000000009df340 0000000000000010 b rpn_msb.10107
00000000009df350 0000000000000008 b pos_args_array
00000000009df358 0000000000000008 b pos_args_global
00000000009df360 0000000000000004 b position_channels
00000000009df370 0000000000000020 b SDL_SubsystemRefCount
00000000009df390 0000000000000004 b SDL_bInMainQuit
00000000009df394 0000000000000004 b assertion_running.0
00000000009df398 0000000000000004 b spinlock.1
00000000009df3a0 0000000000000008 b assertion_userdata
00000000009df3a8 0000000000000008 b assertion_mutex
00000000009df3b0 0000000000000008 b triggered_assertions
00000000009df3b8 0000000000000008 b SDL_hints
00000000009df3c0 0000000000000008 b log_function_mutex
00000000009df3c8 0000000000000008 b SDL_log_userdata
00000000009df3d0 0000000000000008 b SDL_loglevels
00000000009df3d8 0000000000000004 b format_idx_sub
00000000009df3dc 0000000000000004 b format_idx
00000000009df3e0 0000000000000080 b open_devices
00000000009df460 00000000000000c8 b current_audio
00000000009df528 0000000000000004 b converters_chosen.0
00000000009df530 0000000000000008 B SDL_Convert_F32_to_S32
00000000009df538 0000000000000008 B SDL_Convert_F32_to_U16
00000000009df540 0000000000000008 B SDL_Convert_F32_to_S16
00000000009df548 0000000000000008 B SDL_Convert_F32_to_U8
00000000009df550 0000000000000008 B SDL_Convert_F32_to_S8
00000000009df558 0000000000000008 B SDL_Convert_S32_to_F32
00000000009df560 0000000000000008 B SDL_Convert_U16_to_F32
00000000009df568 0000000000000008 B SDL_Convert_S16_to_F32
00000000009df570 0000000000000008 B SDL_Convert_U8_to_F32
00000000009df578 0000000000000008 B SDL_Convert_S8_to_F32
00000000009df580 0000000000000004 b checked.0
00000000009df584 0000000000000004 b SDL_EventLoggingVerbosity
00000000009df588 0000000000000040 b SDL_EventQ
00000000009df5d0 0000000000000800 b SDL_disabled_events
00000000009dfdd0 0000000000000004 b SDL_sentinel_pending
00000000009dfdd4 0000000000000004 b SDL_event_watchers_removed
00000000009dfdd8 0000000000000004 b SDL_event_watchers_dispatching
00000000009dfddc 0000000000000004 b SDL_event_watchers_count
00000000009dfde0 0000000000000008 b SDL_event_watchers
00000000009dfde8 0000000000000018 b SDL_EventOK
00000000009dfe00 0000000000000008 b SDL_event_watchers_lock
00000000009dfe08 0000000000000004 b recordAll
00000000009dfe0c 0000000000000004 b SDL_numGestureTouches
00000000009dfe10 0000000000000008 b SDL_gestureTouch
00000000009dfe18 0000000000000c18 b SDL_keyboard
00000000009e0a30 0000000000000004 b track_mouse_down
00000000009e0a38 0000000000000128 b SDL_mouse
00000000009e0b60 0000000000000004 b send_quit_pending
00000000009e0b68 0000000000000008 b track_touchid
00000000009e0b70 0000000000000008 b track_fingerid
00000000009e0b78 0000000000000004 b finger_touching
00000000009e0b80 0000000000000008 b SDL_touchDevices
00000000009e0b88 0000000000000004 b SDL_num_touch
00000000009e0b90 0000000000000008 b SDL_haptics
00000000009e0b98 0000000000000010 b SDL_ignored_controllers
00000000009e0ba8 0000000000000010 b SDL_allowed_controllers
00000000009e0bb8 0000000000000001 b gamecontroller_magic
00000000009e0bc0 0000000000000008 b s_pDefaultMapping
00000000009e0bc8 0000000000000008 b s_pSupportedControllers
00000000009e0bd0 0000000000000010 b s_zeroGUID
00000000009e0be0 0000000000000008 b SDL_gamecontrollers
00000000009e0be8 0000000000000001 B SDL_joystick_magic
00000000009e0bec 0000000000000004 b SDL_joystick_allows_background_events
00000000009e0bf0 0000000000000008 b SDL_joystick_players
00000000009e0bf8 0000000000000004 b SDL_joystick_player_count
00000000009e0c00 0000000000000008 b SDL_joysticks
00000000009e0c08 0000000000000004 b SDL_joysticks_quitting
00000000009e0c0c 0000000000000004 b SDL_joysticks_initialized
00000000009e0c10 0000000000000004 b SDL_joysticks_locked
00000000009e0c18 0000000000000004 b SDL_joystick_lock_pending
00000000009e0c20 0000000000000008 b SDL_joystick_lock
00000000009e0c28 0000000000000001 b texture_magic
00000000009e0c29 0000000000000001 b renderer_magic
00000000009e0c2c 0000000000000004 b SDL_updating_sensor
00000000009e0c30 0000000000000008 b SDL_sensors
00000000009e0c38 0000000000000008 b SDL_sensor_lock
00000000009e0c40 0000000000000080 b SDL_global_error_str.0
00000000009e0cc0 0000000000000028 b SDL_global_error.1
00000000009e0ce8 0000000000000004 b tls_lock.2
00000000009e0cec 0000000000000004 b tls_being_created.3
00000000009e0cf0 0000000000000004 b tls_errbuf.4
00000000009e0cf4 0000000000000004 b tls_lock.5
00000000009e0cf8 0000000000000004 b SDL_tls_id.6
00000000009e0d00 0000000000000008 b SDL_generic_TLS
00000000009e0d08 0000000000000008 b SDL_generic_TLS_mutex
00000000009e0d10 00000000000000d0 b SDL_timer_data
00000000009e0de0 0000000000000004 b formats_lock
00000000009e0de8 0000000000000008 b formats
00000000009e0df0 0000000000000004 b SDL_messagebox_count
00000000009e0df8 0000000000000008 b _this
00000000009e0e00 0000000000000004 b lock.0
00000000009e0e04 0000000000000004 b generic_local_storage
00000000009e0e08 0000000000000004 b operationMode
00000000009e0e10 0000000000000008 b switch_window
00000000009e0e18 00000000000003c0 b state
00000000009e11d8 0000000000000008 b start
00000000009e11e0 0000000000000001 b started
00000000009e11e8 0000000000000008 b g_VJoys
00000000009e11f0 0000000000000200 b keys
00000000009e13f0 0000000000000008 b last_timestamp
00000000009e13f8 0000000000000008 b prev_buttons
00000000009e1400 0000000000000001 b kbdShown
00000000009e1401 0000000000000001 b kbdInited
00000000009e1408 0000000000000048 b kbdAppearArg
00000000009e1450 00000000000005d8 b kbd
00000000009e1a28 0000000000000290 b touchStateOld
00000000009e1cb8 0000000000000290 b touchState
00000000009e1f48 0000000000000030 b dummy_thread
00000000009e1f78 0000000000000008 b _eglDriver
00000000009e1f80 0000000000000010 b _eglModuleMutex
00000000009e1f90 0000000000000010 b _eglGlobalMutex
00000000009e1fa0 0000000000000004 b drifb_ID
00000000009e1fa8 0000000000000010 b nouveau_screen_mutex
00000000009e1fb8 0000000000000004 b id.1
00000000009e1fbc 0000000000000004 b id.0
00000000009e1fc0 0000000000001000 b buf.10
00000000009e2fc0 0000000000000040 b rest.3
00000000009e3000 0000000000000001 b value.7
00000000009e3008 0000000000000010 B OneTimeLock
00000000009e3018 0000000000000400 B _mesa_ubyte_to_float_color_tab
00000000009e3418 0000000000000001 b initialized.0
00000000009e3420 0000000000000010 b DynamicIDMutex
00000000009e3430 0000000000000004 b oom_msg_id.0
00000000009e3438 000000000000063c b InstSize
00000000009e3a74 0000000000000001 b tableInitialized.70
00000000009e3a78 0000000000000008 b LogFile
00000000009e3a80 0000000000000004 b error_msg_id.1
00000000009e3a84 0000000000000004 b numCalls.2
00000000009e3a88 0000000000000110 B _mesa_extension_override_disables
00000000009e3b98 0000000000000110 B _mesa_extension_override_enables
00000000009e3ca8 0000000000000088 b unrecognized_extensions
00000000009e3d30 0000000000000001 b warned.0
00000000009e3d38 00000000000004d8 b DummyFramebuffer
00000000009e4210 0000000000000058 b DummyRenderbuffer
00000000009e4268 00000000000004d8 b IncompleteFramebuffer
00000000009e4740 0000000000000004 b msg_id.1
00000000009e4744 0000000000000004 b msg_id.2
00000000009e4748 0000000000000008 b format_array_format_table
00000000009e4750 0000000000000004 b format_array_format_table_exists
00000000009e4754 0000000000000004 b msg_id.0
00000000009e4758 00000000000012c8 B driDispatchRemapTable
00000000009e5a20 0000000000000001 b initialized.0
00000000009e5a28 0000000000000008 b path.0
00000000009e5a30 0000000000000001 b read_env_var.1
00000000009e5a34 0000000000000004 b msg_id.1
00000000009e5a38 0000000000000001 b initialized.1
00000000009e5a39 0000000000000001 b initialized.3
00000000009e5a40 0000000000000bc0 b table.0
00000000009e6600 0000000000000bc0 b table.2
00000000009e71c0 0000000000000014 b token_tmp
00000000009e71d4 0000000000000001 b value.0
00000000009e71d8 0000000000000004 B ST_DEBUG
00000000009e71e0 0000000000000008 b value.0
00000000009e71e8 0000000000000008 b guard variable for (anonymous namespace)::builtin_builder::add_image_function(char const*, char const*, ir_function_signature* ((anonymous namespace)::builtin_builder::*)(glsl_type const*, unsigned int, unsigned int), unsigned int, unsigned int, ir_intrinsic_id)::types
00000000009e71f0 0000000000000004 b builtin_users
00000000009e71f8 0000000000000010 b builtins_lock
00000000009e7208 0000000000000010 b builtins
00000000009e7218 0000000000000108 b (anonymous namespace)::builtin_builder::add_image_function(char const*, char const*, ir_function_signature* ((anonymous namespace)::builtin_builder::*)(glsl_type const*, unsigned int, unsigned int), unsigned int, unsigned int, ir_intrinsic_id)::types
00000000009e7320 0000000000000001 B ir_variable::temporaries_allocate_names
00000000009e7324 0000000000000004 B glcpp_parser_debug
00000000009e7328 0000000000000008 b guard variable for glsl_type::vec(unsigned int)::ts
00000000009e7330 0000000000000008 b guard variable for glsl_type::bvec(unsigned int)::ts
00000000009e7338 0000000000000008 b guard variable for glsl_type::dvec(unsigned int)::ts
00000000009e7340 0000000000000008 b guard variable for glsl_type::ivec(unsigned int)::ts
00000000009e7348 0000000000000008 b guard variable for glsl_type::uvec(unsigned int)::ts
00000000009e7350 0000000000000008 b guard variable for glsl_type::i8vec(unsigned int)::ts
00000000009e7358 0000000000000008 b guard variable for glsl_type::u8vec(unsigned int)::ts
00000000009e7360 0000000000000008 b guard variable for glsl_type::f16vec(unsigned int)::ts
00000000009e7368 0000000000000008 b guard variable for glsl_type::i16vec(unsigned int)::ts
00000000009e7370 0000000000000008 b guard variable for glsl_type::i64vec(unsigned int)::ts
00000000009e7378 0000000000000008 b guard variable for glsl_type::u16vec(unsigned int)::ts
00000000009e7380 0000000000000008 b guard variable for glsl_type::u64vec(unsigned int)::ts
00000000009e7388 0000000000000004 b glsl_type_users
00000000009e7390 0000000000000030 B glsl_type::_bool_type
00000000009e73c0 0000000000000030 B glsl_type::_mat2_type
00000000009e73f0 0000000000000030 B glsl_type::_mat3_type
00000000009e7420 0000000000000030 B glsl_type::_mat4_type
00000000009e7450 0000000000000030 B glsl_type::_uint_type
00000000009e7480 0000000000000030 B glsl_type::_vec2_type
00000000009e74b0 0000000000000030 B glsl_type::_vec3_type
00000000009e74e0 0000000000000030 B glsl_type::_vec4_type
00000000009e7510 0000000000000030 B glsl_type::_vec8_type
00000000009e7540 0000000000000030 B glsl_type::_void_type
00000000009e7570 0000000000000010 B glsl_type::hash_mutex
00000000009e7580 0000000000000030 B glsl_type::_bvec2_type
00000000009e75b0 0000000000000030 B glsl_type::_bvec3_type
00000000009e75e0 0000000000000030 B glsl_type::_bvec4_type
00000000009e7610 0000000000000030 B glsl_type::_bvec8_type
00000000009e7640 0000000000000030 B glsl_type::_dmat2_type
00000000009e7670 0000000000000030 B glsl_type::_dmat3_type
00000000009e76a0 0000000000000030 B glsl_type::_dmat4_type
00000000009e76d0 0000000000000030 B glsl_type::_dvec2_type
00000000009e7700 0000000000000030 B glsl_type::_dvec3_type
00000000009e7730 0000000000000030 B glsl_type::_dvec4_type
00000000009e7760 0000000000000030 B glsl_type::_dvec8_type
00000000009e7790 0000000000000030 B glsl_type::_error_type
00000000009e77c0 0000000000000030 B glsl_type::_float_type
00000000009e77f0 0000000000000030 B glsl_type::_ivec2_type
00000000009e7820 0000000000000030 B glsl_type::_ivec3_type
00000000009e7850 0000000000000030 B glsl_type::_ivec4_type
00000000009e7880 0000000000000030 B glsl_type::_ivec8_type
00000000009e78b0 0000000000000030 B glsl_type::_uvec2_type
00000000009e78e0 0000000000000030 B glsl_type::_uvec3_type
00000000009e7910 0000000000000030 B glsl_type::_uvec4_type
00000000009e7940 0000000000000030 B glsl_type::_uvec8_type
00000000009e7970 0000000000000030 B glsl_type::_vec16_type
00000000009e79a0 0000000000000008 B glsl_type::array_types
00000000009e79a8 0000000000000030 B glsl_type::_bvec16_type
00000000009e79d8 0000000000000030 B glsl_type::_double_type
00000000009e7a08 0000000000000030 B glsl_type::_dvec16_type
00000000009e7a38 0000000000000030 B glsl_type::_i8vec2_type
00000000009e7a68 0000000000000030 B glsl_type::_i8vec3_type
00000000009e7a98 0000000000000030 B glsl_type::_i8vec4_type
00000000009e7ac8 0000000000000030 B glsl_type::_i8vec8_type
00000000009e7af8 0000000000000030 B glsl_type::_int8_t_type
00000000009e7b28 0000000000000030 B glsl_type::_ivec16_type
00000000009e7b58 0000000000000030 B glsl_type::_mat2x3_type
00000000009e7b88 0000000000000030 B glsl_type::_mat2x4_type
00000000009e7bb8 0000000000000030 B glsl_type::_mat3x2_type
00000000009e7be8 0000000000000030 B glsl_type::_mat3x4_type
00000000009e7c18 0000000000000030 B glsl_type::_mat4x2_type
00000000009e7c48 0000000000000030 B glsl_type::_mat4x3_type
00000000009e7c78 0000000000000030 B glsl_type::_u8vec2_type
00000000009e7ca8 0000000000000030 B glsl_type::_u8vec3_type
00000000009e7cd8 0000000000000030 B glsl_type::_u8vec4_type
00000000009e7d08 0000000000000030 B glsl_type::_u8vec8_type
00000000009e7d38 0000000000000030 B glsl_type::_uvec16_type
00000000009e7d68 0000000000000008 B glsl_type::struct_types
00000000009e7d70 0000000000000030 B glsl_type::_dmat2x3_type
00000000009e7da0 0000000000000030 B glsl_type::_dmat2x4_type
00000000009e7dd0 0000000000000030 B glsl_type::_dmat3x2_type
00000000009e7e00 0000000000000030 B glsl_type::_dmat3x4_type
00000000009e7e30 0000000000000030 B glsl_type::_dmat4x2_type
00000000009e7e60 0000000000000030 B glsl_type::_dmat4x3_type
00000000009e7e90 0000000000000030 B glsl_type::_f16mat2_type
00000000009e7ec0 0000000000000030 B glsl_type::_f16mat3_type
00000000009e7ef0 0000000000000030 B glsl_type::_f16mat4_type
00000000009e7f20 0000000000000030 B glsl_type::_f16vec2_type
00000000009e7f50 0000000000000030 B glsl_type::_f16vec3_type
00000000009e7f80 0000000000000030 B glsl_type::_f16vec4_type
00000000009e7fb0 0000000000000030 B glsl_type::_f16vec8_type
00000000009e7fe0 0000000000000030 B glsl_type::_i16vec2_type
00000000009e8010 0000000000000030 B glsl_type::_i16vec3_type
00000000009e8040 0000000000000030 B glsl_type::_i16vec4_type
00000000009e8070 0000000000000030 B glsl_type::_i16vec8_type
00000000009e80a0 0000000000000030 B glsl_type::_i64vec2_type
00000000009e80d0 0000000000000030 B glsl_type::_i64vec3_type
00000000009e8100 0000000000000030 B glsl_type::_i64vec4_type
00000000009e8130 0000000000000030 B glsl_type::_i64vec8_type
00000000009e8160 0000000000000030 B glsl_type::_i8vec16_type
00000000009e8190 0000000000000030 B glsl_type::_image1D_type
00000000009e81c0 0000000000000030 B glsl_type::_image2D_type
00000000009e81f0 0000000000000030 B glsl_type::_image3D_type
00000000009e8220 0000000000000030 B glsl_type::_int16_t_type
00000000009e8250 0000000000000030 B glsl_type::_int64_t_type
00000000009e8280 0000000000000030 B glsl_type::_sampler_type
00000000009e82b0 0000000000000030 B glsl_type::_u16vec2_type
00000000009e82e0 0000000000000030 B glsl_type::_u16vec3_type
00000000009e8310 0000000000000030 B glsl_type::_u16vec4_type
00000000009e8340 0000000000000030 B glsl_type::_u16vec8_type
00000000009e8370 0000000000000030 B glsl_type::_u64vec2_type
00000000009e83a0 0000000000000030 B glsl_type::_u64vec3_type
00000000009e83d0 0000000000000030 B glsl_type::_u64vec4_type
00000000009e8400 0000000000000030 B glsl_type::_u64vec8_type
00000000009e8430 0000000000000030 B glsl_type::_u8vec16_type
00000000009e8460 0000000000000030 B glsl_type::_uint8_t_type
00000000009e8490 0000000000000030 B glsl_type::_f16vec16_type
00000000009e84c0 0000000000000030 B glsl_type::_i16vec16_type
00000000009e84f0 0000000000000030 B glsl_type::_i64vec16_type
00000000009e8520 0000000000000030 B glsl_type::_iimage1D_type
00000000009e8550 0000000000000030 B glsl_type::_iimage2D_type
00000000009e8580 0000000000000030 B glsl_type::_iimage3D_type
00000000009e85b0 0000000000000030 B glsl_type::_u16vec16_type
00000000009e85e0 0000000000000030 B glsl_type::_u64vec16_type
00000000009e8610 0000000000000030 B glsl_type::_uimage1D_type
00000000009e8640 0000000000000030 B glsl_type::_uimage2D_type
00000000009e8670 0000000000000030 B glsl_type::_uimage3D_type
00000000009e86a0 0000000000000030 B glsl_type::_uint16_t_type
00000000009e86d0 0000000000000030 B glsl_type::_uint64_t_type
00000000009e8700 0000000000000008 B glsl_type::function_types
00000000009e8708 0000000000000030 B glsl_type::_f16mat2x3_type
00000000009e8738 0000000000000030 B glsl_type::_f16mat2x4_type
00000000009e8768 0000000000000030 B glsl_type::_f16mat3x2_type
00000000009e8798 0000000000000030 B glsl_type::_f16mat3x4_type
00000000009e87c8 0000000000000030 B glsl_type::_f16mat4x2_type
00000000009e87f8 0000000000000030 B glsl_type::_f16mat4x3_type
00000000009e8828 0000000000000030 B glsl_type::_float16_t_type
00000000009e8858 0000000000000030 B glsl_type::_image2DMS_type
00000000009e8888 0000000000000030 B glsl_type::_imageCube_type
00000000009e88b8 0000000000000030 B glsl_type::_sampler1D_type
00000000009e88e8 0000000000000030 B glsl_type::_sampler2D_type
00000000009e8918 0000000000000030 B glsl_type::_sampler3D_type
00000000009e8948 0000000000000008 B glsl_type::interface_types
00000000009e8950 0000000000000030 B glsl_type::_iimage2DMS_type
00000000009e8980 0000000000000030 B glsl_type::_iimageCube_type
00000000009e89b0 0000000000000030 B glsl_type::_isampler1D_type
00000000009e89e0 0000000000000030 B glsl_type::_isampler2D_type
00000000009e8a10 0000000000000030 B glsl_type::_isampler3D_type
00000000009e8a40 0000000000000030 B glsl_type::_uimage2DMS_type
00000000009e8a70 0000000000000030 B glsl_type::_uimageCube_type
00000000009e8aa0 0000000000000030 B glsl_type::_usampler1D_type
00000000009e8ad0 0000000000000030 B glsl_type::_usampler2D_type
00000000009e8b00 0000000000000030 B glsl_type::_usampler3D_type
00000000009e8b30 0000000000000008 B glsl_type::subroutine_types
00000000009e8b38 0000000000000030 B glsl_type::_atomic_uint_type
00000000009e8b68 0000000000000030 B glsl_type::_image2DRect_type
00000000009e8b98 0000000000000030 B glsl_type::_imageBuffer_type
00000000009e8bc8 0000000000000030 B glsl_type::_sampler2DMS_type
00000000009e8bf8 0000000000000030 B glsl_type::_samplerCube_type
00000000009e8c28 0000000000000030 B glsl_type::_iimage2DRect_type
00000000009e8c58 0000000000000030 B glsl_type::_iimageBuffer_type
00000000009e8c88 0000000000000030 B glsl_type::_image1DArray_type
00000000009e8cb8 0000000000000030 B glsl_type::_image2DArray_type
00000000009e8ce8 0000000000000030 B glsl_type::_isampler2DMS_type
00000000009e8d18 0000000000000030 B glsl_type::_isamplerCube_type
00000000009e8d48 0000000000000030 B glsl_type::_subpassInput_type
00000000009e8d78 0000000000000030 B glsl_type::_uimage2DRect_type
00000000009e8da8 0000000000000030 B glsl_type::_uimageBuffer_type
00000000009e8dd8 0000000000000030 B glsl_type::_usampler2DMS_type
00000000009e8e08 0000000000000030 B glsl_type::_usamplerCube_type
00000000009e8e38 0000000000000030 B glsl_type::_iimage1DArray_type
00000000009e8e68 0000000000000030 B glsl_type::_iimage2DArray_type
00000000009e8e98 0000000000000030 B glsl_type::_isubpassInput_type
00000000009e8ec8 0000000000000030 B glsl_type::_sampler2DRect_type
00000000009e8ef8 0000000000000030 B glsl_type::_samplerBuffer_type
00000000009e8f28 0000000000000030 B glsl_type::_uimage1DArray_type
00000000009e8f58 0000000000000030 B glsl_type::_uimage2DArray_type
00000000009e8f88 0000000000000030 B glsl_type::_usubpassInput_type
00000000009e8fb8 0000000000000030 B glsl_type::_image2DMSArray_type
00000000009e8fe8 0000000000000030 B glsl_type::_imageCubeArray_type
00000000009e9018 0000000000000030 B glsl_type::_isampler2DRect_type
00000000009e9048 0000000000000030 B glsl_type::_isamplerBuffer_type
00000000009e9078 0000000000000030 B glsl_type::_sampler1DArray_type
00000000009e90a8 0000000000000030 B glsl_type::_sampler2DArray_type
00000000009e90d8 0000000000000030 B glsl_type::_subpassInputMS_type
00000000009e9108 0000000000000030 B glsl_type::_usampler2DRect_type
00000000009e9138 0000000000000030 B glsl_type::_usamplerBuffer_type
00000000009e9168 0000000000000030 B glsl_type::_iimage2DMSArray_type
00000000009e9198 0000000000000030 B glsl_type::_iimageCubeArray_type
00000000009e91c8 0000000000000030 B glsl_type::_isampler1DArray_type
00000000009e91f8 0000000000000030 B glsl_type::_isampler2DArray_type
00000000009e9228 0000000000000030 B glsl_type::_isubpassInputMS_type
00000000009e9258 0000000000000030 B glsl_type::_sampler1DShadow_type
00000000009e9288 0000000000000030 B glsl_type::_sampler2DShadow_type
00000000009e92b8 0000000000000030 B glsl_type::_uimage2DMSArray_type
00000000009e92e8 0000000000000030 B glsl_type::_uimageCubeArray_type
00000000009e9318 0000000000000030 B glsl_type::_usampler1DArray_type
00000000009e9348 0000000000000030 B glsl_type::_usampler2DArray_type
00000000009e9378 0000000000000030 B glsl_type::_usubpassInputMS_type
00000000009e93a8 0000000000000008 B glsl_type::explicit_matrix_types
00000000009e93b0 0000000000000030 B glsl_type::_sampler2DMSArray_type
00000000009e93e0 0000000000000030 B glsl_type::_samplerCubeArray_type
00000000009e9410 0000000000000030 B glsl_type::_isampler2DMSArray_type
00000000009e9440 0000000000000030 B glsl_type::_isamplerCubeArray_type
00000000009e9470 0000000000000030 B glsl_type::_samplerCubeShadow_type
00000000009e94a0 0000000000000030 B glsl_type::_usampler2DMSArray_type
00000000009e94d0 0000000000000030 B glsl_type::_usamplerCubeArray_type
00000000009e9500 0000000000000030 B glsl_type::_samplerExternalOES_type
00000000009e9530 0000000000000030 B glsl_type::_sampler2DRectShadow_type
00000000009e9560 0000000000000030 B glsl_type::_sampler1DArrayShadow_type
00000000009e9590 0000000000000030 B glsl_type::_sampler2DArrayShadow_type
00000000009e95c0 0000000000000030 B glsl_type::_samplerCubeArrayShadow_type
00000000009e95f0 0000000000000030 B glsl_type::_int_type
00000000009e9620 0000000000000030 b glsl_type::vec(unsigned int)::ts
00000000009e9650 0000000000000030 b glsl_type::bvec(unsigned int)::ts
00000000009e9680 0000000000000030 b glsl_type::dvec(unsigned int)::ts
00000000009e96b0 0000000000000030 b glsl_type::ivec(unsigned int)::ts
00000000009e96e0 0000000000000030 b glsl_type::uvec(unsigned int)::ts
00000000009e9710 0000000000000030 b glsl_type::i8vec(unsigned int)::ts
00000000009e9740 0000000000000030 b glsl_type::u8vec(unsigned int)::ts
00000000009e9770 0000000000000030 b glsl_type::f16vec(unsigned int)::ts
00000000009e97a0 0000000000000030 b glsl_type::i16vec(unsigned int)::ts
00000000009e97d0 0000000000000030 b glsl_type::i64vec(unsigned int)::ts
00000000009e9800 0000000000000030 b glsl_type::u16vec(unsigned int)::ts
00000000009e9830 0000000000000030 b glsl_type::u64vec(unsigned int)::ts
00000000009e9860 0000000000000400 b views.0
00000000009e9c60 0000000000000100 b zeros.1
00000000009e9d60 0000000000000080 b error_tokens
00000000009e9de0 0000000000000004 b id.0
00000000009e9de8 0000000000000080 b buffer.1
00000000009e9e68 0000000000000004 B nouveau_mesa_debug
00000000009e9e6c 0000000000000004 b id.1
00000000009e9e70 0000000000000004 b id.0
00000000009e9e78 0000000000000008 b fout.0
00000000009e9e80 0000000000000008 b loc
00000000009e9e88 0000000000000004 b cpu_once_flag
00000000009e9e90 0000000000000014 B util_cpu_caps
00000000009e9ea8 0000000000000018 b address_reg
00000000009e9ec0 0000000000000018 b undef_dst
00000000009e9ed8 0000000000000018 b undef_src
00000000009e9ef0 0000000000000050 b buf.0
00000000009e9f40 000000000000000a b s.4
00000000009e9f50 0000000000000014 b s.6
00000000009e9f68 0000000000000014 b s.9
00000000009e9f80 0000000000000064 b str.3
00000000009e9fe8 00000000000003f0 B _mesa_DummyProgram
00000000009ea3d8 00000000000000c8 b DummyShader
00000000009ea4a0 00000000000000a0 b DummyBufferObject
00000000009ea540 0000000000000001 b disable.2
00000000009ea544 0000000000000004 b id.0
00000000009ea548 0000000000000004 b id.1
00000000009ea54c 0000000000000001 b read.3
00000000009ea550 0000000000000004 b warnCount.0
00000000009ea558 0000000000000004 b DummySemaphoreObject
00000000009ea55c 0000000000000004 b count.0
00000000009ea560 0000000000000078 b inv_tab
00000000009ea5d8 0000000000004800 b CachedShaders
00000000009eedd8 0000000000000004 b NumCachedShaders
00000000009eede0 0000000000000020 b address_reg
00000000009eee00 0000000000000020 b address_reg2
00000000009eee20 0000000000000020 b sampler_reladdr
00000000009eee40 0000000000000020 b undef_dst
00000000009eee60 0000000000000020 b undef_src
00000000009eee80 0000000000000004 b glsl_to_tgsi_visitor::visit(ir_constant*)::in_array
00000000009eee88 00000000000000f0 b gl_FogParameters_fields
00000000009eef78 0000000000000090 b gl_LightProducts_fields
00000000009ef008 0000000000000150 b gl_PointParameters_fields
00000000009ef158 0000000000000030 b gl_LightModelProducts_fields
00000000009ef188 00000000000000f0 b gl_MaterialParameters_fields
00000000009ef278 0000000000000090 b gl_DepthRangeParameters_fields
00000000009ef308 0000000000000030 b gl_LightModelParameters_fields
00000000009ef338 0000000000000240 b gl_LightSourceParameters_fields
00000000009ef578 0000000000000030 B glsl_type::_struct_gl_FogParameters_type
00000000009ef5a8 0000000000000030 B glsl_type::_struct_gl_LightProducts_type
00000000009ef5d8 0000000000000030 B glsl_type::_struct_gl_PointParameters_type
00000000009ef608 0000000000000030 B glsl_type::_struct_gl_LightModelProducts_type
00000000009ef638 0000000000000030 B glsl_type::_struct_gl_MaterialParameters_type
00000000009ef668 0000000000000030 B glsl_type::_struct_gl_DepthRangeParameters_type
00000000009ef698 0000000000000030 B glsl_type::_struct_gl_LightModelParameters_type
00000000009ef6c8 0000000000000030 B glsl_type::_struct_gl_LightSourceParameters_type
00000000009ef6f8 0000000000000008 b nv50_ir::colour
00000000009ef700 0000000000000121 B nv50_ir::GCRA::relDegree
00000000009ef828 0000000000000014 b s.0
00000000009ef83c 0000000000000001 b value.0
00000000009ef840 0000000000000010 b dynamic_mutex.0
00000000009ef850 0000000000001800 b dynamic_stubs
00000000009f1050 0000000000000004 b flag.1
00000000009f1054 0000000000000004 b num_dynamic_stubs
00000000009f1058 0000000000000008 b nop_handler
00000000009f1060 0000000000000004 b (anonymous namespace)::get_static_cond()::once
00000000009f1070 0000000000000010 b (anonymous namespace)::fake_cond
00000000009f1080 0000000000000008 b (anonymous namespace)::static_cond
00000000009f1088 0000000000000004 b (anonymous namespace)::get_static_mutex()::once
00000000009f1090 0000000000000010 b (anonymous namespace)::fake_mutex
00000000009f10a0 0000000000000008 b (anonymous namespace)::static_mutex
00000000009f10b0 0000000000000050 B __gnu_internal::buf_wcerr_sync
00000000009f1100 0000000000000050 B __gnu_internal::buf_wcin_sync
00000000009f1150 0000000000000050 B __gnu_internal::buf_wcout_sync
00000000009f11a0 0000000000000050 B __gnu_internal::buf_cerr_sync
00000000009f11f0 0000000000000050 B __gnu_internal::buf_cin_sync
00000000009f1240 0000000000000050 B __gnu_internal::buf_cout_sync
00000000009f1290 0000000000000001 b std::__ioinit
00000000009f1298 0000000000000110 B std::wclog
00000000009f13a8 0000000000000110 B std::wcerr
00000000009f14b8 0000000000000110 B std::wcout
00000000009f15c8 0000000000000118 B std::wcin
00000000009f16e0 0000000000000110 B std::clog
00000000009f17f0 0000000000000110 B std::cerr
00000000009f1900 0000000000000110 B std::cout
00000000009f1a10 0000000000000118 B std::cin
00000000009f1b28 0000000000000004 B std::locale::id::_S_refcount
00000000009f1b30 0000000000000004 B std::locale::facet::_S_once
00000000009f1b38 0000000000000008 B std::locale::facet::_S_c_locale
00000000009f1b40 0000000000000004 B std::locale::_S_once
00000000009f1b48 0000000000000008 B std::locale::_S_global
00000000009f1b50 0000000000000008 B std::locale::_S_classic
00000000009f1b58 0000000000000008 b guard variable for (anonymous namespace)::get_locale_cache_mutex()::locale_cache_mutex
00000000009f1b60 0000000000000010 b (anonymous namespace)::get_locale_cache_mutex()::locale_cache_mutex
00000000009f1b70 0000000000000020 V std::string::_Rep::_S_empty_rep_storage
00000000009f1b90 0000000000000020 V std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_Rep::_S_empty_rep_storage
00000000009f1bb0 0000000000000008 B std::ctype<wchar_t>::id
00000000009f1bb8 0000000000000008 B std::ctype<char>::id
00000000009f1bc0 0000000000000008 V guard variable for std::__cxx11::collate<wchar_t>::id
00000000009f1bc8 0000000000000008 V guard variable for std::__cxx11::messages<wchar_t>::id
00000000009f1bd0 0000000000000008 V guard variable for std::__cxx11::time_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::id
00000000009f1bd8 0000000000000008 V guard variable for std::__cxx11::numpunct<wchar_t>::id
00000000009f1be0 0000000000000008 V guard variable for std::__cxx11::moneypunct<wchar_t, true>::id
00000000009f1be8 0000000000000008 V guard variable for std::__cxx11::moneypunct<wchar_t, false>::id
00000000009f1bf0 0000000000000008 V guard variable for std::__cxx11::money_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::id
00000000009f1bf8 0000000000000008 V guard variable for std::__cxx11::money_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::id
00000000009f1c00 0000000000000008 V std::__cxx11::collate<wchar_t>::id
00000000009f1c08 0000000000000008 V std::__cxx11::messages<wchar_t>::id
00000000009f1c10 0000000000000008 V std::__cxx11::time_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::id
00000000009f1c18 0000000000000008 V std::__cxx11::numpunct<wchar_t>::id
00000000009f1c20 0000000000000008 V std::__cxx11::moneypunct<wchar_t, true>::id
00000000009f1c28 0000000000000008 V std::__cxx11::moneypunct<wchar_t, false>::id
00000000009f1c30 0000000000000008 V std::__cxx11::money_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::id
00000000009f1c38 0000000000000008 V std::__cxx11::money_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::id
00000000009f1c40 0000000000000004 B std::ios_base::Init::_S_refcount
00000000009f1c48 0000000000000008 V guard variable for std::collate<char>::id
00000000009f1c50 0000000000000008 V guard variable for std::messages<char>::id
00000000009f1c58 0000000000000008 V guard variable for std::time_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::id
00000000009f1c60 0000000000000008 V guard variable for std::time_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::id
00000000009f1c68 0000000000000008 V guard variable for std::__timepunct<char>::id
00000000009f1c70 0000000000000008 V guard variable for std::numpunct<char>::id
00000000009f1c78 0000000000000008 V guard variable for std::moneypunct<char, true>::id
00000000009f1c80 0000000000000008 V guard variable for std::moneypunct<char, false>::id
00000000009f1c88 0000000000000008 V guard variable for std::money_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::id
00000000009f1c90 0000000000000008 V guard variable for std::money_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::id
00000000009f1c98 0000000000000008 V guard variable for std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::id
00000000009f1ca0 0000000000000008 V guard variable for std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::id
00000000009f1ca8 0000000000000008 V std::collate<char>::id
00000000009f1cb0 0000000000000008 V std::messages<char>::id
00000000009f1cb8 0000000000000008 V std::time_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::id
00000000009f1cc0 0000000000000008 V std::time_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::id
00000000009f1cc8 0000000000000008 V std::__timepunct<char>::id
00000000009f1cd0 0000000000000008 V std::numpunct<char>::id
00000000009f1cd8 0000000000000008 V std::moneypunct<char, true>::id
00000000009f1ce0 0000000000000008 V std::moneypunct<char, false>::id
00000000009f1ce8 0000000000000008 V std::money_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::id
00000000009f1cf0 0000000000000008 V std::money_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::id
00000000009f1cf8 0000000000000008 V std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::id
00000000009f1d00 0000000000000008 V std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::id
00000000009f1d10 0000000000000190 b (anonymous namespace)::timepunct_cache_w
00000000009f1ea0 00000000000000a0 b (anonymous namespace)::moneypunct_cache_wf
00000000009f1f40 00000000000000a0 b (anonymous namespace)::moneypunct_cache_wt
00000000009f1fe0 0000000000000150 b (anonymous namespace)::numpunct_cache_w
00000000009f2130 0000000000000190 b (anonymous namespace)::timepunct_cache_c
00000000009f22c0 0000000000000070 b (anonymous namespace)::moneypunct_cache_cf
00000000009f2330 0000000000000070 b (anonymous namespace)::moneypunct_cache_ct
00000000009f23a0 0000000000000090 b (anonymous namespace)::numpunct_cache_c
00000000009f2430 0000000000000010 b (anonymous namespace)::codecvt_c32_c8
00000000009f2440 0000000000000010 b (anonymous namespace)::codecvt_c16_c8
00000000009f2450 0000000000000010 b (anonymous namespace)::codecvt_c32
00000000009f2460 0000000000000010 b (anonymous namespace)::codecvt_c16
00000000009f2470 0000000000000020 b (anonymous namespace)::messages_w
00000000009f2490 0000000000000010 b (anonymous namespace)::time_put_w
00000000009f24a0 0000000000000010 b (anonymous namespace)::time_get_w
00000000009f24b0 0000000000000028 b (anonymous namespace)::timepunct_w
00000000009f24e0 0000000000000010 b (anonymous namespace)::money_put_w
00000000009f24f0 0000000000000010 b (anonymous namespace)::money_get_w
00000000009f2500 0000000000000018 b (anonymous namespace)::moneypunct_wf
00000000009f2520 0000000000000018 b (anonymous namespace)::moneypunct_wt
00000000009f2540 0000000000000018 b (anonymous namespace)::codecvt_w
00000000009f2560 0000000000000010 b (anonymous namespace)::num_put_w
00000000009f2570 0000000000000010 b (anonymous namespace)::num_get_w
00000000009f2580 0000000000000018 b (anonymous namespace)::numpunct_w
00000000009f25a0 0000000000000018 b (anonymous namespace)::collate_w
00000000009f25c0 00000000000004f0 b (anonymous namespace)::ctype_w
00000000009f2ab0 0000000000000020 b (anonymous namespace)::messages_c
00000000009f2ad0 0000000000000010 b (anonymous namespace)::time_put_c
00000000009f2ae0 0000000000000010 b (anonymous namespace)::time_get_c
00000000009f2af0 0000000000000028 b (anonymous namespace)::timepunct_c
00000000009f2b20 0000000000000010 b (anonymous namespace)::money_put_c
00000000009f2b30 0000000000000010 b (anonymous namespace)::money_get_c
00000000009f2b40 0000000000000018 b (anonymous namespace)::moneypunct_cf
00000000009f2b60 0000000000000018 b (anonymous namespace)::moneypunct_ct
00000000009f2b80 0000000000000018 b (anonymous namespace)::codecvt_c
00000000009f2ba0 0000000000000010 b (anonymous namespace)::num_put_c
00000000009f2bb0 0000000000000010 b (anonymous namespace)::num_get_c
00000000009f2bc0 0000000000000018 b (anonymous namespace)::numpunct_c
00000000009f2be0 0000000000000018 b (anonymous namespace)::collate_c
00000000009f2c00 0000000000000240 b (anonymous namespace)::ctype_c
00000000009f2e40 0000000000000180 b (anonymous namespace)::cache_vec
00000000009f2fc0 0000000000000180 b (anonymous namespace)::facet_vec
00000000009f3140 000000000000000c b (anonymous namespace)::name_c
00000000009f3150 0000000000000030 b (anonymous namespace)::name_vec
00000000009f3180 0000000000000008 b (anonymous namespace)::c_locale
00000000009f3190 0000000000000028 b (anonymous namespace)::c_locale_impl
00000000009f31b8 0000000000000008 b guard variable for (anonymous namespace)::get_locale_mutex()::locale_mutex
00000000009f31c0 0000000000000010 b (anonymous namespace)::get_locale_mutex()::locale_mutex
00000000009f31d0 0000000000000008 V guard variable for std::collate<wchar_t>::id
00000000009f31d8 0000000000000008 V guard variable for std::messages<wchar_t>::id
00000000009f31e0 0000000000000008 V guard variable for std::time_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::id
00000000009f31e8 0000000000000008 V guard variable for std::time_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::id
00000000009f31f0 0000000000000008 V guard variable for std::__timepunct<wchar_t>::id
00000000009f31f8 0000000000000008 V guard variable for std::numpunct<wchar_t>::id
00000000009f3200 0000000000000008 V guard variable for std::moneypunct<wchar_t, true>::id
00000000009f3208 0000000000000008 V guard variable for std::moneypunct<wchar_t, false>::id
00000000009f3210 0000000000000008 V guard variable for std::money_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::id
00000000009f3218 0000000000000008 V guard variable for std::money_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::id
00000000009f3220 0000000000000008 V guard variable for std::num_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::id
00000000009f3228 0000000000000008 V guard variable for std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::id
00000000009f3230 0000000000000008 V std::collate<wchar_t>::id
00000000009f3238 0000000000000008 V std::messages<wchar_t>::id
00000000009f3240 0000000000000008 V std::time_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::id
00000000009f3248 0000000000000008 V std::time_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::id
00000000009f3250 0000000000000008 V std::__timepunct<wchar_t>::id
00000000009f3258 0000000000000008 V std::numpunct<wchar_t>::id
00000000009f3260 0000000000000008 V std::moneypunct<wchar_t, true>::id
00000000009f3268 0000000000000008 V std::moneypunct<wchar_t, false>::id
00000000009f3270 0000000000000008 V std::money_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::id
00000000009f3278 0000000000000008 V std::money_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::id
00000000009f3280 0000000000000008 V std::num_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::id
00000000009f3288 0000000000000008 V std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::id
00000000009f3290 0000000000000028 b (anonymous namespace)::emergency_pool
00000000009f32b8 0000000000000004 b init
00000000009f32bc 0000000000000001 B __eh_globals_init::_S_init
00000000009f32c0 0000000000000010 b (anonymous namespace)::eh_globals
00000000009f32d0 0000000000000008 b (anonymous namespace)::__new_handler
00000000009f32d8 0000000000000008 B std::codecvt<wchar_t, char, _mbstate_t>::id
00000000009f32e0 0000000000000008 B std::codecvt<char, char, _mbstate_t>::id
00000000009f32e8 0000000000000008 B std::codecvt<char32_t, char8_t, _mbstate_t>::id
00000000009f32f0 0000000000000008 B std::codecvt<char16_t, char8_t, _mbstate_t>::id
00000000009f32f8 0000000000000008 B std::codecvt<char32_t, char, _mbstate_t>::id
00000000009f3300 0000000000000008 B std::codecvt<char16_t, char, _mbstate_t>::id
00000000009f3310 0000000000000020 b std::(anonymous namespace)::messages_w
00000000009f3330 0000000000000010 b std::(anonymous namespace)::time_get_w
00000000009f3340 0000000000000010 b std::(anonymous namespace)::money_put_w
00000000009f3350 0000000000000010 b std::(anonymous namespace)::money_get_w
00000000009f3360 0000000000000018 b std::(anonymous namespace)::moneypunct_wf
00000000009f3380 0000000000000018 b std::(anonymous namespace)::moneypunct_wt
00000000009f33a0 0000000000000018 b std::(anonymous namespace)::numpunct_w
00000000009f33c0 0000000000000018 b std::(anonymous namespace)::collate_w
00000000009f33e0 0000000000000020 b std::(anonymous namespace)::messages_c
00000000009f3400 0000000000000010 b std::(anonymous namespace)::time_get_c
00000000009f3410 0000000000000010 b std::(anonymous namespace)::money_put_c
00000000009f3420 0000000000000010 b std::(anonymous namespace)::money_get_c
00000000009f3430 0000000000000018 b std::(anonymous namespace)::moneypunct_cf
00000000009f3450 0000000000000018 b std::(anonymous namespace)::moneypunct_ct
00000000009f3470 0000000000000018 b std::(anonymous namespace)::numpunct_c
00000000009f3490 0000000000000018 b std::(anonymous namespace)::collate_c
00000000009f34a8 0000000000000008 V guard variable for std::__cxx11::collate<char>::id
00000000009f34b0 0000000000000008 V guard variable for std::__cxx11::messages<char>::id
00000000009f34b8 0000000000000008 V guard variable for std::__cxx11::time_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::id
00000000009f34c0 0000000000000008 V guard variable for std::__cxx11::numpunct<char>::id
00000000009f34c8 0000000000000008 V guard variable for std::__cxx11::moneypunct<char, true>::id
00000000009f34d0 0000000000000008 V guard variable for std::__cxx11::moneypunct<char, false>::id
00000000009f34d8 0000000000000008 V guard variable for std::__cxx11::money_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::id
00000000009f34e0 0000000000000008 V guard variable for std::__cxx11::money_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::id
00000000009f34e8 0000000000000008 V std::__cxx11::collate<char>::id
00000000009f34f0 0000000000000008 V std::__cxx11::messages<char>::id
00000000009f34f8 0000000000000008 V std::__cxx11::time_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::id
00000000009f3500 0000000000000008 V std::__cxx11::numpunct<char>::id
00000000009f3508 0000000000000008 V std::__cxx11::moneypunct<char, true>::id
00000000009f3510 0000000000000008 V std::__cxx11::moneypunct<char, false>::id
00000000009f3518 0000000000000008 V std::__cxx11::money_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::id
00000000009f3520 0000000000000008 V std::__cxx11::money_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::id
00000000009f3528 0000000000000004 b seq
00000000009f352c 0000000000000004 B ModPlug::gSampleSize
00000000009f3530 0000000000000004 B CSoundFile::gdwSysInfo
00000000009f3534 0000000000000004 B CSoundFile::gnCPUUsage
00000000009f3538 0000000000000008 B CSoundFile::gpSndMixHook
00000000009f3540 0000000000000004 B CSoundFile::gdwSoundSetup
00000000009f3548 0000000000000008 B CSoundFile::gpMixPluginCreateProc
00000000009f3550 0000000000000004 B CSoundFile::gnVUMeter
00000000009f3554 0000000000000004 B gbInitPlugins
00000000009f3558 0000000000000004 B gnDryLOfsVol
00000000009f355c 0000000000000004 B gnDryROfsVol
00000000009f3560 0000000000000004 B gnReverbSend
00000000009f3564 0000000000000004 B gnRvbLOfsVol
00000000009f3568 0000000000000004 B gnRvbROfsVol
00000000009f3570 0000000000000100 b XBassDelay
00000000009f3670 0000000000000004 b nXBassMask
00000000009f3678 0000000000000100 b XBassBuffer
00000000009f3778 0000000000000020 b gRvbLowPass
00000000009f3798 0000000000000004 b nDolbyDepth
00000000009f379c 0000000000000004 b nFilterAttn
00000000009f37a0 0000000000000004 b nReverbSize
00000000009f37a8 0000000000025800 b ReverbBuffer
0000000000a18fa8 0000000000000004 b nReverbSize2
0000000000a18fac 0000000000000004 b nReverbSize3
0000000000a18fb0 0000000000000004 b nReverbSize4
0000000000a18fb4 0000000000000004 b nSurroundPos
0000000000a18fb8 0000000000000004 b nXBassDlyPos
0000000000a18fc0 000000000001cad0 b ReverbBuffer2
0000000000a35a90 0000000000014310 b ReverbBuffer3
0000000000a49da0 000000000000dd0c b ReverbBuffer4
0000000000a57aac 0000000000000004 b nSurroundSize
0000000000a57ab0 0000000000009600 b SurroundBuffer
0000000000a610b0 0000000000000004 b nDolbyHiFltPos
0000000000a610b4 0000000000000004 b nDolbyHiFltSum
0000000000a610b8 0000000000000004 b nDolbyLoDlyPos
0000000000a610bc 0000000000000004 b nDolbyLoFltPos
0000000000a610c0 0000000000000004 b nDolbyLoFltSum
0000000000a610c4 0000000000000004 b nReverbLoDlyPos
0000000000a610c8 0000000000000004 b nReverbLoFltPos
0000000000a610cc 0000000000000004 b nReverbLoFltSum
0000000000a610d0 0000000000000004 b nXBassBufferPos
0000000000a610d4 0000000000000004 b nReverbBufferPos
0000000000a610d8 0000000000000004 b nReverbBufferPos2
0000000000a610dc 0000000000000004 b nReverbBufferPos3
0000000000a610e0 0000000000000004 b nReverbBufferPos4
0000000000a610e8 0000000000000100 b DolbyLoFilterDelay
0000000000a611e8 0000000000000100 b DolbyHiFilterBuffer
0000000000a612e8 0000000000000100 b DolbyLoFilterBuffer
0000000000a613e8 0000000000000100 b ReverbLoFilterDelay
0000000000a614e8 0000000000000100 b ReverbLoFilterBuffer
0000000000a615e8 0000000000000004 b nLeftNR
0000000000a615ec 0000000000000004 b nRightNR
0000000000a615f0 0000000000000004 b gRvbLPPos
0000000000a615f4 0000000000000004 b gRvbLPSum
0000000000a615f8 0000000000000004 b nXBassSum
0000000000a61600 0000000000001000 B MixRearBuffer
0000000000a62600 0000000000001000 B MixReverbBuffer
0000000000a63600 0000000000002000 B MixSoundBuffer
0000000000a65600 0000000000002000 B CzCUBICSPLINE::lut
0000000000a67600 0000000000008010 B CzWINDOWEDFIR::lut
0000000000a6f610 0000000000000001 B sfir
0000000000a6f618 0000000000000001 B sspline
0000000000a6f620 0000000000000780 b chordnotes
0000000000a6fda0 0000000000000004 b chordsnamed
0000000000a6fda4 0000000000000001 b global_part
0000000000a6fda8 0000000000000004 b global_voiceno
0000000000a6fdac 0000000000000004 b global_songstart
0000000000a6fdb0 0000000000000004 b global_octave_shift
0000000000a6fdb4 0000000000000004 b global_tempo_factor
0000000000a6fdb8 0000000000000004 b global_tempo_divider
0000000000a6fdc0 0000000000000140 b chordlen
0000000000a6ff00 0000000000000280 b chordname
0000000000a70180 0000000000000004 b abc_partpat_to_orderlist(unsigned char (*) [2], char const*, _ABCHANDLE*, unsigned char**, int)::ordersize
0000000000a70188 0000000000000400 b pathforpat
0000000000a70588 00000000000000bf b pat_gm_used
0000000000a70648 0000000000000400 b timiditycfg
0000000000a70a48 000000000002fc00 b midipat
0000000000aa0648 00000000000000bf b pat_loops
0000000000aa0708 0000000000000028 b pat_gm_name::buf
0000000000aa0730 0000000000000004 b pat_readpat(int, char*, int)::readlasttime
0000000000aa0738 0000000000000008 b pat_readpat(int, char*, int)::opt
0000000000aa0740 0000000000000008 b pat_readpat(int, char*, int)::mmpat
0000000000aa0748 0000000000000004 b pat_readpat(int, char*, int)::wavesize
0000000000aa0750 0000000000000008 b g_appletGuard
0000000000aa0758 0000000000000001 b g_appletInfoInitialized
0000000000aa0760 0000000000000050 b g_appletInfo
0000000000aa07b0 0000000000000004 b g_appletCpuBoostMode
0000000000aa07b4 0000000000000004 b g_appletThemeColorType
0000000000aa07b8 000000000000000c b g_appletLibraryAppletLaunchableEvent
0000000000aa07c4 0000000000000001 b g_appletSuspendedTickInitialized
0000000000aa07c8 0000000000000008 b g_appletSuspendedTick
0000000000aa07d0 0000000000000008 b g_appletInitTickBase
0000000000aa07d8 000000000000000c b g_appletSuspendedTickEvent
0000000000aa07e4 0000000000000001 b g_appletCopyrightInitialized
0000000000aa07e8 0000000000000028 b g_appletCopyrightTmem
0000000000aa0810 0000000000000004 b g_appletRecordingInitialized
0000000000aa0818 0000000000000028 b g_appletRecordingTmem
0000000000aa0840 0000000000000018 b g_appletFirstHook
0000000000aa0858 0000000000000001 b g_appletNotifiedRunning
0000000000aa0859 0000000000000001 b g_appletFocusState
0000000000aa085c 0000000000000004 b g_appletPerformanceMode
0000000000aa0860 0000000000000001 b g_appletOperationMode
0000000000aa0868 0000000000000008 b g_appletResourceUserId
0000000000aa0870 000000000000000c b g_appletMessageEvent
0000000000aa0880 0000000000000010 b g_appletIDebugFunctions
0000000000aa0890 0000000000000010 b g_appletIDisplayController
0000000000aa08a0 0000000000000010 b g_appletIAudioController
0000000000aa08b0 0000000000000010 b g_appletIWindowController
0000000000aa08c0 0000000000000010 b g_appletISelfController
0000000000aa08d0 0000000000000010 b g_appletICommonStateGetter
0000000000aa08e0 0000000000000010 b g_appletILibraryAppletCreator
0000000000aa08f0 0000000000000010 b g_appletIProcessWindingController
0000000000aa0900 0000000000000010 b g_appletILibraryAppletSelfAccessor
0000000000aa0910 0000000000000010 b g_appletIApplicationCreator
0000000000aa0920 0000000000000010 b g_appletIGlobalStateController
0000000000aa0930 0000000000000010 b g_appletIFunctions
0000000000aa0940 0000000000000010 b g_appletIAppletCommonFunctions
0000000000aa0950 0000000000000004 b g_appletExitProcessResult
0000000000aa0954 0000000000000001 b g_appletExitProcessFlag
0000000000aa0955 0000000000000001 b g_appletLeftInitialized
0000000000aa0958 0000000000000010 b g_appletProxySession
0000000000aa0968 0000000000000010 b g_appletSrv
0000000000aa0978 0000000000000004 V __nx_applet_exit_mode
0000000000aa0980 0000000000000008 V __nx_applet_PerformanceConfiguration
0000000000aa0988 0000000000000080 V __nx_applet_AppletAttribute
0000000000aa0a08 0000000000000008 b g_audrenGuard
0000000000aa0a10 000000000000000c b g_audrenEvent
0000000000aa0a20 0000000000000028 b g_audrenWorkBuf
0000000000aa0a48 0000000000000010 b g_audrenIAudioRenderer
0000000000aa0a58 0000000000000004 B g_audrenRevision
0000000000aa0a60 0000000000000008 b g_hidGuard
0000000000aa0a68 0000000000000008 b g_sevenSixAxisSensorBuffer
0000000000aa0a70 0000000000000004 b g_hidVibrationMutex
0000000000aa0a78 0000000000000020 b g_hidSharedmem
0000000000aa0a98 0000000000000010 b g_hidIActiveVibrationDeviceList
0000000000aa0aa8 0000000000000010 b g_hidIAppletResource
0000000000aa0ab8 0000000000000010 b g_hidSrv
0000000000aa0ac8 0000000000000008 b g_nvGuard
0000000000aa0ad0 0000000000000028 b g_nvTransfermem
0000000000aa0af8 0000000000000010 b g_nvSrvClone
0000000000aa0b08 0000000000000010 b g_nvSrv
0000000000aa0b18 0000000000000008 b g_psmGuard
0000000000aa0b20 0000000000000010 b g_psmSrv
0000000000aa0b30 0000000000000008 b g_smGuard
0000000000aa0b38 0000000000000008 b g_smOverridesNum
0000000000aa0b40 0000000000000180 b g_smOverrides
0000000000aa0cc0 0000000000000010 b g_smSrv
0000000000aa0cd0 0000000000000008 b g_nvFenceGuard
0000000000aa0cd8 0000000000000300 b g_NvEvents
0000000000aa0fd8 0000000000000008 b g_NvEventUsedMask
0000000000aa0fe0 0000000000000008 b g_nvGpuGuard
0000000000aa0fe8 0000000000000004 b g_tpc_masks
0000000000aa0ff0 0000000000000028 b g_zcull_info
0000000000aa1018 0000000000000004 b g_zcull_ctx_size
0000000000aa1020 00000000000000a0 b g_gpu_characteristics
0000000000aa10c0 0000000000000008 b g_nvMapGuard
0000000000aa10c8 0000000000000080 b g_defaultWin
0000000000aa1148 0000000000000010 b g_viLayer
0000000000aa1158 0000000000000050 b g_viDisplay
0000000000aa11a8 0000000000000001 b g_libappletJumpFlag
0000000000aa11b0 0000000000000008 b g_userIdStorage
0000000000aa11c0 0000000000000010 b g_randomSeed
0000000000aa11d0 0000000000000001 b g_hasRandomSeed
0000000000aa11d4 0000000000000004 b g_lastLoadResult
0000000000aa11d8 0000000000000008 b g_nextLoadArgv
0000000000aa11e0 0000000000000008 b g_nextLoadPath
0000000000aa11e8 0000000000000004 b g_processHandle
0000000000aa11f0 0000000000000018 b g_syscallHints
0000000000aa1208 0000000000000008 b g_overrideArgv
0000000000aa1210 0000000000000008 b g_overrideHeapSize
0000000000aa1218 0000000000000008 b g_overrideHeapAddr
0000000000aa1220 0000000000000008 b g_loaderRetAddr
0000000000aa1228 0000000000000004 b g_mainThreadHandle
0000000000aa1230 0000000000000008 b g_loaderInfoSize
0000000000aa1238 0000000000000008 b g_loaderInfo
0000000000aa1240 0000000000000001 b g_isNso
0000000000aa1244 0000000000000004 b g_hosVersion
0000000000aa1248 0000000000000008 V __romfs_path
0000000000aa1250 0000000000003b00 b romfs_mounts
0000000000aa4d50 0000000000000001 b romfs_initialised
0000000000aa4d58 B __stack_top
0000000000aa4d60 0000000000000001 b g_IsLegacyKernel
0000000000aa4d68 0000000000000008 b g_Reservations
0000000000aa4d70 0000000000000010 b g_StackRegion
0000000000aa4d80 0000000000000010 b g_AslrRegion
0000000000aa4d90 0000000000000010 b g_HeapRegion
0000000000aa4da0 0000000000000010 b g_AliasRegion
0000000000aa4db0 0000000000000004 b g_VirtmemMutex
0000000000aa4db8 0000000000000008 b g_apmGuard
0000000000aa4dc0 0000000000000010 b g_apmISession
0000000000aa4dd0 0000000000000010 b g_apmSrv
0000000000aa4de0 0000000000000054 b g_bsdSessionMgr
0000000000aa4e38 0000000000000008 b g_fsGuard
0000000000aa4e40 0000000000000054 b g_fsSessionMgr
0000000000aa4e98 0000000000000010 b g_fsSrv
0000000000aa4ea8 0000000000000008 b g_viGuard
0000000000aa4eb0 0000000000000010 b g_viIHOSBinderDriverIndirect
0000000000aa4ec0 0000000000000010 b g_viIManagerDisplayService
0000000000aa4ed0 0000000000000010 b g_viISystemDisplayService
0000000000aa4ee0 0000000000000010 b g_viIHOSBinderDriverRelay
0000000000aa4ef0 0000000000000010 b g_viIApplicationDisplayService
0000000000aa4f00 0000000000000010 b g_viRootService
0000000000aa4f10 0000000000000008 V __nx_vi_layer_id
0000000000aa4f18 0000000000000008 b g_argv_empty
0000000000aa4f20 0000000000000008 B __system_argv
0000000000aa4f28 0000000000000004 B __system_argc
0000000000aa4f30 0000000000000340 B __nx_exceptiondump
0000000000aa5270 0000000000000004 V __nx_exception_ignoredebug
0000000000aa5280 0000000000000400 V __nx_exception_stack
0000000000aa5680 0000000000000008 V __nx_heap_size
0000000000aa5688 0000000000000008 b __bootticks
0000000000aa5690 0000000000000008 b __boottime
0000000000aa5698 0000000000000004 V __nx_time_type
0000000000aa56a0 0000000000000004 B __nxlink_host
0000000000aa56a8 0000000000002800 b fsdev_fsdevices
0000000000aa7ea8 0000000000000004 b fsdev_fsdevice_cwd
0000000000aa7eac 0000000000000001 b fsdev_initialised
0000000000aa7eb0 0000000000000004 b g_randMutex
0000000000aa7eb4 0000000000000001 b g_randInit
0000000000aa7ec0 0000000000000040 b g_chacha
0000000000aa7f00 00000000000000d8 b g_tlsDestructors
0000000000aa7fd8 0000000000000008 b g_tlsUsageMask
0000000000aa7fe0 0000000000000038 b g_mainThread
0000000000aa8018 0000000000000008 b g_threadList
0000000000aa8020 0000000000000004 b g_threadMutex
0000000000aa8028 0000000000000008 b g_setsysGuard
0000000000aa8030 0000000000000010 b g_setsysSrv
0000000000aa8040 0000000000000008 b g_timeGuard
0000000000aa8048 0000000000000020 b g_timeSharedmem
0000000000aa8068 0000000000000010 b g_timeLocalSystemClock
0000000000aa8078 0000000000000010 b g_timeTimeZoneService
0000000000aa8088 0000000000000010 b g_timeSteadyClock
0000000000aa8098 0000000000000010 b g_timeNetworkSystemClock
0000000000aa80a8 0000000000000010 b g_timeUserSystemClock
0000000000aa80b8 0000000000000010 b g_timeSrv
0000000000aa80c8 0000000000000004 V __nx_time_service_type
0000000000aa80d0 0000000000000008 b GetCoeffs
0000000000aa80d8 0000000000000008 B WebPApplyAlphaMultiply
0000000000aa80e0 0000000000000008 B WebPApplyAlphaMultiply4444
0000000000aa80e8 0000000000000008 B WebPDispatchAlpha
0000000000aa80f0 0000000000000008 B WebPDispatchAlphaToGreen
0000000000aa80f8 0000000000000008 B WebPExtractAlpha
0000000000aa8100 0000000000000008 B WebPExtractGreen
0000000000aa8108 0000000000000008 B WebPHasAlpha32b
0000000000aa8110 0000000000000008 B WebPHasAlpha8b
0000000000aa8118 0000000000000010 b WebPInitAlphaProcessing_body_lock.1
0000000000aa8128 0000000000000008 B WebPMultARGBRow
0000000000aa8130 0000000000000008 B WebPMultRow
0000000000aa8138 0000000000000008 B WebPPackRGB
0000000000aa8140 0000000000000008 B VP8DitherCombine8x8
0000000000aa8148 0000000000000010 b VP8DspInit_body_lock.1
0000000000aa8158 0000000000000008 B VP8HFilter16
0000000000aa8160 0000000000000008 B VP8HFilter16i
0000000000aa8168 0000000000000008 B VP8HFilter8
0000000000aa8170 0000000000000008 B VP8HFilter8i
0000000000aa8178 0000000000000038 B VP8PredChroma8
0000000000aa81b0 0000000000000038 B VP8PredLuma16
0000000000aa81e8 0000000000000050 B VP8PredLuma4
0000000000aa8238 0000000000000008 B VP8SimpleHFilter16
0000000000aa8240 0000000000000008 B VP8SimpleHFilter16i
0000000000aa8248 0000000000000008 B VP8SimpleVFilter16
0000000000aa8250 0000000000000008 B VP8SimpleVFilter16i
0000000000aa8258 0000000000000008 B VP8Transform
0000000000aa8260 0000000000000008 B VP8TransformAC3
0000000000aa8268 0000000000000008 B VP8TransformDC
0000000000aa8270 0000000000000008 B VP8TransformDCUV
0000000000aa8278 0000000000000008 B VP8TransformUV
0000000000aa8280 0000000000000008 B VP8TransformWHT
0000000000aa8288 0000000000000008 B VP8VFilter16
0000000000aa8290 0000000000000008 B VP8VFilter16i
0000000000aa8298 0000000000000008 B VP8VFilter8
0000000000aa82a0 0000000000000008 B VP8VFilter8i
0000000000aa82a8 0000000000000010 b VP8FiltersInit_body_lock.1
0000000000aa82b8 0000000000000020 B WebPFilters
0000000000aa82d8 0000000000000020 B WebPUnfilters
0000000000aa82f8 0000000000000008 B VP8LAddGreenToBlueAndRed
0000000000aa8300 0000000000000008 B VP8LConvertBGRAToBGR
0000000000aa8308 0000000000000008 B VP8LConvertBGRAToRGB
0000000000aa8310 0000000000000008 B VP8LConvertBGRAToRGB565
0000000000aa8318 0000000000000008 B VP8LConvertBGRAToRGBA
0000000000aa8320 0000000000000008 B VP8LConvertBGRAToRGBA4444
0000000000aa8328 0000000000000010 b VP8LDspInit_body_lock.1
0000000000aa8338 0000000000000008 B VP8LMapColor32b
0000000000aa8340 0000000000000008 B VP8LMapColor8b
0000000000aa8348 0000000000000080 B VP8LPredictors
0000000000aa83c8 0000000000000080 B VP8LPredictorsAdd
0000000000aa8448 0000000000000080 B VP8LPredictorsAdd_C
0000000000aa84c8 0000000000000080 B VP8LPredictors_C
0000000000aa8548 0000000000000008 B VP8LTransformColorInverse
0000000000aa8550 0000000000000010 b WebPRescalerDspInit_body_lock.1
0000000000aa8560 0000000000000008 B WebPRescalerExportRowExpand
0000000000aa8568 0000000000000008 B WebPRescalerExportRowShrink
0000000000aa8570 0000000000000008 B WebPRescalerImportRowExpand
0000000000aa8578 0000000000000008 B WebPRescalerImportRowShrink
0000000000aa8580 0000000000000010 b WebPInitUpsamplers_body_lock.1
0000000000aa8590 0000000000000010 b WebPInitYUV444Converters_body_lock.3
0000000000aa85a0 0000000000000068 B WebPUpsamplers
0000000000aa8608 0000000000000068 B WebPYUV444Converters
0000000000aa8670 0000000000000008 B WebPConvertARGBToUV
0000000000aa8678 0000000000000008 B WebPConvertARGBToY
0000000000aa8680 0000000000000008 B WebPConvertBGR24ToY
0000000000aa8688 0000000000000008 B WebPConvertRGB24ToY
0000000000aa8690 0000000000000008 B WebPConvertRGBA32ToUV
0000000000aa8698 0000000000000010 b WebPInitConvertARGBToYUV_body_lock.1
0000000000aa86a8 0000000000000010 b WebPInitSamplers_body_lock.3
0000000000aa86b8 0000000000000068 B WebPSamplers
0000000000aa8720 0000000000000008 B WebPSharpYUVFilterRow
0000000000aa8728 0000000000000008 B WebPSharpYUVUpdateRGB
0000000000aa8730 0000000000000008 B WebPSharpYUVUpdateY
0000000000aa8738 0000000000000008 b langs
0000000000aa8740 0000000000000004 B _hb_options
0000000000aa8748 0000000000000008 b static_ot_funcs
0000000000aa8750 0000000000000001 b hb_ot_font_cmap_cache_user_data_key
0000000000aa8758 0000000000000008 b static_outline_recording_pen_funcs
0000000000aa8760 0000000000000008 b static_shapers
0000000000aa8770 0000000000000280 B _hb_CrapPool
0000000000aa89f0 0000000000000008 b static_ft_funcs
0000000000aa89f8 0000000000000008 b static_paint_extents_funcs
0000000000aa8a00 0000000000000008 b static_draw_extents_funcs
0000000000aa8a08 0000000000000004 b hb_ot_tags_from_language(char const*, char const*, unsigned int*, unsigned int*)::last_tag_idx
0000000000aa8a10 0000000000000008 b static_ucd_funcs
0000000000aa8a18 0000000000000004 b once_regsizes.0
0000000000aa8a20 0000000000000062 b dwarf_reg_size_table
0000000000aa8a88 0000000000000010 b object_mutex
0000000000aa8a98 0000000000000008 b seen_objects
0000000000aa8aa0 0000000000000008 b unseen_objects
0000000000aa8ab0 00000000000000e0 b saved_categories.0
0000000000aa8b90 00000000000000e0 b new_categories.1
0000000000aa8c70 000000000000000c b __sfp_recursive_mutex
0000000000aa8c80 0000000000000228 B __sf
0000000000aa8ea8 0000000000000008 B __stdio_exit_handler
0000000000aa8eb0 0000000000000004 b __tz_mutex
0000000000aa8eb8 0000000000000028 B __malloc_current_mallinfo
0000000000aa8ee0 0000000000000008 B __malloc_max_total_mem
0000000000aa8ee8 0000000000000008 B __malloc_max_sbrked_mem
0000000000aa8ef0 0000000000000008 B __malloc_top_pad
0000000000aa8ef8 0000000000000008 b prev_tzenv
0000000000aa8f00 000000000000000c b __tzname_dst
0000000000aa8f10 000000000000000c b __tzname_std
0000000000aa8f20 000000000000000c b __malloc_recursive_mutex
0000000000aa8f2c 0000000000000004 b alloced.0
0000000000aa8f30 0000000000000008 B _timezone
0000000000aa8f38 0000000000000004 B _daylight
0000000000aa8f40 000000000000000c b __env_recursive_mutex
0000000000aa8f50 0000000000000008 b initial_env
0000000000aa8f58 0000000000000318 B __atexit0
0000000000aa9270 0000000000000008 B __atexit
0000000000aa9278 000000000000000c B __atexit_recursive_mutex
0000000000aa9290 0000000000000400 b temp_cwd
0000000000aa9690 0000000000000004 b __hndl_lock
0000000000aa9698 0000000000000008 B fake_heap_start
0000000000aa96a0 0000000000000008 B fake_heap_end
0000000000aa96a8 0000000000000004 b __pthread_once_cv
0000000000aa96ac 0000000000000004 b __pthread_once_lock
0000000000aa96b0 0000000000000008 b heap_start.0
0000000000aa96b8 0000000000000020 B music_spec
0000000000aa96d8 0000000000000400 B master_drumset
0000000000aa9ad8 0000000000000400 B master_tonebank
0000000000aa9ed8 b __tls_start
0000000000aaa308 b __bss_end__
0000000000aaa308 b __end__
0000000000aaa308 b __tls_end
0000000000aab000 b __argdata__
